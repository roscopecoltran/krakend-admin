syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package computeengine;

message GetProjectRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetProjectAggregatedAcceleratorTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedAddressesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedAutoscalersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedBackendServicesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Name of the project scoping this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedCommitmentsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedDiskTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedDisksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedForwardingRulesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedInstanceGroupManagersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedInstanceGroupsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedInstancesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedInterconnectAttachmentsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedMachineTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedRoutersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedSubnetworksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedTargetInstancesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedTargetPoolsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedTargetVpnGatewaysRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectAggregatedVpnTunnelsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectDisableXpnHostRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    string userIp = 9;
}

message PostProjectDisableXpnResourceRequest {
    alt alt = 1;
    ProjectsDisableXpnResourceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectEnableXpnHostRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    string userIp = 9;
}

message PostProjectEnableXpnResourceRequest {
    alt alt = 1;
    ProjectsEnableXpnResourceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGetXpnHostRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetProjectGetXpnResourcesRequest {
    alt alt = 1;
    string fields = 2;
    string filter = 3;
    string key = 4;
    int32 maxResults = 5;
    string oauth_token = 6;
    string order_by = 7;
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectGlobalAddressesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalAddressesRequest {
    alt alt = 1;
    Address body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalAddressesAddressRequest {
    // Name of the address resource to return.
    string address = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalAddressesAddressRequest {
    // Name of the address resource to delete.
    string address = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalAddressesResourceSetLabelsRequest {
    alt alt = 1;
    GlobalSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalAddressesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalBackendBucketsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalBackendBucketsRequest {
    alt alt = 1;
    BackendBucket body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalBackendBucketsBackendBucketRequest {
    alt alt = 1;
    // Name of the BackendBucket resource to return.
    string backendBucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalBackendBucketsBackendBucketRequest {
    alt alt = 1;
    // Name of the BackendBucket resource to update.
    string backendBucket = 2;
    BackendBucket body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalBackendBucketsBackendBucketRequest {
    alt alt = 1;
    // Name of the BackendBucket resource to delete.
    string backendBucket = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalBackendServicesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalBackendServicesRequest {
    alt alt = 1;
    BackendService body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to return.
    string backendService = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to update.
    string backendService = 2;
    BackendService body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to delete.
    string backendService = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalBackendServicesBackendServiceGetHealthRequest {
    alt alt = 1;
    // Name of the BackendService resource to which the queried instance belongs.
    string backendService = 2;
    ResourceGroupReference body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string project = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message PostProjectGlobalBackendServicesBackendServiceSetSecurityPolicyRequest {
    alt alt = 1;
    // Name of the BackendService resource to which the security policy should be set. The name should conform to RFC1035.
    string backendService = 2;
    SecurityPolicyReference body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectGlobalBackendServicesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalFirewallsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalFirewallsRequest {
    alt alt = 1;
    Firewall body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalFirewallsFirewallRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the firewall rule to return.
    string firewall = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalFirewallsFirewallRequest {
    alt alt = 1;
    Firewall body = 2;
    string fields = 3;
    // Name of the firewall rule to update.
    string firewall = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalFirewallsFirewallRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the firewall rule to delete.
    string firewall = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalFirewallsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalForwardingRulesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalForwardingRulesRequest {
    alt alt = 1;
    ForwardingRule body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalForwardingRulesForwardingRuleRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the ForwardingRule resource to return.
    string forwardingRule = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalForwardingRulesForwardingRuleRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the ForwardingRule resource to delete.
    string forwardingRule = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalForwardingRulesForwardingRuleSetTargetRequest {
    alt alt = 1;
    TargetReference body = 2;
    string fields = 3;
    // Name of the ForwardingRule resource in which target is to be set.
    string forwardingRule = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectGlobalForwardingRulesResourceSetLabelsRequest {
    alt alt = 1;
    GlobalSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalForwardingRulesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalHealthChecksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalHealthChecksRequest {
    alt alt = 1;
    HealthCheck body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalHealthChecksHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HealthCheck resource to return.
    string healthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalHealthChecksHealthCheckRequest {
    alt alt = 1;
    HealthCheck body = 2;
    string fields = 3;
    // Name of the HealthCheck resource to update.
    string healthCheck = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalHealthChecksHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HealthCheck resource to delete.
    string healthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalHealthChecksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalHttpHealthChecksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalHttpHealthChecksRequest {
    alt alt = 1;
    HttpHealthCheck body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalHttpHealthChecksHttpHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HttpHealthCheck resource to return.
    string httpHealthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalHttpHealthChecksHttpHealthCheckRequest {
    alt alt = 1;
    HttpHealthCheck body = 2;
    string fields = 3;
    // Name of the HttpHealthCheck resource to update.
    string httpHealthCheck = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalHttpHealthChecksHttpHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HttpHealthCheck resource to delete.
    string httpHealthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalHttpHealthChecksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalHttpsHealthChecksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalHttpsHealthChecksRequest {
    alt alt = 1;
    HttpsHealthCheck body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HttpsHealthCheck resource to return.
    string httpsHealthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message PutProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest {
    alt alt = 1;
    HttpsHealthCheck body = 2;
    string fields = 3;
    // Name of the HttpsHealthCheck resource to update.
    string httpsHealthCheck = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message DeleteProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the HttpsHealthCheck resource to delete.
    string httpsHealthCheck = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalHttpsHealthChecksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalImagesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalImagesRequest {
    alt alt = 1;
    Image body = 2;
    string fields = 3;
    // Force image creation if true.
    bool forceCreate = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectGlobalImagesFamilyFamilyRequest {
    alt alt = 1;
    // Name of the image family to search for.
    string family = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalImagesImageRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the image resource to return.
    string image = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalImagesImageRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the image resource to delete.
    string image = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalImagesImageDeprecateRequest {
    alt alt = 1;
    DeprecationStatus body = 2;
    string fields = 3;
    // Image name.
    string image = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectGlobalImagesResourceSetLabelsRequest {
    alt alt = 1;
    GlobalSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalImagesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalInstanceTemplatesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalInstanceTemplatesRequest {
    alt alt = 1;
    InstanceTemplate body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalInstanceTemplatesInstanceTemplateRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the instance template.
    string instanceTemplate = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalInstanceTemplatesInstanceTemplateRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the instance template to delete.
    string instanceTemplate = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalInstanceTemplatesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalInterconnectLocationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectGlobalInterconnectLocationsInterconnectLocationRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the interconnect location to return.
    string interconnectLocation = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalInterconnectsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalInterconnectsRequest {
    alt alt = 1;
    Interconnect body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalInterconnectsInterconnectRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the interconnect to return.
    string interconnect = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalInterconnectsInterconnectRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the interconnect to delete.
    string interconnect = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalInterconnectsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalLicensesLicenseRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Name of the License resource to return.
    string license = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalNetworksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalNetworksRequest {
    alt alt = 1;
    Network body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalNetworksNetworkRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Name of the network to return.
    string network = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalNetworksNetworkRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Name of the network to delete.
    string network = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalNetworksNetworkAddPeeringRequest {
    alt alt = 1;
    NetworksAddPeeringRequest body = 2;
    string fields = 3;
    string key = 4;
    // Name of the network resource to add peering to.
    string network = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectGlobalNetworksNetworkRemovePeeringRequest {
    alt alt = 1;
    NetworksRemovePeeringRequest body = 2;
    string fields = 3;
    string key = 4;
    // Name of the network resource to remove peering from.
    string network = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectGlobalNetworksNetworkSwitchToCustomModeRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Name of the network to be updated.
    string network = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalNetworksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectGlobalOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message DeleteProjectGlobalOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to delete.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetProjectGlobalRoutesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalRoutesRequest {
    alt alt = 1;
    Route body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalRoutesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalRoutesRouteRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the Route resource to return.
    string route = 8;
    string userIp = 9;
}

message DeleteProjectGlobalRoutesRouteRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the Route resource to delete.
    string route = 9;
    string userIp = 10;
}

message GetProjectGlobalSecurityPoliciesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalSecurityPoliciesRequest {
    alt alt = 1;
    SecurityPolicy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalSecurityPoliciesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalSecurityPoliciesSecurityPolicyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the security policy to get.
    string securityPolicy = 8;
    string userIp = 9;
}

message DeleteProjectGlobalSecurityPoliciesSecurityPolicyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the security policy to delete.
    string securityPolicy = 9;
    string userIp = 10;
}

message GetProjectGlobalSnapshotsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalSnapshotsResourceSetLabelsRequest {
    alt alt = 1;
    GlobalSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectGlobalSnapshotsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalSnapshotsSnapshotRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the Snapshot resource to return.
    string snapshot = 8;
    string userIp = 9;
}

message DeleteProjectGlobalSnapshotsSnapshotRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the Snapshot resource to delete.
    string snapshot = 9;
    string userIp = 10;
}

message GetProjectGlobalSslCertificatesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalSslCertificatesRequest {
    alt alt = 1;
    SslCertificate body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalSslCertificatesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalSslCertificatesSslCertificateRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the SslCertificate resource to return.
    string sslCertificate = 8;
    string userIp = 9;
}

message DeleteProjectGlobalSslCertificatesSslCertificateRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the SslCertificate resource to delete.
    string sslCertificate = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetHttpProxiesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalTargetHttpProxiesRequest {
    alt alt = 1;
    TargetHttpProxy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalTargetHttpProxiesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetHttpProxiesTargetHttpProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the TargetHttpProxy resource to return.
    string targetHttpProxy = 8;
    string userIp = 9;
}

message DeleteProjectGlobalTargetHttpProxiesTargetHttpProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the TargetHttpProxy resource to delete.
    string targetHttpProxy = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetHttpsProxiesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalTargetHttpsProxiesRequest {
    alt alt = 1;
    TargetHttpsProxy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalTargetHttpsProxiesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetHttpsProxiesTargetHttpsProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the TargetHttpsProxy resource to return.
    string targetHttpsProxy = 8;
    string userIp = 9;
}

message DeleteProjectGlobalTargetHttpsProxiesTargetHttpsProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the TargetHttpsProxy resource to delete.
    string targetHttpsProxy = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetSslProxiesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalTargetSslProxiesRequest {
    alt alt = 1;
    TargetSslProxy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalTargetSslProxiesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetSslProxiesTargetSslProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the TargetSslProxy resource to return.
    string targetSslProxy = 8;
    string userIp = 9;
}

message DeleteProjectGlobalTargetSslProxiesTargetSslProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the TargetSslProxy resource to delete.
    string targetSslProxy = 9;
    string userIp = 10;
}

message PostProjectGlobalTargetSslProxiesTargetSslProxySetBackendServiceRequest {
    alt alt = 1;
    TargetSslProxiesSetBackendServiceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetSslProxy resource whose BackendService resource is to be set.
    string targetSslProxy = 10;
    string userIp = 11;
}

message PostProjectGlobalTargetSslProxiesTargetSslProxySetProxyHeaderRequest {
    alt alt = 1;
    TargetSslProxiesSetProxyHeaderRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetSslProxy resource whose ProxyHeader is to be set.
    string targetSslProxy = 10;
    string userIp = 11;
}

message PostProjectGlobalTargetSslProxiesTargetSslProxySetSslCertificatesRequest {
    alt alt = 1;
    TargetSslProxiesSetSslCertificatesRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
    string targetSslProxy = 10;
    string userIp = 11;
}

message GetProjectGlobalTargetTcpProxiesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalTargetTcpProxiesRequest {
    alt alt = 1;
    TargetTcpProxy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectGlobalTargetTcpProxiesTargetTcpProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the TargetTcpProxy resource to return.
    string targetTcpProxy = 8;
    string userIp = 9;
}

message DeleteProjectGlobalTargetTcpProxiesTargetTcpProxyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the TargetTcpProxy resource to delete.
    string targetTcpProxy = 9;
    string userIp = 10;
}

message PostProjectGlobalTargetTcpProxiesTargetTcpProxySetBackendServiceRequest {
    alt alt = 1;
    TargetTcpProxiesSetBackendServiceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetTcpProxy resource whose BackendService resource is to be set.
    string targetTcpProxy = 10;
    string userIp = 11;
}

message PostProjectGlobalTargetTcpProxiesTargetTcpProxySetProxyHeaderRequest {
    alt alt = 1;
    TargetTcpProxiesSetProxyHeaderRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
    string targetTcpProxy = 10;
    string userIp = 11;
}

message GetProjectGlobalUrlMapsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message PostProjectGlobalUrlMapsRequest {
    alt alt = 1;
    UrlMap body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectGlobalUrlMapsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message GetProjectGlobalUrlMapsUrlMapRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the UrlMap resource to return.
    string urlMap = 8;
    string userIp = 9;
}

message PutProjectGlobalUrlMapsUrlMapRequest {
    alt alt = 1;
    UrlMap body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the UrlMap resource to update.
    string urlMap = 10;
    string userIp = 11;
}

message DeleteProjectGlobalUrlMapsUrlMapRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the UrlMap resource to delete.
    string urlMap = 9;
    string userIp = 10;
}

message PostProjectGlobalUrlMapsUrlMapInvalidateCacheRequest {
    alt alt = 1;
    CacheInvalidationRule body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the UrlMap scoping this request.
    string urlMap = 10;
    string userIp = 11;
}

message PostProjectGlobalUrlMapsUrlMapValidateRequest {
    alt alt = 1;
    UrlMapsValidateRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the UrlMap resource to be validated as.
    string urlMap = 9;
    string userIp = 10;
}

message PostProjectListXpnHostsRequest {
    alt alt = 1;
    ProjectsListXpnHostsRequest body = 2;
    string fields = 3;
    string filter = 4;
    string key = 5;
    int32 maxResults = 6;
    string oauth_token = 7;
    string order_by = 8;
    string pageToken = 9;
    boolean prettyPrint = 10;
    // Project ID for this request.
    string project = 11;
    string quotaUser = 12;
    string userIp = 13;
}

message PostProjectMoveDiskRequest {
    alt alt = 1;
    DiskMoveRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectMoveInstanceRequest {
    alt alt = 1;
    InstanceMoveRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message GetProjectRegionsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectRegionsRegionRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region resource to return.
    string region = 8;
    string userIp = 9;
}

message GetProjectRegionsRegionAddressesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionAddressesRequest {
    alt alt = 1;
    Address body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionAddressesAddressRequest {
    // Name of the address resource to return.
    string address = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionAddressesAddressRequest {
    // Name of the address resource to delete.
    string address = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionAddressesResourceSetLabelsRequest {
    alt alt = 1;
    RegionSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the resource for this request.
    string resource = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionAddressesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionAutoscalersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PutProjectRegionsRegionAutoscalersRequest {
    alt alt = 1;
    // Name of the autoscaler to update.
    string autoscaler = 2;
    Autoscaler body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionAutoscalersRequest {
    alt alt = 1;
    Autoscaler body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionAutoscalersAutoscalerRequest {
    alt alt = 1;
    // Name of the autoscaler to return.
    string autoscaler = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionAutoscalersAutoscalerRequest {
    alt alt = 1;
    // Name of the autoscaler to delete.
    string autoscaler = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionAutoscalersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionBackendServicesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionBackendServicesRequest {
    alt alt = 1;
    BackendService body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to return.
    string backendService = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    string userIp = 10;
}

message PutProjectRegionsRegionBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to update.
    string backendService = 2;
    BackendService body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message DeleteProjectRegionsRegionBackendServicesBackendServiceRequest {
    alt alt = 1;
    // Name of the BackendService resource to delete.
    string backendService = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionBackendServicesBackendServiceGetHealthRequest {
    alt alt = 1;
    // Name of the BackendService resource to which the queried instance belongs.
    string backendService = 2;
    ResourceGroupReference body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionBackendServicesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionCommitmentsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionCommitmentsRequest {
    alt alt = 1;
    Commitment body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionCommitmentsCommitmentRequest {
    alt alt = 1;
    // Name of the commitment to return.
    string commitment = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    string userIp = 10;
}

message GetProjectRegionsRegionForwardingRulesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionForwardingRulesRequest {
    alt alt = 1;
    ForwardingRule body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionForwardingRulesForwardingRuleRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the ForwardingRule resource to return.
    string forwardingRule = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionForwardingRulesForwardingRuleRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the ForwardingRule resource to delete.
    string forwardingRule = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionForwardingRulesForwardingRuleSetTargetRequest {
    alt alt = 1;
    TargetReference body = 2;
    string fields = 3;
    // Name of the ForwardingRule resource in which target is to be set.
    string forwardingRule = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionForwardingRulesResourceSetLabelsRequest {
    alt alt = 1;
    RegionSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the resource for this request.
    string resource = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionForwardingRulesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionInstanceGroupManagersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionInstanceGroupManagersRequest {
    alt alt = 1;
    InstanceGroupManager body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the managed instance group to return.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    string userIp = 10;
}

message PutProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    InstanceGroupManager body = 2;
    string fields = 3;
    // The name of the instance group manager.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message DeleteProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the managed instance group to delete.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerAbandonInstancesRequest {
    alt alt = 1;
    RegionInstanceGroupManagersAbandonInstancesRequest body = 2;
    string fields = 3;
    // Name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerDeleteInstancesRequest {
    alt alt = 1;
    RegionInstanceGroupManagersDeleteInstancesRequest body = 2;
    string fields = 3;
    // Name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerListManagedInstancesRequest {
    alt alt = 1;
    string fields = 2;
    string filter = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    int32 maxResults = 6;
    string oauth_token = 7;
    string order_by = 8;
    string pageToken = 9;
    boolean prettyPrint = 10;
    // Project ID for this request.
    string project = 11;
    string quotaUser = 12;
    // Name of the region scoping this request.
    string region = 13;
    string userIp = 14;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRecreateInstancesRequest {
    alt alt = 1;
    RegionInstanceGroupManagersRecreateRequest body = 2;
    string fields = 3;
    // Name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerResizeRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the managed instance group.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Number of instances that should exist in this instance group manager.
    int32 size = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetAutoHealingPoliciesRequest {
    alt alt = 1;
    RegionInstanceGroupManagersSetAutoHealingRequest body = 2;
    string fields = 3;
    // Name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetInstanceTemplateRequest {
    alt alt = 1;
    RegionInstanceGroupManagersSetTemplateRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetTargetPoolsRequest {
    alt alt = 1;
    RegionInstanceGroupManagersSetTargetPoolsRequest body = 2;
    string fields = 3;
    // Name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupManagersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionInstanceGroupsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message GetProjectRegionsRegionInstanceGroupsInstanceGroupRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance group resource to return.
    string instanceGroup = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    string userIp = 10;
}

message PostProjectRegionsRegionInstanceGroupsInstanceGroupListInstancesRequest {
    alt alt = 1;
    RegionInstanceGroupsListInstancesRequest body = 2;
    string fields = 3;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 4;
    // Name of the regional instance group for which we want to list the instances.
    string instanceGroup = 5;
    string key = 6;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 7;
    string oauth_token = 8;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 9;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 10;
    boolean prettyPrint = 11;
    // Project ID for this request.
    string project = 12;
    string quotaUser = 13;
    // Name of the region scoping this request.
    string region = 14;
    string userIp = 15;
}

message PostProjectRegionsRegionInstanceGroupsInstanceGroupSetNamedPortsRequest {
    alt alt = 1;
    RegionInstanceGroupsSetNamedPortsRequest body = 2;
    string fields = 3;
    // The name of the regional instance group where the named ports are updated.
    string instanceGroup = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionInstanceGroupsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionInterconnectAttachmentsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionInterconnectAttachmentsRequest {
    alt alt = 1;
    InterconnectAttachment body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionInterconnectAttachmentsInterconnectAttachmentRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the interconnect attachment to return.
    string interconnectAttachment = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionInterconnectAttachmentsInterconnectAttachmentRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the interconnect attachment to delete.
    string interconnectAttachment = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionInterconnectAttachmentsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message GetProjectRegionsRegionOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to delete.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    string userIp = 10;
}

message GetProjectRegionsRegionRoutersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionRoutersRequest {
    alt alt = 1;
    Router body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionRoutersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionRoutersRouterRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // Name of the Router resource to return.
    string router = 9;
    string userIp = 10;
}

message PutProjectRegionsRegionRoutersRouterRequest {
    alt alt = 1;
    Router body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the Router resource to update.
    string router = 11;
    string userIp = 12;
}

message DeleteProjectRegionsRegionRoutersRouterRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the Router resource to delete.
    string router = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionRoutersRouterGetRouterStatusRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // Name of the Router resource to query.
    string router = 9;
    string userIp = 10;
}

message PostProjectRegionsRegionRoutersRouterPreviewRequest {
    alt alt = 1;
    Router body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // Name of the Router resource to query.
    string router = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionSubnetworksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionSubnetworksRequest {
    alt alt = 1;
    Subnetwork body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionSubnetworksResourceGetIamPolicyRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // The name of the region for this request.
    string region = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
}

message PostProjectRegionsRegionSubnetworksResourceSetIamPolicyRequest {
    alt alt = 1;
    Policy body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionSubnetworksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionSubnetworksSubnetworkRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region scoping this request.
    string region = 8;
    // Name of the Subnetwork resource to return.
    string subnetwork = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionSubnetworksSubnetworkRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region scoping this request.
    string region = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the Subnetwork resource to delete.
    string subnetwork = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionSubnetworksSubnetworkExpandIpCidrRangeRequest {
    alt alt = 1;
    SubnetworksExpandIpCidrRangeRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the Subnetwork resource to update.
    string subnetwork = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionSubnetworksSubnetworkSetPrivateIpGoogleAccessRequest {
    alt alt = 1;
    SubnetworksSetPrivateIpGoogleAccessRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the Subnetwork resource.
    string subnetwork = 11;
    string userIp = 12;
}

message GetProjectRegionsRegionTargetPoolsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region scoping this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionTargetPoolsRequest {
    alt alt = 1;
    TargetPool body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionTargetPoolsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionTargetPoolsTargetPoolRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region scoping this request.
    string region = 8;
    // Name of the TargetPool resource to return.
    string targetPool = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionTargetPoolsTargetPoolRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region scoping this request.
    string region = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetPool resource to delete.
    string targetPool = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolAddHealthCheckRequest {
    alt alt = 1;
    TargetPoolsAddHealthCheckRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the target pool to add a health check to.
    string targetPool = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolAddInstanceRequest {
    alt alt = 1;
    TargetPoolsAddInstanceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the TargetPool resource to add instances to.
    string targetPool = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolGetHealthRequest {
    alt alt = 1;
    InstanceReference body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // Name of the TargetPool resource to which the queried instance belongs.
    string targetPool = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolRemoveHealthCheckRequest {
    alt alt = 1;
    TargetPoolsRemoveHealthCheckRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the target pool to remove health checks from.
    string targetPool = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolRemoveInstanceRequest {
    alt alt = 1;
    TargetPoolsRemoveInstanceRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region scoping this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    // Name of the TargetPool resource to remove instances from.
    string targetPool = 11;
    string userIp = 12;
}

message PostProjectRegionsRegionTargetPoolsTargetPoolSetBackupRequest {
    alt alt = 1;
    TargetReference body = 2;
    // New failoverRatio value for the target pool.
    int32 failoverRatio = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Name of the region scoping this request.
    string region = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    // Name of the TargetPool resource to set a backup pool for.
    string targetPool = 12;
    string userIp = 13;
}

message GetProjectRegionsRegionTargetVpnGatewaysRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionTargetVpnGatewaysRequest {
    alt alt = 1;
    TargetVpnGateway body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionTargetVpnGatewaysResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionTargetVpnGatewaysTargetVpnGatewayRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // Name of the target VPN gateway to return.
    string targetVpnGateway = 9;
    string userIp = 10;
}

message DeleteProjectRegionsRegionTargetVpnGatewaysTargetVpnGatewayRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the target VPN gateway to delete.
    string targetVpnGateway = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionVpnTunnelsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    // Name of the region for this request.
    string region = 12;
    string userIp = 13;
}

message PostProjectRegionsRegionVpnTunnelsRequest {
    alt alt = 1;
    VpnTunnel body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the region for this request.
    string region = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
}

message PostProjectRegionsRegionVpnTunnelsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // The name of the region for this request.
    string region = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
}

message GetProjectRegionsRegionVpnTunnelsVpnTunnelRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    string userIp = 9;
    // Name of the VpnTunnel resource to return.
    string vpnTunnel = 10;
}

message DeleteProjectRegionsRegionVpnTunnelsVpnTunnelRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the region for this request.
    string region = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // Name of the VpnTunnel resource to delete.
    string vpnTunnel = 11;
}

message PostProjectSetCommonInstanceMetadataRequest {
    alt alt = 1;
    Metadata body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectSetUsageExportBucketRequest {
    alt alt = 1;
    UsageExportLocation body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
}

message PostProjectTargetHttpProxiesTargetHttpProxySetUrlMapRequest {
    alt alt = 1;
    UrlMapReference body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetHttpProxy to set a URL map for.
    string targetHttpProxy = 10;
    string userIp = 11;
}

message PostProjectTargetHttpsProxiesTargetHttpsProxySetSslCertificatesRequest {
    alt alt = 1;
    TargetHttpsProxiesSetSslCertificatesRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
    string targetHttpsProxy = 10;
    string userIp = 11;
}

message PostProjectTargetHttpsProxiesTargetHttpsProxySetUrlMapRequest {
    alt alt = 1;
    UrlMapReference body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the TargetHttpsProxy resource whose URL map is to be set.
    string targetHttpsProxy = 10;
    string userIp = 11;
}

message GetProjectZonesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetProjectZonesZoneRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    string userIp = 8;
    // Name of the zone resource to return.
    string zone = 9;
}

message GetProjectZonesZoneAcceleratorTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message GetProjectZonesZoneAcceleratorTypesAcceleratorTypeRequest {
    // Name of the accelerator type to return.
    string acceleratorType = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone for this request.
    string zone = 10;
}

message GetProjectZonesZoneAutoscalersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // Name of the zone for this request.
    string zone = 13;
}

message PutProjectZonesZoneAutoscalersRequest {
    alt alt = 1;
    // Name of the autoscaler to update.
    string autoscaler = 2;
    Autoscaler body = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // Name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneAutoscalersRequest {
    alt alt = 1;
    Autoscaler body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // Name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneAutoscalersAutoscalerRequest {
    alt alt = 1;
    // Name of the autoscaler to return.
    string autoscaler = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Name of the zone for this request.
    string zone = 10;
}

message DeleteProjectZonesZoneAutoscalersAutoscalerRequest {
    alt alt = 1;
    // Name of the autoscaler to delete.
    string autoscaler = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // Name of the zone for this request.
    string zone = 11;
}

message PostProjectZonesZoneAutoscalersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneDiskTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message GetProjectZonesZoneDiskTypesDiskTypeRequest {
    alt alt = 1;
    // Name of the disk type to return.
    string diskType = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone for this request.
    string zone = 10;
}

message GetProjectZonesZoneDisksRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneDisksRequest {
    alt alt = 1;
    Disk body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Optional. Source image to restore onto a disk.
    string sourceImage = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message GetProjectZonesZoneDisksDiskRequest {
    alt alt = 1;
    // Name of the persistent disk to return.
    string disk = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone for this request.
    string zone = 10;
}

message DeleteProjectZonesZoneDisksDiskRequest {
    alt alt = 1;
    // Name of the persistent disk to delete.
    string disk = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message PostProjectZonesZoneDisksDiskCreateSnapshotRequest {
    alt alt = 1;
    Snapshot body = 2;
    // Name of the persistent disk to snapshot.
    string disk = 3;
    string fields = 4;
    bool guestFlush = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Project ID for this request.
    string project = 9;
    string quotaUser = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneDisksDiskResizeRequest {
    alt alt = 1;
    DisksResizeRequest body = 2;
    // The name of the persistent disk.
    string disk = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneDisksResourceSetLabelsRequest {
    alt alt = 1;
    ZoneSetLabelsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // Name of the resource for this request.
    string resource = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneDisksResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneInstanceGroupManagersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone where the managed instance group is located.
    string zone = 13;
}

message PostProjectZonesZoneInstanceGroupManagersRequest {
    alt alt = 1;
    InstanceGroupManager body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone where you want to create the managed instance group.
    string zone = 11;
}

message GetProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the managed instance group.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone where the managed instance group is located.
    string zone = 10;
}

message PutProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    InstanceGroupManager body = 2;
    string fields = 3;
    // The name of the instance group manager.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where you want to create the managed instance group.
    string zone = 12;
}

message DeleteProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the managed instance group to delete.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone where the managed instance group is located.
    string zone = 11;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerAbandonInstancesRequest {
    alt alt = 1;
    InstanceGroupManagersAbandonInstancesRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerDeleteInstancesRequest {
    alt alt = 1;
    InstanceGroupManagersDeleteInstancesRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerListManagedInstancesRequest {
    alt alt = 1;
    string fields = 2;
    string filter = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    int32 maxResults = 6;
    string oauth_token = 7;
    string order_by = 8;
    string pageToken = 9;
    boolean prettyPrint = 10;
    // Project ID for this request.
    string project = 11;
    string quotaUser = 12;
    string userIp = 13;
    // The name of the zone where the managed instance group is located.
    string zone = 14;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRecreateInstancesRequest {
    alt alt = 1;
    InstanceGroupManagersRecreateInstancesRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResizeRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the managed instance group.
    string instanceGroupManager = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    // The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.
    int32 size = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResizeAdvancedRequest {
    alt alt = 1;
    InstanceGroupManagersResizeAdvancedRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetAutoHealingPoliciesRequest {
    alt alt = 1;
    InstanceGroupManagersSetAutoHealingRequest body = 2;
    string fields = 3;
    // The name of the instance group manager.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetInstanceTemplateRequest {
    alt alt = 1;
    InstanceGroupManagersSetInstanceTemplateRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetTargetPoolsRequest {
    alt alt = 1;
    InstanceGroupManagersSetTargetPoolsRequest body = 2;
    string fields = 3;
    // The name of the managed instance group.
    string instanceGroupManager = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the managed instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupManagersResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneInstanceGroupsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone where the instance group is located.
    string zone = 13;
}

message PostProjectZonesZoneInstanceGroupsRequest {
    alt alt = 1;
    InstanceGroup body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone where you want to create the instance group.
    string zone = 11;
}

message GetProjectZonesZoneInstanceGroupsInstanceGroupRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the instance group.
    string instanceGroup = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone where the instance group is located.
    string zone = 10;
}

message DeleteProjectZonesZoneInstanceGroupsInstanceGroupRequest {
    alt alt = 1;
    string fields = 2;
    // The name of the instance group to delete.
    string instanceGroup = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone where the instance group is located.
    string zone = 11;
}

message PostProjectZonesZoneInstanceGroupsInstanceGroupAddInstancesRequest {
    alt alt = 1;
    InstanceGroupsAddInstancesRequest body = 2;
    string fields = 3;
    // The name of the instance group where you are adding instances.
    string instanceGroup = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupsInstanceGroupListInstancesRequest {
    alt alt = 1;
    InstanceGroupsListInstancesRequest body = 2;
    string fields = 3;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 4;
    // The name of the instance group from which you want to generate a list of included instances.
    string instanceGroup = 5;
    string key = 6;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 7;
    string oauth_token = 8;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 9;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 10;
    boolean prettyPrint = 11;
    // Project ID for this request.
    string project = 12;
    string quotaUser = 13;
    string userIp = 14;
    // The name of the zone where the instance group is located.
    string zone = 15;
}

message PostProjectZonesZoneInstanceGroupsInstanceGroupRemoveInstancesRequest {
    alt alt = 1;
    InstanceGroupsRemoveInstancesRequest body = 2;
    string fields = 3;
    // The name of the instance group where the specified instances will be removed.
    string instanceGroup = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupsInstanceGroupSetNamedPortsRequest {
    alt alt = 1;
    InstanceGroupsSetNamedPortsRequest body = 2;
    string fields = 3;
    // The name of the instance group where the named ports are updated.
    string instanceGroup = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone where the instance group is located.
    string zone = 12;
}

message PostProjectZonesZoneInstanceGroupsResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneInstancesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneInstancesRequest {
    alt alt = 1;
    Instance body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneInstancesInstanceRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance resource to return.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone for this request.
    string zone = 10;
}

message DeleteProjectZonesZoneInstancesInstanceRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance resource to delete.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message PostProjectZonesZoneInstancesInstanceAddAccessConfigRequest {
    alt alt = 1;
    AccessConfig body = 2;
    string fields = 3;
    // The instance name for this request.
    string instance = 4;
    string key = 5;
    // The name of the network interface to add to this instance.
    string networkInterface = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Project ID for this request.
    string project = 9;
    string quotaUser = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneInstancesInstanceAttachDiskRequest {
    alt alt = 1;
    AttachedDisk body = 2;
    string fields = 3;
    // The instance name for this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceDeleteAccessConfigRequest {
    // The name of the access config to delete.
    string accessConfig = 1;
    alt alt = 2;
    string fields = 3;
    // The instance name for this request.
    string instance = 4;
    string key = 5;
    // The name of the network interface.
    string networkInterface = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Project ID for this request.
    string project = 9;
    string quotaUser = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneInstancesInstanceDetachDiskRequest {
    alt alt = 1;
    // Disk device name to detach.
    string deviceName = 2;
    string fields = 3;
    // Instance name.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message GetProjectZonesZoneInstancesInstanceReferrersRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    // Name of the target instance scoping this request, or '-' if the request should span over all instances in the container.
    string instance = 4;
    string key = 5;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 6;
    string oauth_token = 7;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 8;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 9;
    boolean prettyPrint = 10;
    // Project ID for this request.
    string project = 11;
    string quotaUser = 12;
    string userIp = 13;
    // The name of the zone for this request.
    string zone = 14;
}

message PostProjectZonesZoneInstancesInstanceResetRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance scoping this request.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneInstancesInstanceSerialPortRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance scoping this request.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    // Specifies which COM or serial port to retrieve data from.
    int32 port = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // Returns output starting from a specific byte position. Use this to page through output when the output is too large to return in a single request. For the initial request, leave this field unspecified. For subsequent calls, this field should be set to the next value returned in the previous call.
    string start = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetDiskAutoDeleteRequest {
    alt alt = 1;
    // Whether to auto-delete the disk when the instance is deleted.
    bool autoDelete = 2;
    // The device name of the disk to modify.
    string deviceName = 3;
    string fields = 4;
    // The instance name.
    string instance = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Project ID for this request.
    string project = 9;
    string quotaUser = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneInstancesInstanceSetLabelsRequest {
    alt alt = 1;
    InstancesSetLabelsRequest body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetMachineResourcesRequest {
    alt alt = 1;
    InstancesSetMachineResourcesRequest body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetMachineTypeRequest {
    alt alt = 1;
    InstancesSetMachineTypeRequest body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetMetadataRequest {
    alt alt = 1;
    Metadata body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetMinCpuPlatformRequest {
    alt alt = 1;
    InstancesSetMinCpuPlatformRequest body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetSchedulingRequest {
    alt alt = 1;
    Scheduling body = 2;
    string fields = 3;
    // Instance name.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetServiceAccountRequest {
    alt alt = 1;
    InstancesSetServiceAccountRequest body = 2;
    string fields = 3;
    // Name of the instance resource to start.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceSetTagsRequest {
    alt alt = 1;
    Tags body = 2;
    string fields = 3;
    // Name of the instance scoping this request.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceStartRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance resource to start.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message PostProjectZonesZoneInstancesInstanceStartWithEncryptionKeyRequest {
    alt alt = 1;
    InstancesStartWithEncryptionKeyRequest body = 2;
    string fields = 3;
    // Name of the instance resource to start.
    string instance = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    // Project ID for this request.
    string project = 8;
    string quotaUser = 9;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 10;
    string userIp = 11;
    // The name of the zone for this request.
    string zone = 12;
}

message PostProjectZonesZoneInstancesInstanceStopRequest {
    alt alt = 1;
    string fields = 2;
    // Name of the instance resource to stop.
    string instance = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message PostProjectZonesZoneInstancesInstanceUpdateAccessConfigRequest {
    alt alt = 1;
    AccessConfig body = 2;
    string fields = 3;
    // The instance name for this request.
    string instance = 4;
    string key = 5;
    // The name of the network interface where the access config is attached.
    string networkInterface = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    // Project ID for this request.
    string project = 9;
    string quotaUser = 10;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message PostProjectZonesZoneInstancesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneMachineTypesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // The name of the zone for this request.
    string zone = 13;
}

message GetProjectZonesZoneMachineTypesMachineTypeRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Name of the machine type to return.
    string machineType = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // The name of the zone for this request.
    string zone = 10;
}

message GetProjectZonesZoneOperationsRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // Name of the zone for request.
    string zone = 13;
}

message GetProjectZonesZoneOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to return.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Name of the zone for this request.
    string zone = 10;
}

message DeleteProjectZonesZoneOperationsOperationRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    // Name of the Operations resource to delete.
    string operation = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    string userIp = 9;
    // Name of the zone for this request.
    string zone = 10;
}

message GetProjectZonesZoneTargetInstancesRequest {
    alt alt = 1;
    string fields = 2;
    // Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.
    // 
    // The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.
    // 
    // For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.
    // 
    // You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.
    // 
    // To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
    string filter = 3;
    string key = 4;
    // The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    int32 maxResults = 5;
    string oauth_token = 6;
    // Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.
    // 
    // You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.
    // 
    // Currently, only sorting by name or creationTimestamp desc is supported.
    string orderBy = 7;
    // Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
    string pageToken = 8;
    boolean prettyPrint = 9;
    // Project ID for this request.
    string project = 10;
    string quotaUser = 11;
    string userIp = 12;
    // Name of the zone scoping this request.
    string zone = 13;
}

message PostProjectZonesZoneTargetInstancesRequest {
    alt alt = 1;
    TargetInstance body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 9;
    string userIp = 10;
    // Name of the zone scoping this request.
    string zone = 11;
}

message PostProjectZonesZoneTargetInstancesResourceTestIamPermissionsRequest {
    alt alt = 1;
    TestPermissionsRequest body = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    // Project ID for this request.
    string project = 7;
    string quotaUser = 8;
    // Name of the resource for this request.
    string resource = 9;
    string userIp = 10;
    // The name of the zone for this request.
    string zone = 11;
}

message GetProjectZonesZoneTargetInstancesTargetInstanceRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // Name of the TargetInstance resource to return.
    string targetInstance = 8;
    string userIp = 9;
    // Name of the zone scoping this request.
    string zone = 10;
}

message DeleteProjectZonesZoneTargetInstancesTargetInstanceRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    string oauth_token = 4;
    boolean prettyPrint = 5;
    // Project ID for this request.
    string project = 6;
    string quotaUser = 7;
    // An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.
    // 
    // For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.
    // 
    // The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
    string requestId = 8;
    // Name of the TargetInstance resource to delete.
    string targetInstance = 9;
    string userIp = 10;
    // Name of the zone scoping this request.
    string zone = 11;
}

message AcceleratorConfig {
    // The number of the guest accelerator cards exposed to this instance.
    int32 acceleratorCount = 1;
    // Full or partial URL of the accelerator type resource to expose to this instance.
    string acceleratorType = 2;
}

message AcceleratorType {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // [Output Only] The deprecation status associated with this accelerator type.
    DeprecationStatus deprecated = 2;
    // [Output Only] An optional textual description of the resource.
    string description = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] The type of the resource. Always compute#acceleratorType for accelerator types.
    string kind = 5;
    // [Output Only] Maximum accelerator cards allowed per instance.
    int32 maximumCardsPerInstance = 6;
    // [Output Only] Name of the resource.
    string name = 7;
    // [Output Only] Server-defined fully-qualified URL for this resource.
    string selfLink = 8;
    // [Output Only] The name of the zone where the accelerator type resides, such as us-central1-a.
    string zone = 9;
}

message AcceleratorTypeAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of AcceleratorTypesScopedList resources.
    map<string, AcceleratorTypesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#acceleratorTypeAggregatedList for aggregated lists of accelerator types.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AcceleratorTypeList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of AcceleratorType resources.
    repeated AcceleratorType items = 2;
    // [Output Only] Type of resource. Always compute#acceleratorTypeList for lists of accelerator types.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AcceleratorTypesScopedList {
    // [Output Only] List of accelerator types contained in this scope.
    repeated AcceleratorType acceleratorTypes = 1;
    // [Output Only] An informational warning that appears when the accelerator types list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message AccessConfig {
    // [Output Only] Type of the resource. Always compute#accessConfig for access configs.
    string kind = 1;
    // The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.
    string name = 2;
    // An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
    string natIP = 3;
    // The DNS domain name for the public PTR record. This field can only be set when the set_public_ptr field is enabled.
    string publicPtrDomainName = 4;
    // Specifies whether a public DNS ?PTR? record should be created to map the external IP address of the instance to a DNS domain name.
    bool setPublicPtr = 5;
    // The type of configuration. The default and only option is ONE_TO_ONE_NAT.
    enum AccessConfig_Type {
        ACCESSCONFIG_TYPE_ONE_TO_ONE_NAT = 0;
    }
    AccessConfig_Type type = 6;
}

message Address {
    // The static IP address represented by this resource.
    string address = 1;
    // The type of address to reserve. If unspecified, defaults to EXTERNAL.
    enum Address_AddressType {
        ADDRESS_ADDRESSTYPE_EXTERNAL = 0;
        ADDRESS_ADDRESSTYPE_INTERNAL = 1;
        ADDRESS_ADDRESSTYPE_UNSPECIFIED_TYPE = 2;
    }
    Address_AddressType addressType = 2;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 5;
    // The IP Version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
    enum Address_IpVersion {
        ADDRESS_IPVERSION_IPV4 = 0;
        ADDRESS_IPVERSION_IPV6 = 1;
        ADDRESS_IPVERSION_UNSPECIFIED_VERSION = 2;
    }
    Address_IpVersion ipVersion = 6;
    // [Output Only] Type of the resource. Always compute#address for addresses.
    string kind = 7;
    // A fingerprint for the labels being applied to this Address, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    // 
    // To see the latest fingerprint, make a get() request to retrieve an Address.
    string labelFingerprint = 8;
    // Labels to apply to this Address resource. These can be later modified by the setLabels method. Each label key/value must comply with RFC1035. Label values may be empty.
    map<string, string> labels = 9;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 10;
    // [Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.
    string region = 11;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 12;
    // [Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
    enum Address_Statu {
        ADDRESS_STATU_IN_USE = 0;
        ADDRESS_STATU_RESERVED = 1;
    }
    Address_Statu status = 13;
    // For external addresses, this field should not be used.
    // 
    // The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range.
    string subnetwork = 14;
    // [Output Only] The URLs of the resources that are using this address.
    repeated string users = 15;
}

message AddressAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of AddressesScopedList resources.
    map<string, AddressesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#addressAggregatedList for aggregated lists of addresses.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AddressList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Address resources.
    repeated Address items = 2;
    // [Output Only] Type of resource. Always compute#addressList for lists of addresses.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AddressesScopedList {
    // [Output Only] List of addresses contained in this scope.
    repeated Address addresses = 1;
    // [Output Only] Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message AliasIpRange {
    // The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    string ipCidrRange = 1;
    // Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.
    string subnetworkRangeName = 2;
}

message AttachedDisk {
    // Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
    bool autoDelete = 1;
    // Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
    bool boot = 2;
    // Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.
    // 
    // If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
    string deviceName = 3;
    // Encrypts or decrypts a disk using a customer-supplied encryption key.
    // 
    // If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key.
    // 
    // If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance.
    // 
    // If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
    // 
    // Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
    CustomerEncryptionKey diskEncryptionKey = 4;
    // [Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.
    int32 index = 5;
    // [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.
    // 
    // This property is mutually exclusive with the source property; you can only define one or the other, but not both.
    AttachedDiskInitializeParams initializeParams = 6;
    // Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
    enum AttachedDisk_Interface {
        ATTACHEDDISK_INTERFACE_NVME = 0;
        ATTACHEDDISK_INTERFACE_SCSI = 1;
    }
    AttachedDisk_Interface interface = 7;
    // [Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
    string kind = 8;
    // [Output Only] Any valid publicly visible licenses.
    repeated string licenses = 9;
    // The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    enum AttachedDisk_Mode {
        ATTACHEDDISK_MODE_READ_ONLY = 0;
        ATTACHEDDISK_MODE_READ_WRITE = 1;
    }
    AttachedDisk_Mode mode = 10;
    // Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.
    // 
    // If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.
    // 
    // Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
    string source = 11;
    // Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
    enum AttachedDisk_Type {
        ATTACHEDDISK_TYPE_PERSISTENT = 0;
        ATTACHEDDISK_TYPE_SCRATCH = 1;
    }
    AttachedDisk_Type type = 12;
}

message AttachedDiskInitializeParams {
    // Specifies the disk name. If not specified, the default is to use the name of the instance.
    string diskName = 1;
    // Specifies the size of the disk in base-2 GB.
    string diskSizeGb = 2;
    // [Deprecated] Storage type of the disk.
    enum AttachedDiskInitializeParams_DiskStorageType {
        ATTACHEDDISKINITIALIZEPARAMS_DISKSTORAGETYPE_HDD = 0;
        ATTACHEDDISKINITIALIZEPARAMS_DISKSTORAGETYPE_SSD = 1;
    }
    AttachedDiskInitializeParams_DiskStorageType diskStorageType = 3;
    // Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:
    // 
    // https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard 
    // 
    // Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType 
    // - projects/project/zones/zone/diskTypes/diskType 
    // - zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this is the name of the disk type, not URL.
    string diskType = 4;
    // The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.
    // 
    // To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image:
    // 
    // projects/debian-cloud/global/images/family/debian-8 
    // 
    // Alternatively, use a specific version of a public operating system image:
    // 
    // projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD 
    // 
    // To create a disk with a private image that you created, specify the image name in the following format:
    // 
    // global/images/my-private-image 
    // 
    // You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:
    // 
    // global/images/family/my-private-family 
    // 
    // If the source image is deleted later, this field will not be set.
    string sourceImage = 5;
    // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
    // 
    // Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
    CustomerEncryptionKey sourceImageEncryptionKey = 6;
}

message AuditConfig {
    // The configuration for logging of each type of permission.
    repeated AuditLogConfig auditLogConfigs = 1;
    repeated string exemptedMembers = 2;
    // Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
    string service = 3;
}

message AuditLogConfig {
    // Specifies the identities that do not cause logging for this type of permission. Follows the same format of [Binding.members][].
    repeated string exemptedMembers = 1;
    // The log type that this config enables.
    enum AuditLogConfig_LogType {
        AUDITLOGCONFIG_LOGTYPE_ADMIN_READ = 0;
        AUDITLOGCONFIG_LOGTYPE_DATA_READ = 1;
        AUDITLOGCONFIG_LOGTYPE_DATA_WRITE = 2;
        AUDITLOGCONFIG_LOGTYPE_LOG_TYPE_UNSPECIFIED = 3;
    }
    AuditLogConfig_LogType logType = 2;
}

message AuthorizationLoggingOptions {
    // The type of the permission that was checked.
    enum AuthorizationLoggingOptions_PermissionType {
        AUTHORIZATIONLOGGINGOPTIONS_PERMISSIONTYPE_ADMIN_READ = 0;
        AUTHORIZATIONLOGGINGOPTIONS_PERMISSIONTYPE_ADMIN_WRITE = 1;
        AUTHORIZATIONLOGGINGOPTIONS_PERMISSIONTYPE_DATA_READ = 2;
        AUTHORIZATIONLOGGINGOPTIONS_PERMISSIONTYPE_DATA_WRITE = 3;
        AUTHORIZATIONLOGGINGOPTIONS_PERMISSIONTYPE_PERMISSION_TYPE_UNSPECIFIED = 4;
    }
    AuthorizationLoggingOptions_PermissionType permissionType = 1;
}

message Autoscaler {
    // The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
    // 
    // If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
    AutoscalingPolicy autoscalingPolicy = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // [Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
    string region = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
    // [Output Only] The status of the autoscaler configuration.
    enum Autoscaler_Statu {
        AUTOSCALER_STATU_ACTIVE = 0;
        AUTOSCALER_STATU_DELETING = 1;
        AUTOSCALER_STATU_ERROR = 2;
        AUTOSCALER_STATU_PENDING = 3;
    }
    Autoscaler_Statu status = 9;
    // [Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
    repeated AutoscalerStatusDetails statusDetails = 10;
    // URL of the managed instance group that this autoscaler will scale.
    string target = 11;
    // [Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
    string zone = 12;
}

message AutoscalerAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of AutoscalersScopedList resources.
    map<string, AutoscalersScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#autoscalerAggregatedList for aggregated lists of autoscalers.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AutoscalerList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Autoscaler resources.
    repeated Autoscaler items = 2;
    // [Output Only] Type of resource. Always compute#autoscalerList for lists of autoscalers.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message AutoscalerStatusDetails {
    // The status message.
    string message = 1;
    // The type of error returned.
    enum AutoscalerStatusDetails_Type {
        AUTOSCALERSTATUSDETAILS_TYPE_ALL_INSTANCES_UNHEALTHY = 0;
        AUTOSCALERSTATUSDETAILS_TYPE_BACKEND_SERVICE_DOES_NOT_EXIST = 1;
        AUTOSCALERSTATUSDETAILS_TYPE_CAPPED_AT_MAX_NUM_REPLICAS = 2;
        AUTOSCALERSTATUSDETAILS_TYPE_CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE = 3;
        AUTOSCALERSTATUSDETAILS_TYPE_CUSTOM_METRIC_INVALID = 4;
        AUTOSCALERSTATUSDETAILS_TYPE_MIN_EQUALS_MAX = 5;
        AUTOSCALERSTATUSDETAILS_TYPE_MISSING_CUSTOM_METRIC_DATA_POINTS = 6;
        AUTOSCALERSTATUSDETAILS_TYPE_MISSING_LOAD_BALANCING_DATA_POINTS = 7;
        AUTOSCALERSTATUSDETAILS_TYPE_MORE_THAN_ONE_BACKEND_SERVICE = 8;
        AUTOSCALERSTATUSDETAILS_TYPE_NOT_ENOUGH_QUOTA_AVAILABLE = 9;
        AUTOSCALERSTATUSDETAILS_TYPE_REGION_RESOURCE_STOCKOUT = 10;
        AUTOSCALERSTATUSDETAILS_TYPE_SCALING_TARGET_DOES_NOT_EXIST = 11;
        AUTOSCALERSTATUSDETAILS_TYPE_UNKNOWN = 12;
        AUTOSCALERSTATUSDETAILS_TYPE_UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION = 13;
        AUTOSCALERSTATUSDETAILS_TYPE_ZONE_RESOURCE_STOCKOUT = 14;
    }
    AutoscalerStatusDetails_Type type = 2;
}

message AutoscalersScopedList {
    // [Output Only] List of autoscalers contained in this scope.
    repeated Autoscaler autoscalers = 1;
    // [Output Only] Informational warning which replaces the list of autoscalers when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message AutoscalingPolicy {
    // The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.
    // 
    // Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
    int32 coolDownPeriodSec = 1;
    // Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
    AutoscalingPolicyCpuUtilization cpuUtilization = 2;
    // Configuration parameters of autoscaling based on a custom metric.
    repeated AutoscalingPolicyCustomMetricUtilization customMetricUtilizations = 3;
    // Configuration parameters of autoscaling based on load balancer.
    AutoscalingPolicyLoadBalancingUtilization loadBalancingUtilization = 4;
    // The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
    int32 maxNumReplicas = 5;
    // The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.
    int32 minNumReplicas = 6;
}

message AutoscalingPolicyCpuUtilization {
    // The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6.
    // 
    // If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.
    // 
    // If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
    double utilizationTarget = 1;
}

message AutoscalingPolicyCustomMetricUtilization {
    // A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or global data.
    // 
    // For the filter to be valid for autoscaling purposes, the following rules apply:  
    // - You can only use the AND operator for joining selectors. 
    // - You can only use direct equality comparison operator (=) without any functions for each selector. 
    // - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. 
    // - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels.
    // If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is / called a global metric for the purpose of autoscaling.
    // 
    // If not specified, the type defaults to gce_instance.  
    // 
    // You should provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value.
    string filter = 1;
    // The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric.
    // 
    // The metric must have a value type of INT64 or DOUBLE.
    string metric = 2;
    // If scaling is based on a global metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler will keep the number of instances proportional to the value of this metric, the metric itself should not change value due to group resizing.
    // 
    // A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances.
    // 
    // A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead.
    double singleInstanceAssignment = 3;
    // The target value of the metric that autoscaler should maintain. This must be a positive value.
    // 
    // For example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.
    double utilizationTarget = 4;
    // Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.
    enum AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType {
        AUTOSCALINGPOLICYCUSTOMMETRICUTILIZATION_UTILIZATIONTARGETTYPE_DELTA_PER_MINUTE = 0;
        AUTOSCALINGPOLICYCUSTOMMETRICUTILIZATION_UTILIZATIONTARGETTYPE_DELTA_PER_SECOND = 1;
        AUTOSCALINGPOLICYCUSTOMMETRICUTILIZATION_UTILIZATIONTARGETTYPE_GAUGE = 2;
    }
    AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType utilizationTargetType = 5;
}

message AutoscalingPolicyLoadBalancingUtilization {
    // Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.
    double utilizationTarget = 1;
}

message Backend {
    // Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).
    // 
    // For Internal Load Balancing, the default and only supported mode is CONNECTION.
    enum Backend_BalancingMode {
        BACKEND_BALANCINGMODE_CONNECTION = 0;
        BACKEND_BALANCINGMODE_RATE = 1;
        BACKEND_BALANCINGMODE_UTILIZATION = 2;
    }
    Backend_BalancingMode balancingMode = 1;
    // A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0].
    // 
    // This cannot be used for internal load balancing.
    float capacityScaler = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // The fully-qualified URL of a Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource.
    // 
    // Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL.
    // 
    // When the BackendService has load balancing scheme INTERNAL, the instance group must be within the same region as the BackendService.
    string group = 4;
    // The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.
    // 
    // This cannot be used for internal load balancing.
    int32 maxConnections = 5;
    // The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.
    // 
    // This cannot be used for internal load balancing.
    int32 maxConnectionsPerInstance = 6;
    // The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.
    // 
    // This cannot be used for internal load balancing.
    int32 maxRate = 7;
    // The max requests per second (RPS) that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.
    // 
    // This cannot be used for internal load balancing.
    float maxRatePerInstance = 8;
    // Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0].
    // 
    // This cannot be used for internal load balancing.
    float maxUtilization = 9;
}

message BackendBucket {
    // Cloud Storage bucket name.
    string bucketName = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional textual description of the resource; provided by the client when the resource is created.
    string description = 3;
    // If true, enable Cloud CDN for this BackendBucket.
    bool enableCdn = 4;
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 5;
    // Type of the resource.
    string kind = 6;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
}

message BackendBucketList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of BackendBucket resources.
    repeated BackendBucket items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message BackendService {
    // Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.
    // 
    // When the load balancing scheme is INTERNAL, this field is not used.
    int32 affinityCookieTtlSec = 1;
    // The list of backends that serve this BackendService.
    repeated Backend backends = 2;
    // Cloud CDN configuration for this BackendService.
    BackendServiceCdnPolicy cdnPolicy = 3;
    ConnectionDraining connectionDraining = 4;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 5;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 6;
    // If true, enable Cloud CDN for this BackendService.
    // 
    // When the load balancing scheme is INTERNAL, this field is not used.
    bool enableCDN = 7;
    // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
    string fingerprint = 8;
    // The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required for Compute Engine backend services. A health check must not be specified for App Engine backend and Cloud Function backend.
    // 
    // For internal load balancing, a URL to a HealthCheck resource must be specified instead.
    repeated string healthChecks = 9;
    BackendServiceIAP iap = 10;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 11;
    // [Output Only] Type of resource. Always compute#backendService for backend services.
    string kind = 12;
    // Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other. Possible values are INTERNAL and EXTERNAL.
    enum BackendService_LoadBalancingScheme {
        BACKENDSERVICE_LOADBALANCINGSCHEME_EXTERNAL = 0;
        BACKENDSERVICE_LOADBALANCINGSCHEME_INTERNAL = 1;
        BACKENDSERVICE_LOADBALANCINGSCHEME_INVALID_LOAD_BALANCING_SCHEME = 2;
    }
    BackendService_LoadBalancingScheme loadBalancingScheme = 13;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 14;
    // Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80.
    // 
    // This cannot be used for internal load balancing.
    int32 port = 15;
    // Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.
    // 
    // When the load balancing scheme is INTERNAL, this field is not used.
    string portName = 16;
    // The protocol this BackendService uses to communicate with backends.
    // 
    // Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.
    // 
    // For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
    enum BackendService_Protocol {
        BACKENDSERVICE_PROTOCOL_HTTP = 0;
        BACKENDSERVICE_PROTOCOL_HTTPS = 1;
        BACKENDSERVICE_PROTOCOL_SSL = 2;
        BACKENDSERVICE_PROTOCOL_TCP = 3;
        BACKENDSERVICE_PROTOCOL_UDP = 4;
    }
    BackendService_Protocol protocol = 17;
    // [Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.
    string region = 18;
    // [Output Only] The resource URL for the security policy associated with this backend service.
    string securityPolicy = 19;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 20;
    // Type of session affinity to use. The default is NONE.
    // 
    // When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE.
    // 
    // When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.
    // 
    // When the protocol is UDP, this field is not used.
    enum BackendService_SessionAffinity {
        BACKENDSERVICE_SESSIONAFFINITY_CLIENT_IP = 0;
        BACKENDSERVICE_SESSIONAFFINITY_CLIENT_IP_PORT_PROTO = 1;
        BACKENDSERVICE_SESSIONAFFINITY_CLIENT_IP_PROTO = 2;
        BACKENDSERVICE_SESSIONAFFINITY_GENERATED_COOKIE = 3;
        BACKENDSERVICE_SESSIONAFFINITY_NONE = 4;
    }
    BackendService_SessionAffinity sessionAffinity = 21;
    // How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.
    int32 timeoutSec = 22;
}

message BackendServiceAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of BackendServicesScopedList resources.
    map<string, BackendServicesScopedList> items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message BackendServiceCdnPolicy {
    // The CacheKeyPolicy for this CdnPolicy.
    CacheKeyPolicy cacheKeyPolicy = 1;
}

message BackendServiceGroupHealth {
    repeated HealthStatus healthStatus = 1;
    // [Output Only] Type of resource. Always compute#backendServiceGroupHealth for the health of backend services.
    string kind = 2;
}

message BackendServiceIAP {
    bool enabled = 1;
    string oauth2ClientId = 2;
    string oauth2ClientSecret = 3;
    // [Output Only] SHA256 hash value for the field oauth2_client_secret above.
    string oauth2ClientSecretSha256 = 4;
}

message BackendServiceList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of BackendService resources.
    repeated BackendService items = 2;
    // [Output Only] Type of resource. Always compute#backendServiceList for lists of backend services.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message BackendServicesScopedList {
    // List of BackendServices contained in this scope.
    repeated BackendService backendServices = 1;
    // Informational warning which replaces the list of backend services when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message Binding {
    // The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently. This field is GOOGLE_INTERNAL.
    Expr condition = 1;
    // Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:
    // 
    // * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.
    // 
    // * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.
    // 
    // * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` or `joe@example.com`.
    // 
    // 
    // 
    // * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
    // 
    // * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.
    // 
    // 
    // 
    // * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.
    repeated string members = 2;
    // Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    string role = 3;
}

message CacheInvalidationRule {
    // If set, this invalidation rule will only apply to requests with a Host header matching host.
    string host = 1;
    string path = 2;
}

message CacheKeyPolicy {
    // If true, requests to different hosts will be cached separately.
    bool includeHost = 1;
    // If true, http and https requests will be cached separately.
    bool includeProtocol = 2;
    // If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.
    bool includeQueryString = 3;
    // Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
    repeated string queryStringBlacklist = 4;
    // Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
    repeated string queryStringWhitelist = 5;
}

message Commitment {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] Commitment end time in RFC3339 text format.
    string endTimestamp = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#commitment for commitments.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).
    enum Commitment_Plan {
        COMMITMENT_PLAN_INVALID = 0;
        COMMITMENT_PLAN_THIRTY_SIX_MONTH = 1;
        COMMITMENT_PLAN_TWELVE_MONTH = 2;
    }
    Commitment_Plan plan = 7;
    // [Output Only] URL of the region where this commitment may be used.
    string region = 8;
    // List of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur together.
    repeated ResourceCommitment resources = 9;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 10;
    // [Output Only] Commitment start time in RFC3339 text format.
    string startTimestamp = 11;
    // [Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
    enum Commitment_Statu {
        COMMITMENT_STATU_ACTIVE = 0;
        COMMITMENT_STATU_CREATING = 1;
        COMMITMENT_STATU_EXPIRED = 2;
        COMMITMENT_STATU_NOT_YET_ACTIVE = 3;
    }
    Commitment_Statu status = 12;
    // [Output Only] An optional, human-readable explanation of the status.
    string statusMessage = 13;
}

message CommitmentAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of CommitmentsScopedList resources.
    map<string, CommitmentsScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#commitmentAggregatedList for aggregated lists of commitments.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message CommitmentList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Commitment resources.
    repeated Commitment items = 2;
    // [Output Only] Type of resource. Always compute#commitmentList for lists of commitments.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message CommitmentsScopedList {
    // [Output Only] List of commitments contained in this scope.
    repeated Commitment commitments = 1;
    // [Output Only] Informational warning which replaces the list of commitments when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message Condition {
    // Trusted attributes supplied by the IAM system.
    enum Condition_Iam {
        CONDITION_IAM_APPROVER = 0;
        CONDITION_IAM_ATTRIBUTION = 1;
        CONDITION_IAM_AUTHORITY = 2;
        CONDITION_IAM_JUSTIFICATION_TYPE = 3;
        CONDITION_IAM_NO_ATTR = 4;
        CONDITION_IAM_SECURITY_REALM = 5;
    }
    Condition_Iam iam = 1;
    // An operator to apply the subject with.
    enum Condition_Op {
        CONDITION_OP_DISCHARGED = 0;
        CONDITION_OP_EQUALS = 1;
        CONDITION_OP_IN = 2;
        CONDITION_OP_NOT_EQUALS = 3;
        CONDITION_OP_NOT_IN = 4;
        CONDITION_OP_NO_OP = 5;
    }
    Condition_Op op = 2;
    // Trusted attributes discharged by the service.
    string svc = 3;
    // Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.
    enum Condition_Sy {
        CONDITION_SY_IP = 0;
        CONDITION_SY_NAME = 1;
        CONDITION_SY_NO_ATTR = 2;
        CONDITION_SY_REGION = 3;
        CONDITION_SY_SERVICE = 4;
    }
    Condition_Sy sys = 4;
    // DEPRECATED. Use 'values' instead.
    string value = 5;
    // The objects of the condition. This is mutually exclusive with 'value'.
    repeated string values = 6;
}

message ConnectionDraining {
    // Time for which instance will be drained (not accept new connections, but still work to finish started).
    int32 drainingTimeoutSec = 1;
}

message CustomerEncryptionKey {
    // Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
    string rawKey = 1;
    // Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.
    // 
    // The key must meet the following requirements before you can provide it to Compute Engine:  
    // - The key is wrapped using a RSA public key certificate provided by Google. 
    // - After being wrapped, the key must be encoded in RFC 4648 base64 encoding.  Get the RSA public key certificate provided by Google at:
    // https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
    string rsaEncryptedKey = 2;
    // [Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
    string sha256 = 3;
}

message CustomerEncryptionKeyProtectedDisk {
    // Decrypts data associated with the disk with a customer-supplied encryption key.
    CustomerEncryptionKey diskEncryptionKey = 1;
    // Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.
    string source = 2;
}

message DeprecationStatus {
    // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.
    string deleted = 1;
    // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.
    string deprecated = 2;
    // An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.
    string obsolete = 3;
    // The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.
    string replacement = 4;
    // The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
    enum DeprecationStatus_State {
        DEPRECATIONSTATUS_STATE_DELETED = 0;
        DEPRECATIONSTATUS_STATE_DEPRECATED = 1;
        DEPRECATIONSTATUS_STATE_OBSOLETE = 2;
    }
    DeprecationStatus_State state = 5;
}

message Disk {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // Encrypts the disk using a customer-supplied encryption key.
    // 
    // After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine).
    // 
    // Customer-supplied encryption keys do not protect access to metadata of the disk.
    // 
    // If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
    CustomerEncryptionKey diskEncryptionKey = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#disk for disks.
    string kind = 5;
    // A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    // 
    // To see the latest fingerprint, make a get() request to retrieve a disk.
    string labelFingerprint = 6;
    // Labels to apply to this disk. These can be later modified by the setLabels method.
    map<string, string> labels = 7;
    // [Output Only] Last attach timestamp in RFC3339 text format.
    string lastAttachTimestamp = 8;
    // [Output Only] Last detach timestamp in RFC3339 text format.
    string lastDetachTimestamp = 9;
    // Any applicable publicly visible licenses.
    repeated string licenses = 10;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 11;
    // Internal use only.
    string options = 12;
    // [Output Only] Server-defined fully-qualified URL for this resource.
    string selfLink = 13;
    // Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.
    // 
    // If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot. Acceptable values are 1 to 65536, inclusive.
    string sizeGb = 14;
    // The source image used to create this disk. If the source image is deleted, this field will not be set.
    // 
    // To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image:
    // 
    // projects/debian-cloud/global/images/family/debian-8 
    // 
    // Alternatively, use a specific version of a public operating system image:
    // 
    // projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD 
    // 
    // To create a disk with a private image that you created, specify the image name in the following format:
    // 
    // global/images/my-private-image 
    // 
    // You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:
    // 
    // global/images/family/my-private-family
    string sourceImage = 15;
    // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
    CustomerEncryptionKey sourceImageEncryptionKey = 16;
    // [Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.
    string sourceImageId = 17;
    // The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values:  
    // - https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot 
    // - projects/project/global/snapshots/snapshot 
    // - global/snapshots/snapshot
    string sourceSnapshot = 18;
    // The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
    CustomerEncryptionKey sourceSnapshotEncryptionKey = 19;
    // [Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
    string sourceSnapshotId = 20;
    // [Output Only] The status of disk creation.
    enum Disk_Statu {
        DISK_STATU_CREATING = 0;
        DISK_STATU_FAILED = 1;
        DISK_STATU_READY = 2;
        DISK_STATU_RESTORING = 3;
    }
    Disk_Statu status = 21;
    // [Deprecated] Storage type of the persistent disk.
    enum Disk_StorageType {
        DISK_STORAGETYPE_HDD = 0;
        DISK_STORAGETYPE_SSD = 1;
    }
    Disk_StorageType storageType = 22;
    // URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
    string type = 23;
    // [Output Only] Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
    repeated string users = 24;
    // [Output Only] URL of the zone where the disk resides.
    string zone = 25;
}

message DiskAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of DisksScopedList resources.
    map<string, DisksScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#diskAggregatedList for aggregated lists of persistent disks.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message DiskList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Disk resources.
    repeated Disk items = 2;
    // [Output Only] Type of resource. Always compute#diskList for lists of disks.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message DiskMoveRequest {
    // The URL of the destination zone to move the disk. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone 
    // - projects/project/zones/zone 
    // - zones/zone
    string destinationZone = 1;
    // The URL of the target disk to move. This can be a full or partial URL. For example, the following are all valid URLs to a disk:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
    // - projects/project/zones/zone/disks/disk 
    // - zones/zone/disks/disk
    string targetDisk = 2;
}

message DiskType {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // [Output Only] Server-defined default disk size in GB.
    string defaultDiskSizeGb = 2;
    // [Output Only] The deprecation status associated with this disk type.
    DeprecationStatus deprecated = 3;
    // [Output Only] An optional description of this resource.
    string description = 4;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 5;
    // [Output Only] Type of the resource. Always compute#diskType for disk types.
    string kind = 6;
    // [Output Only] Name of the resource.
    string name = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
    // [Output Only] An optional textual description of the valid disk size, such as "10GB-10TB".
    string validDiskSize = 9;
    // [Output Only] URL of the zone where the disk type resides.
    string zone = 10;
}

message DiskTypeAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of DiskTypesScopedList resources.
    map<string, DiskTypesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#diskTypeAggregatedList.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message DiskTypeList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of DiskType resources.
    repeated DiskType items = 2;
    // [Output Only] Type of resource. Always compute#diskTypeList for disk types.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message DiskTypesScopedList {
    // [Output Only] List of disk types contained in this scope.
    repeated DiskType diskTypes = 1;
    // [Output Only] Informational warning which replaces the list of disk types when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message DisksResizeRequest {
    // The new size of the persistent disk, which is specified in GB.
    string sizeGb = 1;
}

message DisksScopedList {
    // [Output Only] List of disks contained in this scope.
    repeated Disk disks = 1;
    // [Output Only] Informational warning which replaces the list of disks when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message DistributionPolicy {
    repeated DistributionPolicyZoneConfiguration zones = 1;
}

message DistributionPolicyZoneConfiguration {
    // URL of the zone where managed instance group is spawning instances (for regional resources). Zone has to belong to the region where managed instance group is located.
    string zone = 1;
}

message Expr {
    // An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    string description = 1;
    // Textual representation of an expression in Common Expression Language syntax.
    // 
    // The application context of the containing message determines which well-known feature set of CEL is supported.
    string expression = 2;
    // An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
    string location = 3;
    // An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
    string title = 4;
}

message Firewall {
    // The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
    message Allowed {
            // The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    string IPProtocol = 1;
            // An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.
    // 
    // Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
    repeated string ports = 2;
    }
    repeated Allowed allowed = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
    message Denied {
            // The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
    string IPProtocol = 1;
            // An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.
    // 
    // Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
    repeated string ports = 2;
    }
    repeated Denied denied = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.
    repeated string destinationRanges = 5;
    // Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS traffic, it is NOT supported to specify sourceRanges OR sourceTags.
    enum Firewall_Direction {
        FIREWALL_DIRECTION_EGRESS = 0;
        FIREWALL_DIRECTION_INGRESS = 1;
    }
    Firewall_Direction direction = 6;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 7;
    // [Output Only] Type of the resource. Always compute#firewall for firewall rules.
    string kind = 8;
    // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used:
    // global/networks/default
    // If you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  
    // - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network 
    // - projects/myproject/global/networks/my-network 
    // - global/networks/default
    string network = 10;
    // Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW rules having equal priority.
    int32 priority = 11;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 12;
    // If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.
    repeated string sourceRanges = 13;
    // If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.
    repeated string sourceServiceAccounts = 14;
    // If source tags are specified, the firewall rule applies only to traffic with source IPs that match the primary network interfaces of VM instances that have the tag and are in the same VPC network. Source tags cannot be used to control traffic to an instance's external IP address, it only applies to traffic between instances in the same virtual network. Because tags are associated with instances, not IP addresses. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.
    repeated string sourceTags = 15;
    // A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
    repeated string targetServiceAccounts = 16;
    // A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.
    repeated string targetTags = 17;
}

message FirewallList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Firewall resources.
    repeated Firewall items = 2;
    // [Output Only] Type of resource. Always compute#firewallList for lists of firewalls.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message FixedOrPercent {
    // [Output Only] Absolute value calculated based on mode: mode = fixed -> calculated = fixed = percent -> calculated = ceiling(percent/100 * base_value)
    int32 calculated = 1;
    // fixed must be non-negative.
    int32 fixed = 2;
    // percent must belong to [0, 100].
    int32 percent = 3;
}

message ForwardingRule {
    // The IP address that this forwarding rule is serving on behalf of.
    // 
    // For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IPv4 address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4 only. A global forwarding rule supports either IPv4 or IPv6.
    // 
    // When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule.
    string IPAddress = 1;
    // The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP.
    // 
    // When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
    enum ForwardingRule_IPProtocol {
        FORWARDINGRULE_IPPROTOCOL_AH = 0;
        FORWARDINGRULE_IPPROTOCOL_ESP = 1;
        FORWARDINGRULE_IPPROTOCOL_ICMP = 2;
        FORWARDINGRULE_IPPROTOCOL_SCTP = 3;
        FORWARDINGRULE_IPPROTOCOL_TCP = 4;
        FORWARDINGRULE_IPPROTOCOL_UDP = 5;
    }
    ForwardingRule_IPProtocol IPProtocol = 2;
    // This field is not used for external load balancing.
    // 
    // For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
    string backendService = 3;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 4;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for a global forwarding rule.
    enum ForwardingRule_IpVersion {
        FORWARDINGRULE_IPVERSION_IPV4 = 0;
        FORWARDINGRULE_IPVERSION_IPV6 = 1;
        FORWARDINGRULE_IPVERSION_UNSPECIFIED_VERSION = 2;
    }
    ForwardingRule_IpVersion ipVersion = 7;
    // [Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
    string kind = 8;
    // A fingerprint for the labels being applied to this resource, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    // 
    // To see the latest fingerprint, make a get() request to retrieve a ForwardingRule.
    string labelFingerprint = 9;
    // Labels to apply to this resource. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
    map<string, string> labels = 10;
    // This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
    enum ForwardingRule_LoadBalancingScheme {
        FORWARDINGRULE_LOADBALANCINGSCHEME_EXTERNAL = 0;
        FORWARDINGRULE_LOADBALANCINGSCHEME_INTERNAL = 1;
        FORWARDINGRULE_LOADBALANCINGSCHEME_INVALID = 2;
    }
    ForwardingRule_LoadBalancingScheme loadBalancingScheme = 11;
    // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 12;
    // This field is not used for external load balancing.
    // 
    // For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
    string network = 13;
    // This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.
    // 
    // Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.
    // 
    // Some types of forwarding target have constraints on the acceptable ports:  
    // - TargetHttpProxy: 80, 8080 
    // - TargetHttpsProxy: 443 
    // - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 
    // - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 
    // - TargetVpnGateway: 500, 4500
    // -
    string portRange = 14;
    // This field is used along with the backend_service field for internal load balancing.
    // 
    // When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule.
    // 
    // You may specify a maximum of up to 5 ports.
    repeated string ports = 15;
    // [Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.
    string region = 16;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 17;
    // An optional prefix to the service name for this Forwarding Rule. If specified, will be the first label of the fully qualified service name.
    // 
    // The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    // 
    // This field is only used for internal load balancing.
    string serviceLabel = 18;
    // [Output Only] The internal fully qualified service name for this Forwarding Rule.
    // 
    // This field is only used for internal load balancing.
    string serviceName = 19;
    // This field is not used for external load balancing.
    // 
    // For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule.
    // 
    // If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
    string subnetwork = 20;
    // The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object.
    // 
    // This field is not used for internal load balancing.
    string target = 21;
}

message ForwardingRuleAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of ForwardingRulesScopedList resources.
    map<string, ForwardingRulesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#forwardingRuleAggregatedList for lists of forwarding rules.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message ForwardingRuleList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of ForwardingRule resources.
    repeated ForwardingRule items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message ForwardingRulesScopedList {
    // List of forwarding rules contained in this scope.
    repeated ForwardingRule forwardingRules = 1;
    // Informational warning which replaces the list of forwarding rules when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message GlobalSetLabelsRequest {
    // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a get() request to the resource to get the latest fingerprint.
    string labelFingerprint = 1;
    // A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, "webserver-frontend": "images". A label value can also be empty (e.g. "my-label": "").
    map<string, string> labels = 2;
}

message GuestOsFeature {
    // The type of supported feature. Currently only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image.
    enum GuestOsFeature_Type {
        GUESTOSFEATURE_TYPE_FEATURE_TYPE_UNSPECIFIED = 0;
        GUESTOSFEATURE_TYPE_MULTI_IP_SUBNET = 1;
        GUESTOSFEATURE_TYPE_VIRTIO_SCSI_MULTIQUEUE = 2;
        GUESTOSFEATURE_TYPE_WINDOWS = 3;
    }
    GuestOsFeature_Type type = 1;
}

message HTTPHealthCheck {
    // The value of the host header in the HTTP health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
    string host = 1;
    // The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
    int32 port = 2;
    // Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
    string portName = 3;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum HTTPHealthCheck_ProxyHeader {
        HTTPHEALTHCHECK_PROXYHEADER_NONE = 0;
        HTTPHEALTHCHECK_PROXYHEADER_PROXY_V1 = 1;
    }
    HTTPHealthCheck_ProxyHeader proxyHeader = 4;
    // The request path of the HTTP health check request. The default value is /.
    string requestPath = 5;
}

message HTTPSHealthCheck {
    // The value of the host header in the HTTPS health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
    string host = 1;
    // The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
    int32 port = 2;
    // Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
    string portName = 3;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum HTTPSHealthCheck_ProxyHeader {
        HTTPSHEALTHCHECK_PROXYHEADER_NONE = 0;
        HTTPSHEALTHCHECK_PROXYHEADER_PROXY_V1 = 1;
    }
    HTTPSHealthCheck_ProxyHeader proxyHeader = 4;
    // The request path of the HTTPS health check request. The default value is /.
    string requestPath = 5;
}

message HealthCheck {
    // How often (in seconds) to send a health check. The default value is 5 seconds.
    int32 checkIntervalSec = 1;
    // [Output Only] Creation timestamp in 3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
    int32 healthyThreshold = 4;
    HTTPHealthCheck httpHealthCheck = 5;
    HTTPSHealthCheck httpsHealthCheck = 6;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 7;
    // Type of the resource.
    string kind = 8;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 10;
    SSLHealthCheck sslHealthCheck = 11;
    TCPHealthCheck tcpHealthCheck = 12;
    // How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
    int32 timeoutSec = 13;
    // Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
    enum HealthCheck_Type {
        HEALTHCHECK_TYPE_HTTP = 0;
        HEALTHCHECK_TYPE_HTTPS = 1;
        HEALTHCHECK_TYPE_INVALID = 2;
        HEALTHCHECK_TYPE_SSL = 3;
        HEALTHCHECK_TYPE_TCP = 4;
        HEALTHCHECK_TYPE_UDP = 5;
    }
    HealthCheck_Type type = 14;
    UDPHealthCheck udpHealthCheck = 15;
    // A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
    int32 unhealthyThreshold = 16;
}

message HealthCheckList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of HealthCheck resources.
    repeated HealthCheck items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message HealthCheckReference {
    string healthCheck = 1;
}

message HealthStatus {
    // Health state of the instance.
    enum HealthStatus_HealthState {
        HEALTHSTATUS_HEALTHSTATE_HEALTHY = 0;
        HEALTHSTATUS_HEALTHSTATE_UNHEALTHY = 1;
    }
    HealthStatus_HealthState healthState = 1;
    // URL of the instance resource.
    string instance = 2;
    // The IP address represented by this resource.
    string ipAddress = 3;
    // The port on the instance.
    int32 port = 4;
}

message HostRule {
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 1;
    // The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or ..
    repeated string hosts = 2;
    // The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
    string pathMatcher = 3;
}

message HttpHealthCheck {
    // How often (in seconds) to send a health check. The default value is 5 seconds.
    int32 checkIntervalSec = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
    int32 healthyThreshold = 4;
    // The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
    string host = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // [Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health checks.
    string kind = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // The TCP port number for the HTTP health check request. The default value is 80.
    int32 port = 9;
    // The request path of the HTTP health check request. The default value is /.
    string requestPath = 10;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 11;
    // How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
    int32 timeoutSec = 12;
    // A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
    int32 unhealthyThreshold = 13;
}

message HttpHealthCheckList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of HttpHealthCheck resources.
    repeated HttpHealthCheck items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message HttpsHealthCheck {
    // How often (in seconds) to send a health check. The default value is 5 seconds.
    int32 checkIntervalSec = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
    int32 healthyThreshold = 4;
    // The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
    string host = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // Type of the resource.
    string kind = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // The TCP port number for the HTTPS health check request. The default value is 443.
    int32 port = 9;
    // The request path of the HTTPS health check request. The default value is "/".
    string requestPath = 10;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 11;
    // How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have a greater value than checkIntervalSec.
    int32 timeoutSec = 12;
    // A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
    int32 unhealthyThreshold = 13;
}

message HttpsHealthCheckList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of HttpsHealthCheck resources.
    repeated HttpsHealthCheck items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message Image {
    // Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
    string archiveSizeBytes = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // The deprecation status associated with this image.
    DeprecationStatus deprecated = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // Size of the image when restored onto a persistent disk (in GB).
    string diskSizeGb = 5;
    // The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
    string family = 6;
    // A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.
    // 
    // For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image.
    repeated GuestOsFeature guestOsFeatures = 7;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 8;
    // Encrypts the image using a customer-supplied encryption key.
    // 
    // After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).
    // 
    // Customer-supplied encryption keys do not protect access to metadata of the disk.
    // 
    // If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
    CustomerEncryptionKey imageEncryptionKey = 9;
    // [Output Only] Type of the resource. Always compute#image for images.
    string kind = 10;
    // A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    // 
    // To see the latest fingerprint, make a get() request to retrieve an image.
    string labelFingerprint = 11;
    // Labels to apply to this image. These can be later modified by the setLabels method.
    map<string, string> labels = 12;
    // Any applicable license URI.
    repeated string licenses = 13;
    // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 14;
    // The parameters of the raw disk image.
    message RawDisk {
            // The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
    enum RawDisk_ContainerType {
            RAWDISK_CONTAINERTYPE_TAR = 0;
        }
        RawDisk_ContainerType containerType = 1;
            // An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.
    string sha1Checksum = 2;
            // The full Google Cloud Storage URL where the disk image is stored. You must provide either this property or the sourceDisk property but not both.
    string source = 3;
    }
    RawDisk rawDisk = 15;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 16;
    // URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
    // - projects/project/zones/zone/disks/disk 
    // - zones/zone/disks/disk
    string sourceDisk = 17;
    // The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
    CustomerEncryptionKey sourceDiskEncryptionKey = 18;
    // The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
    string sourceDiskId = 19;
    // URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
    // - this property, or  
    // - the rawDisk.source property, or  
    // - the sourceDisk property   in order to create an image.
    string sourceImage = 20;
    // The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
    CustomerEncryptionKey sourceImageEncryptionKey = 21;
    // [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
    string sourceImageId = 22;
    // The type of the image used to create this disk. The default and only value is RAW
    enum Image_SourceType {
        IMAGE_SOURCETYPE_RAW = 0;
    }
    Image_SourceType sourceType = 23;
    // [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
    enum Image_Statu {
        IMAGE_STATU_FAILED = 0;
        IMAGE_STATU_PENDING = 1;
        IMAGE_STATU_READY = 2;
    }
    Image_Statu status = 24;
}

message ImageList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Image resources.
    repeated Image items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message Instance {
    // Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding.
    bool canIpForward = 1;
    // [Output Only] The CPU platform used by this instance.
    string cpuPlatform = 2;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // Array of disks associated with this instance. Persistent disks must be created before you can assign them.
    repeated AttachedDisk disks = 5;
    // List of the type and count of accelerator cards attached to the instance.
    repeated AcceleratorConfig guestAccelerators = 6;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 7;
    // [Output Only] Type of the resource. Always compute#instance for instances.
    string kind = 8;
    // A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
    // 
    // To see the latest fingerprint, make get() request to the instance.
    string labelFingerprint = 9;
    // Labels to apply to this instance. These can be later modified by the setLabels method.
    map<string, string> labels = 10;
    // Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type:
    // 
    // zones/us-central1-f/machineTypes/n1-standard-1 
    // 
    // To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
    // 
    // zones/zone/machineTypes/custom-CPUS-MEMORY 
    // 
    // For example: zones/us-central1-f/machineTypes/custom-4-5120 
    // 
    // For a full list of restrictions, read the Specifications for custom machine types.
    string machineType = 11;
    // The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
    Metadata metadata = 12;
    // Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
    string minCpuPlatform = 13;
    // The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 14;
    // An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
    repeated NetworkInterface networkInterfaces = 15;
    // Sets the scheduling options for this instance.
    Scheduling scheduling = 16;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 17;
    // A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
    // 
    // Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
    repeated ServiceAccount serviceAccounts = 18;
    // [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
    bool startRestricted = 19;
    // [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED, and TERMINATED.
    enum Instance_Statu {
        INSTANCE_STATU_PROVISIONING = 0;
        INSTANCE_STATU_RUNNING = 1;
        INSTANCE_STATU_STAGING = 2;
        INSTANCE_STATU_STOPPED = 3;
        INSTANCE_STATU_STOPPING = 4;
        INSTANCE_STATU_SUSPENDED = 5;
        INSTANCE_STATU_SUSPENDING = 6;
        INSTANCE_STATU_TERMINATED = 7;
    }
    Instance_Statu status = 20;
    // [Output Only] An optional, human-readable explanation of the status.
    string statusMessage = 21;
    // A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
    Tags tags = 22;
    // [Output Only] URL of the zone where the instance resides.
    string zone = 23;
}

message InstanceAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstancesScopedList resources.
    map<string, InstancesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#instanceAggregatedList for aggregated lists of Instance resources.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroup {
    // [Output Only] The creation timestamp for this instance group in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
    string fingerprint = 3;
    // [Output Only] A unique identifier for this instance group, generated by the server.
    string id = 4;
    // [Output Only] The resource type, which is always compute#instanceGroup for instance groups.
    string kind = 5;
    // The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
    string name = 6;
    // Assigns a name to a port number. For example: {name: "http", port: 80}
    // 
    // This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] 
    // 
    // Named ports apply to all instances in this instance group.
    repeated NamedPort namedPorts = 7;
    // The URL of the network to which all instances in the instance group belong.
    string network = 8;
    // The URL of the region where the instance group is located (for regional resources).
    string region = 9;
    // [Output Only] The URL for this instance group. The server generates this URL.
    string selfLink = 10;
    // [Output Only] The total number of instances in the instance group.
    int32 size = 11;
    // The URL of the subnetwork to which all instances in the instance group belong.
    string subnetwork = 12;
    // [Output Only] The URL of the zone where the instance group is located (for zonal resources).
    string zone = 13;
}

message InstanceGroupAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroupsScopedList resources.
    map<string, InstanceGroupsScopedList> items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupAggregatedList for aggregated lists of instance groups.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroupList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroup resources.
    repeated InstanceGroup items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupList for instance group lists.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroupManager {
    // The autohealing policy for this managed instance group. You can specify only one value.
    repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;
    // The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
    string baseInstanceName = 2;
    // [Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
    string creationTimestamp = 3;
    // [Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
    InstanceGroupManagerActionsSummary currentActions = 4;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 5;
    // Policy valid only for regional managed instance groups.
    DistributionPolicy distributionPolicy = 6;
    // The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
    enum InstanceGroupManager_FailoverAction {
        INSTANCEGROUPMANAGER_FAILOVERACTION_NO_FAILOVER = 0;
        INSTANCEGROUPMANAGER_FAILOVERACTION_UNKNOWN = 1;
    }
    InstanceGroupManager_FailoverAction failoverAction = 7;
    // [Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.
    string fingerprint = 8;
    // [Output Only] A unique identifier for this resource type. The server generates this identifier.
    string id = 9;
    // [Output Only] The URL of the Instance Group resource.
    string instanceGroup = 10;
    // The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
    string instanceTemplate = 11;
    // [Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
    string kind = 12;
    // The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
    string name = 13;
    // Named ports configured for the Instance Groups complementary to this Instance Group Manager.
    repeated NamedPort namedPorts = 14;
    // [Output Only] The list of instance actions and the number of instances in this managed instance group that are pending for each of those actions.
    InstanceGroupManagerPendingActionsSummary pendingActions = 15;
    // [Output Only] The URL of the region where the managed instance group resides (for regional resources).
    string region = 16;
    // [Output Only] The URL for this managed instance group. The server defines this URL.
    string selfLink = 17;
    // [Output Only] The service account to be used as credentials for all operations performed by the managed instance group on instances. The service accounts needs all permissions required to create and delete instances. By default, the service account {projectNumber}@cloudservices.gserviceaccount.com is used.
    string serviceAccount = 18;
    // The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
    repeated string targetPools = 19;
    // The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
    int32 targetSize = 20;
    // The update policy for this managed instance group.
    InstanceGroupManagerUpdatePolicy updatePolicy = 21;
    // Versions supported by this IGM. User should set this field if they need fine-grained control over how many instances in each version are run by this IGM. Versions are keyed by instanceTemplate. Every instanceTemplate can appear at most once. This field overrides instanceTemplate field. If both instanceTemplate and versions are set, the user receives a warning. "instanceTemplate: X" is semantically equivalent to "versions [ { instanceTemplate: X } ]". Exactly one version must have targetSize field left unset. Size of such a version will be calculated automatically.
    repeated InstanceGroupManagerVersion versions = 22;
    // [Output Only] The URL of the zone where the managed instance group is located (for zonal resources).
    string zone = 23;
}

message InstanceGroupManagerActionsSummary {
    // [Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
    int32 abandoning = 1;
    // [Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully.
    // 
    // If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
    int32 creating = 2;
    // [Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
    int32 creatingWithoutRetries = 3;
    // [Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
    int32 deleting = 4;
    // [Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
    int32 none = 5;
    // [Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
    int32 recreating = 6;
    // [Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
    int32 refreshing = 7;
    // [Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
    int32 restarting = 8;
    // [Output Only] The number of instances in the managed instance group that are being verified. More details regarding verification process are covered in the documentation of ManagedInstance.InstanceAction.VERIFYING enum field.
    int32 verifying = 9;
}

message InstanceGroupManagerAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroupManagersScopedList resources.
    map<string, InstanceGroupManagersScopedList> items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupManagerAggregatedList for an aggregated list of managed instance groups.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroupManagerAutoHealingPolicy {
    // The URL for the health check that signals autohealing.
    string healthCheck = 1;
    // The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
    int32 initialDelaySec = 2;
}

message InstanceGroupManagerList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroupManager resources.
    repeated InstanceGroupManager items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroupManagerPendingActionsSummary {
    // [Output Only] The number of instances in the managed instance group that are pending to be created.
    int32 creating = 1;
    // [Output Only] The number of instances in the managed instance group that are pending to be deleted.
    int32 deleting = 2;
    // [Output Only] The number of instances in the managed instance group that are pending to be recreated.
    int32 recreating = 3;
    // [Output Only] The number of instances in the managed instance group that are pending to be restarted.
    int32 restarting = 4;
}

message InstanceGroupManagerUpdatePolicy {
    // Maximum number of instances that can be created above the InstanceGroupManager.targetSize during the update process. By default, a fixed value of 1 is used. Using maxSurge > 0 will cause instance names to change during the update process. At least one of { maxSurge, maxUnavailable } must be greater than 0.
    FixedOrPercent maxSurge = 1;
    // Maximum number of instances that can be unavailable during the update process. The instance is considered available if all of the following conditions are satisfied: 1. Instance's status is RUNNING. 2. Instance's liveness health check result was observed to be HEALTHY at least once. By default, a fixed value of 1 is used. At least one of { maxSurge, maxUnavailable } must be greater than 0.
    FixedOrPercent maxUnavailable = 2;
    // Minimum number of seconds to wait for after a newly created instance becomes available. This value must be from range [0, 3600].
    int32 minReadySec = 3;
    // Minimal action to be taken on an instance. The order of action types is: RESTART < REPLACE.
    enum InstanceGroupManagerUpdatePolicy_MinimalAction {
        INSTANCEGROUPMANAGERUPDATEPOLICY_MINIMALACTION_REPLACE = 0;
        INSTANCEGROUPMANAGERUPDATEPOLICY_MINIMALACTION_RESTART = 1;
    }
    InstanceGroupManagerUpdatePolicy_MinimalAction minimalAction = 4;
    enum InstanceGroupManagerUpdatePolicy_Type {
        INSTANCEGROUPMANAGERUPDATEPOLICY_TYPE_OPPORTUNISTIC = 0;
        INSTANCEGROUPMANAGERUPDATEPOLICY_TYPE_PROACTIVE = 1;
    }
    InstanceGroupManagerUpdatePolicy_Type type = 5;
}

message InstanceGroupManagerVersion {
    string instanceTemplate = 1;
    // Name of the version. Unique among all versions in the scope of this managed instance group.
    string name = 2;
    // Intended number of instances that are created from instanceTemplate. The final number of instances created from instanceTemplate will be equal to: * if expressed as fixed number: min(targetSize.fixed, instanceGroupManager.targetSize), * if expressed as percent: ceiling(targetSize.percent * InstanceGroupManager.targetSize). If unset, this version will handle all the remaining instances.
    FixedOrPercent targetSize = 3;
}

message InstanceGroupManagersAbandonInstancesRequest {
    // The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message InstanceGroupManagersDeleteInstancesRequest {
    // The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message InstanceGroupManagersListManagedInstancesResponse {
    // [Output Only] The list of instances in the managed instance group.
    repeated ManagedInstance managedInstances = 1;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 2;
}

message InstanceGroupManagersRecreateInstancesRequest {
    // The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message InstanceGroupManagersResizeAdvancedRequest {
    // If this flag is true, the managed instance group attempts to create all instances initiated by this resize request only once. If there is an error during creation, the managed instance group does not retry create this instance, and we will decrease the targetSize of the request instead. If the flag is false, the group attemps to recreate each instance continuously until it succeeds.
    // 
    // This flag matters only in the first attempt of creation of an instance. After an instance is successfully created while this flag is enabled, the instance behaves the same way as all the other instances created with a regular resize request. In particular, if a running instance dies unexpectedly at a later time and needs to be recreated, this mode does not affect the recreation behavior in that scenario.
    // 
    // This flag is applicable only to the current resize request. It does not influence other resize requests in any way.
    // 
    // You can see which instances is being creating in which mode by calling the get or listManagedInstances API.
    bool noCreationRetries = 1;
    // The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.
    int32 targetSize = 2;
}

message InstanceGroupManagersScopedList {
    // [Output Only] The list of managed instance groups that are contained in the specified project and zone.
    repeated InstanceGroupManager instanceGroupManagers = 1;
    // [Output Only] The warning that replaces the list of managed instance groups when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message InstanceGroupManagersSetAutoHealingRequest {
    repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;
}

message InstanceGroupManagersSetInstanceTemplateRequest {
    // The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
    string instanceTemplate = 1;
}

message InstanceGroupManagersSetTargetPoolsRequest {
    // The fingerprint of the target pools information. Use this optional property to prevent conflicts when multiple users change the target pools settings concurrently. Obtain the fingerprint with the instanceGroupManagers.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.
    string fingerprint = 1;
    // The list of target pool URLs that instances in this managed instance group belong to. The managed instance group applies these target pools to all of the instances in the group. Existing instances and new instances in the group all receive these target pool settings.
    repeated string targetPools = 2;
}

message InstanceGroupsAddInstancesRequest {
    // The list of instances to add to the instance group.
    repeated InstanceReference instances = 1;
}

message InstanceGroupsListInstances {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceWithNamedPorts resources.
    repeated InstanceWithNamedPorts items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupsListInstances for the list of instances in the specified instance group.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceGroupsListInstancesRequest {
    // A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state.
    enum InstanceGroupsListInstancesRequest_InstanceState {
        INSTANCEGROUPSLISTINSTANCESREQUEST_INSTANCESTATE_ALL = 0;
        INSTANCEGROUPSLISTINSTANCESREQUEST_INSTANCESTATE_RUNNING = 1;
    }
    InstanceGroupsListInstancesRequest_InstanceState instanceState = 1;
}

message InstanceGroupsRemoveInstancesRequest {
    // The list of instances to remove from the instance group.
    repeated InstanceReference instances = 1;
}

message InstanceGroupsScopedList {
    // [Output Only] The list of instance groups that are contained in this scope.
    repeated InstanceGroup instanceGroups = 1;
    // [Output Only] An informational warning that replaces the list of instance groups when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message InstanceGroupsSetNamedPortsRequest {
    // The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.
    string fingerprint = 1;
    // The list of named ports to set for this instance group.
    repeated NamedPort namedPorts = 2;
}

message InstanceList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Instance resources.
    repeated Instance items = 2;
    // [Output Only] Type of resource. Always compute#instanceList for lists of Instance resources.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceListReferrers {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Reference resources.
    repeated Reference items = 2;
    // [Output Only] Type of resource. Always compute#instanceListReferrers for lists of Instance referrers.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceMoveRequest {
    // The URL of the destination zone to move the instance. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone 
    // - projects/project/zones/zone 
    // - zones/zone
    string destinationZone = 1;
    // The URL of the target instance to move. This can be a full or partial URL. For example, the following are all valid URLs to an instance:  
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 
    // - projects/project/zones/zone/instances/instance 
    // - zones/zone/instances/instance
    string targetInstance = 2;
}

message InstanceProperties {
    // Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
    bool canIpForward = 1;
    // An optional text description for the instances that are created from this instance template.
    string description = 2;
    // An array of disks that are associated with the instances that are created from this template.
    repeated AttachedDisk disks = 3;
    // A list of guest accelerator cards' type and count to use for instances created from the instance template.
    repeated AcceleratorConfig guestAccelerators = 4;
    // Labels to apply to instances that are created from this template.
    map<string, string> labels = 5;
    // The machine type to use for instances that are created from this template.
    string machineType = 6;
    // The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
    Metadata metadata = 7;
    // Minimum cpu/platform to be used by this instance. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
    string minCpuPlatform = 8;
    // An array of network access configurations for this interface.
    repeated NetworkInterface networkInterfaces = 9;
    // Specifies the scheduling options for the instances that are created from this template.
    Scheduling scheduling = 10;
    // A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.
    repeated ServiceAccount serviceAccounts = 11;
    // A list of tags to apply to the instances that are created from this template. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
    Tags tags = 12;
}

message InstanceReference {
    // The URL for a specific instance.
    string instance = 1;
}

message InstanceTemplate {
    // [Output Only] The creation timestamp for this instance template in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] A unique identifier for this instance template. The server defines this identifier.
    string id = 3;
    // [Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
    string kind = 4;
    // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 5;
    // The instance properties for this instance template.
    InstanceProperties properties = 6;
    // [Output Only] The URL for this instance template. The server defines this URL.
    string selfLink = 7;
}

message InstanceTemplateList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceTemplate resources.
    repeated InstanceTemplate items = 2;
    // [Output Only] The resource type, which is always compute#instanceTemplatesListResponse for instance template lists.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InstanceWithNamedPorts {
    // [Output Only] The URL of the instance.
    string instance = 1;
    // [Output Only] The named ports that belong to this instance group.
    repeated NamedPort namedPorts = 2;
    // [Output Only] The status of the instance.
    enum InstanceWithNamedPorts_Statu {
        INSTANCEWITHNAMEDPORTS_STATU_PROVISIONING = 0;
        INSTANCEWITHNAMEDPORTS_STATU_RUNNING = 1;
        INSTANCEWITHNAMEDPORTS_STATU_STAGING = 2;
        INSTANCEWITHNAMEDPORTS_STATU_STOPPED = 3;
        INSTANCEWITHNAMEDPORTS_STATU_STOPPING = 4;
        INSTANCEWITHNAMEDPORTS_STATU_SUSPENDED = 5;
        INSTANCEWITHNAMEDPORTS_STATU_SUSPENDING = 6;
        INSTANCEWITHNAMEDPORTS_STATU_TERMINATED = 7;
    }
    InstanceWithNamedPorts_Statu status = 3;
}

message InstancesScopedList {
    // [Output Only] List of instances contained in this scope.
    repeated Instance instances = 1;
    // [Output Only] Informational warning which replaces the list of instances when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message InstancesSetLabelsRequest {
    // Fingerprint of the previous set of labels for this resource, used to prevent conflicts. Provide the latest fingerprint value when making a request to add or change labels.
    string labelFingerprint = 1;
    map<string, string> labels = 2;
}

message InstancesSetMachineResourcesRequest {
    // List of the type and count of accelerator cards attached to the instance.
    repeated AcceleratorConfig guestAccelerators = 1;
}

message InstancesSetMachineTypeRequest {
    // Full or partial URL of the machine type resource. See Machine Types for a full list of machine types. For example: zones/us-central1-f/machineTypes/n1-standard-1
    string machineType = 1;
}

message InstancesSetMinCpuPlatformRequest {
    // Minimum cpu/platform this instance should be started at.
    string minCpuPlatform = 1;
}

message InstancesSetServiceAccountRequest {
    // Email address of the service account.
    string email = 1;
    // The list of scopes to be made available for this service account.
    repeated string scopes = 2;
}

message InstancesStartWithEncryptionKeyRequest {
    // Array of disks associated with this instance that are protected with a customer-supplied encryption key.
    // 
    // In order to start the instance, the disk url and its corresponding key must be provided.
    // 
    // If the disk is not protected with a customer-supplied encryption key it should not be specified.
    repeated CustomerEncryptionKeyProtectedDisk disks = 1;
}

message Interconnect {
    // Administrative status of the interconnect. When this is set to ?true?, the Interconnect is functional and may carry traffic (assuming there are functional InterconnectAttachments and other requirements are satisfied). When set to ?false?, no packets will be carried over this Interconnect and no BGP routes will be exchanged over it. By default, it is set to ?true?.
    bool adminEnabled = 1;
    // [Output Only] List of CircuitInfo objects, that describe the individual circuits in this LAG.
    repeated InterconnectCircuitInfo circuitInfos = 2;
    // [Output Only] URL to retrieve the Letter Of Authority and Customer Facility Assignment (LOA-CFA) documentation relating to this Interconnect. This documentation authorizes the facility provider to connect to the specified crossconnect ports.
    string connectionAuthorization = 3;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 4;
    // Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
    string customerName = 5;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 6;
    // [Output Only] List of outages expected for this Interconnect.
    repeated InterconnectOutageNotification expectedOutages = 7;
    // [Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
    string googleIpAddress = 8;
    // [Output Only] Google reference ID; to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.
    string googleReferenceId = 9;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 10;
    // [Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
    repeated string interconnectAttachments = 11;
    enum Interconnect_InterconnectType {
        INTERCONNECT_INTERCONNECTTYPE_IT_PRIVATE = 0;
    }
    Interconnect_InterconnectType interconnectType = 12;
    // [Output Only] Type of the resource. Always compute#interconnect for interconnects.
    string kind = 13;
    enum Interconnect_LinkType {
        INTERCONNECT_LINKTYPE_LINK_TYPE_ETHERNET_10G_LR = 0;
    }
    Interconnect_LinkType linkType = 14;
    // URL of the InterconnectLocation object that represents where this connection is to be provisioned.
    string location = 15;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 16;
    // Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Stackdriver logs alerting and Cloud Notifications.
    string nocContactEmail = 17;
    // [Output Only] The current status of whether or not this Interconnect is functional.
    enum Interconnect_OperationalStatu {
        INTERCONNECT_OPERATIONALSTATU_OS_ACTIVE = 0;
        INTERCONNECT_OPERATIONALSTATU_OS_UNPROVISIONED = 1;
    }
    Interconnect_OperationalStatu operationalStatus = 18;
    // [Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests.
    string peerIpAddress = 19;
    // [Output Only] Number of links actually provisioned in this interconnect.
    int32 provisionedLinkCount = 20;
    // Target number of physical links in the link bundle, as requested by the customer.
    int32 requestedLinkCount = 21;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 22;
}

message InterconnectAttachment {
    // [Output Only] IPv4 address + prefix length to be configured on Cloud Router Interface for this interconnect attachment.
    string cloudRouterIpAddress = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // [Output Only] IPv4 address + prefix length to be configured on the customer router subinterface for this interconnect attachment.
    string customerRouterIpAddress = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // [Output Only] Google reference ID, to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.
    string googleReferenceId = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // URL of the underlying Interconnect object that this attachment's traffic will traverse through.
    string interconnect = 7;
    // [Output Only] Type of the resource. Always compute#interconnectAttachment for interconnect attachments.
    string kind = 8;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // [Output Only] The current status of whether or not this interconnect attachment is functional.
    enum InterconnectAttachment_OperationalStatu {
        INTERCONNECTATTACHMENT_OPERATIONALSTATU_OS_ACTIVE = 0;
        INTERCONNECTATTACHMENT_OPERATIONALSTATU_OS_UNPROVISIONED = 1;
    }
    InterconnectAttachment_OperationalStatu operationalStatus = 10;
    // [Output Only] Information specific to a Private InterconnectAttachment. Only populated if the interconnect that this is attached is of type IT_PRIVATE.
    InterconnectAttachmentPrivateInfo privateInterconnectInfo = 11;
    // [Output Only] URL of the region where the regional interconnect attachment resides.
    string region = 12;
    // URL of the cloud router to be used for dynamic routing. This router must be in the same region as this InterconnectAttachment. The InterconnectAttachment will automatically connect the Interconnect to the network & region within which the Cloud Router is configured.
    string router = 13;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 14;
}

message InterconnectAttachmentAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InterconnectAttachmentsScopedList resources.
    map<string, InterconnectAttachmentsScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#interconnectAttachmentAggregatedList for aggregated lists of interconnect attachments.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InterconnectAttachmentList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InterconnectAttachment resources.
    repeated InterconnectAttachment items = 2;
    // [Output Only] Type of resource. Always compute#interconnectAttachmentList for lists of interconnect attachments.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InterconnectAttachmentPrivateInfo {
    // [Output Only] 802.1q encapsulation tag to be used for traffic between Google and the customer, going to and from this network and region.
    uint32 tag8021q = 1;
}

message InterconnectAttachmentsScopedList {
    // List of interconnect attachments contained in this scope.
    repeated InterconnectAttachment interconnectAttachments = 1;
    // Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message InterconnectCircuitInfo {
    // Customer-side demarc ID for this circuit. This will only be set if it was provided by the Customer to Google during circuit turn-up.
    string customerDemarcId = 1;
    // Google-assigned unique ID for this circuit. Assigned at circuit turn-up.
    string googleCircuitId = 2;
    // Google-side demarc ID for this circuit. Assigned at circuit turn-up and provided by Google to the customer in the LOA.
    string googleDemarcId = 3;
}

message InterconnectList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Interconnect resources.
    repeated Interconnect items = 2;
    // [Output Only] Type of resource. Always compute#interconnectList for lists of interconnects.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InterconnectLocation {
    // [Output Only] The postal address of the Point of Presence, each line in the address is separated by a newline character.
    string address = 1;
    // Availability zone for this location. Within a city, maintenance will not be simultaneously scheduled in more than one availability zone. Example: "zone1" or "zone2".
    string availabilityZone = 2;
    // City designator used by the Interconnect UI to locate this InterconnectLocation within the Continent. For example: "Chicago, IL", "Amsterdam, Netherlands".
    string city = 3;
    // Continent for this location. Used by the location picker in the Interconnect UI.
    enum InterconnectLocation_Continent {
        INTERCONNECTLOCATION_CONTINENT_C_AFRICA = 0;
        INTERCONNECTLOCATION_CONTINENT_C_ASIA_PAC = 1;
        INTERCONNECTLOCATION_CONTINENT_C_EUROPE = 2;
        INTERCONNECTLOCATION_CONTINENT_C_NORTH_AMERICA = 3;
        INTERCONNECTLOCATION_CONTINENT_C_SOUTH_AMERICA = 4;
    }
    InterconnectLocation_Continent continent = 4;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 5;
    // [Output Only] An optional description of the resource.
    string description = 6;
    // [Output Only] The name of the provider for this facility (e.g., EQUINIX).
    string facilityProvider = 7;
    // [Output Only] A provider-assigned Identifier for this facility (e.g., Ashburn-DC1).
    string facilityProviderFacilityId = 8;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 9;
    // [Output Only] Type of the resource. Always compute#interconnectLocation for interconnect locations.
    string kind = 10;
    // [Output Only] Name of the resource.
    string name = 11;
    // [Output Only] The peeringdb identifier for this facility (corresponding with a netfac type in peeringdb).
    string peeringdbFacilityId = 12;
    // [Output Only] A list of InterconnectLocation.RegionInfo objects, that describe parameters pertaining to the relation between this InterconnectLocation and various Google Cloud regions.
    repeated InterconnectLocationRegionInfo regionInfos = 13;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 14;
}

message InterconnectLocationList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InterconnectLocation resources.
    repeated InterconnectLocation items = 2;
    // [Output Only] Type of resource. Always compute#interconnectLocationList for lists of interconnect locations.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message InterconnectLocationRegionInfo {
    // Expected round-trip time in milliseconds, from this InterconnectLocation to a VM in this region.
    string expectedRttMs = 1;
    // Identifies the network presence of this location.
    enum InterconnectLocationRegionInfo_LocationPresence {
        INTERCONNECTLOCATIONREGIONINFO_LOCATIONPRESENCE_LP_GLOBAL = 0;
        INTERCONNECTLOCATIONREGIONINFO_LOCATIONPRESENCE_LP_LOCAL_REGION = 1;
    }
    InterconnectLocationRegionInfo_LocationPresence locationPresence = 2;
    // URL for the region of this location.
    string region = 3;
    // Scope key for the region of this location.
    string regionKey = 4;
}

message InterconnectOutageNotification {
    // Iff issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs that will be affected.
    repeated string affectedCircuits = 1;
    // Short user-visible description of the purpose of the outage.
    string description = 2;
    string endTime = 3;
    enum InterconnectOutageNotification_IssueType {
        INTERCONNECTOUTAGENOTIFICATION_ISSUETYPE_IT_OUTAGE = 0;
        INTERCONNECTOUTAGENOTIFICATION_ISSUETYPE_IT_PARTIAL_OUTAGE = 1;
    }
    InterconnectOutageNotification_IssueType issueType = 4;
    // Unique identifier for this outage notification.
    string name = 5;
    enum InterconnectOutageNotification_Source {
        INTERCONNECTOUTAGENOTIFICATION_SOURCE_NSRC_GOOGLE = 0;
    }
    InterconnectOutageNotification_Source source = 6;
    // Scheduled start and end times for the outage (milliseconds since Unix epoch).
    string startTime = 7;
    enum InterconnectOutageNotification_State {
        INTERCONNECTOUTAGENOTIFICATION_STATE_NS_ACTIVE = 0;
        INTERCONNECTOUTAGENOTIFICATION_STATE_NS_CANCELED = 1;
    }
    InterconnectOutageNotification_State state = 8;
}

message License {
    // [Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.
    bool chargesUseFee = 1;
    // [Output Only] Type of resource. Always compute#license for licenses.
    string kind = 2;
    // [Output Only] Name of the resource. The name is 1-63 characters long and complies with RFC1035.
    string name = 3;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 4;
}

message LogConfig {
    // Cloud audit options.
    LogConfigCloudAuditOptions cloudAudit = 1;
    // Counter options.
    LogConfigCounterOptions counter = 2;
    // Data access options.
    LogConfigDataAccessOptions dataAccess = 3;
}

message LogConfigCloudAuditOptions {
    // Information used by the Cloud Audit Logging pipeline.
    AuthorizationLoggingOptions authorizationLoggingOptions = 1;
    // The log_name to populate in the Cloud Audit Record.
    enum LogConfigCloudAuditOptions_LogName {
        LOGCONFIGCLOUDAUDITOPTIONS_LOGNAME_ADMIN_ACTIVITY = 0;
        LOGCONFIGCLOUDAUDITOPTIONS_LOGNAME_DATA_ACCESS = 1;
        LOGCONFIGCLOUDAUDITOPTIONS_LOGNAME_UNSPECIFIED_LOG_NAME = 2;
    }
    LogConfigCloudAuditOptions_LogName logName = 2;
}

message LogConfigCounterOptions {
    // The field value to attribute.
    string field = 1;
    // The metric to update.
    string metric = 2;
}

message LogConfigDataAccessOptions {
    // Whether Gin logging should happen in a fail-closed manner at the caller. This is relevant only in the LocalIAM implementation, for now.
    enum LogConfigDataAccessOptions_LogMode {
        LOGCONFIGDATAACCESSOPTIONS_LOGMODE_LOG_FAIL_CLOSED = 0;
        LOGCONFIGDATAACCESSOPTIONS_LOGMODE_LOG_MODE_UNSPECIFIED = 1;
    }
    LogConfigDataAccessOptions_LogMode logMode = 1;
}

message MachineType {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // [Output Only] The deprecation status associated with this machine type.
    DeprecationStatus deprecated = 2;
    // [Output Only] An optional textual description of the resource.
    string description = 3;
    // [Output Only] The number of virtual CPUs that are available to the instance.
    int32 guestCpus = 4;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 5;
    // [Output Only] Whether this machine type has a shared CPU. See Shared-core machine types for more information.
    bool isSharedCpu = 6;
    // [Output Only] The type of the resource. Always compute#machineType for machine types.
    string kind = 7;
    // [Output Only] Maximum persistent disks allowed.
    int32 maximumPersistentDisks = 8;
    // [Output Only] Maximum total persistent disks size (GB) allowed.
    string maximumPersistentDisksSizeGb = 9;
    // [Output Only] The amount of physical memory available to the instance, defined in MB.
    int32 memoryMb = 10;
    // [Output Only] Name of the resource.
    string name = 11;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 12;
    // [Output Only] The name of the zone where the machine type resides, such as us-central1-a.
    string zone = 13;
}

message MachineTypeAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of MachineTypesScopedList resources.
    map<string, MachineTypesScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#machineTypeAggregatedList for aggregated lists of machine types.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message MachineTypeList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of MachineType resources.
    repeated MachineType items = 2;
    // [Output Only] Type of resource. Always compute#machineTypeList for lists of machine types.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message MachineTypesScopedList {
    // [Output Only] List of machine types contained in this scope.
    repeated MachineType machineTypes = 1;
    // [Output Only] An informational warning that appears when the machine types list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message ManagedInstance {
    // [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: 
    // - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. 
    // - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. 
    // - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. 
    // - RECREATING The managed instance group is recreating this instance. 
    // - DELETING The managed instance group is permanently deleting this instance. 
    // - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. 
    // - RESTARTING The managed instance group is restarting the instance. 
    // - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance.
    enum ManagedInstance_CurrentAction {
        MANAGEDINSTANCE_CURRENTACTION_ABANDONING = 0;
        MANAGEDINSTANCE_CURRENTACTION_CREATING = 1;
        MANAGEDINSTANCE_CURRENTACTION_CREATING_WITHOUT_RETRIES = 2;
        MANAGEDINSTANCE_CURRENTACTION_DELETING = 3;
        MANAGEDINSTANCE_CURRENTACTION_NONE = 4;
        MANAGEDINSTANCE_CURRENTACTION_RECREATING = 5;
        MANAGEDINSTANCE_CURRENTACTION_REFRESHING = 6;
        MANAGEDINSTANCE_CURRENTACTION_RESTARTING = 7;
        MANAGEDINSTANCE_CURRENTACTION_VERIFYING = 8;
    }
    ManagedInstance_CurrentAction currentAction = 1;
    // [Output only] The unique identifier for this resource. This field is empty when instance does not exist.
    string id = 2;
    // [Output Only] The URL of the instance. The URL can exist even if the instance has not yet been created.
    string instance = 3;
    // [Output Only] The status of the instance. This field is empty when the instance does not exist.
    enum ManagedInstance_InstanceStatu {
        MANAGEDINSTANCE_INSTANCESTATU_PROVISIONING = 0;
        MANAGEDINSTANCE_INSTANCESTATU_RUNNING = 1;
        MANAGEDINSTANCE_INSTANCESTATU_STAGING = 2;
        MANAGEDINSTANCE_INSTANCESTATU_STOPPED = 3;
        MANAGEDINSTANCE_INSTANCESTATU_STOPPING = 4;
        MANAGEDINSTANCE_INSTANCESTATU_SUSPENDED = 5;
        MANAGEDINSTANCE_INSTANCESTATU_SUSPENDING = 6;
        MANAGEDINSTANCE_INSTANCESTATU_TERMINATED = 7;
    }
    ManagedInstance_InstanceStatu instanceStatus = 4;
    // [Output Only] Information about the last attempt to create or delete the instance.
    ManagedInstanceLastAttempt lastAttempt = 5;
    // [Output Only] Intended version of this instance.
    ManagedInstanceVersion version = 6;
}

message ManagedInstanceLastAttempt {
    // [Output Only] Encountered errors during the last attempt to create or delete the instance.
    message Errors {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Errors errors = 1;
}

message ManagedInstanceVersion {
    // [Output Only] The intended template of the instance. This field is empty when current_action is one of { DELETING, ABANDONING }.
    string instanceTemplate = 1;
    // [Output Only] Name of the version.
    string name = 2;
}

message Metadata {
    // Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
    string fingerprint = 1;
    // Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
    message Item {
            // Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
    string key = 1;
            // Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB).
    string value = 2;
    }
    repeated Item items = 2;
    // [Output Only] Type of the resource. Always compute#metadata for metadata.
    string kind = 3;
}

message NamedPort {
    // The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
    string name = 1;
    // The port number, which can be a value between 1 and 65535.
    int32 port = 2;
}

message Network {
    // The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
    string IPv4Range = 1;
    // When set to true, the network is created in "auto subnet mode". When set to false, the network is in "custom subnet mode".
    // 
    // In "auto subnet mode", a newly created network is assigned the default CIDR of 10.128.0.0/9 and it automatically creates one subnetwork per region.
    bool autoCreateSubnetworks = 2;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // A gateway address for default routing to other networks. This value is read only and is selected by the Google Compute Engine, typically as the first usable address in the IPv4Range.
    string gatewayIPv4 = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // [Output Only] Type of the resource. Always compute#network for networks.
    string kind = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // [Output Only] List of network peerings for the resource.
    repeated NetworkPeering peerings = 9;
    // The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
    NetworkRoutingConfig routingConfig = 10;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 11;
    // [Output Only] Server-defined fully-qualified URLs for all subnetworks in this network.
    repeated string subnetworks = 12;
}

message NetworkInterface {
    // An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
    repeated AccessConfig accessConfigs = 1;
    // An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.
    repeated AliasIpRange aliasIpRanges = 2;
    // Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface.
    string fingerprint = 3;
    // [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
    string kind = 4;
    // [Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.
    string name = 5;
    // URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
    // 
    // This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used.
    // 
    // If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  
    // - https://www.googleapis.com/compute/v1/projects/project/global/networks/network 
    // - projects/project/global/networks/network 
    // - global/networks/default
    string network = 6;
    // An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
    string networkIP = 7;
    // The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:  
    // - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork 
    // - regions/region/subnetworks/subnetwork
    string subnetwork = 8;
}

message NetworkList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Network resources.
    repeated Network items = 2;
    // [Output Only] Type of resource. Always compute#networkList for lists of networks.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message NetworkPeering {
    // Whether full mesh connectivity is created and managed automatically. When it is set to true, Google Compute Engine will automatically create and manage the routes between two networks when the state is ACTIVE. Otherwise, user needs to create routes manually to route packets to peer network.
    bool autoCreateRoutes = 1;
    // Name of this peering. Provided by the client when the peering is created. The name must comply with RFC1035. Specifically, the name must be 1-63 characters long and match regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all the following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 2;
    // The URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
    string network = 3;
    // [Output Only] State for the peering.
    enum NetworkPeering_State {
        NETWORKPEERING_STATE_ACTIVE = 0;
        NETWORKPEERING_STATE_INACTIVE = 1;
    }
    NetworkPeering_State state = 4;
    // [Output Only] Details about the current state of the peering.
    string stateDetails = 5;
}

message NetworkRoutingConfig {
    // The network-wide routing mode to use. If set to REGIONAL, this network's cloud routers will only advertise routes with subnetworks of this network in the same region as the router. If set to GLOBAL, this network's cloud routers will advertise routes with all subnetworks of this network, across regions.
    enum NetworkRoutingConfig_RoutingMode {
        NETWORKROUTINGCONFIG_ROUTINGMODE_GLOBAL = 0;
        NETWORKROUTINGCONFIG_ROUTINGMODE_REGIONAL = 1;
    }
    NetworkRoutingConfig_RoutingMode routingMode = 1;
}

message NetworksAddPeeringRequest {
    // Whether Google Compute Engine manages the routes automatically.
    bool autoCreateRoutes = 1;
    // Name of the peering, which should conform to RFC1035.
    string name = 2;
    // URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
    string peerNetwork = 3;
}

message NetworksRemovePeeringRequest {
    // Name of the peering, which should conform to RFC1035.
    string name = 1;
}

message Operation {
    // [Output Only] Reserved for future use.
    string clientOperationId = 1;
    // [Deprecated] This field is deprecated.
    string creationTimestamp = 2;
    // [Output Only] A textual description of the operation, which is set when the operation is created.
    string description = 3;
    // [Output Only] The time that this operation was completed. This value is in RFC3339 text format.
    string endTime = 4;
    // [Output Only] If errors are generated during processing of the operation, this field will be populated.
    message Error {
            // [Output Only] The array of errors encountered while processing this operation.
    message Error {
                    // [Output Only] The error type identifier for this error.
    string code = 1;
                    // [Output Only] Indicates the field in the request that caused the error. This property is optional.
    string location = 2;
                    // [Output Only] An optional, human-readable error message.
    string message = 3;
        }
        repeated Error errors = 1;
    }
    Error error = 5;
    // [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND.
    string httpErrorMessage = 6;
    // [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found.
    int32 httpErrorStatusCode = 7;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 8;
    // [Output Only] The time that this operation was requested. This value is in RFC3339 text format.
    string insertTime = 9;
    // [Output Only] Type of the resource. Always compute#operation for Operation resources.
    string kind = 10;
    // [Output Only] Name of the resource.
    string name = 11;
    // [Output Only] The type of operation, such as insert, update, or delete, and so on.
    string operationType = 12;
    // [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.
    int32 progress = 13;
    // [Output Only] The URL of the region where the operation resides. Only available when performing regional operations.
    string region = 14;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 15;
    // [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.
    string startTime = 16;
    // [Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or DONE.
    enum Operation_Statu {
        OPERATION_STATU_DONE = 0;
        OPERATION_STATU_PENDING = 1;
        OPERATION_STATU_RUNNING = 2;
    }
    Operation_Statu status = 17;
    // [Output Only] An optional textual description of the current status of the operation.
    string statusMessage = 18;
    // [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.
    string targetId = 19;
    // [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.
    string targetLink = 20;
    // [Output Only] User who requested the operation, for example: user@example.com.
    string user = 21;
    // [Output Only] If warning messages are generated during processing of the operation, this field will be populated.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    repeated Warning warnings = 22;
    // [Output Only] The URL of the zone where the operation resides. Only available when performing per-zone operations.
    string zone = 23;
}

message OperationAggregatedList {
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 1;
    // [Output Only] A map of scoped operation lists.
    map<string, OperationsScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#operationAggregatedList for aggregated lists of operations.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message OperationList {
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 1;
    // [Output Only] A list of Operation resources.
    repeated Operation items = 2;
    // [Output Only] Type of resource. Always compute#operations for Operations resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message OperationsScopedList {
    // [Output Only] List of operations contained in this scope.
    repeated Operation operations = 1;
    // [Output Only] Informational warning which replaces the list of operations when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message PathMatcher {
    // The full or partial URL to the BackendService resource. This will be used if none of the pathRules defined by this PathMatcher is matched by the URL's path portion. For example, the following are all valid URLs to a BackendService resource:  
    // - https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService 
    // - compute/v1/projects/project/global/backendServices/backendService 
    // - global/backendServices/backendService
    string defaultService = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // The name to which this PathMatcher is referred by the HostRule.
    string name = 3;
    // The list of path rules.
    repeated PathRule pathRules = 4;
}

message PathRule {
    // The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.
    repeated string paths = 1;
    // The URL of the BackendService resource if this rule is matched.
    string service = 2;
}

message Policy {
    // Specifies cloud audit logging configuration for this policy.
    repeated AuditConfig auditConfigs = 1;
    // Associates a list of `members` to a `role`. `bindings` with no members will result in an error.
    repeated Binding bindings = 2;
    // `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy.
    // 
    // If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.
    string etag = 3;
    bool iamOwned = 4;
    // If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.
    repeated Rule rules = 5;
    // Version of the `Policy`. The default version is 0.
    int32 version = 6;
}

message Project {
    // Metadata key/value pairs available to all instances contained in this project. See Custom metadata for more information.
    Metadata commonInstanceMetadata = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // [Output Only] Default service account used by VMs running in this project.
    string defaultServiceAccount = 3;
    // An optional textual description of the resource.
    string description = 4;
    // Restricted features enabled for use on this project.
    repeated string enabledFeatures = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server. This is not the project ID, and is just a unique ID used by Compute Engine to identify resources.
    string id = 6;
    // [Output Only] Type of the resource. Always compute#project for projects.
    string kind = 7;
    // The project ID. For example: my-example-project. Use the project ID to make requests to Compute Engine.
    string name = 8;
    // [Output Only] Quotas assigned to this project.
    repeated Quota quotas = 9;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 10;
    // The naming prefix for daily usage reports and the Google Cloud Storage bucket where they are stored.
    UsageExportLocation usageExportLocation = 11;
    // [Output Only] The role this project has in a shared VPC configuration. Currently only HOST projects are differentiated.
    enum Project_XpnProjectStatu {
        PROJECT_XPNPROJECTSTATU_HOST = 0;
        PROJECT_XPNPROJECTSTATU_UNSPECIFIED_XPN_PROJECT_STATUS = 1;
    }
    Project_XpnProjectStatu xpnProjectStatus = 12;
}

message ProjectsDisableXpnResourceRequest {
    // Service resource (a.k.a service project) ID.
    XpnResourceId xpnResource = 1;
}

message ProjectsEnableXpnResourceRequest {
    // Service resource (a.k.a service project) ID.
    XpnResourceId xpnResource = 1;
}

message ProjectsGetXpnResources {
    // [Output Only] Type of resource. Always compute#projectsGetXpnResources for lists of service resources (a.k.a service projects)
    string kind = 1;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 2;
    // Service resources (a.k.a service projects) attached to this project as their shared VPC host.
    repeated XpnResourceId resources = 3;
}

message ProjectsListXpnHostsRequest {
    // Optional organization ID managed by Cloud Resource Manager, for which to list shared VPC host projects. If not specified, the organization will be inferred from the project.
    string organization = 1;
}

message Quota {
    // [Output Only] Quota limit for this metric.
    double limit = 1;
    // [Output Only] Name of the quota metric.
    enum Quota_Metric {
        QUOTA_METRIC_AUTOSCALERS = 0;
        QUOTA_METRIC_BACKEND_BUCKETS = 1;
        QUOTA_METRIC_BACKEND_SERVICES = 2;
        QUOTA_METRIC_COMMITMENTS = 3;
        QUOTA_METRIC_CPUS = 4;
        QUOTA_METRIC_CPUS_ALL_REGIONS = 5;
        QUOTA_METRIC_DISKS_TOTAL_GB = 6;
        QUOTA_METRIC_FIREWALLS = 7;
        QUOTA_METRIC_FORWARDING_RULES = 8;
        QUOTA_METRIC_HEALTH_CHECKS = 9;
        QUOTA_METRIC_IMAGES = 10;
        QUOTA_METRIC_INSTANCES = 11;
        QUOTA_METRIC_INSTANCE_GROUPS = 12;
        QUOTA_METRIC_INSTANCE_GROUP_MANAGERS = 13;
        QUOTA_METRIC_INSTANCE_TEMPLATES = 14;
        QUOTA_METRIC_INTERCONNECTS = 15;
        QUOTA_METRIC_IN_USE_ADDRESSES = 16;
        QUOTA_METRIC_LOCAL_SSD_TOTAL_GB = 17;
        QUOTA_METRIC_NETWORKS = 18;
        QUOTA_METRIC_NVIDIA_K80_GPUS = 19;
        QUOTA_METRIC_NVIDIA_P100_GPUS = 20;
        QUOTA_METRIC_PREEMPTIBLE_CPUS = 21;
        QUOTA_METRIC_PREEMPTIBLE_LOCAL_SSD_GB = 22;
        QUOTA_METRIC_REGIONAL_AUTOSCALERS = 23;
        QUOTA_METRIC_REGIONAL_INSTANCE_GROUP_MANAGERS = 24;
        QUOTA_METRIC_ROUTERS = 25;
        QUOTA_METRIC_ROUTES = 26;
        QUOTA_METRIC_SECURITY_POLICIES = 27;
        QUOTA_METRIC_SECURITY_POLICY_RULES = 28;
        QUOTA_METRIC_SNAPSHOTS = 29;
        QUOTA_METRIC_SSD_TOTAL_GB = 30;
        QUOTA_METRIC_SSL_CERTIFICATES = 31;
        QUOTA_METRIC_STATIC_ADDRESSES = 32;
        QUOTA_METRIC_SUBNETWORKS = 33;
        QUOTA_METRIC_TARGET_HTTPS_PROXIES = 34;
        QUOTA_METRIC_TARGET_HTTP_PROXIES = 35;
        QUOTA_METRIC_TARGET_INSTANCES = 36;
        QUOTA_METRIC_TARGET_POOLS = 37;
        QUOTA_METRIC_TARGET_SSL_PROXIES = 38;
        QUOTA_METRIC_TARGET_TCP_PROXIES = 39;
        QUOTA_METRIC_TARGET_VPN_GATEWAYS = 40;
        QUOTA_METRIC_URL_MAPS = 41;
        QUOTA_METRIC_VPN_TUNNELS = 42;
    }
    Quota_Metric metric = 2;
    // [Output Only] Current usage of this metric.
    double usage = 3;
}

message Reference {
    // [Output Only] Type of the resource. Always compute#reference for references.
    string kind = 1;
    // A description of the reference type with no implied semantics. Possible values include:  
    // - MEMBER_OF
    string referenceType = 2;
    // URL of the resource which refers to the target.
    string referrer = 3;
    // URL of the resource to which this reference points.
    string target = 4;
}

message Region {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // [Output Only] The deprecation status associated with this region.
    DeprecationStatus deprecated = 2;
    // [Output Only] Textual description of the resource.
    string description = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#region for regions.
    string kind = 5;
    // [Output Only] Name of the resource.
    string name = 6;
    // [Output Only] Quotas assigned to this region.
    repeated Quota quotas = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
    // [Output Only] Status of the region, either UP or DOWN.
    enum Region_Statu {
        REGION_STATU_DOWN = 0;
        REGION_STATU_UP = 1;
    }
    Region_Statu status = 9;
    // [Output Only] A list of zones available in this region, in the form of resource URLs.
    repeated string zones = 10;
}

message RegionAutoscalerList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Autoscaler resources.
    repeated Autoscaler items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RegionInstanceGroupList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroup resources.
    repeated InstanceGroup items = 2;
    // The resource type.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RegionInstanceGroupManagerList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceGroupManager resources.
    repeated InstanceGroupManager items = 2;
    // [Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups that exist in th regional scope.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RegionInstanceGroupManagersAbandonInstancesRequest {
    // The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message RegionInstanceGroupManagersDeleteInstancesRequest {
    // The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message RegionInstanceGroupManagersListInstancesResponse {
    // List of managed instances.
    repeated ManagedInstance managedInstances = 1;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 2;
}

message RegionInstanceGroupManagersRecreateRequest {
    // The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
    repeated string instances = 1;
}

message RegionInstanceGroupManagersSetAutoHealingRequest {
    repeated InstanceGroupManagerAutoHealingPolicy autoHealingPolicies = 1;
}

message RegionInstanceGroupManagersSetTargetPoolsRequest {
    // Fingerprint of the target pools information, which is a hash of the contents. This field is used for optimistic locking when you update the target pool entries. This field is optional.
    string fingerprint = 1;
    // The URL of all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
    repeated string targetPools = 2;
}

message RegionInstanceGroupManagersSetTemplateRequest {
    // URL of the InstanceTemplate resource from which all new instances will be created.
    string instanceTemplate = 1;
}

message RegionInstanceGroupsListInstances {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of InstanceWithNamedPorts resources.
    repeated InstanceWithNamedPorts items = 2;
    // The resource type.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RegionInstanceGroupsListInstancesRequest {
    // Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it lists all instances.
    enum RegionInstanceGroupsListInstancesRequest_InstanceState {
        REGIONINSTANCEGROUPSLISTINSTANCESREQUEST_INSTANCESTATE_ALL = 0;
        REGIONINSTANCEGROUPSLISTINSTANCESREQUEST_INSTANCESTATE_RUNNING = 1;
    }
    RegionInstanceGroupsListInstancesRequest_InstanceState instanceState = 1;
    // Name of port user is interested in. It is optional. If it is set, only information about this ports will be returned. If it is not set, all the named ports will be returned. Always lists all instances.
    string portName = 2;
}

message RegionInstanceGroupsSetNamedPortsRequest {
    // The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.
    string fingerprint = 1;
    // The list of named ports to set for this instance group.
    repeated NamedPort namedPorts = 2;
}

message RegionList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Region resources.
    repeated Region items = 2;
    // [Output Only] Type of resource. Always compute#regionList for lists of regions.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RegionSetLabelsRequest {
    // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint.
    string labelFingerprint = 1;
    // The labels to set for this resource.
    map<string, string> labels = 2;
}

message ResourceCommitment {
    // The amount of the resource purchased (in a type-dependent unit, such as bytes). For vCPUs, this can just be an integer. For memory, this must be provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of memory per every vCPU.
    string amount = 1;
    // Type of resource for which this commitment applies. Possible values are VCPU and MEMORY
    enum ResourceCommitment_Type {
        RESOURCECOMMITMENT_TYPE_MEMORY = 0;
        RESOURCECOMMITMENT_TYPE_UNSPECIFIED = 1;
        RESOURCECOMMITMENT_TYPE_VCPU = 2;
    }
    ResourceCommitment_Type type = 2;
}

message ResourceGroupReference {
    // A URI referencing one of the instance groups listed in the backend service.
    string group = 1;
}

message Route {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // The destination range of outgoing packets that this route applies to. Only IPv4 is supported.
    string destRange = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of this resource. Always compute#routes for Route resources.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // Fully-qualified URL of the network that this route applies to.
    string network = 7;
    // The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL:  projects/<project-id>/global/gateways/default-internet-gateway
    string nextHopGateway = 8;
    // The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example:
    // https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances
    string nextHopInstance = 9;
    // The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
    string nextHopIp = 10;
    // The URL of the local network if it should handle matching packets.
    string nextHopNetwork = 11;
    // [Output Only] The network peering name that should handle matching packets, which should conform to RFC1035.
    string nextHopPeering = 12;
    // The URL to a VpnTunnel that should handle matching packets.
    string nextHopVpnTunnel = 13;
    // The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.
    uint32 priority = 14;
    // [Output Only] Server-defined fully-qualified URL for this resource.
    string selfLink = 15;
    // A list of instance tags to which this route applies.
    repeated string tags = 16;
    // [Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    repeated Warning warnings = 17;
}

message RouteList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Route resources.
    repeated Route items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message Router {
    // BGP information specific to this router.
    RouterBgp bgp = 1;
    // BGP information that needs to be configured into the routing stack to establish the BGP peering. It must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273.
    repeated RouterBgpPeer bgpPeers = 2;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 3;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 4;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 5;
    // Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP address and IP address range (e.g. ipRange), or both.
    repeated RouterInterface interfaces = 6;
    // [Output Only] Type of resource. Always compute#router for routers.
    string kind = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // URI of the network to which this router belongs.
    string network = 9;
    // [Output Only] URI of the region where the router resides.
    string region = 10;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 11;
}

message RouterAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Router resources.
    map<string, RoutersScopedList> items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RouterBgp {
    // Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.
    uint32 asn = 1;
}

message RouterBgpPeer {
    // The priority of routes advertised to this BGP peer. In the case where there is more than one matching route of maximum length, the routes with lowest priority value win.
    uint32 advertisedRoutePriority = 1;
    // Name of the interface the BGP peer is associated with.
    string interfaceName = 2;
    // IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
    string ipAddress = 3;
    // Name of this BGP peer. The name must be 1-63 characters long and comply with RFC1035.
    string name = 4;
    // Peer BGP Autonomous System Number (ASN). For VPN use case, this value can be different for every tunnel.
    uint32 peerAsn = 5;
    // IP address of the BGP interface outside Google cloud. Only IPv4 is supported.
    string peerIpAddress = 6;
}

message RouterInterface {
    // IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.
    string ipRange = 1;
    // URI of the linked interconnect attachment. It must be in the same region as the router. Each interface can have at most one linked resource and it could either be a VPN Tunnel or an interconnect attachment.
    string linkedInterconnectAttachment = 2;
    // URI of the linked VPN tunnel. It must be in the same region as the router. Each interface can have at most one linked resource and it could either be a VPN Tunnel or an interconnect attachment.
    string linkedVpnTunnel = 3;
    // Name of this interface entry. The name must be 1-63 characters long and comply with RFC1035.
    string name = 4;
}

message RouterList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Router resources.
    repeated Router items = 2;
    // [Output Only] Type of resource. Always compute#router for routers.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message RouterStatus {
    // Best routes for this router's network.
    repeated Route bestRoutes = 1;
    // Best routes learned by this router.
    repeated Route bestRoutesForRouter = 2;
    repeated RouterStatusBgpPeerStatus bgpPeerStatus = 3;
    // URI of the network to which this router belongs.
    string network = 4;
}

message RouterStatusBgpPeerStatus {
    // Routes that were advertised to the remote BGP peer
    repeated Route advertisedRoutes = 1;
    // IP address of the local BGP interface.
    string ipAddress = 2;
    // URL of the VPN tunnel that this BGP peer controls.
    string linkedVpnTunnel = 3;
    // Name of this BGP peer. Unique within the Routers resource.
    string name = 4;
    // Number of routes learned from the remote BGP Peer.
    uint32 numLearnedRoutes = 5;
    // IP address of the remote BGP interface.
    string peerIpAddress = 6;
    // BGP state as specified in RFC1771.
    string state = 7;
    // Status of the BGP peer: {UP, DOWN}
    enum RouterStatusBgpPeerStatus_Statu {
        ROUTERSTATUSBGPPEERSTATUS_STATU_DOWN = 0;
        ROUTERSTATUSBGPPEERSTATUS_STATU_UNKNOWN = 1;
        ROUTERSTATUSBGPPEERSTATUS_STATU_UP = 2;
    }
    RouterStatusBgpPeerStatus_Statu status = 8;
    // Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds
    string uptime = 9;
    // Time this session has been up, in seconds. Format: 145
    string uptimeSeconds = 10;
}

message RouterStatusResponse {
    // Type of resource.
    string kind = 1;
    RouterStatus result = 2;
}

message RoutersPreviewResponse {
    // Preview of given router.
    Router resource = 1;
}

message RoutersScopedList {
    // List of routers contained in this scope.
    repeated Router routers = 1;
    // Informational warning which replaces the list of routers when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message Rule {
    // Required
    enum Rule_Action {
        RULE_ACTION_ALLOW = 0;
        RULE_ACTION_ALLOW_WITH_LOG = 1;
        RULE_ACTION_DENY = 2;
        RULE_ACTION_DENY_WITH_LOG = 3;
        RULE_ACTION_LOG = 4;
        RULE_ACTION_NO_ACTION = 5;
    }
    Rule_Action action = 1;
    // Additional restrictions that must be met
    repeated Condition conditions = 2;
    // Human-readable description of the rule.
    string description = 3;
    // If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
    repeated string ins = 4;
    // The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.
    repeated LogConfig logConfigs = 5;
    // If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.
    repeated string notIns = 6;
    // A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
    repeated string permissions = 7;
}

message SSLHealthCheck {
    // The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
    int32 port = 1;
    // Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
    string portName = 2;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum SSLHealthCheck_ProxyHeader {
        SSLHEALTHCHECK_PROXYHEADER_NONE = 0;
        SSLHEALTHCHECK_PROXYHEADER_PROXY_V1 = 1;
    }
    SSLHealthCheck_ProxyHeader proxyHeader = 3;
    // The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
    string request = 4;
    // The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
    string response = 5;
}

message Scheduling {
    // Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.
    // 
    // By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
    bool automaticRestart = 1;
    // Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
    enum Scheduling_OnHostMaintenance {
        SCHEDULING_ONHOSTMAINTENANCE_MIGRATE = 0;
        SCHEDULING_ONHOSTMAINTENANCE_TERMINATE = 1;
    }
    Scheduling_OnHostMaintenance onHostMaintenance = 2;
    // Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.
    bool preemptible = 3;
}

message SecurityPolicy {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
    // 
    // To see the latest fingerprint, make get() request to the security policy.
    string fingerprint = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output only] Type of the resource. Always compute#securityPolicyfor security policies
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // List of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
    repeated SecurityPolicyRule rules = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
}

message SecurityPolicyList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of SecurityPolicy resources.
    repeated SecurityPolicy items = 2;
    // [Output Only] Type of resource. Always compute#securityPolicyList for listsof securityPolicies
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 5;
}

message SecurityPolicyReference {
    string securityPolicy = 1;
}

message SecurityPolicyRule {
    // The Action to preform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502.
    string action = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
    string kind = 3;
    // A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding ?action? is enforced.
    SecurityPolicyRuleMatcher match = 4;
    // If set to true, the specified action is not enforced.
    bool preview = 5;
    // An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated in the increasing order of priority.
    int32 priority = 6;
}

message SecurityPolicyRuleMatcher {
    // CIDR IP address range. Only IPv4 is supported.
    repeated string srcIpRanges = 1;
}

message SerialPortOutput {
    // [Output Only] The contents of the console output.
    string contents = 1;
    // [Output Only] Type of the resource. Always compute#serialPortOutput for serial port output.
    string kind = 2;
    // [Output Only] The position of the next byte of content from the serial console output. Use this value in the next request as the start parameter.
    string next = 3;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 4;
    // The starting byte position of the output that was returned. This should match the start parameter sent with the request. If the serial console output exceeds the size of the buffer, older output will be overwritten by newer content and the start values will be mismatched.
    string start = 5;
}

message ServiceAccount {
    // Email address of the service account.
    string email = 1;
    // The list of scopes to be made available for this service account.
    repeated string scopes = 2;
}

message Snapshot {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] Size of the snapshot, specified in GB.
    string diskSizeGb = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#snapshot for Snapshot resources.
    string kind = 5;
    // A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
    // 
    // To see the latest fingerprint, make a get() request to retrieve a snapshot.
    string labelFingerprint = 6;
    // Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.
    map<string, string> labels = 7;
    // [Output Only] A list of public visible licenses that apply to this snapshot. This can be because the original image had licenses attached (such as a Windows image).
    repeated string licenses = 8;
    // Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 10;
    // Encrypts the snapshot using a customer-supplied encryption key.
    // 
    // After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the image later For example, you must provide the encryption key when you create a disk from the encrypted snapshot in a future request.
    // 
    // Customer-supplied encryption keys do not protect access to metadata of the disk.
    // 
    // If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted using an automatically generated key and you do not need to provide a key to use the snapshot later.
    CustomerEncryptionKey snapshotEncryptionKey = 11;
    // [Output Only] The source disk used to create this snapshot.
    string sourceDisk = 12;
    // The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
    CustomerEncryptionKey sourceDiskEncryptionKey = 13;
    // [Output Only] The ID value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.
    string sourceDiskId = 14;
    // [Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.
    enum Snapshot_Statu {
        SNAPSHOT_STATU_CREATING = 0;
        SNAPSHOT_STATU_DELETING = 1;
        SNAPSHOT_STATU_FAILED = 2;
        SNAPSHOT_STATU_READY = 3;
        SNAPSHOT_STATU_UPLOADING = 4;
    }
    Snapshot_Statu status = 15;
    // [Output Only] A size of the storage used by the snapshot. As snapshots share storage, this number is expected to change with snapshot creation/deletion.
    string storageBytes = 16;
    // [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
    enum Snapshot_StorageBytesStatu {
        SNAPSHOT_STORAGEBYTESSTATU_UPDATING = 0;
        SNAPSHOT_STORAGEBYTESSTATU_UP_TO_DATE = 1;
    }
    Snapshot_StorageBytesStatu storageBytesStatus = 17;
}

message SnapshotList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Snapshot resources.
    repeated Snapshot items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message SslCertificate {
    // A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
    string certificate = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // A write-only private key in PEM format. Only insert requests will include this field.
    string privateKey = 7;
    // [Output only] Server-defined URL for the resource.
    string selfLink = 8;
}

message SslCertificateList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of SslCertificate resources.
    repeated SslCertificate items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message Subnetwork {
    // Whether this subnetwork can conflict with static routes. Setting this to true allows this subnetwork's primary and secondary ranges to conflict with routes that have already been configured on the corresponding network. Static routes will take precedence over the subnetwork route if the route prefix length is at least as large as the subnetwork prefix length.
    // 
    // Also, packets destined to IPs within subnetwork may contain private/sensitive data and are prevented from leaving the virtual network. Setting this field to true will disable this feature.
    // 
    // The default value is false and applies to all existing subnetworks and automatically created subnetworks.
    // 
    // This field cannot be set to true at resource creation time.
    bool allowSubnetCidrRoutesOverlap = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.
    string description = 3;
    // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a Subnetwork. An up-to-date fingerprint must be provided in order to update the Subnetwork.
    string fingerprint = 4;
    // [Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork. This field can be set only at resource creation time.
    string gatewayAddress = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.
    string ipCidrRange = 7;
    // [Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.
    string kind = 8;
    // The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. Only networks that are in the distributed mode can have subnetworks. This field can be set only at resource creation time.
    string network = 10;
    // Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.
    bool privateIpGoogleAccess = 11;
    // URL of the region where the Subnetwork resides. This field can be set only at resource creation time.
    string region = 12;
    // An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges.
    repeated SubnetworkSecondaryRange secondaryIpRanges = 13;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 14;
}

message SubnetworkAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of SubnetworksScopedList resources.
    map<string, SubnetworksScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#subnetworkAggregatedList for aggregated lists of subnetworks.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message SubnetworkList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Subnetwork resources.
    repeated Subnetwork items = 2;
    // [Output Only] Type of resource. Always compute#subnetworkList for lists of subnetworks.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message SubnetworkSecondaryRange {
    // The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.
    string ipCidrRange = 1;
    // The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
    string rangeName = 2;
}

message SubnetworksExpandIpCidrRangeRequest {
    // The IP (in CIDR format or netmask) of internal addresses that are legal on this Subnetwork. This range should be disjoint from other subnetworks within this network. This range can only be larger than (i.e. a superset of) the range previously defined before the update.
    string ipCidrRange = 1;
}

message SubnetworksScopedList {
    // List of subnetworks contained in this scope.
    repeated Subnetwork subnetworks = 1;
    // An informational warning that appears when the list of addresses is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message SubnetworksSetPrivateIpGoogleAccessRequest {
    bool privateIpGoogleAccess = 1;
}

message TCPHealthCheck {
    // The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
    int32 port = 1;
    // Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
    string portName = 2;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum TCPHealthCheck_ProxyHeader {
        TCPHEALTHCHECK_PROXYHEADER_NONE = 0;
        TCPHEALTHCHECK_PROXYHEADER_PROXY_V1 = 1;
    }
    TCPHealthCheck_ProxyHeader proxyHeader = 3;
    // The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
    string request = 4;
    // The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
    string response = 5;
}

message Tags {
    // Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
    // 
    // To see the latest fingerprint, make get() request to the instance.
    string fingerprint = 1;
    // An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
    repeated string items = 2;
}

message TargetHttpProxy {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 3;
    // [Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.
    string kind = 4;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 5;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 6;
    // URL to the UrlMap resource that defines the mapping from URL to the BackendService.
    string urlMap = 7;
}

message TargetHttpProxyList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetHttpProxy resources.
    repeated TargetHttpProxy items = 2;
    // Type of resource. Always compute#targetHttpProxyList for lists of target HTTP proxies.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetHttpsProxiesSetSslCertificatesRequest {
    // New set of SslCertificate resources to associate with this TargetHttpsProxy resource. Currently exactly one SslCertificate resource must be specified.
    repeated string sslCertificates = 1;
}

message TargetHttpsProxy {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 3;
    // [Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.
    string kind = 4;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 5;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 6;
    // URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.
    repeated string sslCertificates = 7;
    // A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map:  
    // - https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map 
    // - projects/project/global/urlMaps/url-map 
    // - global/urlMaps/url-map
    string urlMap = 8;
}

message TargetHttpsProxyList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetHttpsProxy resources.
    repeated TargetHttpsProxy items = 2;
    // Type of resource. Always compute#targetHttpsProxyList for lists of target HTTPS proxies.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetInstance {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 3;
    // A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: 
    // - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 
    // - projects/project/zones/zone/instances/instance 
    // - zones/zone/instances/instance
    string instance = 4;
    // [Output Only] The type of the resource. Always compute#targetInstance for target instances.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
    enum TargetInstance_NatPolicy {
        TARGETINSTANCE_NATPOLICY_NO_NAT = 0;
    }
    TargetInstance_NatPolicy natPolicy = 7;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 8;
    // [Output Only] URL of the zone where the target instance resides.
    string zone = 9;
}

message TargetInstanceAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetInstance resources.
    map<string, TargetInstancesScopedList> items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetInstanceList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetInstance resources.
    repeated TargetInstance items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetInstancesScopedList {
    // List of target instances contained in this scope.
    repeated TargetInstance targetInstances = 1;
    // Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message TargetPool {
    // This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1].
    // 
    // backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool.
    // 
    // In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
    string backupPool = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].
    // 
    // If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.
    // 
    // In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
    float failoverRatio = 4;
    // The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. An empty list means all member instances will be considered healthy at all times. Only HttpHealthChecks are supported. Only one health check may be specified.
    repeated string healthChecks = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool.
    repeated string instances = 7;
    // [Output Only] Type of the resource. Always compute#targetPool for target pools.
    string kind = 8;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 9;
    // [Output Only] URL of the region where the target pool resides.
    string region = 10;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 11;
    // Sesssion affinity option, must be one of the following values:
    // NONE: Connections from the same client IP may go to any instance in the pool.
    // CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy.
    // CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
    enum TargetPool_SessionAffinity {
        TARGETPOOL_SESSIONAFFINITY_CLIENT_IP = 0;
        TARGETPOOL_SESSIONAFFINITY_CLIENT_IP_PORT_PROTO = 1;
        TARGETPOOL_SESSIONAFFINITY_CLIENT_IP_PROTO = 2;
        TARGETPOOL_SESSIONAFFINITY_GENERATED_COOKIE = 3;
        TARGETPOOL_SESSIONAFFINITY_NONE = 4;
    }
    TargetPool_SessionAffinity sessionAffinity = 12;
}

message TargetPoolAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetPool resources.
    map<string, TargetPoolsScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#targetPoolAggregatedList for aggregated lists of target pools.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetPoolInstanceHealth {
    repeated HealthStatus healthStatus = 1;
    // [Output Only] Type of resource. Always compute#targetPoolInstanceHealth when checking the health of an instance.
    string kind = 2;
}

message TargetPoolList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetPool resources.
    repeated TargetPool items = 2;
    // [Output Only] Type of resource. Always compute#targetPoolList for lists of target pools.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetPoolsAddHealthCheckRequest {
    // The HttpHealthCheck to add to the target pool.
    repeated HealthCheckReference healthChecks = 1;
}

message TargetPoolsAddInstanceRequest {
    // A full or partial URL to an instance to add to this target pool. This can be a full or partial URL. For example, the following are valid URLs:  
    // - https://www.googleapis.com/compute/v1/projects/project-id/zones/zone/instances/instance-name 
    // - projects/project-id/zones/zone/instances/instance-name 
    // - zones/zone/instances/instance-name
    repeated InstanceReference instances = 1;
}

message TargetPoolsRemoveHealthCheckRequest {
    // Health check URL to be removed. This can be a full or valid partial URL. For example, the following are valid URLs:  
    // - https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-check 
    // - projects/project/global/httpHealthChecks/health-check 
    // - global/httpHealthChecks/health-check
    repeated HealthCheckReference healthChecks = 1;
}

message TargetPoolsRemoveInstanceRequest {
    // URLs of the instances to be removed from target pool.
    repeated InstanceReference instances = 1;
}

message TargetPoolsScopedList {
    // List of target pools contained in this scope.
    repeated TargetPool targetPools = 1;
    // Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message TargetReference {
    string target = 1;
}

message TargetSslProxiesSetBackendServiceRequest {
    // The URL of the new BackendService resource for the targetSslProxy.
    string service = 1;
}

message TargetSslProxiesSetProxyHeaderRequest {
    // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
    enum TargetSslProxiesSetProxyHeaderRequest_ProxyHeader {
        TARGETSSLPROXIESSETPROXYHEADERREQUEST_PROXYHEADER_NONE = 0;
        TARGETSSLPROXIESSETPROXYHEADERREQUEST_PROXYHEADER_PROXY_V1 = 1;
    }
    TargetSslProxiesSetProxyHeaderRequest_ProxyHeader proxyHeader = 1;
}

message TargetSslProxiesSetSslCertificatesRequest {
    // New set of URLs to SslCertificate resources to associate with this TargetSslProxy. Currently exactly one ssl certificate must be specified.
    repeated string sslCertificates = 1;
}

message TargetSslProxy {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 3;
    // [Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.
    string kind = 4;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 5;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum TargetSslProxy_ProxyHeader {
        TARGETSSLPROXY_PROXYHEADER_NONE = 0;
        TARGETSSLPROXY_PROXYHEADER_PROXY_V1 = 1;
    }
    TargetSslProxy_ProxyHeader proxyHeader = 6;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 7;
    // URL to the BackendService resource.
    string service = 8;
    // URLs to SslCertificate resources that are used to authenticate connections to Backends. Currently exactly one SSL certificate must be specified.
    repeated string sslCertificates = 9;
}

message TargetSslProxyList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetSslProxy resources.
    repeated TargetSslProxy items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetTcpProxiesSetBackendServiceRequest {
    // The URL of the new BackendService resource for the targetTcpProxy.
    string service = 1;
}

message TargetTcpProxiesSetProxyHeaderRequest {
    // The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
    enum TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader {
        TARGETTCPPROXIESSETPROXYHEADERREQUEST_PROXYHEADER_NONE = 0;
        TARGETTCPPROXIESSETPROXYHEADERREQUEST_PROXYHEADER_PROXY_V1 = 1;
    }
    TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader proxyHeader = 1;
}

message TargetTcpProxy {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 3;
    // [Output Only] Type of the resource. Always compute#targetTcpProxy for target TCP proxies.
    string kind = 4;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 5;
    // Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    enum TargetTcpProxy_ProxyHeader {
        TARGETTCPPROXY_PROXYHEADER_NONE = 0;
        TARGETTCPPROXY_PROXYHEADER_PROXY_V1 = 1;
    }
    TargetTcpProxy_ProxyHeader proxyHeader = 6;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 7;
    // URL to the BackendService resource.
    string service = 8;
}

message TargetTcpProxyList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetTcpProxy resources.
    repeated TargetTcpProxy items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetVpnGateway {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated to a VPN gateway.
    repeated string forwardingRules = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
    string kind = 5;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 6;
    // URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
    string network = 7;
    // [Output Only] URL of the region where the target VPN gateway resides.
    string region = 8;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 9;
    // [Output Only] The status of the VPN gateway.
    enum TargetVpnGateway_Statu {
        TARGETVPNGATEWAY_STATU_CREATING = 0;
        TARGETVPNGATEWAY_STATU_DELETING = 1;
        TARGETVPNGATEWAY_STATU_FAILED = 2;
        TARGETVPNGATEWAY_STATU_READY = 3;
    }
    TargetVpnGateway_Statu status = 10;
    // [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using compute.vpntunnels.insert method and associated to a VPN gateway.
    repeated string tunnels = 11;
}

message TargetVpnGatewayAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetVpnGateway resources.
    map<string, TargetVpnGatewaysScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetVpnGatewayList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of TargetVpnGateway resources.
    repeated TargetVpnGateway items = 2;
    // [Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message TargetVpnGatewaysScopedList {
    // [Output Only] List of target vpn gateways contained in this scope.
    repeated TargetVpnGateway targetVpnGateways = 1;
    // [Output Only] Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message TestFailure {
    string actualService = 1;
    string expectedService = 2;
    string host = 3;
    string path = 4;
}

message TestPermissionsRequest {
    // The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
    repeated string permissions = 1;
}

message TestPermissionsResponse {
    // A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    repeated string permissions = 1;
}

message UDPHealthCheck {
    // The UDP port number for the health check request. Valid values are 1 through 65535.
    int32 port = 1;
    // Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
    string portName = 2;
    // Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
    string request = 3;
    // The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
    string response = 4;
}

message UrlMap {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // The URL of the BackendService resource if none of the hostRules match.
    string defaultService = 2;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 3;
    // Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.
    string fingerprint = 4;
    // The list of HostRules to use against the URL.
    repeated HostRule hostRules = 5;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 6;
    // [Output Only] Type of the resource. Always compute#urlMaps for url maps.
    string kind = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // The list of named PathMatchers to use against the URL.
    repeated PathMatcher pathMatchers = 9;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 10;
    // The list of expected URL mappings. Request to update this UrlMap will succeed only if all of the test cases pass.
    repeated UrlMapTest tests = 11;
}

message UrlMapList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of UrlMap resources.
    repeated UrlMap items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message UrlMapReference {
    string urlMap = 1;
}

message UrlMapTest {
    // Description of this test case.
    string description = 1;
    // Host portion of the URL.
    string host = 2;
    // Path portion of the URL.
    string path = 3;
    // Expected BackendService resource the given URL should be mapped to.
    string service = 4;
}

message UrlMapValidationResult {
    repeated string loadErrors = 1;
    // Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the reasons.
    bool loadSucceeded = 2;
    repeated TestFailure testFailures = 3;
    // If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's indicate the reason of failure.
    bool testPassed = 4;
}

message UrlMapsValidateRequest {
    // Content of the UrlMap to be validated.
    UrlMap resource = 1;
}

message UrlMapsValidateResponse {
    UrlMapValidationResult result = 1;
}

message UsageExportLocation {
    // The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This can either be the bucket name by itself, such as example-bucket, or the bucket name with gs:// or https://storage.googleapis.com/ in front of it, such as gs://example-bucket.
    string bucketName = 1;
    // An optional prefix for the name of the usage report object stored in bucketName. If not supplied, defaults to usage. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to Cloud Storage object naming conventions.
    string reportNamePrefix = 2;
}

message VpnTunnel {
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 1;
    // An optional description of this resource. Provide this property when you create the resource.
    string description = 2;
    // [Output Only] Detailed status message for the VPN tunnel.
    string detailedStatus = 3;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 4;
    // IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.
    int32 ikeVersion = 5;
    // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
    string kind = 6;
    // Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
    repeated string localTrafficSelector = 7;
    // Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    string name = 8;
    // IP address of the peer VPN gateway. Only IPv4 is supported.
    string peerIp = 9;
    // [Output Only] URL of the region where the VPN tunnel resides.
    string region = 10;
    // Remote traffic selectors to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
    repeated string remoteTrafficSelector = 11;
    // URL of router resource to be used for dynamic routing.
    string router = 12;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 13;
    // Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
    string sharedSecret = 14;
    // Hash of the shared secret.
    string sharedSecretHash = 15;
    // [Output Only] The status of the VPN tunnel.
    enum VpnTunnel_Statu {
        VPNTUNNEL_STATU_ALLOCATING_RESOURCES = 0;
        VPNTUNNEL_STATU_AUTHORIZATION_ERROR = 1;
        VPNTUNNEL_STATU_DEPROVISIONING = 2;
        VPNTUNNEL_STATU_ESTABLISHED = 3;
        VPNTUNNEL_STATU_FAILED = 4;
        VPNTUNNEL_STATU_FIRST_HANDSHAKE = 5;
        VPNTUNNEL_STATU_NEGOTIATION_FAILURE = 6;
        VPNTUNNEL_STATU_NETWORK_ERROR = 7;
        VPNTUNNEL_STATU_NO_INCOMING_PACKETS = 8;
        VPNTUNNEL_STATU_PROVISIONING = 9;
        VPNTUNNEL_STATU_REJECTED = 10;
        VPNTUNNEL_STATU_WAITING_FOR_FULL_CONFIG = 11;
    }
    VpnTunnel_Statu status = 16;
    // URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
    string targetVpnGateway = 17;
}

message VpnTunnelAggregatedList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of VpnTunnelsScopedList resources.
    map<string, VpnTunnelsScopedList> items = 2;
    // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message VpnTunnelList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of VpnTunnel resources.
    repeated VpnTunnel items = 2;
    // [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message VpnTunnelsScopedList {
    // List of vpn tunnels contained in this scope.
    repeated VpnTunnel vpnTunnels = 1;
    // Informational warning which replaces the list of addresses when the list is empty.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 2;
}

message XpnHostList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // [Output Only] A list of shared VPC host project URLs.
    repeated Project items = 2;
    // [Output Only] Type of resource. Always compute#xpnHostList for lists of shared VPC hosts.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message XpnResourceId {
    // The ID of the service resource. In the case of projects, this field matches the project ID (e.g., my-project), not the project number (e.g., 12345678).
    string id = 1;
    // The type of the service resource.
    enum XpnResourceId_Type {
        XPNRESOURCEID_TYPE_PROJECT = 0;
        XPNRESOURCEID_TYPE_XPN_RESOURCE_TYPE_UNSPECIFIED = 1;
    }
    XpnResourceId_Type type = 2;
}

message Zone {
    // [Output Only] Available cpu/platform selections for the zone.
    repeated string availableCpuPlatforms = 1;
    // [Output Only] Creation timestamp in RFC3339 text format.
    string creationTimestamp = 2;
    // [Output Only] The deprecation status associated with this zone.
    DeprecationStatus deprecated = 3;
    // [Output Only] Textual description of the resource.
    string description = 4;
    // [Output Only] The unique identifier for the resource. This identifier is defined by the server.
    string id = 5;
    // [Output Only] Type of the resource. Always compute#zone for zones.
    string kind = 6;
    // [Output Only] Name of the resource.
    string name = 7;
    // [Output Only] Full URL reference to the region which hosts the zone.
    string region = 8;
    // [Output Only] Server-defined URL for the resource.
    string selfLink = 9;
    // [Output Only] Status of the zone, either UP or DOWN.
    enum Zone_Statu {
        ZONE_STATU_DOWN = 0;
        ZONE_STATU_UP = 1;
    }
    Zone_Statu status = 10;
}

message ZoneList {
    // [Output Only] Unique identifier for the resource; defined by the server.
    string id = 1;
    // A list of Zone resources.
    repeated Zone items = 2;
    // Type of resource.
    string kind = 3;
    // [Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.
    string nextPageToken = 4;
    // [Output Only] Server-defined URL for this resource.
    string selfLink = 5;
    // [Output Only] Informational warning message.
    message Warning {
            // [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    enum Warning_Code {
            WARNING_CODE_CLEANUP_FAILED = 0;
            WARNING_CODE_DEPRECATED_RESOURCE_USED = 1;
            WARNING_CODE_DISK_SIZE_LARGER_THAN_IMAGE_SIZE = 2;
            WARNING_CODE_FIELD_VALUE_OVERRIDEN = 3;
            WARNING_CODE_INJECTED_KERNELS_DEPRECATED = 4;
            WARNING_CODE_NEXT_HOP_ADDRESS_NOT_ASSIGNED = 5;
            WARNING_CODE_NEXT_HOP_CANNOT_IP_FORWARD = 6;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_FOUND = 7;
            WARNING_CODE_NEXT_HOP_INSTANCE_NOT_ON_NETWORK = 8;
            WARNING_CODE_NEXT_HOP_NOT_RUNNING = 9;
            WARNING_CODE_NOT_CRITICAL_ERROR = 10;
            WARNING_CODE_NO_RESULTS_ON_PAGE = 11;
            WARNING_CODE_REQUIRED_TOS_AGREEMENT = 12;
            WARNING_CODE_RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING = 13;
            WARNING_CODE_RESOURCE_NOT_DELETED = 14;
            WARNING_CODE_SINGLE_INSTANCE_PROPERTY_TEMPLATE = 15;
            WARNING_CODE_UNREACHABLE = 16;
        }
        Warning_Code code = 1;
            // [Output Only] Metadata about this warning in key: value format. For example:
    // "data": [ { "key": "scope", "value": "zones/us-east1-d" }
    message Data {
                    // [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
    string key = 1;
                    // [Output Only] A warning data value corresponding to the key.
    string value = 2;
        }
        repeated Data data = 2;
            // [Output Only] A human-readable description of the warning code.
    string message = 3;
    }
    Warning warning = 6;
}

message ZoneSetLabelsRequest {
    // The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint.
    string labelFingerprint = 1;
    // The labels to set for this resource.
    map<string, string> labels = 2;
}

enum Alt {
    JSON = 0;
}

service ComputeEngineService {
    // Returns the specified Project resource.
    rpc GetProject(GetProjectRequest) returns (Project) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}"
      };
    }
    // Retrieves an aggregated list of accelerator types.
    rpc GetProjectAggregatedAcceleratorTypes(GetProjectAggregatedAcceleratorTypesRequest) returns (AcceleratorTypeAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/acceleratorTypes"
      };
    }
    // Retrieves an aggregated list of addresses.
    rpc GetProjectAggregatedAddresses(GetProjectAggregatedAddressesRequest) returns (AddressAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/addresses"
      };
    }
    // Retrieves an aggregated list of autoscalers.
    rpc GetProjectAggregatedAutoscalers(GetProjectAggregatedAutoscalersRequest) returns (AutoscalerAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/autoscalers"
      };
    }
    // Retrieves the list of all BackendService resources, regional and global, available to the specified project.
    rpc GetProjectAggregatedBackendServices(GetProjectAggregatedBackendServicesRequest) returns (BackendServiceAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/backendServices"
      };
    }
    // Retrieves an aggregated list of commitments.
    rpc GetProjectAggregatedCommitments(GetProjectAggregatedCommitmentsRequest) returns (CommitmentAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/commitments"
      };
    }
    // Retrieves an aggregated list of disk types.
    rpc GetProjectAggregatedDiskTypes(GetProjectAggregatedDiskTypesRequest) returns (DiskTypeAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/diskTypes"
      };
    }
    // Retrieves an aggregated list of persistent disks.
    rpc GetProjectAggregatedDisks(GetProjectAggregatedDisksRequest) returns (DiskAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/disks"
      };
    }
    // Retrieves an aggregated list of forwarding rules.
    rpc GetProjectAggregatedForwardingRules(GetProjectAggregatedForwardingRulesRequest) returns (ForwardingRuleAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/forwardingRules"
      };
    }
    // Retrieves the list of managed instance groups and groups them by zone.
    rpc GetProjectAggregatedInstanceGroupManagers(GetProjectAggregatedInstanceGroupManagersRequest) returns (InstanceGroupManagerAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/instanceGroupManagers"
      };
    }
    // Retrieves the list of instance groups and sorts them by zone.
    rpc GetProjectAggregatedInstanceGroups(GetProjectAggregatedInstanceGroupsRequest) returns (InstanceGroupAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/instanceGroups"
      };
    }
    // Retrieves aggregated list of instances.
    rpc GetProjectAggregatedInstances(GetProjectAggregatedInstancesRequest) returns (InstanceAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/instances"
      };
    }
    // Retrieves an aggregated list of interconnect attachments.
    rpc GetProjectAggregatedInterconnectAttachments(GetProjectAggregatedInterconnectAttachmentsRequest) returns (InterconnectAttachmentAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/interconnectAttachments"
      };
    }
    // Retrieves an aggregated list of machine types.
    rpc GetProjectAggregatedMachineTypes(GetProjectAggregatedMachineTypesRequest) returns (MachineTypeAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/machineTypes"
      };
    }
    // Retrieves an aggregated list of all operations.
    rpc GetProjectAggregatedOperations(GetProjectAggregatedOperationsRequest) returns (OperationAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/operations"
      };
    }
    // Retrieves an aggregated list of routers.
    rpc GetProjectAggregatedRouters(GetProjectAggregatedRoutersRequest) returns (RouterAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/routers"
      };
    }
    // Retrieves an aggregated list of subnetworks.
    rpc GetProjectAggregatedSubnetworks(GetProjectAggregatedSubnetworksRequest) returns (SubnetworkAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/subnetworks"
      };
    }
    // Retrieves an aggregated list of target instances.
    rpc GetProjectAggregatedTargetInstances(GetProjectAggregatedTargetInstancesRequest) returns (TargetInstanceAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/targetInstances"
      };
    }
    // Retrieves an aggregated list of target pools.
    rpc GetProjectAggregatedTargetPools(GetProjectAggregatedTargetPoolsRequest) returns (TargetPoolAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/targetPools"
      };
    }
    // Retrieves an aggregated list of target VPN gateways.
    rpc GetProjectAggregatedTargetVpnGateways(GetProjectAggregatedTargetVpnGatewaysRequest) returns (TargetVpnGatewayAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/targetVpnGateways"
      };
    }
    // Retrieves an aggregated list of VPN tunnels.
    rpc GetProjectAggregatedVpnTunnels(GetProjectAggregatedVpnTunnelsRequest) returns (VpnTunnelAggregatedList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/aggregated/vpnTunnels"
      };
    }
    // Disable this project as a shared VPC host project.
    rpc PostProjectDisableXpnHost(PostProjectDisableXpnHostRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/disableXpnHost"
      };
    }
    // Disable a serivce resource (a.k.a service project) associated with this host project.
    rpc PostProjectDisableXpnResource(PostProjectDisableXpnResourceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/disableXpnResource"
        body: "body"
      };
    }
    // Enable this project as a shared VPC host project.
    rpc PostProjectEnableXpnHost(PostProjectEnableXpnHostRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/enableXpnHost"
      };
    }
    // Enable service resource (a.k.a service project) for a host project, so that subnets in the host project can be used by instances in the service project.
    rpc PostProjectEnableXpnResource(PostProjectEnableXpnResourceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/enableXpnResource"
        body: "body"
      };
    }
    // Get the shared VPC host project that this project links to. May be empty if no link exists.
    rpc GetProjectGetXpnHost(GetProjectGetXpnHostRequest) returns (Project) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/getXpnHost"
      };
    }
    // Get service resources (a.k.a service project) associated with this host project.
    rpc GetProjectGetXpnResources(GetProjectGetXpnResourcesRequest) returns (ProjectsGetXpnResources) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/getXpnResources"
      };
    }
    // Retrieves a list of global addresses.
    rpc GetProjectGlobalAddresses(GetProjectGlobalAddressesRequest) returns (AddressList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/addresses"
      };
    }
    // Creates an address resource in the specified project using the data included in the request.
    rpc PostProjectGlobalAddresses(PostProjectGlobalAddressesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/addresses"
        body: "body"
      };
    }
    // Returns the specified address resource. Get a list of available addresses by making a list() request.
    rpc GetProjectGlobalAddressesAddress(GetProjectGlobalAddressesAddressRequest) returns (Address) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/addresses/{address}"
      };
    }
    // Deletes the specified address resource.
    rpc DeleteProjectGlobalAddressesAddress(DeleteProjectGlobalAddressesAddressRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/addresses/{address}"
      };
    }
    // Sets the labels on a GlobalAddress. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectGlobalAddressesResourceSetLabels(PostProjectGlobalAddressesResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/addresses/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalAddressesResourceTestIamPermissions(PostProjectGlobalAddressesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/addresses/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of BackendBucket resources available to the specified project.
    rpc GetProjectGlobalBackendBuckets(GetProjectGlobalBackendBucketsRequest) returns (BackendBucketList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/backendBuckets"
      };
    }
    // Creates a BackendBucket resource in the specified project using the data included in the request.
    rpc PostProjectGlobalBackendBuckets(PostProjectGlobalBackendBucketsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/backendBuckets"
        body: "body"
      };
    }
    // Returns the specified BackendBucket resource. Get a list of available backend buckets by making a list() request.
    rpc GetProjectGlobalBackendBucketsBackendBucket(GetProjectGlobalBackendBucketsBackendBucketRequest) returns (BackendBucket) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/backendBuckets/{backendBucket}"
      };
    }
    // Updates the specified BackendBucket resource with the data included in the request.
    rpc PutProjectGlobalBackendBucketsBackendBucket(PutProjectGlobalBackendBucketsBackendBucketRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/backendBuckets/{backendBucket}"
        body: "body"
      };
    }
    // Deletes the specified BackendBucket resource.
    rpc DeleteProjectGlobalBackendBucketsBackendBucket(DeleteProjectGlobalBackendBucketsBackendBucketRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/backendBuckets/{backendBucket}"
      };
    }
    // Retrieves the list of BackendService resources available to the specified project.
    rpc GetProjectGlobalBackendServices(GetProjectGlobalBackendServicesRequest) returns (BackendServiceList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/backendServices"
      };
    }
    // Creates a BackendService resource in the specified project using the data included in the request. There are several restrictions and guidelines to keep in mind when creating a backend service. Read  Restrictions and Guidelines for more information.
    rpc PostProjectGlobalBackendServices(PostProjectGlobalBackendServicesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/backendServices"
        body: "body"
      };
    }
    // Returns the specified BackendService resource. Get a list of available backend services by making a list() request.
    rpc GetProjectGlobalBackendServicesBackendService(GetProjectGlobalBackendServicesBackendServiceRequest) returns (BackendService) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/backendServices/{backendService}"
      };
    }
    // Updates the specified BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information.
    rpc PutProjectGlobalBackendServicesBackendService(PutProjectGlobalBackendServicesBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/backendServices/{backendService}"
        body: "body"
      };
    }
    // Deletes the specified BackendService resource.
    rpc DeleteProjectGlobalBackendServicesBackendService(DeleteProjectGlobalBackendServicesBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/backendServices/{backendService}"
      };
    }
    // Gets the most recent health check results for this BackendService.
    rpc PostProjectGlobalBackendServicesBackendServiceGetHealth(PostProjectGlobalBackendServicesBackendServiceGetHealthRequest) returns (BackendServiceGroupHealth) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/backendServices/{backendService}/getHealth"
        body: "body"
      };
    }
    // Sets the security policy for the specified backend service.
    rpc PostProjectGlobalBackendServicesBackendServiceSetSecurityPolicy(PostProjectGlobalBackendServicesBackendServiceSetSecurityPolicyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/backendServices/{backendService}/setSecurityPolicy"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalBackendServicesResourceTestIamPermissions(PostProjectGlobalBackendServicesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/backendServices/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of firewall rules available to the specified project.
    rpc GetProjectGlobalFirewalls(GetProjectGlobalFirewallsRequest) returns (FirewallList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/firewalls"
      };
    }
    // Creates a firewall rule in the specified project using the data included in the request.
    rpc PostProjectGlobalFirewalls(PostProjectGlobalFirewallsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/firewalls"
        body: "body"
      };
    }
    // Returns the specified firewall.
    rpc GetProjectGlobalFirewallsFirewall(GetProjectGlobalFirewallsFirewallRequest) returns (Firewall) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/firewalls/{firewall}"
      };
    }
    // Updates the specified firewall rule with the data included in the request. Using PUT method, can only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags, targetTags.
    rpc PutProjectGlobalFirewallsFirewall(PutProjectGlobalFirewallsFirewallRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/firewalls/{firewall}"
        body: "body"
      };
    }
    // Deletes the specified firewall.
    rpc DeleteProjectGlobalFirewallsFirewall(DeleteProjectGlobalFirewallsFirewallRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/firewalls/{firewall}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalFirewallsResourceTestIamPermissions(PostProjectGlobalFirewallsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/firewalls/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of GlobalForwardingRule resources available to the specified project.
    rpc GetProjectGlobalForwardingRules(GetProjectGlobalForwardingRulesRequest) returns (ForwardingRuleList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/forwardingRules"
      };
    }
    // Creates a GlobalForwardingRule resource in the specified project using the data included in the request.
    rpc PostProjectGlobalForwardingRules(PostProjectGlobalForwardingRulesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/forwardingRules"
        body: "body"
      };
    }
    // Returns the specified GlobalForwardingRule resource. Get a list of available forwarding rules by making a list() request.
    rpc GetProjectGlobalForwardingRulesForwardingRule(GetProjectGlobalForwardingRulesForwardingRuleRequest) returns (ForwardingRule) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/forwardingRules/{forwardingRule}"
      };
    }
    // Deletes the specified GlobalForwardingRule resource.
    rpc DeleteProjectGlobalForwardingRulesForwardingRule(DeleteProjectGlobalForwardingRulesForwardingRuleRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/forwardingRules/{forwardingRule}"
      };
    }
    // Changes target URL for the GlobalForwardingRule resource. The new target should be of the same type as the old target.
    rpc PostProjectGlobalForwardingRulesForwardingRuleSetTarget(PostProjectGlobalForwardingRulesForwardingRuleSetTargetRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/forwardingRules/{forwardingRule}/setTarget"
        body: "body"
      };
    }
    // Sets the labels on the specified resource. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectGlobalForwardingRulesResourceSetLabels(PostProjectGlobalForwardingRulesResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/forwardingRules/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalForwardingRulesResourceTestIamPermissions(PostProjectGlobalForwardingRulesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/forwardingRules/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of HealthCheck resources available to the specified project.
    rpc GetProjectGlobalHealthChecks(GetProjectGlobalHealthChecksRequest) returns (HealthCheckList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/healthChecks"
      };
    }
    // Creates a HealthCheck resource in the specified project using the data included in the request.
    rpc PostProjectGlobalHealthChecks(PostProjectGlobalHealthChecksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/healthChecks"
        body: "body"
      };
    }
    // Returns the specified HealthCheck resource. Get a list of available health checks by making a list() request.
    rpc GetProjectGlobalHealthChecksHealthCheck(GetProjectGlobalHealthChecksHealthCheckRequest) returns (HealthCheck) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/healthChecks/{healthCheck}"
      };
    }
    // Updates a HealthCheck resource in the specified project using the data included in the request.
    rpc PutProjectGlobalHealthChecksHealthCheck(PutProjectGlobalHealthChecksHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/healthChecks/{healthCheck}"
        body: "body"
      };
    }
    // Deletes the specified HealthCheck resource.
    rpc DeleteProjectGlobalHealthChecksHealthCheck(DeleteProjectGlobalHealthChecksHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/healthChecks/{healthCheck}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalHealthChecksResourceTestIamPermissions(PostProjectGlobalHealthChecksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/healthChecks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of HttpHealthCheck resources available to the specified project.
    rpc GetProjectGlobalHttpHealthChecks(GetProjectGlobalHttpHealthChecksRequest) returns (HttpHealthCheckList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/httpHealthChecks"
      };
    }
    // Creates a HttpHealthCheck resource in the specified project using the data included in the request.
    rpc PostProjectGlobalHttpHealthChecks(PostProjectGlobalHttpHealthChecksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/httpHealthChecks"
        body: "body"
      };
    }
    // Returns the specified HttpHealthCheck resource. Get a list of available HTTP health checks by making a list() request.
    rpc GetProjectGlobalHttpHealthChecksHttpHealthCheck(GetProjectGlobalHttpHealthChecksHttpHealthCheckRequest) returns (HttpHealthCheck) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/httpHealthChecks/{httpHealthCheck}"
      };
    }
    // Updates a HttpHealthCheck resource in the specified project using the data included in the request.
    rpc PutProjectGlobalHttpHealthChecksHttpHealthCheck(PutProjectGlobalHttpHealthChecksHttpHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/httpHealthChecks/{httpHealthCheck}"
        body: "body"
      };
    }
    // Deletes the specified HttpHealthCheck resource.
    rpc DeleteProjectGlobalHttpHealthChecksHttpHealthCheck(DeleteProjectGlobalHttpHealthChecksHttpHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/httpHealthChecks/{httpHealthCheck}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalHttpHealthChecksResourceTestIamPermissions(PostProjectGlobalHttpHealthChecksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/httpHealthChecks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of HttpsHealthCheck resources available to the specified project.
    rpc GetProjectGlobalHttpsHealthChecks(GetProjectGlobalHttpsHealthChecksRequest) returns (HttpsHealthCheckList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/httpsHealthChecks"
      };
    }
    // Creates a HttpsHealthCheck resource in the specified project using the data included in the request.
    rpc PostProjectGlobalHttpsHealthChecks(PostProjectGlobalHttpsHealthChecksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/httpsHealthChecks"
        body: "body"
      };
    }
    // Returns the specified HttpsHealthCheck resource. Get a list of available HTTPS health checks by making a list() request.
    rpc GetProjectGlobalHttpsHealthChecksHttpsHealthCheck(GetProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest) returns (HttpsHealthCheck) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}"
      };
    }
    // Updates a HttpsHealthCheck resource in the specified project using the data included in the request.
    rpc PutProjectGlobalHttpsHealthChecksHttpsHealthCheck(PutProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}"
        body: "body"
      };
    }
    // Deletes the specified HttpsHealthCheck resource.
    rpc DeleteProjectGlobalHttpsHealthChecksHttpsHealthCheck(DeleteProjectGlobalHttpsHealthChecksHttpsHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalHttpsHealthChecksResourceTestIamPermissions(PostProjectGlobalHttpsHealthChecksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/httpsHealthChecks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of private images available to the specified project. Private images are images you create that belong to your project. This method does not get any images that belong to other projects, including publicly-available images, like Debian 8. If you want to get a list of publicly-available images, use this method to make a request to the respective image project, such as debian-cloud or windows-cloud.
    rpc GetProjectGlobalImages(GetProjectGlobalImagesRequest) returns (ImageList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/images"
      };
    }
    // Creates an image in the specified project using the data included in the request.
    rpc PostProjectGlobalImages(PostProjectGlobalImagesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/images"
        body: "body"
      };
    }
    // Returns the latest image that is part of an image family and is not deprecated.
    rpc GetProjectGlobalImagesFamilyFamily(GetProjectGlobalImagesFamilyFamilyRequest) returns (Image) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/images/family/{family}"
      };
    }
    // Returns the specified image. Get a list of available images by making a list() request.
    rpc GetProjectGlobalImagesImage(GetProjectGlobalImagesImageRequest) returns (Image) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/images/{image}"
      };
    }
    // Deletes the specified image.
    rpc DeleteProjectGlobalImagesImage(DeleteProjectGlobalImagesImageRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/images/{image}"
      };
    }
    // Sets the deprecation status of an image.
    // 
    // If an empty request body is given, clears the deprecation status instead.
    rpc PostProjectGlobalImagesImageDeprecate(PostProjectGlobalImagesImageDeprecateRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/images/{image}/deprecate"
        body: "body"
      };
    }
    // Sets the labels on an image. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectGlobalImagesResourceSetLabels(PostProjectGlobalImagesResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/images/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalImagesResourceTestIamPermissions(PostProjectGlobalImagesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/images/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of instance templates that are contained within the specified project and zone.
    rpc GetProjectGlobalInstanceTemplates(GetProjectGlobalInstanceTemplatesRequest) returns (InstanceTemplateList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/instanceTemplates"
      };
    }
    // Creates an instance template in the specified project using the data that is included in the request. If you are creating a new template to update an existing instance group, your new instance template must use the same network or, if applicable, the same subnetwork as the original template.
    rpc PostProjectGlobalInstanceTemplates(PostProjectGlobalInstanceTemplatesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/instanceTemplates"
        body: "body"
      };
    }
    // Returns the specified instance template. Get a list of available instance templates by making a list() request.
    rpc GetProjectGlobalInstanceTemplatesInstanceTemplate(GetProjectGlobalInstanceTemplatesInstanceTemplateRequest) returns (InstanceTemplate) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/instanceTemplates/{instanceTemplate}"
      };
    }
    // Deletes the specified instance template. If you delete an instance template that is being referenced from another instance group, the instance group will not be able to create or recreate virtual machine instances. Deleting an instance template is permanent and cannot be undone.
    rpc DeleteProjectGlobalInstanceTemplatesInstanceTemplate(DeleteProjectGlobalInstanceTemplatesInstanceTemplateRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/instanceTemplates/{instanceTemplate}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalInstanceTemplatesResourceTestIamPermissions(PostProjectGlobalInstanceTemplatesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/instanceTemplates/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of interconnect locations available to the specified project.
    rpc GetProjectGlobalInterconnectLocations(GetProjectGlobalInterconnectLocationsRequest) returns (InterconnectLocationList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/interconnectLocations"
      };
    }
    // Returns the details for the specified interconnect location. Get a list of available interconnect locations by making a list() request.
    rpc GetProjectGlobalInterconnectLocationsInterconnectLocation(GetProjectGlobalInterconnectLocationsInterconnectLocationRequest) returns (InterconnectLocation) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/interconnectLocations/{interconnectLocation}"
      };
    }
    // Retrieves the list of interconnect available to the specified project.
    rpc GetProjectGlobalInterconnects(GetProjectGlobalInterconnectsRequest) returns (InterconnectList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/interconnects"
      };
    }
    // Creates a Interconnect in the specified project using the data included in the request.
    rpc PostProjectGlobalInterconnects(PostProjectGlobalInterconnectsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/interconnects"
        body: "body"
      };
    }
    // Returns the specified interconnect. Get a list of available interconnects by making a list() request.
    rpc GetProjectGlobalInterconnectsInterconnect(GetProjectGlobalInterconnectsInterconnectRequest) returns (Interconnect) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/interconnects/{interconnect}"
      };
    }
    // Deletes the specified interconnect.
    rpc DeleteProjectGlobalInterconnectsInterconnect(DeleteProjectGlobalInterconnectsInterconnectRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/interconnects/{interconnect}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalInterconnectsResourceTestIamPermissions(PostProjectGlobalInterconnectsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/interconnects/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified License resource.
    rpc GetProjectGlobalLicensesLicense(GetProjectGlobalLicensesLicenseRequest) returns (License) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/licenses/{license}"
      };
    }
    // Retrieves the list of networks available to the specified project.
    rpc GetProjectGlobalNetworks(GetProjectGlobalNetworksRequest) returns (NetworkList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/networks"
      };
    }
    // Creates a network in the specified project using the data included in the request.
    rpc PostProjectGlobalNetworks(PostProjectGlobalNetworksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/networks"
        body: "body"
      };
    }
    // Returns the specified network. Get a list of available networks by making a list() request.
    rpc GetProjectGlobalNetworksNetwork(GetProjectGlobalNetworksNetworkRequest) returns (Network) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/networks/{network}"
      };
    }
    // Deletes the specified network.
    rpc DeleteProjectGlobalNetworksNetwork(DeleteProjectGlobalNetworksNetworkRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/networks/{network}"
      };
    }
    // Adds a peering to the specified network.
    rpc PostProjectGlobalNetworksNetworkAddPeering(PostProjectGlobalNetworksNetworkAddPeeringRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/networks/{network}/addPeering"
        body: "body"
      };
    }
    // Removes a peering from the specified network.
    rpc PostProjectGlobalNetworksNetworkRemovePeering(PostProjectGlobalNetworksNetworkRemovePeeringRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/networks/{network}/removePeering"
        body: "body"
      };
    }
    // Switches the network mode from auto subnet mode to custom subnet mode.
    rpc PostProjectGlobalNetworksNetworkSwitchToCustomMode(PostProjectGlobalNetworksNetworkSwitchToCustomModeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/networks/{network}/switchToCustomMode"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalNetworksResourceTestIamPermissions(PostProjectGlobalNetworksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/networks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of Operation resources contained within the specified project.
    rpc GetProjectGlobalOperations(GetProjectGlobalOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/operations"
      };
    }
    // Retrieves the specified Operations resource. Get a list of operations by making a list() request.
    rpc GetProjectGlobalOperationsOperation(GetProjectGlobalOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/operations/{operation}"
      };
    }
    // Deletes the specified Operations resource.
    rpc DeleteProjectGlobalOperationsOperation(DeleteProjectGlobalOperationsOperationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/operations/{operation}"
      };
    }
    // Retrieves the list of Route resources available to the specified project.
    rpc GetProjectGlobalRoutes(GetProjectGlobalRoutesRequest) returns (RouteList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/routes"
      };
    }
    // Creates a Route resource in the specified project using the data included in the request.
    rpc PostProjectGlobalRoutes(PostProjectGlobalRoutesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/routes"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalRoutesResourceTestIamPermissions(PostProjectGlobalRoutesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/routes/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified Route resource. Get a list of available routes by making a list() request.
    rpc GetProjectGlobalRoutesRoute(GetProjectGlobalRoutesRouteRequest) returns (Route) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/routes/{route}"
      };
    }
    // Deletes the specified Route resource.
    rpc DeleteProjectGlobalRoutesRoute(DeleteProjectGlobalRoutesRouteRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/routes/{route}"
      };
    }
    // List all the policies that have been configured for the specified project.
    rpc GetProjectGlobalSecurityPolicies(GetProjectGlobalSecurityPoliciesRequest) returns (SecurityPolicyList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/securityPolicies"
      };
    }
    // Creates a new policy in the specified project using the data included in the request.
    rpc PostProjectGlobalSecurityPolicies(PostProjectGlobalSecurityPoliciesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/securityPolicies"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalSecurityPoliciesResourceTestIamPermissions(PostProjectGlobalSecurityPoliciesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/securityPolicies/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // List all of the ordered rules present in a single specified policy.
    rpc GetProjectGlobalSecurityPoliciesSecurityPolicy(GetProjectGlobalSecurityPoliciesSecurityPolicyRequest) returns (SecurityPolicy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/securityPolicies/{securityPolicy}"
      };
    }
    // Deletes the specified policy.
    rpc DeleteProjectGlobalSecurityPoliciesSecurityPolicy(DeleteProjectGlobalSecurityPoliciesSecurityPolicyRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/securityPolicies/{securityPolicy}"
      };
    }
    // Retrieves the list of Snapshot resources contained within the specified project.
    rpc GetProjectGlobalSnapshots(GetProjectGlobalSnapshotsRequest) returns (SnapshotList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/snapshots"
      };
    }
    // Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectGlobalSnapshotsResourceSetLabels(PostProjectGlobalSnapshotsResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/snapshots/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalSnapshotsResourceTestIamPermissions(PostProjectGlobalSnapshotsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/snapshots/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified Snapshot resource. Get a list of available snapshots by making a list() request.
    rpc GetProjectGlobalSnapshotsSnapshot(GetProjectGlobalSnapshotsSnapshotRequest) returns (Snapshot) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/snapshots/{snapshot}"
      };
    }
    // Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for deletion is needed for subsequent snapshots, the data will be moved to the next corresponding snapshot.
    // 
    // For more information, see Deleting snaphots.
    rpc DeleteProjectGlobalSnapshotsSnapshot(DeleteProjectGlobalSnapshotsSnapshotRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/snapshots/{snapshot}"
      };
    }
    // Retrieves the list of SslCertificate resources available to the specified project.
    rpc GetProjectGlobalSslCertificates(GetProjectGlobalSslCertificatesRequest) returns (SslCertificateList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/sslCertificates"
      };
    }
    // Creates a SslCertificate resource in the specified project using the data included in the request.
    rpc PostProjectGlobalSslCertificates(PostProjectGlobalSslCertificatesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/sslCertificates"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalSslCertificatesResourceTestIamPermissions(PostProjectGlobalSslCertificatesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/sslCertificates/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified SslCertificate resource. Get a list of available SSL certificates by making a list() request.
    rpc GetProjectGlobalSslCertificatesSslCertificate(GetProjectGlobalSslCertificatesSslCertificateRequest) returns (SslCertificate) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/sslCertificates/{sslCertificate}"
      };
    }
    // Deletes the specified SslCertificate resource.
    rpc DeleteProjectGlobalSslCertificatesSslCertificate(DeleteProjectGlobalSslCertificatesSslCertificateRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/sslCertificates/{sslCertificate}"
      };
    }
    // Retrieves the list of TargetHttpProxy resources available to the specified project.
    rpc GetProjectGlobalTargetHttpProxies(GetProjectGlobalTargetHttpProxiesRequest) returns (TargetHttpProxyList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetHttpProxies"
      };
    }
    // Creates a TargetHttpProxy resource in the specified project using the data included in the request.
    rpc PostProjectGlobalTargetHttpProxies(PostProjectGlobalTargetHttpProxiesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetHttpProxies"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalTargetHttpProxiesResourceTestIamPermissions(PostProjectGlobalTargetHttpProxiesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetHttpProxies/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified TargetHttpProxy resource. Get a list of available target HTTP proxies by making a list() request.
    rpc GetProjectGlobalTargetHttpProxiesTargetHttpProxy(GetProjectGlobalTargetHttpProxiesTargetHttpProxyRequest) returns (TargetHttpProxy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetHttpProxies/{targetHttpProxy}"
      };
    }
    // Deletes the specified TargetHttpProxy resource.
    rpc DeleteProjectGlobalTargetHttpProxiesTargetHttpProxy(DeleteProjectGlobalTargetHttpProxiesTargetHttpProxyRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/targetHttpProxies/{targetHttpProxy}"
      };
    }
    // Retrieves the list of TargetHttpsProxy resources available to the specified project.
    rpc GetProjectGlobalTargetHttpsProxies(GetProjectGlobalTargetHttpsProxiesRequest) returns (TargetHttpsProxyList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetHttpsProxies"
      };
    }
    // Creates a TargetHttpsProxy resource in the specified project using the data included in the request.
    rpc PostProjectGlobalTargetHttpsProxies(PostProjectGlobalTargetHttpsProxiesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetHttpsProxies"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalTargetHttpsProxiesResourceTestIamPermissions(PostProjectGlobalTargetHttpsProxiesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetHttpsProxies/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified TargetHttpsProxy resource. Get a list of available target HTTPS proxies by making a list() request.
    rpc GetProjectGlobalTargetHttpsProxiesTargetHttpsProxy(GetProjectGlobalTargetHttpsProxiesTargetHttpsProxyRequest) returns (TargetHttpsProxy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}"
      };
    }
    // Deletes the specified TargetHttpsProxy resource.
    rpc DeleteProjectGlobalTargetHttpsProxiesTargetHttpsProxy(DeleteProjectGlobalTargetHttpsProxiesTargetHttpsProxyRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}"
      };
    }
    // Retrieves the list of TargetSslProxy resources available to the specified project.
    rpc GetProjectGlobalTargetSslProxies(GetProjectGlobalTargetSslProxiesRequest) returns (TargetSslProxyList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetSslProxies"
      };
    }
    // Creates a TargetSslProxy resource in the specified project using the data included in the request.
    rpc PostProjectGlobalTargetSslProxies(PostProjectGlobalTargetSslProxiesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetSslProxies"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalTargetSslProxiesResourceTestIamPermissions(PostProjectGlobalTargetSslProxiesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetSslProxies/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified TargetSslProxy resource. Get a list of available target SSL proxies by making a list() request.
    rpc GetProjectGlobalTargetSslProxiesTargetSslProxy(GetProjectGlobalTargetSslProxiesTargetSslProxyRequest) returns (TargetSslProxy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetSslProxies/{targetSslProxy}"
      };
    }
    // Deletes the specified TargetSslProxy resource.
    rpc DeleteProjectGlobalTargetSslProxiesTargetSslProxy(DeleteProjectGlobalTargetSslProxiesTargetSslProxyRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/targetSslProxies/{targetSslProxy}"
      };
    }
    // Changes the BackendService for TargetSslProxy.
    rpc PostProjectGlobalTargetSslProxiesTargetSslProxySetBackendService(PostProjectGlobalTargetSslProxiesTargetSslProxySetBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService"
        body: "body"
      };
    }
    // Changes the ProxyHeaderType for TargetSslProxy.
    rpc PostProjectGlobalTargetSslProxiesTargetSslProxySetProxyHeader(PostProjectGlobalTargetSslProxiesTargetSslProxySetProxyHeaderRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader"
        body: "body"
      };
    }
    // Changes SslCertificates for TargetSslProxy.
    rpc PostProjectGlobalTargetSslProxiesTargetSslProxySetSslCertificates(PostProjectGlobalTargetSslProxiesTargetSslProxySetSslCertificatesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates"
        body: "body"
      };
    }
    // Retrieves the list of TargetTcpProxy resources available to the specified project.
    rpc GetProjectGlobalTargetTcpProxies(GetProjectGlobalTargetTcpProxiesRequest) returns (TargetTcpProxyList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetTcpProxies"
      };
    }
    // Creates a TargetTcpProxy resource in the specified project using the data included in the request.
    rpc PostProjectGlobalTargetTcpProxies(PostProjectGlobalTargetTcpProxiesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetTcpProxies"
        body: "body"
      };
    }
    // Returns the specified TargetTcpProxy resource. Get a list of available target TCP proxies by making a list() request.
    rpc GetProjectGlobalTargetTcpProxiesTargetTcpProxy(GetProjectGlobalTargetTcpProxiesTargetTcpProxyRequest) returns (TargetTcpProxy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/targetTcpProxies/{targetTcpProxy}"
      };
    }
    // Deletes the specified TargetTcpProxy resource.
    rpc DeleteProjectGlobalTargetTcpProxiesTargetTcpProxy(DeleteProjectGlobalTargetTcpProxiesTargetTcpProxyRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/targetTcpProxies/{targetTcpProxy}"
      };
    }
    // Changes the BackendService for TargetTcpProxy.
    rpc PostProjectGlobalTargetTcpProxiesTargetTcpProxySetBackendService(PostProjectGlobalTargetTcpProxiesTargetTcpProxySetBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService"
        body: "body"
      };
    }
    // Changes the ProxyHeaderType for TargetTcpProxy.
    rpc PostProjectGlobalTargetTcpProxiesTargetTcpProxySetProxyHeader(PostProjectGlobalTargetTcpProxiesTargetTcpProxySetProxyHeaderRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader"
        body: "body"
      };
    }
    // Retrieves the list of UrlMap resources available to the specified project.
    rpc GetProjectGlobalUrlMaps(GetProjectGlobalUrlMapsRequest) returns (UrlMapList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/urlMaps"
      };
    }
    // Creates a UrlMap resource in the specified project using the data included in the request.
    rpc PostProjectGlobalUrlMaps(PostProjectGlobalUrlMapsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/urlMaps"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectGlobalUrlMapsResourceTestIamPermissions(PostProjectGlobalUrlMapsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/urlMaps/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified UrlMap resource. Get a list of available URL maps by making a list() request.
    rpc GetProjectGlobalUrlMapsUrlMap(GetProjectGlobalUrlMapsUrlMapRequest) returns (UrlMap) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/global/urlMaps/{urlMap}"
      };
    }
    // Updates the specified UrlMap resource with the data included in the request.
    rpc PutProjectGlobalUrlMapsUrlMap(PutProjectGlobalUrlMapsUrlMapRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/global/urlMaps/{urlMap}"
        body: "body"
      };
    }
    // Deletes the specified UrlMap resource.
    rpc DeleteProjectGlobalUrlMapsUrlMap(DeleteProjectGlobalUrlMapsUrlMapRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/global/urlMaps/{urlMap}"
      };
    }
    // Initiates a cache invalidation operation, invalidating the specified path, scoped to the specified UrlMap.
    rpc PostProjectGlobalUrlMapsUrlMapInvalidateCache(PostProjectGlobalUrlMapsUrlMapInvalidateCacheRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/urlMaps/{urlMap}/invalidateCache"
        body: "body"
      };
    }
    // Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run. Calling this method does NOT create the UrlMap.
    rpc PostProjectGlobalUrlMapsUrlMapValidate(PostProjectGlobalUrlMapsUrlMapValidateRequest) returns (UrlMapsValidateResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/global/urlMaps/{urlMap}/validate"
        body: "body"
      };
    }
    // List all shared VPC host projects visible to the user in an organization.
    rpc PostProjectListXpnHosts(PostProjectListXpnHostsRequest) returns (XpnHostList) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/listXpnHosts"
        body: "body"
      };
    }
    // Moves a persistent disk from one zone to another.
    rpc PostProjectMoveDisk(PostProjectMoveDiskRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/moveDisk"
        body: "body"
      };
    }
    // Moves an instance and its attached persistent disks from one zone to another.
    rpc PostProjectMoveInstance(PostProjectMoveInstanceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/moveInstance"
        body: "body"
      };
    }
    // Retrieves the list of region resources available to the specified project.
    rpc GetProjectRegions(GetProjectRegionsRequest) returns (RegionList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions"
      };
    }
    // Returns the specified Region resource. Get a list of available regions by making a list() request.
    rpc GetProjectRegionsRegion(GetProjectRegionsRegionRequest) returns (Region) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}"
      };
    }
    // Retrieves a list of addresses contained within the specified region.
    rpc GetProjectRegionsRegionAddresses(GetProjectRegionsRegionAddressesRequest) returns (AddressList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/addresses"
      };
    }
    // Creates an address resource in the specified project using the data included in the request.
    rpc PostProjectRegionsRegionAddresses(PostProjectRegionsRegionAddressesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/addresses"
        body: "body"
      };
    }
    // Returns the specified address resource.
    rpc GetProjectRegionsRegionAddressesAddress(GetProjectRegionsRegionAddressesAddressRequest) returns (Address) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/addresses/{address}"
      };
    }
    // Deletes the specified address resource.
    rpc DeleteProjectRegionsRegionAddressesAddress(DeleteProjectRegionsRegionAddressesAddressRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/addresses/{address}"
      };
    }
    // Sets the labels on an Address. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectRegionsRegionAddressesResourceSetLabels(PostProjectRegionsRegionAddressesResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/addresses/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionAddressesResourceTestIamPermissions(PostProjectRegionsRegionAddressesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/addresses/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of autoscalers contained within the specified region.
    rpc GetProjectRegionsRegionAutoscalers(GetProjectRegionsRegionAutoscalersRequest) returns (RegionAutoscalerList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/autoscalers"
      };
    }
    // Updates an autoscaler in the specified project using the data included in the request.
    rpc PutProjectRegionsRegionAutoscalers(PutProjectRegionsRegionAutoscalersRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/regions/{region}/autoscalers"
        body: "body"
      };
    }
    // Creates an autoscaler in the specified project using the data included in the request.
    rpc PostProjectRegionsRegionAutoscalers(PostProjectRegionsRegionAutoscalersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/autoscalers"
        body: "body"
      };
    }
    // Returns the specified autoscaler.
    rpc GetProjectRegionsRegionAutoscalersAutoscaler(GetProjectRegionsRegionAutoscalersAutoscalerRequest) returns (Autoscaler) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/autoscalers/{autoscaler}"
      };
    }
    // Deletes the specified autoscaler.
    rpc DeleteProjectRegionsRegionAutoscalersAutoscaler(DeleteProjectRegionsRegionAutoscalersAutoscalerRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/autoscalers/{autoscaler}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionAutoscalersResourceTestIamPermissions(PostProjectRegionsRegionAutoscalersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/autoscalers/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of regional BackendService resources available to the specified project in the given region.
    rpc GetProjectRegionsRegionBackendServices(GetProjectRegionsRegionBackendServicesRequest) returns (BackendServiceList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/backendServices"
      };
    }
    // Creates a regional BackendService resource in the specified project using the data included in the request. There are several restrictions and guidelines to keep in mind when creating a regional backend service. Read  Restrictions and Guidelines for more information.
    rpc PostProjectRegionsRegionBackendServices(PostProjectRegionsRegionBackendServicesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/backendServices"
        body: "body"
      };
    }
    // Returns the specified regional BackendService resource.
    rpc GetProjectRegionsRegionBackendServicesBackendService(GetProjectRegionsRegionBackendServicesBackendServiceRequest) returns (BackendService) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/backendServices/{backendService}"
      };
    }
    // Updates the specified regional BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information.
    rpc PutProjectRegionsRegionBackendServicesBackendService(PutProjectRegionsRegionBackendServicesBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/regions/{region}/backendServices/{backendService}"
        body: "body"
      };
    }
    // Deletes the specified regional BackendService resource.
    rpc DeleteProjectRegionsRegionBackendServicesBackendService(DeleteProjectRegionsRegionBackendServicesBackendServiceRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/backendServices/{backendService}"
      };
    }
    // Gets the most recent health check results for this regional BackendService.
    rpc PostProjectRegionsRegionBackendServicesBackendServiceGetHealth(PostProjectRegionsRegionBackendServicesBackendServiceGetHealthRequest) returns (BackendServiceGroupHealth) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/backendServices/{backendService}/getHealth"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionBackendServicesResourceTestIamPermissions(PostProjectRegionsRegionBackendServicesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/backendServices/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of commitments contained within the specified region.
    rpc GetProjectRegionsRegionCommitments(GetProjectRegionsRegionCommitmentsRequest) returns (CommitmentList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/commitments"
      };
    }
    // Creates a commitment in the specified project using the data included in the request.
    rpc PostProjectRegionsRegionCommitments(PostProjectRegionsRegionCommitmentsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/commitments"
        body: "body"
      };
    }
    // Returns the specified commitment resource. Get a list of available commitments by making a list() request.
    rpc GetProjectRegionsRegionCommitmentsCommitment(GetProjectRegionsRegionCommitmentsCommitmentRequest) returns (Commitment) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/commitments/{commitment}"
      };
    }
    // Retrieves a list of ForwardingRule resources available to the specified project and region.
    rpc GetProjectRegionsRegionForwardingRules(GetProjectRegionsRegionForwardingRulesRequest) returns (ForwardingRuleList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/forwardingRules"
      };
    }
    // Creates a ForwardingRule resource in the specified project and region using the data included in the request.
    rpc PostProjectRegionsRegionForwardingRules(PostProjectRegionsRegionForwardingRulesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/forwardingRules"
        body: "body"
      };
    }
    // Returns the specified ForwardingRule resource.
    rpc GetProjectRegionsRegionForwardingRulesForwardingRule(GetProjectRegionsRegionForwardingRulesForwardingRuleRequest) returns (ForwardingRule) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/forwardingRules/{forwardingRule}"
      };
    }
    // Deletes the specified ForwardingRule resource.
    rpc DeleteProjectRegionsRegionForwardingRulesForwardingRule(DeleteProjectRegionsRegionForwardingRulesForwardingRuleRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/forwardingRules/{forwardingRule}"
      };
    }
    // Changes target URL for forwarding rule. The new target should be of the same type as the old target.
    rpc PostProjectRegionsRegionForwardingRulesForwardingRuleSetTarget(PostProjectRegionsRegionForwardingRulesForwardingRuleSetTargetRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget"
        body: "body"
      };
    }
    // Sets the labels on the specified resource. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectRegionsRegionForwardingRulesResourceSetLabels(PostProjectRegionsRegionForwardingRulesResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/forwardingRules/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionForwardingRulesResourceTestIamPermissions(PostProjectRegionsRegionForwardingRulesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/forwardingRules/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of managed instance groups that are contained within the specified region.
    rpc GetProjectRegionsRegionInstanceGroupManagers(GetProjectRegionsRegionInstanceGroupManagersRequest) returns (RegionInstanceGroupManagerList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers"
      };
    }
    // Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method.
    // 
    // A regional managed instance group can contain up to 2000 instances.
    rpc PostProjectRegionsRegionInstanceGroupManagers(PostProjectRegionsRegionInstanceGroupManagersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers"
        body: "body"
      };
    }
    // Returns all of the details about the specified managed instance group.
    rpc GetProjectRegionsRegionInstanceGroupManagersInstanceGroupManager(GetProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest) returns (InstanceGroupManager) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"
      };
    }
    // Updates a managed instance group using the information that you specify in the request. This operation is marked as DONE when the group is updated even if the instances in the group have not yet been updated. You must separately verify the status of the individual instances with the listmanagedinstances method.
    rpc PutProjectRegionsRegionInstanceGroupManagersInstanceGroupManager(PutProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"
        body: "body"
      };
    }
    // Deletes the specified managed instance group and all of the instances in that group.
    rpc DeleteProjectRegionsRegionInstanceGroupManagersInstanceGroupManager(DeleteProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"
      };
    }
    // Schedules a group action to remove the specified instances from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerAbandonInstances(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerAbandonInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"
        body: "body"
      };
    }
    // Schedules a group action to delete the specified instances in the managed instance group. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. This operation is marked as DONE when the action is scheduled even if the instances are still being deleted. You must separately verify the status of the deleting action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerDeleteInstances(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerDeleteInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"
        body: "body"
      };
    }
    // Lists the instances in the managed instance group and instances that are scheduled to be created. The list includes any current actions that the group has scheduled for its instances.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerListManagedInstances(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerListManagedInstancesRequest) returns (RegionInstanceGroupManagersListInstancesResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"
      };
    }
    // Schedules a group action to recreate the specified instances in the managed instance group. The instances are deleted and recreated using the current instance template for the managed instance group. This operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated. You must separately verify the status of the recreating action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRecreateInstances(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerRecreateInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"
        body: "body"
      };
    }
    // Changes the intended size for the managed instance group. If you increase the size, the group schedules actions to create new instances using the current instance template. If you decrease the size, the group schedules delete actions on one or more instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerResize(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerResizeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize"
      };
    }
    // Modifies the autohealing policy for the instances in this managed instance group.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetAutoHealingPolicies(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetAutoHealingPoliciesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setAutoHealingPolicies"
        body: "body"
      };
    }
    // Sets the instance template to use when creating new instances or recreating instances in this group. Existing instances are not affected.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetInstanceTemplate(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetInstanceTemplateRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"
        body: "body"
      };
    }
    // Modifies the target pools to which all new instances in this group are assigned. Existing instances in the group are not affected.
    rpc PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetTargetPools(PostProjectRegionsRegionInstanceGroupManagersInstanceGroupManagerSetTargetPoolsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionInstanceGroupManagersResourceTestIamPermissions(PostProjectRegionsRegionInstanceGroupManagersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroupManagers/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of instance group resources contained within the specified region.
    rpc GetProjectRegionsRegionInstanceGroups(GetProjectRegionsRegionInstanceGroupsRequest) returns (RegionInstanceGroupList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/instanceGroups"
      };
    }
    // Returns the specified instance group resource.
    rpc GetProjectRegionsRegionInstanceGroupsInstanceGroup(GetProjectRegionsRegionInstanceGroupsInstanceGroupRequest) returns (InstanceGroup) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/instanceGroups/{instanceGroup}"
      };
    }
    // Lists the instances in the specified instance group and displays information about the named ports. Depending on the specified options, this method can list all instances or only the instances that are running.
    rpc PostProjectRegionsRegionInstanceGroupsInstanceGroupListInstances(PostProjectRegionsRegionInstanceGroupsInstanceGroupListInstancesRequest) returns (RegionInstanceGroupsListInstances) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances"
        body: "body"
      };
    }
    // Sets the named ports for the specified regional instance group.
    rpc PostProjectRegionsRegionInstanceGroupsInstanceGroupSetNamedPorts(PostProjectRegionsRegionInstanceGroupsInstanceGroupSetNamedPortsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionInstanceGroupsResourceTestIamPermissions(PostProjectRegionsRegionInstanceGroupsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/instanceGroups/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of interconnect attachments contained within the specified region.
    rpc GetProjectRegionsRegionInterconnectAttachments(GetProjectRegionsRegionInterconnectAttachmentsRequest) returns (InterconnectAttachmentList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/interconnectAttachments"
      };
    }
    // Creates an InterconnectAttachment in the specified project using the data included in the request.
    rpc PostProjectRegionsRegionInterconnectAttachments(PostProjectRegionsRegionInterconnectAttachmentsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/interconnectAttachments"
        body: "body"
      };
    }
    // Returns the specified interconnect attachment.
    rpc GetProjectRegionsRegionInterconnectAttachmentsInterconnectAttachment(GetProjectRegionsRegionInterconnectAttachmentsInterconnectAttachmentRequest) returns (InterconnectAttachment) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}"
      };
    }
    // Deletes the specified interconnect attachment.
    rpc DeleteProjectRegionsRegionInterconnectAttachmentsInterconnectAttachment(DeleteProjectRegionsRegionInterconnectAttachmentsInterconnectAttachmentRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionInterconnectAttachmentsResourceTestIamPermissions(PostProjectRegionsRegionInterconnectAttachmentsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/interconnectAttachments/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of Operation resources contained within the specified region.
    rpc GetProjectRegionsRegionOperations(GetProjectRegionsRegionOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/operations"
      };
    }
    // Retrieves the specified region-specific Operations resource.
    rpc GetProjectRegionsRegionOperationsOperation(GetProjectRegionsRegionOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/operations/{operation}"
      };
    }
    // Deletes the specified region-specific Operations resource.
    rpc DeleteProjectRegionsRegionOperationsOperation(DeleteProjectRegionsRegionOperationsOperationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/operations/{operation}"
      };
    }
    // Retrieves a list of Router resources available to the specified project.
    rpc GetProjectRegionsRegionRouters(GetProjectRegionsRegionRoutersRequest) returns (RouterList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/routers"
      };
    }
    // Creates a Router resource in the specified project and region using the data included in the request.
    rpc PostProjectRegionsRegionRouters(PostProjectRegionsRegionRoutersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/routers"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionRoutersResourceTestIamPermissions(PostProjectRegionsRegionRoutersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/routers/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified Router resource. Get a list of available routers by making a list() request.
    rpc GetProjectRegionsRegionRoutersRouter(GetProjectRegionsRegionRoutersRouterRequest) returns (Router) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/routers/{router}"
      };
    }
    // Updates the specified Router resource with the data included in the request.
    rpc PutProjectRegionsRegionRoutersRouter(PutProjectRegionsRegionRoutersRouterRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/regions/{region}/routers/{router}"
        body: "body"
      };
    }
    // Deletes the specified Router resource.
    rpc DeleteProjectRegionsRegionRoutersRouter(DeleteProjectRegionsRegionRoutersRouterRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/routers/{router}"
      };
    }
    // Retrieves runtime information of the specified router.
    rpc GetProjectRegionsRegionRoutersRouterGetRouterStatus(GetProjectRegionsRegionRoutersRouterGetRouterStatusRequest) returns (RouterStatusResponse) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/routers/{router}/getRouterStatus"
      };
    }
    // Preview fields auto-generated during router create and update operations. Calling this method does NOT create or update the router.
    rpc PostProjectRegionsRegionRoutersRouterPreview(PostProjectRegionsRegionRoutersRouterPreviewRequest) returns (RoutersPreviewResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/routers/{router}/preview"
        body: "body"
      };
    }
    // Retrieves a list of subnetworks available to the specified project.
    rpc GetProjectRegionsRegionSubnetworks(GetProjectRegionsRegionSubnetworksRequest) returns (SubnetworkList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/subnetworks"
      };
    }
    // Creates a subnetwork in the specified project using the data included in the request.
    rpc PostProjectRegionsRegionSubnetworks(PostProjectRegionsRegionSubnetworksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/subnetworks"
        body: "body"
      };
    }
    // Gets the access control policy for a resource. May be empty if no such policy or resource exists.
    rpc GetProjectRegionsRegionSubnetworksResourceGetIamPolicy(GetProjectRegionsRegionSubnetworksResourceGetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{resource}/getIamPolicy"
      };
    }
    // Sets the access control policy on the specified resource. Replaces any existing policy.
    rpc PostProjectRegionsRegionSubnetworksResourceSetIamPolicy(PostProjectRegionsRegionSubnetworksResourceSetIamPolicyRequest) returns (Policy) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{resource}/setIamPolicy"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionSubnetworksResourceTestIamPermissions(PostProjectRegionsRegionSubnetworksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified subnetwork. Get a list of available subnetworks list() request.
    rpc GetProjectRegionsRegionSubnetworksSubnetwork(GetProjectRegionsRegionSubnetworksSubnetworkRequest) returns (Subnetwork) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{subnetwork}"
      };
    }
    // Deletes the specified subnetwork.
    rpc DeleteProjectRegionsRegionSubnetworksSubnetwork(DeleteProjectRegionsRegionSubnetworksSubnetworkRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{subnetwork}"
      };
    }
    // Expands the IP CIDR range of the subnetwork to a specified value.
    rpc PostProjectRegionsRegionSubnetworksSubnetworkExpandIpCidrRange(PostProjectRegionsRegionSubnetworksSubnetworkExpandIpCidrRangeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange"
        body: "body"
      };
    }
    // Set whether VMs in this subnet can access Google services without assigning external IP addresses through Private Google Access.
    rpc PostProjectRegionsRegionSubnetworksSubnetworkSetPrivateIpGoogleAccess(PostProjectRegionsRegionSubnetworksSubnetworkSetPrivateIpGoogleAccessRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess"
        body: "body"
      };
    }
    // Retrieves a list of target pools available to the specified project and region.
    rpc GetProjectRegionsRegionTargetPools(GetProjectRegionsRegionTargetPoolsRequest) returns (TargetPoolList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/targetPools"
      };
    }
    // Creates a target pool in the specified project and region using the data included in the request.
    rpc PostProjectRegionsRegionTargetPools(PostProjectRegionsRegionTargetPoolsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionTargetPoolsResourceTestIamPermissions(PostProjectRegionsRegionTargetPoolsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified target pool. Get a list of available target pools by making a list() request.
    rpc GetProjectRegionsRegionTargetPoolsTargetPool(GetProjectRegionsRegionTargetPoolsTargetPoolRequest) returns (TargetPool) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}"
      };
    }
    // Deletes the specified target pool.
    rpc DeleteProjectRegionsRegionTargetPoolsTargetPool(DeleteProjectRegionsRegionTargetPoolsTargetPoolRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}"
      };
    }
    // Adds health check URLs to a target pool.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolAddHealthCheck(PostProjectRegionsRegionTargetPoolsTargetPoolAddHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck"
        body: "body"
      };
    }
    // Adds an instance to a target pool.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolAddInstance(PostProjectRegionsRegionTargetPoolsTargetPoolAddInstanceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/addInstance"
        body: "body"
      };
    }
    // Gets the most recent health check results for each IP for the instance that is referenced by the given target pool.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolGetHealth(PostProjectRegionsRegionTargetPoolsTargetPoolGetHealthRequest) returns (TargetPoolInstanceHealth) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/getHealth"
        body: "body"
      };
    }
    // Removes health check URL from a target pool.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolRemoveHealthCheck(PostProjectRegionsRegionTargetPoolsTargetPoolRemoveHealthCheckRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck"
        body: "body"
      };
    }
    // Removes instance URL from a target pool.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolRemoveInstance(PostProjectRegionsRegionTargetPoolsTargetPoolRemoveInstanceRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/removeInstance"
        body: "body"
      };
    }
    // Changes a backup target pool's configurations.
    rpc PostProjectRegionsRegionTargetPoolsTargetPoolSetBackup(PostProjectRegionsRegionTargetPoolsTargetPoolSetBackupRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetPools/{targetPool}/setBackup"
        body: "body"
      };
    }
    // Retrieves a list of target VPN gateways available to the specified project and region.
    rpc GetProjectRegionsRegionTargetVpnGateways(GetProjectRegionsRegionTargetVpnGatewaysRequest) returns (TargetVpnGatewayList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/targetVpnGateways"
      };
    }
    // Creates a target VPN gateway in the specified project and region using the data included in the request.
    rpc PostProjectRegionsRegionTargetVpnGateways(PostProjectRegionsRegionTargetVpnGatewaysRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetVpnGateways"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionTargetVpnGatewaysResourceTestIamPermissions(PostProjectRegionsRegionTargetVpnGatewaysResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/targetVpnGateways/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified target VPN gateway. Get a list of available target VPN gateways by making a list() request.
    rpc GetProjectRegionsRegionTargetVpnGatewaysTargetVpnGateway(GetProjectRegionsRegionTargetVpnGatewaysTargetVpnGatewayRequest) returns (TargetVpnGateway) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}"
      };
    }
    // Deletes the specified target VPN gateway.
    rpc DeleteProjectRegionsRegionTargetVpnGatewaysTargetVpnGateway(DeleteProjectRegionsRegionTargetVpnGatewaysTargetVpnGatewayRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}"
      };
    }
    // Retrieves a list of VpnTunnel resources contained in the specified project and region.
    rpc GetProjectRegionsRegionVpnTunnels(GetProjectRegionsRegionVpnTunnelsRequest) returns (VpnTunnelList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/vpnTunnels"
      };
    }
    // Creates a VpnTunnel resource in the specified project and region using the data included in the request.
    rpc PostProjectRegionsRegionVpnTunnels(PostProjectRegionsRegionVpnTunnelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/vpnTunnels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectRegionsRegionVpnTunnelsResourceTestIamPermissions(PostProjectRegionsRegionVpnTunnelsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/regions/{region}/vpnTunnels/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified VpnTunnel resource. Get a list of available VPN tunnels by making a list() request.
    rpc GetProjectRegionsRegionVpnTunnelsVpnTunnel(GetProjectRegionsRegionVpnTunnelsVpnTunnelRequest) returns (VpnTunnel) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}"
      };
    }
    // Deletes the specified VpnTunnel resource.
    rpc DeleteProjectRegionsRegionVpnTunnelsVpnTunnel(DeleteProjectRegionsRegionVpnTunnelsVpnTunnelRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}"
      };
    }
    // Sets metadata common to all instances within the specified project using the data included in the request.
    rpc PostProjectSetCommonInstanceMetadata(PostProjectSetCommonInstanceMetadataRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/setCommonInstanceMetadata"
        body: "body"
      };
    }
    // Enables the usage export feature and sets the usage export bucket where reports are stored. If you provide an empty request body using this method, the usage export feature will be disabled.
    rpc PostProjectSetUsageExportBucket(PostProjectSetUsageExportBucketRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/setUsageExportBucket"
        body: "body"
      };
    }
    // Changes the URL map for TargetHttpProxy.
    rpc PostProjectTargetHttpProxiesTargetHttpProxySetUrlMap(PostProjectTargetHttpProxiesTargetHttpProxySetUrlMapRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap"
        body: "body"
      };
    }
    // Replaces SslCertificates for TargetHttpsProxy.
    rpc PostProjectTargetHttpsProxiesTargetHttpsProxySetSslCertificates(PostProjectTargetHttpsProxiesTargetHttpsProxySetSslCertificatesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates"
        body: "body"
      };
    }
    // Changes the URL map for TargetHttpsProxy.
    rpc PostProjectTargetHttpsProxiesTargetHttpsProxySetUrlMap(PostProjectTargetHttpsProxiesTargetHttpsProxySetUrlMapRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap"
        body: "body"
      };
    }
    // Retrieves the list of Zone resources available to the specified project.
    rpc GetProjectZones(GetProjectZonesRequest) returns (ZoneList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones"
      };
    }
    // Returns the specified Zone resource. Get a list of available zones by making a list() request.
    rpc GetProjectZonesZone(GetProjectZonesZoneRequest) returns (Zone) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}"
      };
    }
    // Retrieves a list of accelerator types available to the specified project.
    rpc GetProjectZonesZoneAcceleratorTypes(GetProjectZonesZoneAcceleratorTypesRequest) returns (AcceleratorTypeList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/acceleratorTypes"
      };
    }
    // Returns the specified accelerator type. Get a list of available accelerator types by making a list() request.
    rpc GetProjectZonesZoneAcceleratorTypesAcceleratorType(GetProjectZonesZoneAcceleratorTypesAcceleratorTypeRequest) returns (AcceleratorType) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/acceleratorTypes/{acceleratorType}"
      };
    }
    // Retrieves a list of autoscalers contained within the specified zone.
    rpc GetProjectZonesZoneAutoscalers(GetProjectZonesZoneAutoscalersRequest) returns (AutoscalerList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/autoscalers"
      };
    }
    // Updates an autoscaler in the specified project using the data included in the request.
    rpc PutProjectZonesZoneAutoscalers(PutProjectZonesZoneAutoscalersRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/zones/{zone}/autoscalers"
        body: "body"
      };
    }
    // Creates an autoscaler in the specified project using the data included in the request.
    rpc PostProjectZonesZoneAutoscalers(PostProjectZonesZoneAutoscalersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/autoscalers"
        body: "body"
      };
    }
    // Returns the specified autoscaler resource. Get a list of available autoscalers by making a list() request.
    rpc GetProjectZonesZoneAutoscalersAutoscaler(GetProjectZonesZoneAutoscalersAutoscalerRequest) returns (Autoscaler) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/autoscalers/{autoscaler}"
      };
    }
    // Deletes the specified autoscaler.
    rpc DeleteProjectZonesZoneAutoscalersAutoscaler(DeleteProjectZonesZoneAutoscalersAutoscalerRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/autoscalers/{autoscaler}"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneAutoscalersResourceTestIamPermissions(PostProjectZonesZoneAutoscalersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/autoscalers/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of disk types available to the specified project.
    rpc GetProjectZonesZoneDiskTypes(GetProjectZonesZoneDiskTypesRequest) returns (DiskTypeList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/diskTypes"
      };
    }
    // Returns the specified disk type. Get a list of available disk types by making a list() request.
    rpc GetProjectZonesZoneDiskTypesDiskType(GetProjectZonesZoneDiskTypesDiskTypeRequest) returns (DiskType) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/diskTypes/{diskType}"
      };
    }
    // Retrieves a list of persistent disks contained within the specified zone.
    rpc GetProjectZonesZoneDisks(GetProjectZonesZoneDisksRequest) returns (DiskList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/disks"
      };
    }
    // Creates a persistent disk in the specified project using the data in the request. You can create a disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by omitting all properties. You can also create a disk that is larger than the default size by specifying the sizeGb property.
    rpc PostProjectZonesZoneDisks(PostProjectZonesZoneDisksRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/disks"
        body: "body"
      };
    }
    // Returns a specified persistent disk. Get a list of available persistent disks by making a list() request.
    rpc GetProjectZonesZoneDisksDisk(GetProjectZonesZoneDisksDiskRequest) returns (Disk) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/disks/{disk}"
      };
    }
    // Deletes the specified persistent disk. Deleting a disk removes its data permanently and is irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must separately delete snapshots.
    rpc DeleteProjectZonesZoneDisksDisk(DeleteProjectZonesZoneDisksDiskRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/disks/{disk}"
      };
    }
    // Creates a snapshot of a specified persistent disk.
    rpc PostProjectZonesZoneDisksDiskCreateSnapshot(PostProjectZonesZoneDisksDiskCreateSnapshotRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/disks/{disk}/createSnapshot"
        body: "body"
      };
    }
    // Resizes the specified persistent disk.
    rpc PostProjectZonesZoneDisksDiskResize(PostProjectZonesZoneDisksDiskResizeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/disks/{disk}/resize"
        body: "body"
      };
    }
    // Sets the labels on a disk. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectZonesZoneDisksResourceSetLabels(PostProjectZonesZoneDisksResourceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/disks/{resource}/setLabels"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneDisksResourceTestIamPermissions(PostProjectZonesZoneDisksResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/disks/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of managed instance groups that are contained within the specified project and zone.
    rpc GetProjectZonesZoneInstanceGroupManagers(GetProjectZonesZoneInstanceGroupManagersRequest) returns (InstanceGroupManagerList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers"
      };
    }
    // Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method.
    // 
    // A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you need an increase in this limit.
    rpc PostProjectZonesZoneInstanceGroupManagers(PostProjectZonesZoneInstanceGroupManagersRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers"
        body: "body"
      };
    }
    // Returns all of the details about the specified managed instance group. Get a list of available managed instance groups by making a list() request.
    rpc GetProjectZonesZoneInstanceGroupManagersInstanceGroupManager(GetProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest) returns (InstanceGroupManager) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"
      };
    }
    // Updates a managed instance group using the information that you specify in the request. This operation is marked as DONE when the group is updated even if the instances in the group have not yet been updated. You must separately verify the status of the individual instances with the listManagedInstances method.
    rpc PutProjectZonesZoneInstanceGroupManagersInstanceGroupManager(PutProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest) returns (Operation) {
      option (google.api.http) = {
        put: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"
        body: "body"
      };
    }
    // Deletes the specified managed instance group and all of the instances in that group. Note that the instance group must not belong to a backend service. Read  Deleting an instance group for more information.
    rpc DeleteProjectZonesZoneInstanceGroupManagersInstanceGroupManager(DeleteProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"
      };
    }
    // Schedules a group action to remove the specified instances from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerAbandonInstances(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerAbandonInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"
        body: "body"
      };
    }
    // Schedules a group action to delete the specified instances in the managed instance group. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. This operation is marked as DONE when the action is scheduled even if the instances are still being deleted. You must separately verify the status of the deleting action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerDeleteInstances(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerDeleteInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"
        body: "body"
      };
    }
    // Lists all of the instances in the managed instance group. Each instance in the list has a currentAction, which indicates the action that the managed instance group is performing on the instance. For example, if the group is still creating an instance, the currentAction is CREATING. If a previous action failed, the list displays the errors for that failed action.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerListManagedInstances(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerListManagedInstancesRequest) returns (InstanceGroupManagersListManagedInstancesResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"
      };
    }
    // Schedules a group action to recreate the specified instances in the managed instance group. The instances are deleted and recreated using the current instance template for the managed instance group. This operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated. You must separately verify the status of the recreating action with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    // 
    // You can specify a maximum of 1000 instances with this method per request.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRecreateInstances(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerRecreateInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"
        body: "body"
      };
    }
    // Resizes the managed instance group. If you increase the size, the group creates new instances using the current instance template. If you decrease the size, the group deletes instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResize(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResizeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize"
      };
    }
    // Resizes the managed instance group with advanced configuration options like disabling creation retries. This is an extended version of the resize method.
    // 
    // If you increase the size of the instance group, the group creates new instances using the current instance template. If you decrease the size, the group deletes instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating, creatingWithoutRetries, or deleting actions with the get or listmanagedinstances method.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResizeAdvanced(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerResizeAdvancedRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeAdvanced"
        body: "body"
      };
    }
    // Modifies the autohealing policies.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetAutoHealingPolicies(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetAutoHealingPoliciesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setAutoHealingPolicies"
        body: "body"
      };
    }
    // Specifies the instance template to use when creating new instances in this group. The templates for existing instances in the group do not change unless you recreate them.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetInstanceTemplate(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetInstanceTemplateRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"
        body: "body"
      };
    }
    // Modifies the target pools to which all instances in this managed instance group are assigned. The target pools automatically apply to all of the instances in the managed instance group. This operation is marked DONE when you make the request even if the instances have not yet been added to their target pools. The change might take some time to apply to all of the instances in the group depending on the size of the group.
    rpc PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetTargetPools(PostProjectZonesZoneInstanceGroupManagersInstanceGroupManagerSetTargetPoolsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneInstanceGroupManagersResourceTestIamPermissions(PostProjectZonesZoneInstanceGroupManagersResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroupManagers/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of instance groups that are located in the specified project and zone.
    rpc GetProjectZonesZoneInstanceGroups(GetProjectZonesZoneInstanceGroupsRequest) returns (InstanceGroupList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups"
      };
    }
    // Creates an instance group in the specified project using the parameters that are included in the request.
    rpc PostProjectZonesZoneInstanceGroups(PostProjectZonesZoneInstanceGroupsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups"
        body: "body"
      };
    }
    // Returns the specified instance group. Get a list of available instance groups by making a list() request.
    rpc GetProjectZonesZoneInstanceGroupsInstanceGroup(GetProjectZonesZoneInstanceGroupsInstanceGroupRequest) returns (InstanceGroup) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}"
      };
    }
    // Deletes the specified instance group. The instances in the group are not deleted. Note that instance group must not belong to a backend service. Read  Deleting an instance group for more information.
    rpc DeleteProjectZonesZoneInstanceGroupsInstanceGroup(DeleteProjectZonesZoneInstanceGroupsInstanceGroupRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}"
      };
    }
    // Adds a list of instances to the specified instance group. All of the instances in the instance group must be in the same network/subnetwork. Read  Adding instances for more information.
    rpc PostProjectZonesZoneInstanceGroupsInstanceGroupAddInstances(PostProjectZonesZoneInstanceGroupsInstanceGroupAddInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances"
        body: "body"
      };
    }
    // Lists the instances in the specified instance group.
    rpc PostProjectZonesZoneInstanceGroupsInstanceGroupListInstances(PostProjectZonesZoneInstanceGroupsInstanceGroupListInstancesRequest) returns (InstanceGroupsListInstances) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances"
        body: "body"
      };
    }
    // Removes one or more instances from the specified instance group, but does not delete those instances.
    // 
    // If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration before the VM instance is removed or deleted.
    rpc PostProjectZonesZoneInstanceGroupsInstanceGroupRemoveInstances(PostProjectZonesZoneInstanceGroupsInstanceGroupRemoveInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances"
        body: "body"
      };
    }
    // Sets the named ports for the specified instance group.
    rpc PostProjectZonesZoneInstanceGroupsInstanceGroupSetNamedPorts(PostProjectZonesZoneInstanceGroupsInstanceGroupSetNamedPortsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneInstanceGroupsResourceTestIamPermissions(PostProjectZonesZoneInstanceGroupsResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instanceGroups/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves the list of instances contained within the specified zone.
    rpc GetProjectZonesZoneInstances(GetProjectZonesZoneInstancesRequest) returns (InstanceList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instances"
      };
    }
    // Creates an instance resource in the specified project using the data included in the request.
    rpc PostProjectZonesZoneInstances(PostProjectZonesZoneInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances"
        body: "body"
      };
    }
    // Returns the specified Instance resource. Get a list of available instances by making a list() request.
    rpc GetProjectZonesZoneInstancesInstance(GetProjectZonesZoneInstancesInstanceRequest) returns (Instance) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}"
      };
    }
    // Deletes the specified Instance resource. For more information, see Stopping or Deleting an Instance.
    rpc DeleteProjectZonesZoneInstancesInstance(DeleteProjectZonesZoneInstancesInstanceRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}"
      };
    }
    // Adds an access config to an instance's network interface.
    rpc PostProjectZonesZoneInstancesInstanceAddAccessConfig(PostProjectZonesZoneInstancesInstanceAddAccessConfigRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig"
        body: "body"
      };
    }
    // Attaches an existing Disk resource to an instance. You must first create the disk before you can attach it. It is not possible to create and attach a disk at the same time. For more information, read Adding a persistent disk to your instance.
    rpc PostProjectZonesZoneInstancesInstanceAttachDisk(PostProjectZonesZoneInstancesInstanceAttachDiskRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/attachDisk"
        body: "body"
      };
    }
    // Deletes an access config from an instance's network interface.
    rpc PostProjectZonesZoneInstancesInstanceDeleteAccessConfig(PostProjectZonesZoneInstancesInstanceDeleteAccessConfigRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig"
      };
    }
    // Detaches a disk from an instance.
    rpc PostProjectZonesZoneInstancesInstanceDetachDisk(PostProjectZonesZoneInstancesInstanceDetachDiskRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/detachDisk"
      };
    }
    // Retrieves the list of referrers to instances contained within the specified zone.
    rpc GetProjectZonesZoneInstancesInstanceReferrers(GetProjectZonesZoneInstancesInstanceReferrersRequest) returns (InstanceListReferrers) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/referrers"
      };
    }
    // Performs a reset on the instance. For more information, see Resetting an instance.
    rpc PostProjectZonesZoneInstancesInstanceReset(PostProjectZonesZoneInstancesInstanceResetRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/reset"
      };
    }
    // Returns the specified instance's serial port output.
    rpc GetProjectZonesZoneInstancesInstanceSerialPort(GetProjectZonesZoneInstancesInstanceSerialPortRequest) returns (SerialPortOutput) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/serialPort"
      };
    }
    // Sets the auto-delete flag for a disk attached to an instance.
    rpc PostProjectZonesZoneInstancesInstanceSetDiskAutoDelete(PostProjectZonesZoneInstancesInstanceSetDiskAutoDeleteRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete"
      };
    }
    // Sets labels on an instance. To learn more about labels, read the Labeling Resources documentation.
    rpc PostProjectZonesZoneInstancesInstanceSetLabels(PostProjectZonesZoneInstancesInstanceSetLabelsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setLabels"
        body: "body"
      };
    }
    // Changes the number and/or type of accelerator for a stopped instance to the values specified in the request.
    rpc PostProjectZonesZoneInstancesInstanceSetMachineResources(PostProjectZonesZoneInstancesInstanceSetMachineResourcesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setMachineResources"
        body: "body"
      };
    }
    // Changes the machine type for a stopped instance to the machine type specified in the request.
    rpc PostProjectZonesZoneInstancesInstanceSetMachineType(PostProjectZonesZoneInstancesInstanceSetMachineTypeRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setMachineType"
        body: "body"
      };
    }
    // Sets metadata for the specified instance to the data included in the request.
    rpc PostProjectZonesZoneInstancesInstanceSetMetadata(PostProjectZonesZoneInstancesInstanceSetMetadataRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setMetadata"
        body: "body"
      };
    }
    // Changes the minimum CPU platform that this instance should use. This method can only be called on a stopped instance. For more information, read Specifying a Minimum CPU Platform.
    rpc PostProjectZonesZoneInstancesInstanceSetMinCpuPlatform(PostProjectZonesZoneInstancesInstanceSetMinCpuPlatformRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform"
        body: "body"
      };
    }
    // Sets an instance's scheduling options.
    rpc PostProjectZonesZoneInstancesInstanceSetScheduling(PostProjectZonesZoneInstancesInstanceSetSchedulingRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setScheduling"
        body: "body"
      };
    }
    // Sets the service account on the instance. For more information, read Changing the service account and access scopes for an instance.
    rpc PostProjectZonesZoneInstancesInstanceSetServiceAccount(PostProjectZonesZoneInstancesInstanceSetServiceAccountRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setServiceAccount"
        body: "body"
      };
    }
    // Sets tags for the specified instance to the data included in the request.
    rpc PostProjectZonesZoneInstancesInstanceSetTags(PostProjectZonesZoneInstancesInstanceSetTagsRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/setTags"
        body: "body"
      };
    }
    // Starts an instance that was stopped using the using the instances().stop method. For more information, see Restart an instance.
    rpc PostProjectZonesZoneInstancesInstanceStart(PostProjectZonesZoneInstancesInstanceStartRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/start"
      };
    }
    // Starts an instance that was stopped using the using the instances().stop method. For more information, see Restart an instance.
    rpc PostProjectZonesZoneInstancesInstanceStartWithEncryptionKey(PostProjectZonesZoneInstancesInstanceStartWithEncryptionKeyRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey"
        body: "body"
      };
    }
    // Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a later time. Stopped instances do not incur per-minute, virtual machine usage charges while they are stopped, but any resources that the virtual machine is using, such as persistent disks and static IP addresses, will continue to be charged until they are deleted. For more information, see Stopping an instance.
    rpc PostProjectZonesZoneInstancesInstanceStop(PostProjectZonesZoneInstancesInstanceStopRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/stop"
      };
    }
    // Updates the specified access config from an instance's network interface with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
    rpc PostProjectZonesZoneInstancesInstanceUpdateAccessConfig(PostProjectZonesZoneInstancesInstanceUpdateAccessConfigRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/updateAccessConfig"
        body: "body"
      };
    }

    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneInstancesResourceTestIamPermissions(PostProjectZonesZoneInstancesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/instances/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Retrieves a list of machine types available to the specified project.
    rpc GetProjectZonesZoneMachineTypes(GetProjectZonesZoneMachineTypesRequest) returns (MachineTypeList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/machineTypes"
      };
    }
    // Returns the specified machine type. Get a list of available machine types by making a list() request.
    rpc GetProjectZonesZoneMachineTypesMachineType(GetProjectZonesZoneMachineTypesMachineTypeRequest) returns (MachineType) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/machineTypes/{machineType}"
      };
    }
    // Retrieves a list of Operation resources contained within the specified zone.
    rpc GetProjectZonesZoneOperations(GetProjectZonesZoneOperationsRequest) returns (OperationList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/operations"
      };
    }
    // Retrieves the specified zone-specific Operations resource.
    rpc GetProjectZonesZoneOperationsOperation(GetProjectZonesZoneOperationsOperationRequest) returns (Operation) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/operations/{operation}"
      };
    }
    // Deletes the specified zone-specific Operations resource.
    rpc DeleteProjectZonesZoneOperationsOperation(DeleteProjectZonesZoneOperationsOperationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/operations/{operation}"
      };
    }
    // Retrieves a list of TargetInstance resources available to the specified project and zone.
    rpc GetProjectZonesZoneTargetInstances(GetProjectZonesZoneTargetInstancesRequest) returns (TargetInstanceList) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/targetInstances"
      };
    }
    // Creates a TargetInstance resource in the specified project and zone using the data included in the request.
    rpc PostProjectZonesZoneTargetInstances(PostProjectZonesZoneTargetInstancesRequest) returns (Operation) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/targetInstances"
        body: "body"
      };
    }
    // Returns permissions that a caller has on the specified resource.
    rpc PostProjectZonesZoneTargetInstancesResourceTestIamPermissions(PostProjectZonesZoneTargetInstancesResourceTestIamPermissionsRequest) returns (TestPermissionsResponse) {
      option (google.api.http) = {
        post: "/compute/beta/projects/{project}/zones/{zone}/targetInstances/{resource}/testIamPermissions"
        body: "body"
      };
    }
    // Returns the specified TargetInstance resource. Get a list of available target instances by making a list() request.
    rpc GetProjectZonesZoneTargetInstancesTargetInstance(GetProjectZonesZoneTargetInstancesTargetInstanceRequest) returns (TargetInstance) {
      option (google.api.http) = {
        get: "/compute/beta/projects/{project}/zones/{zone}/targetInstances/{targetInstance}"
      };
    }
    // Deletes the specified TargetInstance resource.
    rpc DeleteProjectZonesZoneTargetInstancesTargetInstance(DeleteProjectZonesZoneTargetInstancesTargetInstanceRequest) returns (Operation) {
      option (google.api.http) = {
        delete: "/compute/beta/projects/{project}/zones/{zone}/targetInstances/{targetInstance}"
      };
    }
}
