[[backends]]
  group = "compute-engine-project"
  slug = "compute-engine-v1-project"
  url_pattern = "/{project}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  whitelist = ["creationTimestamp", "defaultServiceAccount", "description", "enabledFeatures", "id", "kind", "name", "quotas", "selfLink", "xpnProjectStatus"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    defaultServiceAccount = "defaultServiceAccount"
    description = "description"
    enabledFeatures = "enabledFeatures"
    id = "id"
    kind = "kind"
    name = "name"
    quotas = "quotas"
    selfLink = "selfLink"
    xpnProjectStatus = "xpnProjectStatus"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-acceleratortypes"
  slug = "compute-engine-v1-project-aggregated-acceleratortypes"
  url_pattern = "/{project}/aggregated/acceleratorTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-addresses"
  slug = "compute-engine-v1-project-aggregated-addresses"
  url_pattern = "/{project}/aggregated/addresses"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-autoscalers"
  slug = "compute-engine-v1-project-aggregated-autoscalers"
  url_pattern = "/{project}/aggregated/autoscalers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-backendservices"
  slug = "compute-engine-v1-project-aggregated-backendservices"
  url_pattern = "/{project}/aggregated/backendServices"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-commitments"
  slug = "compute-engine-v1-project-aggregated-commitments"
  url_pattern = "/{project}/aggregated/commitments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-disktypes"
  slug = "compute-engine-v1-project-aggregated-disktypes"
  url_pattern = "/{project}/aggregated/diskTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-disks"
  slug = "compute-engine-v1-project-aggregated-disks"
  url_pattern = "/{project}/aggregated/disks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-forwardingrules"
  slug = "compute-engine-v1-project-aggregated-forwardingrules"
  url_pattern = "/{project}/aggregated/forwardingRules"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-instancegroupmanagers"
  slug = "compute-engine-v1-project-aggregated-instancegroupmanagers"
  url_pattern = "/{project}/aggregated/instanceGroupManagers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-instancegroups"
  slug = "compute-engine-v1-project-aggregated-instancegroups"
  url_pattern = "/{project}/aggregated/instanceGroups"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-instances"
  slug = "compute-engine-v1-project-aggregated-instances"
  url_pattern = "/{project}/aggregated/instances"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-machinetypes"
  slug = "compute-engine-v1-project-aggregated-machinetypes"
  url_pattern = "/{project}/aggregated/machineTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-operations"
  slug = "compute-engine-v1-project-aggregated-operations"
  url_pattern = "/{project}/aggregated/operations"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-routers"
  slug = "compute-engine-v1-project-aggregated-routers"
  url_pattern = "/{project}/aggregated/routers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-subnetworks"
  slug = "compute-engine-v1-project-aggregated-subnetworks"
  url_pattern = "/{project}/aggregated/subnetworks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-targetinstances"
  slug = "compute-engine-v1-project-aggregated-targetinstances"
  url_pattern = "/{project}/aggregated/targetInstances"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-targetpools"
  slug = "compute-engine-v1-project-aggregated-targetpools"
  url_pattern = "/{project}/aggregated/targetPools"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-targetvpngateways"
  slug = "compute-engine-v1-project-aggregated-targetvpngateways"
  url_pattern = "/{project}/aggregated/targetVpnGateways"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-aggregated-vpntunnels"
  slug = "compute-engine-v1-project-aggregated-vpntunnels"
  url_pattern = "/{project}/aggregated/vpnTunnels"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-disablexpnhost"
  slug = "compute-engine-v1-project-disablexpnhost"
  url_pattern = "/{project}/disableXpnHost"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-disablexpnresource"
  slug = "compute-engine-v1-project-disablexpnresource"
  url_pattern = "/{project}/disableXpnResource"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-enablexpnhost"
  slug = "compute-engine-v1-project-enablexpnhost"
  url_pattern = "/{project}/enableXpnHost"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-enablexpnresource"
  slug = "compute-engine-v1-project-enablexpnresource"
  url_pattern = "/{project}/enableXpnResource"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-getxpnhost"
  slug = "compute-engine-v1-project-getxpnhost"
  url_pattern = "/{project}/getXpnHost"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  whitelist = ["creationTimestamp", "defaultServiceAccount", "description", "enabledFeatures", "id", "kind", "name", "quotas", "selfLink", "xpnProjectStatus"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    defaultServiceAccount = "defaultServiceAccount"
    description = "description"
    enabledFeatures = "enabledFeatures"
    id = "id"
    kind = "kind"
    name = "name"
    quotas = "quotas"
    selfLink = "selfLink"
    xpnProjectStatus = "xpnProjectStatus"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-getxpnresources"
  slug = "compute-engine-v1-project-getxpnresources"
  url_pattern = "/{project}/getXpnResources"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "order_by", "pageToken"]
  whitelist = ["kind", "nextPageToken", "resources"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    nextPageToken = "nextPageToken"
    resources = "resources"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-addresses"
  slug = "compute-engine-v1-project-global-addresses"
  url_pattern = "/{project}/global/addresses"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-addresses-address"
  slug = "compute-engine-v1-project-global-addresses-address"
  url_pattern = "/{project}/global/addresses/{address}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["address", "project"]
  whitelist = ["address", "creationTimestamp", "description", "id", "ipVersion", "kind", "name", "region", "selfLink", "status", "users"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    ipVersion = "ipVersion"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    status = "status"
    users = "users"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-backendbuckets"
  slug = "compute-engine-v1-project-global-backendbuckets"
  url_pattern = "/{project}/global/backendBuckets"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-backendbuckets-backendbucket"
  slug = "compute-engine-v1-project-global-backendbuckets-backendbucket"
  url_pattern = "/{project}/global/backendBuckets/{backendBucket}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["backendBucket", "project"]
  whitelist = ["bucketName", "creationTimestamp", "description", "enableCdn", "id", "kind", "name", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    bucketName = "bucketName"
    creationTimestamp = "creationTimestamp"
    description = "description"
    enableCdn = "enableCdn"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-backendservices"
  slug = "compute-engine-v1-project-global-backendservices"
  url_pattern = "/{project}/global/backendServices"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-backendservices-backendservice"
  slug = "compute-engine-v1-project-global-backendservices-backendservice"
  url_pattern = "/{project}/global/backendServices/{backendService}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["backendService", "project"]
  whitelist = ["affinityCookieTtlSec", "backends", "creationTimestamp", "description", "enableCDN", "fingerprint", "healthChecks", "id", "kind", "loadBalancingScheme", "name", "port", "portName", "protocol", "region", "selfLink", "sessionAffinity", "timeoutSec"]
  concurrent_calls = 0
  [backends.mapping]
    affinityCookieTtlSec = "affinityCookieTtlSec"
    backends = "backends"
    creationTimestamp = "creationTimestamp"
    description = "description"
    enableCDN = "enableCDN"
    fingerprint = "fingerprint"
    healthChecks = "healthChecks"
    id = "id"
    kind = "kind"
    loadBalancingScheme = "loadBalancingScheme"
    name = "name"
    port = "port"
    portName = "portName"
    protocol = "protocol"
    region = "region"
    selfLink = "selfLink"
    sessionAffinity = "sessionAffinity"
    timeoutSec = "timeoutSec"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-backendservices-backendservice-gethealth"
  slug = "compute-engine-v1-project-global-backendservices-backendservice-gethealth"
  url_pattern = "/{project}/global/backendServices/{backendService}/getHealth"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["backendService", "project"]
  whitelist = ["healthStatus", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    healthStatus = "healthStatus"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-firewalls"
  slug = "compute-engine-v1-project-global-firewalls"
  url_pattern = "/{project}/global/firewalls"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-firewalls-firewall"
  slug = "compute-engine-v1-project-global-firewalls-firewall"
  url_pattern = "/{project}/global/firewalls/{firewall}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["firewall", "project"]
  whitelist = ["allowed", "creationTimestamp", "denied", "description", "destinationRanges", "direction", "id", "kind", "name", "network", "priority", "selfLink", "sourceRanges", "sourceTags", "targetTags"]
  concurrent_calls = 0
  [backends.mapping]
    allowed = "allowed"
    creationTimestamp = "creationTimestamp"
    denied = "denied"
    description = "description"
    destinationRanges = "destinationRanges"
    direction = "direction"
    id = "id"
    kind = "kind"
    name = "name"
    network = "network"
    priority = "priority"
    selfLink = "selfLink"
    sourceRanges = "sourceRanges"
    sourceTags = "sourceTags"
    targetTags = "targetTags"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-forwardingrules"
  slug = "compute-engine-v1-project-global-forwardingrules"
  url_pattern = "/{project}/global/forwardingRules"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-forwardingrules-forwardingrule"
  slug = "compute-engine-v1-project-global-forwardingrules-forwardingrule"
  url_pattern = "/{project}/global/forwardingRules/{forwardingRule}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["forwardingRule", "project"]
  whitelist = ["IPAddress", "IPProtocol", "backendService", "creationTimestamp", "description", "id", "ipVersion", "kind", "loadBalancingScheme", "name", "network", "portRange", "ports", "region", "selfLink", "subnetwork", "target"]
  concurrent_calls = 0
  [backends.mapping]
    IPAddress = "IPAddress"
    IPProtocol = "IPProtocol"
    backendService = "backendService"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    ipVersion = "ipVersion"
    kind = "kind"
    loadBalancingScheme = "loadBalancingScheme"
    name = "name"
    network = "network"
    portRange = "portRange"
    ports = "ports"
    region = "region"
    selfLink = "selfLink"
    subnetwork = "subnetwork"
    target = "target"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-forwardingrules-forwardingrule-settarget"
  slug = "compute-engine-v1-project-global-forwardingrules-forwardingrule-settarget"
  url_pattern = "/{project}/global/forwardingRules/{forwardingRule}/setTarget"
  method = "PARAMETERS"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-healthchecks"
  slug = "compute-engine-v1-project-global-healthchecks"
  url_pattern = "/{project}/global/healthChecks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-healthchecks-healthcheck"
  slug = "compute-engine-v1-project-global-healthchecks-healthcheck"
  url_pattern = "/{project}/global/healthChecks/{healthCheck}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["healthCheck", "project"]
  whitelist = ["checkIntervalSec", "creationTimestamp", "description", "healthyThreshold", "id", "kind", "name", "selfLink", "timeoutSec", "type", "unhealthyThreshold"]
  concurrent_calls = 0
  [backends.mapping]
    checkIntervalSec = "checkIntervalSec"
    creationTimestamp = "creationTimestamp"
    description = "description"
    healthyThreshold = "healthyThreshold"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
    timeoutSec = "timeoutSec"
    type = "type"
    unhealthyThreshold = "unhealthyThreshold"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-httphealthchecks"
  slug = "compute-engine-v1-project-global-httphealthchecks"
  url_pattern = "/{project}/global/httpHealthChecks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-httphealthchecks-httphealthcheck"
  slug = "compute-engine-v1-project-global-httphealthchecks-httphealthcheck"
  url_pattern = "/{project}/global/httpHealthChecks/{httpHealthCheck}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["httpHealthCheck", "project"]
  whitelist = ["checkIntervalSec", "creationTimestamp", "description", "healthyThreshold", "host", "id", "kind", "name", "port", "requestPath", "selfLink", "timeoutSec", "unhealthyThreshold"]
  concurrent_calls = 0
  [backends.mapping]
    checkIntervalSec = "checkIntervalSec"
    creationTimestamp = "creationTimestamp"
    description = "description"
    healthyThreshold = "healthyThreshold"
    host = "host"
    id = "id"
    kind = "kind"
    name = "name"
    port = "port"
    requestPath = "requestPath"
    selfLink = "selfLink"
    timeoutSec = "timeoutSec"
    unhealthyThreshold = "unhealthyThreshold"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-httpshealthchecks"
  slug = "compute-engine-v1-project-global-httpshealthchecks"
  url_pattern = "/{project}/global/httpsHealthChecks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-httpshealthchecks-httpshealthcheck"
  slug = "compute-engine-v1-project-global-httpshealthchecks-httpshealthcheck"
  url_pattern = "/{project}/global/httpsHealthChecks/{httpsHealthCheck}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["httpsHealthCheck", "project"]
  whitelist = ["checkIntervalSec", "creationTimestamp", "description", "healthyThreshold", "host", "id", "kind", "name", "port", "requestPath", "selfLink", "timeoutSec", "unhealthyThreshold"]
  concurrent_calls = 0
  [backends.mapping]
    checkIntervalSec = "checkIntervalSec"
    creationTimestamp = "creationTimestamp"
    description = "description"
    healthyThreshold = "healthyThreshold"
    host = "host"
    id = "id"
    kind = "kind"
    name = "name"
    port = "port"
    requestPath = "requestPath"
    selfLink = "selfLink"
    timeoutSec = "timeoutSec"
    unhealthyThreshold = "unhealthyThreshold"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-images"
  slug = "compute-engine-v1-project-global-images"
  url_pattern = "/{project}/global/images"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-images-family-family"
  slug = "compute-engine-v1-project-global-images-family-family"
  url_pattern = "/{project}/global/images/family/{family}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["family", "project"]
  whitelist = ["archiveSizeBytes", "creationTimestamp", "description", "diskSizeGb", "family", "guestOsFeatures", "id", "kind", "labelFingerprint", "labels", "licenses", "name", "rawDisk", "selfLink", "sourceDisk", "sourceDiskId", "sourceImage", "sourceImageId", "sourceType", "status"]
  concurrent_calls = 0
  [backends.mapping]
    archiveSizeBytes = "archiveSizeBytes"
    creationTimestamp = "creationTimestamp"
    description = "description"
    diskSizeGb = "diskSizeGb"
    family = "family"
    guestOsFeatures = "guestOsFeatures"
    id = "id"
    kind = "kind"
    labelFingerprint = "labelFingerprint"
    labels = "labels"
    licenses = "licenses"
    name = "name"
    rawDisk = "rawDisk"
    selfLink = "selfLink"
    sourceDisk = "sourceDisk"
    sourceDiskId = "sourceDiskId"
    sourceImage = "sourceImage"
    sourceImageId = "sourceImageId"
    sourceType = "sourceType"
    status = "status"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-images-image"
  slug = "compute-engine-v1-project-global-images-image"
  url_pattern = "/{project}/global/images/{image}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["image", "project"]
  whitelist = ["archiveSizeBytes", "creationTimestamp", "description", "diskSizeGb", "family", "guestOsFeatures", "id", "kind", "labelFingerprint", "labels", "licenses", "name", "rawDisk", "selfLink", "sourceDisk", "sourceDiskId", "sourceImage", "sourceImageId", "sourceType", "status"]
  concurrent_calls = 0
  [backends.mapping]
    archiveSizeBytes = "archiveSizeBytes"
    creationTimestamp = "creationTimestamp"
    description = "description"
    diskSizeGb = "diskSizeGb"
    family = "family"
    guestOsFeatures = "guestOsFeatures"
    id = "id"
    kind = "kind"
    labelFingerprint = "labelFingerprint"
    labels = "labels"
    licenses = "licenses"
    name = "name"
    rawDisk = "rawDisk"
    selfLink = "selfLink"
    sourceDisk = "sourceDisk"
    sourceDiskId = "sourceDiskId"
    sourceImage = "sourceImage"
    sourceImageId = "sourceImageId"
    sourceType = "sourceType"
    status = "status"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-images-image-deprecate"
  slug = "compute-engine-v1-project-global-images-image-deprecate"
  url_pattern = "/{project}/global/images/{image}/deprecate"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["image", "project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-images-resource-setlabels"
  slug = "compute-engine-v1-project-global-images-resource-setlabels"
  url_pattern = "/{project}/global/images/{resource}/setLabels"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "resource"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-instancetemplates"
  slug = "compute-engine-v1-project-global-instancetemplates"
  url_pattern = "/{project}/global/instanceTemplates"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-instancetemplates-instancetemplate"
  slug = "compute-engine-v1-project-global-instancetemplates-instancetemplate"
  url_pattern = "/{project}/global/instanceTemplates/{instanceTemplate}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceTemplate", "project"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-licenses-license"
  slug = "compute-engine-v1-project-global-licenses-license"
  url_pattern = "/{project}/global/licenses/{license}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["license", "project"]
  whitelist = ["chargesUseFee", "kind", "name", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    chargesUseFee = "chargesUseFee"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-networks"
  slug = "compute-engine-v1-project-global-networks"
  url_pattern = "/{project}/global/networks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-networks-network"
  slug = "compute-engine-v1-project-global-networks-network"
  url_pattern = "/{project}/global/networks/{network}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["network", "project"]
  whitelist = ["IPv4Range", "autoCreateSubnetworks", "creationTimestamp", "description", "gatewayIPv4", "id", "kind", "name", "peerings", "selfLink", "subnetworks"]
  concurrent_calls = 0
  [backends.mapping]
    IPv4Range = "IPv4Range"
    autoCreateSubnetworks = "autoCreateSubnetworks"
    creationTimestamp = "creationTimestamp"
    description = "description"
    gatewayIPv4 = "gatewayIPv4"
    id = "id"
    kind = "kind"
    name = "name"
    peerings = "peerings"
    selfLink = "selfLink"
    subnetworks = "subnetworks"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-networks-network-addpeering"
  slug = "compute-engine-v1-project-global-networks-network-addpeering"
  url_pattern = "/{project}/global/networks/{network}/addPeering"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["network", "project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-networks-network-removepeering"
  slug = "compute-engine-v1-project-global-networks-network-removepeering"
  url_pattern = "/{project}/global/networks/{network}/removePeering"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["network", "project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-networks-network-switchtocustommode"
  slug = "compute-engine-v1-project-global-networks-network-switchtocustommode"
  url_pattern = "/{project}/global/networks/{network}/switchToCustomMode"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["network", "project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-operations"
  slug = "compute-engine-v1-project-global-operations"
  url_pattern = "/{project}/global/operations"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-operations-operation"
  slug = "compute-engine-v1-project-global-operations-operation"
  url_pattern = "/{project}/global/operations/{operation}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["operation", "project"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-routes"
  slug = "compute-engine-v1-project-global-routes"
  url_pattern = "/{project}/global/routes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-routes-route"
  slug = "compute-engine-v1-project-global-routes-route"
  url_pattern = "/{project}/global/routes/{route}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "route"]
  whitelist = ["creationTimestamp", "description", "destRange", "id", "kind", "name", "network", "nextHopGateway", "nextHopInstance", "nextHopIp", "nextHopNetwork", "nextHopPeering", "nextHopVpnTunnel", "priority", "selfLink", "tags", "warnings"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    destRange = "destRange"
    id = "id"
    kind = "kind"
    name = "name"
    network = "network"
    nextHopGateway = "nextHopGateway"
    nextHopInstance = "nextHopInstance"
    nextHopIp = "nextHopIp"
    nextHopNetwork = "nextHopNetwork"
    nextHopPeering = "nextHopPeering"
    nextHopVpnTunnel = "nextHopVpnTunnel"
    priority = "priority"
    selfLink = "selfLink"
    tags = "tags"
    warnings = "warnings"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-snapshots"
  slug = "compute-engine-v1-project-global-snapshots"
  url_pattern = "/{project}/global/snapshots"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-snapshots-resource-setlabels"
  slug = "compute-engine-v1-project-global-snapshots-resource-setlabels"
  url_pattern = "/{project}/global/snapshots/{resource}/setLabels"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "resource"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-snapshots-snapshot"
  slug = "compute-engine-v1-project-global-snapshots-snapshot"
  url_pattern = "/{project}/global/snapshots/{snapshot}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "snapshot"]
  whitelist = ["creationTimestamp", "description", "diskSizeGb", "id", "kind", "labelFingerprint", "labels", "licenses", "name", "selfLink", "sourceDisk", "sourceDiskId", "status", "storageBytes", "storageBytesStatus"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    diskSizeGb = "diskSizeGb"
    id = "id"
    kind = "kind"
    labelFingerprint = "labelFingerprint"
    labels = "labels"
    licenses = "licenses"
    name = "name"
    selfLink = "selfLink"
    sourceDisk = "sourceDisk"
    sourceDiskId = "sourceDiskId"
    status = "status"
    storageBytes = "storageBytes"
    storageBytesStatus = "storageBytesStatus"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-sslcertificates"
  slug = "compute-engine-v1-project-global-sslcertificates"
  url_pattern = "/{project}/global/sslCertificates"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-sslcertificates-sslcertificate"
  slug = "compute-engine-v1-project-global-sslcertificates-sslcertificate"
  url_pattern = "/{project}/global/sslCertificates/{sslCertificate}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "sslCertificate"]
  whitelist = ["certificate", "creationTimestamp", "description", "id", "kind", "name", "privateKey", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    certificate = "certificate"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    privateKey = "privateKey"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targethttpproxies"
  slug = "compute-engine-v1-project-global-targethttpproxies"
  url_pattern = "/{project}/global/targetHttpProxies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targethttpproxies-targethttpproxy"
  slug = "compute-engine-v1-project-global-targethttpproxies-targethttpproxy"
  url_pattern = "/{project}/global/targetHttpProxies/{targetHttpProxy}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetHttpProxy"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "selfLink", "urlMap"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
    urlMap = "urlMap"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targethttpsproxies"
  slug = "compute-engine-v1-project-global-targethttpsproxies"
  url_pattern = "/{project}/global/targetHttpsProxies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targethttpsproxies-targethttpsproxy"
  slug = "compute-engine-v1-project-global-targethttpsproxies-targethttpsproxy"
  url_pattern = "/{project}/global/targetHttpsProxies/{targetHttpsProxy}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetHttpsProxy"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "selfLink", "sslCertificates", "urlMap"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
    sslCertificates = "sslCertificates"
    urlMap = "urlMap"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targetsslproxies"
  slug = "compute-engine-v1-project-global-targetsslproxies"
  url_pattern = "/{project}/global/targetSslProxies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targetsslproxies-targetsslproxy"
  slug = "compute-engine-v1-project-global-targetsslproxies-targetsslproxy"
  url_pattern = "/{project}/global/targetSslProxies/{targetSslProxy}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetSslProxy"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "proxyHeader", "selfLink", "service", "sslCertificates"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    proxyHeader = "proxyHeader"
    selfLink = "selfLink"
    service = "service"
    sslCertificates = "sslCertificates"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targetsslproxies-targetsslproxy-setbackendservice"
  slug = "compute-engine-v1-project-global-targetsslproxies-targetsslproxy-setbackendservice"
  url_pattern = "/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetSslProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targetsslproxies-targetsslproxy-setproxyheader"
  slug = "compute-engine-v1-project-global-targetsslproxies-targetsslproxy-setproxyheader"
  url_pattern = "/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetSslProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targetsslproxies-targetsslproxy-setsslcertificates"
  slug = "compute-engine-v1-project-global-targetsslproxies-targetsslproxy-setsslcertificates"
  url_pattern = "/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetSslProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targettcpproxies"
  slug = "compute-engine-v1-project-global-targettcpproxies"
  url_pattern = "/{project}/global/targetTcpProxies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targettcpproxies-targettcpproxy"
  slug = "compute-engine-v1-project-global-targettcpproxies-targettcpproxy"
  url_pattern = "/{project}/global/targetTcpProxies/{targetTcpProxy}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetTcpProxy"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "proxyHeader", "selfLink", "service"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    proxyHeader = "proxyHeader"
    selfLink = "selfLink"
    service = "service"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targettcpproxies-targettcpproxy-setbackendservice"
  slug = "compute-engine-v1-project-global-targettcpproxies-targettcpproxy-setbackendservice"
  url_pattern = "/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetTcpProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-targettcpproxies-targettcpproxy-setproxyheader"
  slug = "compute-engine-v1-project-global-targettcpproxies-targettcpproxy-setproxyheader"
  url_pattern = "/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetTcpProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-urlmaps"
  slug = "compute-engine-v1-project-global-urlmaps"
  url_pattern = "/{project}/global/urlMaps"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-urlmaps-urlmap"
  slug = "compute-engine-v1-project-global-urlmaps-urlmap"
  url_pattern = "/{project}/global/urlMaps/{urlMap}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "urlMap"]
  whitelist = ["creationTimestamp", "defaultService", "description", "fingerprint", "hostRules", "id", "kind", "name", "pathMatchers", "selfLink", "tests"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    defaultService = "defaultService"
    description = "description"
    fingerprint = "fingerprint"
    hostRules = "hostRules"
    id = "id"
    kind = "kind"
    name = "name"
    pathMatchers = "pathMatchers"
    selfLink = "selfLink"
    tests = "tests"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-urlmaps-urlmap-invalidatecache"
  slug = "compute-engine-v1-project-global-urlmaps-urlmap-invalidatecache"
  url_pattern = "/{project}/global/urlMaps/{urlMap}/invalidateCache"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "urlMap"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-global-urlmaps-urlmap-validate"
  slug = "compute-engine-v1-project-global-urlmaps-urlmap-validate"
  url_pattern = "/{project}/global/urlMaps/{urlMap}/validate"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "urlMap"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-listxpnhosts"
  slug = "compute-engine-v1-project-listxpnhosts"
  url_pattern = "/{project}/listXpnHosts"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "order_by", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-movedisk"
  slug = "compute-engine-v1-project-movedisk"
  url_pattern = "/{project}/moveDisk"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-moveinstance"
  slug = "compute-engine-v1-project-moveinstance"
  url_pattern = "/{project}/moveInstance"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions"
  slug = "compute-engine-v1-project-regions"
  url_pattern = "/{project}/regions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region"
  slug = "compute-engine-v1-project-regions-region"
  url_pattern = "/{project}/regions/{region}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "quotas", "selfLink", "status", "zones"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    quotas = "quotas"
    selfLink = "selfLink"
    status = "status"
    zones = "zones"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-addresses"
  slug = "compute-engine-v1-project-regions-region-addresses"
  url_pattern = "/{project}/regions/{region}/addresses"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-addresses-address"
  slug = "compute-engine-v1-project-regions-region-addresses-address"
  url_pattern = "/{project}/regions/{region}/addresses/{address}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["address", "project", "region"]
  whitelist = ["address", "creationTimestamp", "description", "id", "ipVersion", "kind", "name", "region", "selfLink", "status", "users"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    ipVersion = "ipVersion"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    status = "status"
    users = "users"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-autoscalers"
  slug = "compute-engine-v1-project-regions-region-autoscalers"
  url_pattern = "/{project}/regions/{region}/autoscalers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-autoscalers-autoscaler"
  slug = "compute-engine-v1-project-regions-region-autoscalers-autoscaler"
  url_pattern = "/{project}/regions/{region}/autoscalers/{autoscaler}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["autoscaler", "project", "region"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "region", "selfLink", "status", "statusDetails", "target", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    status = "status"
    statusDetails = "statusDetails"
    target = "target"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-backendservices"
  slug = "compute-engine-v1-project-regions-region-backendservices"
  url_pattern = "/{project}/regions/{region}/backendServices"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-backendservices-backendservice"
  slug = "compute-engine-v1-project-regions-region-backendservices-backendservice"
  url_pattern = "/{project}/regions/{region}/backendServices/{backendService}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["backendService", "project", "region"]
  whitelist = ["affinityCookieTtlSec", "backends", "creationTimestamp", "description", "enableCDN", "fingerprint", "healthChecks", "id", "kind", "loadBalancingScheme", "name", "port", "portName", "protocol", "region", "selfLink", "sessionAffinity", "timeoutSec"]
  concurrent_calls = 0
  [backends.mapping]
    affinityCookieTtlSec = "affinityCookieTtlSec"
    backends = "backends"
    creationTimestamp = "creationTimestamp"
    description = "description"
    enableCDN = "enableCDN"
    fingerprint = "fingerprint"
    healthChecks = "healthChecks"
    id = "id"
    kind = "kind"
    loadBalancingScheme = "loadBalancingScheme"
    name = "name"
    port = "port"
    portName = "portName"
    protocol = "protocol"
    region = "region"
    selfLink = "selfLink"
    sessionAffinity = "sessionAffinity"
    timeoutSec = "timeoutSec"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-backendservices-backendservice-gethealth"
  slug = "compute-engine-v1-project-regions-region-backendservices-backendservice-gethealth"
  url_pattern = "/{project}/regions/{region}/backendServices/{backendService}/getHealth"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["backendService", "project", "region"]
  whitelist = ["healthStatus", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    healthStatus = "healthStatus"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-commitments"
  slug = "compute-engine-v1-project-regions-region-commitments"
  url_pattern = "/{project}/regions/{region}/commitments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-commitments-commitment"
  slug = "compute-engine-v1-project-regions-region-commitments-commitment"
  url_pattern = "/{project}/regions/{region}/commitments/{commitment}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commitment", "project", "region"]
  whitelist = ["creationTimestamp", "description", "endTimestamp", "id", "kind", "name", "plan", "region", "resources", "selfLink", "startTimestamp", "status", "statusMessage"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTimestamp = "endTimestamp"
    id = "id"
    kind = "kind"
    name = "name"
    plan = "plan"
    region = "region"
    resources = "resources"
    selfLink = "selfLink"
    startTimestamp = "startTimestamp"
    status = "status"
    statusMessage = "statusMessage"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-forwardingrules"
  slug = "compute-engine-v1-project-regions-region-forwardingrules"
  url_pattern = "/{project}/regions/{region}/forwardingRules"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-forwardingrules-forwardingrule"
  slug = "compute-engine-v1-project-regions-region-forwardingrules-forwardingrule"
  url_pattern = "/{project}/regions/{region}/forwardingRules/{forwardingRule}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["forwardingRule", "project", "region"]
  whitelist = ["IPAddress", "IPProtocol", "backendService", "creationTimestamp", "description", "id", "ipVersion", "kind", "loadBalancingScheme", "name", "network", "portRange", "ports", "region", "selfLink", "subnetwork", "target"]
  concurrent_calls = 0
  [backends.mapping]
    IPAddress = "IPAddress"
    IPProtocol = "IPProtocol"
    backendService = "backendService"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    ipVersion = "ipVersion"
    kind = "kind"
    loadBalancingScheme = "loadBalancingScheme"
    name = "name"
    network = "network"
    portRange = "portRange"
    ports = "ports"
    region = "region"
    selfLink = "selfLink"
    subnetwork = "subnetwork"
    target = "target"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-forwardingrules-forwardingrule-settarget"
  slug = "compute-engine-v1-project-regions-region-forwardingrules-forwardingrule-settarget"
  url_pattern = "/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget"
  method = "PARAMETERS"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  whitelist = ["baseInstanceName", "creationTimestamp", "description", "fingerprint", "id", "instanceGroup", "instanceTemplate", "kind", "name", "namedPorts", "region", "selfLink", "targetPools", "targetSize", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    baseInstanceName = "baseInstanceName"
    creationTimestamp = "creationTimestamp"
    description = "description"
    fingerprint = "fingerprint"
    id = "id"
    instanceGroup = "instanceGroup"
    instanceTemplate = "instanceTemplate"
    kind = "kind"
    name = "name"
    namedPorts = "namedPorts"
    region = "region"
    selfLink = "selfLink"
    targetPools = "targetPools"
    targetSize = "targetSize"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-abandoninstances"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-abandoninstances"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-deleteinstances"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-deleteinstances"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-listmanagedinstances"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-listmanagedinstances"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["filter", "maxResults", "order_by", "pageToken"]
  whitelist = ["managedInstances"]
  concurrent_calls = 0
  [backends.mapping]
    managedInstances = "managedInstances"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-recreateinstances"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-recreateinstances"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-resize"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-resize"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId", "size"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-setinstancetemplate"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-setinstancetemplate"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroupmanagers-instancegroupmanager-settargetpools"
  slug = "compute-engine-v1-project-regions-region-instancegroupmanagers-instancegroupmanager-settargetpools"
  url_pattern = "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroups"
  slug = "compute-engine-v1-project-regions-region-instancegroups"
  url_pattern = "/{project}/regions/{region}/instanceGroups"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroups-instancegroup"
  slug = "compute-engine-v1-project-regions-region-instancegroups-instancegroup"
  url_pattern = "/{project}/regions/{region}/instanceGroups/{instanceGroup}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "region"]
  whitelist = ["creationTimestamp", "description", "fingerprint", "id", "kind", "name", "namedPorts", "network", "region", "selfLink", "size", "subnetwork", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    fingerprint = "fingerprint"
    id = "id"
    kind = "kind"
    name = "name"
    namedPorts = "namedPorts"
    network = "network"
    region = "region"
    selfLink = "selfLink"
    size = "size"
    subnetwork = "subnetwork"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroups-instancegroup-listinstances"
  slug = "compute-engine-v1-project-regions-region-instancegroups-instancegroup-listinstances"
  url_pattern = "/{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-instancegroups-instancegroup-setnamedports"
  slug = "compute-engine-v1-project-regions-region-instancegroups-instancegroup-setnamedports"
  url_pattern = "/{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "region"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-operations"
  slug = "compute-engine-v1-project-regions-region-operations"
  url_pattern = "/{project}/regions/{region}/operations"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-operations-operation"
  slug = "compute-engine-v1-project-regions-region-operations-operation"
  url_pattern = "/{project}/regions/{region}/operations/{operation}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["operation", "project", "region"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-routers"
  slug = "compute-engine-v1-project-regions-region-routers"
  url_pattern = "/{project}/regions/{region}/routers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-routers-router"
  slug = "compute-engine-v1-project-regions-region-routers-router"
  url_pattern = "/{project}/regions/{region}/routers/{router}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "router"]
  whitelist = ["bgpPeers", "creationTimestamp", "description", "id", "interfaces", "kind", "name", "network", "region", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    bgpPeers = "bgpPeers"
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    interfaces = "interfaces"
    kind = "kind"
    name = "name"
    network = "network"
    region = "region"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-routers-router-getrouterstatus"
  slug = "compute-engine-v1-project-regions-region-routers-router-getrouterstatus"
  url_pattern = "/{project}/regions/{region}/routers/{router}/getRouterStatus"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "router"]
  whitelist = ["kind"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-routers-router-preview"
  slug = "compute-engine-v1-project-regions-region-routers-router-preview"
  url_pattern = "/{project}/regions/{region}/routers/{router}/preview"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "router"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-subnetworks"
  slug = "compute-engine-v1-project-regions-region-subnetworks"
  url_pattern = "/{project}/regions/{region}/subnetworks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-subnetworks-subnetwork"
  slug = "compute-engine-v1-project-regions-region-subnetworks-subnetwork"
  url_pattern = "/{project}/regions/{region}/subnetworks/{subnetwork}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "subnetwork"]
  whitelist = ["creationTimestamp", "description", "gatewayAddress", "id", "ipCidrRange", "kind", "name", "network", "privateIpGoogleAccess", "region", "secondaryIpRanges", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    gatewayAddress = "gatewayAddress"
    id = "id"
    ipCidrRange = "ipCidrRange"
    kind = "kind"
    name = "name"
    network = "network"
    privateIpGoogleAccess = "privateIpGoogleAccess"
    region = "region"
    secondaryIpRanges = "secondaryIpRanges"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-subnetworks-subnetwork-expandipcidrrange"
  slug = "compute-engine-v1-project-regions-region-subnetworks-subnetwork-expandipcidrrange"
  url_pattern = "/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "subnetwork"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-subnetworks-subnetwork-setprivateipgoogleaccess"
  slug = "compute-engine-v1-project-regions-region-subnetworks-subnetwork-setprivateipgoogleaccess"
  url_pattern = "/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "subnetwork"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools"
  slug = "compute-engine-v1-project-regions-region-targetpools"
  url_pattern = "/{project}/regions/{region}/targetPools"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  whitelist = ["backupPool", "creationTimestamp", "description", "failoverRatio", "healthChecks", "id", "instances", "kind", "name", "region", "selfLink", "sessionAffinity"]
  concurrent_calls = 0
  [backends.mapping]
    backupPool = "backupPool"
    creationTimestamp = "creationTimestamp"
    description = "description"
    failoverRatio = "failoverRatio"
    healthChecks = "healthChecks"
    id = "id"
    instances = "instances"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    sessionAffinity = "sessionAffinity"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-addhealthcheck"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-addhealthcheck"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-addinstance"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-addinstance"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/addInstance"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-gethealth"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-gethealth"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/getHealth"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  whitelist = ["healthStatus", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    healthStatus = "healthStatus"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-removehealthcheck"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-removehealthcheck"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-removeinstance"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-removeinstance"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/removeInstance"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetpools-targetpool-setbackup"
  slug = "compute-engine-v1-project-regions-region-targetpools-targetpool-setbackup"
  url_pattern = "/{project}/regions/{region}/targetPools/{targetPool}/setBackup"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetPool"]
  query_string_params = ["failoverRatio", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetvpngateways"
  slug = "compute-engine-v1-project-regions-region-targetvpngateways"
  url_pattern = "/{project}/regions/{region}/targetVpnGateways"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-targetvpngateways-targetvpngateway"
  slug = "compute-engine-v1-project-regions-region-targetvpngateways-targetvpngateway"
  url_pattern = "/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "targetVpnGateway"]
  whitelist = ["creationTimestamp", "description", "forwardingRules", "id", "kind", "name", "network", "region", "selfLink", "status", "tunnels"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    forwardingRules = "forwardingRules"
    id = "id"
    kind = "kind"
    name = "name"
    network = "network"
    region = "region"
    selfLink = "selfLink"
    status = "status"
    tunnels = "tunnels"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-vpntunnels"
  slug = "compute-engine-v1-project-regions-region-vpntunnels"
  url_pattern = "/{project}/regions/{region}/vpnTunnels"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-regions-region-vpntunnels-vpntunnel"
  slug = "compute-engine-v1-project-regions-region-vpntunnels-vpntunnel"
  url_pattern = "/{project}/regions/{region}/vpnTunnels/{vpnTunnel}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "region", "vpnTunnel"]
  whitelist = ["creationTimestamp", "description", "detailedStatus", "id", "ikeVersion", "kind", "localTrafficSelector", "name", "peerIp", "region", "remoteTrafficSelector", "router", "selfLink", "sharedSecret", "sharedSecretHash", "status", "targetVpnGateway"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    detailedStatus = "detailedStatus"
    id = "id"
    ikeVersion = "ikeVersion"
    kind = "kind"
    localTrafficSelector = "localTrafficSelector"
    name = "name"
    peerIp = "peerIp"
    region = "region"
    remoteTrafficSelector = "remoteTrafficSelector"
    router = "router"
    selfLink = "selfLink"
    sharedSecret = "sharedSecret"
    sharedSecretHash = "sharedSecretHash"
    status = "status"
    targetVpnGateway = "targetVpnGateway"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-setcommoninstancemetadata"
  slug = "compute-engine-v1-project-setcommoninstancemetadata"
  url_pattern = "/{project}/setCommonInstanceMetadata"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-setusageexportbucket"
  slug = "compute-engine-v1-project-setusageexportbucket"
  url_pattern = "/{project}/setUsageExportBucket"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-targethttpproxies-targethttpproxy-seturlmap"
  slug = "compute-engine-v1-project-targethttpproxies-targethttpproxy-seturlmap"
  url_pattern = "/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetHttpProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-targethttpsproxies-targethttpsproxy-setsslcertificates"
  slug = "compute-engine-v1-project-targethttpsproxies-targethttpsproxy-setsslcertificates"
  url_pattern = "/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetHttpsProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-targethttpsproxies-targethttpsproxy-seturlmap"
  slug = "compute-engine-v1-project-targethttpsproxies-targethttpsproxy-seturlmap"
  url_pattern = "/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetHttpsProxy"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones"
  slug = "compute-engine-v1-project-zones"
  url_pattern = "/{project}/zones"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone"
  slug = "compute-engine-v1-project-zones-zone"
  url_pattern = "/{project}/zones/{zone}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "region", "selfLink", "status"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    status = "status"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-acceleratortypes"
  slug = "compute-engine-v1-project-zones-zone-acceleratortypes"
  url_pattern = "/{project}/zones/{zone}/acceleratorTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-acceleratortypes-acceleratortype"
  slug = "compute-engine-v1-project-zones-zone-acceleratortypes-acceleratortype"
  url_pattern = "/{project}/zones/{zone}/acceleratorTypes/{acceleratorType}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["acceleratorType", "project", "zone"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "maximumCardsPerInstance", "name", "selfLink", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    maximumCardsPerInstance = "maximumCardsPerInstance"
    name = "name"
    selfLink = "selfLink"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-autoscalers"
  slug = "compute-engine-v1-project-zones-zone-autoscalers"
  url_pattern = "/{project}/zones/{zone}/autoscalers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-autoscalers-autoscaler"
  slug = "compute-engine-v1-project-zones-zone-autoscalers-autoscaler"
  url_pattern = "/{project}/zones/{zone}/autoscalers/{autoscaler}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["autoscaler", "project", "zone"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "name", "region", "selfLink", "status", "statusDetails", "target", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    region = "region"
    selfLink = "selfLink"
    status = "status"
    statusDetails = "statusDetails"
    target = "target"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disktypes"
  slug = "compute-engine-v1-project-zones-zone-disktypes"
  url_pattern = "/{project}/zones/{zone}/diskTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disktypes-disktype"
  slug = "compute-engine-v1-project-zones-zone-disktypes-disktype"
  url_pattern = "/{project}/zones/{zone}/diskTypes/{diskType}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["diskType", "project", "zone"]
  whitelist = ["creationTimestamp", "defaultDiskSizeGb", "description", "id", "kind", "name", "selfLink", "validDiskSize", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    defaultDiskSizeGb = "defaultDiskSizeGb"
    description = "description"
    id = "id"
    kind = "kind"
    name = "name"
    selfLink = "selfLink"
    validDiskSize = "validDiskSize"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disks"
  slug = "compute-engine-v1-project-zones-zone-disks"
  url_pattern = "/{project}/zones/{zone}/disks"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disks-disk"
  slug = "compute-engine-v1-project-zones-zone-disks-disk"
  url_pattern = "/{project}/zones/{zone}/disks/{disk}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["disk", "project", "zone"]
  whitelist = ["creationTimestamp", "description", "id", "kind", "labelFingerprint", "labels", "lastAttachTimestamp", "lastDetachTimestamp", "licenses", "name", "options", "selfLink", "sizeGb", "sourceImage", "sourceImageId", "sourceSnapshot", "sourceSnapshotId", "status", "type", "users", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    kind = "kind"
    labelFingerprint = "labelFingerprint"
    labels = "labels"
    lastAttachTimestamp = "lastAttachTimestamp"
    lastDetachTimestamp = "lastDetachTimestamp"
    licenses = "licenses"
    name = "name"
    options = "options"
    selfLink = "selfLink"
    sizeGb = "sizeGb"
    sourceImage = "sourceImage"
    sourceImageId = "sourceImageId"
    sourceSnapshot = "sourceSnapshot"
    sourceSnapshotId = "sourceSnapshotId"
    status = "status"
    type = "type"
    users = "users"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disks-disk-createsnapshot"
  slug = "compute-engine-v1-project-zones-zone-disks-disk-createsnapshot"
  url_pattern = "/{project}/zones/{zone}/disks/{disk}/createSnapshot"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["disk", "project", "zone"]
  query_string_params = ["guestFlush", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disks-disk-resize"
  slug = "compute-engine-v1-project-zones-zone-disks-disk-resize"
  url_pattern = "/{project}/zones/{zone}/disks/{disk}/resize"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["disk", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-disks-resource-setlabels"
  slug = "compute-engine-v1-project-zones-zone-disks-resource-setlabels"
  url_pattern = "/{project}/zones/{zone}/disks/{resource}/setLabels"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "resource", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  whitelist = ["baseInstanceName", "creationTimestamp", "description", "fingerprint", "id", "instanceGroup", "instanceTemplate", "kind", "name", "namedPorts", "region", "selfLink", "targetPools", "targetSize", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    baseInstanceName = "baseInstanceName"
    creationTimestamp = "creationTimestamp"
    description = "description"
    fingerprint = "fingerprint"
    id = "id"
    instanceGroup = "instanceGroup"
    instanceTemplate = "instanceTemplate"
    kind = "kind"
    name = "name"
    namedPorts = "namedPorts"
    region = "region"
    selfLink = "selfLink"
    targetPools = "targetPools"
    targetSize = "targetSize"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-abandoninstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-abandoninstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-deleteinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-deleteinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-listmanagedinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-listmanagedinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["filter", "maxResults", "order_by", "pageToken"]
  whitelist = ["managedInstances"]
  concurrent_calls = 0
  [backends.mapping]
    managedInstances = "managedInstances"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-recreateinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-recreateinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-resize"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-resize"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId", "size"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-setinstancetemplate"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-setinstancetemplate"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroupmanagers-instancegroupmanager-settargetpools"
  slug = "compute-engine-v1-project-zones-zone-instancegroupmanagers-instancegroupmanager-settargetpools"
  url_pattern = "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroupManager", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups"
  slug = "compute-engine-v1-project-zones-zone-instancegroups"
  url_pattern = "/{project}/zones/{zone}/instanceGroups"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups-instancegroup"
  slug = "compute-engine-v1-project-zones-zone-instancegroups-instancegroup"
  url_pattern = "/{project}/zones/{zone}/instanceGroups/{instanceGroup}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "zone"]
  whitelist = ["creationTimestamp", "description", "fingerprint", "id", "kind", "name", "namedPorts", "network", "region", "selfLink", "size", "subnetwork", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    fingerprint = "fingerprint"
    id = "id"
    kind = "kind"
    name = "name"
    namedPorts = "namedPorts"
    network = "network"
    region = "region"
    selfLink = "selfLink"
    size = "size"
    subnetwork = "subnetwork"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups-instancegroup-addinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroups-instancegroup-addinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups-instancegroup-listinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroups-instancegroup-listinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups-instancegroup-removeinstances"
  slug = "compute-engine-v1-project-zones-zone-instancegroups-instancegroup-removeinstances"
  url_pattern = "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instancegroups-instancegroup-setnamedports"
  slug = "compute-engine-v1-project-zones-zone-instancegroups-instancegroup-setnamedports"
  url_pattern = "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instanceGroup", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances"
  slug = "compute-engine-v1-project-zones-zone-instances"
  url_pattern = "/{project}/zones/{zone}/instances"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance"
  slug = "compute-engine-v1-project-zones-zone-instances-instance"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  whitelist = ["canIpForward", "cpuPlatform", "creationTimestamp", "description", "disks", "guestAccelerators", "id", "kind", "labelFingerprint", "labels", "machineType", "name", "networkInterfaces", "selfLink", "serviceAccounts", "startRestricted", "status", "statusMessage", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    canIpForward = "canIpForward"
    cpuPlatform = "cpuPlatform"
    creationTimestamp = "creationTimestamp"
    description = "description"
    disks = "disks"
    guestAccelerators = "guestAccelerators"
    id = "id"
    kind = "kind"
    labelFingerprint = "labelFingerprint"
    labels = "labels"
    machineType = "machineType"
    name = "name"
    networkInterfaces = "networkInterfaces"
    selfLink = "selfLink"
    serviceAccounts = "serviceAccounts"
    startRestricted = "startRestricted"
    status = "status"
    statusMessage = "statusMessage"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-addaccessconfig"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-addaccessconfig"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/addAccessConfig"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["networkInterface", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-attachdisk"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-attachdisk"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/attachDisk"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-deleteaccessconfig"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-deleteaccessconfig"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["accessConfig", "networkInterface", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-detachdisk"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-detachdisk"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/detachDisk"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["deviceName", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-reset"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-reset"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/reset"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-serialport"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-serialport"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/serialPort"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["port", "start"]
  whitelist = ["contents", "kind", "next", "selfLink", "start"]
  concurrent_calls = 0
  [backends.mapping]
    contents = "contents"
    kind = "kind"
    next = "next"
    selfLink = "selfLink"
    start = "start"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setdiskautodelete"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setdiskautodelete"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["autoDelete", "deviceName", "requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setlabels"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setlabels"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setLabels"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setmachineresources"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setmachineresources"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setMachineResources"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setmachinetype"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setmachinetype"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setMachineType"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setmetadata"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setmetadata"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setMetadata"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setscheduling"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setscheduling"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setScheduling"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-setserviceaccount"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-setserviceaccount"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setServiceAccount"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-settags"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-settags"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/setTags"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-start"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-start"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/start"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-startwithencryptionkey"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-startwithencryptionkey"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-instances-instance-stop"
  slug = "compute-engine-v1-project-zones-zone-instances-instance-stop"
  url_pattern = "/{project}/zones/{zone}/instances/{instance}/stop"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["instance", "project", "zone"]
  query_string_params = ["requestId"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-machinetypes"
  slug = "compute-engine-v1-project-zones-zone-machinetypes"
  url_pattern = "/{project}/zones/{zone}/machineTypes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-machinetypes-machinetype"
  slug = "compute-engine-v1-project-zones-zone-machinetypes-machinetype"
  url_pattern = "/{project}/zones/{zone}/machineTypes/{machineType}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["machineType", "project", "zone"]
  whitelist = ["creationTimestamp", "description", "guestCpus", "id", "imageSpaceGb", "isSharedCpu", "kind", "maximumPersistentDisks", "maximumPersistentDisksSizeGb", "memoryMb", "name", "scratchDisks", "selfLink", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    guestCpus = "guestCpus"
    id = "id"
    imageSpaceGb = "imageSpaceGb"
    isSharedCpu = "isSharedCpu"
    kind = "kind"
    maximumPersistentDisks = "maximumPersistentDisks"
    maximumPersistentDisksSizeGb = "maximumPersistentDisksSizeGb"
    memoryMb = "memoryMb"
    name = "name"
    scratchDisks = "scratchDisks"
    selfLink = "selfLink"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-operations"
  slug = "compute-engine-v1-project-zones-zone-operations"
  url_pattern = "/{project}/zones/{zone}/operations"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-operations-operation"
  slug = "compute-engine-v1-project-zones-zone-operations-operation"
  url_pattern = "/{project}/zones/{zone}/operations/{operation}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["operation", "project", "zone"]
  whitelist = ["clientOperationId", "creationTimestamp", "description", "endTime", "error", "httpErrorMessage", "httpErrorStatusCode", "id", "insertTime", "kind", "name", "operationType", "progress", "region", "selfLink", "startTime", "status", "statusMessage", "targetId", "targetLink", "user", "warnings", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    clientOperationId = "clientOperationId"
    creationTimestamp = "creationTimestamp"
    description = "description"
    endTime = "endTime"
    error = "error"
    httpErrorMessage = "httpErrorMessage"
    httpErrorStatusCode = "httpErrorStatusCode"
    id = "id"
    insertTime = "insertTime"
    kind = "kind"
    name = "name"
    operationType = "operationType"
    progress = "progress"
    region = "region"
    selfLink = "selfLink"
    startTime = "startTime"
    status = "status"
    statusMessage = "statusMessage"
    targetId = "targetId"
    targetLink = "targetLink"
    user = "user"
    warnings = "warnings"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-targetinstances"
  slug = "compute-engine-v1-project-zones-zone-targetinstances"
  url_pattern = "/{project}/zones/{zone}/targetInstances"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "zone"]
  query_string_params = ["filter", "maxResults", "orderBy", "pageToken"]
  whitelist = ["id", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "compute-engine-project-zones-zone-targetinstances-targetinstance"
  slug = "compute-engine-v1-project-zones-zone-targetinstances-targetinstance"
  url_pattern = "/{project}/zones/{zone}/targetInstances/{targetInstance}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["project", "targetInstance", "zone"]
  whitelist = ["creationTimestamp", "description", "id", "instance", "kind", "name", "natPolicy", "selfLink", "zone"]
  concurrent_calls = 0
  [backends.mapping]
    creationTimestamp = "creationTimestamp"
    description = "description"
    id = "id"
    instance = "instance"
    kind = "kind"
    name = "name"
    natPolicy = "natPolicy"
    selfLink = "selfLink"
    zone = "zone"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]
