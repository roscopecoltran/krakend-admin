swagger: '2.0'
schemes:
  - https
host: www.googleapis.com
basePath: /compute/v1/projects
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Creates and runs virtual machines on Google Cloud Platform.
  title: Compute Engine
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_cloud.google.com__static_images_new-gcp-logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/compute/v1/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: compute
externalDocs:
  url: 'https://developers.google.com/compute/docs/reference/latest/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/compute': View and manage your Google Compute Engine resources
      'https://www.googleapis.com/auth/compute.readonly': View your Google Compute Engine resources
      'https://www.googleapis.com/auth/devstorage.full_control': Manage your data and permissions in Google Cloud Storage
      'https://www.googleapis.com/auth/devstorage.read_only': View your data in Google Cloud Storage
      'https://www.googleapis.com/auth/devstorage.read_write': Manage your data in Google Cloud Storage
    type: oauth2
parameters:
  alt:
    default: json
    description: Data format for the response.
    enum:
      - json
    in: query
    name: alt
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
    in: query
    name: quotaUser
    type: string
  userIp:
    description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    in: query
    name: userIp
    type: string
tags:
  - name: acceleratorTypes
  - name: addresses
  - name: autoscalers
  - name: backendBuckets
  - name: backendServices
  - name: diskTypes
  - name: disks
  - name: firewalls
  - name: forwardingRules
  - name: globalAddresses
  - name: globalForwardingRules
  - name: globalOperations
  - name: healthChecks
  - name: httpHealthChecks
  - name: httpsHealthChecks
  - name: images
  - name: instanceGroupManagers
  - name: instanceGroups
  - name: instanceTemplates
  - name: instances
  - name: licenses
  - name: machineTypes
  - name: networks
  - name: projects
  - name: regionAutoscalers
  - name: regionBackendServices
  - name: regionCommitments
  - name: regionInstanceGroupManagers
  - name: regionInstanceGroups
  - name: regionOperations
  - name: regions
  - name: routers
  - name: routes
  - name: snapshots
  - name: sslCertificates
  - name: subnetworks
  - name: targetHttpProxies
  - name: targetHttpsProxies
  - name: targetInstances
  - name: targetPools
  - name: targetSslProxies
  - name: targetTcpProxies
  - name: targetVpnGateways
  - name: urlMaps
  - name: vpnTunnels
  - name: zoneOperations
  - name: zones
paths:
  '/{project}':
    get:
      description: Returns the specified Project resource.
      operationId: compute.projects.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/acceleratorTypes':
    get:
      description: Retrieves an aggregated list of accelerator types.
      operationId: compute.acceleratorTypes.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AcceleratorTypeAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - acceleratorTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/addresses':
    get:
      description: Retrieves an aggregated list of addresses.
      operationId: compute.addresses.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AddressAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - addresses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/autoscalers':
    get:
      description: Retrieves an aggregated list of autoscalers.
      operationId: compute.autoscalers.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AutoscalerAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - autoscalers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/backendServices':
    get:
      description: 'Retrieves the list of all BackendService resources, regional and global, available to the specified project.'
      operationId: compute.backendServices.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendServiceAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendServices
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/commitments':
    get:
      description: Retrieves an aggregated list of commitments.
      operationId: compute.regionCommitments.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CommitmentAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionCommitments
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/diskTypes':
    get:
      description: Retrieves an aggregated list of disk types.
      operationId: compute.diskTypes.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiskTypeAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - diskTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/disks':
    get:
      description: Retrieves an aggregated list of persistent disks.
      operationId: compute.disks.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiskAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - disks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/forwardingRules':
    get:
      description: Retrieves an aggregated list of forwarding rules.
      operationId: compute.forwardingRules.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ForwardingRuleAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - forwardingRules
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/instanceGroupManagers':
    get:
      description: Retrieves the list of managed instance groups and groups them by zone.
      operationId: compute.instanceGroupManagers.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupManagerAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/instanceGroups':
    get:
      description: Retrieves the list of instance groups and sorts them by zone.
      operationId: compute.instanceGroups.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroups
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/instances':
    get:
      description: Retrieves aggregated list of instances.
      operationId: compute.instances.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/machineTypes':
    get:
      description: Retrieves an aggregated list of machine types.
      operationId: compute.machineTypes.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MachineTypeAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - machineTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/operations':
    get:
      description: Retrieves an aggregated list of all operations.
      operationId: compute.globalOperations.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OperationAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/routers':
    get:
      description: Retrieves an aggregated list of routers.
      operationId: compute.routers.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RouterAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/subnetworks':
    get:
      description: Retrieves an aggregated list of subnetworks.
      operationId: compute.subnetworks.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SubnetworkAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - subnetworks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/targetInstances':
    get:
      description: Retrieves an aggregated list of target instances.
      operationId: compute.targetInstances.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetInstanceAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetInstances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/targetPools':
    get:
      description: Retrieves an aggregated list of target pools.
      operationId: compute.targetPools.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetPoolAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetPools
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/targetVpnGateways':
    get:
      description: Retrieves an aggregated list of target VPN gateways.
      operationId: compute.targetVpnGateways.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetVpnGatewayAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetVpnGateways
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/aggregated/vpnTunnels':
    get:
      description: Retrieves an aggregated list of VPN tunnels.
      operationId: compute.vpnTunnels.aggregatedList
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VpnTunnelAggregatedList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - vpnTunnels
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/disableXpnHost':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Disable this project as a shared VPC host project.
      operationId: compute.projects.disableXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/disableXpnResource':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Disable a serivce resource (a.k.a service project) associated with this host project.
      operationId: compute.projects.disableXpnResource
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectsDisableXpnResourceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/enableXpnHost':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Enable this project as a shared VPC host project.
      operationId: compute.projects.enableXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/enableXpnResource':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Enable service resource (a.k.a service project) for a host project, so that subnets in the host project can be used by instances in the service project.'
      operationId: compute.projects.enableXpnResource
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectsEnableXpnResourceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/getXpnHost':
    get:
      description: Get the shared VPC host project that this project links to. May be empty if no link exists.
      operationId: compute.projects.getXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Project'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/getXpnResources':
    get:
      description: Get service resources (a.k.a service project) associated with this host project.
      operationId: compute.projects.getXpnResources
      parameters:
        - in: query
          name: filter
          type: string
        - default: 500
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - in: query
          name: order_by
          type: string
        - in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProjectsGetXpnResources'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/addresses':
    get:
      description: Retrieves a list of global addresses.
      operationId: compute.globalAddresses.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AddressList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalAddresses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates an address resource in the specified project using the data included in the request.
      operationId: compute.globalAddresses.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Address'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalAddresses
  '/{project}/global/addresses/{address}':
    delete:
      description: Deletes the specified address resource.
      operationId: compute.globalAddresses.delete
      parameters:
        - description: Name of the address resource to delete.
          in: path
          name: address
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalAddresses
    get:
      description: Returns the specified address resource. Get a list of available addresses by making a list() request.
      operationId: compute.globalAddresses.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the address resource to return.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Address'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalAddresses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/backendBuckets':
    get:
      description: Retrieves the list of BackendBucket resources available to the specified project.
      operationId: compute.backendBuckets.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendBucketList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendBuckets
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a BackendBucket resource in the specified project using the data included in the request.
      operationId: compute.backendBuckets.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendBucket'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendBuckets
  '/{project}/global/backendBuckets/{backendBucket}':
    delete:
      description: Deletes the specified BackendBucket resource.
      operationId: compute.backendBuckets.delete
      parameters:
        - description: Name of the BackendBucket resource to delete.
          in: path
          name: backendBucket
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendBuckets
    get:
      description: Returns the specified BackendBucket resource. Get a list of available backend buckets by making a list() request.
      operationId: compute.backendBuckets.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the BackendBucket resource to return.
          in: path
          name: backendBucket
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendBucket'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendBuckets
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the specified BackendBucket resource with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.backendBuckets.patch
      parameters:
        - description: Name of the BackendBucket resource to patch.
          in: path
          name: backendBucket
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendBucket'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendBuckets
    put:
      description: Updates the specified BackendBucket resource with the data included in the request.
      operationId: compute.backendBuckets.update
      parameters:
        - description: Name of the BackendBucket resource to update.
          in: path
          name: backendBucket
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendBucket'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendBuckets
  '/{project}/global/backendServices':
    get:
      description: Retrieves the list of BackendService resources available to the specified project.
      operationId: compute.backendServices.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendServiceList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendServices
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a BackendService resource in the specified project using the data included in the request. There are several restrictions and guidelines to keep in mind when creating a backend service. Read  Restrictions and Guidelines for more information.
      operationId: compute.backendServices.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendServices
  '/{project}/global/backendServices/{backendService}':
    delete:
      description: Deletes the specified BackendService resource.
      operationId: compute.backendServices.delete
      parameters:
        - description: Name of the BackendService resource to delete.
          in: path
          name: backendService
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendServices
    get:
      description: Returns the specified BackendService resource. Get a list of available backend services by making a list() request.
      operationId: compute.backendServices.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the BackendService resource to return.
          in: path
          name: backendService
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendService'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendServices
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Patches the specified BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.backendServices.patch
      parameters:
        - description: Name of the BackendService resource to patch.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendServices
    put:
      description: Updates the specified BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information.
      operationId: compute.backendServices.update
      parameters:
        - description: Name of the BackendService resource to update.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - backendServices
  '/{project}/global/backendServices/{backendService}/getHealth':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Gets the most recent health check results for this BackendService.
      operationId: compute.backendServices.getHealth
      parameters:
        - in: path
          name: project
          required: true
          type: string
        - description: Name of the BackendService resource to which the queried instance belongs.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceGroupReference'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendServiceGroupHealth'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - backendServices
  '/{project}/global/firewalls':
    get:
      description: Retrieves the list of firewall rules available to the specified project.
      operationId: compute.firewalls.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/FirewallList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - firewalls
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a firewall rule in the specified project using the data included in the request.
      operationId: compute.firewalls.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Firewall'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - firewalls
  '/{project}/global/firewalls/{firewall}':
    delete:
      description: Deletes the specified firewall.
      operationId: compute.firewalls.delete
      parameters:
        - description: Name of the firewall rule to delete.
          in: path
          name: firewall
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - firewalls
    get:
      description: Returns the specified firewall.
      operationId: compute.firewalls.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the firewall rule to return.
          in: path
          name: firewall
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Firewall'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - firewalls
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the specified firewall rule with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.firewalls.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Firewall'
        - description: Name of the firewall rule to patch.
          in: path
          name: firewall
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - firewalls
    put:
      description: 'Updates the specified firewall rule with the data included in the request. Using PUT method, can only update following fields of firewall rule: allowed, description, sourceRanges, sourceTags, targetTags.'
      operationId: compute.firewalls.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Firewall'
        - description: Name of the firewall rule to update.
          in: path
          name: firewall
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - firewalls
  '/{project}/global/forwardingRules':
    get:
      description: Retrieves a list of GlobalForwardingRule resources available to the specified project.
      operationId: compute.globalForwardingRules.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ForwardingRuleList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalForwardingRules
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a GlobalForwardingRule resource in the specified project using the data included in the request.
      operationId: compute.globalForwardingRules.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ForwardingRule'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalForwardingRules
  '/{project}/global/forwardingRules/{forwardingRule}':
    delete:
      description: Deletes the specified GlobalForwardingRule resource.
      operationId: compute.globalForwardingRules.delete
      parameters:
        - description: Name of the ForwardingRule resource to delete.
          in: path
          name: forwardingRule
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalForwardingRules
    get:
      description: Returns the specified GlobalForwardingRule resource. Get a list of available forwarding rules by making a list() request.
      operationId: compute.globalForwardingRules.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the ForwardingRule resource to return.
          in: path
          name: forwardingRule
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ForwardingRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalForwardingRules
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/forwardingRules/{forwardingRule}/setTarget':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes target URL for the GlobalForwardingRule resource. The new target should be of the same type as the old target.
      operationId: compute.globalForwardingRules.setTarget
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetReference'
        - description: Name of the ForwardingRule resource in which target is to be set.
          in: path
          name: forwardingRule
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalForwardingRules
  '/{project}/global/healthChecks':
    get:
      description: Retrieves the list of HealthCheck resources available to the specified project.
      operationId: compute.healthChecks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HealthCheckList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - healthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a HealthCheck resource in the specified project using the data included in the request.
      operationId: compute.healthChecks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HealthCheck'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - healthChecks
  '/{project}/global/healthChecks/{healthCheck}':
    delete:
      description: Deletes the specified HealthCheck resource.
      operationId: compute.healthChecks.delete
      parameters:
        - description: Name of the HealthCheck resource to delete.
          in: path
          name: healthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - healthChecks
    get:
      description: Returns the specified HealthCheck resource. Get a list of available health checks by making a list() request.
      operationId: compute.healthChecks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the HealthCheck resource to return.
          in: path
          name: healthCheck
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HealthCheck'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - healthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates a HealthCheck resource in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.healthChecks.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HealthCheck'
        - description: Name of the HealthCheck resource to patch.
          in: path
          name: healthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - healthChecks
    put:
      description: Updates a HealthCheck resource in the specified project using the data included in the request.
      operationId: compute.healthChecks.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HealthCheck'
        - description: Name of the HealthCheck resource to update.
          in: path
          name: healthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - healthChecks
  '/{project}/global/httpHealthChecks':
    get:
      description: Retrieves the list of HttpHealthCheck resources available to the specified project.
      operationId: compute.httpHealthChecks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HttpHealthCheckList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - httpHealthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a HttpHealthCheck resource in the specified project using the data included in the request.
      operationId: compute.httpHealthChecks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpHealthCheck'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpHealthChecks
  '/{project}/global/httpHealthChecks/{httpHealthCheck}':
    delete:
      description: Deletes the specified HttpHealthCheck resource.
      operationId: compute.httpHealthChecks.delete
      parameters:
        - description: Name of the HttpHealthCheck resource to delete.
          in: path
          name: httpHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpHealthChecks
    get:
      description: Returns the specified HttpHealthCheck resource. Get a list of available HTTP health checks by making a list() request.
      operationId: compute.httpHealthChecks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the HttpHealthCheck resource to return.
          in: path
          name: httpHealthCheck
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HttpHealthCheck'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - httpHealthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates a HttpHealthCheck resource in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.httpHealthChecks.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpHealthCheck'
        - description: Name of the HttpHealthCheck resource to patch.
          in: path
          name: httpHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpHealthChecks
    put:
      description: Updates a HttpHealthCheck resource in the specified project using the data included in the request.
      operationId: compute.httpHealthChecks.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpHealthCheck'
        - description: Name of the HttpHealthCheck resource to update.
          in: path
          name: httpHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpHealthChecks
  '/{project}/global/httpsHealthChecks':
    get:
      description: Retrieves the list of HttpsHealthCheck resources available to the specified project.
      operationId: compute.httpsHealthChecks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HttpsHealthCheckList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - httpsHealthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a HttpsHealthCheck resource in the specified project using the data included in the request.
      operationId: compute.httpsHealthChecks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpsHealthCheck'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpsHealthChecks
  '/{project}/global/httpsHealthChecks/{httpsHealthCheck}':
    delete:
      description: Deletes the specified HttpsHealthCheck resource.
      operationId: compute.httpsHealthChecks.delete
      parameters:
        - description: Name of the HttpsHealthCheck resource to delete.
          in: path
          name: httpsHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpsHealthChecks
    get:
      description: Returns the specified HttpsHealthCheck resource. Get a list of available HTTPS health checks by making a list() request.
      operationId: compute.httpsHealthChecks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the HttpsHealthCheck resource to return.
          in: path
          name: httpsHealthCheck
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/HttpsHealthCheck'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - httpsHealthChecks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates a HttpsHealthCheck resource in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.httpsHealthChecks.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpsHealthCheck'
        - description: Name of the HttpsHealthCheck resource to patch.
          in: path
          name: httpsHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpsHealthChecks
    put:
      description: Updates a HttpsHealthCheck resource in the specified project using the data included in the request.
      operationId: compute.httpsHealthChecks.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HttpsHealthCheck'
        - description: Name of the HttpsHealthCheck resource to update.
          in: path
          name: httpsHealthCheck
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - httpsHealthChecks
  '/{project}/global/images':
    get:
      description: 'Retrieves the list of private images available to the specified project. Private images are images you create that belong to your project. This method does not get any images that belong to other projects, including publicly-available images, like Debian 8. If you want to get a list of publicly-available images, use this method to make a request to the respective image project, such as debian-cloud or windows-cloud.'
      operationId: compute.images.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ImageList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - images
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates an image in the specified project using the data included in the request.
      operationId: compute.images.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Image'
        - description: Force image creation if true.
          in: query
          name: forceCreate
          type: boolean
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      tags:
        - images
  '/{project}/global/images/family/{family}':
    get:
      description: Returns the latest image that is part of an image family and is not deprecated.
      operationId: compute.images.getFromFamily
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the image family to search for.
          in: path
          name: family
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Image'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - images
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/images/{image}':
    delete:
      description: Deletes the specified image.
      operationId: compute.images.delete
      parameters:
        - description: Name of the image resource to delete.
          in: path
          name: image
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - images
    get:
      description: Returns the specified image. Get a list of available images by making a list() request.
      operationId: compute.images.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the image resource to return.
          in: path
          name: image
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Image'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - images
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/images/{image}/deprecate':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Sets the deprecation status of an image.

        If an empty request body is given, clears the deprecation status instead.
      operationId: compute.images.deprecate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DeprecationStatus'
        - description: Image name.
          in: path
          name: image
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - images
  '/{project}/global/images/{resource}/setLabels':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Sets the labels on an image. To learn more about labels, read the Labeling Resources documentation.'
      operationId: compute.images.setLabels
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GlobalSetLabelsRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the resource for this request.
          in: path
          name: resource
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - images
  '/{project}/global/instanceTemplates':
    get:
      description: Retrieves a list of instance templates that are contained within the specified project and zone.
      operationId: compute.instanceTemplates.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceTemplateList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceTemplates
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Creates an instance template in the specified project using the data that is included in the request. If you are creating a new template to update an existing instance group, your new instance template must use the same network or, if applicable, the same subnetwork as the original template.'
      operationId: compute.instanceTemplates.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceTemplate'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceTemplates
  '/{project}/global/instanceTemplates/{instanceTemplate}':
    delete:
      description: 'Deletes the specified instance template. If you delete an instance template that is being referenced from another instance group, the instance group will not be able to create or recreate virtual machine instances. Deleting an instance template is permanent and cannot be undone.'
      operationId: compute.instanceTemplates.delete
      parameters:
        - description: The name of the instance template to delete.
          in: path
          name: instanceTemplate
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceTemplates
    get:
      description: Returns the specified instance template. Get a list of available instance templates by making a list() request.
      operationId: compute.instanceTemplates.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the instance template.
          in: path
          name: instanceTemplate
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceTemplates
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/licenses/{license}':
    get:
      description: Returns the specified License resource.
      operationId: compute.licenses.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the License resource to return.
          in: path
          name: license
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/License'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - licenses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/networks':
    get:
      description: Retrieves the list of networks available to the specified project.
      operationId: compute.networks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/NetworkList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - networks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a network in the specified project using the data included in the request.
      operationId: compute.networks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Network'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - networks
  '/{project}/global/networks/{network}':
    delete:
      description: Deletes the specified network.
      operationId: compute.networks.delete
      parameters:
        - description: Name of the network to delete.
          in: path
          name: network
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - networks
    get:
      description: Returns the specified network. Get a list of available networks by making a list() request.
      operationId: compute.networks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the network to return.
          in: path
          name: network
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Network'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - networks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/networks/{network}/addPeering':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Adds a peering to the specified network.
      operationId: compute.networks.addPeering
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NetworksAddPeeringRequest'
        - description: Name of the network resource to add peering to.
          in: path
          name: network
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - networks
  '/{project}/global/networks/{network}/removePeering':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Removes a peering from the specified network.
      operationId: compute.networks.removePeering
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NetworksRemovePeeringRequest'
        - description: Name of the network resource to remove peering from.
          in: path
          name: network
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - networks
  '/{project}/global/networks/{network}/switchToCustomMode':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Switches the network mode from auto subnet mode to custom subnet mode.
      operationId: compute.networks.switchToCustomMode
      parameters:
        - description: Name of the network to be updated.
          in: path
          name: network
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - networks
  '/{project}/global/operations':
    get:
      description: Retrieves a list of Operation resources contained within the specified project.
      operationId: compute.globalOperations.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OperationList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/operations/{operation}':
    delete:
      description: Deletes the specified Operations resource.
      operationId: compute.globalOperations.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - globalOperations
    get:
      description: Retrieves the specified Operations resource. Get a list of operations by making a list() request.
      operationId: compute.globalOperations.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - globalOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/routes':
    get:
      description: Retrieves the list of Route resources available to the specified project.
      operationId: compute.routes.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RouteList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a Route resource in the specified project using the data included in the request.
      operationId: compute.routes.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Route'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routes
  '/{project}/global/routes/{route}':
    delete:
      description: Deletes the specified Route resource.
      operationId: compute.routes.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Route resource to delete.
          in: path
          name: route
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routes
    get:
      description: Returns the specified Route resource. Get a list of available routes by making a list() request.
      operationId: compute.routes.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the Route resource to return.
          in: path
          name: route
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Route'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/snapshots':
    get:
      description: Retrieves the list of Snapshot resources contained within the specified project.
      operationId: compute.snapshots.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SnapshotList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - snapshots
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/snapshots/{resource}/setLabels':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Sets the labels on a snapshot. To learn more about labels, read the Labeling Resources documentation.'
      operationId: compute.snapshots.setLabels
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GlobalSetLabelsRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the resource for this request.
          in: path
          name: resource
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - snapshots
  '/{project}/global/snapshots/{snapshot}':
    delete:
      description: |-
        Deletes the specified Snapshot resource. Keep in mind that deleting a single snapshot might not necessarily delete all the data on that snapshot. If any data on the snapshot that is marked for deletion is needed for subsequent snapshots, the data will be moved to the next corresponding snapshot.

        For more information, see Deleting snaphots.
      operationId: compute.snapshots.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Snapshot resource to delete.
          in: path
          name: snapshot
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - snapshots
    get:
      description: Returns the specified Snapshot resource. Get a list of available snapshots by making a list() request.
      operationId: compute.snapshots.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the Snapshot resource to return.
          in: path
          name: snapshot
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Snapshot'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - snapshots
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/sslCertificates':
    get:
      description: Retrieves the list of SslCertificate resources available to the specified project.
      operationId: compute.sslCertificates.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SslCertificateList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - sslCertificates
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a SslCertificate resource in the specified project using the data included in the request.
      operationId: compute.sslCertificates.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SslCertificate'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - sslCertificates
  '/{project}/global/sslCertificates/{sslCertificate}':
    delete:
      description: Deletes the specified SslCertificate resource.
      operationId: compute.sslCertificates.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the SslCertificate resource to delete.
          in: path
          name: sslCertificate
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - sslCertificates
    get:
      description: Returns the specified SslCertificate resource. Get a list of available SSL certificates by making a list() request.
      operationId: compute.sslCertificates.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the SslCertificate resource to return.
          in: path
          name: sslCertificate
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SslCertificate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - sslCertificates
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/targetHttpProxies':
    get:
      description: Retrieves the list of TargetHttpProxy resources available to the specified project.
      operationId: compute.targetHttpProxies.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetHttpProxyList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetHttpProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a TargetHttpProxy resource in the specified project using the data included in the request.
      operationId: compute.targetHttpProxies.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetHttpProxy'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpProxies
  '/{project}/global/targetHttpProxies/{targetHttpProxy}':
    delete:
      description: Deletes the specified TargetHttpProxy resource.
      operationId: compute.targetHttpProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetHttpProxy resource to delete.
          in: path
          name: targetHttpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpProxies
    get:
      description: Returns the specified TargetHttpProxy resource. Get a list of available target HTTP proxies by making a list() request.
      operationId: compute.targetHttpProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the TargetHttpProxy resource to return.
          in: path
          name: targetHttpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetHttpProxy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetHttpProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/targetHttpsProxies':
    get:
      description: Retrieves the list of TargetHttpsProxy resources available to the specified project.
      operationId: compute.targetHttpsProxies.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetHttpsProxyList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetHttpsProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a TargetHttpsProxy resource in the specified project using the data included in the request.
      operationId: compute.targetHttpsProxies.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetHttpsProxy'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpsProxies
  '/{project}/global/targetHttpsProxies/{targetHttpsProxy}':
    delete:
      description: Deletes the specified TargetHttpsProxy resource.
      operationId: compute.targetHttpsProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetHttpsProxy resource to delete.
          in: path
          name: targetHttpsProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpsProxies
    get:
      description: Returns the specified TargetHttpsProxy resource. Get a list of available target HTTPS proxies by making a list() request.
      operationId: compute.targetHttpsProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the TargetHttpsProxy resource to return.
          in: path
          name: targetHttpsProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetHttpsProxy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetHttpsProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/targetSslProxies':
    get:
      description: Retrieves the list of TargetSslProxy resources available to the specified project.
      operationId: compute.targetSslProxies.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetSslProxyList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetSslProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a TargetSslProxy resource in the specified project using the data included in the request.
      operationId: compute.targetSslProxies.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetSslProxy'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetSslProxies
  '/{project}/global/targetSslProxies/{targetSslProxy}':
    delete:
      description: Deletes the specified TargetSslProxy resource.
      operationId: compute.targetSslProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetSslProxy resource to delete.
          in: path
          name: targetSslProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetSslProxies
    get:
      description: Returns the specified TargetSslProxy resource. Get a list of available target SSL proxies by making a list() request.
      operationId: compute.targetSslProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the TargetSslProxy resource to return.
          in: path
          name: targetSslProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetSslProxy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetSslProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the BackendService for TargetSslProxy.
      operationId: compute.targetSslProxies.setBackendService
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetSslProxiesSetBackendServiceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetSslProxy resource whose BackendService resource is to be set.
          in: path
          name: targetSslProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetSslProxies
  '/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the ProxyHeaderType for TargetSslProxy.
      operationId: compute.targetSslProxies.setProxyHeader
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetSslProxiesSetProxyHeaderRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetSslProxy resource whose ProxyHeader is to be set.
          in: path
          name: targetSslProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetSslProxies
  '/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes SslCertificates for TargetSslProxy.
      operationId: compute.targetSslProxies.setSslCertificates
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetSslProxiesSetSslCertificatesRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetSslProxy resource whose SslCertificate resource is to be set.
          in: path
          name: targetSslProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetSslProxies
  '/{project}/global/targetTcpProxies':
    get:
      description: Retrieves the list of TargetTcpProxy resources available to the specified project.
      operationId: compute.targetTcpProxies.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetTcpProxyList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetTcpProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a TargetTcpProxy resource in the specified project using the data included in the request.
      operationId: compute.targetTcpProxies.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetTcpProxy'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetTcpProxies
  '/{project}/global/targetTcpProxies/{targetTcpProxy}':
    delete:
      description: Deletes the specified TargetTcpProxy resource.
      operationId: compute.targetTcpProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetTcpProxy resource to delete.
          in: path
          name: targetTcpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetTcpProxies
    get:
      description: Returns the specified TargetTcpProxy resource. Get a list of available target TCP proxies by making a list() request.
      operationId: compute.targetTcpProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the TargetTcpProxy resource to return.
          in: path
          name: targetTcpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetTcpProxy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetTcpProxies
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the BackendService for TargetTcpProxy.
      operationId: compute.targetTcpProxies.setBackendService
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetTcpProxiesSetBackendServiceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetTcpProxy resource whose BackendService resource is to be set.
          in: path
          name: targetTcpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetTcpProxies
  '/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the ProxyHeaderType for TargetTcpProxy.
      operationId: compute.targetTcpProxies.setProxyHeader
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetTcpProxiesSetProxyHeaderRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
          in: path
          name: targetTcpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetTcpProxies
  '/{project}/global/urlMaps':
    get:
      description: Retrieves the list of UrlMap resources available to the specified project.
      operationId: compute.urlMaps.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlMapList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - urlMaps
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a UrlMap resource in the specified project using the data included in the request.
      operationId: compute.urlMaps.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMap'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
  '/{project}/global/urlMaps/{urlMap}':
    delete:
      description: Deletes the specified UrlMap resource.
      operationId: compute.urlMaps.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the UrlMap resource to delete.
          in: path
          name: urlMap
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
    get:
      description: Returns the specified UrlMap resource. Get a list of available URL maps by making a list() request.
      operationId: compute.urlMaps.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the UrlMap resource to return.
          in: path
          name: urlMap
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlMap'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - urlMaps
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Patches the specified UrlMap resource with the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.urlMaps.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMap'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the UrlMap resource to patch.
          in: path
          name: urlMap
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
    put:
      description: Updates the specified UrlMap resource with the data included in the request.
      operationId: compute.urlMaps.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMap'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the UrlMap resource to update.
          in: path
          name: urlMap
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
  '/{project}/global/urlMaps/{urlMap}/invalidateCache':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Initiates a cache invalidation operation, invalidating the specified path, scoped to the specified UrlMap.'
      operationId: compute.urlMaps.invalidateCache
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CacheInvalidationRule'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the UrlMap scoping this request.
          in: path
          name: urlMap
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
  '/{project}/global/urlMaps/{urlMap}/validate':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Runs static validation for the UrlMap. In particular, the tests of the provided UrlMap will be run. Calling this method does NOT create the UrlMap.'
      operationId: compute.urlMaps.validate
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the UrlMap resource to be validated as.
          in: path
          name: urlMap
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMapsValidateRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UrlMapsValidateResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - urlMaps
  '/{project}/listXpnHosts':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: List all shared VPC host projects visible to the user in an organization.
      operationId: compute.projects.listXpnHosts
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectsListXpnHostsRequest'
        - in: query
          name: filter
          type: string
        - default: 500
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - in: query
          name: order_by
          type: string
        - in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/XpnHostList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/moveDisk':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Moves a persistent disk from one zone to another.
      operationId: compute.projects.moveDisk
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DiskMoveRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/moveInstance':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Moves an instance and its attached persistent disks from one zone to another.
      operationId: compute.projects.moveInstance
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceMoveRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/regions':
    get:
      description: Retrieves the list of region resources available to the specified project.
      operationId: compute.regions.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regions
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}':
    get:
      description: Returns the specified Region resource. Get a list of available regions by making a list() request.
      operationId: compute.regions.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region resource to return.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Region'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regions
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/addresses':
    get:
      description: Retrieves a list of addresses contained within the specified region.
      operationId: compute.addresses.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AddressList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - addresses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates an address resource in the specified project using the data included in the request.
      operationId: compute.addresses.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Address'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - addresses
  '/{project}/regions/{region}/addresses/{address}':
    delete:
      description: Deletes the specified address resource.
      operationId: compute.addresses.delete
      parameters:
        - description: Name of the address resource to delete.
          in: path
          name: address
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - addresses
    get:
      description: Returns the specified address resource.
      operationId: compute.addresses.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the address resource to return.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Address'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - addresses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/autoscalers':
    get:
      description: Retrieves a list of autoscalers contained within the specified region.
      operationId: compute.regionAutoscalers.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionAutoscalerList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionAutoscalers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates an autoscaler in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.regionAutoscalers.patch
      parameters:
        - description: Name of the autoscaler to patch.
          in: query
          name: autoscaler
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionAutoscalers
    post:
      description: Creates an autoscaler in the specified project using the data included in the request.
      operationId: compute.regionAutoscalers.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionAutoscalers
    put:
      description: Updates an autoscaler in the specified project using the data included in the request.
      operationId: compute.regionAutoscalers.update
      parameters:
        - description: Name of the autoscaler to update.
          in: query
          name: autoscaler
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionAutoscalers
  '/{project}/regions/{region}/autoscalers/{autoscaler}':
    delete:
      description: Deletes the specified autoscaler.
      operationId: compute.regionAutoscalers.delete
      parameters:
        - description: Name of the autoscaler to delete.
          in: path
          name: autoscaler
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionAutoscalers
    get:
      description: Returns the specified autoscaler.
      operationId: compute.regionAutoscalers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the autoscaler to return.
          in: path
          name: autoscaler
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Autoscaler'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionAutoscalers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/backendServices':
    get:
      description: Retrieves the list of regional BackendService resources available to the specified project in the given region.
      operationId: compute.regionBackendServices.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendServiceList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionBackendServices
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a regional BackendService resource in the specified project using the data included in the request. There are several restrictions and guidelines to keep in mind when creating a regional backend service. Read  Restrictions and Guidelines for more information.
      operationId: compute.regionBackendServices.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionBackendServices
  '/{project}/regions/{region}/backendServices/{backendService}':
    delete:
      description: Deletes the specified regional BackendService resource.
      operationId: compute.regionBackendServices.delete
      parameters:
        - description: Name of the BackendService resource to delete.
          in: path
          name: backendService
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionBackendServices
    get:
      description: Returns the specified regional BackendService resource.
      operationId: compute.regionBackendServices.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the BackendService resource to return.
          in: path
          name: backendService
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendService'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionBackendServices
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the specified regional BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.regionBackendServices.patch
      parameters:
        - description: Name of the BackendService resource to patch.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionBackendServices
    put:
      description: Updates the specified regional BackendService resource with the data included in the request. There are several restrictions and guidelines to keep in mind when updating a backend service. Read  Restrictions and Guidelines for more information.
      operationId: compute.regionBackendServices.update
      parameters:
        - description: Name of the BackendService resource to update.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BackendService'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionBackendServices
  '/{project}/regions/{region}/backendServices/{backendService}/getHealth':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Gets the most recent health check results for this regional BackendService.
      operationId: compute.regionBackendServices.getHealth
      parameters:
        - in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the BackendService resource to which the queried instance belongs.
          in: path
          name: backendService
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceGroupReference'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BackendServiceGroupHealth'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionBackendServices
  '/{project}/regions/{region}/commitments':
    get:
      description: Retrieves a list of commitments contained within the specified region.
      operationId: compute.regionCommitments.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CommitmentList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionCommitments
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a commitment in the specified project using the data included in the request.
      operationId: compute.regionCommitments.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Commitment'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionCommitments
  '/{project}/regions/{region}/commitments/{commitment}':
    get:
      description: Returns the specified commitment resource. Get a list of available commitments by making a list() request.
      operationId: compute.regionCommitments.get
      parameters:
        - description: Name of the commitment to return.
          in: path
          name: commitment
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Commitment'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionCommitments
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/forwardingRules':
    get:
      description: Retrieves a list of ForwardingRule resources available to the specified project and region.
      operationId: compute.forwardingRules.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ForwardingRuleList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - forwardingRules
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a ForwardingRule resource in the specified project and region using the data included in the request.
      operationId: compute.forwardingRules.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ForwardingRule'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - forwardingRules
  '/{project}/regions/{region}/forwardingRules/{forwardingRule}':
    delete:
      description: Deletes the specified ForwardingRule resource.
      operationId: compute.forwardingRules.delete
      parameters:
        - description: Name of the ForwardingRule resource to delete.
          in: path
          name: forwardingRule
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - forwardingRules
    get:
      description: Returns the specified ForwardingRule resource.
      operationId: compute.forwardingRules.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the ForwardingRule resource to return.
          in: path
          name: forwardingRule
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ForwardingRule'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - forwardingRules
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes target URL for forwarding rule. The new target should be of the same type as the old target.
      operationId: compute.forwardingRules.setTarget
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetReference'
        - description: Name of the ForwardingRule resource in which target is to be set.
          in: path
          name: forwardingRule
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - forwardingRules
  '/{project}/regions/{region}/instanceGroupManagers':
    get:
      description: Retrieves the list of managed instance groups that are contained within the specified region.
      operationId: compute.regionInstanceGroupManagers.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagerList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroupManagers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method.

        A regional managed instance group can contain up to 2000 instances.
      operationId: compute.regionInstanceGroupManagers.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManager'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}':
    delete:
      description: Deletes the specified managed instance group and all of the instances in that group.
      operationId: compute.regionInstanceGroupManagers.delete
      parameters:
        - description: Name of the managed instance group to delete.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
    get:
      description: Returns all of the details about the specified managed instance group.
      operationId: compute.regionInstanceGroupManagers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the managed instance group to return.
          in: path
          name: instanceGroupManager
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupManager'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroupManagers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to remove the specified instances from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.abandonInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersAbandonInstancesRequest'
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to delete the specified instances in the managed instance group. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. This operation is marked as DONE when the action is scheduled even if the instances are still being deleted. You must separately verify the status of the deleting action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.deleteInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersDeleteInstancesRequest'
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Lists the instances in the managed instance group and instances that are scheduled to be created. The list includes any current actions that the group has scheduled for its instances.
      operationId: compute.regionInstanceGroupManagers.listManagedInstances
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - in: query
          name: filter
          type: string
        - default: 500
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - in: query
          name: order_by
          type: string
        - in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersListInstancesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to recreate the specified instances in the managed instance group. The instances are deleted and recreated using the current instance template for the managed instance group. This operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated. You must separately verify the status of the recreating action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.recreateInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersRecreateRequest'
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Changes the intended size for the managed instance group. If you increase the size, the group schedules actions to create new instances using the current instance template. If you decrease the size, the group schedules delete actions on one or more instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
      operationId: compute.regionInstanceGroupManagers.resize
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Number of instances that should exist in this instance group manager.
          in: query
          minimum: 0
          name: size
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the instance template to use when creating new instances or recreating instances in this group. Existing instances are not affected.
      operationId: compute.regionInstanceGroupManagers.setInstanceTemplate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersSetTemplateRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Modifies the target pools to which all new instances in this group are assigned. Existing instances in the group are not affected.
      operationId: compute.regionInstanceGroupManagers.setTargetPools
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupManagersSetTargetPoolsRequest'
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroupManagers
  '/{project}/regions/{region}/instanceGroups':
    get:
      description: Retrieves the list of instance group resources contained within the specified region.
      operationId: compute.regionInstanceGroups.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionInstanceGroupList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroups
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/instanceGroups/{instanceGroup}':
    get:
      description: Returns the specified instance group resource.
      operationId: compute.regionInstanceGroups.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the instance group resource to return.
          in: path
          name: instanceGroup
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroups
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Lists the instances in the specified instance group and displays information about the named ports. Depending on the specified options, this method can list all instances or only the instances that are running.'
      operationId: compute.regionInstanceGroups.listInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupsListInstancesRequest'
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - description: Name of the regional instance group for which we want to list the instances.
          in: path
          name: instanceGroup
          required: true
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RegionInstanceGroupsListInstances'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionInstanceGroups
  '/{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the named ports for the specified regional instance group.
      operationId: compute.regionInstanceGroups.setNamedPorts
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInstanceGroupsSetNamedPortsRequest'
        - description: The name of the regional instance group where the named ports are updated.
          in: path
          name: instanceGroup
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionInstanceGroups
  '/{project}/regions/{region}/operations':
    get:
      description: Retrieves a list of Operation resources contained within the specified region.
      operationId: compute.regionOperations.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OperationList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/operations/{operation}':
    delete:
      description: Deletes the specified region-specific Operations resource.
      operationId: compute.regionOperations.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - regionOperations
    get:
      description: Retrieves the specified region-specific Operations resource.
      operationId: compute.regionOperations.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - regionOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/routers':
    get:
      description: Retrieves a list of Router resources available to the specified project.
      operationId: compute.routers.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RouterList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a Router resource in the specified project and region using the data included in the request.
      operationId: compute.routers.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Router'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routers
  '/{project}/regions/{region}/routers/{router}':
    delete:
      description: Deletes the specified Router resource.
      operationId: compute.routers.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Router resource to delete.
          in: path
          name: router
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routers
    get:
      description: Returns the specified Router resource. Get a list of available routers by making a list() request.
      operationId: compute.routers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Router resource to return.
          in: path
          name: router
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Router'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Patches the specified Router resource with the data included in the request. This method supports PATCH semantics and uses JSON merge patch format and processing rules.
      operationId: compute.routers.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Router'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Router resource to patch.
          in: path
          name: router
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routers
    put:
      description: Updates the specified Router resource with the data included in the request.
      operationId: compute.routers.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Router'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Router resource to update.
          in: path
          name: router
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - routers
  '/{project}/regions/{region}/routers/{router}/getRouterStatus':
    get:
      description: Retrieves runtime information of the specified router.
      operationId: compute.routers.getRouterStatus
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Router resource to query.
          in: path
          name: router
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RouterStatusResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/routers/{router}/preview':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Preview fields auto-generated during router create and update operations. Calling this method does NOT create or update the router.
      operationId: compute.routers.preview
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Router resource to query.
          in: path
          name: router
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Router'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RoutersPreviewResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - routers
  '/{project}/regions/{region}/subnetworks':
    get:
      description: Retrieves a list of subnetworks available to the specified project.
      operationId: compute.subnetworks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SubnetworkList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - subnetworks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a subnetwork in the specified project using the data included in the request.
      operationId: compute.subnetworks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Subnetwork'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - subnetworks
  '/{project}/regions/{region}/subnetworks/{subnetwork}':
    delete:
      description: Deletes the specified subnetwork.
      operationId: compute.subnetworks.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Subnetwork resource to delete.
          in: path
          name: subnetwork
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - subnetworks
    get:
      description: Returns the specified subnetwork. Get a list of available subnetworks list() request.
      operationId: compute.subnetworks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the Subnetwork resource to return.
          in: path
          name: subnetwork
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Subnetwork'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - subnetworks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Expands the IP CIDR range of the subnetwork to a specified value.
      operationId: compute.subnetworks.expandIpCidrRange
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SubnetworksExpandIpCidrRangeRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Subnetwork resource to update.
          in: path
          name: subnetwork
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - subnetworks
  '/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Set whether VMs in this subnet can access Google services without assigning external IP addresses through Private Google Access.
      operationId: compute.subnetworks.setPrivateIpGoogleAccess
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SubnetworksSetPrivateIpGoogleAccessRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the Subnetwork resource.
          in: path
          name: subnetwork
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - subnetworks
  '/{project}/regions/{region}/targetPools':
    get:
      description: Retrieves a list of target pools available to the specified project and region.
      operationId: compute.targetPools.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetPoolList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetPools
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a target pool in the specified project and region using the data included in the request.
      operationId: compute.targetPools.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetPool'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}':
    delete:
      description: Deletes the specified target pool.
      operationId: compute.targetPools.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetPool resource to delete.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
    get:
      description: Returns the specified target pool. Get a list of available target pools by making a list() request.
      operationId: compute.targetPools.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the TargetPool resource to return.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetPool'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetPools
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Adds health check URLs to a target pool.
      operationId: compute.targetPools.addHealthCheck
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetPoolsAddHealthCheckRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the target pool to add a health check to.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}/addInstance':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Adds an instance to a target pool.
      operationId: compute.targetPools.addInstance
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetPoolsAddInstanceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetPool resource to add instances to.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}/getHealth':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Gets the most recent health check results for each IP for the instance that is referenced by the given target pool.
      operationId: compute.targetPools.getHealth
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the TargetPool resource to which the queried instance belongs.
          in: path
          name: targetPool
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceReference'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetPoolInstanceHealth'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Removes health check URL from a target pool.
      operationId: compute.targetPools.removeHealthCheck
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetPoolsRemoveHealthCheckRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the target pool to remove health checks from.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}/removeInstance':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Removes instance URL from a target pool.
      operationId: compute.targetPools.removeInstance
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetPoolsRemoveInstanceRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetPool resource to remove instances from.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetPools/{targetPool}/setBackup':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes a backup target pool's configurations.
      operationId: compute.targetPools.setBackup
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetReference'
        - description: New failoverRatio value for the target pool.
          in: query
          name: failoverRatio
          type: number
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetPool resource to set a backup pool for.
          in: path
          name: targetPool
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetPools
  '/{project}/regions/{region}/targetVpnGateways':
    get:
      description: Retrieves a list of target VPN gateways available to the specified project and region.
      operationId: compute.targetVpnGateways.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetVpnGatewayList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetVpnGateways
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a target VPN gateway in the specified project and region using the data included in the request.
      operationId: compute.targetVpnGateways.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetVpnGateway'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetVpnGateways
  '/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}':
    delete:
      description: Deletes the specified target VPN gateway.
      operationId: compute.targetVpnGateways.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the target VPN gateway to delete.
          in: path
          name: targetVpnGateway
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetVpnGateways
    get:
      description: Returns the specified target VPN gateway. Get a list of available target VPN gateways by making a list() request.
      operationId: compute.targetVpnGateways.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the target VPN gateway to return.
          in: path
          name: targetVpnGateway
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetVpnGateway'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetVpnGateways
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/regions/{region}/vpnTunnels':
    get:
      description: Retrieves a list of VpnTunnel resources contained in the specified project and region.
      operationId: compute.vpnTunnels.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VpnTunnelList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - vpnTunnels
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a VpnTunnel resource in the specified project and region using the data included in the request.
      operationId: compute.vpnTunnels.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VpnTunnel'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - vpnTunnels
  '/{project}/regions/{region}/vpnTunnels/{vpnTunnel}':
    delete:
      description: Deletes the specified VpnTunnel resource.
      operationId: compute.vpnTunnels.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the VpnTunnel resource to delete.
          in: path
          name: vpnTunnel
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - vpnTunnels
    get:
      description: Returns the specified VpnTunnel resource. Get a list of available VPN tunnels by making a list() request.
      operationId: compute.vpnTunnels.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          type: string
        - description: Name of the VpnTunnel resource to return.
          in: path
          name: vpnTunnel
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VpnTunnel'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - vpnTunnels
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/setCommonInstanceMetadata':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets metadata common to all instances within the specified project using the data included in the request.
      operationId: compute.projects.setCommonInstanceMetadata
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Metadata'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - projects
  '/{project}/setUsageExportBucket':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Enables the usage export feature and sets the usage export bucket where reports are stored. If you provide an empty request body using this method, the usage export feature will be disabled.'
      operationId: compute.projects.setUsageExportBucket
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UsageExportLocation'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.full_control'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/devstorage.read_write'
      tags:
        - projects
  '/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the URL map for TargetHttpProxy.
      operationId: compute.targetHttpProxies.setUrlMap
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMapReference'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetHttpProxy to set a URL map for.
          in: path
          name: targetHttpProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpProxies
  '/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Replaces SslCertificates for TargetHttpsProxy.
      operationId: compute.targetHttpsProxies.setSslCertificates
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetHttpsProxiesSetSslCertificatesRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetHttpsProxy resource to set an SslCertificates resource for.
          in: path
          name: targetHttpsProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpsProxies
  '/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the URL map for TargetHttpsProxy.
      operationId: compute.targetHttpsProxies.setUrlMap
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UrlMapReference'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetHttpsProxy resource whose URL map is to be set.
          in: path
          name: targetHttpsProxy
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetHttpsProxies
  '/{project}/zones':
    get:
      description: Retrieves the list of Zone resources available to the specified project.
      operationId: compute.zones.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ZoneList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - zones
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}':
    get:
      description: Returns the specified Zone resource. Get a list of available zones by making a list() request.
      operationId: compute.zones.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone resource to return.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Zone'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - zones
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/acceleratorTypes':
    get:
      description: Retrieves a list of accelerator types available to the specified project.
      operationId: compute.acceleratorTypes.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AcceleratorTypeList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - acceleratorTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/acceleratorTypes/{acceleratorType}':
    get:
      description: Returns the specified accelerator type. Get a list of available accelerator types by making a list() request.
      operationId: compute.acceleratorTypes.get
      parameters:
        - description: Name of the accelerator type to return.
          in: path
          name: acceleratorType
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AcceleratorType'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - acceleratorTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/autoscalers':
    get:
      description: Retrieves a list of autoscalers contained within the specified zone.
      operationId: compute.autoscalers.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AutoscalerList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - autoscalers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates an autoscaler in the specified project using the data included in the request. This method supports PATCH semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.autoscalers.patch
      parameters:
        - description: Name of the autoscaler to patch.
          in: query
          name: autoscaler
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - autoscalers
    post:
      description: Creates an autoscaler in the specified project using the data included in the request.
      operationId: compute.autoscalers.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - autoscalers
    put:
      description: Updates an autoscaler in the specified project using the data included in the request.
      operationId: compute.autoscalers.update
      parameters:
        - description: Name of the autoscaler to update.
          in: query
          name: autoscaler
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Autoscaler'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - autoscalers
  '/{project}/zones/{zone}/autoscalers/{autoscaler}':
    delete:
      description: Deletes the specified autoscaler.
      operationId: compute.autoscalers.delete
      parameters:
        - description: Name of the autoscaler to delete.
          in: path
          name: autoscaler
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - autoscalers
    get:
      description: Returns the specified autoscaler resource. Get a list of available autoscalers by making a list() request.
      operationId: compute.autoscalers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the autoscaler to return.
          in: path
          name: autoscaler
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Autoscaler'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - autoscalers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/diskTypes':
    get:
      description: Retrieves a list of disk types available to the specified project.
      operationId: compute.diskTypes.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiskTypeList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - diskTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/diskTypes/{diskType}':
    get:
      description: Returns the specified disk type. Get a list of available disk types by making a list() request.
      operationId: compute.diskTypes.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the disk type to return.
          in: path
          name: diskType
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiskType'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - diskTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/disks':
    get:
      description: Retrieves a list of persistent disks contained within the specified zone.
      operationId: compute.disks.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DiskList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - disks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Creates a persistent disk in the specified project using the data in the request. You can create a disk with a sourceImage, a sourceSnapshot, or create an empty 500 GB data disk by omitting all properties. You can also create a disk that is larger than the default size by specifying the sizeGb property.'
      operationId: compute.disks.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Disk'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Optional. Source image to restore onto a disk.
          in: query
          name: sourceImage
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - disks
  '/{project}/zones/{zone}/disks/{disk}':
    delete:
      description: 'Deletes the specified persistent disk. Deleting a disk removes its data permanently and is irreversible. However, deleting a disk does not delete any snapshots previously made from the disk. You must separately delete snapshots.'
      operationId: compute.disks.delete
      parameters:
        - description: Name of the persistent disk to delete.
          in: path
          name: disk
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - disks
    get:
      description: Returns a specified persistent disk. Get a list of available persistent disks by making a list() request.
      operationId: compute.disks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the persistent disk to return.
          in: path
          name: disk
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Disk'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - disks
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/disks/{disk}/createSnapshot':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a snapshot of a specified persistent disk.
      operationId: compute.disks.createSnapshot
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Snapshot'
        - description: Name of the persistent disk to snapshot.
          in: path
          name: disk
          required: true
          type: string
        - in: query
          name: guestFlush
          type: boolean
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - disks
  '/{project}/zones/{zone}/disks/{disk}/resize':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Resizes the specified persistent disk.
      operationId: compute.disks.resize
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DisksResizeRequest'
        - description: The name of the persistent disk.
          in: path
          name: disk
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - disks
  '/{project}/zones/{zone}/disks/{resource}/setLabels':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Sets the labels on a disk. To learn more about labels, read the Labeling Resources documentation.'
      operationId: compute.disks.setLabels
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ZoneSetLabelsRequest'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the resource for this request.
          in: path
          name: resource
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - disks
  '/{project}/zones/{zone}/instanceGroupManagers':
    get:
      description: Retrieves a list of managed instance groups that are contained within the specified project and zone.
      operationId: compute.instanceGroupManagers.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupManagerList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances with the listmanagedinstances method.

        A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you need an increase in this limit.
      operationId: compute.instanceGroupManagers.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManager'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where you want to create the managed instance group.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}':
    delete:
      description: Deletes the specified managed instance group and all of the instances in that group. Note that the instance group must not belong to a backend service. Read  Deleting an instance group for more information.
      operationId: compute.instanceGroupManagers.delete
      parameters:
        - description: The name of the managed instance group to delete.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
    get:
      description: Returns all of the details about the specified managed instance group. Get a list of available managed instance groups by making a list() request.
      operationId: compute.instanceGroupManagers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupManager'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to remove the specified instances from the managed instance group. Abandoning an instance does not delete the instance, but it does remove the instance from any target pools that are applied by the managed instance group. This method reduces the targetSize of the managed instance group by the number of instances that you abandon. This operation is marked as DONE when the action is scheduled even if the instances have not yet been removed from the group. You must separately verify the status of the abandoning action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.abandonInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManagersAbandonInstancesRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to delete the specified instances in the managed instance group. The instances are also removed from any target pools of which they were a member. This method reduces the targetSize of the managed instance group by the number of instances that you delete. This operation is marked as DONE when the action is scheduled even if the instances are still being deleted. You must separately verify the status of the deleting action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.deleteInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManagersDeleteInstancesRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Lists all of the instances in the managed instance group. Each instance in the list has a currentAction, which indicates the action that the managed instance group is performing on the instance. For example, if the group is still creating an instance, the currentAction is CREATING. If a previous action failed, the list displays the errors for that failed action.'
      operationId: compute.instanceGroupManagers.listManagedInstances
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - in: query
          name: filter
          type: string
        - default: 500
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - in: query
          name: order_by
          type: string
        - in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupManagersListManagedInstancesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Schedules a group action to recreate the specified instances in the managed instance group. The instances are deleted and recreated using the current instance template for the managed instance group. This operation is marked as DONE when the action is scheduled even if the instances have not yet been recreated. You must separately verify the status of the recreating action with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.

        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.recreateInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManagersRecreateInstancesRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Resizes the managed instance group. If you increase the size, the group creates new instances using the current instance template. If you decrease the size, the group deletes instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
      operationId: compute.instanceGroupManagers.resize
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.
          in: query
          name: size
          required: true
          type: integer
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Specifies the instance template to use when creating new instances in this group. The templates for existing instances in the group do not change unless you recreate them.
      operationId: compute.instanceGroupManagers.setInstanceTemplate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManagersSetInstanceTemplateRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Modifies the target pools to which all instances in this managed instance group are assigned. The target pools automatically apply to all of the instances in the managed instance group. This operation is marked DONE when you make the request even if the instances have not yet been added to their target pools. The change might take some time to apply to all of the instances in the group depending on the size of the group.
      operationId: compute.instanceGroupManagers.setTargetPools
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupManagersSetTargetPoolsRequest'
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroupManagers
  '/{project}/zones/{zone}/instanceGroups':
    get:
      description: Retrieves the list of instance groups that are located in the specified project and zone.
      operationId: compute.instanceGroups.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroups
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates an instance group in the specified project using the parameters that are included in the request.
      operationId: compute.instanceGroups.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroup'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where you want to create the instance group.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroups
  '/{project}/zones/{zone}/instanceGroups/{instanceGroup}':
    delete:
      description: Deletes the specified instance group. The instances in the group are not deleted. Note that instance group must not belong to a backend service. Read  Deleting an instance group for more information.
      operationId: compute.instanceGroups.delete
      parameters:
        - description: The name of the instance group to delete.
          in: path
          name: instanceGroup
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroups
    get:
      description: Returns the specified instance group. Get a list of available instance groups by making a list() request.
      operationId: compute.instanceGroups.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
        - description: The name of the instance group.
          in: path
          name: instanceGroup
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroup'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroups
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Adds a list of instances to the specified instance group. All of the instances in the instance group must be in the same network/subnetwork. Read  Adding instances for more information.
      operationId: compute.instanceGroups.addInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupsAddInstancesRequest'
        - description: The name of the instance group where you are adding instances.
          in: path
          name: instanceGroup
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroups
  '/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Lists the instances in the specified instance group.
      operationId: compute.instanceGroups.listInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupsListInstancesRequest'
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - description: The name of the instance group from which you want to generate a list of included instances.
          in: path
          name: instanceGroup
          required: true
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceGroupsListInstances'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instanceGroups
  '/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: |-
        Removes one or more instances from the specified instance group, but does not delete those instances.

        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration before the VM instance is removed or deleted.
      operationId: compute.instanceGroups.removeInstances
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupsRemoveInstancesRequest'
        - description: The name of the instance group where the specified instances will be removed.
          in: path
          name: instanceGroup
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroups
  '/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the named ports for the specified instance group.
      operationId: compute.instanceGroups.setNamedPorts
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstanceGroupsSetNamedPortsRequest'
        - description: The name of the instance group where the named ports are updated.
          in: path
          name: instanceGroup
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instanceGroups
  '/{project}/zones/{zone}/instances':
    get:
      description: Retrieves the list of instances contained within the specified zone.
      operationId: compute.instances.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InstanceList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates an instance resource in the specified project using the data included in the request.
      operationId: compute.instances.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Instance'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}':
    delete:
      description: 'Deletes the specified Instance resource. For more information, see Stopping or Deleting an Instance.'
      operationId: compute.instances.delete
      parameters:
        - description: Name of the instance resource to delete.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
    get:
      description: Returns the specified Instance resource. Get a list of available instances by making a list() request.
      operationId: compute.instances.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the instance resource to return.
          in: path
          name: instance
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/instances/{instance}/addAccessConfig':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Adds an access config to an instance's network interface.
      operationId: compute.instances.addAccessConfig
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccessConfig'
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          type: string
        - description: The name of the network interface to add to this instance.
          in: query
          name: networkInterface
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/attachDisk':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Attaches an existing Disk resource to an instance. You must first create the disk before you can attach it. It is not possible to create and attach a disk at the same time. For more information, read Adding a persistent disk to your instance.'
      operationId: compute.instances.attachDisk
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AttachedDisk'
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Deletes an access config from an instance's network interface.
      operationId: compute.instances.deleteAccessConfig
      parameters:
        - description: The name of the access config to delete.
          in: query
          name: accessConfig
          required: true
          type: string
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          type: string
        - description: The name of the network interface.
          in: query
          name: networkInterface
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/detachDisk':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Detaches a disk from an instance.
      operationId: compute.instances.detachDisk
      parameters:
        - description: Disk device name to detach.
          in: query
          name: deviceName
          required: true
          type: string
        - description: Instance name.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/reset':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Performs a reset on the instance. For more information, see Resetting an instance.'
      operationId: compute.instances.reset
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/serialPort':
    get:
      description: Returns the specified instance's serial port output.
      operationId: compute.instances.getSerialPortOutput
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - default: 1
          description: Specifies which COM or serial port to retrieve data from.
          in: query
          maximum: 4
          minimum: 1
          name: port
          type: integer
        - description: 'Returns output starting from a specific byte position. Use this to page through output when the output is too large to return in a single request. For the initial request, leave this field unspecified. For subsequent calls, this field should be set to the next value returned in the previous call.'
          in: query
          name: start
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SerialPortOutput'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - instances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the auto-delete flag for a disk attached to an instance.
      operationId: compute.instances.setDiskAutoDelete
      parameters:
        - description: Whether to auto-delete the disk when the instance is deleted.
          in: query
          name: autoDelete
          required: true
          type: boolean
        - description: The device name of the disk to modify.
          in: query
          name: deviceName
          required: true
          type: string
        - description: The instance name.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setLabels':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Sets labels on an instance. To learn more about labels, read the Labeling Resources documentation.'
      operationId: compute.instances.setLabels
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstancesSetLabelsRequest'
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setMachineResources':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the number and/or type of accelerator for a stopped instance to the values specified in the request.
      operationId: compute.instances.setMachineResources
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstancesSetMachineResourcesRequest'
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setMachineType':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Changes the machine type for a stopped instance to the machine type specified in the request.
      operationId: compute.instances.setMachineType
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstancesSetMachineTypeRequest'
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setMetadata':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets metadata for the specified instance to the data included in the request.
      operationId: compute.instances.setMetadata
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Metadata'
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setScheduling':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets an instance's scheduling options.
      operationId: compute.instances.setScheduling
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Scheduling'
        - description: Instance name.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setServiceAccount':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Sets the service account on the instance. For more information, read Changing the service account and access scopes for an instance.'
      operationId: compute.instances.setServiceAccount
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstancesSetServiceAccountRequest'
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/setTags':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets tags for the specified instance to the data included in the request.
      operationId: compute.instances.setTags
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Tags'
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/start':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Starts an instance that was stopped using the using the instances().stop method. For more information, see Restart an instance.'
      operationId: compute.instances.start
      parameters:
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Starts an instance that was stopped using the using the instances().stop method. For more information, see Restart an instance.'
      operationId: compute.instances.startWithEncryptionKey
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstancesStartWithEncryptionKeyRequest'
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/instances/{instance}/stop':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Stops a running instance, shutting it down cleanly, and allows you to restart the instance at a later time. Stopped instances do not incur per-minute, virtual machine usage charges while they are stopped, but any resources that the virtual machine is using, such as persistent disks and static IP addresses, will continue to be charged until they are deleted. For more information, see Stopping an instance.'
      operationId: compute.instances.stop
      parameters:
        - description: Name of the instance resource to stop.
          in: path
          name: instance
          required: true
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - instances
  '/{project}/zones/{zone}/machineTypes':
    get:
      description: Retrieves a list of machine types available to the specified project.
      operationId: compute.machineTypes.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MachineTypeList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - machineTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/machineTypes/{machineType}':
    get:
      description: Returns the specified machine type. Get a list of available machine types by making a list() request.
      operationId: compute.machineTypes.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the machine type to return.
          in: path
          name: machineType
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MachineType'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - machineTypes
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/operations':
    get:
      description: Retrieves a list of Operation resources contained within the specified zone.
      operationId: compute.zoneOperations.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone for request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OperationList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - zoneOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/operations/{operation}':
    delete:
      description: Deletes the specified zone-specific Operations resource.
      operationId: compute.zoneOperations.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - zoneOperations
    get:
      description: Retrieves the specified zone-specific Operations resource.
      operationId: compute.zoneOperations.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - zoneOperations
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{project}/zones/{zone}/targetInstances':
    get:
      description: Retrieves a list of TargetInstance resources available to the specified project and zone.
      operationId: compute.targetInstances.list
      parameters:
        - description: |-
            Sets a filter {expression} for filtering listed resources. Your {expression} must be in the format: field_name comparison_string literal_string.

            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.

            For example, to filter for instances that do not have a name of example-instance, you would use name ne example-instance.

            You can filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. Use filtering on nested fields to take advantage of labels to organize and search for results based on label values.

            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          type: string
        - default: 500
          description: 'The maximum number of results per page that should be returned. If the number of available results is larger than maxResults, Compute Engine returns a nextPageToken that can be used to get the next page of results in subsequent list requests. Acceptable values are 0 to 500, inclusive. (Default: 500)'
          in: query
          minimum: 0
          name: maxResults
          type: integer
        - description: |-
            Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.

            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.

            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetInstanceList'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetInstances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a TargetInstance resource in the specified project and zone using the data included in the request.
      operationId: compute.targetInstances.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetInstance'
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetInstances
  '/{project}/zones/{zone}/targetInstances/{targetInstance}':
    delete:
      description: Deletes the specified TargetInstance resource.
      operationId: compute.targetInstances.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: |-
            An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed.

            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.

            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          type: string
        - description: Name of the TargetInstance resource to delete.
          in: path
          name: targetInstance
          required: true
          type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
      tags:
        - targetInstances
    get:
      description: Returns the specified TargetInstance resource. Get a list of available target instances by making a list() request.
      operationId: compute.targetInstances.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          type: string
        - description: Name of the TargetInstance resource to return.
          in: path
          name: targetInstance
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TargetInstance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute'
        - Oauth2:
            - 'https://www.googleapis.com/auth/compute.readonly'
      tags:
        - targetInstances
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
definitions:
  AcceleratorConfig:
    description: A specification of the type and number of accelerator cards attached to the instance.
    properties:
      acceleratorCount:
        description: The number of the guest accelerator cards exposed to this instance.
        format: int32
        type: integer
      acceleratorType:
        description: Full or partial URL of the accelerator type resource to expose to this instance.
        type: string
    type: object
  AcceleratorType:
    description: An Accelerator Type resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: '[Output Only] The deprecation status associated with this accelerator type.'
      description:
        description: '[Output Only] An optional textual description of the resource.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#acceleratorType'
        description: '[Output Only] The type of the resource. Always compute#acceleratorType for accelerator types.'
        type: string
      maximumCardsPerInstance:
        description: '[Output Only] Maximum accelerator cards allowed per instance.'
        format: int32
        type: integer
      name:
        description: '[Output Only] Name of the resource.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined fully-qualified URL for this resource.'
        type: string
      zone:
        description: '[Output Only] The name of the zone where the accelerator type resides, such as us-central1-a.'
        type: string
    type: object
  AcceleratorTypeAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/AcceleratorTypesScopedList'
          description: '[Output Only] Name of the scope containing this set of accelerator types.'
        description: A list of AcceleratorTypesScopedList resources.
        type: object
      kind:
        default: 'compute#acceleratorTypeAggregatedList'
        description: '[Output Only] Type of resource. Always compute#acceleratorTypeAggregatedList for aggregated lists of accelerator types.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AcceleratorTypeList:
    description: Contains a list of accelerator types.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of AcceleratorType resources.
        items:
          $ref: '#/definitions/AcceleratorType'
        type: array
      kind:
        default: 'compute#acceleratorTypeList'
        description: '[Output Only] Type of resource. Always compute#acceleratorTypeList for lists of accelerator types.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AcceleratorTypesScopedList:
    properties:
      acceleratorTypes:
        description: '[Output Only] List of accelerator types contained in this scope.'
        items:
          $ref: '#/definitions/AcceleratorType'
        type: array
      warning:
        description: '[Output Only] An informational warning that appears when the accelerator types list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  AccessConfig:
    description: An access configuration attached to an instance's network interface. Only one access config per instance is supported.
    properties:
      kind:
        default: 'compute#accessConfig'
        description: '[Output Only] Type of the resource. Always compute#accessConfig for access configs.'
        type: string
      name:
        description: 'The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.'
        type: string
      natIP:
        description: 'An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.'
        type: string
      type:
        default: ONE_TO_ONE_NAT
        description: The type of configuration. The default and only option is ONE_TO_ONE_NAT.
        enum:
          - ONE_TO_ONE_NAT
        type: string
    type: object
  Address:
    description: A reserved address resource.
    properties:
      address:
        description: The static IP address represented by this resource.
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      ipVersion:
        description: The IP Version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
        enum:
          - IPV4
          - IPV6
          - UNSPECIFIED_VERSION
        type: string
      kind:
        default: 'compute#address'
        description: '[Output Only] Type of the resource. Always compute#address for addresses.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      region:
        description: '[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      status:
        description: '[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.'
        enum:
          - IN_USE
          - RESERVED
        type: string
      users:
        description: '[Output Only] The URLs of the resources that are using this address.'
        items:
          type: string
        type: array
    type: object
  AddressAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/AddressesScopedList'
          description: '[Output Only] Name of the scope containing this set of addresses.'
        description: A list of AddressesScopedList resources.
        type: object
      kind:
        default: 'compute#addressAggregatedList'
        description: '[Output Only] Type of resource. Always compute#addressAggregatedList for aggregated lists of addresses.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AddressList:
    description: Contains a list of addresses.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Address resources.
        items:
          $ref: '#/definitions/Address'
        type: array
      kind:
        default: 'compute#addressList'
        description: '[Output Only] Type of resource. Always compute#addressList for lists of addresses.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AddressesScopedList:
    properties:
      addresses:
        description: '[Output Only] List of addresses contained in this scope.'
        items:
          $ref: '#/definitions/Address'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of addresses when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  AliasIpRange:
    description: An alias IP range attached to an instance's network interface.
    properties:
      ipCidrRange:
        description: 'The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).'
        type: string
      subnetworkRangeName:
        description: 'Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.'
        type: string
    type: object
  AttachedDisk:
    description: An instance-attached disk resource.
    properties:
      autoDelete:
        description: Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
        type: boolean
      boot:
        description: Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
        type: boolean
      deviceName:
        description: |-
          Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.

          If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
        type: string
      diskEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: |-
          Encrypts or decrypts a disk using a customer-supplied encryption key.

          If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key.

          If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance.

          If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.

          Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
      index:
        description: '[Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.'
        format: int32
        type: integer
      initializeParams:
        $ref: '#/definitions/AttachedDiskInitializeParams'
        description: |-
          [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.

          This property is mutually exclusive with the source property; you can only define one or the other, but not both.
      interface:
        description: 'Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.'
        enum:
          - NVME
          - SCSI
        type: string
      kind:
        default: 'compute#attachedDisk'
        description: '[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.'
        type: string
      licenses:
        description: '[Output Only] Any valid publicly visible licenses.'
        items:
          type: string
        type: array
      mode:
        description: 'The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.'
        enum:
          - READ_ONLY
          - READ_WRITE
        type: string
      source:
        description: |-
          Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.

          If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.

          Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
        type: string
      type:
        description: 'Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.'
        enum:
          - PERSISTENT
          - SCRATCH
        type: string
    type: object
  AttachedDiskInitializeParams:
    description: |-
      [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.

      This property is mutually exclusive with the source property; you can only define one or the other, but not both.
    properties:
      diskName:
        description: 'Specifies the disk name. If not specified, the default is to use the name of the instance.'
        type: string
      diskSizeGb:
        description: Specifies the size of the disk in base-2 GB.
        format: int64
        type: string
      diskType:
        description: |-
          Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example:

          https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard 

          Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType 
          - projects/project/zones/zone/diskTypes/diskType 
          - zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this is the name of the disk type, not URL.
        type: string
      sourceImage:
        description: |-
          The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.

          To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image:

          projects/debian-cloud/global/images/family/debian-8 

          Alternatively, use a specific version of a public operating system image:

          projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD 

          To create a disk with a private image that you created, specify the image name in the following format:

          global/images/my-private-image 

          You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:

          global/images/family/my-private-family 

          If the source image is deleted later, this field will not be set.
        type: string
      sourceImageEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: |-
          The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.

          Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
    type: object
  Autoscaler:
    description: 'Represents an Autoscaler resource. Autoscalers allow you to automatically scale virtual machine instances in managed instance groups according to an autoscaling policy that you define. For more information, read Autoscaling Groups of Instances.'
    properties:
      autoscalingPolicy:
        $ref: '#/definitions/AutoscalingPolicy'
        description: |-
          The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.

          If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#autoscaler'
        description: '[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      region:
        description: '[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      status:
        description: '[Output Only] The status of the autoscaler configuration.'
        enum:
          - ACTIVE
          - DELETING
          - ERROR
          - PENDING
        type: string
      statusDetails:
        description: '[Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.'
        items:
          $ref: '#/definitions/AutoscalerStatusDetails'
        type: array
      target:
        description: URL of the managed instance group that this autoscaler will scale.
        type: string
      zone:
        description: '[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).'
        type: string
    type: object
  AutoscalerAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/AutoscalersScopedList'
          description: '[Output Only] Name of the scope containing this set of autoscalers.'
        description: A list of AutoscalersScopedList resources.
        type: object
      kind:
        default: 'compute#autoscalerAggregatedList'
        description: '[Output Only] Type of resource. Always compute#autoscalerAggregatedList for aggregated lists of autoscalers.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AutoscalerList:
    description: Contains a list of Autoscaler resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Autoscaler resources.
        items:
          $ref: '#/definitions/Autoscaler'
        type: array
      kind:
        default: 'compute#autoscalerList'
        description: '[Output Only] Type of resource. Always compute#autoscalerList for lists of autoscalers.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  AutoscalerStatusDetails:
    properties:
      message:
        description: The status message.
        type: string
      type:
        description: The type of error returned.
        enum:
          - ALL_INSTANCES_UNHEALTHY
          - BACKEND_SERVICE_DOES_NOT_EXIST
          - CAPPED_AT_MAX_NUM_REPLICAS
          - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
          - CUSTOM_METRIC_INVALID
          - MIN_EQUALS_MAX
          - MISSING_CUSTOM_METRIC_DATA_POINTS
          - MISSING_LOAD_BALANCING_DATA_POINTS
          - MORE_THAN_ONE_BACKEND_SERVICE
          - NOT_ENOUGH_QUOTA_AVAILABLE
          - REGION_RESOURCE_STOCKOUT
          - SCALING_TARGET_DOES_NOT_EXIST
          - UNKNOWN
          - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
          - ZONE_RESOURCE_STOCKOUT
        type: string
    type: object
  AutoscalersScopedList:
    properties:
      autoscalers:
        description: '[Output Only] List of autoscalers contained in this scope.'
        items:
          $ref: '#/definitions/Autoscaler'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of autoscalers when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  AutoscalingPolicy:
    description: Cloud Autoscaler policy.
    properties:
      coolDownPeriodSec:
        description: |-
          The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.

          Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
        format: int32
        type: integer
      cpuUtilization:
        $ref: '#/definitions/AutoscalingPolicyCpuUtilization'
        description: Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
      customMetricUtilizations:
        description: Configuration parameters of autoscaling based on a custom metric.
        items:
          $ref: '#/definitions/AutoscalingPolicyCustomMetricUtilization'
        type: array
      loadBalancingUtilization:
        $ref: '#/definitions/AutoscalingPolicyLoadBalancingUtilization'
        description: Configuration parameters of autoscaling based on load balancer.
      maxNumReplicas:
        description: The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
        format: int32
        type: integer
      minNumReplicas:
        description: 'The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.'
        format: int32
        type: integer
    type: object
  AutoscalingPolicyCpuUtilization:
    description: CPU utilization policy.
    properties:
      utilizationTarget:
        description: |-
          The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6.

          If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.

          If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
        format: double
        type: number
    type: object
  AutoscalingPolicyCustomMetricUtilization:
    description: Custom utilization metric policy.
    properties:
      metric:
        description: |-
          The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric.

          The metric must have a value type of INT64 or DOUBLE.
        type: string
      utilizationTarget:
        description: |-
          The target value of the metric that autoscaler should maintain. This must be a positive value.

          For example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.
        format: double
        type: number
      utilizationTargetType:
        description: 'Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.'
        enum:
          - DELTA_PER_MINUTE
          - DELTA_PER_SECOND
          - GAUGE
        type: string
    type: object
  AutoscalingPolicyLoadBalancingUtilization:
    description: Configuration parameters of autoscaling based on load balancing.
    properties:
      utilizationTarget:
        description: 'Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.'
        format: double
        type: number
    type: object
  Backend:
    description: Message containing information of one individual backend.
    properties:
      balancingMode:
        description: |-
          Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).

          For Internal Load Balancing, the default and only supported mode is CONNECTION.
        enum:
          - CONNECTION
          - RATE
          - UTILIZATION
        type: string
      capacityScaler:
        description: |-
          A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0].

          This cannot be used for internal load balancing.
        format: float
        type: number
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      group:
        description: |-
          The fully-qualified URL of a Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource.

          Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL.

          When the BackendService has load balancing scheme INTERNAL, the instance group must be within the same region as the BackendService.
        type: string
      maxConnections:
        description: |-
          The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.

          This cannot be used for internal load balancing.
        format: int32
        type: integer
      maxConnectionsPerInstance:
        description: |-
          The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.

          This cannot be used for internal load balancing.
        format: int32
        type: integer
      maxRate:
        description: |-
          The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set.

          This cannot be used for internal load balancing.
        format: int32
        type: integer
      maxRatePerInstance:
        description: |-
          The max requests per second (RPS) that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.

          This cannot be used for internal load balancing.
        format: float
        type: number
      maxUtilization:
        description: |-
          Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0].

          This cannot be used for internal load balancing.
        format: float
        type: number
    type: object
  BackendBucket:
    description: A BackendBucket resource. This resource defines a Cloud Storage bucket.
    properties:
      bucketName:
        description: Cloud Storage bucket name.
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional textual description of the resource; provided by the client when the resource is created.
        type: string
      enableCdn:
        description: 'If true, enable Cloud CDN for this BackendBucket.'
        type: boolean
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#backendBucket'
        description: Type of the resource.
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
    type: object
  BackendBucketList:
    description: Contains a list of BackendBucket resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of BackendBucket resources.
        items:
          $ref: '#/definitions/BackendBucket'
        type: array
      kind:
        default: 'compute#backendBucketList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  BackendService:
    description: A BackendService resource. This resource defines a group of backend virtual machines and their serving capacity.
    properties:
      affinityCookieTtlSec:
        description: |-
          Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.

          When the load balancing scheme is INTERNAL, this field is not used.
        format: int32
        type: integer
      backends:
        description: The list of backends that serve this BackendService.
        items:
          $ref: '#/definitions/Backend'
        type: array
      cdnPolicy:
        $ref: '#/definitions/BackendServiceCdnPolicy'
        description: Cloud CDN configuration for this BackendService.
      connectionDraining:
        $ref: '#/definitions/ConnectionDraining'
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      enableCDN:
        description: |-
          If true, enable Cloud CDN for this BackendService.

          When the load balancing scheme is INTERNAL, this field is not used.
        type: boolean
      fingerprint:
        description: Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
        format: byte
        type: string
      healthChecks:
        description: |-
          The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required for Compute Engine backend services. A health check must not be specified for App Engine backend and Cloud Function backend.

          For internal load balancing, a URL to a HealthCheck resource must be specified instead.
        items:
          type: string
        type: array
      iap:
        $ref: '#/definitions/BackendServiceIAP'
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#backendService'
        description: '[Output Only] Type of resource. Always compute#backendService for backend services.'
        type: string
      loadBalancingScheme:
        description: Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other. Possible values are INTERNAL and EXTERNAL.
        enum:
          - EXTERNAL
          - INTERNAL
          - INVALID_LOAD_BALANCING_SCHEME
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      port:
        description: |-
          Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80.

          This cannot be used for internal load balancing.
        format: int32
        type: integer
      portName:
        description: |-
          Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.

          When the load balancing scheme is INTERNAL, this field is not used.
        type: string
      protocol:
        description: |-
          The protocol this BackendService uses to communicate with backends.

          Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP.

          For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
        enum:
          - HTTP
          - HTTPS
          - SSL
          - TCP
          - UDP
        type: string
      region:
        description: '[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sessionAffinity:
        description: |-
          Type of session affinity to use. The default is NONE.

          When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE.

          When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.

          When the protocol is UDP, this field is not used.
        enum:
          - CLIENT_IP
          - CLIENT_IP_PORT_PROTO
          - CLIENT_IP_PROTO
          - GENERATED_COOKIE
          - NONE
        type: string
      timeoutSec:
        description: How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.
        format: int32
        type: integer
    type: object
  BackendServiceAggregatedList:
    description: Contains a list of BackendServicesScopedList.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/BackendServicesScopedList'
          description: Name of the scope containing this set of BackendServices.
        description: A list of BackendServicesScopedList resources.
        type: object
      kind:
        default: 'compute#backendServiceAggregatedList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  BackendServiceCdnPolicy:
    description: Message containing Cloud CDN configuration for a backend service.
    properties:
      cacheKeyPolicy:
        $ref: '#/definitions/CacheKeyPolicy'
        description: The CacheKeyPolicy for this CdnPolicy.
    type: object
  BackendServiceGroupHealth:
    properties:
      healthStatus:
        items:
          $ref: '#/definitions/HealthStatus'
        type: array
      kind:
        default: 'compute#backendServiceGroupHealth'
        description: '[Output Only] Type of resource. Always compute#backendServiceGroupHealth for the health of backend services.'
        type: string
    type: object
  BackendServiceIAP:
    description: Identity-Aware Proxy
    properties:
      enabled:
        type: boolean
      oauth2ClientId:
        type: string
      oauth2ClientSecret:
        type: string
      oauth2ClientSecretSha256:
        description: '[Output Only] SHA256 hash value for the field oauth2_client_secret above.'
        type: string
    type: object
  BackendServiceList:
    description: Contains a list of BackendService resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of BackendService resources.
        items:
          $ref: '#/definitions/BackendService'
        type: array
      kind:
        default: 'compute#backendServiceList'
        description: '[Output Only] Type of resource. Always compute#backendServiceList for lists of backend services.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  BackendServicesScopedList:
    properties:
      backendServices:
        description: List of BackendServices contained in this scope.
        items:
          $ref: '#/definitions/BackendService'
        type: array
      warning:
        description: Informational warning which replaces the list of backend services when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  CacheInvalidationRule:
    properties:
      host:
        description: 'If set, this invalidation rule will only apply to requests with a Host header matching host.'
        type: string
      path:
        type: string
    type: object
  CacheKeyPolicy:
    description: Message containing what to include in the cache key for a request for Cloud CDN.
    properties:
      includeHost:
        description: 'If true, requests to different hosts will be cached separately.'
        type: boolean
      includeProtocol:
        description: 'If true, http and https requests will be cached separately.'
        type: boolean
      includeQueryString:
        description: 'If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.'
        type: boolean
      queryStringBlacklist:
        description: 'Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. ''&'' and ''='' will be percent encoded and not treated as delimiters.'
        items:
          type: string
        type: array
      queryStringWhitelist:
        description: 'Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. ''&'' and ''='' will be percent encoded and not treated as delimiters.'
        items:
          type: string
        type: array
    type: object
  Commitment:
    description: |-
      Represents a Commitment resource. Creating a Commitment resource means that you are purchasing a committed use contract with an explicit start and end time. You can create commitments based on vCPUs and memory usage and receive discounted rates. For full details, read Signing Up for Committed Use Discounts.

      Committed use discounts are subject to Google Cloud Platform's Service Specific Terms. By purchasing a committed use discount, you agree to these terms. Committed use discounts will not renew, so you must purchase a new commitment to continue receiving discounts.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      endTimestamp:
        description: '[Output Only] Commitment end time in RFC3339 text format.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#commitment'
        description: '[Output Only] Type of the resource. Always compute#commitment for commitments.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      plan:
        description: 'The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).'
        enum:
          - INVALID
          - THIRTY_SIX_MONTH
          - TWELVE_MONTH
        type: string
      region:
        description: '[Output Only] URL of the region where this commitment may be used.'
        type: string
      resources:
        description: List of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur together.
        items:
          $ref: '#/definitions/ResourceCommitment'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      startTimestamp:
        description: '[Output Only] Commitment start time in RFC3339 text format.'
        type: string
      status:
        description: '[Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.'
        enum:
          - ACTIVE
          - CREATING
          - EXPIRED
          - NOT_YET_ACTIVE
        type: string
      statusMessage:
        description: '[Output Only] An optional, human-readable explanation of the status.'
        type: string
    type: object
  CommitmentAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/CommitmentsScopedList'
          description: '[Output Only] Name of the scope containing this set of commitments.'
        description: A list of CommitmentsScopedList resources.
        type: object
      kind:
        default: 'compute#commitmentAggregatedList'
        description: '[Output Only] Type of resource. Always compute#commitmentAggregatedList for aggregated lists of commitments.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  CommitmentList:
    description: Contains a list of Commitment resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Commitment resources.
        items:
          $ref: '#/definitions/Commitment'
        type: array
      kind:
        default: 'compute#commitmentList'
        description: '[Output Only] Type of resource. Always compute#commitmentList for lists of commitments.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  CommitmentsScopedList:
    properties:
      commitments:
        description: '[Output Only] List of commitments contained in this scope.'
        items:
          $ref: '#/definitions/Commitment'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of commitments when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  ConnectionDraining:
    description: Message containing connection draining configuration.
    properties:
      drainingTimeoutSec:
        description: 'Time for which instance will be drained (not accept new connections, but still work to finish started).'
        format: int32
        type: integer
    type: object
  CustomerEncryptionKey:
    description: Represents a customer-supplied encryption key
    properties:
      rawKey:
        description: 'Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.'
        type: string
      sha256:
        description: '[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.'
        type: string
    type: object
  CustomerEncryptionKeyProtectedDisk:
    properties:
      diskEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: Decrypts data associated with the disk with a customer-supplied encryption key.
      source:
        description: Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.
        type: string
    type: object
  DeprecationStatus:
    description: Deprecation status for a public resource.
    properties:
      deleted:
        description: An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.
        type: string
      deprecated:
        description: An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.
        type: string
      obsolete:
        description: An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.
        type: string
      replacement:
        description: The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.
        type: string
      state:
        description: 'The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.'
        enum:
          - DELETED
          - DEPRECATED
          - OBSOLETE
        type: string
    type: object
  Disk:
    description: A Disk resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      diskEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: |-
          Encrypts the disk using a customer-supplied encryption key.

          After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine).

          Customer-supplied encryption keys do not protect access to metadata of the disk.

          If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#disk'
        description: '[Output Only] Type of the resource. Always compute#disk for disks.'
        type: string
      labelFingerprint:
        description: |-
          A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

          To see the latest fingerprint, make a get() request to retrieve a disk.
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: Labels to apply to this disk. These can be later modified by the setLabels method.
        type: object
      lastAttachTimestamp:
        description: '[Output Only] Last attach timestamp in RFC3339 text format.'
        type: string
      lastDetachTimestamp:
        description: '[Output Only] Last detach timestamp in RFC3339 text format.'
        type: string
      licenses:
        description: Any applicable publicly visible licenses.
        items:
          type: string
        type: array
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      options:
        description: Internal use only.
        type: string
      selfLink:
        description: '[Output Only] Server-defined fully-qualified URL for this resource.'
        type: string
      sizeGb:
        description: |-
          Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.

          If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot. Acceptable values are 1 to 65536, inclusive.
        format: int64
        type: string
      sourceImage:
        description: |-
          The source image used to create this disk. If the source image is deleted, this field will not be set.

          To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image:

          projects/debian-cloud/global/images/family/debian-8 

          Alternatively, use a specific version of a public operating system image:

          projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD 

          To create a disk with a private image that you created, specify the image name in the following format:

          global/images/my-private-image 

          You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:

          global/images/family/my-private-family
        type: string
      sourceImageEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
      sourceImageId:
        description: '[Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.'
        type: string
      sourceSnapshot:
        description: |-
          The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values:  
          - https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot 
          - projects/project/global/snapshots/snapshot 
          - global/snapshots/snapshot
        type: string
      sourceSnapshotEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
      sourceSnapshotId:
        description: '[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.'
        type: string
      status:
        description: '[Output Only] The status of disk creation.'
        enum:
          - CREATING
          - FAILED
          - READY
          - RESTORING
        type: string
      type:
        description: URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
        type: string
      users:
        description: '[Output Only] Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance'
        items:
          type: string
        type: array
      zone:
        description: '[Output Only] URL of the zone where the disk resides.'
        type: string
    type: object
  DiskAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/DisksScopedList'
          description: '[Output Only] Name of the scope containing this set of disks.'
        description: A list of DisksScopedList resources.
        type: object
      kind:
        default: 'compute#diskAggregatedList'
        description: '[Output Only] Type of resource. Always compute#diskAggregatedList for aggregated lists of persistent disks.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  DiskList:
    description: A list of Disk resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Disk resources.
        items:
          $ref: '#/definitions/Disk'
        type: array
      kind:
        default: 'compute#diskList'
        description: '[Output Only] Type of resource. Always compute#diskList for lists of disks.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  DiskMoveRequest:
    properties:
      destinationZone:
        description: |-
          The URL of the destination zone to move the disk. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone 
          - projects/project/zones/zone 
          - zones/zone
        type: string
      targetDisk:
        description: |-
          The URL of the target disk to move. This can be a full or partial URL. For example, the following are all valid URLs to a disk:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
          - projects/project/zones/zone/disks/disk 
          - zones/zone/disks/disk
        type: string
    type: object
  DiskType:
    description: A DiskType resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      defaultDiskSizeGb:
        description: '[Output Only] Server-defined default disk size in GB.'
        format: int64
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: '[Output Only] The deprecation status associated with this disk type.'
      description:
        description: '[Output Only] An optional description of this resource.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#diskType'
        description: '[Output Only] Type of the resource. Always compute#diskType for disk types.'
        type: string
      name:
        description: '[Output Only] Name of the resource.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      validDiskSize:
        description: '[Output Only] An optional textual description of the valid disk size, such as "10GB-10TB".'
        type: string
      zone:
        description: '[Output Only] URL of the zone where the disk type resides.'
        type: string
    type: object
  DiskTypeAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/DiskTypesScopedList'
          description: '[Output Only] Name of the scope containing this set of disk types.'
        description: A list of DiskTypesScopedList resources.
        type: object
      kind:
        default: 'compute#diskTypeAggregatedList'
        description: '[Output Only] Type of resource. Always compute#diskTypeAggregatedList.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  DiskTypeList:
    description: Contains a list of disk types.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of DiskType resources.
        items:
          $ref: '#/definitions/DiskType'
        type: array
      kind:
        default: 'compute#diskTypeList'
        description: '[Output Only] Type of resource. Always compute#diskTypeList for disk types.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  DiskTypesScopedList:
    properties:
      diskTypes:
        description: '[Output Only] List of disk types contained in this scope.'
        items:
          $ref: '#/definitions/DiskType'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of disk types when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  DisksResizeRequest:
    properties:
      sizeGb:
        description: 'The new size of the persistent disk, which is specified in GB.'
        format: int64
        type: string
    type: object
  DisksScopedList:
    properties:
      disks:
        description: '[Output Only] List of disks contained in this scope.'
        items:
          $ref: '#/definitions/Disk'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of disks when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  Firewall:
    description: Represents a Firewall resource.
    properties:
      allowed:
        description: The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
        items:
          properties:
            IPProtocol:
              description: 'The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.'
              type: string
            ports:
              description: |-
                An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.

                Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
              items:
                type: string
              type: array
          type: object
        type: array
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      denied:
        description: The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
        items:
          properties:
            IPProtocol:
              description: 'The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.'
              type: string
            ports:
              description: |-
                An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.

                Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
              items:
                type: string
              type: array
          type: object
        type: array
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      destinationRanges:
        description: 'If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.'
        items:
          type: string
        type: array
      direction:
        description: 'Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS traffic, it is NOT supported to specify sourceRanges OR sourceTags.'
        enum:
          - EGRESS
          - INGRESS
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#firewall'
        description: '[Output Only] Type of the resource. Always compute#firewall for firewall rules.'
        type: string
      name:
        description: 'Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: |-
          URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used:
          global/networks/default
          If you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  
          - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network 
          - projects/myproject/global/networks/my-network 
          - global/networks/default
        type: string
      priority:
        description: 'Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW rules having equal priority.'
        format: int32
        type: integer
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sourceRanges:
        description: 'If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.'
        items:
          type: string
        type: array
      sourceTags:
        description: 'If source tags are specified, the firewall rule applies only to traffic with source IPs that match the primary network interfaces of VM instances that have the tag and are in the same VPC network. Source tags cannot be used to control traffic to an instance''s external IP address, it only applies to traffic between instances in the same virtual network. Because tags are associated with instances, not IP addresses. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.'
        items:
          type: string
        type: array
      targetTags:
        description: 'A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.'
        items:
          type: string
        type: array
    type: object
  FirewallList:
    description: Contains a list of firewalls.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Firewall resources.
        items:
          $ref: '#/definitions/Firewall'
        type: array
      kind:
        default: 'compute#firewallList'
        description: '[Output Only] Type of resource. Always compute#firewallList for lists of firewalls.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  ForwardingRule:
    description: 'A ForwardingRule resource. A ForwardingRule resource specifies which pool of target virtual machines to forward a packet to if it matches the given [IPAddress, IPProtocol, ports] tuple.'
    properties:
      IPAddress:
        description: |-
          The IP address that this forwarding rule is serving on behalf of.

          For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IPv4 address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4 only. A global forwarding rule supports either IPv4 or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule.
        type: string
      IPProtocol:
        description: |-
          The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP.

          When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
        enum:
          - AH
          - ESP
          - ICMP
          - SCTP
          - TCP
          - UDP
        type: string
      backendService:
        description: |-
          This field is not used for external load balancing.

          For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      ipVersion:
        description: The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for a global forwarding rule.
        enum:
          - IPV4
          - IPV6
          - UNSPECIFIED_VERSION
        type: string
      kind:
        default: 'compute#forwardingRule'
        description: '[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.'
        type: string
      loadBalancingScheme:
        description: 'This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)'
        enum:
          - EXTERNAL
          - INTERNAL
          - INVALID
        type: string
      name:
        description: 'Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: |-
          This field is not used for external load balancing.

          For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
        type: string
      portRange:
        description: |-
          This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.

          Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.

          Some types of forwarding target have constraints on the acceptable ports:  
          - TargetHttpProxy: 80, 8080 
          - TargetHttpsProxy: 443 
          - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 
          - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 
          - TargetVpnGateway: 500, 4500
          -
        type: string
      ports:
        description: |-
          This field is used along with the backend_service field for internal load balancing.

          When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule.

          You may specify a maximum of up to 5 ports.
        items:
          type: string
        type: array
      region:
        description: '[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      subnetwork:
        description: |-
          This field is not used for external load balancing.

          For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule.

          If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
        type: string
      target:
        description: |-
          The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object.

          This field is not used for internal load balancing.
        type: string
    type: object
  ForwardingRuleAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/ForwardingRulesScopedList'
          description: Name of the scope containing this set of addresses.
        description: A list of ForwardingRulesScopedList resources.
        type: object
      kind:
        default: 'compute#forwardingRuleAggregatedList'
        description: '[Output Only] Type of resource. Always compute#forwardingRuleAggregatedList for lists of forwarding rules.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  ForwardingRuleList:
    description: Contains a list of ForwardingRule resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of ForwardingRule resources.
        items:
          $ref: '#/definitions/ForwardingRule'
        type: array
      kind:
        default: 'compute#forwardingRuleList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  ForwardingRulesScopedList:
    properties:
      forwardingRules:
        description: List of forwarding rules contained in this scope.
        items:
          $ref: '#/definitions/ForwardingRule'
        type: array
      warning:
        description: Informational warning which replaces the list of forwarding rules when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  GlobalSetLabelsRequest:
    properties:
      labelFingerprint:
        description: 'The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a get() request to the resource to get the latest fingerprint.'
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: 'A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, "webserver-frontend": "images". A label value can also be empty (e.g. "my-label": "").'
        type: object
    type: object
  GuestOsFeature:
    description: Guest OS features.
    properties:
      type:
        description: 'The type of supported feature. Currently only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image.'
        enum:
          - FEATURE_TYPE_UNSPECIFIED
          - VIRTIO_SCSI_MULTIQUEUE
          - WINDOWS
        type: string
    type: object
  HTTPHealthCheck:
    properties:
      host:
        description: 'The value of the host header in the HTTP health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.'
        type: string
      port:
        description: The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
        format: int32
        type: integer
      portName:
        description: 'Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      requestPath:
        description: The request path of the HTTP health check request. The default value is /.
        type: string
    type: object
  HTTPSHealthCheck:
    properties:
      host:
        description: 'The value of the host header in the HTTPS health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.'
        type: string
      port:
        description: The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
        format: int32
        type: integer
      portName:
        description: 'Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      requestPath:
        description: The request path of the HTTPS health check request. The default value is /.
        type: string
    type: object
  HealthCheck:
    description: 'An HealthCheck resource. This resource defines a template for how individual virtual machines should be checked for health, via one of the supported protocols.'
    properties:
      checkIntervalSec:
        description: How often (in seconds) to send a health check. The default value is 5 seconds.
        format: int32
        type: integer
      creationTimestamp:
        description: '[Output Only] Creation timestamp in 3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      healthyThreshold:
        description: A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
        format: int32
        type: integer
      httpHealthCheck:
        $ref: '#/definitions/HTTPHealthCheck'
      httpsHealthCheck:
        $ref: '#/definitions/HTTPSHealthCheck'
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#healthCheck'
        description: Type of the resource.
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sslHealthCheck:
        $ref: '#/definitions/SSLHealthCheck'
      tcpHealthCheck:
        $ref: '#/definitions/TCPHealthCheck'
      timeoutSec:
        description: How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
        format: int32
        type: integer
      type:
        description: 'Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.'
        enum:
          - HTTP
          - HTTPS
          - INVALID
          - SSL
          - TCP
        type: string
      unhealthyThreshold:
        description: A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
        format: int32
        type: integer
    type: object
  HealthCheckList:
    description: Contains a list of HealthCheck resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of HealthCheck resources.
        items:
          $ref: '#/definitions/HealthCheck'
        type: array
      kind:
        default: 'compute#healthCheckList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  HealthCheckReference:
    description: |-
      A full or valid partial URL to a health check. For example, the following are valid URLs:  
      - https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check 
      - projects/project-id/global/httpHealthChecks/health-check 
      - global/httpHealthChecks/health-check
    properties:
      healthCheck:
        type: string
    type: object
  HealthStatus:
    properties:
      healthState:
        description: Health state of the instance.
        enum:
          - HEALTHY
          - UNHEALTHY
        type: string
      instance:
        description: URL of the instance resource.
        type: string
      ipAddress:
        description: The IP address represented by this resource.
        type: string
      port:
        description: The port on the instance.
        format: int32
        type: integer
    type: object
  HostRule:
    description: 'UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.'
    properties:
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      hosts:
        description: 'The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or ..'
        items:
          type: string
        type: array
      pathMatcher:
        description: The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
        type: string
    type: object
  HttpHealthCheck:
    description: 'An HttpHealthCheck resource. This resource defines a template for how individual instances should be checked for health, via HTTP.'
    properties:
      checkIntervalSec:
        description: How often (in seconds) to send a health check. The default value is 5 seconds.
        format: int32
        type: integer
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      healthyThreshold:
        description: A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
        format: int32
        type: integer
      host:
        description: 'The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#httpHealthCheck'
        description: '[Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health checks.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      port:
        description: The TCP port number for the HTTP health check request. The default value is 80.
        format: int32
        type: integer
      requestPath:
        description: The request path of the HTTP health check request. The default value is /.
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      timeoutSec:
        description: How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
        format: int32
        type: integer
      unhealthyThreshold:
        description: A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
        format: int32
        type: integer
    type: object
  HttpHealthCheckList:
    description: Contains a list of HttpHealthCheck resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of HttpHealthCheck resources.
        items:
          $ref: '#/definitions/HttpHealthCheck'
        type: array
      kind:
        default: 'compute#httpHealthCheckList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  HttpsHealthCheck:
    description: 'An HttpsHealthCheck resource. This resource defines a template for how individual instances should be checked for health, via HTTPS.'
    properties:
      checkIntervalSec:
        description: How often (in seconds) to send a health check. The default value is 5 seconds.
        format: int32
        type: integer
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      healthyThreshold:
        description: A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
        format: int32
        type: integer
      host:
        description: 'The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#httpsHealthCheck'
        description: Type of the resource.
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      port:
        description: The TCP port number for the HTTPS health check request. The default value is 443.
        format: int32
        type: integer
      requestPath:
        description: The request path of the HTTPS health check request. The default value is "/".
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      timeoutSec:
        description: How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have a greater value than checkIntervalSec.
        format: int32
        type: integer
      unhealthyThreshold:
        description: A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
        format: int32
        type: integer
    type: object
  HttpsHealthCheckList:
    description: Contains a list of HttpsHealthCheck resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of HttpsHealthCheck resources.
        items:
          $ref: '#/definitions/HttpsHealthCheck'
        type: array
      kind:
        default: 'compute#httpsHealthCheckList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  Image:
    description: An Image resource.
    properties:
      archiveSizeBytes:
        description: Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
        format: int64
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: The deprecation status associated with this image.
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      diskSizeGb:
        description: Size of the image when restored onto a persistent disk (in GB).
        format: int64
        type: string
      family:
        description: The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
        type: string
      guestOsFeatures:
        description: |-
          A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE.

          For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image.
        items:
          $ref: '#/definitions/GuestOsFeature'
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      imageEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: |-
          Encrypts the image using a customer-supplied encryption key.

          After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).

          Customer-supplied encryption keys do not protect access to metadata of the disk.

          If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
      kind:
        default: 'compute#image'
        description: '[Output Only] Type of the resource. Always compute#image for images.'
        type: string
      labelFingerprint:
        description: |-
          A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

          To see the latest fingerprint, make a get() request to retrieve an image.
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: Labels to apply to this image. These can be later modified by the setLabels method.
        type: object
      licenses:
        description: Any applicable license URI.
        items:
          type: string
        type: array
      name:
        description: 'Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      rawDisk:
        description: The parameters of the raw disk image.
        properties:
          containerType:
            description: 'The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.'
            enum:
              - TAR
            type: string
          sha1Checksum:
            description: An optional SHA1 checksum of the disk image before unpackaging; provided by the client when the disk image is created.
            pattern: '[a-f0-9]{40}'
            type: string
          source:
            description: The full Google Cloud Storage URL where the disk image is stored. You must provide either this property or the sourceDisk property but not both.
            type: string
        type: object
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sourceDisk:
        description: |-
          URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
          - projects/project/zones/zone/disks/disk 
          - zones/zone/disks/disk
        type: string
      sourceDiskEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
      sourceDiskId:
        description: The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
        type: string
      sourceImage:
        description: |-
          URL of the source image used to create this image. This can be a full or valid partial URL. You must provide exactly one of:  
          - this property, or  
          - the rawDisk.source property, or  
          - the sourceDisk property   in order to create an image.
        type: string
      sourceImageEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
      sourceImageId:
        description: '[Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.'
        type: string
      sourceType:
        default: RAW
        description: The type of the image used to create this disk. The default and only value is RAW
        enum:
          - RAW
        type: string
      status:
        description: '[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.'
        enum:
          - FAILED
          - PENDING
          - READY
        type: string
    type: object
  ImageList:
    description: Contains a list of images.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Image resources.
        items:
          $ref: '#/definitions/Image'
        type: array
      kind:
        default: 'compute#imageList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  Instance:
    description: An Instance resource.
    properties:
      canIpForward:
        description: 'Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding.'
        type: boolean
      cpuPlatform:
        description: '[Output Only] The CPU platform used by this instance.'
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      disks:
        description: Array of disks associated with this instance. Persistent disks must be created before you can assign them.
        items:
          $ref: '#/definitions/AttachedDisk'
        type: array
      guestAccelerators:
        description: List of the type and count of accelerator cards attached to the instance.
        items:
          $ref: '#/definitions/AcceleratorConfig'
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#instance'
        description: '[Output Only] Type of the resource. Always compute#instance for instances.'
        type: string
      labelFingerprint:
        description: |-
          A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.

          To see the latest fingerprint, make get() request to the instance.
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: Labels to apply to this instance. These can be later modified by the setLabels method.
        type: object
      machineType:
        description: |-
          Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type:

          zones/us-central1-f/machineTypes/n1-standard-1 

          To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):

          zones/zone/machineTypes/custom-CPUS-MEMORY 

          For example: zones/us-central1-f/machineTypes/custom-4-5120 

          For a full list of restrictions, read the Specifications for custom machine types.
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
        description: The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
      name:
        description: 'The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      networkInterfaces:
        description: 'An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.'
        items:
          $ref: '#/definitions/NetworkInterface'
        type: array
      scheduling:
        $ref: '#/definitions/Scheduling'
        description: Sets the scheduling options for this instance.
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
      serviceAccounts:
        description: |-
          A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.

          Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
        items:
          $ref: '#/definitions/ServiceAccount'
        type: array
      startRestricted:
        description: '[Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.'
        type: boolean
      status:
        description: '[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED, and TERMINATED.'
        enum:
          - PROVISIONING
          - RUNNING
          - STAGING
          - STOPPED
          - STOPPING
          - SUSPENDED
          - SUSPENDING
          - TERMINATED
        type: string
      statusMessage:
        description: '[Output Only] An optional, human-readable explanation of the status.'
        type: string
      tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
      zone:
        description: '[Output Only] URL of the zone where the instance resides.'
        type: string
    type: object
  InstanceAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/InstancesScopedList'
          description: '[Output Only] Name of the scope containing this set of instances.'
        description: A list of InstancesScopedList resources.
        type: object
      kind:
        default: 'compute#instanceAggregatedList'
        description: '[Output Only] Type of resource. Always compute#instanceAggregatedList for aggregated lists of Instance resources.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroup:
    properties:
      creationTimestamp:
        description: '[Output Only] The creation timestamp for this instance group in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      fingerprint:
        description: '[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.'
        format: byte
        type: string
      id:
        description: '[Output Only] A unique identifier for this instance group, generated by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#instanceGroup'
        description: '[Output Only] The resource type, which is always compute#instanceGroup for instance groups.'
        type: string
      name:
        description: 'The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      namedPorts:
        description: |-
          Assigns a name to a port number. For example: {name: "http", port: 80}

          This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] 

          Named ports apply to all instances in this instance group.
        items:
          $ref: '#/definitions/NamedPort'
        type: array
      network:
        description: The URL of the network to which all instances in the instance group belong.
        type: string
      region:
        description: The URL of the region where the instance group is located (for regional resources).
        type: string
      selfLink:
        description: '[Output Only] The URL for this instance group. The server generates this URL.'
        type: string
      size:
        description: '[Output Only] The total number of instances in the instance group.'
        format: int32
        type: integer
      subnetwork:
        description: The URL of the subnetwork to which all instances in the instance group belong.
        type: string
      zone:
        description: '[Output Only] The URL of the zone where the instance group is located (for zonal resources).'
        type: string
    type: object
  InstanceGroupAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/InstanceGroupsScopedList'
          description: The name of the scope that contains this set of instance groups.
        description: A list of InstanceGroupsScopedList resources.
        type: object
      kind:
        default: 'compute#instanceGroupAggregatedList'
        description: '[Output Only] The resource type, which is always compute#instanceGroupAggregatedList for aggregated lists of instance groups.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroupList:
    description: A list of InstanceGroup resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceGroup resources.
        items:
          $ref: '#/definitions/InstanceGroup'
        type: array
      kind:
        default: 'compute#instanceGroupList'
        description: '[Output Only] The resource type, which is always compute#instanceGroupList for instance group lists.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroupManager:
    description: An Instance Group Manager resource.
    properties:
      baseInstanceName:
        description: The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
        pattern: '[a-z][-a-z0-9]{0,57}'
        type: string
      creationTimestamp:
        description: '[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.'
        type: string
      currentActions:
        $ref: '#/definitions/InstanceGroupManagerActionsSummary'
        description: '[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.'
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      fingerprint:
        description: '[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.'
        format: byte
        type: string
      id:
        description: '[Output Only] A unique identifier for this resource type. The server generates this identifier.'
        format: uint64
        type: string
      instanceGroup:
        description: '[Output Only] The URL of the Instance Group resource.'
        type: string
      instanceTemplate:
        description: The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
        type: string
      kind:
        default: 'compute#instanceGroupManager'
        description: '[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.'
        type: string
      name:
        description: 'The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      namedPorts:
        description: Named ports configured for the Instance Groups complementary to this Instance Group Manager.
        items:
          $ref: '#/definitions/NamedPort'
        type: array
      region:
        description: '[Output Only] The URL of the region where the managed instance group resides (for regional resources).'
        type: string
      selfLink:
        description: '[Output Only] The URL for this managed instance group. The server defines this URL.'
        type: string
      targetPools:
        description: The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
        items:
          type: string
        type: array
      targetSize:
        description: The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
        format: int32
        type: integer
      zone:
        description: '[Output Only] The URL of the zone where the managed instance group is located (for zonal resources).'
        type: string
    type: object
  InstanceGroupManagerActionsSummary:
    properties:
      abandoning:
        description: '[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.'
        format: int32
        type: integer
      creating:
        description: |-
          [Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully.

          If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
        format: int32
        type: integer
      creatingWithoutRetries:
        description: '[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group''s targetSize value accordingly.'
        format: int32
        type: integer
      deleting:
        description: '[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.'
        format: int32
        type: integer
      none:
        description: '[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.'
        format: int32
        type: integer
      recreating:
        description: '[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.'
        format: int32
        type: integer
      refreshing:
        description: '[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.'
        format: int32
        type: integer
      restarting:
        description: '[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.'
        format: int32
        type: integer
    type: object
  InstanceGroupManagerAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/InstanceGroupManagersScopedList'
          description: '[Output Only] The name of the scope that contains this set of managed instance groups.'
        description: A list of InstanceGroupManagersScopedList resources.
        type: object
      kind:
        default: 'compute#instanceGroupManagerAggregatedList'
        description: '[Output Only] The resource type, which is always compute#instanceGroupManagerAggregatedList for an aggregated list of managed instance groups.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroupManagerList:
    description: '[Output Only] A list of managed instance groups.'
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceGroupManager resources.
        items:
          $ref: '#/definitions/InstanceGroupManager'
        type: array
      kind:
        default: 'compute#instanceGroupManagerList'
        description: '[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroupManagersAbandonInstancesRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  InstanceGroupManagersDeleteInstancesRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  InstanceGroupManagersListManagedInstancesResponse:
    properties:
      managedInstances:
        description: '[Output Only] The list of instances in the managed instance group.'
        items:
          $ref: '#/definitions/ManagedInstance'
        type: array
    type: object
  InstanceGroupManagersRecreateInstancesRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  InstanceGroupManagersScopedList:
    properties:
      instanceGroupManagers:
        description: '[Output Only] The list of managed instance groups that are contained in the specified project and zone.'
        items:
          $ref: '#/definitions/InstanceGroupManager'
        type: array
      warning:
        description: '[Output Only] The warning that replaces the list of managed instance groups when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  InstanceGroupManagersSetInstanceTemplateRequest:
    properties:
      instanceTemplate:
        description: The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
        type: string
    type: object
  InstanceGroupManagersSetTargetPoolsRequest:
    properties:
      fingerprint:
        description: 'The fingerprint of the target pools information. Use this optional property to prevent conflicts when multiple users change the target pools settings concurrently. Obtain the fingerprint with the instanceGroupManagers.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.'
        format: byte
        type: string
      targetPools:
        description: The list of target pool URLs that instances in this managed instance group belong to. The managed instance group applies these target pools to all of the instances in the group. Existing instances and new instances in the group all receive these target pool settings.
        items:
          type: string
        type: array
    type: object
  InstanceGroupsAddInstancesRequest:
    properties:
      instances:
        description: The list of instances to add to the instance group.
        items:
          $ref: '#/definitions/InstanceReference'
        type: array
    type: object
  InstanceGroupsListInstances:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceWithNamedPorts resources.
        items:
          $ref: '#/definitions/InstanceWithNamedPorts'
        type: array
      kind:
        default: 'compute#instanceGroupsListInstances'
        description: '[Output Only] The resource type, which is always compute#instanceGroupsListInstances for the list of instances in the specified instance group.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceGroupsListInstancesRequest:
    properties:
      instanceState:
        description: A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state.
        enum:
          - ALL
          - RUNNING
        type: string
    type: object
  InstanceGroupsRemoveInstancesRequest:
    properties:
      instances:
        description: The list of instances to remove from the instance group.
        items:
          $ref: '#/definitions/InstanceReference'
        type: array
    type: object
  InstanceGroupsScopedList:
    properties:
      instanceGroups:
        description: '[Output Only] The list of instance groups that are contained in this scope.'
        items:
          $ref: '#/definitions/InstanceGroup'
        type: array
      warning:
        description: '[Output Only] An informational warning that replaces the list of instance groups when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  InstanceGroupsSetNamedPortsRequest:
    properties:
      fingerprint:
        description: 'The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.'
        format: byte
        type: string
      namedPorts:
        description: The list of named ports to set for this instance group.
        items:
          $ref: '#/definitions/NamedPort'
        type: array
    type: object
  InstanceList:
    description: Contains a list of instances.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Instance resources.
        items:
          $ref: '#/definitions/Instance'
        type: array
      kind:
        default: 'compute#instanceList'
        description: '[Output Only] Type of resource. Always compute#instanceList for lists of Instance resources.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceMoveRequest:
    properties:
      destinationZone:
        description: |-
          The URL of the destination zone to move the instance. This can be a full or partial URL. For example, the following are all valid URLs to a zone:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone 
          - projects/project/zones/zone 
          - zones/zone
        type: string
      targetInstance:
        description: |-
          The URL of the target instance to move. This can be a full or partial URL. For example, the following are all valid URLs to an instance:  
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 
          - projects/project/zones/zone/instances/instance 
          - zones/zone/instances/instance
        type: string
    type: object
  InstanceProperties:
    description: ''
    properties:
      canIpForward:
        description: 'Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.'
        type: boolean
      description:
        description: An optional text description for the instances that are created from this instance template.
        type: string
      disks:
        description: An array of disks that are associated with the instances that are created from this template.
        items:
          $ref: '#/definitions/AttachedDisk'
        type: array
      guestAccelerators:
        description: A list of guest accelerator cards' type and count to use for instances created from the instance template.
        items:
          $ref: '#/definitions/AcceleratorConfig'
        type: array
      labels:
        additionalProperties:
          type: string
        description: Labels to apply to instances that are created from this template.
        type: object
      machineType:
        description: The machine type to use for instances that are created from this template.
        type: string
      metadata:
        $ref: '#/definitions/Metadata'
        description: The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
      networkInterfaces:
        description: An array of network access configurations for this interface.
        items:
          $ref: '#/definitions/NetworkInterface'
        type: array
      scheduling:
        $ref: '#/definitions/Scheduling'
        description: Specifies the scheduling options for the instances that are created from this template.
      serviceAccounts:
        description: A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.
        items:
          $ref: '#/definitions/ServiceAccount'
        type: array
      tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to apply to the instances that are created from this template. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
    type: object
  InstanceReference:
    properties:
      instance:
        description: The URL for a specific instance.
        type: string
    type: object
  InstanceTemplate:
    description: An Instance Template resource.
    properties:
      creationTimestamp:
        description: '[Output Only] The creation timestamp for this instance template in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] A unique identifier for this instance template. The server defines this identifier.'
        format: uint64
        type: string
      kind:
        default: 'compute#instanceTemplate'
        description: '[Output Only] The resource type, which is always compute#instanceTemplate for instance templates.'
        type: string
      name:
        description: 'Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      properties:
        $ref: '#/definitions/InstanceProperties'
        description: The instance properties for this instance template.
      selfLink:
        description: '[Output Only] The URL for this instance template. The server defines this URL.'
        type: string
    type: object
  InstanceTemplateList:
    description: A list of instance templates.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceTemplate resources.
        items:
          $ref: '#/definitions/InstanceTemplate'
        type: array
      kind:
        default: 'compute#instanceTemplateList'
        description: '[Output Only] The resource type, which is always compute#instanceTemplatesListResponse for instance template lists.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  InstanceWithNamedPorts:
    properties:
      instance:
        description: '[Output Only] The URL of the instance.'
        type: string
      namedPorts:
        description: '[Output Only] The named ports that belong to this instance group.'
        items:
          $ref: '#/definitions/NamedPort'
        type: array
      status:
        description: '[Output Only] The status of the instance.'
        enum:
          - PROVISIONING
          - RUNNING
          - STAGING
          - STOPPED
          - STOPPING
          - SUSPENDED
          - SUSPENDING
          - TERMINATED
        type: string
    type: object
  InstancesScopedList:
    properties:
      instances:
        description: '[Output Only] List of instances contained in this scope.'
        items:
          $ref: '#/definitions/Instance'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of instances when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  InstancesSetLabelsRequest:
    properties:
      labelFingerprint:
        description: 'Fingerprint of the previous set of labels for this resource, used to prevent conflicts. Provide the latest fingerprint value when making a request to add or change labels.'
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
    type: object
  InstancesSetMachineResourcesRequest:
    properties:
      guestAccelerators:
        description: List of the type and count of accelerator cards attached to the instance.
        items:
          $ref: '#/definitions/AcceleratorConfig'
        type: array
    type: object
  InstancesSetMachineTypeRequest:
    properties:
      machineType:
        description: 'Full or partial URL of the machine type resource. See Machine Types for a full list of machine types. For example: zones/us-central1-f/machineTypes/n1-standard-1'
        type: string
    type: object
  InstancesSetServiceAccountRequest:
    properties:
      email:
        description: Email address of the service account.
        type: string
      scopes:
        description: The list of scopes to be made available for this service account.
        items:
          type: string
        type: array
    type: object
  InstancesStartWithEncryptionKeyRequest:
    properties:
      disks:
        description: |-
          Array of disks associated with this instance that are protected with a customer-supplied encryption key.

          In order to start the instance, the disk url and its corresponding key must be provided.

          If the disk is not protected with a customer-supplied encryption key it should not be specified.
        items:
          $ref: '#/definitions/CustomerEncryptionKeyProtectedDisk'
        type: array
    type: object
  License:
    description: A license resource.
    properties:
      chargesUseFee:
        description: '[Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.'
        type: boolean
      kind:
        default: 'compute#license'
        description: '[Output Only] Type of resource. Always compute#license for licenses.'
        type: string
      name:
        description: '[Output Only] Name of the resource. The name is 1-63 characters long and complies with RFC1035.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
    type: object
  MachineType:
    description: A Machine Type resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: '[Output Only] The deprecation status associated with this machine type.'
      description:
        description: '[Output Only] An optional textual description of the resource.'
        type: string
      guestCpus:
        description: '[Output Only] The number of virtual CPUs that are available to the instance.'
        format: int32
        type: integer
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      imageSpaceGb:
        description: '[Deprecated] This property is deprecated and will never be populated with any relevant values.'
        format: int32
        type: integer
      isSharedCpu:
        description: '[Output Only] Whether this machine type has a shared CPU. See Shared-core machine types for more information.'
        type: boolean
      kind:
        default: 'compute#machineType'
        description: '[Output Only] The type of the resource. Always compute#machineType for machine types.'
        type: string
      maximumPersistentDisks:
        description: '[Output Only] Maximum persistent disks allowed.'
        format: int32
        type: integer
      maximumPersistentDisksSizeGb:
        description: '[Output Only] Maximum total persistent disks size (GB) allowed.'
        format: int64
        type: string
      memoryMb:
        description: '[Output Only] The amount of physical memory available to the instance, defined in MB.'
        format: int32
        type: integer
      name:
        description: '[Output Only] Name of the resource.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      scratchDisks:
        description: '[Output Only] List of extended scratch disks assigned to the instance.'
        items:
          properties:
            diskGb:
              description: 'Size of the scratch disk, defined in GB.'
              format: int32
              type: integer
          type: object
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      zone:
        description: '[Output Only] The name of the zone where the machine type resides, such as us-central1-a.'
        type: string
    type: object
  MachineTypeAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/MachineTypesScopedList'
          description: '[Output Only] Name of the scope containing this set of machine types.'
        description: A list of MachineTypesScopedList resources.
        type: object
      kind:
        default: 'compute#machineTypeAggregatedList'
        description: '[Output Only] Type of resource. Always compute#machineTypeAggregatedList for aggregated lists of machine types.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  MachineTypeList:
    description: Contains a list of machine types.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of MachineType resources.
        items:
          $ref: '#/definitions/MachineType'
        type: array
      kind:
        default: 'compute#machineTypeList'
        description: '[Output Only] Type of resource. Always compute#machineTypeList for lists of machine types.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  MachineTypesScopedList:
    properties:
      machineTypes:
        description: '[Output Only] List of machine types contained in this scope.'
        items:
          $ref: '#/definitions/MachineType'
        type: array
      warning:
        description: '[Output Only] An informational warning that appears when the machine types list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  ManagedInstance:
    properties:
      currentAction:
        description: |-
          [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: 
          - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. 
          - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. 
          - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. 
          - RECREATING The managed instance group is recreating this instance. 
          - DELETING The managed instance group is permanently deleting this instance. 
          - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. 
          - RESTARTING The managed instance group is restarting the instance. 
          - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance.
        enum:
          - ABANDONING
          - CREATING
          - CREATING_WITHOUT_RETRIES
          - DELETING
          - NONE
          - RECREATING
          - REFRESHING
          - RESTARTING
        type: string
      id:
        description: '[Output only] The unique identifier for this resource. This field is empty when instance does not exist.'
        format: uint64
        type: string
      instance:
        description: '[Output Only] The URL of the instance. The URL can exist even if the instance has not yet been created.'
        type: string
      instanceStatus:
        description: '[Output Only] The status of the instance. This field is empty when the instance does not exist.'
        enum:
          - PROVISIONING
          - RUNNING
          - STAGING
          - STOPPED
          - STOPPING
          - SUSPENDED
          - SUSPENDING
          - TERMINATED
        type: string
      lastAttempt:
        $ref: '#/definitions/ManagedInstanceLastAttempt'
        description: '[Output Only] Information about the last attempt to create or delete the instance.'
    type: object
  ManagedInstanceLastAttempt:
    properties:
      errors:
        description: '[Output Only] Encountered errors during the last attempt to create or delete the instance.'
        properties:
          errors:
            description: '[Output Only] The array of errors encountered while processing this operation.'
            items:
              properties:
                code:
                  description: '[Output Only] The error type identifier for this error.'
                  type: string
                location:
                  description: '[Output Only] Indicates the field in the request that caused the error. This property is optional.'
                  type: string
                message:
                  description: '[Output Only] An optional, human-readable error message.'
                  type: string
              type: object
            type: array
        type: object
    type: object
  Metadata:
    description: A metadata key/value entry.
    properties:
      fingerprint:
        description: 'Specifies a fingerprint for this request, which is essentially a hash of the metadata''s contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.'
        format: byte
        type: string
      items:
        description: Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
        items:
          properties:
            key:
              description: 'Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.'
              pattern: '[a-zA-Z0-9-_]{1,128}'
              type: string
            value:
              description: 'Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB).'
              type: string
          type: object
        type: array
      kind:
        default: 'compute#metadata'
        description: '[Output Only] Type of the resource. Always compute#metadata for metadata.'
        type: string
    type: object
  NamedPort:
    description: 'The named port. For example: .'
    properties:
      name:
        description: 'The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.'
        type: string
      port:
        description: 'The port number, which can be a value between 1 and 65535.'
        format: int32
        type: integer
    type: object
  Network:
    description: Represents a Network resource. Read Networks and Firewalls for more information.
    properties:
      IPv4Range:
        description: 'The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.'
        pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}/[0-9]{1,2}'
        type: string
      autoCreateSubnetworks:
        description: |-
          When set to true, the network is created in "auto subnet mode". When set to false, the network is in "custom subnet mode".

          In "auto subnet mode", a newly created network is assigned the default CIDR of 10.128.0.0/9 and it automatically creates one subnetwork per region.
        type: boolean
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      gatewayIPv4:
        description: 'A gateway address for default routing to other networks. This value is read only and is selected by the Google Compute Engine, typically as the first usable address in the IPv4Range.'
        pattern: '[0-9]{1,3}(?:\.[0-9]{1,3}){3}'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#network'
        description: '[Output Only] Type of the resource. Always compute#network for networks.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      peerings:
        description: '[Output Only] List of network peerings for the resource.'
        items:
          $ref: '#/definitions/NetworkPeering'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      subnetworks:
        description: '[Output Only] Server-defined fully-qualified URLs for all subnetworks in this network.'
        items:
          type: string
        type: array
    type: object
  NetworkInterface:
    description: A network interface resource attached to an instance.
    properties:
      accessConfigs:
        description: 'An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.'
        items:
          $ref: '#/definitions/AccessConfig'
        type: array
      aliasIpRanges:
        description: An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.
        items:
          $ref: '#/definitions/AliasIpRange'
        type: array
      kind:
        default: 'compute#networkInterface'
        description: '[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.'
        type: string
      name:
        description: '[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.'
        type: string
      network:
        description: |-
          URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.

          This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used.

          If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  
          - https://www.googleapis.com/compute/v1/projects/project/global/networks/network 
          - projects/project/global/networks/network 
          - global/networks/default
        type: string
      networkIP:
        description: 'An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.'
        type: string
      subnetwork:
        description: |-
          The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:  
          - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork 
          - regions/region/subnetworks/subnetwork
        type: string
    type: object
  NetworkList:
    description: Contains a list of networks.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Network resources.
        items:
          $ref: '#/definitions/Network'
        type: array
      kind:
        default: 'compute#networkList'
        description: '[Output Only] Type of resource. Always compute#networkList for lists of networks.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  NetworkPeering:
    description: 'A network peering attached to a network resource. The message includes the peering name, peer network, peering state, and a flag indicating whether Google Compute Engine should automatically create routes for the peering.'
    properties:
      autoCreateRoutes:
        description: 'Whether full mesh connectivity is created and managed automatically. When it is set to true, Google Compute Engine will automatically create and manage the routes between two networks when the state is ACTIVE. Otherwise, user needs to create routes manually to route packets to peer network.'
        type: boolean
      name:
        description: 'Name of this peering. Provided by the client when the peering is created. The name must comply with RFC1035. Specifically, the name must be 1-63 characters long and match regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all the following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        type: string
      network:
        description: 'The URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.'
        type: string
      state:
        description: '[Output Only] State for the peering.'
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      stateDetails:
        description: '[Output Only] Details about the current state of the peering.'
        type: string
    type: object
  NetworksAddPeeringRequest:
    properties:
      autoCreateRoutes:
        description: Whether Google Compute Engine manages the routes automatically.
        type: boolean
      name:
        description: 'Name of the peering, which should conform to RFC1035.'
        type: string
      peerNetwork:
        description: 'URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.'
        type: string
    type: object
  NetworksRemovePeeringRequest:
    properties:
      name:
        description: 'Name of the peering, which should conform to RFC1035.'
        type: string
    type: object
  Operation:
    description: 'An Operation resource, used to manage asynchronous API requests.'
    properties:
      clientOperationId:
        description: '[Output Only] Reserved for future use.'
        type: string
      creationTimestamp:
        description: '[Deprecated] This field is deprecated.'
        type: string
      description:
        description: '[Output Only] A textual description of the operation, which is set when the operation is created.'
        type: string
      endTime:
        description: '[Output Only] The time that this operation was completed. This value is in RFC3339 text format.'
        type: string
      error:
        description: '[Output Only] If errors are generated during processing of the operation, this field will be populated.'
        properties:
          errors:
            description: '[Output Only] The array of errors encountered while processing this operation.'
            items:
              properties:
                code:
                  description: '[Output Only] The error type identifier for this error.'
                  type: string
                location:
                  description: '[Output Only] Indicates the field in the request that caused the error. This property is optional.'
                  type: string
                message:
                  description: '[Output Only] An optional, human-readable error message.'
                  type: string
              type: object
            type: array
        type: object
      httpErrorMessage:
        description: '[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND.'
        type: string
      httpErrorStatusCode:
        description: '[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a 404 means the resource was not found.'
        format: int32
        type: integer
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      insertTime:
        description: '[Output Only] The time that this operation was requested. This value is in RFC3339 text format.'
        type: string
      kind:
        default: 'compute#operation'
        description: '[Output Only] Type of the resource. Always compute#operation for Operation resources.'
        type: string
      name:
        description: '[Output Only] Name of the resource.'
        type: string
      operationType:
        description: '[Output Only] The type of operation, such as insert, update, or delete, and so on.'
        type: string
      progress:
        description: '[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.'
        format: int32
        type: integer
      region:
        description: '[Output Only] The URL of the region where the operation resides. Only available when performing regional operations.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      startTime:
        description: '[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.'
        type: string
      status:
        description: '[Output Only] The status of the operation, which can be one of the following: PENDING, RUNNING, or DONE.'
        enum:
          - DONE
          - PENDING
          - RUNNING
        type: string
      statusMessage:
        description: '[Output Only] An optional textual description of the current status of the operation.'
        type: string
      targetId:
        description: '[Output Only] The unique target ID, which identifies a specific incarnation of the target resource.'
        format: uint64
        type: string
      targetLink:
        description: '[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.'
        type: string
      user:
        description: '[Output Only] User who requested the operation, for example: user@example.com.'
        type: string
      warnings:
        description: '[Output Only] If warning messages are generated during processing of the operation, this field will be populated.'
        items:
          properties:
            code:
              description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNREACHABLE
              type: string
            data:
              description: |-
                [Output Only] Metadata about this warning in key: value format. For example:
                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                    type: string
                  value:
                    description: '[Output Only] A warning data value corresponding to the key.'
                    type: string
                type: object
              type: array
            message:
              description: '[Output Only] A human-readable description of the warning code.'
              type: string
          type: object
        type: array
      zone:
        description: '[Output Only] The URL of the zone where the operation resides. Only available when performing per-zone operations.'
        type: string
    type: object
  OperationAggregatedList:
    properties:
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/OperationsScopedList'
          description: '[Output Only] Name of the scope containing this set of operations.'
        description: '[Output Only] A map of scoped operation lists.'
        type: object
      kind:
        default: 'compute#operationAggregatedList'
        description: '[Output Only] Type of resource. Always compute#operationAggregatedList for aggregated lists of operations.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  OperationList:
    description: Contains a list of Operation resources.
    properties:
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        type: string
      items:
        description: '[Output Only] A list of Operation resources.'
        items:
          $ref: '#/definitions/Operation'
        type: array
      kind:
        default: 'compute#operationList'
        description: '[Output Only] Type of resource. Always compute#operations for Operations resource.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  OperationsScopedList:
    properties:
      operations:
        description: '[Output Only] List of operations contained in this scope.'
        items:
          $ref: '#/definitions/Operation'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of operations when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  PathMatcher:
    description: 'A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default service will be used.'
    properties:
      defaultService:
        description: |-
          The full or partial URL to the BackendService resource. This will be used if none of the pathRules defined by this PathMatcher is matched by the URL's path portion. For example, the following are all valid URLs to a BackendService resource:  
          - https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService 
          - compute/v1/projects/project/global/backendServices/backendService 
          - global/backendServices/backendService
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      name:
        description: The name to which this PathMatcher is referred by the HostRule.
        type: string
      pathRules:
        description: The list of path rules.
        items:
          $ref: '#/definitions/PathRule'
        type: array
    type: object
  PathRule:
    description: 'A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.'
    properties:
      paths:
        description: 'The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.'
        items:
          type: string
        type: array
      service:
        description: The URL of the BackendService resource if this rule is matched.
        type: string
    type: object
  Project:
    description: 'A Project resource. Projects can only be created in the Google Cloud Platform Console. Unless marked otherwise, values can only be modified in the console.'
    properties:
      commonInstanceMetadata:
        $ref: '#/definitions/Metadata'
        description: Metadata key/value pairs available to all instances contained in this project. See Custom metadata for more information.
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      defaultServiceAccount:
        description: '[Output Only] Default service account used by VMs running in this project.'
        type: string
      description:
        description: An optional textual description of the resource.
        type: string
      enabledFeatures:
        description: Restricted features enabled for use on this project.
        items:
          type: string
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server. This is not the project ID, and is just a unique ID used by Compute Engine to identify resources.'
        format: uint64
        type: string
      kind:
        default: 'compute#project'
        description: '[Output Only] Type of the resource. Always compute#project for projects.'
        type: string
      name:
        description: 'The project ID. For example: my-example-project. Use the project ID to make requests to Compute Engine.'
        type: string
      quotas:
        description: '[Output Only] Quotas assigned to this project.'
        items:
          $ref: '#/definitions/Quota'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      usageExportLocation:
        $ref: '#/definitions/UsageExportLocation'
        description: The naming prefix for daily usage reports and the Google Cloud Storage bucket where they are stored.
      xpnProjectStatus:
        description: '[Output Only] The role this project has in a shared VPC configuration. Currently only HOST projects are differentiated.'
        enum:
          - HOST
          - UNSPECIFIED_XPN_PROJECT_STATUS
        type: string
    type: object
  ProjectsDisableXpnResourceRequest:
    properties:
      xpnResource:
        $ref: '#/definitions/XpnResourceId'
        description: Service resource (a.k.a service project) ID.
    type: object
  ProjectsEnableXpnResourceRequest:
    properties:
      xpnResource:
        $ref: '#/definitions/XpnResourceId'
        description: Service resource (a.k.a service project) ID.
    type: object
  ProjectsGetXpnResources:
    properties:
      kind:
        default: 'compute#projectsGetXpnResources'
        description: '[Output Only] Type of resource. Always compute#projectsGetXpnResources for lists of service resources (a.k.a service projects)'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      resources:
        description: Service resources (a.k.a service projects) attached to this project as their shared VPC host.
        items:
          $ref: '#/definitions/XpnResourceId'
        type: array
    type: object
  ProjectsListXpnHostsRequest:
    properties:
      organization:
        description: 'Optional organization ID managed by Cloud Resource Manager, for which to list shared VPC host projects. If not specified, the organization will be inferred from the project.'
        type: string
    type: object
  Quota:
    description: A quotas entry.
    properties:
      limit:
        description: '[Output Only] Quota limit for this metric.'
        format: double
        type: number
      metric:
        description: '[Output Only] Name of the quota metric.'
        enum:
          - AUTOSCALERS
          - BACKEND_BUCKETS
          - BACKEND_SERVICES
          - COMMITMENTS
          - CPUS
          - CPUS_ALL_REGIONS
          - DISKS_TOTAL_GB
          - FIREWALLS
          - FORWARDING_RULES
          - HEALTH_CHECKS
          - IMAGES
          - INSTANCES
          - INSTANCE_GROUPS
          - INSTANCE_GROUP_MANAGERS
          - INSTANCE_TEMPLATES
          - IN_USE_ADDRESSES
          - LOCAL_SSD_TOTAL_GB
          - NETWORKS
          - NVIDIA_K80_GPUS
          - NVIDIA_P100_GPUS
          - PREEMPTIBLE_CPUS
          - PREEMPTIBLE_LOCAL_SSD_GB
          - REGIONAL_AUTOSCALERS
          - REGIONAL_INSTANCE_GROUP_MANAGERS
          - ROUTERS
          - ROUTES
          - SECURITY_POLICIES
          - SECURITY_POLICY_RULES
          - SNAPSHOTS
          - SSD_TOTAL_GB
          - SSL_CERTIFICATES
          - STATIC_ADDRESSES
          - SUBNETWORKS
          - TARGET_HTTPS_PROXIES
          - TARGET_HTTP_PROXIES
          - TARGET_INSTANCES
          - TARGET_POOLS
          - TARGET_SSL_PROXIES
          - TARGET_TCP_PROXIES
          - TARGET_VPN_GATEWAYS
          - URL_MAPS
          - VPN_TUNNELS
        type: string
      usage:
        description: '[Output Only] Current usage of this metric.'
        format: double
        type: number
    type: object
  Region:
    description: Region resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: '[Output Only] The deprecation status associated with this region.'
      description:
        description: '[Output Only] Textual description of the resource.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#region'
        description: '[Output Only] Type of the resource. Always compute#region for regions.'
        type: string
      name:
        description: '[Output Only] Name of the resource.'
        type: string
      quotas:
        description: '[Output Only] Quotas assigned to this region.'
        items:
          $ref: '#/definitions/Quota'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      status:
        description: '[Output Only] Status of the region, either UP or DOWN.'
        enum:
          - DOWN
          - UP
        type: string
      zones:
        description: '[Output Only] A list of zones available in this region, in the form of resource URLs.'
        items:
          type: string
        type: array
    type: object
  RegionAutoscalerList:
    description: Contains a list of autoscalers.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Autoscaler resources.
        items:
          $ref: '#/definitions/Autoscaler'
        type: array
      kind:
        default: 'compute#regionAutoscalerList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RegionInstanceGroupList:
    description: Contains a list of InstanceGroup resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceGroup resources.
        items:
          $ref: '#/definitions/InstanceGroup'
        type: array
      kind:
        default: 'compute#regionInstanceGroupList'
        description: The resource type.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RegionInstanceGroupManagerList:
    description: Contains a list of managed instance groups.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceGroupManager resources.
        items:
          $ref: '#/definitions/InstanceGroupManager'
        type: array
      kind:
        default: 'compute#regionInstanceGroupManagerList'
        description: '[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups that exist in th regional scope.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RegionInstanceGroupManagersAbandonInstancesRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  RegionInstanceGroupManagersDeleteInstancesRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  RegionInstanceGroupManagersListInstancesResponse:
    properties:
      managedInstances:
        description: List of managed instances.
        items:
          $ref: '#/definitions/ManagedInstance'
        type: array
    type: object
  RegionInstanceGroupManagersRecreateRequest:
    properties:
      instances:
        description: 'The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].'
        items:
          type: string
        type: array
    type: object
  RegionInstanceGroupManagersSetTargetPoolsRequest:
    properties:
      fingerprint:
        description: 'Fingerprint of the target pools information, which is a hash of the contents. This field is used for optimistic locking when you update the target pool entries. This field is optional.'
        format: byte
        type: string
      targetPools:
        description: The URL of all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
        items:
          type: string
        type: array
    type: object
  RegionInstanceGroupManagersSetTemplateRequest:
    properties:
      instanceTemplate:
        description: URL of the InstanceTemplate resource from which all new instances will be created.
        type: string
    type: object
  RegionInstanceGroupsListInstances:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of InstanceWithNamedPorts resources.
        items:
          $ref: '#/definitions/InstanceWithNamedPorts'
        type: array
      kind:
        default: 'compute#regionInstanceGroupsListInstances'
        description: The resource type.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RegionInstanceGroupsListInstancesRequest:
    properties:
      instanceState:
        description: 'Instances in which state should be returned. Valid options are: ''ALL'', ''RUNNING''. By default, it lists all instances.'
        enum:
          - ALL
          - RUNNING
        type: string
      portName:
        description: 'Name of port user is interested in. It is optional. If it is set, only information about this ports will be returned. If it is not set, all the named ports will be returned. Always lists all instances.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
    type: object
  RegionInstanceGroupsSetNamedPortsRequest:
    properties:
      fingerprint:
        description: 'The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request.'
        format: byte
        type: string
      namedPorts:
        description: The list of named ports to set for this instance group.
        items:
          $ref: '#/definitions/NamedPort'
        type: array
    type: object
  RegionList:
    description: Contains a list of region resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Region resources.
        items:
          $ref: '#/definitions/Region'
        type: array
      kind:
        default: 'compute#regionList'
        description: '[Output Only] Type of resource. Always compute#regionList for lists of regions.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  ResourceCommitment:
    description: Commitment for a particular resource (a Commitment is composed of one or more of these).
    properties:
      amount:
        description: 'The amount of the resource purchased (in a type-dependent unit, such as bytes). For vCPUs, this can just be an integer. For memory, this must be provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of memory per every vCPU.'
        format: int64
        type: string
      type:
        description: Type of resource for which this commitment applies. Possible values are VCPU and MEMORY
        enum:
          - MEMORY
          - UNSPECIFIED
          - VCPU
        type: string
    type: object
  ResourceGroupReference:
    properties:
      group:
        description: A URI referencing one of the instance groups listed in the backend service.
        type: string
    type: object
  Route:
    description: |-
      Represents a Route resource. A route specifies how certain packets should be handled by the network. Routes are associated with instances by tags and the set of routes for a particular instance is called its routing table.

      For each packet leaving an instance, the system searches that instance's routing table for a single best matching route. Routes match packets by destination IP address, preferring smaller or more specific ranges over larger ones. If there is a tie, the system selects the route with the smallest priority value. If there is still a tie, it uses the layer three and four packet headers to select just one of the remaining matching routes. The packet is then forwarded as specified by the nextHop field of the winning route - either to another instance destination, an instance gateway, or a Google Compute Engine-operated gateway.

      Packets that do not match any route in the sending instance's routing table are dropped.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      destRange:
        description: The destination range of outgoing packets that this route applies to. Only IPv4 is supported.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#route'
        description: '[Output Only] Type of this resource. Always compute#routes for Route resources.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: Fully-qualified URL of the network that this route applies to.
        type: string
      nextHopGateway:
        description: 'The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL:  projects/<project-id>/global/gateways/default-internet-gateway'
        type: string
      nextHopInstance:
        description: |-
          The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example:
          https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
        type: string
      nextHopIp:
        description: The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
        type: string
      nextHopNetwork:
        description: The URL of the local network if it should handle matching packets.
        type: string
      nextHopPeering:
        description: '[Output Only] The network peering name that should handle matching packets, which should conform to RFC1035.'
        type: string
      nextHopVpnTunnel:
        description: The URL to a VpnTunnel that should handle matching packets.
        type: string
      priority:
        description: 'The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.'
        format: uint32
        type: integer
      selfLink:
        description: '[Output Only] Server-defined fully-qualified URL for this resource.'
        type: string
      tags:
        description: A list of instance tags to which this route applies.
        items:
          type: string
        type: array
      warnings:
        description: '[Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.'
        items:
          properties:
            code:
              description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNREACHABLE
              type: string
            data:
              description: |-
                [Output Only] Metadata about this warning in key: value format. For example:
                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                    type: string
                  value:
                    description: '[Output Only] A warning data value corresponding to the key.'
                    type: string
                type: object
              type: array
            message:
              description: '[Output Only] A human-readable description of the warning code.'
              type: string
          type: object
        type: array
    type: object
  RouteList:
    description: Contains a list of Route resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Route resources.
        items:
          $ref: '#/definitions/Route'
        type: array
      kind:
        default: 'compute#routeList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  Router:
    description: Router resource.
    properties:
      bgp:
        $ref: '#/definitions/RouterBgp'
        description: BGP information specific to this router.
      bgpPeers:
        description: 'BGP information that needs to be configured into the routing stack to establish the BGP peering. It must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273.'
        items:
          $ref: '#/definitions/RouterBgpPeer'
        type: array
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      interfaces:
        description: 'Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP address and IP address range (e.g. ipRange), or both.'
        items:
          $ref: '#/definitions/RouterInterface'
        type: array
      kind:
        default: 'compute#router'
        description: '[Output Only] Type of resource. Always compute#router for routers.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: URI of the network to which this router belongs.
        type: string
      region:
        description: '[Output Only] URI of the region where the router resides.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
    type: object
  RouterAggregatedList:
    description: Contains a list of routers.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/RoutersScopedList'
          description: Name of the scope containing this set of routers.
        description: A list of Router resources.
        type: object
      kind:
        default: 'compute#routerAggregatedList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RouterBgp:
    properties:
      asn:
        description: 'Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.'
        format: uint32
        type: integer
    type: object
  RouterBgpPeer:
    properties:
      advertisedRoutePriority:
        description: 'The priority of routes advertised to this BGP peer. In the case where there is more than one matching route of maximum length, the routes with lowest priority value win.'
        format: uint32
        type: integer
      interfaceName:
        description: Name of the interface the BGP peer is associated with.
        type: string
      ipAddress:
        description: IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
        type: string
      name:
        description: Name of this BGP peer. The name must be 1-63 characters long and comply with RFC1035.
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      peerAsn:
        description: 'Peer BGP Autonomous System Number (ASN). For VPN use case, this value can be different for every tunnel.'
        format: uint32
        type: integer
      peerIpAddress:
        description: IP address of the BGP interface outside Google cloud. Only IPv4 is supported.
        type: string
    type: object
  RouterInterface:
    properties:
      ipRange:
        description: 'IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.'
        type: string
      linkedVpnTunnel:
        description: URI of the linked VPN tunnel. It must be in the same region as the router. Each interface can have at most one linked resource and it could either be a VPN Tunnel or an interconnect attachment.
        type: string
      name:
        description: Name of this interface entry. The name must be 1-63 characters long and comply with RFC1035.
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
    type: object
  RouterList:
    description: Contains a list of Router resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Router resources.
        items:
          $ref: '#/definitions/Router'
        type: array
      kind:
        default: 'compute#routerList'
        description: '[Output Only] Type of resource. Always compute#router for routers.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  RouterStatus:
    properties:
      bestRoutes:
        description: Best routes for this router's network.
        items:
          $ref: '#/definitions/Route'
        type: array
      bestRoutesForRouter:
        description: Best routes learned by this router.
        items:
          $ref: '#/definitions/Route'
        type: array
      bgpPeerStatus:
        items:
          $ref: '#/definitions/RouterStatusBgpPeerStatus'
        type: array
      network:
        description: URI of the network to which this router belongs.
        type: string
    type: object
  RouterStatusBgpPeerStatus:
    properties:
      advertisedRoutes:
        description: Routes that were advertised to the remote BGP peer
        items:
          $ref: '#/definitions/Route'
        type: array
      ipAddress:
        description: IP address of the local BGP interface.
        type: string
      linkedVpnTunnel:
        description: URL of the VPN tunnel that this BGP peer controls.
        type: string
      name:
        description: Name of this BGP peer. Unique within the Routers resource.
        type: string
      numLearnedRoutes:
        description: Number of routes learned from the remote BGP Peer.
        format: uint32
        type: integer
      peerIpAddress:
        description: IP address of the remote BGP interface.
        type: string
      state:
        description: BGP state as specified in RFC1771.
        type: string
      status:
        description: 'Status of the BGP peer: {UP, DOWN}'
        enum:
          - DOWN
          - UNKNOWN
          - UP
        type: string
      uptime:
        description: 'Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds'
        type: string
      uptimeSeconds:
        description: 'Time this session has been up, in seconds. Format: 145'
        type: string
    type: object
  RouterStatusResponse:
    properties:
      kind:
        default: 'compute#routerStatusResponse'
        description: Type of resource.
        type: string
      result:
        $ref: '#/definitions/RouterStatus'
    type: object
  RoutersPreviewResponse:
    properties:
      resource:
        $ref: '#/definitions/Router'
        description: Preview of given router.
    type: object
  RoutersScopedList:
    properties:
      routers:
        description: List of routers contained in this scope.
        items:
          $ref: '#/definitions/Router'
        type: array
      warning:
        description: Informational warning which replaces the list of routers when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  SSLHealthCheck:
    properties:
      port:
        description: The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
        format: int32
        type: integer
      portName:
        description: 'Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      request:
        description: 'The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.'
        type: string
      response:
        description: 'The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.'
        type: string
    type: object
  Scheduling:
    description: Sets the scheduling options for an Instance.
    properties:
      automaticRestart:
        description: |-
          Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.

          By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
        type: boolean
      onHostMaintenance:
        description: 'Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.'
        enum:
          - MIGRATE
          - TERMINATE
        type: string
      preemptible:
        description: 'Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.'
        type: boolean
    type: object
  SerialPortOutput:
    description: An instance's serial console output.
    properties:
      contents:
        description: '[Output Only] The contents of the console output.'
        type: string
      kind:
        default: 'compute#serialPortOutput'
        description: '[Output Only] Type of the resource. Always compute#serialPortOutput for serial port output.'
        type: string
      next:
        description: '[Output Only] The position of the next byte of content from the serial console output. Use this value in the next request as the start parameter.'
        format: int64
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
      start:
        description: 'The starting byte position of the output that was returned. This should match the start parameter sent with the request. If the serial console output exceeds the size of the buffer, older output will be overwritten by newer content and the start values will be mismatched.'
        format: int64
        type: string
    type: object
  ServiceAccount:
    description: A service account.
    properties:
      email:
        description: Email address of the service account.
        type: string
      scopes:
        description: The list of scopes to be made available for this service account.
        items:
          type: string
        type: array
    type: object
  Snapshot:
    description: A persistent disk snapshot resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      diskSizeGb:
        description: '[Output Only] Size of the snapshot, specified in GB.'
        format: int64
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#snapshot'
        description: '[Output Only] Type of the resource. Always compute#snapshot for Snapshot resources.'
        type: string
      labelFingerprint:
        description: |-
          A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.

          To see the latest fingerprint, make a get() request to retrieve a snapshot.
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty.
        type: object
      licenses:
        description: '[Output Only] A list of public visible licenses that apply to this snapshot. This can be because the original image had licenses attached (such as a Windows image).'
        items:
          type: string
        type: array
      name:
        description: 'Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      snapshotEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: |-
          Encrypts the snapshot using a customer-supplied encryption key.

          After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the image later For example, you must provide the encryption key when you create a disk from the encrypted snapshot in a future request.

          Customer-supplied encryption keys do not protect access to metadata of the disk.

          If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted using an automatically generated key and you do not need to provide a key to use the snapshot later.
      sourceDisk:
        description: '[Output Only] The source disk used to create this snapshot.'
        type: string
      sourceDiskEncryptionKey:
        $ref: '#/definitions/CustomerEncryptionKey'
        description: The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
      sourceDiskId:
        description: '[Output Only] The ID value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name.'
        type: string
      status:
        description: '[Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.'
        enum:
          - CREATING
          - DELETING
          - FAILED
          - READY
          - UPLOADING
        type: string
      storageBytes:
        description: '[Output Only] A size of the storage used by the snapshot. As snapshots share storage, this number is expected to change with snapshot creation/deletion.'
        format: int64
        type: string
      storageBytesStatus:
        description: '[Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.'
        enum:
          - UPDATING
          - UP_TO_DATE
        type: string
    type: object
  SnapshotList:
    description: Contains a list of Snapshot resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Snapshot resources.
        items:
          $ref: '#/definitions/Snapshot'
        type: array
      kind:
        default: 'compute#snapshotList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  SslCertificate:
    description: An SslCertificate resource. This resource provides a mechanism to upload an SSL key and certificate to the load balancer to serve secure connections from the user.
    properties:
      certificate:
        description: A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#sslCertificate'
        description: '[Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      privateKey:
        description: A write-only private key in PEM format. Only insert requests will include this field.
        type: string
      selfLink:
        description: '[Output only] Server-defined URL for the resource.'
        type: string
    type: object
  SslCertificateList:
    description: Contains a list of SslCertificate resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of SslCertificate resources.
        items:
          $ref: '#/definitions/SslCertificate'
        type: array
      kind:
        default: 'compute#sslCertificateList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  Subnetwork:
    description: A Subnetwork resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.
        type: string
      gatewayAddress:
        description: '[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork. This field can be set only at resource creation time.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      ipCidrRange:
        description: 'The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.'
        type: string
      kind:
        default: 'compute#subnetwork'
        description: '[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.'
        type: string
      name:
        description: 'The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: 'The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. Only networks that are in the distributed mode can have subnetworks. This field can be set only at resource creation time.'
        type: string
      privateIpGoogleAccess:
        description: Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.
        type: boolean
      region:
        description: URL of the region where the Subnetwork resides. This field can be set only at resource creation time.
        type: string
      secondaryIpRanges:
        description: An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges.
        items:
          $ref: '#/definitions/SubnetworkSecondaryRange'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
    type: object
  SubnetworkAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/SubnetworksScopedList'
          description: Name of the scope containing this set of Subnetworks.
        description: A list of SubnetworksScopedList resources.
        type: object
      kind:
        default: 'compute#subnetworkAggregatedList'
        description: '[Output Only] Type of resource. Always compute#subnetworkAggregatedList for aggregated lists of subnetworks.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  SubnetworkList:
    description: Contains a list of Subnetwork resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Subnetwork resources.
        items:
          $ref: '#/definitions/Subnetwork'
        type: array
      kind:
        default: 'compute#subnetworkList'
        description: '[Output Only] Type of resource. Always compute#subnetworkList for lists of subnetworks.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  SubnetworkSecondaryRange:
    description: Represents a secondary IP range of a subnetwork.
    properties:
      ipCidrRange:
        description: The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.
        type: string
      rangeName:
        description: 'The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.'
        type: string
    type: object
  SubnetworksExpandIpCidrRangeRequest:
    properties:
      ipCidrRange:
        description: The IP (in CIDR format or netmask) of internal addresses that are legal on this Subnetwork. This range should be disjoint from other subnetworks within this network. This range can only be larger than (i.e. a superset of) the range previously defined before the update.
        type: string
    type: object
  SubnetworksScopedList:
    properties:
      subnetworks:
        description: List of subnetworks contained in this scope.
        items:
          $ref: '#/definitions/Subnetwork'
        type: array
      warning:
        description: An informational warning that appears when the list of addresses is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  SubnetworksSetPrivateIpGoogleAccessRequest:
    properties:
      privateIpGoogleAccess:
        type: boolean
    type: object
  TCPHealthCheck:
    properties:
      port:
        description: The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
        format: int32
        type: integer
      portName:
        description: 'Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      request:
        description: 'The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.'
        type: string
      response:
        description: 'The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.'
        type: string
    type: object
  Tags:
    description: A set of instance tags.
    properties:
      fingerprint:
        description: |-
          Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.

          To see the latest fingerprint, make get() request to the instance.
        format: byte
        type: string
      items:
        description: 'An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.'
        items:
          type: string
        type: array
    type: object
  TargetHttpProxy:
    description: A TargetHttpProxy resource. This resource defines an HTTP proxy.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#targetHttpProxy'
        description: '[Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      urlMap:
        description: URL to the UrlMap resource that defines the mapping from URL to the BackendService.
        type: string
    type: object
  TargetHttpProxyList:
    description: A list of TargetHttpProxy resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetHttpProxy resources.
        items:
          $ref: '#/definitions/TargetHttpProxy'
        type: array
      kind:
        default: 'compute#targetHttpProxyList'
        description: 'Type of resource. Always compute#targetHttpProxyList for lists of target HTTP proxies.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetHttpsProxiesSetSslCertificatesRequest:
    properties:
      sslCertificates:
        description: New set of SslCertificate resources to associate with this TargetHttpsProxy resource. Currently exactly one SslCertificate resource must be specified.
        items:
          type: string
        type: array
    type: object
  TargetHttpsProxy:
    description: A TargetHttpsProxy resource. This resource defines an HTTPS proxy.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#targetHttpsProxy'
        description: '[Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sslCertificates:
        description: 'URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.'
        items:
          type: string
        type: array
      urlMap:
        description: |-
          A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map:  
          - https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map 
          - projects/project/global/urlMaps/url-map 
          - global/urlMaps/url-map
        type: string
    type: object
  TargetHttpsProxyList:
    description: Contains a list of TargetHttpsProxy resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetHttpsProxy resources.
        items:
          $ref: '#/definitions/TargetHttpsProxy'
        type: array
      kind:
        default: 'compute#targetHttpsProxyList'
        description: 'Type of resource. Always compute#targetHttpsProxyList for lists of target HTTPS proxies.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetInstance:
    description: A TargetInstance resource. This resource defines an endpoint instance that terminates traffic of certain protocols.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      instance:
        description: |-
          A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: 
          - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 
          - projects/project/zones/zone/instances/instance 
          - zones/zone/instances/instance
        type: string
      kind:
        default: 'compute#targetInstance'
        description: '[Output Only] The type of the resource. Always compute#targetInstance for target instances.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      natPolicy:
        description: NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
        enum:
          - NO_NAT
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      zone:
        description: '[Output Only] URL of the zone where the target instance resides.'
        type: string
    type: object
  TargetInstanceAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/TargetInstancesScopedList'
          description: Name of the scope containing this set of target instances.
        description: A list of TargetInstance resources.
        type: object
      kind:
        default: 'compute#targetInstanceAggregatedList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetInstanceList:
    description: Contains a list of TargetInstance resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetInstance resources.
        items:
          $ref: '#/definitions/TargetInstance'
        type: array
      kind:
        default: 'compute#targetInstanceList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetInstancesScopedList:
    properties:
      targetInstances:
        description: List of target instances contained in this scope.
        items:
          $ref: '#/definitions/TargetInstance'
        type: array
      warning:
        description: Informational warning which replaces the list of addresses when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  TargetPool:
    description: 'A TargetPool resource. This resource defines a pool of instances, an associated HttpHealthCheck resource, and the fallback target pool.'
    properties:
      backupPool:
        description: |-
          This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1].

          backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool.

          In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
        type: string
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      failoverRatio:
        description: |-
          This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].

          If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.

          In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
        format: float
        type: number
      healthChecks:
        description: The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. An empty list means all member instances will be considered healthy at all times. Only HttpHealthChecks are supported. Only one health check may be specified.
        items:
          type: string
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      instances:
        description: A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool.
        items:
          type: string
        type: array
      kind:
        default: 'compute#targetPool'
        description: '[Output Only] Type of the resource. Always compute#targetPool for target pools.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      region:
        description: '[Output Only] URL of the region where the target pool resides.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sessionAffinity:
        description: |-
          Sesssion affinity option, must be one of the following values:
          NONE: Connections from the same client IP may go to any instance in the pool.
          CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy.
          CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
        enum:
          - CLIENT_IP
          - CLIENT_IP_PORT_PROTO
          - CLIENT_IP_PROTO
          - GENERATED_COOKIE
          - NONE
        type: string
    type: object
  TargetPoolAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/TargetPoolsScopedList'
          description: Name of the scope containing this set of target pools.
        description: A list of TargetPool resources.
        type: object
      kind:
        default: 'compute#targetPoolAggregatedList'
        description: '[Output Only] Type of resource. Always compute#targetPoolAggregatedList for aggregated lists of target pools.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetPoolInstanceHealth:
    properties:
      healthStatus:
        items:
          $ref: '#/definitions/HealthStatus'
        type: array
      kind:
        default: 'compute#targetPoolInstanceHealth'
        description: '[Output Only] Type of resource. Always compute#targetPoolInstanceHealth when checking the health of an instance.'
        type: string
    type: object
  TargetPoolList:
    description: Contains a list of TargetPool resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetPool resources.
        items:
          $ref: '#/definitions/TargetPool'
        type: array
      kind:
        default: 'compute#targetPoolList'
        description: '[Output Only] Type of resource. Always compute#targetPoolList for lists of target pools.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetPoolsAddHealthCheckRequest:
    properties:
      healthChecks:
        description: The HttpHealthCheck to add to the target pool.
        items:
          $ref: '#/definitions/HealthCheckReference'
        type: array
    type: object
  TargetPoolsAddInstanceRequest:
    properties:
      instances:
        description: |-
          A full or partial URL to an instance to add to this target pool. This can be a full or partial URL. For example, the following are valid URLs:  
          - https://www.googleapis.com/compute/v1/projects/project-id/zones/zone/instances/instance-name 
          - projects/project-id/zones/zone/instances/instance-name 
          - zones/zone/instances/instance-name
        items:
          $ref: '#/definitions/InstanceReference'
        type: array
    type: object
  TargetPoolsRemoveHealthCheckRequest:
    properties:
      healthChecks:
        description: |-
          Health check URL to be removed. This can be a full or valid partial URL. For example, the following are valid URLs:  
          - https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-check 
          - projects/project/global/httpHealthChecks/health-check 
          - global/httpHealthChecks/health-check
        items:
          $ref: '#/definitions/HealthCheckReference'
        type: array
    type: object
  TargetPoolsRemoveInstanceRequest:
    properties:
      instances:
        description: URLs of the instances to be removed from target pool.
        items:
          $ref: '#/definitions/InstanceReference'
        type: array
    type: object
  TargetPoolsScopedList:
    properties:
      targetPools:
        description: List of target pools contained in this scope.
        items:
          $ref: '#/definitions/TargetPool'
        type: array
      warning:
        description: Informational warning which replaces the list of addresses when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  TargetReference:
    properties:
      target:
        type: string
    type: object
  TargetSslProxiesSetBackendServiceRequest:
    properties:
      service:
        description: The URL of the new BackendService resource for the targetSslProxy.
        type: string
    type: object
  TargetSslProxiesSetProxyHeaderRequest:
    properties:
      proxyHeader:
        description: The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
        enum:
          - NONE
          - PROXY_V1
        type: string
    type: object
  TargetSslProxiesSetSslCertificatesRequest:
    properties:
      sslCertificates:
        description: New set of URLs to SslCertificate resources to associate with this TargetSslProxy. Currently exactly one ssl certificate must be specified.
        items:
          type: string
        type: array
    type: object
  TargetSslProxy:
    description: A TargetSslProxy resource. This resource defines an SSL proxy.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#targetSslProxy'
        description: '[Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      service:
        description: URL to the BackendService resource.
        type: string
      sslCertificates:
        description: URLs to SslCertificate resources that are used to authenticate connections to Backends. Currently exactly one SSL certificate must be specified.
        items:
          type: string
        type: array
    type: object
  TargetSslProxyList:
    description: Contains a list of TargetSslProxy resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetSslProxy resources.
        items:
          $ref: '#/definitions/TargetSslProxy'
        type: array
      kind:
        default: 'compute#targetSslProxyList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetTcpProxiesSetBackendServiceRequest:
    properties:
      service:
        description: The URL of the new BackendService resource for the targetTcpProxy.
        type: string
    type: object
  TargetTcpProxiesSetProxyHeaderRequest:
    properties:
      proxyHeader:
        description: The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
        enum:
          - NONE
          - PROXY_V1
        type: string
    type: object
  TargetTcpProxy:
    description: A TargetTcpProxy resource. This resource defines a TCP proxy.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#targetTcpProxy'
        description: '[Output Only] Type of the resource. Always compute#targetTcpProxy for target TCP proxies.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      proxyHeader:
        description: 'Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.'
        enum:
          - NONE
          - PROXY_V1
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      service:
        description: URL to the BackendService resource.
        type: string
    type: object
  TargetTcpProxyList:
    description: Contains a list of TargetTcpProxy resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetTcpProxy resources.
        items:
          $ref: '#/definitions/TargetTcpProxy'
        type: array
      kind:
        default: 'compute#targetTcpProxyList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetVpnGateway:
    description: Represents a Target VPN gateway resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      forwardingRules:
        description: '[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated to a VPN gateway.'
        items:
          type: string
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#targetVpnGateway'
        description: '[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      network:
        description: URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
        type: string
      region:
        description: '[Output Only] URL of the region where the target VPN gateway resides.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      status:
        description: '[Output Only] The status of the VPN gateway.'
        enum:
          - CREATING
          - DELETING
          - FAILED
          - READY
        type: string
      tunnels:
        description: '[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using compute.vpntunnels.insert method and associated to a VPN gateway.'
        items:
          type: string
        type: array
    type: object
  TargetVpnGatewayAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/TargetVpnGatewaysScopedList'
          description: '[Output Only] Name of the scope containing this set of target VPN gateways.'
        description: A list of TargetVpnGateway resources.
        type: object
      kind:
        default: 'compute#targetVpnGatewayAggregatedList'
        description: '[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetVpnGatewayList:
    description: Contains a list of TargetVpnGateway resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of TargetVpnGateway resources.
        items:
          $ref: '#/definitions/TargetVpnGateway'
        type: array
      kind:
        default: 'compute#targetVpnGatewayList'
        description: '[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  TargetVpnGatewaysScopedList:
    properties:
      targetVpnGateways:
        description: '[Output Only] List of target vpn gateways contained in this scope.'
        items:
          $ref: '#/definitions/TargetVpnGateway'
        type: array
      warning:
        description: '[Output Only] Informational warning which replaces the list of addresses when the list is empty.'
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  TestFailure:
    properties:
      actualService:
        type: string
      expectedService:
        type: string
      host:
        type: string
      path:
        type: string
    type: object
  UrlMap:
    description: 'A UrlMap resource. This resource defines the mapping from URL to the BackendService resource, based on the "longest-match" of the URL''s host and path.'
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      defaultService:
        description: The URL of the BackendService resource if none of the hostRules match.
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      fingerprint:
        description: Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.
        format: byte
        type: string
      hostRules:
        description: The list of HostRules to use against the URL.
        items:
          $ref: '#/definitions/HostRule'
        type: array
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#urlMap'
        description: '[Output Only] Type of the resource. Always compute#urlMaps for url maps.'
        type: string
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      pathMatchers:
        description: The list of named PathMatchers to use against the URL.
        items:
          $ref: '#/definitions/PathMatcher'
        type: array
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      tests:
        description: The list of expected URL mappings. Request to update this UrlMap will succeed only if all of the test cases pass.
        items:
          $ref: '#/definitions/UrlMapTest'
        type: array
    type: object
  UrlMapList:
    description: Contains a list of UrlMap resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of UrlMap resources.
        items:
          $ref: '#/definitions/UrlMap'
        type: array
      kind:
        default: 'compute#urlMapList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  UrlMapReference:
    properties:
      urlMap:
        type: string
    type: object
  UrlMapTest:
    description: Message for the expected URL mappings.
    properties:
      description:
        description: Description of this test case.
        type: string
      host:
        description: Host portion of the URL.
        type: string
      path:
        description: Path portion of the URL.
        type: string
      service:
        description: Expected BackendService resource the given URL should be mapped to.
        type: string
    type: object
  UrlMapValidationResult:
    description: Message representing the validation result for a UrlMap.
    properties:
      loadErrors:
        items:
          type: string
        type: array
      loadSucceeded:
        description: 'Whether the given UrlMap can be successfully loaded. If false, ''loadErrors'' indicates the reasons.'
        type: boolean
      testFailures:
        items:
          $ref: '#/definitions/TestFailure'
        type: array
      testPassed:
        description: 'If successfully loaded, this field indicates whether the test passed. If false, ''testFailures''s indicate the reason of failure.'
        type: boolean
    type: object
  UrlMapsValidateRequest:
    properties:
      resource:
        $ref: '#/definitions/UrlMap'
        description: Content of the UrlMap to be validated.
    type: object
  UrlMapsValidateResponse:
    properties:
      result:
        $ref: '#/definitions/UrlMapValidationResult'
    type: object
  UsageExportLocation:
    description: The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and report_name prefix.
    properties:
      bucketName:
        description: 'The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This can either be the bucket name by itself, such as example-bucket, or the bucket name with gs:// or https://storage.googleapis.com/ in front of it, such as gs://example-bucket.'
        type: string
      reportNamePrefix:
        description: 'An optional prefix for the name of the usage report object stored in bucketName. If not supplied, defaults to usage. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to Cloud Storage object naming conventions.'
        type: string
    type: object
  VpnTunnel:
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      description:
        description: An optional description of this resource. Provide this property when you create the resource.
        type: string
      detailedStatus:
        description: '[Output Only] Detailed status message for the VPN tunnel.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      ikeVersion:
        description: IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.
        format: int32
        type: integer
      kind:
        default: 'compute#vpnTunnel'
        description: '[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.'
        type: string
      localTrafficSelector:
        description: 'Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.'
        items:
          type: string
        type: array
      name:
        description: 'Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
        pattern: '[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?'
        type: string
      peerIp:
        description: IP address of the peer VPN gateway. Only IPv4 is supported.
        type: string
      region:
        description: '[Output Only] URL of the region where the VPN tunnel resides.'
        type: string
      remoteTrafficSelector:
        description: 'Remote traffic selectors to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.'
        items:
          type: string
        type: array
      router:
        description: URL of router resource to be used for dynamic routing.
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      sharedSecret:
        description: Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
        type: string
      sharedSecretHash:
        description: Hash of the shared secret.
        type: string
      status:
        description: '[Output Only] The status of the VPN tunnel.'
        enum:
          - ALLOCATING_RESOURCES
          - AUTHORIZATION_ERROR
          - DEPROVISIONING
          - ESTABLISHED
          - FAILED
          - FIRST_HANDSHAKE
          - NEGOTIATION_FAILURE
          - NETWORK_ERROR
          - NO_INCOMING_PACKETS
          - PROVISIONING
          - REJECTED
          - WAITING_FOR_FULL_CONFIG
        type: string
      targetVpnGateway:
        description: URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
        type: string
    type: object
  VpnTunnelAggregatedList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        additionalProperties:
          $ref: '#/definitions/VpnTunnelsScopedList'
          description: Name of the scope containing this set of vpn tunnels.
        description: A list of VpnTunnelsScopedList resources.
        type: object
      kind:
        default: 'compute#vpnTunnelAggregatedList'
        description: '[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  VpnTunnelList:
    description: Contains a list of VpnTunnel resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of VpnTunnel resources.
        items:
          $ref: '#/definitions/VpnTunnel'
        type: array
      kind:
        default: 'compute#vpnTunnelList'
        description: '[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  VpnTunnelsScopedList:
    properties:
      vpnTunnels:
        description: List of vpn tunnels contained in this scope.
        items:
          $ref: '#/definitions/VpnTunnel'
        type: array
      warning:
        description: Informational warning which replaces the list of addresses when the list is empty.
        properties:
          code:
            description: '[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.'
            enum:
              - CLEANUP_FAILED
              - DEPRECATED_RESOURCE_USED
              - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
              - FIELD_VALUE_OVERRIDEN
              - INJECTED_KERNELS_DEPRECATED
              - NEXT_HOP_ADDRESS_NOT_ASSIGNED
              - NEXT_HOP_CANNOT_IP_FORWARD
              - NEXT_HOP_INSTANCE_NOT_FOUND
              - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
              - NEXT_HOP_NOT_RUNNING
              - NOT_CRITICAL_ERROR
              - NO_RESULTS_ON_PAGE
              - REQUIRED_TOS_AGREEMENT
              - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
              - RESOURCE_NOT_DELETED
              - SINGLE_INSTANCE_PROPERTY_TEMPLATE
              - UNREACHABLE
            type: string
          data:
            description: |-
              [Output Only] Metadata about this warning in key: value format. For example:
              "data": [ { "key": "scope", "value": "zones/us-east1-d" }
            items:
              properties:
                key:
                  description: '[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).'
                  type: string
                value:
                  description: '[Output Only] A warning data value corresponding to the key.'
                  type: string
              type: object
            type: array
          message:
            description: '[Output Only] A human-readable description of the warning code.'
            type: string
        type: object
    type: object
  XpnHostList:
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: '[Output Only] A list of shared VPC host project URLs.'
        items:
          $ref: '#/definitions/Project'
        type: array
      kind:
        default: 'compute#xpnHostList'
        description: '[Output Only] Type of resource. Always compute#xpnHostList for lists of shared VPC hosts.'
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  XpnResourceId:
    description: Service resource (a.k.a service project) ID.
    properties:
      id:
        description: 'The ID of the service resource. In the case of projects, this field matches the project ID (e.g., my-project), not the project number (e.g., 12345678).'
        type: string
      type:
        description: The type of the service resource.
        enum:
          - PROJECT
          - XPN_RESOURCE_TYPE_UNSPECIFIED
        type: string
    type: object
  Zone:
    description: A Zone resource.
    properties:
      creationTimestamp:
        description: '[Output Only] Creation timestamp in RFC3339 text format.'
        type: string
      deprecated:
        $ref: '#/definitions/DeprecationStatus'
        description: '[Output Only] The deprecation status associated with this zone.'
      description:
        description: '[Output Only] Textual description of the resource.'
        type: string
      id:
        description: '[Output Only] The unique identifier for the resource. This identifier is defined by the server.'
        format: uint64
        type: string
      kind:
        default: 'compute#zone'
        description: '[Output Only] Type of the resource. Always compute#zone for zones.'
        type: string
      name:
        description: '[Output Only] Name of the resource.'
        type: string
      region:
        description: '[Output Only] Full URL reference to the region which hosts the zone.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for the resource.'
        type: string
      status:
        description: '[Output Only] Status of the zone, either UP or DOWN.'
        enum:
          - DOWN
          - UP
        type: string
    type: object
  ZoneList:
    description: Contains a list of zone resources.
    properties:
      id:
        description: '[Output Only] Unique identifier for the resource; defined by the server.'
        type: string
      items:
        description: A list of Zone resources.
        items:
          $ref: '#/definitions/Zone'
        type: array
      kind:
        default: 'compute#zoneList'
        description: Type of resource.
        type: string
      nextPageToken:
        description: '[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results.'
        type: string
      selfLink:
        description: '[Output Only] Server-defined URL for this resource.'
        type: string
    type: object
  ZoneSetLabelsRequest:
    properties:
      labelFingerprint:
        description: 'The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint.'
        format: byte
        type: string
      labels:
        additionalProperties:
          type: string
        description: The labels to set for this resource.
        type: object
    type: object
