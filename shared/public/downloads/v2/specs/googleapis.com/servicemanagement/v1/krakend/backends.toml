[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-operations"
  url_pattern = "/v1/operations"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  query_string_params = ["filter", "name", "pageSize", "pageToken"]
  whitelist = ["nextPageToken", "operations"]
  concurrent_calls = 1
  [backends.mapping]
    nextPageToken = "nextPageToken"
    operations = "operations"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services"
  url_pattern = "/v1/services"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  query_string_params = ["consumerId", "pageSize", "pageToken", "producerProjectId"]
  whitelist = ["nextPageToken", "services"]
  concurrent_calls = 1
  [backends.mapping]
    nextPageToken = "nextPageToken"
    services = "services"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename"
  url_pattern = "/v1/services/{serviceName}"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  whitelist = ["producerProjectId", "serviceName"]
  concurrent_calls = 1
  [backends.mapping]
    producerProjectId = "producerProjectId"
    serviceName = "serviceName"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-config"
  url_pattern = "/v1/services/{serviceName}/config"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  query_string_params = ["configId", "view"]
  whitelist = ["apis", "configVersion", "endpoints", "enums", "id", "logs", "metrics", "monitoredResources", "name", "producerProjectId", "systemTypes", "title", "types"]
  concurrent_calls = 1
  [backends.mapping]
    apis = "apis"
    configVersion = "configVersion"
    endpoints = "endpoints"
    enums = "enums"
    id = "id"
    logs = "logs"
    metrics = "metrics"
    monitoredResources = "monitoredResources"
    name = "name"
    producerProjectId = "producerProjectId"
    systemTypes = "systemTypes"
    title = "title"
    types = "types"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-configs"
  url_pattern = "/v1/services/{serviceName}/configs"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  query_string_params = ["pageSize", "pageToken"]
  whitelist = ["nextPageToken", "serviceConfigs"]
  concurrent_calls = 1
  [backends.mapping]
    nextPageToken = "nextPageToken"
    serviceConfigs = "serviceConfigs"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-configs-configid"
  url_pattern = "/v1/services/{serviceName}/configs/{configId}"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["configId", "serviceName"]
  query_string_params = ["view"]
  whitelist = ["apis", "configVersion", "endpoints", "enums", "id", "logs", "metrics", "monitoredResources", "name", "producerProjectId", "systemTypes", "title", "types"]
  concurrent_calls = 1
  [backends.mapping]
    apis = "apis"
    configVersion = "configVersion"
    endpoints = "endpoints"
    enums = "enums"
    id = "id"
    logs = "logs"
    metrics = "metrics"
    monitoredResources = "monitoredResources"
    name = "name"
    producerProjectId = "producerProjectId"
    systemTypes = "systemTypes"
    title = "title"
    types = "types"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-configs-submit"
  url_pattern = "/v1/services/{serviceName}/configs:submit"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  whitelist = ["done", "metadata", "name", "response"]
  concurrent_calls = 1
  [backends.mapping]
    done = "done"
    metadata = "metadata"
    name = "name"
    response = "response"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-rollouts"
  url_pattern = "/v1/services/{serviceName}/rollouts"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  query_string_params = ["filter", "pageSize", "pageToken"]
  whitelist = ["nextPageToken", "rollouts"]
  concurrent_calls = 1
  [backends.mapping]
    nextPageToken = "nextPageToken"
    rollouts = "rollouts"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-rollouts-rolloutid"
  url_pattern = "/v1/services/{serviceName}/rollouts/{rolloutId}"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["rolloutId", "serviceName"]
  whitelist = ["createTime", "createdBy", "rolloutId", "serviceName", "status"]
  concurrent_calls = 1
  [backends.mapping]
    createTime = "createTime"
    createdBy = "createdBy"
    rolloutId = "rolloutId"
    serviceName = "serviceName"
    status = "status"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-disable"
  url_pattern = "/v1/services/{serviceName}:disable"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  whitelist = ["done", "metadata", "name", "response"]
  concurrent_calls = 1
  [backends.mapping]
    done = "done"
    metadata = "metadata"
    name = "name"
    response = "response"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-enable"
  url_pattern = "/v1/services/{serviceName}:enable"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  whitelist = ["done", "metadata", "name", "response"]
  concurrent_calls = 1
  [backends.mapping]
    done = "done"
    metadata = "metadata"
    name = "name"
    response = "response"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-servicename-undelete"
  url_pattern = "/v1/services/{serviceName}:undelete"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["serviceName"]
  whitelist = ["done", "metadata", "name", "response"]
  concurrent_calls = 1
  [backends.mapping]
    done = "done"
    metadata = "metadata"
    name = "name"
    response = "response"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-services-generateconfigreport"
  url_pattern = "/v1/services:generateConfigReport"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  whitelist = ["changeReports", "diagnostics", "id", "serviceName"]
  concurrent_calls = 1
  [backends.mapping]
    changeReports = "changeReports"
    diagnostics = "diagnostics"
    id = "id"
    serviceName = "serviceName"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-name"
  url_pattern = "/v1/{name}"
  method = "GET"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["name"]
  whitelist = ["done", "metadata", "name", "response"]
  concurrent_calls = 1
  [backends.mapping]
    done = "done"
    metadata = "metadata"
    name = "name"
    response = "response"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-resource-getiampolicy"
  url_pattern = "/v1/{resource}:getIamPolicy"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["resource"]
  whitelist = ["auditConfigs", "bindings", "etag", "iamOwned", "version"]
  concurrent_calls = 1
  [backends.mapping]
    auditConfigs = "auditConfigs"
    bindings = "bindings"
    etag = "etag"
    iamOwned = "iamOwned"
    version = "version"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-resource-setiampolicy"
  url_pattern = "/v1/{resource}:setIamPolicy"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["resource"]
  whitelist = ["auditConfigs", "bindings", "etag", "iamOwned", "version"]
  concurrent_calls = 1
  [backends.mapping]
    auditConfigs = "auditConfigs"
    bindings = "bindings"
    etag = "etag"
    iamOwned = "iamOwned"
    version = "version"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "google-service-management-v1"
  slug = "google-service-management-v1-v1-resource-testiampermissions"
  url_pattern = "/v1/{resource}:testIamPermissions"
  method = "POST"
  host = ["https://servicemanagement.googleapis.com"]
  url_keys = ["resource"]
  whitelist = ["permissions"]
  concurrent_calls = 1
  [backends.mapping]
    permissions = "permissions"
  [backends.extra_config]
    hosts = ["https://servicemanagement.googleapis.com"]
    schemes = ["https"]
