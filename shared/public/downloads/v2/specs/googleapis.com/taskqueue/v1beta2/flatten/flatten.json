{
	"basePath": "/taskqueue/v1beta2/projects",
	"definitions.Task.properties.enqueueTimestamp.description": "Time (in seconds since the epoch) at which the task was enqueued.",
	"definitions.Task.properties.enqueueTimestamp.format": "int64",
	"definitions.Task.properties.enqueueTimestamp.type": "string",
	"definitions.Task.properties.id.description": "Name of the task.",
	"definitions.Task.properties.id.type": "string",
	"definitions.Task.properties.kind.default": "taskqueues#task",
	"definitions.Task.properties.kind.description": "The kind of object returned, in this case set to task.",
	"definitions.Task.properties.kind.type": "string",
	"definitions.Task.properties.leaseTimestamp.description": "Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.",
	"definitions.Task.properties.leaseTimestamp.format": "int64",
	"definitions.Task.properties.leaseTimestamp.type": "string",
	"definitions.Task.properties.payloadBase64.description": "A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.",
	"definitions.Task.properties.payloadBase64.type": "string",
	"definitions.Task.properties.queueName.description": "Name of the queue that the task is in.",
	"definitions.Task.properties.queueName.type": "string",
	"definitions.Task.properties.retry_count.description": "The number of leases applied to this task.",
	"definitions.Task.properties.retry_count.format": "int32",
	"definitions.Task.properties.retry_count.type": "integer",
	"definitions.Task.properties.tag.description": "Tag for the task, could be used later to lease tasks grouped by a specific tag.",
	"definitions.Task.properties.tag.type": "string",
	"definitions.Task.type": "object",
	"definitions.TaskQueue.properties.acl.description": "ACLs that are applicable to this TaskQueue object.",
	"definitions.TaskQueue.properties.acl.properties.adminEmails.description": "Email addresses of users who are \"admins\" of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.",
	"definitions.TaskQueue.properties.acl.properties.adminEmails.items.type": "string",
	"definitions.TaskQueue.properties.acl.properties.adminEmails.type": "array",
	"definitions.TaskQueue.properties.acl.properties.consumerEmails.description": "Email addresses of users who can \"consume\" tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.",
	"definitions.TaskQueue.properties.acl.properties.consumerEmails.items.type": "string",
	"definitions.TaskQueue.properties.acl.properties.consumerEmails.type": "array",
	"definitions.TaskQueue.properties.acl.properties.producerEmails.description": "Email addresses of users who can \"produce\" tasks into the TaskQueue. This means they can Insert tasks into the queue.",
	"definitions.TaskQueue.properties.acl.properties.producerEmails.items.type": "string",
	"definitions.TaskQueue.properties.acl.properties.producerEmails.type": "array",
	"definitions.TaskQueue.properties.acl.type": "object",
	"definitions.TaskQueue.properties.id.description": "Name of the taskqueue.",
	"definitions.TaskQueue.properties.id.type": "string",
	"definitions.TaskQueue.properties.kind.default": "taskqueues#taskqueue",
	"definitions.TaskQueue.properties.kind.description": "The kind of REST object returned, in this case taskqueue.",
	"definitions.TaskQueue.properties.kind.type": "string",
	"definitions.TaskQueue.properties.maxLeases.description": "The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.",
	"definitions.TaskQueue.properties.maxLeases.format": "int32",
	"definitions.TaskQueue.properties.maxLeases.type": "integer",
	"definitions.TaskQueue.properties.stats.description": "Statistics for the TaskQueue object in question.",
	"definitions.TaskQueue.properties.stats.properties.leasedLastHour.description": "Number of tasks leased in the last hour.",
	"definitions.TaskQueue.properties.stats.properties.leasedLastHour.format": "int64",
	"definitions.TaskQueue.properties.stats.properties.leasedLastHour.type": "string",
	"definitions.TaskQueue.properties.stats.properties.leasedLastMinute.description": "Number of tasks leased in the last minute.",
	"definitions.TaskQueue.properties.stats.properties.leasedLastMinute.format": "int64",
	"definitions.TaskQueue.properties.stats.properties.leasedLastMinute.type": "string",
	"definitions.TaskQueue.properties.stats.properties.oldestTask.description": "The timestamp (in seconds since the epoch) of the oldest unfinished task.",
	"definitions.TaskQueue.properties.stats.properties.oldestTask.format": "int64",
	"definitions.TaskQueue.properties.stats.properties.oldestTask.type": "string",
	"definitions.TaskQueue.properties.stats.properties.totalTasks.description": "Number of tasks in the queue.",
	"definitions.TaskQueue.properties.stats.properties.totalTasks.format": "int32",
	"definitions.TaskQueue.properties.stats.properties.totalTasks.type": "integer",
	"definitions.TaskQueue.properties.stats.type": "object",
	"definitions.TaskQueue.type": "object",
	"definitions.Tasks.properties.items.description": "The actual list of tasks returned as a result of the lease operation.",
	"definitions.Tasks.properties.items.items.$ref": "#/definitions/Task",
	"definitions.Tasks.properties.items.type": "array",
	"definitions.Tasks.properties.kind.default": "taskqueue#tasks",
	"definitions.Tasks.properties.kind.description": "The kind of object returned, a list of tasks.",
	"definitions.Tasks.properties.kind.type": "string",
	"definitions.Tasks.type": "object",
	"definitions.Tasks2.properties.items.description": "The actual list of tasks currently active in the TaskQueue.",
	"definitions.Tasks2.properties.items.items.$ref": "#/definitions/Task",
	"definitions.Tasks2.properties.items.type": "array",
	"definitions.Tasks2.properties.kind.default": "taskqueues#tasks",
	"definitions.Tasks2.properties.kind.description": "The kind of object returned, a list of tasks.",
	"definitions.Tasks2.properties.kind.type": "string",
	"definitions.Tasks2.type": "object",
	"externalDocs.url": "https://developers.google.com/appengine/docs/python/taskqueue/rest",
	"host": "www.googleapis.com",
	"info.contact.name": "Google",
	"info.contact.url": "https://google.com",
	"info.description": "Accesses a Google App Engine Pull Task Queue over REST.",
	"info.title": "TaskQueue",
	"info.version": "v1beta2",
	"info.x-apiClientRegistration.url": "https://console.developers.google.com",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.6.0",
	"info.x-origin[0].format": "google",
	"info.x-origin[0].url": "https://www.googleapis.com/discovery/v1/apis/taskqueue/v1beta2/rest",
	"info.x-origin[0].version": "v1",
	"info.x-preferred": true,
	"info.x-providerName": "googleapis.com",
	"info.x-serviceName": "taskqueue",
	"parameters.alt.default": "json",
	"parameters.alt.description": "Data format for the response.",
	"parameters.alt.enum.length": 1,
	"parameters.alt.enum[0]": "json",
	"parameters.alt.in": "query",
	"parameters.alt.name": "alt",
	"parameters.alt.type": "string",
	"parameters.fields.description": "Selector specifying which fields to include in a partial response.",
	"parameters.fields.in": "query",
	"parameters.fields.name": "fields",
	"parameters.fields.type": "string",
	"parameters.key.description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
	"parameters.key.in": "query",
	"parameters.key.name": "key",
	"parameters.key.type": "string",
	"parameters.oauth_token.description": "OAuth 2.0 token for the current user.",
	"parameters.oauth_token.in": "query",
	"parameters.oauth_token.name": "oauth_token",
	"parameters.oauth_token.type": "string",
	"parameters.prettyPrint.default": true,
	"parameters.prettyPrint.description": "Returns response with indentations and line breaks.",
	"parameters.prettyPrint.in": "query",
	"parameters.prettyPrint.name": "prettyPrint",
	"parameters.prettyPrint.type": "boolean",
	"parameters.quotaUser.description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
	"parameters.quotaUser.in": "query",
	"parameters.quotaUser.name": "quotaUser",
	"parameters.quotaUser.type": "string",
	"parameters.userIp.description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
	"parameters.userIp.in": "query",
	"parameters.userIp.name": "userIp",
	"parameters.userIp.type": "string",
	"paths./{project}/taskqueues/{taskqueue}.get.description": "Get detailed information about a TaskQueue.",
	"paths./{project}/taskqueues/{taskqueue}.get.operationId": "taskqueue.taskqueues.get",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters.length": 3,
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[1].description": "The id of the taskqueue to get the properties of.",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[2].description": "Whether to get stats. Optional.",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[2].in": "query",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[2].name": "getStats",
	"paths./{project}/taskqueues/{taskqueue}.get.parameters[2].type": "boolean",
	"paths./{project}/taskqueues/{taskqueue}.get.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}.get.responses.200.schema.$ref": "#/definitions/TaskQueue",
	"paths./{project}/taskqueues/{taskqueue}.get.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}.get.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}.get.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}.get.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}.get.tags[0]": "taskqueues",
	"paths./{project}/taskqueues/{taskqueue}.parameters.length": 7,
	"paths./{project}/taskqueues/{taskqueue}.parameters[0].$ref": "#/parameters/alt",
	"paths./{project}/taskqueues/{taskqueue}.parameters[1].$ref": "#/parameters/fields",
	"paths./{project}/taskqueues/{taskqueue}.parameters[2].$ref": "#/parameters/key",
	"paths./{project}/taskqueues/{taskqueue}.parameters[3].$ref": "#/parameters/oauth_token",
	"paths./{project}/taskqueues/{taskqueue}.parameters[4].$ref": "#/parameters/prettyPrint",
	"paths./{project}/taskqueues/{taskqueue}.parameters[5].$ref": "#/parameters/quotaUser",
	"paths./{project}/taskqueues/{taskqueue}.parameters[6].$ref": "#/parameters/userIp",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.description": "List Tasks in a TaskQueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.operationId": "taskqueue.tasks.list",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[1].description": "The id of the taskqueue to list tasks from.",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.responses.200.schema.$ref": "#/definitions/Tasks2",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.get.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters.length": 7,
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[0].$ref": "#/parameters/alt",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[1].$ref": "#/parameters/fields",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[2].$ref": "#/parameters/key",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[3].$ref": "#/parameters/oauth_token",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[4].$ref": "#/parameters/prettyPrint",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[5].$ref": "#/parameters/quotaUser",
	"paths./{project}/taskqueues/{taskqueue}/tasks.parameters[6].$ref": "#/parameters/userIp",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.description": "Insert a new task in a TaskQueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.operationId": "taskqueue.tasks.insert",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters.length": 3,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[0].description": "The project under which the queue lies",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[1].description": "The taskqueue to insert the task into",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[2].in": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[2].name": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.parameters[2].schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.responses.200.schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks.post.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters.length": 7,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[0].$ref": "#/parameters/alt",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[1].$ref": "#/parameters/fields",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[2].$ref": "#/parameters/key",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[3].$ref": "#/parameters/oauth_token",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[4].$ref": "#/parameters/prettyPrint",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[5].$ref": "#/parameters/quotaUser",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.parameters[6].$ref": "#/parameters/userIp",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.description": "Lease 1 or more tasks from a TaskQueue.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.operationId": "taskqueue.tasks.lease",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters.length": 6,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[1].description": "The taskqueue to lease a task from.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[2].description": "The number of tasks to lease.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[2].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[2].name": "numTasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[2].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[2].type": "integer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[3].description": "The lease in seconds.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[3].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[3].name": "leaseSecs",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[3].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[3].type": "integer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[4].description": "When true, all returned tasks will have the same tag",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[4].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[4].name": "groupByTag",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[4].type": "boolean",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[5].description": "The tag allowed for tasks in the response. Must only be specified if group_by_tag is true. If group_by_tag is true and tag is not specified the tag will be that of the oldest task by eta, i.e. the first available tag",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[5].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[5].name": "tag",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.parameters[5].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.responses.200.schema.$ref": "#/definitions/Tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/lease.post.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.description": "Delete a task from a TaskQueue.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.operationId": "taskqueue.tasks.delete",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters.length": 3,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[1].description": "The taskqueue to delete a task from.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[2].description": "The id of the task to delete.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[2].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[2].name": "task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[2].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.parameters[2].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.delete.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.description": "Get a particular task from a TaskQueue.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.operationId": "taskqueue.tasks.get",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters.length": 3,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[1].description": "The taskqueue in which the task belongs.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[2].description": "The task to get properties of.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[2].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[2].name": "task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[2].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.parameters[2].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.responses.200.schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.get.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters.length": 7,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[0].$ref": "#/parameters/alt",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[1].$ref": "#/parameters/fields",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[2].$ref": "#/parameters/key",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[3].$ref": "#/parameters/oauth_token",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[4].$ref": "#/parameters/prettyPrint",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[5].$ref": "#/parameters/quotaUser",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.parameters[6].$ref": "#/parameters/userIp",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.description": "Update tasks that are leased out of a TaskQueue. This method supports patch semantics.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.operationId": "taskqueue.tasks.patch",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters.length": 5,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[2].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[2].name": "task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[2].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[2].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[3].description": "The new lease in seconds.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[3].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[3].name": "newLeaseSeconds",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[3].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[3].type": "integer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[4].in": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[4].name": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.parameters[4].schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.responses.200.schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.patch.tags[0]": "tasks",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.description": "Update tasks that are leased out of a TaskQueue.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.operationId": "taskqueue.tasks.update",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters.length": 5,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[0].description": "The project under which the queue lies.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[0].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[0].name": "project",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[0].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[0].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[1].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[1].name": "taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[1].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[1].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[2].in": "path",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[2].name": "task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[2].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[2].type": "string",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[3].description": "The new lease in seconds.",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[3].in": "query",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[3].name": "newLeaseSeconds",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[3].required": true,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[3].type": "integer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[4].in": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[4].name": "body",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.parameters[4].schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.responses.200.description": "Successful response",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.responses.200.schema.$ref": "#/definitions/Task",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.security.length": 2,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.security[0].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.security[0].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.security[1].Oauth2.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.security[1].Oauth2[0]": "https://www.googleapis.com/auth/taskqueue.consumer",
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.tags.length": 1,
	"paths./{project}/taskqueues/{taskqueue}/tasks/{task}.post.tags[0]": "tasks",
	"schemes.length": 1,
	"schemes[0]": "https",
	"securityDefinitions.Oauth2.authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
	"securityDefinitions.Oauth2.description": "Oauth 2.0 authentication",
	"securityDefinitions.Oauth2.flow": "implicit",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/taskqueue": "Manage your Tasks and Taskqueues",
	"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/taskqueue.consumer": "Consume Tasks from your Taskqueues",
	"securityDefinitions.Oauth2.type": "oauth2",
	"swagger": "2.0",
	"tags.length": 2,
	"tags[0].name": "taskqueues",
	"tags[1].name": "tasks"
}