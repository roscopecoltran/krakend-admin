syntax = "proto3";

import "google/api/annotations.proto";

package adexchangeseller;

message GetAccountsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of accounts to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through accounts. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdRequest {
    // Account to get information about. Tip: 'myaccount' is a valid ID.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetAccountsAccountIdAdclientsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of ad clients to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdCustomchannelsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to list custom channels.
    string adClientId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client which contains the custom channel.
    string adClientId = 2;
    alt alt = 3;
    // Custom channel to retrieve.
    string customChannelId = 4;
    string fields = 5;
    string key = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdAdclientsAdClientIdUrlchannelsRequest {
    // Account to which the ad client belongs.
    string accountId = 1;
    // Ad client for which to list URL channels.
    string adClientId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of URL channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAccountsAccountIdAlertsRequest {
    // Account owning the alerts.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The locale to use for translating alert messages. The account locale will be used if this is not supplied. The AdSense default (English) will be used if the supplied locale is invalid or unsupported.
    string locale = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdMetadataDimensionsRequest {
    // Account with visibility to the dimensions.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetAccountsAccountIdMetadataMetricsRequest {
    // Account with visibility to the metrics.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetAccountsAccountIdPreferreddealsRequest {
    // Account owning the deals.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    string oauth_token = 5;
    boolean prettyPrint = 6;
    string quotaUser = 7;
    string userIp = 8;
}

message GetAccountsAccountIdPreferreddealsDealIdRequest {
    // Account owning the deal.
    string accountId = 1;
    alt alt = 2;
    // Preferred deal to get information about.
    string dealId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAccountsAccountIdReportsRequest {
    // Account which owns the generated report.
    string accountId = 1;
    alt alt = 2;
    // Dimensions to base the report on.
    repeated string dimension = 3;
    // End of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string endDate = 4;
    string fields = 5;
    // Filters to be run on the report.
    repeated string filter = 6;
    string key = 7;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 8;
    // The maximum number of rows of report data to return.
    int32 maxResults = 9;
    // Numeric columns to include in the report.
    repeated string metric = 10;
    string oauth_token = 11;
    boolean prettyPrint = 12;
    string quotaUser = 13;
    // The name of a dimension or metric to sort the resulting report on, optionally prefixed with "+" to sort ascending or "-" to sort descending. If no prefix is specified, the column is sorted ascending.
    repeated string sort = 14;
    // Start of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string startDate = 15;
    // Index of the first row of report data to return.
    int32 startIndex = 16;
    string userIp = 17;
}

message GetAccountsAccountIdReportsSavedRequest {
    // Account owning the saved reports.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of saved reports to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through saved reports. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAccountsAccountIdReportsSavedReportIdRequest {
    // Account owning the saved report.
    string accountId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 5;
    // The maximum number of rows of report data to return.
    int32 maxResults = 6;
    string oauth_token = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    // The saved report to retrieve.
    string savedReportId = 10;
    // Index of the first row of report data to return.
    int32 startIndex = 11;
    string userIp = 12;
}

message Account {
    // Unique identifier of this account.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#account.
    string kind = 2;
    // Name of this account.
    string name = 3;
}

message Accounts {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The accounts returned in this list response.
    repeated Account items = 2;
    // Kind of list this is, in this case adexchangeseller#accounts.
    string kind = 3;
    // Continuation token used to page through accounts. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message AdClient {
    // Whether this ad client is opted in to ARC.
    bool arcOptIn = 1;
    // Unique identifier of this ad client.
    string id = 2;
    // Kind of resource this is, in this case adexchangeseller#adClient.
    string kind = 3;
    // This ad client's product code, which corresponds to the PRODUCT_CODE report dimension.
    string productCode = 4;
    // Whether this ad client supports being reported on.
    bool supportsReporting = 5;
}

message AdClients {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The ad clients returned in this list response.
    repeated AdClient items = 2;
    // Kind of list this is, in this case adexchangeseller#adClients.
    string kind = 3;
    // Continuation token used to page through ad clients. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message Alert {
    // Unique identifier of this alert. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#alert.
    string kind = 2;
    // The localized alert message.
    string message = 3;
    // Severity of this alert. Possible values: INFO, WARNING, SEVERE.
    string severity = 4;
    // Type of this alert. Possible values: SELF_HOLD, MIGRATED_TO_BILLING3, ADDRESS_PIN_VERIFICATION, PHONE_PIN_VERIFICATION, CORPORATE_ENTITY, GRAYLISTED_PUBLISHER, API_HOLD.
    string type = 5;
}

message Alerts {
    // The alerts returned in this list response.
    repeated Alert items = 1;
    // Kind of list this is, in this case adexchangeseller#alerts.
    string kind = 2;
}

message CustomChannel {
    // Code of this custom channel, not necessarily unique across ad clients.
    string code = 1;
    // Unique identifier of this custom channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 2;
    // Kind of resource this is, in this case adexchangeseller#customChannel.
    string kind = 3;
    // Name of this custom channel.
    string name = 4;
    // The targeting information of this custom channel, if activated.
    message TargetingInfo {
            // The name used to describe this channel externally.
    string adsAppearOn = 1;
            // The external description of the channel.
    string description = 2;
            // The locations in which ads appear. (Only valid for content and mobile content ads). Acceptable values for content ads are: TOP_LEFT, TOP_CENTER, TOP_RIGHT, MIDDLE_LEFT, MIDDLE_CENTER, MIDDLE_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT, MULTIPLE_LOCATIONS. Acceptable values for mobile content ads are: TOP, MIDDLE, BOTTOM, MULTIPLE_LOCATIONS.
    string location = 3;
            // The language of the sites ads will be displayed on.
    string siteLanguage = 4;
    }
    TargetingInfo targetingInfo = 5;
}

message CustomChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The custom channels returned in this list response.
    repeated CustomChannel items = 2;
    // Kind of list this is, in this case adexchangeseller#customChannels.
    string kind = 3;
    // Continuation token used to page through custom channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message Metadata {
    repeated ReportingMetadataEntry items = 1;
    // Kind of list this is, in this case adexchangeseller#metadata.
    string kind = 2;
}

message PreferredDeal {
    // The name of the advertiser this deal is for.
    string advertiserName = 1;
    // The name of the buyer network this deal is for.
    string buyerNetworkName = 2;
    // The currency code that applies to the fixed_cpm value. If not set then assumed to be USD.
    string currencyCode = 3;
    // Time when this deal stops being active in seconds since the epoch (GMT). If not set then this deal is valid until manually disabled by the publisher.
    string endTime = 4;
    // The fixed price for this preferred deal. In cpm micros of currency according to currencyCode. If set, then this preferred deal is eligible for the fixed price tier of buying (highest priority, pay exactly the configured fixed price).
    string fixedCpm = 5;
    // Unique identifier of this preferred deal.
    string id = 6;
    // Kind of resource this is, in this case adexchangeseller#preferredDeal.
    string kind = 7;
    // Time when this deal becomes active in seconds since the epoch (GMT). If not set then this deal is active immediately upon creation.
    string startTime = 8;
}

message PreferredDeals {
    // The preferred deals returned in this list response.
    repeated PreferredDeal items = 1;
    // Kind of list this is, in this case adexchangeseller#preferredDeals.
    string kind = 2;
}

message Report {
    // The averages of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string averages = 1;
    // The header information of the columns requested in the report. This is a list of headers; one for each dimension in the request, followed by one for each metric in the request.
    message Header {
            // The currency of this column. Only present if the header type is METRIC_CURRENCY.
    string currency = 1;
            // The name of the header.
    string name = 2;
            // The type of the header; one of DIMENSION, METRIC_TALLY, METRIC_RATIO, or METRIC_CURRENCY.
    string type = 3;
    }
    repeated Header headers = 2;
    // Kind this is, in this case adexchangeseller#report.
    string kind = 3;
    // The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. The dimension cells contain strings, and the metric cells contain numbers.
    message Row {
    }
    repeated Row rows = 4;
    // The total number of rows matched by the report request. Fewer rows may be returned in the response due to being limited by the row count requested or the report row limit.
    string totalMatchedRows = 5;
    // The totals of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string totals = 6;
    // Any warnings associated with generation of the report.
    repeated string warnings = 7;
}

message ReportingMetadataEntry {
    // For metrics this is a list of dimension IDs which the metric is compatible with, for dimensions it is a list of compatibility groups the dimension belongs to.
    repeated string compatibleDimensions = 1;
    // The names of the metrics the dimension or metric this reporting metadata entry describes is compatible with.
    repeated string compatibleMetrics = 2;
    // Unique identifier of this reporting metadata entry, corresponding to the name of the appropriate dimension or metric.
    string id = 3;
    // Kind of resource this is, in this case adexchangeseller#reportingMetadataEntry.
    string kind = 4;
    // The names of the dimensions which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
    repeated string requiredDimensions = 5;
    // The names of the metrics which the dimension or metric this reporting metadata entry describes requires to also be present in order for the report to be valid. Omitting these will not cause an error or warning, but may result in data which cannot be correctly interpreted.
    repeated string requiredMetrics = 6;
    // The codes of the projects supported by the dimension or metric this reporting metadata entry describes.
    repeated string supportedProducts = 7;
}

message SavedReport {
    // Unique identifier of this saved report.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#savedReport.
    string kind = 2;
    // This saved report's name.
    string name = 3;
}

message SavedReports {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The saved reports returned in this list response.
    repeated SavedReport items = 2;
    // Kind of list this is, in this case adexchangeseller#savedReports.
    string kind = 3;
    // Continuation token used to page through saved reports. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message UrlChannel {
    // Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#urlChannel.
    string kind = 2;
    // URL Pattern of this URL channel. Does not include "http://" or "https://". Example: www.example.com/home
    string urlPattern = 3;
}

message UrlChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The URL channels returned in this list response.
    repeated UrlChannel items = 2;
    // Kind of list this is, in this case adexchangeseller#urlChannels.
    string kind = 3;
    // Continuation token used to page through URL channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

enum Alt {
    CSV = 0;
    JSON = 1;
}

service AdExchangeSellerService {
    // List all accounts available to this Ad Exchange account.
    rpc GetAccounts(GetAccountsRequest) returns (Accounts) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts"
      };
    }
    // Get information about the selected Ad Exchange account.
    rpc GetAccountsAccountId(GetAccountsAccountIdRequest) returns (Account) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}"
      };
    }
    // List all ad clients in this Ad Exchange account.
    rpc GetAccountsAccountIdAdclients(GetAccountsAccountIdAdclientsRequest) returns (AdClients) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/adclients"
      };
    }
    // List all custom channels in the specified ad client for this Ad Exchange account.
    rpc GetAccountsAccountIdAdclientsAdClientIdCustomchannels(GetAccountsAccountIdAdclientsAdClientIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/customchannels"
      };
    }
    // Get the specified custom channel from the specified ad client.
    rpc GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelId(GetAccountsAccountIdAdclientsAdClientIdCustomchannelsCustomChannelIdRequest) returns (CustomChannel) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}"
      };
    }
    // List all URL channels in the specified ad client for this Ad Exchange account.
    rpc GetAccountsAccountIdAdclientsAdClientIdUrlchannels(GetAccountsAccountIdAdclientsAdClientIdUrlchannelsRequest) returns (UrlChannels) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/adclients/{adClientId}/urlchannels"
      };
    }
    // List the alerts for this Ad Exchange account.
    rpc GetAccountsAccountIdAlerts(GetAccountsAccountIdAlertsRequest) returns (Alerts) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/alerts"
      };
    }
    // List the metadata for the dimensions available to this AdExchange account.
    rpc GetAccountsAccountIdMetadataDimensions(GetAccountsAccountIdMetadataDimensionsRequest) returns (Metadata) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/metadata/dimensions"
      };
    }
    // List the metadata for the metrics available to this AdExchange account.
    rpc GetAccountsAccountIdMetadataMetrics(GetAccountsAccountIdMetadataMetricsRequest) returns (Metadata) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/metadata/metrics"
      };
    }
    // List the preferred deals for this Ad Exchange account.
    rpc GetAccountsAccountIdPreferreddeals(GetAccountsAccountIdPreferreddealsRequest) returns (PreferredDeals) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/preferreddeals"
      };
    }
    // Get information about the selected Ad Exchange Preferred Deal.
    rpc GetAccountsAccountIdPreferreddealsDealId(GetAccountsAccountIdPreferreddealsDealIdRequest) returns (PreferredDeal) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/preferreddeals/{dealId}"
      };
    }
    // Generate an Ad Exchange report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter.
    rpc GetAccountsAccountIdReports(GetAccountsAccountIdReportsRequest) returns (Report) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/reports"
      };
    }
    // List all saved reports in this Ad Exchange account.
    rpc GetAccountsAccountIdReportsSaved(GetAccountsAccountIdReportsSavedRequest) returns (SavedReports) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/reports/saved"
      };
    }
    // Generate an Ad Exchange report based on the saved report ID sent in the query parameters.
    rpc GetAccountsAccountIdReportsSavedReportId(GetAccountsAccountIdReportsSavedReportIdRequest) returns (Report) {
      option (google.api.http) = {
        get: "/adexchangeseller/v2.0/accounts/{accountId}/reports/{savedReportId}"
      };
    }
}
