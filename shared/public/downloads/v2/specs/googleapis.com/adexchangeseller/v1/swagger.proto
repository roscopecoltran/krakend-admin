syntax = "proto3";

import "google/api/annotations.proto";

package adexchangeseller;

message GetAdclientsRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of ad clients to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdAdunitsRequest {
    // Ad client for which to list ad units.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 4;
    string key = 5;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAdclientsAdClientIdAdunitsAdUnitIdRequest {
    // Ad client for which to get the ad unit.
    string adClientId = 1;
    // Ad unit to retrieve.
    string adUnitId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest {
    // Ad client which contains the ad unit.
    string adClientId = 1;
    // Ad unit for which to list custom channels.
    string adUnitId = 2;
    alt alt = 3;
    string fields = 4;
    string key = 5;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 6;
    string oauth_token = 7;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 8;
    boolean prettyPrint = 9;
    string quotaUser = 10;
    string userIp = 11;
}

message GetAdclientsAdClientIdCustomchannelsRequest {
    // Ad client for which to list custom channels.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of custom channels to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through custom channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetAdclientsAdClientIdCustomchannelsCustomChannelIdRequest {
    // Ad client which contains the custom channel.
    string adClientId = 1;
    alt alt = 2;
    // Custom channel to retrieve.
    string customChannelId = 3;
    string fields = 4;
    string key = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest {
    // Ad client which contains the custom channel.
    string adClientId = 1;
    alt alt = 2;
    // Custom channel for which to list ad units.
    string customChannelId = 3;
    string fields = 4;
    // Whether to include inactive ad units. Default: true.
    bool includeInactive = 5;
    string key = 6;
    // The maximum number of ad units to include in the response, used for paging.
    int32 maxResults = 7;
    string oauth_token = 8;
    // A continuation token, used to page through ad units. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 9;
    boolean prettyPrint = 10;
    string quotaUser = 11;
    string userIp = 12;
}

message GetAdclientsAdClientIdUrlchannelsRequest {
    // Ad client for which to list URL channels.
    string adClientId = 1;
    alt alt = 2;
    string fields = 3;
    string key = 4;
    // The maximum number of URL channels to include in the response, used for paging.
    int32 maxResults = 5;
    string oauth_token = 6;
    // A continuation token, used to page through URL channels. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 7;
    boolean prettyPrint = 8;
    string quotaUser = 9;
    string userIp = 10;
}

message GetReportsRequest {
    alt alt = 1;
    // Dimensions to base the report on.
    repeated string dimension = 2;
    // End of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string endDate = 3;
    string fields = 4;
    // Filters to be run on the report.
    repeated string filter = 5;
    string key = 6;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 7;
    // The maximum number of rows of report data to return.
    int32 maxResults = 8;
    // Numeric columns to include in the report.
    repeated string metric = 9;
    string oauth_token = 10;
    boolean prettyPrint = 11;
    string quotaUser = 12;
    // The name of a dimension or metric to sort the resulting report on, optionally prefixed with "+" to sort ascending or "-" to sort descending. If no prefix is specified, the column is sorted ascending.
    repeated string sort = 13;
    // Start of the date range to report on in "YYYY-MM-DD" format, inclusive.
    string startDate = 14;
    // Index of the first row of report data to return.
    int32 startIndex = 15;
    string userIp = 16;
}

message GetReportsSavedRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // The maximum number of saved reports to include in the response, used for paging.
    int32 maxResults = 4;
    string oauth_token = 5;
    // A continuation token, used to page through saved reports. To retrieve the next page, set this parameter to the value of "nextPageToken" from the previous response.
    string pageToken = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    string userIp = 9;
}

message GetReportsSavedReportIdRequest {
    alt alt = 1;
    string fields = 2;
    string key = 3;
    // Optional locale to use for translating report output to a local language. Defaults to "en_US" if not specified.
    string locale = 4;
    // The maximum number of rows of report data to return.
    int32 maxResults = 5;
    string oauth_token = 6;
    boolean prettyPrint = 7;
    string quotaUser = 8;
    // The saved report to retrieve.
    string savedReportId = 9;
    // Index of the first row of report data to return.
    int32 startIndex = 10;
    string userIp = 11;
}

message AdClient {
    // Whether this ad client is opted in to ARC.
    bool arcOptIn = 1;
    // Unique identifier of this ad client.
    string id = 2;
    // Kind of resource this is, in this case adexchangeseller#adClient.
    string kind = 3;
    // This ad client's product code, which corresponds to the PRODUCT_CODE report dimension.
    string productCode = 4;
    // Whether this ad client supports being reported on.
    bool supportsReporting = 5;
}

message AdClients {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The ad clients returned in this list response.
    repeated AdClient items = 2;
    // Kind of list this is, in this case adexchangeseller#adClients.
    string kind = 3;
    // Continuation token used to page through ad clients. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message AdUnit {
    // Identity code of this ad unit, not necessarily unique across ad clients.
    string code = 1;
    // Unique identifier of this ad unit. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 2;
    // Kind of resource this is, in this case adexchangeseller#adUnit.
    string kind = 3;
    // Name of this ad unit.
    string name = 4;
    // Status of this ad unit. Possible values are:
    // NEW: Indicates that the ad unit was created within the last seven days and does not yet have any activity associated with it.
    // 
    // ACTIVE: Indicates that there has been activity on this ad unit in the last seven days.
    // 
    // INACTIVE: Indicates that there has been no activity on this ad unit in the last seven days.
    string status = 5;
}

message AdUnits {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The ad units returned in this list response.
    repeated AdUnit items = 2;
    // Kind of list this is, in this case adexchangeseller#adUnits.
    string kind = 3;
    // Continuation token used to page through ad units. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message CustomChannel {
    // Code of this custom channel, not necessarily unique across ad clients.
    string code = 1;
    // Unique identifier of this custom channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 2;
    // Kind of resource this is, in this case adexchangeseller#customChannel.
    string kind = 3;
    // Name of this custom channel.
    string name = 4;
    // The targeting information of this custom channel, if activated.
    message TargetingInfo {
            // The name used to describe this channel externally.
    string adsAppearOn = 1;
            // The external description of the channel.
    string description = 2;
            // The locations in which ads appear. (Only valid for content and mobile content ads). Acceptable values for content ads are: TOP_LEFT, TOP_CENTER, TOP_RIGHT, MIDDLE_LEFT, MIDDLE_CENTER, MIDDLE_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT, MULTIPLE_LOCATIONS. Acceptable values for mobile content ads are: TOP, MIDDLE, BOTTOM, MULTIPLE_LOCATIONS.
    string location = 3;
            // The language of the sites ads will be displayed on.
    string siteLanguage = 4;
    }
    TargetingInfo targetingInfo = 5;
}

message CustomChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The custom channels returned in this list response.
    repeated CustomChannel items = 2;
    // Kind of list this is, in this case adexchangeseller#customChannels.
    string kind = 3;
    // Continuation token used to page through custom channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message Report {
    // The averages of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string averages = 1;
    // The header information of the columns requested in the report. This is a list of headers; one for each dimension in the request, followed by one for each metric in the request.
    message Header {
            // The currency of this column. Only present if the header type is METRIC_CURRENCY.
    string currency = 1;
            // The name of the header.
    string name = 2;
            // The type of the header; one of DIMENSION, METRIC_TALLY, METRIC_RATIO, or METRIC_CURRENCY.
    string type = 3;
    }
    repeated Header headers = 2;
    // Kind this is, in this case adexchangeseller#report.
    string kind = 3;
    // The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. The dimension cells contain strings, and the metric cells contain numbers.
    message Row {
    }
    repeated Row rows = 4;
    // The total number of rows matched by the report request. Fewer rows may be returned in the response due to being limited by the row count requested or the report row limit.
    string totalMatchedRows = 5;
    // The totals of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
    repeated string totals = 6;
    // Any warnings associated with generation of the report.
    repeated string warnings = 7;
}

message SavedReport {
    // Unique identifier of this saved report.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#savedReport.
    string kind = 2;
    // This saved report's name.
    string name = 3;
}

message SavedReports {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The saved reports returned in this list response.
    repeated SavedReport items = 2;
    // Kind of list this is, in this case adexchangeseller#savedReports.
    string kind = 3;
    // Continuation token used to page through saved reports. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

message UrlChannel {
    // Unique identifier of this URL channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
    string id = 1;
    // Kind of resource this is, in this case adexchangeseller#urlChannel.
    string kind = 2;
    // URL Pattern of this URL channel. Does not include "http://" or "https://". Example: www.example.com/home
    string urlPattern = 3;
}

message UrlChannels {
    // ETag of this response for caching purposes.
    string etag = 1;
    // The URL channels returned in this list response.
    repeated UrlChannel items = 2;
    // Kind of list this is, in this case adexchangeseller#urlChannels.
    string kind = 3;
    // Continuation token used to page through URL channels. To retrieve the next page of results, set the next request's "pageToken" value to this.
    string nextPageToken = 4;
}

enum Alt {
    CSV = 0;
    JSON = 1;
}

service AdExchangeSellerService {
    // List all ad clients in this Ad Exchange account.
    rpc GetAdclients(GetAdclientsRequest) returns (AdClients) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients"
      };
    }
    // List all ad units in the specified ad client for this Ad Exchange account.
    rpc GetAdclientsAdClientIdAdunits(GetAdclientsAdClientIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/adunits"
      };
    }
    // Gets the specified ad unit in the specified ad client.
    rpc GetAdclientsAdClientIdAdunitsAdUnitId(GetAdclientsAdClientIdAdunitsAdUnitIdRequest) returns (AdUnit) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/adunits/{adUnitId}"
      };
    }
    // List all custom channels which the specified ad unit belongs to.
    rpc GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannels(GetAdclientsAdClientIdAdunitsAdUnitIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/adunits/{adUnitId}/customchannels"
      };
    }
    // List all custom channels in the specified ad client for this Ad Exchange account.
    rpc GetAdclientsAdClientIdCustomchannels(GetAdclientsAdClientIdCustomchannelsRequest) returns (CustomChannels) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/customchannels"
      };
    }
    // Get the specified custom channel from the specified ad client.
    rpc GetAdclientsAdClientIdCustomchannelsCustomChannelId(GetAdclientsAdClientIdCustomchannelsCustomChannelIdRequest) returns (CustomChannel) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/customchannels/{customChannelId}"
      };
    }
    // List all ad units in the specified custom channel.
    rpc GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunits(GetAdclientsAdClientIdCustomchannelsCustomChannelIdAdunitsRequest) returns (AdUnits) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/customchannels/{customChannelId}/adunits"
      };
    }
    // List all URL channels in the specified ad client for this Ad Exchange account.
    rpc GetAdclientsAdClientIdUrlchannels(GetAdclientsAdClientIdUrlchannelsRequest) returns (UrlChannels) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/adclients/{adClientId}/urlchannels"
      };
    }
    // Generate an Ad Exchange report based on the report request sent in the query parameters. Returns the result as JSON; to retrieve output in CSV format specify "alt=csv" as a query parameter.
    rpc GetReports(GetReportsRequest) returns (Report) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/reports"
      };
    }
    // List all saved reports in this Ad Exchange account.
    rpc GetReportsSaved(GetReportsSavedRequest) returns (SavedReports) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/reports/saved"
      };
    }
    // Generate an Ad Exchange report based on the saved report ID sent in the query parameters.
    rpc GetReportsSavedReportId(GetReportsSavedReportIdRequest) returns (Report) {
      option (google.api.http) = {
        get: "/adexchangeseller/v1/reports/{savedReportId}"
      };
    }
}
