basePath: /drive/v3
definitions.About.description: Information about the user, the user's Drive, and system
  capabilities.
definitions.About.properties.appInstalled.description: Whether the user has installed
  the requesting app.
definitions.About.properties.appInstalled.type: boolean
definitions.About.properties.exportFormats.additionalProperties.items.type: string
definitions.About.properties.exportFormats.additionalProperties.type: array
definitions.About.properties.exportFormats.description: A map of source MIME type
  to possible targets for all supported exports.
definitions.About.properties.exportFormats.type: object
definitions.About.properties.folderColorPalette.description: The currently supported
  folder colors as RGB hex strings.
definitions.About.properties.folderColorPalette.items.type: string
definitions.About.properties.folderColorPalette.type: array
definitions.About.properties.importFormats.additionalProperties.items.type: string
definitions.About.properties.importFormats.additionalProperties.type: array
definitions.About.properties.importFormats.description: A map of source MIME type
  to possible targets for all supported imports.
definitions.About.properties.importFormats.type: object
definitions.About.properties.kind.default: drive#about
definitions.About.properties.kind.description: 'Identifies what kind of resource this
  is. Value: the fixed string "drive#about".'
definitions.About.properties.kind.type: string
definitions.About.properties.maxImportSizes.additionalProperties.format: int64
definitions.About.properties.maxImportSizes.additionalProperties.type: string
definitions.About.properties.maxImportSizes.description: A map of maximum import sizes
  by MIME type, in bytes.
definitions.About.properties.maxImportSizes.type: object
definitions.About.properties.maxUploadSize.description: The maximum upload size in
  bytes.
definitions.About.properties.maxUploadSize.format: int64
definitions.About.properties.maxUploadSize.type: string
definitions.About.properties.storageQuota.description: The user's storage quota limits
  and usage. All fields are measured in bytes.
definitions.About.properties.storageQuota.properties.limit.description: The usage
  limit, if applicable. This will not be present if the user has unlimited storage.
definitions.About.properties.storageQuota.properties.limit.format: int64
definitions.About.properties.storageQuota.properties.limit.type: string
definitions.About.properties.storageQuota.properties.usage.description: The total
  usage across all services.
definitions.About.properties.storageQuota.properties.usage.format: int64
definitions.About.properties.storageQuota.properties.usage.type: string
definitions.About.properties.storageQuota.properties.usageInDrive.description: The
  usage by all files in Google Drive.
definitions.About.properties.storageQuota.properties.usageInDrive.format: int64
definitions.About.properties.storageQuota.properties.usageInDrive.type: string
definitions.About.properties.storageQuota.properties.usageInDriveTrash.description: The
  usage by trashed files in Google Drive.
definitions.About.properties.storageQuota.properties.usageInDriveTrash.format: int64
definitions.About.properties.storageQuota.properties.usageInDriveTrash.type: string
definitions.About.properties.storageQuota.type: object
definitions.About.properties.teamDriveThemes.description: A list of themes that are
  supported for Team Drives.
definitions.About.properties.teamDriveThemes.items.properties.backgroundImageLink.description: A
  link to this Team Drive theme's background image.
definitions.About.properties.teamDriveThemes.items.properties.backgroundImageLink.type: string
definitions.About.properties.teamDriveThemes.items.properties.colorRgb.description: The
  color of this Team Drive theme as an RGB hex string.
definitions.About.properties.teamDriveThemes.items.properties.colorRgb.type: string
definitions.About.properties.teamDriveThemes.items.properties.id.description: The
  ID of the theme.
definitions.About.properties.teamDriveThemes.items.properties.id.type: string
definitions.About.properties.teamDriveThemes.items.type: object
definitions.About.properties.teamDriveThemes.type: array
definitions.About.properties.user.$ref: '#/definitions/User'
definitions.About.properties.user.description: The authenticated user.
definitions.About.type: object
definitions.Change.description: A change to a file or Team Drive.
definitions.Change.properties.file.$ref: '#/definitions/File'
definitions.Change.properties.file.description: The updated state of the file. Present
  if the type is file and the file has not been removed from this list of changes.
definitions.Change.properties.fileId.description: The ID of the file which has changed.
definitions.Change.properties.fileId.type: string
definitions.Change.properties.kind.default: drive#change
definitions.Change.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#change".'
definitions.Change.properties.kind.type: string
definitions.Change.properties.removed.description: Whether the file or Team Drive
  has been removed from this list of changes, for example by deletion or loss of access.
definitions.Change.properties.removed.type: boolean
definitions.Change.properties.teamDrive.$ref: '#/definitions/TeamDrive'
definitions.Change.properties.teamDrive.description: The updated state of the Team
  Drive. Present if the type is teamDrive, the user is still a member of the Team
  Drive, and the Team Drive has not been removed.
definitions.Change.properties.teamDriveId.description: The ID of the Team Drive associated
  with this change.
definitions.Change.properties.teamDriveId.type: string
definitions.Change.properties.time.description: The time of this change (RFC 3339
  date-time).
definitions.Change.properties.time.format: date-time
definitions.Change.properties.time.type: string
definitions.Change.properties.type.description: The type of the change. Possible values
  are file and teamDrive.
definitions.Change.properties.type.type: string
definitions.Change.type: object
definitions.ChangeList.description: A list of changes for a user.
definitions.ChangeList.properties.changes.description: The list of changes. If nextPageToken
  is populated, then this list may be incomplete and an additional page of results
  should be fetched.
definitions.ChangeList.properties.changes.items.$ref: '#/definitions/Change'
definitions.ChangeList.properties.changes.type: array
definitions.ChangeList.properties.kind.default: drive#changeList
definitions.ChangeList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#changeList".'
definitions.ChangeList.properties.kind.type: string
definitions.ChangeList.properties.newStartPageToken.description: The starting page
  token for future changes. This will be present only if the end of the current changes
  list has been reached.
definitions.ChangeList.properties.newStartPageToken.type: string
definitions.ChangeList.properties.nextPageToken.description: The page token for the
  next page of changes. This will be absent if the end of the changes list has been
  reached. If the token is rejected for any reason, it should be discarded, and pagination
  should be restarted from the first page of results.
definitions.ChangeList.properties.nextPageToken.type: string
definitions.ChangeList.type: object
definitions.Channel.description: An notification channel used to watch for resource
  changes.
definitions.Channel.properties.address.description: The address where notifications
  are delivered for this channel.
definitions.Channel.properties.address.type: string
definitions.Channel.properties.expiration.description: Date and time of notification
  channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
definitions.Channel.properties.expiration.format: int64
definitions.Channel.properties.expiration.type: string
definitions.Channel.properties.id.description: A UUID or similar unique string that
  identifies this channel.
definitions.Channel.properties.id.type: string
definitions.Channel.properties.kind.default: api#channel
definitions.Channel.properties.kind.description: 'Identifies this as a notification
  channel used to watch for changes to a resource. Value: the fixed string "api#channel".'
definitions.Channel.properties.kind.type: string
definitions.Channel.properties.params.additionalProperties.description: Declares a
  new parameter by name.
definitions.Channel.properties.params.additionalProperties.type: string
definitions.Channel.properties.params.description: Additional parameters controlling
  delivery channel behavior. Optional.
definitions.Channel.properties.params.type: object
definitions.Channel.properties.payload.description: A Boolean value to indicate whether
  payload is wanted. Optional.
definitions.Channel.properties.payload.type: boolean
definitions.Channel.properties.resourceId.description: An opaque ID that identifies
  the resource being watched on this channel. Stable across different API versions.
definitions.Channel.properties.resourceId.type: string
definitions.Channel.properties.resourceUri.description: A version-specific identifier
  for the watched resource.
definitions.Channel.properties.resourceUri.type: string
definitions.Channel.properties.token.description: An arbitrary string delivered to
  the target address with each notification delivered over this channel. Optional.
definitions.Channel.properties.token.type: string
definitions.Channel.properties.type.description: The type of delivery mechanism used
  for this channel.
definitions.Channel.properties.type.type: string
definitions.Channel.type: object
definitions.Comment.description: A comment on a file.
definitions.Comment.properties.anchor.description: A region of the document represented
  as a JSON string. See anchor documentation for details on how to define and interpret
  anchor properties.
definitions.Comment.properties.anchor.type: string
definitions.Comment.properties.author.$ref: '#/definitions/User'
definitions.Comment.properties.author.description: The user who created the comment.
definitions.Comment.properties.content.description: The plain text content of the
  comment. This field is used for setting the content, while htmlContent should be
  displayed.
definitions.Comment.properties.content.type: string
definitions.Comment.properties.createdTime.description: The time at which the comment
  was created (RFC 3339 date-time).
definitions.Comment.properties.createdTime.format: date-time
definitions.Comment.properties.createdTime.type: string
definitions.Comment.properties.deleted.description: Whether the comment has been deleted.
  A deleted comment has no content.
definitions.Comment.properties.deleted.type: boolean
definitions.Comment.properties.htmlContent.description: The content of the comment
  with HTML formatting.
definitions.Comment.properties.htmlContent.type: string
definitions.Comment.properties.id.description: The ID of the comment.
definitions.Comment.properties.id.type: string
definitions.Comment.properties.kind.default: drive#comment
definitions.Comment.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#comment".'
definitions.Comment.properties.kind.type: string
definitions.Comment.properties.modifiedTime.description: The last time the comment
  or any of its replies was modified (RFC 3339 date-time).
definitions.Comment.properties.modifiedTime.format: date-time
definitions.Comment.properties.modifiedTime.type: string
definitions.Comment.properties.quotedFileContent.description: The file content to
  which the comment refers, typically within the anchor region. For a text file, for
  example, this would be the text at the location of the comment.
definitions.Comment.properties.quotedFileContent.properties.mimeType.description: The
  MIME type of the quoted content.
definitions.Comment.properties.quotedFileContent.properties.mimeType.type: string
definitions.Comment.properties.quotedFileContent.properties.value.description: The
  quoted content itself. This is interpreted as plain text if set through the API.
definitions.Comment.properties.quotedFileContent.properties.value.type: string
definitions.Comment.properties.quotedFileContent.type: object
definitions.Comment.properties.replies.description: The full list of replies to the
  comment in chronological order.
definitions.Comment.properties.replies.items.$ref: '#/definitions/Reply'
definitions.Comment.properties.replies.type: array
definitions.Comment.properties.resolved.description: Whether the comment has been
  resolved by one of its replies.
definitions.Comment.properties.resolved.type: boolean
definitions.Comment.type: object
definitions.CommentList.description: A list of comments on a file.
definitions.CommentList.properties.comments.description: The list of comments. If
  nextPageToken is populated, then this list may be incomplete and an additional page
  of results should be fetched.
definitions.CommentList.properties.comments.items.$ref: '#/definitions/Comment'
definitions.CommentList.properties.comments.type: array
definitions.CommentList.properties.kind.default: drive#commentList
definitions.CommentList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#commentList".'
definitions.CommentList.properties.kind.type: string
definitions.CommentList.properties.nextPageToken.description: The page token for the
  next page of comments. This will be absent if the end of the comments list has been
  reached. If the token is rejected for any reason, it should be discarded, and pagination
  should be restarted from the first page of results.
definitions.CommentList.properties.nextPageToken.type: string
definitions.CommentList.type: object
definitions.File.description: The metadata for a file.
definitions.File.properties.appProperties.additionalProperties.type: string
definitions.File.properties.appProperties.description: |-
  A collection of arbitrary key-value pairs which are private to the requesting app.
  Entries with null values are cleared in update and copy requests.
definitions.File.properties.appProperties.type: object
definitions.File.properties.capabilities.description: Capabilities the current user
  has on this file. Each capability corresponds to a fine-grained action that a user
  may take.
definitions.File.properties.capabilities.properties.canAddChildren.description: Whether
  the current user can add children to this folder. This is always false when the
  item is not a folder.
definitions.File.properties.capabilities.properties.canAddChildren.type: boolean
definitions.File.properties.capabilities.properties.canChangeViewersCanCopyContent.description: Whether
  the current user can change whether viewers can copy the contents of this file.
definitions.File.properties.capabilities.properties.canChangeViewersCanCopyContent.type: boolean
definitions.File.properties.capabilities.properties.canComment.description: Whether
  the current user can comment on this file.
definitions.File.properties.capabilities.properties.canComment.type: boolean
definitions.File.properties.capabilities.properties.canCopy.description: Whether the
  current user can copy this file. For a Team Drive item, whether the current user
  can copy non-folder descendants of this item, or this item itself if it is not a
  folder.
definitions.File.properties.capabilities.properties.canCopy.type: boolean
definitions.File.properties.capabilities.properties.canDelete.description: Whether
  the current user can delete this file.
definitions.File.properties.capabilities.properties.canDelete.type: boolean
definitions.File.properties.capabilities.properties.canDownload.description: Whether
  the current user can download this file.
definitions.File.properties.capabilities.properties.canDownload.type: boolean
definitions.File.properties.capabilities.properties.canEdit.description: Whether the
  current user can edit this file.
definitions.File.properties.capabilities.properties.canEdit.type: boolean
definitions.File.properties.capabilities.properties.canListChildren.description: Whether
  the current user can list the children of this folder. This is always false when
  the item is not a folder.
definitions.File.properties.capabilities.properties.canListChildren.type: boolean
definitions.File.properties.capabilities.properties.canMoveItemIntoTeamDrive.description: Whether
  the current user can move this item into a Team Drive. If the item is in a Team
  Drive, this field is equivalent to canMoveTeamDriveItem.
definitions.File.properties.capabilities.properties.canMoveItemIntoTeamDrive.type: boolean
definitions.File.properties.capabilities.properties.canMoveTeamDriveItem.description: Whether
  the current user can move this Team Drive item by changing its parent. Note that
  a request to change the parent for this item may still fail depending on the new
  parent that is being added. Only populated for Team Drive files.
definitions.File.properties.capabilities.properties.canMoveTeamDriveItem.type: boolean
definitions.File.properties.capabilities.properties.canReadRevisions.description: Whether
  the current user can read the revisions resource of this file. For a Team Drive
  item, whether revisions of non-folder descendants of this item, or this item itself
  if it is not a folder, can be read.
definitions.File.properties.capabilities.properties.canReadRevisions.type: boolean
definitions.File.properties.capabilities.properties.canReadTeamDrive.description: Whether
  the current user can read the Team Drive to which this file belongs. Only populated
  for Team Drive files.
definitions.File.properties.capabilities.properties.canReadTeamDrive.type: boolean
definitions.File.properties.capabilities.properties.canRemoveChildren.description: Whether
  the current user can remove children from this folder. This is always false when
  the item is not a folder.
definitions.File.properties.capabilities.properties.canRemoveChildren.type: boolean
definitions.File.properties.capabilities.properties.canRename.description: Whether
  the current user can rename this file.
definitions.File.properties.capabilities.properties.canRename.type: boolean
definitions.File.properties.capabilities.properties.canShare.description: Whether
  the current user can modify the sharing settings for this file.
definitions.File.properties.capabilities.properties.canShare.type: boolean
definitions.File.properties.capabilities.properties.canTrash.description: Whether
  the current user can move this file to trash.
definitions.File.properties.capabilities.properties.canTrash.type: boolean
definitions.File.properties.capabilities.properties.canUntrash.description: Whether
  the current user can restore this file from trash.
definitions.File.properties.capabilities.properties.canUntrash.type: boolean
definitions.File.properties.capabilities.type: object
definitions.File.properties.contentHints.description: Additional information about
  the content of the file. These fields are never populated in responses.
definitions.File.properties.contentHints.properties.indexableText.description: Text
  to be indexed for the file to improve fullText queries. This is limited to 128KB
  in length and may contain HTML elements.
definitions.File.properties.contentHints.properties.indexableText.type: string
definitions.File.properties.contentHints.properties.thumbnail.description: A thumbnail
  for the file. This will only be used if Drive cannot generate a standard thumbnail.
definitions.File.properties.contentHints.properties.thumbnail.properties.image.description: The
  thumbnail data encoded with URL-safe Base64 (RFC 4648 section 5).
definitions.File.properties.contentHints.properties.thumbnail.properties.image.format: byte
definitions.File.properties.contentHints.properties.thumbnail.properties.image.type: string
definitions.File.properties.contentHints.properties.thumbnail.properties.mimeType.description: The
  MIME type of the thumbnail.
definitions.File.properties.contentHints.properties.thumbnail.properties.mimeType.type: string
definitions.File.properties.contentHints.properties.thumbnail.type: object
definitions.File.properties.contentHints.type: object
definitions.File.properties.createdTime.description: The time at which the file was
  created (RFC 3339 date-time).
definitions.File.properties.createdTime.format: date-time
definitions.File.properties.createdTime.type: string
definitions.File.properties.description.description: A short description of the file.
definitions.File.properties.description.type: string
definitions.File.properties.explicitlyTrashed.description: Whether the file has been
  explicitly trashed, as opposed to recursively trashed from a parent folder.
definitions.File.properties.explicitlyTrashed.type: boolean
definitions.File.properties.fileExtension.description: The final component of fullFileExtension.
  This is only available for files with binary content in Drive.
definitions.File.properties.fileExtension.type: string
definitions.File.properties.folderColorRgb.description: |-
  The color for a folder as an RGB hex string. The supported colors are published in the folderColorPalette field of the About resource.
  If an unsupported color is specified, the closest color in the palette will be used instead.
definitions.File.properties.folderColorRgb.type: string
definitions.File.properties.fullFileExtension.description: |-
  The full file extension extracted from the name field. May contain multiple concatenated extensions, such as "tar.gz". This is only available for files with binary content in Drive.
  This is automatically updated when the name field changes, however it is not cleared if the new name does not contain a valid extension.
definitions.File.properties.fullFileExtension.type: string
definitions.File.properties.hasAugmentedPermissions.description: Whether any users
  are granted file access directly on this file. This field is only populated for
  Team Drive files.
definitions.File.properties.hasAugmentedPermissions.type: boolean
definitions.File.properties.hasThumbnail.description: Whether this file has a thumbnail.
  This does not indicate whether the requesting app has access to the thumbnail. To
  check access, look for the presence of the thumbnailLink field.
definitions.File.properties.hasThumbnail.type: boolean
definitions.File.properties.headRevisionId.description: The ID of the file's head
  revision. This is currently only available for files with binary content in Drive.
definitions.File.properties.headRevisionId.type: string
definitions.File.properties.iconLink.description: A static, unauthenticated link to
  the file's icon.
definitions.File.properties.iconLink.type: string
definitions.File.properties.id.description: The ID of the file.
definitions.File.properties.id.type: string
definitions.File.properties.imageMediaMetadata.description: Additional metadata about
  image media, if available.
definitions.File.properties.imageMediaMetadata.properties.aperture.description: The
  aperture used to create the photo (f-number).
definitions.File.properties.imageMediaMetadata.properties.aperture.format: float
definitions.File.properties.imageMediaMetadata.properties.aperture.type: number
definitions.File.properties.imageMediaMetadata.properties.cameraMake.description: The
  make of the camera used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.cameraMake.type: string
definitions.File.properties.imageMediaMetadata.properties.cameraModel.description: The
  model of the camera used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.cameraModel.type: string
definitions.File.properties.imageMediaMetadata.properties.colorSpace.description: The
  color space of the photo.
definitions.File.properties.imageMediaMetadata.properties.colorSpace.type: string
definitions.File.properties.imageMediaMetadata.properties.exposureBias.description: The
  exposure bias of the photo (APEX value).
definitions.File.properties.imageMediaMetadata.properties.exposureBias.format: float
definitions.File.properties.imageMediaMetadata.properties.exposureBias.type: number
definitions.File.properties.imageMediaMetadata.properties.exposureMode.description: The
  exposure mode used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.exposureMode.type: string
definitions.File.properties.imageMediaMetadata.properties.exposureTime.description: The
  length of the exposure, in seconds.
definitions.File.properties.imageMediaMetadata.properties.exposureTime.format: float
definitions.File.properties.imageMediaMetadata.properties.exposureTime.type: number
definitions.File.properties.imageMediaMetadata.properties.flashUsed.description: Whether
  a flash was used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.flashUsed.type: boolean
definitions.File.properties.imageMediaMetadata.properties.focalLength.description: The
  focal length used to create the photo, in millimeters.
definitions.File.properties.imageMediaMetadata.properties.focalLength.format: float
definitions.File.properties.imageMediaMetadata.properties.focalLength.type: number
definitions.File.properties.imageMediaMetadata.properties.height.description: The
  height of the image in pixels.
definitions.File.properties.imageMediaMetadata.properties.height.format: int32
definitions.File.properties.imageMediaMetadata.properties.height.type: integer
definitions.File.properties.imageMediaMetadata.properties.isoSpeed.description: The
  ISO speed used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.isoSpeed.format: int32
definitions.File.properties.imageMediaMetadata.properties.isoSpeed.type: integer
definitions.File.properties.imageMediaMetadata.properties.lens.description: The lens
  used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.lens.type: string
definitions.File.properties.imageMediaMetadata.properties.location.description: Geographic
  location information stored in the image.
definitions.File.properties.imageMediaMetadata.properties.location.properties.altitude.description: The
  altitude stored in the image.
definitions.File.properties.imageMediaMetadata.properties.location.properties.altitude.format: double
definitions.File.properties.imageMediaMetadata.properties.location.properties.altitude.type: number
definitions.File.properties.imageMediaMetadata.properties.location.properties.latitude.description: The
  latitude stored in the image.
definitions.File.properties.imageMediaMetadata.properties.location.properties.latitude.format: double
definitions.File.properties.imageMediaMetadata.properties.location.properties.latitude.type: number
definitions.File.properties.imageMediaMetadata.properties.location.properties.longitude.description: The
  longitude stored in the image.
definitions.File.properties.imageMediaMetadata.properties.location.properties.longitude.format: double
definitions.File.properties.imageMediaMetadata.properties.location.properties.longitude.type: number
definitions.File.properties.imageMediaMetadata.properties.location.type: object
definitions.File.properties.imageMediaMetadata.properties.maxApertureValue.description: The
  smallest f-number of the lens at the focal length used to create the photo (APEX
  value).
definitions.File.properties.imageMediaMetadata.properties.maxApertureValue.format: float
definitions.File.properties.imageMediaMetadata.properties.maxApertureValue.type: number
definitions.File.properties.imageMediaMetadata.properties.meteringMode.description: The
  metering mode used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.meteringMode.type: string
definitions.File.properties.imageMediaMetadata.properties.rotation.description: The
  rotation in clockwise degrees from the image's original orientation.
definitions.File.properties.imageMediaMetadata.properties.rotation.format: int32
definitions.File.properties.imageMediaMetadata.properties.rotation.type: integer
definitions.File.properties.imageMediaMetadata.properties.sensor.description: The
  type of sensor used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.sensor.type: string
definitions.File.properties.imageMediaMetadata.properties.subjectDistance.description: The
  distance to the subject of the photo, in meters.
definitions.File.properties.imageMediaMetadata.properties.subjectDistance.format: int32
definitions.File.properties.imageMediaMetadata.properties.subjectDistance.type: integer
definitions.File.properties.imageMediaMetadata.properties.time.description: The date
  and time the photo was taken (EXIF DateTime).
definitions.File.properties.imageMediaMetadata.properties.time.type: string
definitions.File.properties.imageMediaMetadata.properties.whiteBalance.description: The
  white balance mode used to create the photo.
definitions.File.properties.imageMediaMetadata.properties.whiteBalance.type: string
definitions.File.properties.imageMediaMetadata.properties.width.description: The width
  of the image in pixels.
definitions.File.properties.imageMediaMetadata.properties.width.format: int32
definitions.File.properties.imageMediaMetadata.properties.width.type: integer
definitions.File.properties.imageMediaMetadata.type: object
definitions.File.properties.isAppAuthorized.description: Whether the file was created
  or opened by the requesting app.
definitions.File.properties.isAppAuthorized.type: boolean
definitions.File.properties.kind.default: drive#file
definitions.File.properties.kind.description: 'Identifies what kind of resource this
  is. Value: the fixed string "drive#file".'
definitions.File.properties.kind.type: string
definitions.File.properties.lastModifyingUser.$ref: '#/definitions/User'
definitions.File.properties.lastModifyingUser.description: The last user to modify
  the file.
definitions.File.properties.md5Checksum.description: The MD5 checksum for the content
  of the file. This is only applicable to files with binary content in Drive.
definitions.File.properties.md5Checksum.type: string
definitions.File.properties.mimeType.description: |-
  The MIME type of the file.
  Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded.
  If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published in the About resource.
definitions.File.properties.mimeType.type: string
definitions.File.properties.modifiedByMe.description: Whether the file has been modified
  by this user.
definitions.File.properties.modifiedByMe.type: boolean
definitions.File.properties.modifiedByMeTime.description: The last time the file was
  modified by the user (RFC 3339 date-time).
definitions.File.properties.modifiedByMeTime.format: date-time
definitions.File.properties.modifiedByMeTime.type: string
definitions.File.properties.modifiedTime.description: |-
  The last time the file was modified by anyone (RFC 3339 date-time).
  Note that setting modifiedTime will also update modifiedByMeTime for the user.
definitions.File.properties.modifiedTime.format: date-time
definitions.File.properties.modifiedTime.type: string
definitions.File.properties.name.description: The name of the file. This is not necessarily
  unique within a folder. Note that for immutable items such as the top level folders
  of Team Drives, My Drive root folder, and Application Data folder the name is constant.
definitions.File.properties.name.type: string
definitions.File.properties.originalFilename.description: The original filename of
  the uploaded content if available, or else the original value of the name field.
  This is only available for files with binary content in Drive.
definitions.File.properties.originalFilename.type: string
definitions.File.properties.ownedByMe.description: Whether the user owns the file.
  Not populated for Team Drive files.
definitions.File.properties.ownedByMe.type: boolean
definitions.File.properties.owners.description: The owners of the file. Currently,
  only certain legacy files may have more than one owner. Not populated for Team Drive
  files.
definitions.File.properties.owners.items.$ref: '#/definitions/User'
definitions.File.properties.owners.type: array
definitions.File.properties.parents.description: |-
  The IDs of the parent folders which contain the file.
  If not specified as part of a create request, the file will be placed directly in the My Drive folder. Update requests must use the addParents and removeParents parameters to modify the values.
definitions.File.properties.parents.items.type: string
definitions.File.properties.parents.type: array
definitions.File.properties.permissionIds.description: List of permission IDs for
  users with access to this file.
definitions.File.properties.permissionIds.items.type: string
definitions.File.properties.permissionIds.type: array
definitions.File.properties.permissions.description: The full list of permissions
  for the file. This is only available if the requesting user can share the file.
  Not populated for Team Drive files.
definitions.File.properties.permissions.items.$ref: '#/definitions/Permission'
definitions.File.properties.permissions.type: array
definitions.File.properties.properties.additionalProperties.type: string
definitions.File.properties.properties.description: |-
  A collection of arbitrary key-value pairs which are visible to all apps.
  Entries with null values are cleared in update and copy requests.
definitions.File.properties.properties.type: object
definitions.File.properties.quotaBytesUsed.description: The number of storage quota
  bytes used by the file. This includes the head revision as well as previous revisions
  with keepForever enabled.
definitions.File.properties.quotaBytesUsed.format: int64
definitions.File.properties.quotaBytesUsed.type: string
definitions.File.properties.shared.description: Whether the file has been shared.
  Not populated for Team Drive files.
definitions.File.properties.shared.type: boolean
definitions.File.properties.sharedWithMeTime.description: The time at which the file
  was shared with the user, if applicable (RFC 3339 date-time).
definitions.File.properties.sharedWithMeTime.format: date-time
definitions.File.properties.sharedWithMeTime.type: string
definitions.File.properties.sharingUser.$ref: '#/definitions/User'
definitions.File.properties.sharingUser.description: The user who shared the file
  with the requesting user, if applicable.
definitions.File.properties.size.description: The size of the file's content in bytes.
  This is only applicable to files with binary content in Drive.
definitions.File.properties.size.format: int64
definitions.File.properties.size.type: string
definitions.File.properties.spaces.description: The list of spaces which contain the
  file. The currently supported values are 'drive', 'appDataFolder' and 'photos'.
definitions.File.properties.spaces.items.type: string
definitions.File.properties.spaces.type: array
definitions.File.properties.starred.description: Whether the user has starred the
  file.
definitions.File.properties.starred.type: boolean
definitions.File.properties.teamDriveId.description: ID of the Team Drive the file
  resides in.
definitions.File.properties.teamDriveId.type: string
definitions.File.properties.thumbnailLink.description: A short-lived link to the file's
  thumbnail, if available. Typically lasts on the order of hours. Only populated when
  the requesting app can access the file's content.
definitions.File.properties.thumbnailLink.type: string
definitions.File.properties.thumbnailVersion.description: The thumbnail version for
  use in thumbnail cache invalidation.
definitions.File.properties.thumbnailVersion.format: int64
definitions.File.properties.thumbnailVersion.type: string
definitions.File.properties.trashed.description: Whether the file has been trashed,
  either explicitly or from a trashed parent folder. Only the owner may trash a file,
  and other users cannot see files in the owner's trash.
definitions.File.properties.trashed.type: boolean
definitions.File.properties.trashedTime.description: The time that the item was trashed
  (RFC 3339 date-time). Only populated for Team Drive files.
definitions.File.properties.trashedTime.format: date-time
definitions.File.properties.trashedTime.type: string
definitions.File.properties.trashingUser.$ref: '#/definitions/User'
definitions.File.properties.trashingUser.description: If the file has been explicitly
  trashed, the user who trashed it. Only populated for Team Drive files.
definitions.File.properties.version.description: A monotonically increasing version
  number for the file. This reflects every change made to the file on the server,
  even those not visible to the user.
definitions.File.properties.version.format: int64
definitions.File.properties.version.type: string
definitions.File.properties.videoMediaMetadata.description: Additional metadata about
  video media. This may not be available immediately upon upload.
definitions.File.properties.videoMediaMetadata.properties.durationMillis.description: The
  duration of the video in milliseconds.
definitions.File.properties.videoMediaMetadata.properties.durationMillis.format: int64
definitions.File.properties.videoMediaMetadata.properties.durationMillis.type: string
definitions.File.properties.videoMediaMetadata.properties.height.description: The
  height of the video in pixels.
definitions.File.properties.videoMediaMetadata.properties.height.format: int32
definitions.File.properties.videoMediaMetadata.properties.height.type: integer
definitions.File.properties.videoMediaMetadata.properties.width.description: The width
  of the video in pixels.
definitions.File.properties.videoMediaMetadata.properties.width.format: int32
definitions.File.properties.videoMediaMetadata.properties.width.type: integer
definitions.File.properties.videoMediaMetadata.type: object
definitions.File.properties.viewedByMe.description: Whether the file has been viewed
  by this user.
definitions.File.properties.viewedByMe.type: boolean
definitions.File.properties.viewedByMeTime.description: The last time the file was
  viewed by the user (RFC 3339 date-time).
definitions.File.properties.viewedByMeTime.format: date-time
definitions.File.properties.viewedByMeTime.type: string
definitions.File.properties.viewersCanCopyContent.description: Whether users with
  only reader or commenter permission can copy the file's content. This affects copy,
  download, and print operations.
definitions.File.properties.viewersCanCopyContent.type: boolean
definitions.File.properties.webContentLink.description: A link for downloading the
  content of the file in a browser. This is only available for files with binary content
  in Drive.
definitions.File.properties.webContentLink.type: string
definitions.File.properties.webViewLink.description: A link for opening the file in
  a relevant Google editor or viewer in a browser.
definitions.File.properties.webViewLink.type: string
definitions.File.properties.writersCanShare.description: Whether users with only writer
  permission can modify the file's permissions. Not populated for Team Drive files.
definitions.File.properties.writersCanShare.type: boolean
definitions.File.type: object
definitions.FileList.description: A list of files.
definitions.FileList.properties.files.description: The list of files. If nextPageToken
  is populated, then this list may be incomplete and an additional page of results
  should be fetched.
definitions.FileList.properties.files.items.$ref: '#/definitions/File'
definitions.FileList.properties.files.type: array
definitions.FileList.properties.incompleteSearch.description: Whether the search process
  was incomplete. If true, then some search results may be missing, since all documents
  were not searched. This may occur when searching multiple Team Drives with the "user,allTeamDrives"
  corpora, but all corpora could not be searched. When this happens, it is suggested
  that clients narrow their query by choosing a different corpus such as "user" or
  "teamDrive".
definitions.FileList.properties.incompleteSearch.type: boolean
definitions.FileList.properties.kind.default: drive#fileList
definitions.FileList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#fileList".'
definitions.FileList.properties.kind.type: string
definitions.FileList.properties.nextPageToken.description: The page token for the
  next page of files. This will be absent if the end of the files list has been reached.
  If the token is rejected for any reason, it should be discarded, and pagination
  should be restarted from the first page of results.
definitions.FileList.properties.nextPageToken.type: string
definitions.FileList.type: object
definitions.GeneratedIds.description: A list of generated file IDs which can be provided
  in create requests.
definitions.GeneratedIds.properties.ids.description: The IDs generated for the requesting
  user in the specified space.
definitions.GeneratedIds.properties.ids.items.type: string
definitions.GeneratedIds.properties.ids.type: array
definitions.GeneratedIds.properties.kind.default: drive#generatedIds
definitions.GeneratedIds.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#generatedIds".'
definitions.GeneratedIds.properties.kind.type: string
definitions.GeneratedIds.properties.space.description: The type of file that can be
  created with these IDs.
definitions.GeneratedIds.properties.space.type: string
definitions.GeneratedIds.type: object
definitions.Permission.description: A permission for a file. A permission grants a
  user, group, domain or the world access to a file or a folder hierarchy.
definitions.Permission.properties.allowFileDiscovery.description: Whether the permission
  allows the file to be discovered through search. This is only applicable for permissions
  of type domain or anyone.
definitions.Permission.properties.allowFileDiscovery.type: boolean
definitions.Permission.properties.deleted.description: Whether the account associated
  with this permission has been deleted. This field only pertains to user and group
  permissions.
definitions.Permission.properties.deleted.type: boolean
definitions.Permission.properties.displayName.description: A displayable name for
  users, groups or domains.
definitions.Permission.properties.displayName.type: string
definitions.Permission.properties.domain.description: The domain to which this permission
  refers.
definitions.Permission.properties.domain.type: string
definitions.Permission.properties.emailAddress.description: The email address of the
  user or group to which this permission refers.
definitions.Permission.properties.emailAddress.type: string
definitions.Permission.properties.expirationTime.description: "The time at which this
  permission will expire (RFC 3339 date-time). Expiration times have the following
  restrictions:  \n- They can only be set on user and group permissions \n- The time
  must be in the future \n- The time cannot be more than a year in the future"
definitions.Permission.properties.expirationTime.format: date-time
definitions.Permission.properties.expirationTime.type: string
definitions.Permission.properties.id.description: The ID of this permission. This
  is a unique identifier for the grantee, and is published in User resources as permissionId.
definitions.Permission.properties.id.type: string
definitions.Permission.properties.kind.default: drive#permission
definitions.Permission.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#permission".'
definitions.Permission.properties.kind.type: string
definitions.Permission.properties.photoLink.description: A link to the user's profile
  photo, if available.
definitions.Permission.properties.photoLink.type: string
definitions.Permission.properties.role.description: "The role granted by this permission.
  While new values may be supported in the future, the following are currently allowed:
  \ \n- organizer \n- owner \n- writer \n- commenter \n- reader"
definitions.Permission.properties.role.type: string
definitions.Permission.properties.teamDrivePermissionDetails.description: Details
  of whether the permissions on this Team Drive item are inherited or directly on
  this item. This is an output-only field which is present only for Team Drive items.
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.inherited.description: Whether
  this permission is inherited. This field is always populated. This is an output-only
  field.
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.inherited.type: boolean
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.inheritedFrom.description: The
  ID of the item from which this permission is inherited. This is an output-only field
  and is only populated for members of the Team Drive.
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.inheritedFrom.type: string
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.role.description: "The
  primary role for this user. While new values may be added in the future, the following
  are currently possible:  \n- organizer \n- writer \n- commenter \n- reader"
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.role.type: string
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.teamDrivePermissionType.description: "The
  Team Drive permission type for this user. While new values may be added in future,
  the following are currently possible:  \n- file \n- member"
definitions.Permission.properties.teamDrivePermissionDetails.items.properties.teamDrivePermissionType.type: string
definitions.Permission.properties.teamDrivePermissionDetails.items.type: object
definitions.Permission.properties.teamDrivePermissionDetails.type: array
definitions.Permission.properties.type.description: "The type of the grantee. Valid
  values are:  \n- user \n- group \n- domain \n- anyone"
definitions.Permission.properties.type.type: string
definitions.Permission.type: object
definitions.PermissionList.description: A list of permissions for a file.
definitions.PermissionList.properties.kind.default: drive#permissionList
definitions.PermissionList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#permissionList".'
definitions.PermissionList.properties.kind.type: string
definitions.PermissionList.properties.nextPageToken.description: The page token for
  the next page of permissions. This field will be absent if the end of the permissions
  list has been reached. If the token is rejected for any reason, it should be discarded,
  and pagination should be restarted from the first page of results.
definitions.PermissionList.properties.nextPageToken.type: string
definitions.PermissionList.properties.permissions.description: The list of permissions.
  If nextPageToken is populated, then this list may be incomplete and an additional
  page of results should be fetched.
definitions.PermissionList.properties.permissions.items.$ref: '#/definitions/Permission'
definitions.PermissionList.properties.permissions.type: array
definitions.PermissionList.type: object
definitions.Reply.description: A reply to a comment on a file.
definitions.Reply.properties.action.description: "The action the reply performed to
  the parent comment. Valid values are:  \n- resolve \n- reopen"
definitions.Reply.properties.action.type: string
definitions.Reply.properties.author.$ref: '#/definitions/User'
definitions.Reply.properties.author.description: The user who created the reply.
definitions.Reply.properties.content.description: The plain text content of the reply.
  This field is used for setting the content, while htmlContent should be displayed.
  This is required on creates if no action is specified.
definitions.Reply.properties.content.type: string
definitions.Reply.properties.createdTime.description: The time at which the reply
  was created (RFC 3339 date-time).
definitions.Reply.properties.createdTime.format: date-time
definitions.Reply.properties.createdTime.type: string
definitions.Reply.properties.deleted.description: Whether the reply has been deleted.
  A deleted reply has no content.
definitions.Reply.properties.deleted.type: boolean
definitions.Reply.properties.htmlContent.description: The content of the reply with
  HTML formatting.
definitions.Reply.properties.htmlContent.type: string
definitions.Reply.properties.id.description: The ID of the reply.
definitions.Reply.properties.id.type: string
definitions.Reply.properties.kind.default: drive#reply
definitions.Reply.properties.kind.description: 'Identifies what kind of resource this
  is. Value: the fixed string "drive#reply".'
definitions.Reply.properties.kind.type: string
definitions.Reply.properties.modifiedTime.description: The last time the reply was
  modified (RFC 3339 date-time).
definitions.Reply.properties.modifiedTime.format: date-time
definitions.Reply.properties.modifiedTime.type: string
definitions.Reply.type: object
definitions.ReplyList.description: A list of replies to a comment on a file.
definitions.ReplyList.properties.kind.default: drive#replyList
definitions.ReplyList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#replyList".'
definitions.ReplyList.properties.kind.type: string
definitions.ReplyList.properties.nextPageToken.description: The page token for the
  next page of replies. This will be absent if the end of the replies list has been
  reached. If the token is rejected for any reason, it should be discarded, and pagination
  should be restarted from the first page of results.
definitions.ReplyList.properties.nextPageToken.type: string
definitions.ReplyList.properties.replies.description: The list of replies. If nextPageToken
  is populated, then this list may be incomplete and an additional page of results
  should be fetched.
definitions.ReplyList.properties.replies.items.$ref: '#/definitions/Reply'
definitions.ReplyList.properties.replies.type: array
definitions.ReplyList.type: object
definitions.Revision.description: The metadata for a revision to a file.
definitions.Revision.properties.id.description: The ID of the revision.
definitions.Revision.properties.id.type: string
definitions.Revision.properties.keepForever.description: |-
  Whether to keep this revision forever, even if it is no longer the head revision. If not set, the revision will be automatically purged 30 days after newer content is uploaded. This can be set on a maximum of 200 revisions for a file.
  This field is only applicable to files with binary content in Drive.
definitions.Revision.properties.keepForever.type: boolean
definitions.Revision.properties.kind.default: drive#revision
definitions.Revision.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#revision".'
definitions.Revision.properties.kind.type: string
definitions.Revision.properties.lastModifyingUser.$ref: '#/definitions/User'
definitions.Revision.properties.lastModifyingUser.description: The last user to modify
  this revision.
definitions.Revision.properties.md5Checksum.description: The MD5 checksum of the revision's
  content. This is only applicable to files with binary content in Drive.
definitions.Revision.properties.md5Checksum.type: string
definitions.Revision.properties.mimeType.description: The MIME type of the revision.
definitions.Revision.properties.mimeType.type: string
definitions.Revision.properties.modifiedTime.description: The last time the revision
  was modified (RFC 3339 date-time).
definitions.Revision.properties.modifiedTime.format: date-time
definitions.Revision.properties.modifiedTime.type: string
definitions.Revision.properties.originalFilename.description: The original filename
  used to create this revision. This is only applicable to files with binary content
  in Drive.
definitions.Revision.properties.originalFilename.type: string
definitions.Revision.properties.publishAuto.description: Whether subsequent revisions
  will be automatically republished. This is only applicable to Google Docs.
definitions.Revision.properties.publishAuto.type: boolean
definitions.Revision.properties.published.description: Whether this revision is published.
  This is only applicable to Google Docs.
definitions.Revision.properties.published.type: boolean
definitions.Revision.properties.publishedOutsideDomain.description: Whether this revision
  is published outside the domain. This is only applicable to Google Docs.
definitions.Revision.properties.publishedOutsideDomain.type: boolean
definitions.Revision.properties.size.description: The size of the revision's content
  in bytes. This is only applicable to files with binary content in Drive.
definitions.Revision.properties.size.format: int64
definitions.Revision.properties.size.type: string
definitions.Revision.type: object
definitions.RevisionList.description: A list of revisions of a file.
definitions.RevisionList.properties.kind.default: drive#revisionList
definitions.RevisionList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#revisionList".'
definitions.RevisionList.properties.kind.type: string
definitions.RevisionList.properties.nextPageToken.description: The page token for
  the next page of revisions. This will be absent if the end of the revisions list
  has been reached. If the token is rejected for any reason, it should be discarded,
  and pagination should be restarted from the first page of results.
definitions.RevisionList.properties.nextPageToken.type: string
definitions.RevisionList.properties.revisions.description: The list of revisions.
  If nextPageToken is populated, then this list may be incomplete and an additional
  page of results should be fetched.
definitions.RevisionList.properties.revisions.items.$ref: '#/definitions/Revision'
definitions.RevisionList.properties.revisions.type: array
definitions.RevisionList.type: object
definitions.StartPageToken.properties.kind.default: drive#startPageToken
definitions.StartPageToken.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#startPageToken".'
definitions.StartPageToken.properties.kind.type: string
definitions.StartPageToken.properties.startPageToken.description: The starting page
  token for listing changes.
definitions.StartPageToken.properties.startPageToken.type: string
definitions.StartPageToken.type: object
definitions.TeamDrive.description: Representation of a Team Drive.
definitions.TeamDrive.properties.backgroundImageFile.description: An image file and
  cropping parameters from which a background image for this Team Drive is set. This
  is a write only field; it can only be set on drive.teamdrives.update requests that
  don't set themeId. When specified, all fields of the backgroundImageFile must be
  set.
definitions.TeamDrive.properties.backgroundImageFile.properties.id.description: The
  ID of an image file in Drive to use for the background image.
definitions.TeamDrive.properties.backgroundImageFile.properties.id.type: string
definitions.TeamDrive.properties.backgroundImageFile.properties.width.description: The
  width of the cropped image in the closed range of 0 to 1. This value represents
  the width of the cropped image divided by the width of the entire image. The height
  is computed by applying a width to height aspect ratio of 80 to 9. The resulting
  image must be at least 1280 pixels wide and 144 pixels high.
definitions.TeamDrive.properties.backgroundImageFile.properties.width.format: float
definitions.TeamDrive.properties.backgroundImageFile.properties.width.type: number
definitions.TeamDrive.properties.backgroundImageFile.properties.xCoordinate.description: The
  X coordinate of the upper left corner of the cropping area in the background image.
  This is a value in the closed range of 0 to 1. This value represents the horizontal
  distance from the left side of the entire image to the left side of the cropping
  area divided by the width of the entire image.
definitions.TeamDrive.properties.backgroundImageFile.properties.xCoordinate.format: float
definitions.TeamDrive.properties.backgroundImageFile.properties.xCoordinate.type: number
definitions.TeamDrive.properties.backgroundImageFile.properties.yCoordinate.description: The
  Y coordinate of the upper left corner of the cropping area in the background image.
  This is a value in the closed range of 0 to 1. This value represents the vertical
  distance from the top side of the entire image to the top side of the cropping area
  divided by the height of the entire image.
definitions.TeamDrive.properties.backgroundImageFile.properties.yCoordinate.format: float
definitions.TeamDrive.properties.backgroundImageFile.properties.yCoordinate.type: number
definitions.TeamDrive.properties.backgroundImageFile.type: object
definitions.TeamDrive.properties.backgroundImageLink.description: A short-lived link
  to this Team Drive's background image.
definitions.TeamDrive.properties.backgroundImageLink.type: string
definitions.TeamDrive.properties.capabilities.description: Capabilities the current
  user has on this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canAddChildren.description: Whether
  the current user can add children to folders in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canAddChildren.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canChangeTeamDriveBackground.description: Whether
  the current user can change the background of this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canChangeTeamDriveBackground.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canComment.description: Whether
  the current user can comment on files in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canComment.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canCopy.description: Whether
  the current user can copy files in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canCopy.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canDeleteTeamDrive.description: Whether
  the current user can delete this Team Drive. Attempting to delete the Team Drive
  may still fail if there are untrashed items inside the Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canDeleteTeamDrive.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canDownload.description: Whether
  the current user can download files in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canDownload.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canEdit.description: Whether
  the current user can edit files in this Team Drive
definitions.TeamDrive.properties.capabilities.properties.canEdit.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canListChildren.description: Whether
  the current user can list the children of folders in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canListChildren.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canManageMembers.description: Whether
  the current user can add members to this Team Drive or remove them or change their
  role.
definitions.TeamDrive.properties.capabilities.properties.canManageMembers.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canReadRevisions.description: Whether
  the current user can read the revisions resource of files in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canReadRevisions.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canRemoveChildren.description: Whether
  the current user can remove children from folders in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canRemoveChildren.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canRename.description: Whether
  the current user can rename files or folders in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canRename.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canRenameTeamDrive.description: Whether
  the current user can rename this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canRenameTeamDrive.type: boolean
definitions.TeamDrive.properties.capabilities.properties.canShare.description: Whether
  the current user can share files or folders in this Team Drive.
definitions.TeamDrive.properties.capabilities.properties.canShare.type: boolean
definitions.TeamDrive.properties.capabilities.type: object
definitions.TeamDrive.properties.colorRgb.description: The color of this Team Drive
  as an RGB hex string. It can only be set on a drive.teamdrives.update request that
  does not set themeId.
definitions.TeamDrive.properties.colorRgb.type: string
definitions.TeamDrive.properties.id.description: The ID of this Team Drive which is
  also the ID of the top level folder for this Team Drive.
definitions.TeamDrive.properties.id.type: string
definitions.TeamDrive.properties.kind.default: drive#teamDrive
definitions.TeamDrive.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#teamDrive".'
definitions.TeamDrive.properties.kind.type: string
definitions.TeamDrive.properties.name.description: The name of this Team Drive.
definitions.TeamDrive.properties.name.type: string
definitions.TeamDrive.properties.themeId.description: The ID of the theme from which
  the background image and color will be set. The set of possible teamDriveThemes
  can be retrieved from a drive.about.get response. When not specified on a drive.teamdrives.create
  request, a random theme is chosen from which the background image and color are
  set. This is a write-only field; it can only be set on requests that don't set colorRgb
  or backgroundImageFile.
definitions.TeamDrive.properties.themeId.type: string
definitions.TeamDrive.type: object
definitions.TeamDriveList.description: A list of Team Drives.
definitions.TeamDriveList.properties.kind.default: drive#teamDriveList
definitions.TeamDriveList.properties.kind.description: 'Identifies what kind of resource
  this is. Value: the fixed string "drive#teamDriveList".'
definitions.TeamDriveList.properties.kind.type: string
definitions.TeamDriveList.properties.nextPageToken.description: The page token for
  the next page of Team Drives. This will be absent if the end of the Team Drives
  list has been reached. If the token is rejected for any reason, it should be discarded,
  and pagination should be restarted from the first page of results.
definitions.TeamDriveList.properties.nextPageToken.type: string
definitions.TeamDriveList.properties.teamDrives.description: The list of Team Drives.
  If nextPageToken is populated, then this list may be incomplete and an additional
  page of results should be fetched.
definitions.TeamDriveList.properties.teamDrives.items.$ref: '#/definitions/TeamDrive'
definitions.TeamDriveList.properties.teamDrives.type: array
definitions.TeamDriveList.type: object
definitions.User.description: Information about a Drive user.
definitions.User.properties.displayName.description: A plain text displayable name
  for this user.
definitions.User.properties.displayName.type: string
definitions.User.properties.emailAddress.description: The email address of the user.
  This may not be present in certain contexts if the user has not made their email
  address visible to the requester.
definitions.User.properties.emailAddress.type: string
definitions.User.properties.kind.default: drive#user
definitions.User.properties.kind.description: 'Identifies what kind of resource this
  is. Value: the fixed string "drive#user".'
definitions.User.properties.kind.type: string
definitions.User.properties.me.description: Whether this user is the requesting user.
definitions.User.properties.me.type: boolean
definitions.User.properties.permissionId.description: The user's ID as visible in
  Permission resources.
definitions.User.properties.permissionId.type: string
definitions.User.properties.photoLink.description: A link to the user's profile photo,
  if available.
definitions.User.properties.photoLink.type: string
definitions.User.type: object
externalDocs.url: https://developers.google.com/drive/
host: www.googleapis.com
info.contact.name: Google
info.contact.url: https://google.com
info.description: Manages files in Drive including uploading, downloading, searching,
  detecting changes, and updating sharing permissions.
info.title: Drive
info.version: v3
info.x-apiClientRegistration.url: https://console.developers.google.com
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: storage
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.gstatic.com_images_icons_material_product_2x_drive_32dp.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.6.0
info.x-origin[0].format: google
info.x-origin[0].url: https://www.googleapis.com/discovery/v1/apis/drive/v3/rest
info.x-origin[0].version: v1
info.x-preferred: true
info.x-providerName: googleapis.com
info.x-serviceName: drive
parameters.alt.default: json
parameters.alt.description: Data format for the response.
parameters.alt.enum.length: 1
parameters.alt.enum[0]: json
parameters.alt.in: query
parameters.alt.name: alt
parameters.alt.type: string
parameters.fields.description: Selector specifying which fields to include in a partial
  response.
parameters.fields.in: query
parameters.fields.name: fields
parameters.fields.type: string
parameters.key.description: API key. Your API key identifies your project and provides
  you with API access, quota, and reports. Required unless you provide an OAuth 2.0
  token.
parameters.key.in: query
parameters.key.name: key
parameters.key.type: string
parameters.oauth_token.description: OAuth 2.0 token for the current user.
parameters.oauth_token.in: query
parameters.oauth_token.name: oauth_token
parameters.oauth_token.type: string
parameters.prettyPrint.default: true
parameters.prettyPrint.description: Returns response with indentations and line breaks.
parameters.prettyPrint.in: query
parameters.prettyPrint.name: prettyPrint
parameters.prettyPrint.type: boolean
parameters.quotaUser.description: Available to use for quota purposes for server-side
  applications. Can be any arbitrary string assigned to a user, but should not exceed
  40 characters. Overrides userIp if both are provided.
parameters.quotaUser.in: query
parameters.quotaUser.name: quotaUser
parameters.quotaUser.type: string
parameters.userIp.description: IP address of the site where the request originates.
  Use this if you want to enforce per-user limits.
parameters.userIp.in: query
parameters.userIp.name: userIp
parameters.userIp.type: string
paths./about.get.description: Gets information about the user, the user's Drive, and
  system capabilities.
paths./about.get.operationId: drive.about.get
paths./about.get.responses.200.description: Successful response
paths./about.get.responses.200.schema.$ref: '#/definitions/About'
paths./about.get.security.length: 7
paths./about.get.security[0].Oauth2.length: 1
paths./about.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./about.get.security[1].Oauth2.length: 1
paths./about.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./about.get.security[2].Oauth2.length: 1
paths./about.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./about.get.security[3].Oauth2.length: 1
paths./about.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./about.get.security[4].Oauth2.length: 1
paths./about.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./about.get.security[5].Oauth2.length: 1
paths./about.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./about.get.security[6].Oauth2.length: 1
paths./about.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./about.get.tags.length: 1
paths./about.get.tags[0]: about
paths./about.parameters.length: 7
paths./about.parameters[0].$ref: '#/parameters/alt'
paths./about.parameters[1].$ref: '#/parameters/fields'
paths./about.parameters[2].$ref: '#/parameters/key'
paths./about.parameters[3].$ref: '#/parameters/oauth_token'
paths./about.parameters[4].$ref: '#/parameters/prettyPrint'
paths./about.parameters[5].$ref: '#/parameters/quotaUser'
paths./about.parameters[6].$ref: '#/parameters/userIp'
paths./changes.get.description: Lists the changes for a user or Team Drive.
paths./changes.get.operationId: drive.changes.list
paths./changes.get.parameters.length: 9
paths./changes.get.parameters[0].description: The token for continuing a previous
  list request on the next page. This should be set to the value of 'nextPageToken'
  from the previous response or to the response from the getStartPageToken method.
paths./changes.get.parameters[0].in: query
paths./changes.get.parameters[0].name: pageToken
paths./changes.get.parameters[0].required: true
paths./changes.get.parameters[0].type: string
paths./changes.get.parameters[1].default: false
paths./changes.get.parameters[1].description: Whether changes should include the file
  resource if the file is still accessible by the user at the time of the request,
  even when a file was removed from the list of changes and there will be no further
  change entries for this file.
paths./changes.get.parameters[1].in: query
paths./changes.get.parameters[1].name: includeCorpusRemovals
paths./changes.get.parameters[1].type: boolean
paths./changes.get.parameters[2].default: true
paths./changes.get.parameters[2].description: Whether to include changes indicating
  that items have been removed from the list of changes, for example by deletion or
  loss of access.
paths./changes.get.parameters[2].in: query
paths./changes.get.parameters[2].name: includeRemoved
paths./changes.get.parameters[2].type: boolean
paths./changes.get.parameters[3].default: false
paths./changes.get.parameters[3].description: Whether Team Drive files or changes
  should be included in results.
paths./changes.get.parameters[3].in: query
paths./changes.get.parameters[3].name: includeTeamDriveItems
paths./changes.get.parameters[3].type: boolean
paths./changes.get.parameters[4].default: 100
paths./changes.get.parameters[4].description: The maximum number of changes to return
  per page.
paths./changes.get.parameters[4].in: query
paths./changes.get.parameters[4].maximum: 1000
paths./changes.get.parameters[4].minimum: 1
paths./changes.get.parameters[4].name: pageSize
paths./changes.get.parameters[4].type: integer
paths./changes.get.parameters[5].default: false
paths./changes.get.parameters[5].description: Whether to restrict the results to changes
  inside the My Drive hierarchy. This omits changes to files such as those in the
  Application Data folder or shared files which have not been added to My Drive.
paths./changes.get.parameters[5].in: query
paths./changes.get.parameters[5].name: restrictToMyDrive
paths./changes.get.parameters[5].type: boolean
paths./changes.get.parameters[6].default: drive
paths./changes.get.parameters[6].description: A comma-separated list of spaces to
  query within the user corpus. Supported values are 'drive', 'appDataFolder' and
  'photos'.
paths./changes.get.parameters[6].in: query
paths./changes.get.parameters[6].name: spaces
paths./changes.get.parameters[6].type: string
paths./changes.get.parameters[7].default: false
paths./changes.get.parameters[7].description: Whether the requesting application supports
  Team Drives.
paths./changes.get.parameters[7].in: query
paths./changes.get.parameters[7].name: supportsTeamDrives
paths./changes.get.parameters[7].type: boolean
paths./changes.get.parameters[8].description: The Team Drive from which changes will
  be returned. If specified the change IDs will be reflective of the Team Drive; use
  the combined Team Drive ID and change ID as an identifier.
paths./changes.get.parameters[8].in: query
paths./changes.get.parameters[8].name: teamDriveId
paths./changes.get.parameters[8].type: string
paths./changes.get.responses.200.description: Successful response
paths./changes.get.responses.200.schema.$ref: '#/definitions/ChangeList'
paths./changes.get.security.length: 7
paths./changes.get.security[0].Oauth2.length: 1
paths./changes.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./changes.get.security[1].Oauth2.length: 1
paths./changes.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./changes.get.security[2].Oauth2.length: 1
paths./changes.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./changes.get.security[3].Oauth2.length: 1
paths./changes.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./changes.get.security[4].Oauth2.length: 1
paths./changes.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./changes.get.security[5].Oauth2.length: 1
paths./changes.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./changes.get.security[6].Oauth2.length: 1
paths./changes.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./changes.get.tags.length: 1
paths./changes.get.tags[0]: changes
paths./changes.parameters.length: 7
paths./changes.parameters[0].$ref: '#/parameters/alt'
paths./changes.parameters[1].$ref: '#/parameters/fields'
paths./changes.parameters[2].$ref: '#/parameters/key'
paths./changes.parameters[3].$ref: '#/parameters/oauth_token'
paths./changes.parameters[4].$ref: '#/parameters/prettyPrint'
paths./changes.parameters[5].$ref: '#/parameters/quotaUser'
paths./changes.parameters[6].$ref: '#/parameters/userIp'
paths./changes/startPageToken.get.description: Gets the starting pageToken for listing
  future changes.
paths./changes/startPageToken.get.operationId: drive.changes.getStartPageToken
paths./changes/startPageToken.get.parameters.length: 2
paths./changes/startPageToken.get.parameters[0].default: false
paths./changes/startPageToken.get.parameters[0].description: Whether the requesting
  application supports Team Drives.
paths./changes/startPageToken.get.parameters[0].in: query
paths./changes/startPageToken.get.parameters[0].name: supportsTeamDrives
paths./changes/startPageToken.get.parameters[0].type: boolean
paths./changes/startPageToken.get.parameters[1].description: The ID of the Team Drive
  for which the starting pageToken for listing future changes from that Team Drive
  will be returned.
paths./changes/startPageToken.get.parameters[1].in: query
paths./changes/startPageToken.get.parameters[1].name: teamDriveId
paths./changes/startPageToken.get.parameters[1].type: string
paths./changes/startPageToken.get.responses.200.description: Successful response
paths./changes/startPageToken.get.responses.200.schema.$ref: '#/definitions/StartPageToken'
paths./changes/startPageToken.get.security.length: 7
paths./changes/startPageToken.get.security[0].Oauth2.length: 1
paths./changes/startPageToken.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./changes/startPageToken.get.security[1].Oauth2.length: 1
paths./changes/startPageToken.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./changes/startPageToken.get.security[2].Oauth2.length: 1
paths./changes/startPageToken.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./changes/startPageToken.get.security[3].Oauth2.length: 1
paths./changes/startPageToken.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./changes/startPageToken.get.security[4].Oauth2.length: 1
paths./changes/startPageToken.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./changes/startPageToken.get.security[5].Oauth2.length: 1
paths./changes/startPageToken.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./changes/startPageToken.get.security[6].Oauth2.length: 1
paths./changes/startPageToken.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./changes/startPageToken.get.tags.length: 1
paths./changes/startPageToken.get.tags[0]: changes
paths./changes/startPageToken.parameters.length: 7
paths./changes/startPageToken.parameters[0].$ref: '#/parameters/alt'
paths./changes/startPageToken.parameters[1].$ref: '#/parameters/fields'
paths./changes/startPageToken.parameters[2].$ref: '#/parameters/key'
paths./changes/startPageToken.parameters[3].$ref: '#/parameters/oauth_token'
paths./changes/startPageToken.parameters[4].$ref: '#/parameters/prettyPrint'
paths./changes/startPageToken.parameters[5].$ref: '#/parameters/quotaUser'
paths./changes/startPageToken.parameters[6].$ref: '#/parameters/userIp'
paths./changes/watch.parameters.length: 7
paths./changes/watch.parameters[0].$ref: '#/parameters/alt'
paths./changes/watch.parameters[1].$ref: '#/parameters/fields'
paths./changes/watch.parameters[2].$ref: '#/parameters/key'
paths./changes/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./changes/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./changes/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./changes/watch.parameters[6].$ref: '#/parameters/userIp'
paths./changes/watch.post.description: Subscribes to changes for a user.
paths./changes/watch.post.operationId: drive.changes.watch
paths./changes/watch.post.parameters.length: 10
paths./changes/watch.post.parameters[0].description: The token for continuing a previous
  list request on the next page. This should be set to the value of 'nextPageToken'
  from the previous response or to the response from the getStartPageToken method.
paths./changes/watch.post.parameters[0].in: query
paths./changes/watch.post.parameters[0].name: pageToken
paths./changes/watch.post.parameters[0].required: true
paths./changes/watch.post.parameters[0].type: string
paths./changes/watch.post.parameters[1].default: false
paths./changes/watch.post.parameters[1].description: Whether changes should include
  the file resource if the file is still accessible by the user at the time of the
  request, even when a file was removed from the list of changes and there will be
  no further change entries for this file.
paths./changes/watch.post.parameters[1].in: query
paths./changes/watch.post.parameters[1].name: includeCorpusRemovals
paths./changes/watch.post.parameters[1].type: boolean
paths./changes/watch.post.parameters[2].default: true
paths./changes/watch.post.parameters[2].description: Whether to include changes indicating
  that items have been removed from the list of changes, for example by deletion or
  loss of access.
paths./changes/watch.post.parameters[2].in: query
paths./changes/watch.post.parameters[2].name: includeRemoved
paths./changes/watch.post.parameters[2].type: boolean
paths./changes/watch.post.parameters[3].default: false
paths./changes/watch.post.parameters[3].description: Whether Team Drive files or changes
  should be included in results.
paths./changes/watch.post.parameters[3].in: query
paths./changes/watch.post.parameters[3].name: includeTeamDriveItems
paths./changes/watch.post.parameters[3].type: boolean
paths./changes/watch.post.parameters[4].default: 100
paths./changes/watch.post.parameters[4].description: The maximum number of changes
  to return per page.
paths./changes/watch.post.parameters[4].in: query
paths./changes/watch.post.parameters[4].maximum: 1000
paths./changes/watch.post.parameters[4].minimum: 1
paths./changes/watch.post.parameters[4].name: pageSize
paths./changes/watch.post.parameters[4].type: integer
paths./changes/watch.post.parameters[5].default: false
paths./changes/watch.post.parameters[5].description: Whether to restrict the results
  to changes inside the My Drive hierarchy. This omits changes to files such as those
  in the Application Data folder or shared files which have not been added to My Drive.
paths./changes/watch.post.parameters[5].in: query
paths./changes/watch.post.parameters[5].name: restrictToMyDrive
paths./changes/watch.post.parameters[5].type: boolean
paths./changes/watch.post.parameters[6].default: drive
paths./changes/watch.post.parameters[6].description: A comma-separated list of spaces
  to query within the user corpus. Supported values are 'drive', 'appDataFolder' and
  'photos'.
paths./changes/watch.post.parameters[6].in: query
paths./changes/watch.post.parameters[6].name: spaces
paths./changes/watch.post.parameters[6].type: string
paths./changes/watch.post.parameters[7].default: false
paths./changes/watch.post.parameters[7].description: Whether the requesting application
  supports Team Drives.
paths./changes/watch.post.parameters[7].in: query
paths./changes/watch.post.parameters[7].name: supportsTeamDrives
paths./changes/watch.post.parameters[7].type: boolean
paths./changes/watch.post.parameters[8].description: The Team Drive from which changes
  will be returned. If specified the change IDs will be reflective of the Team Drive;
  use the combined Team Drive ID and change ID as an identifier.
paths./changes/watch.post.parameters[8].in: query
paths./changes/watch.post.parameters[8].name: teamDriveId
paths./changes/watch.post.parameters[8].type: string
paths./changes/watch.post.parameters[9].in: body
paths./changes/watch.post.parameters[9].name: resource
paths./changes/watch.post.parameters[9].schema.$ref: '#/definitions/Channel'
paths./changes/watch.post.responses.200.description: Successful response
paths./changes/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./changes/watch.post.security.length: 7
paths./changes/watch.post.security[0].Oauth2.length: 1
paths./changes/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./changes/watch.post.security[1].Oauth2.length: 1
paths./changes/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./changes/watch.post.security[2].Oauth2.length: 1
paths./changes/watch.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./changes/watch.post.security[3].Oauth2.length: 1
paths./changes/watch.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./changes/watch.post.security[4].Oauth2.length: 1
paths./changes/watch.post.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./changes/watch.post.security[5].Oauth2.length: 1
paths./changes/watch.post.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./changes/watch.post.security[6].Oauth2.length: 1
paths./changes/watch.post.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./changes/watch.post.tags.length: 1
paths./changes/watch.post.tags[0]: changes
paths./channels/stop.parameters.length: 7
paths./channels/stop.parameters[0].$ref: '#/parameters/alt'
paths./channels/stop.parameters[1].$ref: '#/parameters/fields'
paths./channels/stop.parameters[2].$ref: '#/parameters/key'
paths./channels/stop.parameters[3].$ref: '#/parameters/oauth_token'
paths./channels/stop.parameters[4].$ref: '#/parameters/prettyPrint'
paths./channels/stop.parameters[5].$ref: '#/parameters/quotaUser'
paths./channels/stop.parameters[6].$ref: '#/parameters/userIp'
paths./channels/stop.post.description: Stop watching resources through this channel
paths./channels/stop.post.operationId: drive.channels.stop
paths./channels/stop.post.parameters.length: 1
paths./channels/stop.post.parameters[0].in: body
paths./channels/stop.post.parameters[0].name: resource
paths./channels/stop.post.parameters[0].schema.$ref: '#/definitions/Channel'
paths./channels/stop.post.responses.200.description: Successful response
paths./channels/stop.post.security.length: 7
paths./channels/stop.post.security[0].Oauth2.length: 1
paths./channels/stop.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./channels/stop.post.security[1].Oauth2.length: 1
paths./channels/stop.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./channels/stop.post.security[2].Oauth2.length: 1
paths./channels/stop.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./channels/stop.post.security[3].Oauth2.length: 1
paths./channels/stop.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./channels/stop.post.security[4].Oauth2.length: 1
paths./channels/stop.post.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./channels/stop.post.security[5].Oauth2.length: 1
paths./channels/stop.post.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./channels/stop.post.security[6].Oauth2.length: 1
paths./channels/stop.post.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./channels/stop.post.tags.length: 1
paths./channels/stop.post.tags[0]: channels
paths./files.get.description: Lists or searches files.
paths./files.get.operationId: drive.files.list
paths./files.get.parameters.length: 10
paths./files.get.parameters[0].description: Comma-separated list of bodies of items
  (files/documents) to which the query applies. Supported bodies are 'user', 'domain',
  'teamDrive' and 'allTeamDrives'. 'allTeamDrives' must be combined with 'user'; all
  other values must be used in isolation. Prefer 'user' or 'teamDrive' to 'allTeamDrives'
  for efficiency.
paths./files.get.parameters[0].in: query
paths./files.get.parameters[0].name: corpora
paths./files.get.parameters[0].type: string
paths./files.get.parameters[1].description: 'The source of files to list. Deprecated:
  use ''corpora'' instead.'
paths./files.get.parameters[1].enum.length: 2
paths./files.get.parameters[1].enum[0]: domain
paths./files.get.parameters[1].enum[1]: user
paths./files.get.parameters[1].in: query
paths./files.get.parameters[1].name: corpus
paths./files.get.parameters[1].type: string
paths./files.get.parameters[2].default: false
paths./files.get.parameters[2].description: Whether Team Drive items should be included
  in results.
paths./files.get.parameters[2].in: query
paths./files.get.parameters[2].name: includeTeamDriveItems
paths./files.get.parameters[2].type: boolean
paths./files.get.parameters[3].description: 'A comma-separated list of sort keys.
  Valid keys are ''createdTime'', ''folder'', ''modifiedByMeTime'', ''modifiedTime'',
  ''name'', ''name_natural'', ''quotaBytesUsed'', ''recency'', ''sharedWithMeTime'',
  ''starred'', and ''viewedByMeTime''. Each key sorts ascending by default, but may
  be reversed with the ''desc'' modifier. Example usage: ?orderBy=folder,modifiedTime
  desc,name. Please note that there is a current limitation for users with approximately
  one million files in which the requested sort order is ignored.'
paths./files.get.parameters[3].in: query
paths./files.get.parameters[3].name: orderBy
paths./files.get.parameters[3].type: string
paths./files.get.parameters[4].default: 100
paths./files.get.parameters[4].description: The maximum number of files to return
  per page. Partial or empty result pages are possible even before the end of the
  files list has been reached.
paths./files.get.parameters[4].in: query
paths./files.get.parameters[4].maximum: 1000
paths./files.get.parameters[4].minimum: 1
paths./files.get.parameters[4].name: pageSize
paths./files.get.parameters[4].type: integer
paths./files.get.parameters[5].description: The token for continuing a previous list
  request on the next page. This should be set to the value of 'nextPageToken' from
  the previous response.
paths./files.get.parameters[5].in: query
paths./files.get.parameters[5].name: pageToken
paths./files.get.parameters[5].type: string
paths./files.get.parameters[6].description: A query for filtering the file results.
  See the "Search for Files" guide for supported syntax.
paths./files.get.parameters[6].in: query
paths./files.get.parameters[6].name: q
paths./files.get.parameters[6].type: string
paths./files.get.parameters[7].default: drive
paths./files.get.parameters[7].description: A comma-separated list of spaces to query
  within the corpus. Supported values are 'drive', 'appDataFolder' and 'photos'.
paths./files.get.parameters[7].in: query
paths./files.get.parameters[7].name: spaces
paths./files.get.parameters[7].type: string
paths./files.get.parameters[8].default: false
paths./files.get.parameters[8].description: Whether the requesting application supports
  Team Drives.
paths./files.get.parameters[8].in: query
paths./files.get.parameters[8].name: supportsTeamDrives
paths./files.get.parameters[8].type: boolean
paths./files.get.parameters[9].description: ID of Team Drive to search.
paths./files.get.parameters[9].in: query
paths./files.get.parameters[9].name: teamDriveId
paths./files.get.parameters[9].type: string
paths./files.get.responses.200.description: Successful response
paths./files.get.responses.200.schema.$ref: '#/definitions/FileList'
paths./files.get.security.length: 7
paths./files.get.security[0].Oauth2.length: 1
paths./files.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files.get.security[1].Oauth2.length: 1
paths./files.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files.get.security[2].Oauth2.length: 1
paths./files.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files.get.security[3].Oauth2.length: 1
paths./files.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files.get.security[4].Oauth2.length: 1
paths./files.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files.get.security[5].Oauth2.length: 1
paths./files.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files.get.security[6].Oauth2.length: 1
paths./files.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files.get.tags.length: 1
paths./files.get.tags[0]: files
paths./files.parameters.length: 7
paths./files.parameters[0].$ref: '#/parameters/alt'
paths./files.parameters[1].$ref: '#/parameters/fields'
paths./files.parameters[2].$ref: '#/parameters/key'
paths./files.parameters[3].$ref: '#/parameters/oauth_token'
paths./files.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files.parameters[5].$ref: '#/parameters/quotaUser'
paths./files.parameters[6].$ref: '#/parameters/userIp'
paths./files.post.consumes.length: 1
paths./files.post.consumes[0]: application/octet-stream
paths./files.post.description: Creates a new file.
paths./files.post.operationId: drive.files.create
paths./files.post.parameters.length: 6
paths./files.post.parameters[0].default: false
paths./files.post.parameters[0].description: Whether to ignore the domain's default
  visibility settings for the created file. Domain administrators can choose to make
  all uploaded files visible to the domain by default; this parameter bypasses that
  behavior for the request. Permissions are still inherited from parent folders.
paths./files.post.parameters[0].in: query
paths./files.post.parameters[0].name: ignoreDefaultVisibility
paths./files.post.parameters[0].type: boolean
paths./files.post.parameters[1].default: false
paths./files.post.parameters[1].description: Whether to set the 'keepForever' field
  in the new head revision. This is only applicable to files with binary content in
  Drive.
paths./files.post.parameters[1].in: query
paths./files.post.parameters[1].name: keepRevisionForever
paths./files.post.parameters[1].type: boolean
paths./files.post.parameters[2].description: A language hint for OCR processing during
  image import (ISO 639-1 code).
paths./files.post.parameters[2].in: query
paths./files.post.parameters[2].name: ocrLanguage
paths./files.post.parameters[2].type: string
paths./files.post.parameters[3].default: false
paths./files.post.parameters[3].description: Whether the requesting application supports
  Team Drives.
paths./files.post.parameters[3].in: query
paths./files.post.parameters[3].name: supportsTeamDrives
paths./files.post.parameters[3].type: boolean
paths./files.post.parameters[4].default: false
paths./files.post.parameters[4].description: Whether to use the uploaded content as
  indexable text.
paths./files.post.parameters[4].in: query
paths./files.post.parameters[4].name: useContentAsIndexableText
paths./files.post.parameters[4].type: boolean
paths./files.post.parameters[5].in: body
paths./files.post.parameters[5].name: body
paths./files.post.parameters[5].schema.$ref: '#/definitions/File'
paths./files.post.responses.200.description: Successful response
paths./files.post.responses.200.schema.$ref: '#/definitions/File'
paths./files.post.security.length: 3
paths./files.post.security[0].Oauth2.length: 1
paths./files.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files.post.security[1].Oauth2.length: 1
paths./files.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files.post.security[2].Oauth2.length: 1
paths./files.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files.post.tags.length: 1
paths./files.post.tags[0]: files
paths./files/{fileId}.delete.description: Permanently deletes a file owned by the
  user without moving it to the trash. If the file belongs to a Team Drive the user
  must be an organizer on the parent. If the target is a folder, all descendants owned
  by the user are also deleted.
paths./files/{fileId}.delete.operationId: drive.files.delete
paths./files/{fileId}.delete.parameters.length: 2
paths./files/{fileId}.delete.parameters[0].description: The ID of the file.
paths./files/{fileId}.delete.parameters[0].in: path
paths./files/{fileId}.delete.parameters[0].name: fileId
paths./files/{fileId}.delete.parameters[0].required: true
paths./files/{fileId}.delete.parameters[0].type: string
paths./files/{fileId}.delete.parameters[1].default: false
paths./files/{fileId}.delete.parameters[1].description: Whether the requesting application
  supports Team Drives.
paths./files/{fileId}.delete.parameters[1].in: query
paths./files/{fileId}.delete.parameters[1].name: supportsTeamDrives
paths./files/{fileId}.delete.parameters[1].type: boolean
paths./files/{fileId}.delete.responses.200.description: Successful response
paths./files/{fileId}.delete.security.length: 3
paths./files/{fileId}.delete.security[0].Oauth2.length: 1
paths./files/{fileId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}.delete.security[1].Oauth2.length: 1
paths./files/{fileId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}.delete.security[2].Oauth2.length: 1
paths./files/{fileId}.delete.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}.delete.tags.length: 1
paths./files/{fileId}.delete.tags[0]: files
paths./files/{fileId}.get.description: Gets a file's metadata or content by ID.
paths./files/{fileId}.get.operationId: drive.files.get
paths./files/{fileId}.get.parameters.length: 3
paths./files/{fileId}.get.parameters[0].description: The ID of the file.
paths./files/{fileId}.get.parameters[0].in: path
paths./files/{fileId}.get.parameters[0].name: fileId
paths./files/{fileId}.get.parameters[0].required: true
paths./files/{fileId}.get.parameters[0].type: string
paths./files/{fileId}.get.parameters[1].default: false
paths./files/{fileId}.get.parameters[1].description: Whether the user is acknowledging
  the risk of downloading known malware or other abusive files. This is only applicable
  when alt=media.
paths./files/{fileId}.get.parameters[1].in: query
paths./files/{fileId}.get.parameters[1].name: acknowledgeAbuse
paths./files/{fileId}.get.parameters[1].type: boolean
paths./files/{fileId}.get.parameters[2].default: false
paths./files/{fileId}.get.parameters[2].description: Whether the requesting application
  supports Team Drives.
paths./files/{fileId}.get.parameters[2].in: query
paths./files/{fileId}.get.parameters[2].name: supportsTeamDrives
paths./files/{fileId}.get.parameters[2].type: boolean
paths./files/{fileId}.get.responses.200.description: Successful response
paths./files/{fileId}.get.responses.200.schema.$ref: '#/definitions/File'
paths./files/{fileId}.get.security.length: 7
paths./files/{fileId}.get.security[0].Oauth2.length: 1
paths./files/{fileId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}.get.security[1].Oauth2.length: 1
paths./files/{fileId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}.get.security[2].Oauth2.length: 1
paths./files/{fileId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}.get.security[3].Oauth2.length: 1
paths./files/{fileId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}.get.security[4].Oauth2.length: 1
paths./files/{fileId}.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}.get.security[5].Oauth2.length: 1
paths./files/{fileId}.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}.get.security[6].Oauth2.length: 1
paths./files/{fileId}.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}.get.tags.length: 1
paths./files/{fileId}.get.tags[0]: files
paths./files/{fileId}.parameters.length: 7
paths./files/{fileId}.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}.patch.consumes.length: 1
paths./files/{fileId}.patch.consumes[0]: application/octet-stream
paths./files/{fileId}.patch.description: Updates a file's metadata and/or content
  with patch semantics.
paths./files/{fileId}.patch.operationId: drive.files.update
paths./files/{fileId}.patch.parameters.length: 8
paths./files/{fileId}.patch.parameters[0].description: The ID of the file.
paths./files/{fileId}.patch.parameters[0].in: path
paths./files/{fileId}.patch.parameters[0].name: fileId
paths./files/{fileId}.patch.parameters[0].required: true
paths./files/{fileId}.patch.parameters[0].type: string
paths./files/{fileId}.patch.parameters[1].description: A comma-separated list of parent
  IDs to add.
paths./files/{fileId}.patch.parameters[1].in: query
paths./files/{fileId}.patch.parameters[1].name: addParents
paths./files/{fileId}.patch.parameters[1].type: string
paths./files/{fileId}.patch.parameters[2].default: false
paths./files/{fileId}.patch.parameters[2].description: Whether to set the 'keepForever'
  field in the new head revision. This is only applicable to files with binary content
  in Drive.
paths./files/{fileId}.patch.parameters[2].in: query
paths./files/{fileId}.patch.parameters[2].name: keepRevisionForever
paths./files/{fileId}.patch.parameters[2].type: boolean
paths./files/{fileId}.patch.parameters[3].description: A language hint for OCR processing
  during image import (ISO 639-1 code).
paths./files/{fileId}.patch.parameters[3].in: query
paths./files/{fileId}.patch.parameters[3].name: ocrLanguage
paths./files/{fileId}.patch.parameters[3].type: string
paths./files/{fileId}.patch.parameters[4].description: A comma-separated list of parent
  IDs to remove.
paths./files/{fileId}.patch.parameters[4].in: query
paths./files/{fileId}.patch.parameters[4].name: removeParents
paths./files/{fileId}.patch.parameters[4].type: string
paths./files/{fileId}.patch.parameters[5].default: false
paths./files/{fileId}.patch.parameters[5].description: Whether the requesting application
  supports Team Drives.
paths./files/{fileId}.patch.parameters[5].in: query
paths./files/{fileId}.patch.parameters[5].name: supportsTeamDrives
paths./files/{fileId}.patch.parameters[5].type: boolean
paths./files/{fileId}.patch.parameters[6].default: false
paths./files/{fileId}.patch.parameters[6].description: Whether to use the uploaded
  content as indexable text.
paths./files/{fileId}.patch.parameters[6].in: query
paths./files/{fileId}.patch.parameters[6].name: useContentAsIndexableText
paths./files/{fileId}.patch.parameters[6].type: boolean
paths./files/{fileId}.patch.parameters[7].in: body
paths./files/{fileId}.patch.parameters[7].name: body
paths./files/{fileId}.patch.parameters[7].schema.$ref: '#/definitions/File'
paths./files/{fileId}.patch.responses.200.description: Successful response
paths./files/{fileId}.patch.responses.200.schema.$ref: '#/definitions/File'
paths./files/{fileId}.patch.security.length: 5
paths./files/{fileId}.patch.security[0].Oauth2.length: 1
paths./files/{fileId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}.patch.security[1].Oauth2.length: 1
paths./files/{fileId}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}.patch.security[2].Oauth2.length: 1
paths./files/{fileId}.patch.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}.patch.security[3].Oauth2.length: 1
paths./files/{fileId}.patch.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}.patch.security[4].Oauth2.length: 1
paths./files/{fileId}.patch.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.scripts
paths./files/{fileId}.patch.tags.length: 1
paths./files/{fileId}.patch.tags[0]: files
paths./files/{fileId}/comments.get.description: Lists a file's comments.
paths./files/{fileId}/comments.get.operationId: drive.comments.list
paths./files/{fileId}/comments.get.parameters.length: 5
paths./files/{fileId}/comments.get.parameters[0].description: The ID of the file.
paths./files/{fileId}/comments.get.parameters[0].in: path
paths./files/{fileId}/comments.get.parameters[0].name: fileId
paths./files/{fileId}/comments.get.parameters[0].required: true
paths./files/{fileId}/comments.get.parameters[0].type: string
paths./files/{fileId}/comments.get.parameters[1].default: false
paths./files/{fileId}/comments.get.parameters[1].description: Whether to include deleted
  comments. Deleted comments will not include their original content.
paths./files/{fileId}/comments.get.parameters[1].in: query
paths./files/{fileId}/comments.get.parameters[1].name: includeDeleted
paths./files/{fileId}/comments.get.parameters[1].type: boolean
paths./files/{fileId}/comments.get.parameters[2].default: 20
paths./files/{fileId}/comments.get.parameters[2].description: The maximum number of
  comments to return per page.
paths./files/{fileId}/comments.get.parameters[2].in: query
paths./files/{fileId}/comments.get.parameters[2].maximum: 100
paths./files/{fileId}/comments.get.parameters[2].minimum: 1
paths./files/{fileId}/comments.get.parameters[2].name: pageSize
paths./files/{fileId}/comments.get.parameters[2].type: integer
paths./files/{fileId}/comments.get.parameters[3].description: The token for continuing
  a previous list request on the next page. This should be set to the value of 'nextPageToken'
  from the previous response.
paths./files/{fileId}/comments.get.parameters[3].in: query
paths./files/{fileId}/comments.get.parameters[3].name: pageToken
paths./files/{fileId}/comments.get.parameters[3].type: string
paths./files/{fileId}/comments.get.parameters[4].description: The minimum value of
  'modifiedTime' for the result comments (RFC 3339 date-time).
paths./files/{fileId}/comments.get.parameters[4].in: query
paths./files/{fileId}/comments.get.parameters[4].name: startModifiedTime
paths./files/{fileId}/comments.get.parameters[4].type: string
paths./files/{fileId}/comments.get.responses.200.description: Successful response
paths./files/{fileId}/comments.get.responses.200.schema.$ref: '#/definitions/CommentList'
paths./files/{fileId}/comments.get.security.length: 3
paths./files/{fileId}/comments.get.security[0].Oauth2.length: 1
paths./files/{fileId}/comments.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments.get.security[1].Oauth2.length: 1
paths./files/{fileId}/comments.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments.get.security[2].Oauth2.length: 1
paths./files/{fileId}/comments.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/comments.get.tags.length: 1
paths./files/{fileId}/comments.get.tags[0]: comments
paths./files/{fileId}/comments.parameters.length: 7
paths./files/{fileId}/comments.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/comments.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/comments.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/comments.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/comments.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/comments.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/comments.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/comments.post.description: Creates a new comment on a file.
paths./files/{fileId}/comments.post.operationId: drive.comments.create
paths./files/{fileId}/comments.post.parameters.length: 2
paths./files/{fileId}/comments.post.parameters[0].description: The ID of the file.
paths./files/{fileId}/comments.post.parameters[0].in: path
paths./files/{fileId}/comments.post.parameters[0].name: fileId
paths./files/{fileId}/comments.post.parameters[0].required: true
paths./files/{fileId}/comments.post.parameters[0].type: string
paths./files/{fileId}/comments.post.parameters[1].in: body
paths./files/{fileId}/comments.post.parameters[1].name: body
paths./files/{fileId}/comments.post.parameters[1].schema.$ref: '#/definitions/Comment'
paths./files/{fileId}/comments.post.responses.200.description: Successful response
paths./files/{fileId}/comments.post.responses.200.schema.$ref: '#/definitions/Comment'
paths./files/{fileId}/comments.post.security.length: 2
paths./files/{fileId}/comments.post.security[0].Oauth2.length: 1
paths./files/{fileId}/comments.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments.post.security[1].Oauth2.length: 1
paths./files/{fileId}/comments.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments.post.tags.length: 1
paths./files/{fileId}/comments.post.tags[0]: comments
paths./files/{fileId}/comments/{commentId}.delete.description: Deletes a comment.
paths./files/{fileId}/comments/{commentId}.delete.operationId: drive.comments.delete
paths./files/{fileId}/comments/{commentId}.delete.parameters.length: 2
paths./files/{fileId}/comments/{commentId}.delete.parameters[0].description: The ID
  of the file.
paths./files/{fileId}/comments/{commentId}.delete.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}.delete.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}.delete.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}.delete.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}.delete.parameters[1].description: The ID
  of the comment.
paths./files/{fileId}/comments/{commentId}.delete.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}.delete.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}.delete.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}.delete.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}.delete.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}.delete.security.length: 2
paths./files/{fileId}/comments/{commentId}.delete.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}.delete.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}.delete.tags.length: 1
paths./files/{fileId}/comments/{commentId}.delete.tags[0]: comments
paths./files/{fileId}/comments/{commentId}.get.description: Gets a comment by ID.
paths./files/{fileId}/comments/{commentId}.get.operationId: drive.comments.get
paths./files/{fileId}/comments/{commentId}.get.parameters.length: 3
paths./files/{fileId}/comments/{commentId}.get.parameters[0].description: The ID of
  the file.
paths./files/{fileId}/comments/{commentId}.get.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}.get.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}.get.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}.get.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}.get.parameters[1].description: The ID of
  the comment.
paths./files/{fileId}/comments/{commentId}.get.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}.get.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}.get.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}.get.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}.get.parameters[2].default: false
paths./files/{fileId}/comments/{commentId}.get.parameters[2].description: Whether
  to return deleted comments. Deleted comments will not include their original content.
paths./files/{fileId}/comments/{commentId}.get.parameters[2].in: query
paths./files/{fileId}/comments/{commentId}.get.parameters[2].name: includeDeleted
paths./files/{fileId}/comments/{commentId}.get.parameters[2].type: boolean
paths./files/{fileId}/comments/{commentId}.get.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}.get.responses.200.schema.$ref: '#/definitions/Comment'
paths./files/{fileId}/comments/{commentId}.get.security.length: 3
paths./files/{fileId}/comments/{commentId}.get.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}.get.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}.get.security[2].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/comments/{commentId}.get.tags.length: 1
paths./files/{fileId}/comments/{commentId}.get.tags[0]: comments
paths./files/{fileId}/comments/{commentId}.parameters.length: 7
paths./files/{fileId}/comments/{commentId}.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/comments/{commentId}.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/comments/{commentId}.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/comments/{commentId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/comments/{commentId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/comments/{commentId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/comments/{commentId}.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/comments/{commentId}.patch.description: Updates a comment with
  patch semantics.
paths./files/{fileId}/comments/{commentId}.patch.operationId: drive.comments.update
paths./files/{fileId}/comments/{commentId}.patch.parameters.length: 3
paths./files/{fileId}/comments/{commentId}.patch.parameters[0].description: The ID
  of the file.
paths./files/{fileId}/comments/{commentId}.patch.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}.patch.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}.patch.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}.patch.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}.patch.parameters[1].description: The ID
  of the comment.
paths./files/{fileId}/comments/{commentId}.patch.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}.patch.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}.patch.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}.patch.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}.patch.parameters[2].in: body
paths./files/{fileId}/comments/{commentId}.patch.parameters[2].name: body
paths./files/{fileId}/comments/{commentId}.patch.parameters[2].schema.$ref: '#/definitions/Comment'
paths./files/{fileId}/comments/{commentId}.patch.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}.patch.responses.200.schema.$ref: '#/definitions/Comment'
paths./files/{fileId}/comments/{commentId}.patch.security.length: 2
paths./files/{fileId}/comments/{commentId}.patch.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}.patch.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}.patch.tags.length: 1
paths./files/{fileId}/comments/{commentId}.patch.tags[0]: comments
paths./files/{fileId}/comments/{commentId}/replies.get.description: Lists a comment's
  replies.
paths./files/{fileId}/comments/{commentId}/replies.get.operationId: drive.replies.list
paths./files/{fileId}/comments/{commentId}/replies.get.parameters.length: 5
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[1].description: The
  ID of the comment.
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[2].default: false
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[2].description: Whether
  to include deleted replies. Deleted replies will not include their original content.
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[2].in: query
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[2].name: includeDeleted
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[2].type: boolean
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].default: 20
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].description: The
  maximum number of replies to return per page.
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].in: query
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].maximum: 100
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].minimum: 1
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].name: pageSize
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[3].type: integer
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[4].description: The
  token for continuing a previous list request on the next page. This should be set
  to the value of 'nextPageToken' from the previous response.
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[4].in: query
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[4].name: pageToken
paths./files/{fileId}/comments/{commentId}/replies.get.parameters[4].type: string
paths./files/{fileId}/comments/{commentId}/replies.get.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}/replies.get.responses.200.schema.$ref: '#/definitions/ReplyList'
paths./files/{fileId}/comments/{commentId}/replies.get.security.length: 3
paths./files/{fileId}/comments/{commentId}/replies.get.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}/replies.get.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}/replies.get.security[2].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/comments/{commentId}/replies.get.tags.length: 1
paths./files/{fileId}/comments/{commentId}/replies.get.tags[0]: replies
paths./files/{fileId}/comments/{commentId}/replies.parameters.length: 7
paths./files/{fileId}/comments/{commentId}/replies.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/comments/{commentId}/replies.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/comments/{commentId}/replies.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/comments/{commentId}/replies.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/comments/{commentId}/replies.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/comments/{commentId}/replies.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/comments/{commentId}/replies.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/comments/{commentId}/replies.post.description: Creates a new
  reply to a comment.
paths./files/{fileId}/comments/{commentId}/replies.post.operationId: drive.replies.create
paths./files/{fileId}/comments/{commentId}/replies.post.parameters.length: 3
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[1].description: The
  ID of the comment.
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[2].in: body
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[2].name: body
paths./files/{fileId}/comments/{commentId}/replies.post.parameters[2].schema.$ref: '#/definitions/Reply'
paths./files/{fileId}/comments/{commentId}/replies.post.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}/replies.post.responses.200.schema.$ref: '#/definitions/Reply'
paths./files/{fileId}/comments/{commentId}/replies.post.security.length: 2
paths./files/{fileId}/comments/{commentId}/replies.post.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}/replies.post.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}/replies.post.tags.length: 1
paths./files/{fileId}/comments/{commentId}/replies.post.tags[0]: replies
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.description: Deletes
  a reply.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.operationId: drive.replies.delete
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters.length: 3
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[1].description: The
  ID of the comment.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[2].description: The
  ID of the reply.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[2].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[2].name: replyId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[2].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.parameters[2].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.security.length: 2
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.tags.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.delete.tags[0]: replies
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.description: Gets
  a reply by ID.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.operationId: drive.replies.get
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters.length: 4
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[1].description: The
  ID of the comment.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[2].description: The
  ID of the reply.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[2].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[2].name: replyId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[2].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[2].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[3].default: false
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[3].description: Whether
  to return deleted replies. Deleted replies will not include their original content.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[3].in: query
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[3].name: includeDeleted
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.parameters[3].type: boolean
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.responses.200.schema.$ref: '#/definitions/Reply'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security.length: 3
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[2].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.tags.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.get.tags[0]: replies
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters.length: 7
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.description: Updates
  a reply with patch semantics.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.operationId: drive.replies.update
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters.length: 4
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[0].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[0].name: fileId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[0].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[0].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[1].description: The
  ID of the comment.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[1].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[1].name: commentId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[1].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[1].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[2].description: The
  ID of the reply.
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[2].in: path
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[2].name: replyId
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[2].required: true
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[2].type: string
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[3].in: body
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[3].name: body
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.parameters[3].schema.$ref: '#/definitions/Reply'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.responses.200.description: Successful
  response
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.responses.200.schema.$ref: '#/definitions/Reply'
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.security.length: 2
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.security[0].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.security[1].Oauth2.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.tags.length: 1
paths./files/{fileId}/comments/{commentId}/replies/{replyId}.patch.tags[0]: replies
paths./files/{fileId}/copy.parameters.length: 7
paths./files/{fileId}/copy.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/copy.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/copy.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/copy.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/copy.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/copy.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/copy.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/copy.post.description: Creates a copy of a file and applies
  any requested updates with patch semantics.
paths./files/{fileId}/copy.post.operationId: drive.files.copy
paths./files/{fileId}/copy.post.parameters.length: 6
paths./files/{fileId}/copy.post.parameters[0].description: The ID of the file.
paths./files/{fileId}/copy.post.parameters[0].in: path
paths./files/{fileId}/copy.post.parameters[0].name: fileId
paths./files/{fileId}/copy.post.parameters[0].required: true
paths./files/{fileId}/copy.post.parameters[0].type: string
paths./files/{fileId}/copy.post.parameters[1].default: false
paths./files/{fileId}/copy.post.parameters[1].description: Whether to ignore the domain's
  default visibility settings for the created file. Domain administrators can choose
  to make all uploaded files visible to the domain by default; this parameter bypasses
  that behavior for the request. Permissions are still inherited from parent folders.
paths./files/{fileId}/copy.post.parameters[1].in: query
paths./files/{fileId}/copy.post.parameters[1].name: ignoreDefaultVisibility
paths./files/{fileId}/copy.post.parameters[1].type: boolean
paths./files/{fileId}/copy.post.parameters[2].default: false
paths./files/{fileId}/copy.post.parameters[2].description: Whether to set the 'keepForever'
  field in the new head revision. This is only applicable to files with binary content
  in Drive.
paths./files/{fileId}/copy.post.parameters[2].in: query
paths./files/{fileId}/copy.post.parameters[2].name: keepRevisionForever
paths./files/{fileId}/copy.post.parameters[2].type: boolean
paths./files/{fileId}/copy.post.parameters[3].description: A language hint for OCR
  processing during image import (ISO 639-1 code).
paths./files/{fileId}/copy.post.parameters[3].in: query
paths./files/{fileId}/copy.post.parameters[3].name: ocrLanguage
paths./files/{fileId}/copy.post.parameters[3].type: string
paths./files/{fileId}/copy.post.parameters[4].default: false
paths./files/{fileId}/copy.post.parameters[4].description: Whether the requesting
  application supports Team Drives.
paths./files/{fileId}/copy.post.parameters[4].in: query
paths./files/{fileId}/copy.post.parameters[4].name: supportsTeamDrives
paths./files/{fileId}/copy.post.parameters[4].type: boolean
paths./files/{fileId}/copy.post.parameters[5].in: body
paths./files/{fileId}/copy.post.parameters[5].name: body
paths./files/{fileId}/copy.post.parameters[5].schema.$ref: '#/definitions/File'
paths./files/{fileId}/copy.post.responses.200.description: Successful response
paths./files/{fileId}/copy.post.responses.200.schema.$ref: '#/definitions/File'
paths./files/{fileId}/copy.post.security.length: 4
paths./files/{fileId}/copy.post.security[0].Oauth2.length: 1
paths./files/{fileId}/copy.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/copy.post.security[1].Oauth2.length: 1
paths./files/{fileId}/copy.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/copy.post.security[2].Oauth2.length: 1
paths./files/{fileId}/copy.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/copy.post.security[3].Oauth2.length: 1
paths./files/{fileId}/copy.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/copy.post.tags.length: 1
paths./files/{fileId}/copy.post.tags[0]: files
paths./files/{fileId}/export.get.description: Exports a Google Doc to the requested
  MIME type and returns the exported content. Please note that the exported content
  is limited to 10MB.
paths./files/{fileId}/export.get.operationId: drive.files.export
paths./files/{fileId}/export.get.parameters.length: 2
paths./files/{fileId}/export.get.parameters[0].description: The ID of the file.
paths./files/{fileId}/export.get.parameters[0].in: path
paths./files/{fileId}/export.get.parameters[0].name: fileId
paths./files/{fileId}/export.get.parameters[0].required: true
paths./files/{fileId}/export.get.parameters[0].type: string
paths./files/{fileId}/export.get.parameters[1].description: The MIME type of the format
  requested for this export.
paths./files/{fileId}/export.get.parameters[1].in: query
paths./files/{fileId}/export.get.parameters[1].name: mimeType
paths./files/{fileId}/export.get.parameters[1].required: true
paths./files/{fileId}/export.get.parameters[1].type: string
paths./files/{fileId}/export.get.responses.200.description: Successful response
paths./files/{fileId}/export.get.security.length: 3
paths./files/{fileId}/export.get.security[0].Oauth2.length: 1
paths./files/{fileId}/export.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/export.get.security[1].Oauth2.length: 1
paths./files/{fileId}/export.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/export.get.security[2].Oauth2.length: 1
paths./files/{fileId}/export.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/export.get.tags.length: 1
paths./files/{fileId}/export.get.tags[0]: files
paths./files/{fileId}/export.parameters.length: 7
paths./files/{fileId}/export.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/export.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/export.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/export.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/export.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/export.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/export.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/permissions.get.description: Lists a file's or Team Drive's
  permissions.
paths./files/{fileId}/permissions.get.operationId: drive.permissions.list
paths./files/{fileId}/permissions.get.parameters.length: 4
paths./files/{fileId}/permissions.get.parameters[0].description: The ID of the file
  or Team Drive.
paths./files/{fileId}/permissions.get.parameters[0].in: path
paths./files/{fileId}/permissions.get.parameters[0].name: fileId
paths./files/{fileId}/permissions.get.parameters[0].required: true
paths./files/{fileId}/permissions.get.parameters[0].type: string
paths./files/{fileId}/permissions.get.parameters[1].description: The maximum number
  of permissions to return per page. When not set for files in a Team Drive, at most
  100 results will be returned. When not set for files that are not in a Team Drive,
  the entire list will be returned.
paths./files/{fileId}/permissions.get.parameters[1].in: query
paths./files/{fileId}/permissions.get.parameters[1].maximum: 100
paths./files/{fileId}/permissions.get.parameters[1].minimum: 1
paths./files/{fileId}/permissions.get.parameters[1].name: pageSize
paths./files/{fileId}/permissions.get.parameters[1].type: integer
paths./files/{fileId}/permissions.get.parameters[2].description: The token for continuing
  a previous list request on the next page. This should be set to the value of 'nextPageToken'
  from the previous response.
paths./files/{fileId}/permissions.get.parameters[2].in: query
paths./files/{fileId}/permissions.get.parameters[2].name: pageToken
paths./files/{fileId}/permissions.get.parameters[2].type: string
paths./files/{fileId}/permissions.get.parameters[3].default: false
paths./files/{fileId}/permissions.get.parameters[3].description: Whether the requesting
  application supports Team Drives.
paths./files/{fileId}/permissions.get.parameters[3].in: query
paths./files/{fileId}/permissions.get.parameters[3].name: supportsTeamDrives
paths./files/{fileId}/permissions.get.parameters[3].type: boolean
paths./files/{fileId}/permissions.get.responses.200.description: Successful response
paths./files/{fileId}/permissions.get.responses.200.schema.$ref: '#/definitions/PermissionList'
paths./files/{fileId}/permissions.get.security.length: 6
paths./files/{fileId}/permissions.get.security[0].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/permissions.get.security[1].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/permissions.get.security[2].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}/permissions.get.security[3].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}/permissions.get.security[4].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/permissions.get.security[5].Oauth2.length: 1
paths./files/{fileId}/permissions.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/permissions.get.tags.length: 1
paths./files/{fileId}/permissions.get.tags[0]: permissions
paths./files/{fileId}/permissions.parameters.length: 7
paths./files/{fileId}/permissions.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/permissions.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/permissions.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/permissions.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/permissions.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/permissions.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/permissions.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/permissions.post.description: Creates a permission for a file
  or Team Drive.
paths./files/{fileId}/permissions.post.operationId: drive.permissions.create
paths./files/{fileId}/permissions.post.parameters.length: 6
paths./files/{fileId}/permissions.post.parameters[0].description: The ID of the file
  or Team Drive.
paths./files/{fileId}/permissions.post.parameters[0].in: path
paths./files/{fileId}/permissions.post.parameters[0].name: fileId
paths./files/{fileId}/permissions.post.parameters[0].required: true
paths./files/{fileId}/permissions.post.parameters[0].type: string
paths./files/{fileId}/permissions.post.parameters[1].description: A custom message
  to include in the notification email.
paths./files/{fileId}/permissions.post.parameters[1].in: query
paths./files/{fileId}/permissions.post.parameters[1].name: emailMessage
paths./files/{fileId}/permissions.post.parameters[1].type: string
paths./files/{fileId}/permissions.post.parameters[2].description: Whether to send
  a notification email when sharing to users or groups. This defaults to true for
  users and groups, and is not allowed for other requests. It must not be disabled
  for ownership transfers.
paths./files/{fileId}/permissions.post.parameters[2].in: query
paths./files/{fileId}/permissions.post.parameters[2].name: sendNotificationEmail
paths./files/{fileId}/permissions.post.parameters[2].type: boolean
paths./files/{fileId}/permissions.post.parameters[3].default: false
paths./files/{fileId}/permissions.post.parameters[3].description: Whether the requesting
  application supports Team Drives.
paths./files/{fileId}/permissions.post.parameters[3].in: query
paths./files/{fileId}/permissions.post.parameters[3].name: supportsTeamDrives
paths./files/{fileId}/permissions.post.parameters[3].type: boolean
paths./files/{fileId}/permissions.post.parameters[4].default: false
paths./files/{fileId}/permissions.post.parameters[4].description: Whether to transfer
  ownership to the specified user and downgrade the current owner to a writer. This
  parameter is required as an acknowledgement of the side effect.
paths./files/{fileId}/permissions.post.parameters[4].in: query
paths./files/{fileId}/permissions.post.parameters[4].name: transferOwnership
paths./files/{fileId}/permissions.post.parameters[4].type: boolean
paths./files/{fileId}/permissions.post.parameters[5].in: body
paths./files/{fileId}/permissions.post.parameters[5].name: body
paths./files/{fileId}/permissions.post.parameters[5].schema.$ref: '#/definitions/Permission'
paths./files/{fileId}/permissions.post.responses.200.description: Successful response
paths./files/{fileId}/permissions.post.responses.200.schema.$ref: '#/definitions/Permission'
paths./files/{fileId}/permissions.post.security.length: 2
paths./files/{fileId}/permissions.post.security[0].Oauth2.length: 1
paths./files/{fileId}/permissions.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/permissions.post.security[1].Oauth2.length: 1
paths./files/{fileId}/permissions.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/permissions.post.tags.length: 1
paths./files/{fileId}/permissions.post.tags[0]: permissions
paths./files/{fileId}/permissions/{permissionId}.delete.description: Deletes a permission.
paths./files/{fileId}/permissions/{permissionId}.delete.operationId: drive.permissions.delete
paths./files/{fileId}/permissions/{permissionId}.delete.parameters.length: 3
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[0].description: The
  ID of the file or Team Drive.
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[0].in: path
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[0].name: fileId
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[0].required: true
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[0].type: string
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[1].description: The
  ID of the permission.
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[1].in: path
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[1].name: permissionId
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[1].required: true
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[1].type: string
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[2].default: false
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[2].description: Whether
  the requesting application supports Team Drives.
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[2].in: query
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[2].name: supportsTeamDrives
paths./files/{fileId}/permissions/{permissionId}.delete.parameters[2].type: boolean
paths./files/{fileId}/permissions/{permissionId}.delete.responses.200.description: Successful
  response
paths./files/{fileId}/permissions/{permissionId}.delete.security.length: 2
paths./files/{fileId}/permissions/{permissionId}.delete.security[0].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/permissions/{permissionId}.delete.security[1].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/permissions/{permissionId}.delete.tags.length: 1
paths./files/{fileId}/permissions/{permissionId}.delete.tags[0]: permissions
paths./files/{fileId}/permissions/{permissionId}.get.description: Gets a permission
  by ID.
paths./files/{fileId}/permissions/{permissionId}.get.operationId: drive.permissions.get
paths./files/{fileId}/permissions/{permissionId}.get.parameters.length: 3
paths./files/{fileId}/permissions/{permissionId}.get.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/permissions/{permissionId}.get.parameters[0].in: path
paths./files/{fileId}/permissions/{permissionId}.get.parameters[0].name: fileId
paths./files/{fileId}/permissions/{permissionId}.get.parameters[0].required: true
paths./files/{fileId}/permissions/{permissionId}.get.parameters[0].type: string
paths./files/{fileId}/permissions/{permissionId}.get.parameters[1].description: The
  ID of the permission.
paths./files/{fileId}/permissions/{permissionId}.get.parameters[1].in: path
paths./files/{fileId}/permissions/{permissionId}.get.parameters[1].name: permissionId
paths./files/{fileId}/permissions/{permissionId}.get.parameters[1].required: true
paths./files/{fileId}/permissions/{permissionId}.get.parameters[1].type: string
paths./files/{fileId}/permissions/{permissionId}.get.parameters[2].default: false
paths./files/{fileId}/permissions/{permissionId}.get.parameters[2].description: Whether
  the requesting application supports Team Drives.
paths./files/{fileId}/permissions/{permissionId}.get.parameters[2].in: query
paths./files/{fileId}/permissions/{permissionId}.get.parameters[2].name: supportsTeamDrives
paths./files/{fileId}/permissions/{permissionId}.get.parameters[2].type: boolean
paths./files/{fileId}/permissions/{permissionId}.get.responses.200.description: Successful
  response
paths./files/{fileId}/permissions/{permissionId}.get.responses.200.schema.$ref: '#/definitions/Permission'
paths./files/{fileId}/permissions/{permissionId}.get.security.length: 6
paths./files/{fileId}/permissions/{permissionId}.get.security[0].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/permissions/{permissionId}.get.security[1].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/permissions/{permissionId}.get.security[2].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}/permissions/{permissionId}.get.security[3].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}/permissions/{permissionId}.get.security[4].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/permissions/{permissionId}.get.security[5].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/permissions/{permissionId}.get.tags.length: 1
paths./files/{fileId}/permissions/{permissionId}.get.tags[0]: permissions
paths./files/{fileId}/permissions/{permissionId}.parameters.length: 7
paths./files/{fileId}/permissions/{permissionId}.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/permissions/{permissionId}.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/permissions/{permissionId}.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/permissions/{permissionId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/permissions/{permissionId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/permissions/{permissionId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/permissions/{permissionId}.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/permissions/{permissionId}.patch.description: Updates a permission
  with patch semantics.
paths./files/{fileId}/permissions/{permissionId}.patch.operationId: drive.permissions.update
paths./files/{fileId}/permissions/{permissionId}.patch.parameters.length: 6
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[0].description: The
  ID of the file or Team Drive.
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[0].in: path
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[0].name: fileId
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[0].required: true
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[0].type: string
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[1].description: The
  ID of the permission.
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[1].in: path
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[1].name: permissionId
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[1].required: true
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[1].type: string
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[2].default: false
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[2].description: Whether
  to remove the expiration date.
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[2].in: query
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[2].name: removeExpiration
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[2].type: boolean
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[3].default: false
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[3].description: Whether
  the requesting application supports Team Drives.
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[3].in: query
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[3].name: supportsTeamDrives
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[3].type: boolean
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[4].default: false
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[4].description: Whether
  to transfer ownership to the specified user and downgrade the current owner to a
  writer. This parameter is required as an acknowledgement of the side effect.
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[4].in: query
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[4].name: transferOwnership
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[4].type: boolean
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[5].in: body
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[5].name: body
paths./files/{fileId}/permissions/{permissionId}.patch.parameters[5].schema.$ref: '#/definitions/Permission'
paths./files/{fileId}/permissions/{permissionId}.patch.responses.200.description: Successful
  response
paths./files/{fileId}/permissions/{permissionId}.patch.responses.200.schema.$ref: '#/definitions/Permission'
paths./files/{fileId}/permissions/{permissionId}.patch.security.length: 2
paths./files/{fileId}/permissions/{permissionId}.patch.security[0].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/permissions/{permissionId}.patch.security[1].Oauth2.length: 1
paths./files/{fileId}/permissions/{permissionId}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/permissions/{permissionId}.patch.tags.length: 1
paths./files/{fileId}/permissions/{permissionId}.patch.tags[0]: permissions
paths./files/{fileId}/revisions.get.description: Lists a file's revisions.
paths./files/{fileId}/revisions.get.operationId: drive.revisions.list
paths./files/{fileId}/revisions.get.parameters.length: 3
paths./files/{fileId}/revisions.get.parameters[0].description: The ID of the file.
paths./files/{fileId}/revisions.get.parameters[0].in: path
paths./files/{fileId}/revisions.get.parameters[0].name: fileId
paths./files/{fileId}/revisions.get.parameters[0].required: true
paths./files/{fileId}/revisions.get.parameters[0].type: string
paths./files/{fileId}/revisions.get.parameters[1].default: 200
paths./files/{fileId}/revisions.get.parameters[1].description: The maximum number
  of revisions to return per page.
paths./files/{fileId}/revisions.get.parameters[1].in: query
paths./files/{fileId}/revisions.get.parameters[1].maximum: 1000
paths./files/{fileId}/revisions.get.parameters[1].minimum: 1
paths./files/{fileId}/revisions.get.parameters[1].name: pageSize
paths./files/{fileId}/revisions.get.parameters[1].type: integer
paths./files/{fileId}/revisions.get.parameters[2].description: The token for continuing
  a previous list request on the next page. This should be set to the value of 'nextPageToken'
  from the previous response.
paths./files/{fileId}/revisions.get.parameters[2].in: query
paths./files/{fileId}/revisions.get.parameters[2].name: pageToken
paths./files/{fileId}/revisions.get.parameters[2].type: string
paths./files/{fileId}/revisions.get.responses.200.description: Successful response
paths./files/{fileId}/revisions.get.responses.200.schema.$ref: '#/definitions/RevisionList'
paths./files/{fileId}/revisions.get.security.length: 7
paths./files/{fileId}/revisions.get.security[0].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/revisions.get.security[1].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/revisions.get.security[2].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/revisions.get.security[3].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}/revisions.get.security[4].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}/revisions.get.security[5].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/revisions.get.security[6].Oauth2.length: 1
paths./files/{fileId}/revisions.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/revisions.get.tags.length: 1
paths./files/{fileId}/revisions.get.tags[0]: revisions
paths./files/{fileId}/revisions.parameters.length: 7
paths./files/{fileId}/revisions.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/revisions.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/revisions.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/revisions.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/revisions.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/revisions.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/revisions.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/revisions/{revisionId}.delete.description: Permanently deletes
  a revision. This method is only applicable to files with binary content in Drive.
paths./files/{fileId}/revisions/{revisionId}.delete.operationId: drive.revisions.delete
paths./files/{fileId}/revisions/{revisionId}.delete.parameters.length: 2
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[0].in: path
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[0].name: fileId
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[0].required: true
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[0].type: string
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[1].description: The
  ID of the revision.
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[1].in: path
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[1].name: revisionId
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[1].required: true
paths./files/{fileId}/revisions/{revisionId}.delete.parameters[1].type: string
paths./files/{fileId}/revisions/{revisionId}.delete.responses.200.description: Successful
  response
paths./files/{fileId}/revisions/{revisionId}.delete.security.length: 3
paths./files/{fileId}/revisions/{revisionId}.delete.security[0].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/revisions/{revisionId}.delete.security[1].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.delete.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/revisions/{revisionId}.delete.security[2].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.delete.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/revisions/{revisionId}.delete.tags.length: 1
paths./files/{fileId}/revisions/{revisionId}.delete.tags[0]: revisions
paths./files/{fileId}/revisions/{revisionId}.get.description: Gets a revision's metadata
  or content by ID.
paths./files/{fileId}/revisions/{revisionId}.get.operationId: drive.revisions.get
paths./files/{fileId}/revisions/{revisionId}.get.parameters.length: 3
paths./files/{fileId}/revisions/{revisionId}.get.parameters[0].description: The ID
  of the file.
paths./files/{fileId}/revisions/{revisionId}.get.parameters[0].in: path
paths./files/{fileId}/revisions/{revisionId}.get.parameters[0].name: fileId
paths./files/{fileId}/revisions/{revisionId}.get.parameters[0].required: true
paths./files/{fileId}/revisions/{revisionId}.get.parameters[0].type: string
paths./files/{fileId}/revisions/{revisionId}.get.parameters[1].description: The ID
  of the revision.
paths./files/{fileId}/revisions/{revisionId}.get.parameters[1].in: path
paths./files/{fileId}/revisions/{revisionId}.get.parameters[1].name: revisionId
paths./files/{fileId}/revisions/{revisionId}.get.parameters[1].required: true
paths./files/{fileId}/revisions/{revisionId}.get.parameters[1].type: string
paths./files/{fileId}/revisions/{revisionId}.get.parameters[2].default: false
paths./files/{fileId}/revisions/{revisionId}.get.parameters[2].description: Whether
  the user is acknowledging the risk of downloading known malware or other abusive
  files. This is only applicable when alt=media.
paths./files/{fileId}/revisions/{revisionId}.get.parameters[2].in: query
paths./files/{fileId}/revisions/{revisionId}.get.parameters[2].name: acknowledgeAbuse
paths./files/{fileId}/revisions/{revisionId}.get.parameters[2].type: boolean
paths./files/{fileId}/revisions/{revisionId}.get.responses.200.description: Successful
  response
paths./files/{fileId}/revisions/{revisionId}.get.responses.200.schema.$ref: '#/definitions/Revision'
paths./files/{fileId}/revisions/{revisionId}.get.security.length: 7
paths./files/{fileId}/revisions/{revisionId}.get.security[0].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/revisions/{revisionId}.get.security[1].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/revisions/{revisionId}.get.security[2].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/revisions/{revisionId}.get.security[3].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}/revisions/{revisionId}.get.security[4].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}/revisions/{revisionId}.get.security[5].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/revisions/{revisionId}.get.security[6].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/revisions/{revisionId}.get.tags.length: 1
paths./files/{fileId}/revisions/{revisionId}.get.tags[0]: revisions
paths./files/{fileId}/revisions/{revisionId}.parameters.length: 7
paths./files/{fileId}/revisions/{revisionId}.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/revisions/{revisionId}.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/revisions/{revisionId}.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/revisions/{revisionId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/revisions/{revisionId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/revisions/{revisionId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/revisions/{revisionId}.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/revisions/{revisionId}.patch.description: Updates a revision
  with patch semantics.
paths./files/{fileId}/revisions/{revisionId}.patch.operationId: drive.revisions.update
paths./files/{fileId}/revisions/{revisionId}.patch.parameters.length: 3
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[0].description: The
  ID of the file.
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[0].in: path
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[0].name: fileId
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[0].required: true
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[0].type: string
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[1].description: The
  ID of the revision.
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[1].in: path
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[1].name: revisionId
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[1].required: true
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[1].type: string
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[2].in: body
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[2].name: body
paths./files/{fileId}/revisions/{revisionId}.patch.parameters[2].schema.$ref: '#/definitions/Revision'
paths./files/{fileId}/revisions/{revisionId}.patch.responses.200.description: Successful
  response
paths./files/{fileId}/revisions/{revisionId}.patch.responses.200.schema.$ref: '#/definitions/Revision'
paths./files/{fileId}/revisions/{revisionId}.patch.security.length: 3
paths./files/{fileId}/revisions/{revisionId}.patch.security[0].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/revisions/{revisionId}.patch.security[1].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.patch.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/revisions/{revisionId}.patch.security[2].Oauth2.length: 1
paths./files/{fileId}/revisions/{revisionId}.patch.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/revisions/{revisionId}.patch.tags.length: 1
paths./files/{fileId}/revisions/{revisionId}.patch.tags[0]: revisions
paths./files/{fileId}/watch.parameters.length: 7
paths./files/{fileId}/watch.parameters[0].$ref: '#/parameters/alt'
paths./files/{fileId}/watch.parameters[1].$ref: '#/parameters/fields'
paths./files/{fileId}/watch.parameters[2].$ref: '#/parameters/key'
paths./files/{fileId}/watch.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/{fileId}/watch.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/{fileId}/watch.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/{fileId}/watch.parameters[6].$ref: '#/parameters/userIp'
paths./files/{fileId}/watch.post.description: Subscribes to changes to a file
paths./files/{fileId}/watch.post.operationId: drive.files.watch
paths./files/{fileId}/watch.post.parameters.length: 4
paths./files/{fileId}/watch.post.parameters[0].description: The ID of the file.
paths./files/{fileId}/watch.post.parameters[0].in: path
paths./files/{fileId}/watch.post.parameters[0].name: fileId
paths./files/{fileId}/watch.post.parameters[0].required: true
paths./files/{fileId}/watch.post.parameters[0].type: string
paths./files/{fileId}/watch.post.parameters[1].default: false
paths./files/{fileId}/watch.post.parameters[1].description: Whether the user is acknowledging
  the risk of downloading known malware or other abusive files. This is only applicable
  when alt=media.
paths./files/{fileId}/watch.post.parameters[1].in: query
paths./files/{fileId}/watch.post.parameters[1].name: acknowledgeAbuse
paths./files/{fileId}/watch.post.parameters[1].type: boolean
paths./files/{fileId}/watch.post.parameters[2].default: false
paths./files/{fileId}/watch.post.parameters[2].description: Whether the requesting
  application supports Team Drives.
paths./files/{fileId}/watch.post.parameters[2].in: query
paths./files/{fileId}/watch.post.parameters[2].name: supportsTeamDrives
paths./files/{fileId}/watch.post.parameters[2].type: boolean
paths./files/{fileId}/watch.post.parameters[3].in: body
paths./files/{fileId}/watch.post.parameters[3].name: resource
paths./files/{fileId}/watch.post.parameters[3].schema.$ref: '#/definitions/Channel'
paths./files/{fileId}/watch.post.responses.200.description: Successful response
paths./files/{fileId}/watch.post.responses.200.schema.$ref: '#/definitions/Channel'
paths./files/{fileId}/watch.post.security.length: 7
paths./files/{fileId}/watch.post.security[0].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/{fileId}/watch.post.security[1].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/{fileId}/watch.post.security[2].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/{fileId}/watch.post.security[3].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[3].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata
paths./files/{fileId}/watch.post.security[4].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[4].Oauth2[0]: https://www.googleapis.com/auth/drive.metadata.readonly
paths./files/{fileId}/watch.post.security[5].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[5].Oauth2[0]: https://www.googleapis.com/auth/drive.photos.readonly
paths./files/{fileId}/watch.post.security[6].Oauth2.length: 1
paths./files/{fileId}/watch.post.security[6].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./files/{fileId}/watch.post.tags.length: 1
paths./files/{fileId}/watch.post.tags[0]: files
paths./files/generateIds.get.description: Generates a set of file IDs which can be
  provided in create requests.
paths./files/generateIds.get.operationId: drive.files.generateIds
paths./files/generateIds.get.parameters.length: 2
paths./files/generateIds.get.parameters[0].default: 10
paths./files/generateIds.get.parameters[0].description: The number of IDs to return.
paths./files/generateIds.get.parameters[0].in: query
paths./files/generateIds.get.parameters[0].maximum: 1000
paths./files/generateIds.get.parameters[0].minimum: 1
paths./files/generateIds.get.parameters[0].name: count
paths./files/generateIds.get.parameters[0].type: integer
paths./files/generateIds.get.parameters[1].default: drive
paths./files/generateIds.get.parameters[1].description: The space in which the IDs
  can be used to create new files. Supported values are 'drive' and 'appDataFolder'.
paths./files/generateIds.get.parameters[1].in: query
paths./files/generateIds.get.parameters[1].name: space
paths./files/generateIds.get.parameters[1].type: string
paths./files/generateIds.get.responses.200.description: Successful response
paths./files/generateIds.get.responses.200.schema.$ref: '#/definitions/GeneratedIds'
paths./files/generateIds.get.security.length: 3
paths./files/generateIds.get.security[0].Oauth2.length: 1
paths./files/generateIds.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/generateIds.get.security[1].Oauth2.length: 1
paths./files/generateIds.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.appdata
paths./files/generateIds.get.security[2].Oauth2.length: 1
paths./files/generateIds.get.security[2].Oauth2[0]: https://www.googleapis.com/auth/drive.file
paths./files/generateIds.get.tags.length: 1
paths./files/generateIds.get.tags[0]: files
paths./files/generateIds.parameters.length: 7
paths./files/generateIds.parameters[0].$ref: '#/parameters/alt'
paths./files/generateIds.parameters[1].$ref: '#/parameters/fields'
paths./files/generateIds.parameters[2].$ref: '#/parameters/key'
paths./files/generateIds.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/generateIds.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/generateIds.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/generateIds.parameters[6].$ref: '#/parameters/userIp'
paths./files/trash.delete.description: Permanently deletes all of the user's trashed
  files.
paths./files/trash.delete.operationId: drive.files.emptyTrash
paths./files/trash.delete.responses.200.description: Successful response
paths./files/trash.delete.security.length: 1
paths./files/trash.delete.security[0].Oauth2.length: 1
paths./files/trash.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./files/trash.delete.tags.length: 1
paths./files/trash.delete.tags[0]: files
paths./files/trash.parameters.length: 7
paths./files/trash.parameters[0].$ref: '#/parameters/alt'
paths./files/trash.parameters[1].$ref: '#/parameters/fields'
paths./files/trash.parameters[2].$ref: '#/parameters/key'
paths./files/trash.parameters[3].$ref: '#/parameters/oauth_token'
paths./files/trash.parameters[4].$ref: '#/parameters/prettyPrint'
paths./files/trash.parameters[5].$ref: '#/parameters/quotaUser'
paths./files/trash.parameters[6].$ref: '#/parameters/userIp'
paths./teamdrives.get.description: Lists the user's Team Drives.
paths./teamdrives.get.operationId: drive.teamdrives.list
paths./teamdrives.get.parameters.length: 2
paths./teamdrives.get.parameters[0].default: 10
paths./teamdrives.get.parameters[0].description: Maximum number of Team Drives to
  return.
paths./teamdrives.get.parameters[0].in: query
paths./teamdrives.get.parameters[0].maximum: 100
paths./teamdrives.get.parameters[0].minimum: 1
paths./teamdrives.get.parameters[0].name: pageSize
paths./teamdrives.get.parameters[0].type: integer
paths./teamdrives.get.parameters[1].description: Page token for Team Drives.
paths./teamdrives.get.parameters[1].in: query
paths./teamdrives.get.parameters[1].name: pageToken
paths./teamdrives.get.parameters[1].type: string
paths./teamdrives.get.responses.200.description: Successful response
paths./teamdrives.get.responses.200.schema.$ref: '#/definitions/TeamDriveList'
paths./teamdrives.get.security.length: 2
paths./teamdrives.get.security[0].Oauth2.length: 1
paths./teamdrives.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./teamdrives.get.security[1].Oauth2.length: 1
paths./teamdrives.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./teamdrives.get.tags.length: 1
paths./teamdrives.get.tags[0]: teamdrives
paths./teamdrives.parameters.length: 7
paths./teamdrives.parameters[0].$ref: '#/parameters/alt'
paths./teamdrives.parameters[1].$ref: '#/parameters/fields'
paths./teamdrives.parameters[2].$ref: '#/parameters/key'
paths./teamdrives.parameters[3].$ref: '#/parameters/oauth_token'
paths./teamdrives.parameters[4].$ref: '#/parameters/prettyPrint'
paths./teamdrives.parameters[5].$ref: '#/parameters/quotaUser'
paths./teamdrives.parameters[6].$ref: '#/parameters/userIp'
paths./teamdrives.post.description: Creates a new Team Drive.
paths./teamdrives.post.operationId: drive.teamdrives.create
paths./teamdrives.post.parameters.length: 2
paths./teamdrives.post.parameters[0].description: An ID, such as a random UUID, which
  uniquely identifies this user's request for idempotent creation of a Team Drive.
  A repeated request by the same user and with the same request ID will avoid creating
  duplicates by attempting to create the same Team Drive. If the Team Drive already
  exists a 409 error will be returned.
paths./teamdrives.post.parameters[0].in: query
paths./teamdrives.post.parameters[0].name: requestId
paths./teamdrives.post.parameters[0].required: true
paths./teamdrives.post.parameters[0].type: string
paths./teamdrives.post.parameters[1].in: body
paths./teamdrives.post.parameters[1].name: body
paths./teamdrives.post.parameters[1].schema.$ref: '#/definitions/TeamDrive'
paths./teamdrives.post.responses.200.description: Successful response
paths./teamdrives.post.responses.200.schema.$ref: '#/definitions/TeamDrive'
paths./teamdrives.post.security.length: 1
paths./teamdrives.post.security[0].Oauth2.length: 1
paths./teamdrives.post.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./teamdrives.post.tags.length: 1
paths./teamdrives.post.tags[0]: teamdrives
paths./teamdrives/{teamDriveId}.delete.description: Permanently deletes a Team Drive
  for which the user is an organizer. The Team Drive cannot contain any untrashed
  items.
paths./teamdrives/{teamDriveId}.delete.operationId: drive.teamdrives.delete
paths./teamdrives/{teamDriveId}.delete.parameters.length: 1
paths./teamdrives/{teamDriveId}.delete.parameters[0].description: The ID of the Team
  Drive
paths./teamdrives/{teamDriveId}.delete.parameters[0].in: path
paths./teamdrives/{teamDriveId}.delete.parameters[0].name: teamDriveId
paths./teamdrives/{teamDriveId}.delete.parameters[0].required: true
paths./teamdrives/{teamDriveId}.delete.parameters[0].type: string
paths./teamdrives/{teamDriveId}.delete.responses.200.description: Successful response
paths./teamdrives/{teamDriveId}.delete.security.length: 1
paths./teamdrives/{teamDriveId}.delete.security[0].Oauth2.length: 1
paths./teamdrives/{teamDriveId}.delete.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./teamdrives/{teamDriveId}.delete.tags.length: 1
paths./teamdrives/{teamDriveId}.delete.tags[0]: teamdrives
paths./teamdrives/{teamDriveId}.get.description: Gets a Team Drive's metadata by ID.
paths./teamdrives/{teamDriveId}.get.operationId: drive.teamdrives.get
paths./teamdrives/{teamDriveId}.get.parameters.length: 1
paths./teamdrives/{teamDriveId}.get.parameters[0].description: The ID of the Team
  Drive
paths./teamdrives/{teamDriveId}.get.parameters[0].in: path
paths./teamdrives/{teamDriveId}.get.parameters[0].name: teamDriveId
paths./teamdrives/{teamDriveId}.get.parameters[0].required: true
paths./teamdrives/{teamDriveId}.get.parameters[0].type: string
paths./teamdrives/{teamDriveId}.get.responses.200.description: Successful response
paths./teamdrives/{teamDriveId}.get.responses.200.schema.$ref: '#/definitions/TeamDrive'
paths./teamdrives/{teamDriveId}.get.security.length: 2
paths./teamdrives/{teamDriveId}.get.security[0].Oauth2.length: 1
paths./teamdrives/{teamDriveId}.get.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./teamdrives/{teamDriveId}.get.security[1].Oauth2.length: 1
paths./teamdrives/{teamDriveId}.get.security[1].Oauth2[0]: https://www.googleapis.com/auth/drive.readonly
paths./teamdrives/{teamDriveId}.get.tags.length: 1
paths./teamdrives/{teamDriveId}.get.tags[0]: teamdrives
paths./teamdrives/{teamDriveId}.parameters.length: 7
paths./teamdrives/{teamDriveId}.parameters[0].$ref: '#/parameters/alt'
paths./teamdrives/{teamDriveId}.parameters[1].$ref: '#/parameters/fields'
paths./teamdrives/{teamDriveId}.parameters[2].$ref: '#/parameters/key'
paths./teamdrives/{teamDriveId}.parameters[3].$ref: '#/parameters/oauth_token'
paths./teamdrives/{teamDriveId}.parameters[4].$ref: '#/parameters/prettyPrint'
paths./teamdrives/{teamDriveId}.parameters[5].$ref: '#/parameters/quotaUser'
paths./teamdrives/{teamDriveId}.parameters[6].$ref: '#/parameters/userIp'
paths./teamdrives/{teamDriveId}.patch.description: Updates a Team Drive's metadata
paths./teamdrives/{teamDriveId}.patch.operationId: drive.teamdrives.update
paths./teamdrives/{teamDriveId}.patch.parameters.length: 2
paths./teamdrives/{teamDriveId}.patch.parameters[0].description: The ID of the Team
  Drive
paths./teamdrives/{teamDriveId}.patch.parameters[0].in: path
paths./teamdrives/{teamDriveId}.patch.parameters[0].name: teamDriveId
paths./teamdrives/{teamDriveId}.patch.parameters[0].required: true
paths./teamdrives/{teamDriveId}.patch.parameters[0].type: string
paths./teamdrives/{teamDriveId}.patch.parameters[1].in: body
paths./teamdrives/{teamDriveId}.patch.parameters[1].name: body
paths./teamdrives/{teamDriveId}.patch.parameters[1].schema.$ref: '#/definitions/TeamDrive'
paths./teamdrives/{teamDriveId}.patch.responses.200.description: Successful response
paths./teamdrives/{teamDriveId}.patch.responses.200.schema.$ref: '#/definitions/TeamDrive'
paths./teamdrives/{teamDriveId}.patch.security.length: 1
paths./teamdrives/{teamDriveId}.patch.security[0].Oauth2.length: 1
paths./teamdrives/{teamDriveId}.patch.security[0].Oauth2[0]: https://www.googleapis.com/auth/drive
paths./teamdrives/{teamDriveId}.patch.tags.length: 1
paths./teamdrives/{teamDriveId}.patch.tags[0]: teamdrives
schemes.length: 1
schemes[0]: https
securityDefinitions.Oauth2.authorizationUrl: https://accounts.google.com/o/oauth2/auth
securityDefinitions.Oauth2.description: Oauth 2.0 authentication
securityDefinitions.Oauth2.flow: implicit
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive: View and
  manage the files in your Google Drive
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.appdata: View
  and manage its own configuration data in your Google Drive
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.file: View
  and manage Google Drive files and folders that you have opened or created with this
  app
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.metadata: View
  and manage metadata of files in your Google Drive
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.metadata.readonly: View
  metadata for files in your Google Drive
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.photos.readonly: View
  the photos, videos and albums in your Google Photos
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.readonly: View
  the files in your Google Drive
securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/drive.scripts: Modify
  your Google Apps Script scripts' behavior
securityDefinitions.Oauth2.type: oauth2
swagger: "2.0"
tags.length: 9
tags[0].name: about
tags[1].name: changes
tags[2].name: channels
tags[3].name: comments
tags[4].name: files
tags[5].name: permissions
tags[6].name: replies
tags[7].name: revisions
tags[8].name: teamdrives
