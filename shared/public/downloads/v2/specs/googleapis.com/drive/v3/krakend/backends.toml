[[backends]]
  group = "drive-about"
  slug = "drive-v3-about"
  url_pattern = "/about"
  method = "GET"
  host = ["https://www.googleapis.com"]
  whitelist = ["appInstalled", "exportFormats", "folderColorPalette", "importFormats", "kind", "maxImportSizes", "maxUploadSize", "storageQuota", "teamDriveThemes"]
  concurrent_calls = 0
  [backends.mapping]
    appInstalled = "appInstalled"
    exportFormats = "exportFormats"
    folderColorPalette = "folderColorPalette"
    importFormats = "importFormats"
    kind = "kind"
    maxImportSizes = "maxImportSizes"
    maxUploadSize = "maxUploadSize"
    storageQuota = "storageQuota"
    teamDriveThemes = "teamDriveThemes"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes"
  slug = "drive-v3-changes"
  url_pattern = "/changes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["includeCorpusRemovals", "includeRemoved", "includeTeamDriveItems", "pageSize", "pageToken", "restrictToMyDrive", "spaces", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["changes", "kind", "newStartPageToken", "nextPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    changes = "changes"
    kind = "kind"
    newStartPageToken = "newStartPageToken"
    nextPageToken = "nextPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes-startpagetoken"
  slug = "drive-v3-changes-startpagetoken"
  url_pattern = "/changes/startPageToken"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["supportsTeamDrives", "teamDriveId"]
  whitelist = ["kind", "startPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    startPageToken = "startPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes-watch"
  slug = "drive-v3-changes-watch"
  url_pattern = "/changes/watch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  query_string_params = ["includeCorpusRemovals", "includeRemoved", "includeTeamDriveItems", "pageSize", "pageToken", "restrictToMyDrive", "spaces", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["address", "expiration", "id", "kind", "params", "payload", "resourceId", "resourceUri", "token", "type"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    expiration = "expiration"
    id = "id"
    kind = "kind"
    params = "params"
    payload = "payload"
    resourceId = "resourceId"
    resourceUri = "resourceUri"
    token = "token"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-channels-stop"
  slug = "drive-v3-channels-stop"
  url_pattern = "/channels/stop"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files"
  slug = "drive-v3-files"
  url_pattern = "/files"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["corpora", "corpus", "includeTeamDriveItems", "orderBy", "pageSize", "pageToken", "q", "spaces", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["files", "incompleteSearch", "kind", "nextPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    files = "files"
    incompleteSearch = "incompleteSearch"
    kind = "kind"
    nextPageToken = "nextPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-generateids"
  slug = "drive-v3-files-generateids"
  url_pattern = "/files/generateIds"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["count", "space"]
  whitelist = ["ids", "kind", "space"]
  concurrent_calls = 0
  [backends.mapping]
    ids = "ids"
    kind = "kind"
    space = "space"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid"
  slug = "drive-v3-files-fileid"
  url_pattern = "/files/{fileId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["acknowledgeAbuse", "supportsTeamDrives"]
  whitelist = ["appProperties", "capabilities", "contentHints", "createdTime", "description", "explicitlyTrashed", "fileExtension", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "isAppAuthorized", "kind", "md5Checksum", "mimeType", "modifiedByMe", "modifiedByMeTime", "modifiedTime", "name", "originalFilename", "ownedByMe", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "shared", "sharedWithMeTime", "size", "spaces", "starred", "teamDriveId", "thumbnailLink", "thumbnailVersion", "trashed", "trashedTime", "version", "videoMediaMetadata", "viewedByMe", "viewedByMeTime", "viewersCanCopyContent", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    appProperties = "appProperties"
    capabilities = "capabilities"
    contentHints = "contentHints"
    createdTime = "createdTime"
    description = "description"
    explicitlyTrashed = "explicitlyTrashed"
    fileExtension = "fileExtension"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMe = "modifiedByMe"
    modifiedByMeTime = "modifiedByMeTime"
    modifiedTime = "modifiedTime"
    name = "name"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    shared = "shared"
    sharedWithMeTime = "sharedWithMeTime"
    size = "size"
    spaces = "spaces"
    starred = "starred"
    teamDriveId = "teamDriveId"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    trashed = "trashed"
    trashedTime = "trashedTime"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    viewedByMe = "viewedByMe"
    viewedByMeTime = "viewedByMeTime"
    viewersCanCopyContent = "viewersCanCopyContent"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments"
  slug = "drive-v3-files-fileid-comments"
  url_pattern = "/files/{fileId}/comments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["includeDeleted", "pageSize", "pageToken", "startModifiedTime"]
  whitelist = ["comments", "kind", "nextPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    comments = "comments"
    kind = "kind"
    nextPageToken = "nextPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid"
  slug = "drive-v3-files-fileid-comments-commentid"
  url_pattern = "/files/{fileId}/comments/{commentId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId"]
  query_string_params = ["includeDeleted"]
  whitelist = ["anchor", "content", "createdTime", "deleted", "htmlContent", "id", "kind", "modifiedTime", "quotedFileContent", "replies", "resolved"]
  concurrent_calls = 0
  [backends.mapping]
    anchor = "anchor"
    content = "content"
    createdTime = "createdTime"
    deleted = "deleted"
    htmlContent = "htmlContent"
    id = "id"
    kind = "kind"
    modifiedTime = "modifiedTime"
    quotedFileContent = "quotedFileContent"
    replies = "replies"
    resolved = "resolved"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid-replies"
  slug = "drive-v3-files-fileid-comments-commentid-replies"
  url_pattern = "/files/{fileId}/comments/{commentId}/replies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId"]
  query_string_params = ["includeDeleted", "pageSize", "pageToken"]
  whitelist = ["kind", "nextPageToken", "replies"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    nextPageToken = "nextPageToken"
    replies = "replies"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid-replies-replyid"
  slug = "drive-v3-files-fileid-comments-commentid-replies-replyid"
  url_pattern = "/files/{fileId}/comments/{commentId}/replies/{replyId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId", "replyId"]
  query_string_params = ["includeDeleted"]
  whitelist = ["action", "content", "createdTime", "deleted", "htmlContent", "id", "kind", "modifiedTime"]
  concurrent_calls = 0
  [backends.mapping]
    action = "action"
    content = "content"
    createdTime = "createdTime"
    deleted = "deleted"
    htmlContent = "htmlContent"
    id = "id"
    kind = "kind"
    modifiedTime = "modifiedTime"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-copy"
  slug = "drive-v3-files-fileid-copy"
  url_pattern = "/files/{fileId}/copy"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["ignoreDefaultVisibility", "keepRevisionForever", "ocrLanguage", "supportsTeamDrives"]
  whitelist = ["appProperties", "capabilities", "contentHints", "createdTime", "description", "explicitlyTrashed", "fileExtension", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "isAppAuthorized", "kind", "md5Checksum", "mimeType", "modifiedByMe", "modifiedByMeTime", "modifiedTime", "name", "originalFilename", "ownedByMe", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "shared", "sharedWithMeTime", "size", "spaces", "starred", "teamDriveId", "thumbnailLink", "thumbnailVersion", "trashed", "trashedTime", "version", "videoMediaMetadata", "viewedByMe", "viewedByMeTime", "viewersCanCopyContent", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    appProperties = "appProperties"
    capabilities = "capabilities"
    contentHints = "contentHints"
    createdTime = "createdTime"
    description = "description"
    explicitlyTrashed = "explicitlyTrashed"
    fileExtension = "fileExtension"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMe = "modifiedByMe"
    modifiedByMeTime = "modifiedByMeTime"
    modifiedTime = "modifiedTime"
    name = "name"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    shared = "shared"
    sharedWithMeTime = "sharedWithMeTime"
    size = "size"
    spaces = "spaces"
    starred = "starred"
    teamDriveId = "teamDriveId"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    trashed = "trashed"
    trashedTime = "trashedTime"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    viewedByMe = "viewedByMe"
    viewedByMeTime = "viewedByMeTime"
    viewersCanCopyContent = "viewersCanCopyContent"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-export"
  slug = "drive-v3-files-fileid-export"
  url_pattern = "/files/{fileId}/export"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["mimeType"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-permissions"
  slug = "drive-v3-files-fileid-permissions"
  url_pattern = "/files/{fileId}/permissions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["pageSize", "pageToken", "supportsTeamDrives"]
  whitelist = ["kind", "nextPageToken", "permissions"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    nextPageToken = "nextPageToken"
    permissions = "permissions"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-permissions-permissionid"
  slug = "drive-v3-files-fileid-permissions-permissionid"
  url_pattern = "/files/{fileId}/permissions/{permissionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "permissionId"]
  query_string_params = ["supportsTeamDrives"]
  whitelist = ["allowFileDiscovery", "deleted", "displayName", "domain", "emailAddress", "expirationTime", "id", "kind", "photoLink", "role", "teamDrivePermissionDetails", "type"]
  concurrent_calls = 0
  [backends.mapping]
    allowFileDiscovery = "allowFileDiscovery"
    deleted = "deleted"
    displayName = "displayName"
    domain = "domain"
    emailAddress = "emailAddress"
    expirationTime = "expirationTime"
    id = "id"
    kind = "kind"
    photoLink = "photoLink"
    role = "role"
    teamDrivePermissionDetails = "teamDrivePermissionDetails"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-revisions"
  slug = "drive-v3-files-fileid-revisions"
  url_pattern = "/files/{fileId}/revisions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["pageSize", "pageToken"]
  whitelist = ["kind", "nextPageToken", "revisions"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    nextPageToken = "nextPageToken"
    revisions = "revisions"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-revisions-revisionid"
  slug = "drive-v3-files-fileid-revisions-revisionid"
  url_pattern = "/files/{fileId}/revisions/{revisionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "revisionId"]
  query_string_params = ["acknowledgeAbuse"]
  whitelist = ["id", "keepForever", "kind", "md5Checksum", "mimeType", "modifiedTime", "originalFilename", "publishAuto", "published", "publishedOutsideDomain", "size"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    keepForever = "keepForever"
    kind = "kind"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedTime = "modifiedTime"
    originalFilename = "originalFilename"
    publishAuto = "publishAuto"
    published = "published"
    publishedOutsideDomain = "publishedOutsideDomain"
    size = "size"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-watch"
  slug = "drive-v3-files-fileid-watch"
  url_pattern = "/files/{fileId}/watch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["acknowledgeAbuse", "supportsTeamDrives"]
  whitelist = ["address", "expiration", "id", "kind", "params", "payload", "resourceId", "resourceUri", "token", "type"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    expiration = "expiration"
    id = "id"
    kind = "kind"
    params = "params"
    payload = "payload"
    resourceId = "resourceId"
    resourceUri = "resourceUri"
    token = "token"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-teamdrives"
  slug = "drive-v3-teamdrives"
  url_pattern = "/teamdrives"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["pageSize", "pageToken"]
  whitelist = ["kind", "nextPageToken", "teamDrives"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    nextPageToken = "nextPageToken"
    teamDrives = "teamDrives"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-teamdrives-teamdriveid"
  slug = "drive-v3-teamdrives-teamdriveid"
  url_pattern = "/teamdrives/{teamDriveId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["teamDriveId"]
  whitelist = ["backgroundImageFile", "backgroundImageLink", "capabilities", "colorRgb", "id", "kind", "name", "themeId"]
  concurrent_calls = 0
  [backends.mapping]
    backgroundImageFile = "backgroundImageFile"
    backgroundImageLink = "backgroundImageLink"
    capabilities = "capabilities"
    colorRgb = "colorRgb"
    id = "id"
    kind = "kind"
    name = "name"
    themeId = "themeId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]
