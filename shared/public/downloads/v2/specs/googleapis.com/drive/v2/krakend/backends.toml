[[backends]]
  group = "drive-about"
  slug = "drive-v2-about"
  url_pattern = "/about"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["includeSubscribed", "maxChangeIdCount", "startChangeId"]
  whitelist = ["additionalRoleInfo", "domainSharingPolicy", "etag", "exportFormats", "features", "folderColorPalette", "importFormats", "isCurrentAppInstalled", "kind", "languageCode", "largestChangeId", "maxUploadSizes", "name", "permissionId", "quotaBytesByService", "quotaBytesTotal", "quotaBytesUsed", "quotaBytesUsedAggregate", "quotaBytesUsedInTrash", "quotaType", "remainingChangeIds", "rootFolderId", "selfLink", "teamDriveThemes"]
  concurrent_calls = 0
  [backends.mapping]
    additionalRoleInfo = "additionalRoleInfo"
    domainSharingPolicy = "domainSharingPolicy"
    etag = "etag"
    exportFormats = "exportFormats"
    features = "features"
    folderColorPalette = "folderColorPalette"
    importFormats = "importFormats"
    isCurrentAppInstalled = "isCurrentAppInstalled"
    kind = "kind"
    languageCode = "languageCode"
    largestChangeId = "largestChangeId"
    maxUploadSizes = "maxUploadSizes"
    name = "name"
    permissionId = "permissionId"
    quotaBytesByService = "quotaBytesByService"
    quotaBytesTotal = "quotaBytesTotal"
    quotaBytesUsed = "quotaBytesUsed"
    quotaBytesUsedAggregate = "quotaBytesUsedAggregate"
    quotaBytesUsedInTrash = "quotaBytesUsedInTrash"
    quotaType = "quotaType"
    remainingChangeIds = "remainingChangeIds"
    rootFolderId = "rootFolderId"
    selfLink = "selfLink"
    teamDriveThemes = "teamDriveThemes"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-apps"
  slug = "drive-v2-apps"
  url_pattern = "/apps"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["appFilterExtensions", "appFilterMimeTypes", "languageCode"]
  whitelist = ["defaultAppIds", "etag", "items", "kind", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    defaultAppIds = "defaultAppIds"
    etag = "etag"
    items = "items"
    kind = "kind"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-apps-appid"
  slug = "drive-v2-apps-appid"
  url_pattern = "/apps/{appId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["appId"]
  whitelist = ["authorized", "createInFolderTemplate", "createUrl", "hasDriveWideScope", "icons", "id", "installed", "kind", "longDescription", "name", "objectType", "openUrlTemplate", "primaryFileExtensions", "primaryMimeTypes", "productId", "productUrl", "secondaryFileExtensions", "secondaryMimeTypes", "shortDescription", "supportsCreate", "supportsImport", "supportsMultiOpen", "supportsOfflineCreate", "useByDefault"]
  concurrent_calls = 0
  [backends.mapping]
    authorized = "authorized"
    createInFolderTemplate = "createInFolderTemplate"
    createUrl = "createUrl"
    hasDriveWideScope = "hasDriveWideScope"
    icons = "icons"
    id = "id"
    installed = "installed"
    kind = "kind"
    longDescription = "longDescription"
    name = "name"
    objectType = "objectType"
    openUrlTemplate = "openUrlTemplate"
    primaryFileExtensions = "primaryFileExtensions"
    primaryMimeTypes = "primaryMimeTypes"
    productId = "productId"
    productUrl = "productUrl"
    secondaryFileExtensions = "secondaryFileExtensions"
    secondaryMimeTypes = "secondaryMimeTypes"
    shortDescription = "shortDescription"
    supportsCreate = "supportsCreate"
    supportsImport = "supportsImport"
    supportsMultiOpen = "supportsMultiOpen"
    supportsOfflineCreate = "supportsOfflineCreate"
    useByDefault = "useByDefault"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes"
  slug = "drive-v2-changes"
  url_pattern = "/changes"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["includeCorpusRemovals", "includeDeleted", "includeSubscribed", "includeTeamDriveItems", "maxResults", "pageToken", "spaces", "startChangeId", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["etag", "items", "kind", "largestChangeId", "newStartPageToken", "nextLink", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    largestChangeId = "largestChangeId"
    newStartPageToken = "newStartPageToken"
    nextLink = "nextLink"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes-startpagetoken"
  slug = "drive-v2-changes-startpagetoken"
  url_pattern = "/changes/startPageToken"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["supportsTeamDrives", "teamDriveId"]
  whitelist = ["kind", "startPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    kind = "kind"
    startPageToken = "startPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes-watch"
  slug = "drive-v2-changes-watch"
  url_pattern = "/changes/watch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  query_string_params = ["includeCorpusRemovals", "includeDeleted", "includeSubscribed", "includeTeamDriveItems", "maxResults", "pageToken", "spaces", "startChangeId", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["address", "expiration", "id", "kind", "params", "payload", "resourceId", "resourceUri", "token", "type"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    expiration = "expiration"
    id = "id"
    kind = "kind"
    params = "params"
    payload = "payload"
    resourceId = "resourceId"
    resourceUri = "resourceUri"
    token = "token"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-changes-changeid"
  slug = "drive-v2-changes-changeid"
  url_pattern = "/changes/{changeId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["changeId"]
  query_string_params = ["supportsTeamDrives", "teamDriveId"]
  whitelist = ["deleted", "fileId", "id", "kind", "modificationDate", "selfLink", "teamDriveId", "type"]
  concurrent_calls = 0
  [backends.mapping]
    deleted = "deleted"
    fileId = "fileId"
    id = "id"
    kind = "kind"
    modificationDate = "modificationDate"
    selfLink = "selfLink"
    teamDriveId = "teamDriveId"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-channels-stop"
  slug = "drive-v2-channels-stop"
  url_pattern = "/channels/stop"
  method = "POST"
  host = ["https://www.googleapis.com"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files"
  slug = "drive-v2-files"
  url_pattern = "/files"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["corpora", "corpus", "includeTeamDriveItems", "maxResults", "orderBy", "pageToken", "projection", "q", "spaces", "supportsTeamDrives", "teamDriveId"]
  whitelist = ["etag", "incompleteSearch", "items", "kind", "nextLink", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    incompleteSearch = "incompleteSearch"
    items = "items"
    kind = "kind"
    nextLink = "nextLink"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-generateids"
  slug = "drive-v2-files-generateids"
  url_pattern = "/files/generateIds"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["maxResults", "space"]
  whitelist = ["ids", "kind", "space"]
  concurrent_calls = 0
  [backends.mapping]
    ids = "ids"
    kind = "kind"
    space = "space"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid"
  slug = "drive-v2-files-fileid"
  url_pattern = "/files/{fileId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["acknowledgeAbuse", "projection", "revisionId", "supportsTeamDrives", "updateViewedDate"]
  whitelist = ["alternateLink", "appDataContents", "canComment", "canReadRevisions", "capabilities", "copyable", "createdDate", "defaultOpenWithLink", "description", "downloadUrl", "editable", "embedLink", "etag", "explicitlyTrashed", "exportLinks", "fileExtension", "fileSize", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "indexableText", "isAppAuthorized", "kind", "labels", "lastModifyingUserName", "lastViewedByMeDate", "markedViewedByMeDate", "md5Checksum", "mimeType", "modifiedByMeDate", "modifiedDate", "openWithLinks", "originalFilename", "ownedByMe", "ownerNames", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "selfLink", "shareable", "shared", "sharedWithMeDate", "spaces", "teamDriveId", "thumbnail", "thumbnailLink", "thumbnailVersion", "title", "trashedDate", "version", "videoMediaMetadata", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    alternateLink = "alternateLink"
    appDataContents = "appDataContents"
    canComment = "canComment"
    canReadRevisions = "canReadRevisions"
    capabilities = "capabilities"
    copyable = "copyable"
    createdDate = "createdDate"
    defaultOpenWithLink = "defaultOpenWithLink"
    description = "description"
    downloadUrl = "downloadUrl"
    editable = "editable"
    embedLink = "embedLink"
    etag = "etag"
    explicitlyTrashed = "explicitlyTrashed"
    exportLinks = "exportLinks"
    fileExtension = "fileExtension"
    fileSize = "fileSize"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    indexableText = "indexableText"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    labels = "labels"
    lastModifyingUserName = "lastModifyingUserName"
    lastViewedByMeDate = "lastViewedByMeDate"
    markedViewedByMeDate = "markedViewedByMeDate"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMeDate = "modifiedByMeDate"
    modifiedDate = "modifiedDate"
    openWithLinks = "openWithLinks"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    ownerNames = "ownerNames"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    selfLink = "selfLink"
    shareable = "shareable"
    shared = "shared"
    sharedWithMeDate = "sharedWithMeDate"
    spaces = "spaces"
    teamDriveId = "teamDriveId"
    thumbnail = "thumbnail"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    title = "title"
    trashedDate = "trashedDate"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments"
  slug = "drive-v2-files-fileid-comments"
  url_pattern = "/files/{fileId}/comments"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["includeDeleted", "maxResults", "pageToken", "updatedMin"]
  whitelist = ["items", "kind", "nextLink", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
    nextLink = "nextLink"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid"
  slug = "drive-v2-files-fileid-comments-commentid"
  url_pattern = "/files/{fileId}/comments/{commentId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId"]
  query_string_params = ["includeDeleted"]
  whitelist = ["anchor", "commentId", "content", "context", "createdDate", "deleted", "fileId", "fileTitle", "htmlContent", "kind", "modifiedDate", "replies", "selfLink", "status"]
  concurrent_calls = 0
  [backends.mapping]
    anchor = "anchor"
    commentId = "commentId"
    content = "content"
    context = "context"
    createdDate = "createdDate"
    deleted = "deleted"
    fileId = "fileId"
    fileTitle = "fileTitle"
    htmlContent = "htmlContent"
    kind = "kind"
    modifiedDate = "modifiedDate"
    replies = "replies"
    selfLink = "selfLink"
    status = "status"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid-replies"
  slug = "drive-v2-files-fileid-comments-commentid-replies"
  url_pattern = "/files/{fileId}/comments/{commentId}/replies"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId"]
  query_string_params = ["includeDeleted", "maxResults", "pageToken"]
  whitelist = ["items", "kind", "nextLink", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
    nextLink = "nextLink"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-comments-commentid-replies-replyid"
  slug = "drive-v2-files-fileid-comments-commentid-replies-replyid"
  url_pattern = "/files/{fileId}/comments/{commentId}/replies/{replyId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["commentId", "fileId", "replyId"]
  query_string_params = ["includeDeleted"]
  whitelist = ["content", "createdDate", "deleted", "htmlContent", "kind", "modifiedDate", "replyId", "verb"]
  concurrent_calls = 0
  [backends.mapping]
    content = "content"
    createdDate = "createdDate"
    deleted = "deleted"
    htmlContent = "htmlContent"
    kind = "kind"
    modifiedDate = "modifiedDate"
    replyId = "replyId"
    verb = "verb"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-copy"
  slug = "drive-v2-files-fileid-copy"
  url_pattern = "/files/{fileId}/copy"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["convert", "ocr", "ocrLanguage", "pinned", "supportsTeamDrives", "timedTextLanguage", "timedTextTrackName", "visibility"]
  whitelist = ["alternateLink", "appDataContents", "canComment", "canReadRevisions", "capabilities", "copyable", "createdDate", "defaultOpenWithLink", "description", "downloadUrl", "editable", "embedLink", "etag", "explicitlyTrashed", "exportLinks", "fileExtension", "fileSize", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "indexableText", "isAppAuthorized", "kind", "labels", "lastModifyingUserName", "lastViewedByMeDate", "markedViewedByMeDate", "md5Checksum", "mimeType", "modifiedByMeDate", "modifiedDate", "openWithLinks", "originalFilename", "ownedByMe", "ownerNames", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "selfLink", "shareable", "shared", "sharedWithMeDate", "spaces", "teamDriveId", "thumbnail", "thumbnailLink", "thumbnailVersion", "title", "trashedDate", "version", "videoMediaMetadata", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    alternateLink = "alternateLink"
    appDataContents = "appDataContents"
    canComment = "canComment"
    canReadRevisions = "canReadRevisions"
    capabilities = "capabilities"
    copyable = "copyable"
    createdDate = "createdDate"
    defaultOpenWithLink = "defaultOpenWithLink"
    description = "description"
    downloadUrl = "downloadUrl"
    editable = "editable"
    embedLink = "embedLink"
    etag = "etag"
    explicitlyTrashed = "explicitlyTrashed"
    exportLinks = "exportLinks"
    fileExtension = "fileExtension"
    fileSize = "fileSize"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    indexableText = "indexableText"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    labels = "labels"
    lastModifyingUserName = "lastModifyingUserName"
    lastViewedByMeDate = "lastViewedByMeDate"
    markedViewedByMeDate = "markedViewedByMeDate"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMeDate = "modifiedByMeDate"
    modifiedDate = "modifiedDate"
    openWithLinks = "openWithLinks"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    ownerNames = "ownerNames"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    selfLink = "selfLink"
    shareable = "shareable"
    shared = "shared"
    sharedWithMeDate = "sharedWithMeDate"
    spaces = "spaces"
    teamDriveId = "teamDriveId"
    thumbnail = "thumbnail"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    title = "title"
    trashedDate = "trashedDate"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-export"
  slug = "drive-v2-files-fileid-export"
  url_pattern = "/files/{fileId}/export"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["mimeType"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-parents"
  slug = "drive-v2-files-fileid-parents"
  url_pattern = "/files/{fileId}/parents"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  whitelist = ["etag", "items", "kind", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-parents-parentid"
  slug = "drive-v2-files-fileid-parents-parentid"
  url_pattern = "/files/{fileId}/parents/{parentId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "parentId"]
  whitelist = ["id", "isRoot", "kind", "parentLink", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    isRoot = "isRoot"
    kind = "kind"
    parentLink = "parentLink"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-permissions"
  slug = "drive-v2-files-fileid-permissions"
  url_pattern = "/files/{fileId}/permissions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["maxResults", "pageToken", "supportsTeamDrives"]
  whitelist = ["etag", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-permissions-permissionid"
  slug = "drive-v2-files-fileid-permissions-permissionid"
  url_pattern = "/files/{fileId}/permissions/{permissionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "permissionId"]
  query_string_params = ["supportsTeamDrives"]
  whitelist = ["additionalRoles", "authKey", "deleted", "domain", "emailAddress", "etag", "expirationDate", "id", "kind", "name", "photoLink", "role", "selfLink", "teamDrivePermissionDetails", "type", "value", "withLink"]
  concurrent_calls = 0
  [backends.mapping]
    additionalRoles = "additionalRoles"
    authKey = "authKey"
    deleted = "deleted"
    domain = "domain"
    emailAddress = "emailAddress"
    etag = "etag"
    expirationDate = "expirationDate"
    id = "id"
    kind = "kind"
    name = "name"
    photoLink = "photoLink"
    role = "role"
    selfLink = "selfLink"
    teamDrivePermissionDetails = "teamDrivePermissionDetails"
    type = "type"
    value = "value"
    withLink = "withLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-properties"
  slug = "drive-v2-files-fileid-properties"
  url_pattern = "/files/{fileId}/properties"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  whitelist = ["etag", "items", "kind", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-properties-propertykey"
  slug = "drive-v2-files-fileid-properties-propertykey"
  url_pattern = "/files/{fileId}/properties/{propertyKey}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "propertyKey"]
  query_string_params = ["visibility"]
  whitelist = ["etag", "key", "kind", "selfLink", "value", "visibility"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    key = "key"
    kind = "kind"
    selfLink = "selfLink"
    value = "value"
    visibility = "visibility"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-realtime"
  slug = "drive-v2-files-fileid-realtime"
  url_pattern = "/files/{fileId}/realtime"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["revision"]
  concurrent_calls = 0
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-revisions"
  slug = "drive-v2-files-fileid-revisions"
  url_pattern = "/files/{fileId}/revisions"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["maxResults", "pageToken"]
  whitelist = ["etag", "items", "kind", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-revisions-revisionid"
  slug = "drive-v2-files-fileid-revisions-revisionid"
  url_pattern = "/files/{fileId}/revisions/{revisionId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId", "revisionId"]
  whitelist = ["downloadUrl", "etag", "exportLinks", "fileSize", "id", "kind", "lastModifyingUserName", "md5Checksum", "mimeType", "modifiedDate", "originalFilename", "pinned", "publishAuto", "published", "publishedLink", "publishedOutsideDomain", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    downloadUrl = "downloadUrl"
    etag = "etag"
    exportLinks = "exportLinks"
    fileSize = "fileSize"
    id = "id"
    kind = "kind"
    lastModifyingUserName = "lastModifyingUserName"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedDate = "modifiedDate"
    originalFilename = "originalFilename"
    pinned = "pinned"
    publishAuto = "publishAuto"
    published = "published"
    publishedLink = "publishedLink"
    publishedOutsideDomain = "publishedOutsideDomain"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-touch"
  slug = "drive-v2-files-fileid-touch"
  url_pattern = "/files/{fileId}/touch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["supportsTeamDrives"]
  whitelist = ["alternateLink", "appDataContents", "canComment", "canReadRevisions", "capabilities", "copyable", "createdDate", "defaultOpenWithLink", "description", "downloadUrl", "editable", "embedLink", "etag", "explicitlyTrashed", "exportLinks", "fileExtension", "fileSize", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "indexableText", "isAppAuthorized", "kind", "labels", "lastModifyingUserName", "lastViewedByMeDate", "markedViewedByMeDate", "md5Checksum", "mimeType", "modifiedByMeDate", "modifiedDate", "openWithLinks", "originalFilename", "ownedByMe", "ownerNames", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "selfLink", "shareable", "shared", "sharedWithMeDate", "spaces", "teamDriveId", "thumbnail", "thumbnailLink", "thumbnailVersion", "title", "trashedDate", "version", "videoMediaMetadata", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    alternateLink = "alternateLink"
    appDataContents = "appDataContents"
    canComment = "canComment"
    canReadRevisions = "canReadRevisions"
    capabilities = "capabilities"
    copyable = "copyable"
    createdDate = "createdDate"
    defaultOpenWithLink = "defaultOpenWithLink"
    description = "description"
    downloadUrl = "downloadUrl"
    editable = "editable"
    embedLink = "embedLink"
    etag = "etag"
    explicitlyTrashed = "explicitlyTrashed"
    exportLinks = "exportLinks"
    fileExtension = "fileExtension"
    fileSize = "fileSize"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    indexableText = "indexableText"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    labels = "labels"
    lastModifyingUserName = "lastModifyingUserName"
    lastViewedByMeDate = "lastViewedByMeDate"
    markedViewedByMeDate = "markedViewedByMeDate"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMeDate = "modifiedByMeDate"
    modifiedDate = "modifiedDate"
    openWithLinks = "openWithLinks"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    ownerNames = "ownerNames"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    selfLink = "selfLink"
    shareable = "shareable"
    shared = "shared"
    sharedWithMeDate = "sharedWithMeDate"
    spaces = "spaces"
    teamDriveId = "teamDriveId"
    thumbnail = "thumbnail"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    title = "title"
    trashedDate = "trashedDate"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-trash"
  slug = "drive-v2-files-fileid-trash"
  url_pattern = "/files/{fileId}/trash"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["supportsTeamDrives"]
  whitelist = ["alternateLink", "appDataContents", "canComment", "canReadRevisions", "capabilities", "copyable", "createdDate", "defaultOpenWithLink", "description", "downloadUrl", "editable", "embedLink", "etag", "explicitlyTrashed", "exportLinks", "fileExtension", "fileSize", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "indexableText", "isAppAuthorized", "kind", "labels", "lastModifyingUserName", "lastViewedByMeDate", "markedViewedByMeDate", "md5Checksum", "mimeType", "modifiedByMeDate", "modifiedDate", "openWithLinks", "originalFilename", "ownedByMe", "ownerNames", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "selfLink", "shareable", "shared", "sharedWithMeDate", "spaces", "teamDriveId", "thumbnail", "thumbnailLink", "thumbnailVersion", "title", "trashedDate", "version", "videoMediaMetadata", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    alternateLink = "alternateLink"
    appDataContents = "appDataContents"
    canComment = "canComment"
    canReadRevisions = "canReadRevisions"
    capabilities = "capabilities"
    copyable = "copyable"
    createdDate = "createdDate"
    defaultOpenWithLink = "defaultOpenWithLink"
    description = "description"
    downloadUrl = "downloadUrl"
    editable = "editable"
    embedLink = "embedLink"
    etag = "etag"
    explicitlyTrashed = "explicitlyTrashed"
    exportLinks = "exportLinks"
    fileExtension = "fileExtension"
    fileSize = "fileSize"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    indexableText = "indexableText"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    labels = "labels"
    lastModifyingUserName = "lastModifyingUserName"
    lastViewedByMeDate = "lastViewedByMeDate"
    markedViewedByMeDate = "markedViewedByMeDate"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMeDate = "modifiedByMeDate"
    modifiedDate = "modifiedDate"
    openWithLinks = "openWithLinks"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    ownerNames = "ownerNames"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    selfLink = "selfLink"
    shareable = "shareable"
    shared = "shared"
    sharedWithMeDate = "sharedWithMeDate"
    spaces = "spaces"
    teamDriveId = "teamDriveId"
    thumbnail = "thumbnail"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    title = "title"
    trashedDate = "trashedDate"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-untrash"
  slug = "drive-v2-files-fileid-untrash"
  url_pattern = "/files/{fileId}/untrash"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["supportsTeamDrives"]
  whitelist = ["alternateLink", "appDataContents", "canComment", "canReadRevisions", "capabilities", "copyable", "createdDate", "defaultOpenWithLink", "description", "downloadUrl", "editable", "embedLink", "etag", "explicitlyTrashed", "exportLinks", "fileExtension", "fileSize", "folderColorRgb", "fullFileExtension", "hasAugmentedPermissions", "hasThumbnail", "headRevisionId", "iconLink", "id", "imageMediaMetadata", "indexableText", "isAppAuthorized", "kind", "labels", "lastModifyingUserName", "lastViewedByMeDate", "markedViewedByMeDate", "md5Checksum", "mimeType", "modifiedByMeDate", "modifiedDate", "openWithLinks", "originalFilename", "ownedByMe", "ownerNames", "owners", "parents", "permissionIds", "permissions", "properties", "quotaBytesUsed", "selfLink", "shareable", "shared", "sharedWithMeDate", "spaces", "teamDriveId", "thumbnail", "thumbnailLink", "thumbnailVersion", "title", "trashedDate", "version", "videoMediaMetadata", "webContentLink", "webViewLink", "writersCanShare"]
  concurrent_calls = 0
  [backends.mapping]
    alternateLink = "alternateLink"
    appDataContents = "appDataContents"
    canComment = "canComment"
    canReadRevisions = "canReadRevisions"
    capabilities = "capabilities"
    copyable = "copyable"
    createdDate = "createdDate"
    defaultOpenWithLink = "defaultOpenWithLink"
    description = "description"
    downloadUrl = "downloadUrl"
    editable = "editable"
    embedLink = "embedLink"
    etag = "etag"
    explicitlyTrashed = "explicitlyTrashed"
    exportLinks = "exportLinks"
    fileExtension = "fileExtension"
    fileSize = "fileSize"
    folderColorRgb = "folderColorRgb"
    fullFileExtension = "fullFileExtension"
    hasAugmentedPermissions = "hasAugmentedPermissions"
    hasThumbnail = "hasThumbnail"
    headRevisionId = "headRevisionId"
    iconLink = "iconLink"
    id = "id"
    imageMediaMetadata = "imageMediaMetadata"
    indexableText = "indexableText"
    isAppAuthorized = "isAppAuthorized"
    kind = "kind"
    labels = "labels"
    lastModifyingUserName = "lastModifyingUserName"
    lastViewedByMeDate = "lastViewedByMeDate"
    markedViewedByMeDate = "markedViewedByMeDate"
    md5Checksum = "md5Checksum"
    mimeType = "mimeType"
    modifiedByMeDate = "modifiedByMeDate"
    modifiedDate = "modifiedDate"
    openWithLinks = "openWithLinks"
    originalFilename = "originalFilename"
    ownedByMe = "ownedByMe"
    ownerNames = "ownerNames"
    owners = "owners"
    parents = "parents"
    permissionIds = "permissionIds"
    permissions = "permissions"
    properties = "properties"
    quotaBytesUsed = "quotaBytesUsed"
    selfLink = "selfLink"
    shareable = "shareable"
    shared = "shared"
    sharedWithMeDate = "sharedWithMeDate"
    spaces = "spaces"
    teamDriveId = "teamDriveId"
    thumbnail = "thumbnail"
    thumbnailLink = "thumbnailLink"
    thumbnailVersion = "thumbnailVersion"
    title = "title"
    trashedDate = "trashedDate"
    version = "version"
    videoMediaMetadata = "videoMediaMetadata"
    webContentLink = "webContentLink"
    webViewLink = "webViewLink"
    writersCanShare = "writersCanShare"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-fileid-watch"
  slug = "drive-v2-files-fileid-watch"
  url_pattern = "/files/{fileId}/watch"
  method = "POST"
  host = ["https://www.googleapis.com"]
  url_keys = ["fileId"]
  query_string_params = ["acknowledgeAbuse", "projection", "revisionId", "supportsTeamDrives", "updateViewedDate"]
  whitelist = ["address", "expiration", "id", "kind", "params", "payload", "resourceId", "resourceUri", "token", "type"]
  concurrent_calls = 0
  [backends.mapping]
    address = "address"
    expiration = "expiration"
    id = "id"
    kind = "kind"
    params = "params"
    payload = "payload"
    resourceId = "resourceId"
    resourceUri = "resourceUri"
    token = "token"
    type = "type"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-folderid-children"
  slug = "drive-v2-files-folderid-children"
  url_pattern = "/files/{folderId}/children"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["folderId"]
  query_string_params = ["maxResults", "orderBy", "pageToken", "q"]
  whitelist = ["etag", "items", "kind", "nextLink", "nextPageToken", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    etag = "etag"
    items = "items"
    kind = "kind"
    nextLink = "nextLink"
    nextPageToken = "nextPageToken"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-files-folderid-children-childid"
  slug = "drive-v2-files-folderid-children-childid"
  url_pattern = "/files/{folderId}/children/{childId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["childId", "folderId"]
  whitelist = ["childLink", "id", "kind", "selfLink"]
  concurrent_calls = 0
  [backends.mapping]
    childLink = "childLink"
    id = "id"
    kind = "kind"
    selfLink = "selfLink"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-permissionids-email"
  slug = "drive-v2-permissionids-email"
  url_pattern = "/permissionIds/{email}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["email"]
  whitelist = ["id", "kind"]
  concurrent_calls = 0
  [backends.mapping]
    id = "id"
    kind = "kind"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-teamdrives"
  slug = "drive-v2-teamdrives"
  url_pattern = "/teamdrives"
  method = "GET"
  host = ["https://www.googleapis.com"]
  query_string_params = ["maxResults", "pageToken"]
  whitelist = ["items", "kind", "nextPageToken"]
  concurrent_calls = 0
  [backends.mapping]
    items = "items"
    kind = "kind"
    nextPageToken = "nextPageToken"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]

[[backends]]
  group = "drive-teamdrives-teamdriveid"
  slug = "drive-v2-teamdrives-teamdriveid"
  url_pattern = "/teamdrives/{teamDriveId}"
  method = "GET"
  host = ["https://www.googleapis.com"]
  url_keys = ["teamDriveId"]
  whitelist = ["backgroundImageFile", "backgroundImageLink", "capabilities", "colorRgb", "id", "kind", "name", "themeId"]
  concurrent_calls = 0
  [backends.mapping]
    backgroundImageFile = "backgroundImageFile"
    backgroundImageLink = "backgroundImageLink"
    capabilities = "capabilities"
    colorRgb = "colorRgb"
    id = "id"
    kind = "kind"
    name = "name"
    themeId = "themeId"
  [backends.extra_config]
    hosts = ["https://www.googleapis.com"]
    schemes = ["https"]
