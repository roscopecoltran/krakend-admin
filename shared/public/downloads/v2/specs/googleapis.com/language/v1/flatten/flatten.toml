basePath = "/"
"definitions.AnalyzeEntitiesRequest.description" = "The entity analysis request message."
"definitions.AnalyzeEntitiesRequest.properties.document.$ref" = "#/definitions/Document"
"definitions.AnalyzeEntitiesRequest.properties.document.description" = "Input document."
"definitions.AnalyzeEntitiesRequest.properties.encodingType.description" = "The encoding type used by the API to calculate offsets."
"definitions.AnalyzeEntitiesRequest.properties.encodingType.enum.length" = 4
"definitions.AnalyzeEntitiesRequest.properties.encodingType.enum[0]" = "NONE"
"definitions.AnalyzeEntitiesRequest.properties.encodingType.enum[1]" = "UTF8"
"definitions.AnalyzeEntitiesRequest.properties.encodingType.enum[2]" = "UTF16"
"definitions.AnalyzeEntitiesRequest.properties.encodingType.enum[3]" = "UTF32"
"definitions.AnalyzeEntitiesRequest.properties.encodingType.type" = "string"
"definitions.AnalyzeEntitiesRequest.type" = "object"
"definitions.AnalyzeEntitiesResponse.description" = "The entity analysis response message."
"definitions.AnalyzeEntitiesResponse.properties.entities.description" = "The recognized entities in the input document."
"definitions.AnalyzeEntitiesResponse.properties.entities.items.$ref" = "#/definitions/Entity"
"definitions.AnalyzeEntitiesResponse.properties.entities.type" = "array"
"definitions.AnalyzeEntitiesResponse.properties.language.description" = "The language of the text, which will be the same as the language specified\nin the request or, if not specified, the automatically-detected language.\nSee Document.language field for more details."
"definitions.AnalyzeEntitiesResponse.properties.language.type" = "string"
"definitions.AnalyzeEntitiesResponse.type" = "object"
"definitions.AnalyzeEntitySentimentRequest.description" = "The entity-level sentiment analysis request message."
"definitions.AnalyzeEntitySentimentRequest.properties.document.$ref" = "#/definitions/Document"
"definitions.AnalyzeEntitySentimentRequest.properties.document.description" = "Input document."
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.description" = "The encoding type used by the API to calculate offsets."
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.enum.length" = 4
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.enum[0]" = "NONE"
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.enum[1]" = "UTF8"
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.enum[2]" = "UTF16"
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.enum[3]" = "UTF32"
"definitions.AnalyzeEntitySentimentRequest.properties.encodingType.type" = "string"
"definitions.AnalyzeEntitySentimentRequest.type" = "object"
"definitions.AnalyzeEntitySentimentResponse.description" = "The entity-level sentiment analysis response message."
"definitions.AnalyzeEntitySentimentResponse.properties.entities.description" = "The recognized entities in the input document with associated sentiments."
"definitions.AnalyzeEntitySentimentResponse.properties.entities.items.$ref" = "#/definitions/Entity"
"definitions.AnalyzeEntitySentimentResponse.properties.entities.type" = "array"
"definitions.AnalyzeEntitySentimentResponse.properties.language.description" = "The language of the text, which will be the same as the language specified\nin the request or, if not specified, the automatically-detected language.\nSee Document.language field for more details."
"definitions.AnalyzeEntitySentimentResponse.properties.language.type" = "string"
"definitions.AnalyzeEntitySentimentResponse.type" = "object"
"definitions.AnalyzeSentimentRequest.description" = "The sentiment analysis request message."
"definitions.AnalyzeSentimentRequest.properties.document.$ref" = "#/definitions/Document"
"definitions.AnalyzeSentimentRequest.properties.document.description" = "Input document."
"definitions.AnalyzeSentimentRequest.properties.encodingType.description" = "The encoding type used by the API to calculate sentence offsets."
"definitions.AnalyzeSentimentRequest.properties.encodingType.enum.length" = 4
"definitions.AnalyzeSentimentRequest.properties.encodingType.enum[0]" = "NONE"
"definitions.AnalyzeSentimentRequest.properties.encodingType.enum[1]" = "UTF8"
"definitions.AnalyzeSentimentRequest.properties.encodingType.enum[2]" = "UTF16"
"definitions.AnalyzeSentimentRequest.properties.encodingType.enum[3]" = "UTF32"
"definitions.AnalyzeSentimentRequest.properties.encodingType.type" = "string"
"definitions.AnalyzeSentimentRequest.type" = "object"
"definitions.AnalyzeSentimentResponse.description" = "The sentiment analysis response message."
"definitions.AnalyzeSentimentResponse.properties.documentSentiment.$ref" = "#/definitions/Sentiment"
"definitions.AnalyzeSentimentResponse.properties.documentSentiment.description" = "The overall sentiment of the input document."
"definitions.AnalyzeSentimentResponse.properties.language.description" = "The language of the text, which will be the same as the language specified\nin the request or, if not specified, the automatically-detected language.\nSee Document.language field for more details."
"definitions.AnalyzeSentimentResponse.properties.language.type" = "string"
"definitions.AnalyzeSentimentResponse.properties.sentences.description" = "The sentiment for all the sentences in the document."
"definitions.AnalyzeSentimentResponse.properties.sentences.items.$ref" = "#/definitions/Sentence"
"definitions.AnalyzeSentimentResponse.properties.sentences.type" = "array"
"definitions.AnalyzeSentimentResponse.type" = "object"
"definitions.AnalyzeSyntaxRequest.description" = "The syntax analysis request message."
"definitions.AnalyzeSyntaxRequest.properties.document.$ref" = "#/definitions/Document"
"definitions.AnalyzeSyntaxRequest.properties.document.description" = "Input document."
"definitions.AnalyzeSyntaxRequest.properties.encodingType.description" = "The encoding type used by the API to calculate offsets."
"definitions.AnalyzeSyntaxRequest.properties.encodingType.enum.length" = 4
"definitions.AnalyzeSyntaxRequest.properties.encodingType.enum[0]" = "NONE"
"definitions.AnalyzeSyntaxRequest.properties.encodingType.enum[1]" = "UTF8"
"definitions.AnalyzeSyntaxRequest.properties.encodingType.enum[2]" = "UTF16"
"definitions.AnalyzeSyntaxRequest.properties.encodingType.enum[3]" = "UTF32"
"definitions.AnalyzeSyntaxRequest.properties.encodingType.type" = "string"
"definitions.AnalyzeSyntaxRequest.type" = "object"
"definitions.AnalyzeSyntaxResponse.description" = "The syntax analysis response message."
"definitions.AnalyzeSyntaxResponse.properties.language.description" = "The language of the text, which will be the same as the language specified\nin the request or, if not specified, the automatically-detected language.\nSee Document.language field for more details."
"definitions.AnalyzeSyntaxResponse.properties.language.type" = "string"
"definitions.AnalyzeSyntaxResponse.properties.sentences.description" = "Sentences in the input document."
"definitions.AnalyzeSyntaxResponse.properties.sentences.items.$ref" = "#/definitions/Sentence"
"definitions.AnalyzeSyntaxResponse.properties.sentences.type" = "array"
"definitions.AnalyzeSyntaxResponse.properties.tokens.description" = "Tokens, along with their syntactic information, in the input document."
"definitions.AnalyzeSyntaxResponse.properties.tokens.items.$ref" = "#/definitions/Token"
"definitions.AnalyzeSyntaxResponse.properties.tokens.type" = "array"
"definitions.AnalyzeSyntaxResponse.type" = "object"
"definitions.AnnotateTextRequest.description" = "The request message for the text annotation API, which can perform multiple\nanalysis types (sentiment, entities, and syntax) in one call."
"definitions.AnnotateTextRequest.properties.document.$ref" = "#/definitions/Document"
"definitions.AnnotateTextRequest.properties.document.description" = "Input document."
"definitions.AnnotateTextRequest.properties.encodingType.description" = "The encoding type used by the API to calculate offsets."
"definitions.AnnotateTextRequest.properties.encodingType.enum.length" = 4
"definitions.AnnotateTextRequest.properties.encodingType.enum[0]" = "NONE"
"definitions.AnnotateTextRequest.properties.encodingType.enum[1]" = "UTF8"
"definitions.AnnotateTextRequest.properties.encodingType.enum[2]" = "UTF16"
"definitions.AnnotateTextRequest.properties.encodingType.enum[3]" = "UTF32"
"definitions.AnnotateTextRequest.properties.encodingType.type" = "string"
"definitions.AnnotateTextRequest.properties.features.$ref" = "#/definitions/Features"
"definitions.AnnotateTextRequest.properties.features.description" = "The enabled features."
"definitions.AnnotateTextRequest.type" = "object"
"definitions.AnnotateTextResponse.description" = "The text annotations response message."
"definitions.AnnotateTextResponse.properties.documentSentiment.$ref" = "#/definitions/Sentiment"
"definitions.AnnotateTextResponse.properties.documentSentiment.description" = "The overall sentiment for the document. Populated if the user enables\nAnnotateTextRequest.Features.extract_document_sentiment."
"definitions.AnnotateTextResponse.properties.entities.description" = "Entities, along with their semantic information, in the input document.\nPopulated if the user enables\nAnnotateTextRequest.Features.extract_entities."
"definitions.AnnotateTextResponse.properties.entities.items.$ref" = "#/definitions/Entity"
"definitions.AnnotateTextResponse.properties.entities.type" = "array"
"definitions.AnnotateTextResponse.properties.language.description" = "The language of the text, which will be the same as the language specified\nin the request or, if not specified, the automatically-detected language.\nSee Document.language field for more details."
"definitions.AnnotateTextResponse.properties.language.type" = "string"
"definitions.AnnotateTextResponse.properties.sentences.description" = "Sentences in the input document. Populated if the user enables\nAnnotateTextRequest.Features.extract_syntax."
"definitions.AnnotateTextResponse.properties.sentences.items.$ref" = "#/definitions/Sentence"
"definitions.AnnotateTextResponse.properties.sentences.type" = "array"
"definitions.AnnotateTextResponse.properties.tokens.description" = "Tokens, along with their syntactic information, in the input document.\nPopulated if the user enables\nAnnotateTextRequest.Features.extract_syntax."
"definitions.AnnotateTextResponse.properties.tokens.items.$ref" = "#/definitions/Token"
"definitions.AnnotateTextResponse.properties.tokens.type" = "array"
"definitions.AnnotateTextResponse.type" = "object"
"definitions.DependencyEdge.description" = "Represents dependency parse tree information for a token. (For more\ninformation on dependency labels, see\nhttp://www.aclweb.org/anthology/P13-2017"
"definitions.DependencyEdge.properties.headTokenIndex.description" = "Represents the head of this token in the dependency tree.\nThis is the index of the token which has an arc going to this token.\nThe index is the position of the token in the array of tokens returned\nby the API method. If this token is a root token, then the\n`head_token_index` is its own index."
"definitions.DependencyEdge.properties.headTokenIndex.format" = "int32"
"definitions.DependencyEdge.properties.headTokenIndex.type" = "integer"
"definitions.DependencyEdge.properties.label.description" = "The parse label for the token."
"definitions.DependencyEdge.properties.label.enum.length" = 83
"definitions.DependencyEdge.properties.label.enum[0]" = "UNKNOWN"
"definitions.DependencyEdge.properties.label.enum[10]" = "CC"
"definitions.DependencyEdge.properties.label.enum[11]" = "CCOMP"
"definitions.DependencyEdge.properties.label.enum[12]" = "CONJ"
"definitions.DependencyEdge.properties.label.enum[13]" = "CSUBJ"
"definitions.DependencyEdge.properties.label.enum[14]" = "CSUBJPASS"
"definitions.DependencyEdge.properties.label.enum[15]" = "DEP"
"definitions.DependencyEdge.properties.label.enum[16]" = "DET"
"definitions.DependencyEdge.properties.label.enum[17]" = "DISCOURSE"
"definitions.DependencyEdge.properties.label.enum[18]" = "DOBJ"
"definitions.DependencyEdge.properties.label.enum[19]" = "EXPL"
"definitions.DependencyEdge.properties.label.enum[1]" = "ABBREV"
"definitions.DependencyEdge.properties.label.enum[20]" = "GOESWITH"
"definitions.DependencyEdge.properties.label.enum[21]" = "IOBJ"
"definitions.DependencyEdge.properties.label.enum[22]" = "MARK"
"definitions.DependencyEdge.properties.label.enum[23]" = "MWE"
"definitions.DependencyEdge.properties.label.enum[24]" = "MWV"
"definitions.DependencyEdge.properties.label.enum[25]" = "NEG"
"definitions.DependencyEdge.properties.label.enum[26]" = "NN"
"definitions.DependencyEdge.properties.label.enum[27]" = "NPADVMOD"
"definitions.DependencyEdge.properties.label.enum[28]" = "NSUBJ"
"definitions.DependencyEdge.properties.label.enum[29]" = "NSUBJPASS"
"definitions.DependencyEdge.properties.label.enum[2]" = "ACOMP"
"definitions.DependencyEdge.properties.label.enum[30]" = "NUM"
"definitions.DependencyEdge.properties.label.enum[31]" = "NUMBER"
"definitions.DependencyEdge.properties.label.enum[32]" = "P"
"definitions.DependencyEdge.properties.label.enum[33]" = "PARATAXIS"
"definitions.DependencyEdge.properties.label.enum[34]" = "PARTMOD"
"definitions.DependencyEdge.properties.label.enum[35]" = "PCOMP"
"definitions.DependencyEdge.properties.label.enum[36]" = "POBJ"
"definitions.DependencyEdge.properties.label.enum[37]" = "POSS"
"definitions.DependencyEdge.properties.label.enum[38]" = "POSTNEG"
"definitions.DependencyEdge.properties.label.enum[39]" = "PRECOMP"
"definitions.DependencyEdge.properties.label.enum[3]" = "ADVCL"
"definitions.DependencyEdge.properties.label.enum[40]" = "PRECONJ"
"definitions.DependencyEdge.properties.label.enum[41]" = "PREDET"
"definitions.DependencyEdge.properties.label.enum[42]" = "PREF"
"definitions.DependencyEdge.properties.label.enum[43]" = "PREP"
"definitions.DependencyEdge.properties.label.enum[44]" = "PRONL"
"definitions.DependencyEdge.properties.label.enum[45]" = "PRT"
"definitions.DependencyEdge.properties.label.enum[46]" = "PS"
"definitions.DependencyEdge.properties.label.enum[47]" = "QUANTMOD"
"definitions.DependencyEdge.properties.label.enum[48]" = "RCMOD"
"definitions.DependencyEdge.properties.label.enum[49]" = "RCMODREL"
"definitions.DependencyEdge.properties.label.enum[4]" = "ADVMOD"
"definitions.DependencyEdge.properties.label.enum[50]" = "RDROP"
"definitions.DependencyEdge.properties.label.enum[51]" = "REF"
"definitions.DependencyEdge.properties.label.enum[52]" = "REMNANT"
"definitions.DependencyEdge.properties.label.enum[53]" = "REPARANDUM"
"definitions.DependencyEdge.properties.label.enum[54]" = "ROOT"
"definitions.DependencyEdge.properties.label.enum[55]" = "SNUM"
"definitions.DependencyEdge.properties.label.enum[56]" = "SUFF"
"definitions.DependencyEdge.properties.label.enum[57]" = "TMOD"
"definitions.DependencyEdge.properties.label.enum[58]" = "TOPIC"
"definitions.DependencyEdge.properties.label.enum[59]" = "VMOD"
"definitions.DependencyEdge.properties.label.enum[5]" = "AMOD"
"definitions.DependencyEdge.properties.label.enum[60]" = "VOCATIVE"
"definitions.DependencyEdge.properties.label.enum[61]" = "XCOMP"
"definitions.DependencyEdge.properties.label.enum[62]" = "SUFFIX"
"definitions.DependencyEdge.properties.label.enum[63]" = "TITLE"
"definitions.DependencyEdge.properties.label.enum[64]" = "ADVPHMOD"
"definitions.DependencyEdge.properties.label.enum[65]" = "AUXCAUS"
"definitions.DependencyEdge.properties.label.enum[66]" = "AUXVV"
"definitions.DependencyEdge.properties.label.enum[67]" = "DTMOD"
"definitions.DependencyEdge.properties.label.enum[68]" = "FOREIGN"
"definitions.DependencyEdge.properties.label.enum[69]" = "KW"
"definitions.DependencyEdge.properties.label.enum[6]" = "APPOS"
"definitions.DependencyEdge.properties.label.enum[70]" = "LIST"
"definitions.DependencyEdge.properties.label.enum[71]" = "NOMC"
"definitions.DependencyEdge.properties.label.enum[72]" = "NOMCSUBJ"
"definitions.DependencyEdge.properties.label.enum[73]" = "NOMCSUBJPASS"
"definitions.DependencyEdge.properties.label.enum[74]" = "NUMC"
"definitions.DependencyEdge.properties.label.enum[75]" = "COP"
"definitions.DependencyEdge.properties.label.enum[76]" = "DISLOCATED"
"definitions.DependencyEdge.properties.label.enum[77]" = "ASP"
"definitions.DependencyEdge.properties.label.enum[78]" = "GMOD"
"definitions.DependencyEdge.properties.label.enum[79]" = "GOBJ"
"definitions.DependencyEdge.properties.label.enum[7]" = "ATTR"
"definitions.DependencyEdge.properties.label.enum[80]" = "INFMOD"
"definitions.DependencyEdge.properties.label.enum[81]" = "MES"
"definitions.DependencyEdge.properties.label.enum[82]" = "NCOMP"
"definitions.DependencyEdge.properties.label.enum[8]" = "AUX"
"definitions.DependencyEdge.properties.label.enum[9]" = "AUXPASS"
"definitions.DependencyEdge.properties.label.type" = "string"
"definitions.DependencyEdge.type" = "object"
"definitions.Document.description" = "################################################################ #\n\nRepresents the input to API methods."
"definitions.Document.properties.content.description" = "The content of the input in string format."
"definitions.Document.properties.content.type" = "string"
"definitions.Document.properties.gcsContentUri.description" = "The Google Cloud Storage URI where the file content is located.\nThis URI must be of the form: gs://bucket_name/object_name. For more\ndetails, see https://cloud.google.com/storage/docs/reference-uris.\nNOTE: Cloud Storage object versioning is not supported."
"definitions.Document.properties.gcsContentUri.type" = "string"
"definitions.Document.properties.language.description" = "The language of the document (if not specified, the language is\nautomatically detected). Both ISO and BCP-47 language codes are\naccepted.<br>\n[Language Support](/natural-language/docs/languages)\nlists currently supported languages for each API method.\nIf the language (either specified by the caller or automatically detected)\nis not supported by the called API method, an `INVALID_ARGUMENT` error\nis returned."
"definitions.Document.properties.language.type" = "string"
"definitions.Document.properties.type.description" = "Required. If the type is not set or is `TYPE_UNSPECIFIED`,\nreturns an `INVALID_ARGUMENT` error."
"definitions.Document.properties.type.enum.length" = 3
"definitions.Document.properties.type.enum[0]" = "TYPE_UNSPECIFIED"
"definitions.Document.properties.type.enum[1]" = "PLAIN_TEXT"
"definitions.Document.properties.type.enum[2]" = "HTML"
"definitions.Document.properties.type.type" = "string"
"definitions.Document.type" = "object"
"definitions.Entity.description" = "Represents a phrase in the text that is a known entity, such as\na person, an organization, or location. The API associates information, such\nas salience and mentions, with entities."
"definitions.Entity.properties.mentions.description" = "The mentions of this entity in the input document. The API currently\nsupports proper noun mentions."
"definitions.Entity.properties.mentions.items.$ref" = "#/definitions/EntityMention"
"definitions.Entity.properties.mentions.type" = "array"
"definitions.Entity.properties.metadata.additionalProperties.type" = "string"
"definitions.Entity.properties.metadata.description" = "Metadata associated with the entity.\n\nCurrently, Wikipedia URLs and Knowledge Graph MIDs are provided, if\navailable. The associated keys are \"wikipedia_url\" and \"mid\", respectively."
"definitions.Entity.properties.metadata.type" = "object"
"definitions.Entity.properties.name.description" = "The representative name for the entity."
"definitions.Entity.properties.name.type" = "string"
"definitions.Entity.properties.salience.description" = "The salience score associated with the entity in the [0, 1.0] range.\n\nThe salience score for an entity provides information about the\nimportance or centrality of that entity to the entire document text.\nScores closer to 0 are less salient, while scores closer to 1.0 are highly\nsalient."
"definitions.Entity.properties.salience.format" = "float"
"definitions.Entity.properties.salience.type" = "number"
"definitions.Entity.properties.sentiment.$ref" = "#/definitions/Sentiment"
"definitions.Entity.properties.sentiment.description" = "For calls to AnalyzeEntitySentiment or if\nAnnotateTextRequest.Features.extract_entity_sentiment is set to\ntrue, this field will contain the aggregate sentiment expressed for this\nentity in the provided document."
"definitions.Entity.properties.type.description" = "The entity type."
"definitions.Entity.properties.type.enum.length" = 8
"definitions.Entity.properties.type.enum[0]" = "UNKNOWN"
"definitions.Entity.properties.type.enum[1]" = "PERSON"
"definitions.Entity.properties.type.enum[2]" = "LOCATION"
"definitions.Entity.properties.type.enum[3]" = "ORGANIZATION"
"definitions.Entity.properties.type.enum[4]" = "EVENT"
"definitions.Entity.properties.type.enum[5]" = "WORK_OF_ART"
"definitions.Entity.properties.type.enum[6]" = "CONSUMER_GOOD"
"definitions.Entity.properties.type.enum[7]" = "OTHER"
"definitions.Entity.properties.type.type" = "string"
"definitions.Entity.type" = "object"
"definitions.EntityMention.description" = "Represents a mention for an entity in the text. Currently, proper noun\nmentions are supported."
"definitions.EntityMention.properties.sentiment.$ref" = "#/definitions/Sentiment"
"definitions.EntityMention.properties.sentiment.description" = "For calls to AnalyzeEntitySentiment or if\nAnnotateTextRequest.Features.extract_entity_sentiment is set to\ntrue, this field will contain the sentiment expressed for this mention of\nthe entity in the provided document."
"definitions.EntityMention.properties.text.$ref" = "#/definitions/TextSpan"
"definitions.EntityMention.properties.text.description" = "The mention text."
"definitions.EntityMention.properties.type.description" = "The type of the entity mention."
"definitions.EntityMention.properties.type.enum.length" = 3
"definitions.EntityMention.properties.type.enum[0]" = "TYPE_UNKNOWN"
"definitions.EntityMention.properties.type.enum[1]" = "PROPER"
"definitions.EntityMention.properties.type.enum[2]" = "COMMON"
"definitions.EntityMention.properties.type.type" = "string"
"definitions.EntityMention.type" = "object"
"definitions.Features.description" = "All available features for sentiment, syntax, and semantic analysis.\nSetting each one to true will enable that specific analysis for the input."
"definitions.Features.properties.extractDocumentSentiment.description" = "Extract document-level sentiment."
"definitions.Features.properties.extractDocumentSentiment.type" = "boolean"
"definitions.Features.properties.extractEntities.description" = "Extract entities."
"definitions.Features.properties.extractEntities.type" = "boolean"
"definitions.Features.properties.extractEntitySentiment.description" = "Extract entities and their associated sentiment."
"definitions.Features.properties.extractEntitySentiment.type" = "boolean"
"definitions.Features.properties.extractSyntax.description" = "Extract syntax information."
"definitions.Features.properties.extractSyntax.type" = "boolean"
"definitions.Features.type" = "object"
"definitions.PartOfSpeech.description" = "Represents part of speech information for a token. Parts of speech\nare as defined in\nhttp://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf"
"definitions.PartOfSpeech.properties.aspect.description" = "The grammatical aspect."
"definitions.PartOfSpeech.properties.aspect.enum.length" = 4
"definitions.PartOfSpeech.properties.aspect.enum[0]" = "ASPECT_UNKNOWN"
"definitions.PartOfSpeech.properties.aspect.enum[1]" = "PERFECTIVE"
"definitions.PartOfSpeech.properties.aspect.enum[2]" = "IMPERFECTIVE"
"definitions.PartOfSpeech.properties.aspect.enum[3]" = "PROGRESSIVE"
"definitions.PartOfSpeech.properties.aspect.type" = "string"
"definitions.PartOfSpeech.properties.case.description" = "The grammatical case."
"definitions.PartOfSpeech.properties.case.enum.length" = 15
"definitions.PartOfSpeech.properties.case.enum[0]" = "CASE_UNKNOWN"
"definitions.PartOfSpeech.properties.case.enum[10]" = "PARTITIVE"
"definitions.PartOfSpeech.properties.case.enum[11]" = "PREPOSITIONAL"
"definitions.PartOfSpeech.properties.case.enum[12]" = "REFLEXIVE_CASE"
"definitions.PartOfSpeech.properties.case.enum[13]" = "RELATIVE_CASE"
"definitions.PartOfSpeech.properties.case.enum[14]" = "VOCATIVE"
"definitions.PartOfSpeech.properties.case.enum[1]" = "ACCUSATIVE"
"definitions.PartOfSpeech.properties.case.enum[2]" = "ADVERBIAL"
"definitions.PartOfSpeech.properties.case.enum[3]" = "COMPLEMENTIVE"
"definitions.PartOfSpeech.properties.case.enum[4]" = "DATIVE"
"definitions.PartOfSpeech.properties.case.enum[5]" = "GENITIVE"
"definitions.PartOfSpeech.properties.case.enum[6]" = "INSTRUMENTAL"
"definitions.PartOfSpeech.properties.case.enum[7]" = "LOCATIVE"
"definitions.PartOfSpeech.properties.case.enum[8]" = "NOMINATIVE"
"definitions.PartOfSpeech.properties.case.enum[9]" = "OBLIQUE"
"definitions.PartOfSpeech.properties.case.type" = "string"
"definitions.PartOfSpeech.properties.form.description" = "The grammatical form."
"definitions.PartOfSpeech.properties.form.enum.length" = 12
"definitions.PartOfSpeech.properties.form.enum[0]" = "FORM_UNKNOWN"
"definitions.PartOfSpeech.properties.form.enum[10]" = "ORDER"
"definitions.PartOfSpeech.properties.form.enum[11]" = "SPECIFIC"
"definitions.PartOfSpeech.properties.form.enum[1]" = "ADNOMIAL"
"definitions.PartOfSpeech.properties.form.enum[2]" = "AUXILIARY"
"definitions.PartOfSpeech.properties.form.enum[3]" = "COMPLEMENTIZER"
"definitions.PartOfSpeech.properties.form.enum[4]" = "FINAL_ENDING"
"definitions.PartOfSpeech.properties.form.enum[5]" = "GERUND"
"definitions.PartOfSpeech.properties.form.enum[6]" = "REALIS"
"definitions.PartOfSpeech.properties.form.enum[7]" = "IRREALIS"
"definitions.PartOfSpeech.properties.form.enum[8]" = "SHORT"
"definitions.PartOfSpeech.properties.form.enum[9]" = "LONG"
"definitions.PartOfSpeech.properties.form.type" = "string"
"definitions.PartOfSpeech.properties.gender.description" = "The grammatical gender."
"definitions.PartOfSpeech.properties.gender.enum.length" = 4
"definitions.PartOfSpeech.properties.gender.enum[0]" = "GENDER_UNKNOWN"
"definitions.PartOfSpeech.properties.gender.enum[1]" = "FEMININE"
"definitions.PartOfSpeech.properties.gender.enum[2]" = "MASCULINE"
"definitions.PartOfSpeech.properties.gender.enum[3]" = "NEUTER"
"definitions.PartOfSpeech.properties.gender.type" = "string"
"definitions.PartOfSpeech.properties.mood.description" = "The grammatical mood."
"definitions.PartOfSpeech.properties.mood.enum.length" = 7
"definitions.PartOfSpeech.properties.mood.enum[0]" = "MOOD_UNKNOWN"
"definitions.PartOfSpeech.properties.mood.enum[1]" = "CONDITIONAL_MOOD"
"definitions.PartOfSpeech.properties.mood.enum[2]" = "IMPERATIVE"
"definitions.PartOfSpeech.properties.mood.enum[3]" = "INDICATIVE"
"definitions.PartOfSpeech.properties.mood.enum[4]" = "INTERROGATIVE"
"definitions.PartOfSpeech.properties.mood.enum[5]" = "JUSSIVE"
"definitions.PartOfSpeech.properties.mood.enum[6]" = "SUBJUNCTIVE"
"definitions.PartOfSpeech.properties.mood.type" = "string"
"definitions.PartOfSpeech.properties.number.description" = "The grammatical number."
"definitions.PartOfSpeech.properties.number.enum.length" = 4
"definitions.PartOfSpeech.properties.number.enum[0]" = "NUMBER_UNKNOWN"
"definitions.PartOfSpeech.properties.number.enum[1]" = "SINGULAR"
"definitions.PartOfSpeech.properties.number.enum[2]" = "PLURAL"
"definitions.PartOfSpeech.properties.number.enum[3]" = "DUAL"
"definitions.PartOfSpeech.properties.number.type" = "string"
"definitions.PartOfSpeech.properties.person.description" = "The grammatical person."
"definitions.PartOfSpeech.properties.person.enum.length" = 5
"definitions.PartOfSpeech.properties.person.enum[0]" = "PERSON_UNKNOWN"
"definitions.PartOfSpeech.properties.person.enum[1]" = "FIRST"
"definitions.PartOfSpeech.properties.person.enum[2]" = "SECOND"
"definitions.PartOfSpeech.properties.person.enum[3]" = "THIRD"
"definitions.PartOfSpeech.properties.person.enum[4]" = "REFLEXIVE_PERSON"
"definitions.PartOfSpeech.properties.person.type" = "string"
"definitions.PartOfSpeech.properties.proper.description" = "The grammatical properness."
"definitions.PartOfSpeech.properties.proper.enum.length" = 3
"definitions.PartOfSpeech.properties.proper.enum[0]" = "PROPER_UNKNOWN"
"definitions.PartOfSpeech.properties.proper.enum[1]" = "PROPER"
"definitions.PartOfSpeech.properties.proper.enum[2]" = "NOT_PROPER"
"definitions.PartOfSpeech.properties.proper.type" = "string"
"definitions.PartOfSpeech.properties.reciprocity.description" = "The grammatical reciprocity."
"definitions.PartOfSpeech.properties.reciprocity.enum.length" = 3
"definitions.PartOfSpeech.properties.reciprocity.enum[0]" = "RECIPROCITY_UNKNOWN"
"definitions.PartOfSpeech.properties.reciprocity.enum[1]" = "RECIPROCAL"
"definitions.PartOfSpeech.properties.reciprocity.enum[2]" = "NON_RECIPROCAL"
"definitions.PartOfSpeech.properties.reciprocity.type" = "string"
"definitions.PartOfSpeech.properties.tag.description" = "The part of speech tag."
"definitions.PartOfSpeech.properties.tag.enum.length" = 14
"definitions.PartOfSpeech.properties.tag.enum[0]" = "UNKNOWN"
"definitions.PartOfSpeech.properties.tag.enum[10]" = "PUNCT"
"definitions.PartOfSpeech.properties.tag.enum[11]" = "VERB"
"definitions.PartOfSpeech.properties.tag.enum[12]" = "X"
"definitions.PartOfSpeech.properties.tag.enum[13]" = "AFFIX"
"definitions.PartOfSpeech.properties.tag.enum[1]" = "ADJ"
"definitions.PartOfSpeech.properties.tag.enum[2]" = "ADP"
"definitions.PartOfSpeech.properties.tag.enum[3]" = "ADV"
"definitions.PartOfSpeech.properties.tag.enum[4]" = "CONJ"
"definitions.PartOfSpeech.properties.tag.enum[5]" = "DET"
"definitions.PartOfSpeech.properties.tag.enum[6]" = "NOUN"
"definitions.PartOfSpeech.properties.tag.enum[7]" = "NUM"
"definitions.PartOfSpeech.properties.tag.enum[8]" = "PRON"
"definitions.PartOfSpeech.properties.tag.enum[9]" = "PRT"
"definitions.PartOfSpeech.properties.tag.type" = "string"
"definitions.PartOfSpeech.properties.tense.description" = "The grammatical tense."
"definitions.PartOfSpeech.properties.tense.enum.length" = 7
"definitions.PartOfSpeech.properties.tense.enum[0]" = "TENSE_UNKNOWN"
"definitions.PartOfSpeech.properties.tense.enum[1]" = "CONDITIONAL_TENSE"
"definitions.PartOfSpeech.properties.tense.enum[2]" = "FUTURE"
"definitions.PartOfSpeech.properties.tense.enum[3]" = "PAST"
"definitions.PartOfSpeech.properties.tense.enum[4]" = "PRESENT"
"definitions.PartOfSpeech.properties.tense.enum[5]" = "IMPERFECT"
"definitions.PartOfSpeech.properties.tense.enum[6]" = "PLUPERFECT"
"definitions.PartOfSpeech.properties.tense.type" = "string"
"definitions.PartOfSpeech.properties.voice.description" = "The grammatical voice."
"definitions.PartOfSpeech.properties.voice.enum.length" = 4
"definitions.PartOfSpeech.properties.voice.enum[0]" = "VOICE_UNKNOWN"
"definitions.PartOfSpeech.properties.voice.enum[1]" = "ACTIVE"
"definitions.PartOfSpeech.properties.voice.enum[2]" = "CAUSATIVE"
"definitions.PartOfSpeech.properties.voice.enum[3]" = "PASSIVE"
"definitions.PartOfSpeech.properties.voice.type" = "string"
"definitions.PartOfSpeech.type" = "object"
"definitions.Sentence.description" = "Represents a sentence in the input document."
"definitions.Sentence.properties.sentiment.$ref" = "#/definitions/Sentiment"
"definitions.Sentence.properties.sentiment.description" = "For calls to AnalyzeSentiment or if\nAnnotateTextRequest.Features.extract_document_sentiment is set to\ntrue, this field will contain the sentiment for the sentence."
"definitions.Sentence.properties.text.$ref" = "#/definitions/TextSpan"
"definitions.Sentence.properties.text.description" = "The sentence text."
"definitions.Sentence.type" = "object"
"definitions.Sentiment.description" = "Represents the feeling associated with the entire text or entities in\nthe text."
"definitions.Sentiment.properties.magnitude.description" = "A non-negative number in the [0, +inf) range, which represents\nthe absolute magnitude of sentiment regardless of score (positive or\nnegative)."
"definitions.Sentiment.properties.magnitude.format" = "float"
"definitions.Sentiment.properties.magnitude.type" = "number"
"definitions.Sentiment.properties.score.description" = "Sentiment score between -1.0 (negative sentiment) and 1.0\n(positive sentiment)."
"definitions.Sentiment.properties.score.format" = "float"
"definitions.Sentiment.properties.score.type" = "number"
"definitions.Sentiment.type" = "object"
"definitions.Status.description" = "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons."
"definitions.Status.properties.code.description" = "The status code, which should be an enum value of google.rpc.Code."
"definitions.Status.properties.code.format" = "int32"
"definitions.Status.properties.code.type" = "integer"
"definitions.Status.properties.details.description" = "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
"definitions.Status.properties.details.items.additionalProperties.description" = "Properties of the object. Contains field @type with type URL."
"definitions.Status.properties.details.items.type" = "object"
"definitions.Status.properties.details.type" = "array"
"definitions.Status.properties.message.description" = "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
"definitions.Status.properties.message.type" = "string"
"definitions.Status.type" = "object"
"definitions.TextSpan.description" = "Represents an output piece of text."
"definitions.TextSpan.properties.beginOffset.description" = "The API calculates the beginning offset of the content in the original\ndocument according to the EncodingType specified in the API request."
"definitions.TextSpan.properties.beginOffset.format" = "int32"
"definitions.TextSpan.properties.beginOffset.type" = "integer"
"definitions.TextSpan.properties.content.description" = "The content of the output text."
"definitions.TextSpan.properties.content.type" = "string"
"definitions.TextSpan.type" = "object"
"definitions.Token.description" = "Represents the smallest syntactic building block of the text."
"definitions.Token.properties.dependencyEdge.$ref" = "#/definitions/DependencyEdge"
"definitions.Token.properties.dependencyEdge.description" = "Dependency tree parse for this token."
"definitions.Token.properties.lemma.description" = "[Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token."
"definitions.Token.properties.lemma.type" = "string"
"definitions.Token.properties.partOfSpeech.$ref" = "#/definitions/PartOfSpeech"
"definitions.Token.properties.partOfSpeech.description" = "Parts of speech tag for this token."
"definitions.Token.properties.text.$ref" = "#/definitions/TextSpan"
"definitions.Token.properties.text.description" = "The token text."
"definitions.Token.type" = "object"
"externalDocs.url" = "https://cloud.google.com/natural-language/"
host = "language.googleapis.com"
"info.contact.name" = "Google"
"info.contact.url" = "https://google.com"
"info.description" = "Provides natural language understanding technologies to developers. Examples include sentiment analysis, entity recognition, entity sentiment analysis, and text annotations."
"info.title" = "Google Cloud Natural Language"
"info.version" = "v1"
"info.x-apiClientRegistration.url" = "https://console.developers.google.com"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "text"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
"info.x-origin.length" = 1
"info.x-origin[0].converter.url" = "https://github.com/lucybot/api-spec-converter"
"info.x-origin[0].converter.version" = "2.6.0"
"info.x-origin[0].format" = "google"
"info.x-origin[0].url" = "https://language.googleapis.com/$discovery/rest?version=v1"
"info.x-origin[0].version" = "v1"
"info.x-preferred" = true
"info.x-providerName" = "googleapis.com"
"info.x-serviceName" = "language"
"parameters.$.xgafv.description" = "V1 error format."
"parameters.$.xgafv.enum.length" = 2
"parameters.$.xgafv.enum[0]" = "1"
"parameters.$.xgafv.enum[1]" = "2"
"parameters.$.xgafv.in" = "query"
"parameters.$.xgafv.name" = "$.xgafv"
"parameters.$.xgafv.type" = "string"
"parameters.access_token.description" = "OAuth access token."
"parameters.access_token.in" = "query"
"parameters.access_token.name" = "access_token"
"parameters.access_token.type" = "string"
"parameters.alt.default" = "json"
"parameters.alt.description" = "Data format for response."
"parameters.alt.enum.length" = 3
"parameters.alt.enum[0]" = "json"
"parameters.alt.enum[1]" = "media"
"parameters.alt.enum[2]" = "proto"
"parameters.alt.in" = "query"
"parameters.alt.name" = "alt"
"parameters.alt.type" = "string"
"parameters.bearer_token.description" = "OAuth bearer token."
"parameters.bearer_token.in" = "query"
"parameters.bearer_token.name" = "bearer_token"
"parameters.bearer_token.type" = "string"
"parameters.callback.description" = "JSONP"
"parameters.callback.in" = "query"
"parameters.callback.name" = "callback"
"parameters.callback.type" = "string"
"parameters.fields.description" = "Selector specifying which fields to include in a partial response."
"parameters.fields.in" = "query"
"parameters.fields.name" = "fields"
"parameters.fields.type" = "string"
"parameters.key.description" = "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
"parameters.key.in" = "query"
"parameters.key.name" = "key"
"parameters.key.type" = "string"
"parameters.oauth_token.description" = "OAuth 2.0 token for the current user."
"parameters.oauth_token.in" = "query"
"parameters.oauth_token.name" = "oauth_token"
"parameters.oauth_token.type" = "string"
"parameters.pp.default" = true
"parameters.pp.description" = "Pretty-print response."
"parameters.pp.in" = "query"
"parameters.pp.name" = "pp"
"parameters.pp.type" = "boolean"
"parameters.prettyPrint.default" = true
"parameters.prettyPrint.description" = "Returns response with indentations and line breaks."
"parameters.prettyPrint.in" = "query"
"parameters.prettyPrint.name" = "prettyPrint"
"parameters.prettyPrint.type" = "boolean"
"parameters.quotaUser.description" = "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
"parameters.quotaUser.in" = "query"
"parameters.quotaUser.name" = "quotaUser"
"parameters.quotaUser.type" = "string"
"parameters.uploadType.description" = "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
"parameters.uploadType.in" = "query"
"parameters.uploadType.name" = "uploadType"
"parameters.uploadType.type" = "string"
"parameters.upload_protocol.description" = "Upload protocol for media (e.g. \"raw\", \"multipart\")."
"parameters.upload_protocol.in" = "query"
"parameters.upload_protocol.name" = "upload_protocol"
"parameters.upload_protocol.type" = "string"
"paths./v1/documents:analyzeEntities.parameters.length" = 13
"paths./v1/documents:analyzeEntities.parameters[0].$ref" = "#/parameters/pp"
"paths./v1/documents:analyzeEntities.parameters[10].$ref" = "#/parameters/key"
"paths./v1/documents:analyzeEntities.parameters[11].$ref" = "#/parameters/access_token"
"paths./v1/documents:analyzeEntities.parameters[12].$ref" = "#/parameters/quotaUser"
"paths./v1/documents:analyzeEntities.parameters[1].$ref" = "#/parameters/bearer_token"
"paths./v1/documents:analyzeEntities.parameters[2].$ref" = "#/parameters/oauth_token"
"paths./v1/documents:analyzeEntities.parameters[3].$ref" = "#/parameters/upload_protocol"
"paths./v1/documents:analyzeEntities.parameters[4].$ref" = "#/parameters/prettyPrint"
"paths./v1/documents:analyzeEntities.parameters[5].$ref" = "#/parameters/fields"
"paths./v1/documents:analyzeEntities.parameters[6].$ref" = "#/parameters/uploadType"
"paths./v1/documents:analyzeEntities.parameters[7].$ref" = "#/parameters/callback"
"paths./v1/documents:analyzeEntities.parameters[8].$ref" = "#/parameters/$.xgafv"
"paths./v1/documents:analyzeEntities.parameters[9].$ref" = "#/parameters/alt"
"paths./v1/documents:analyzeEntities.post.description" = "Finds named entities (currently proper names and common nouns) in the text\nalong with entity types, salience, mentions for each entity, and\nother properties."
"paths./v1/documents:analyzeEntities.post.operationId" = "language.documents.analyzeEntities"
"paths./v1/documents:analyzeEntities.post.parameters.length" = 1
"paths./v1/documents:analyzeEntities.post.parameters[0].in" = "body"
"paths./v1/documents:analyzeEntities.post.parameters[0].name" = "body"
"paths./v1/documents:analyzeEntities.post.parameters[0].schema.$ref" = "#/definitions/AnalyzeEntitiesRequest"
"paths./v1/documents:analyzeEntities.post.responses.200.description" = "Successful response"
"paths./v1/documents:analyzeEntities.post.responses.200.schema.$ref" = "#/definitions/AnalyzeEntitiesResponse"
"paths./v1/documents:analyzeEntities.post.security.length" = 2
"paths./v1/documents:analyzeEntities.post.security[0].Oauth2.length" = 1
"paths./v1/documents:analyzeEntities.post.security[0].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-language"
"paths./v1/documents:analyzeEntities.post.security[1].Oauth2.length" = 1
"paths./v1/documents:analyzeEntities.post.security[1].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-platform"
"paths./v1/documents:analyzeEntities.post.tags.length" = 1
"paths./v1/documents:analyzeEntities.post.tags[0]" = "documents"
"paths./v1/documents:analyzeEntitySentiment.parameters.length" = 13
"paths./v1/documents:analyzeEntitySentiment.parameters[0].$ref" = "#/parameters/$.xgafv"
"paths./v1/documents:analyzeEntitySentiment.parameters[10].$ref" = "#/parameters/quotaUser"
"paths./v1/documents:analyzeEntitySentiment.parameters[11].$ref" = "#/parameters/uploadType"
"paths./v1/documents:analyzeEntitySentiment.parameters[12].$ref" = "#/parameters/upload_protocol"
"paths./v1/documents:analyzeEntitySentiment.parameters[1].$ref" = "#/parameters/access_token"
"paths./v1/documents:analyzeEntitySentiment.parameters[2].$ref" = "#/parameters/alt"
"paths./v1/documents:analyzeEntitySentiment.parameters[3].$ref" = "#/parameters/bearer_token"
"paths./v1/documents:analyzeEntitySentiment.parameters[4].$ref" = "#/parameters/callback"
"paths./v1/documents:analyzeEntitySentiment.parameters[5].$ref" = "#/parameters/fields"
"paths./v1/documents:analyzeEntitySentiment.parameters[6].$ref" = "#/parameters/key"
"paths./v1/documents:analyzeEntitySentiment.parameters[7].$ref" = "#/parameters/oauth_token"
"paths./v1/documents:analyzeEntitySentiment.parameters[8].$ref" = "#/parameters/pp"
"paths./v1/documents:analyzeEntitySentiment.parameters[9].$ref" = "#/parameters/prettyPrint"
"paths./v1/documents:analyzeEntitySentiment.post.description" = "Finds entities, similar to AnalyzeEntities in the text and analyzes\nsentiment associated with each entity and its mentions."
"paths./v1/documents:analyzeEntitySentiment.post.operationId" = "language.documents.analyzeEntitySentiment"
"paths./v1/documents:analyzeEntitySentiment.post.parameters.length" = 1
"paths./v1/documents:analyzeEntitySentiment.post.parameters[0].in" = "body"
"paths./v1/documents:analyzeEntitySentiment.post.parameters[0].name" = "body"
"paths./v1/documents:analyzeEntitySentiment.post.parameters[0].schema.$ref" = "#/definitions/AnalyzeEntitySentimentRequest"
"paths./v1/documents:analyzeEntitySentiment.post.responses.200.description" = "Successful response"
"paths./v1/documents:analyzeEntitySentiment.post.responses.200.schema.$ref" = "#/definitions/AnalyzeEntitySentimentResponse"
"paths./v1/documents:analyzeEntitySentiment.post.security.length" = 2
"paths./v1/documents:analyzeEntitySentiment.post.security[0].Oauth2.length" = 1
"paths./v1/documents:analyzeEntitySentiment.post.security[0].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-language"
"paths./v1/documents:analyzeEntitySentiment.post.security[1].Oauth2.length" = 1
"paths./v1/documents:analyzeEntitySentiment.post.security[1].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-platform"
"paths./v1/documents:analyzeEntitySentiment.post.tags.length" = 1
"paths./v1/documents:analyzeEntitySentiment.post.tags[0]" = "documents"
"paths./v1/documents:analyzeSentiment.parameters.length" = 13
"paths./v1/documents:analyzeSentiment.parameters[0].$ref" = "#/parameters/pp"
"paths./v1/documents:analyzeSentiment.parameters[10].$ref" = "#/parameters/key"
"paths./v1/documents:analyzeSentiment.parameters[11].$ref" = "#/parameters/access_token"
"paths./v1/documents:analyzeSentiment.parameters[12].$ref" = "#/parameters/quotaUser"
"paths./v1/documents:analyzeSentiment.parameters[1].$ref" = "#/parameters/bearer_token"
"paths./v1/documents:analyzeSentiment.parameters[2].$ref" = "#/parameters/oauth_token"
"paths./v1/documents:analyzeSentiment.parameters[3].$ref" = "#/parameters/upload_protocol"
"paths./v1/documents:analyzeSentiment.parameters[4].$ref" = "#/parameters/prettyPrint"
"paths./v1/documents:analyzeSentiment.parameters[5].$ref" = "#/parameters/fields"
"paths./v1/documents:analyzeSentiment.parameters[6].$ref" = "#/parameters/uploadType"
"paths./v1/documents:analyzeSentiment.parameters[7].$ref" = "#/parameters/callback"
"paths./v1/documents:analyzeSentiment.parameters[8].$ref" = "#/parameters/$.xgafv"
"paths./v1/documents:analyzeSentiment.parameters[9].$ref" = "#/parameters/alt"
"paths./v1/documents:analyzeSentiment.post.description" = "Analyzes the sentiment of the provided text."
"paths./v1/documents:analyzeSentiment.post.operationId" = "language.documents.analyzeSentiment"
"paths./v1/documents:analyzeSentiment.post.parameters.length" = 1
"paths./v1/documents:analyzeSentiment.post.parameters[0].in" = "body"
"paths./v1/documents:analyzeSentiment.post.parameters[0].name" = "body"
"paths./v1/documents:analyzeSentiment.post.parameters[0].schema.$ref" = "#/definitions/AnalyzeSentimentRequest"
"paths./v1/documents:analyzeSentiment.post.responses.200.description" = "Successful response"
"paths./v1/documents:analyzeSentiment.post.responses.200.schema.$ref" = "#/definitions/AnalyzeSentimentResponse"
"paths./v1/documents:analyzeSentiment.post.security.length" = 2
"paths./v1/documents:analyzeSentiment.post.security[0].Oauth2.length" = 1
"paths./v1/documents:analyzeSentiment.post.security[0].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-language"
"paths./v1/documents:analyzeSentiment.post.security[1].Oauth2.length" = 1
"paths./v1/documents:analyzeSentiment.post.security[1].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-platform"
"paths./v1/documents:analyzeSentiment.post.tags.length" = 1
"paths./v1/documents:analyzeSentiment.post.tags[0]" = "documents"
"paths./v1/documents:analyzeSyntax.parameters.length" = 13
"paths./v1/documents:analyzeSyntax.parameters[0].$ref" = "#/parameters/pp"
"paths./v1/documents:analyzeSyntax.parameters[10].$ref" = "#/parameters/key"
"paths./v1/documents:analyzeSyntax.parameters[11].$ref" = "#/parameters/access_token"
"paths./v1/documents:analyzeSyntax.parameters[12].$ref" = "#/parameters/quotaUser"
"paths./v1/documents:analyzeSyntax.parameters[1].$ref" = "#/parameters/bearer_token"
"paths./v1/documents:analyzeSyntax.parameters[2].$ref" = "#/parameters/oauth_token"
"paths./v1/documents:analyzeSyntax.parameters[3].$ref" = "#/parameters/upload_protocol"
"paths./v1/documents:analyzeSyntax.parameters[4].$ref" = "#/parameters/prettyPrint"
"paths./v1/documents:analyzeSyntax.parameters[5].$ref" = "#/parameters/fields"
"paths./v1/documents:analyzeSyntax.parameters[6].$ref" = "#/parameters/uploadType"
"paths./v1/documents:analyzeSyntax.parameters[7].$ref" = "#/parameters/callback"
"paths./v1/documents:analyzeSyntax.parameters[8].$ref" = "#/parameters/$.xgafv"
"paths./v1/documents:analyzeSyntax.parameters[9].$ref" = "#/parameters/alt"
"paths./v1/documents:analyzeSyntax.post.description" = "Analyzes the syntax of the text and provides sentence boundaries and\ntokenization along with part of speech tags, dependency trees, and other\nproperties."
"paths./v1/documents:analyzeSyntax.post.operationId" = "language.documents.analyzeSyntax"
"paths./v1/documents:analyzeSyntax.post.parameters.length" = 1
"paths./v1/documents:analyzeSyntax.post.parameters[0].in" = "body"
"paths./v1/documents:analyzeSyntax.post.parameters[0].name" = "body"
"paths./v1/documents:analyzeSyntax.post.parameters[0].schema.$ref" = "#/definitions/AnalyzeSyntaxRequest"
"paths./v1/documents:analyzeSyntax.post.responses.200.description" = "Successful response"
"paths./v1/documents:analyzeSyntax.post.responses.200.schema.$ref" = "#/definitions/AnalyzeSyntaxResponse"
"paths./v1/documents:analyzeSyntax.post.security.length" = 2
"paths./v1/documents:analyzeSyntax.post.security[0].Oauth2.length" = 1
"paths./v1/documents:analyzeSyntax.post.security[0].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-language"
"paths./v1/documents:analyzeSyntax.post.security[1].Oauth2.length" = 1
"paths./v1/documents:analyzeSyntax.post.security[1].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-platform"
"paths./v1/documents:analyzeSyntax.post.tags.length" = 1
"paths./v1/documents:analyzeSyntax.post.tags[0]" = "documents"
"paths./v1/documents:annotateText.parameters.length" = 13
"paths./v1/documents:annotateText.parameters[0].$ref" = "#/parameters/pp"
"paths./v1/documents:annotateText.parameters[10].$ref" = "#/parameters/key"
"paths./v1/documents:annotateText.parameters[11].$ref" = "#/parameters/access_token"
"paths./v1/documents:annotateText.parameters[12].$ref" = "#/parameters/quotaUser"
"paths./v1/documents:annotateText.parameters[1].$ref" = "#/parameters/bearer_token"
"paths./v1/documents:annotateText.parameters[2].$ref" = "#/parameters/oauth_token"
"paths./v1/documents:annotateText.parameters[3].$ref" = "#/parameters/upload_protocol"
"paths./v1/documents:annotateText.parameters[4].$ref" = "#/parameters/prettyPrint"
"paths./v1/documents:annotateText.parameters[5].$ref" = "#/parameters/fields"
"paths./v1/documents:annotateText.parameters[6].$ref" = "#/parameters/uploadType"
"paths./v1/documents:annotateText.parameters[7].$ref" = "#/parameters/callback"
"paths./v1/documents:annotateText.parameters[8].$ref" = "#/parameters/$.xgafv"
"paths./v1/documents:annotateText.parameters[9].$ref" = "#/parameters/alt"
"paths./v1/documents:annotateText.post.description" = "A convenience method that provides all the features that analyzeSentiment,\nanalyzeEntities, and analyzeSyntax provide in one call."
"paths./v1/documents:annotateText.post.operationId" = "language.documents.annotateText"
"paths./v1/documents:annotateText.post.parameters.length" = 1
"paths./v1/documents:annotateText.post.parameters[0].in" = "body"
"paths./v1/documents:annotateText.post.parameters[0].name" = "body"
"paths./v1/documents:annotateText.post.parameters[0].schema.$ref" = "#/definitions/AnnotateTextRequest"
"paths./v1/documents:annotateText.post.responses.200.description" = "Successful response"
"paths./v1/documents:annotateText.post.responses.200.schema.$ref" = "#/definitions/AnnotateTextResponse"
"paths./v1/documents:annotateText.post.security.length" = 2
"paths./v1/documents:annotateText.post.security[0].Oauth2.length" = 1
"paths./v1/documents:annotateText.post.security[0].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-language"
"paths./v1/documents:annotateText.post.security[1].Oauth2.length" = 1
"paths./v1/documents:annotateText.post.security[1].Oauth2[0]" = "https://www.googleapis.com/auth/cloud-platform"
"paths./v1/documents:annotateText.post.tags.length" = 1
"paths./v1/documents:annotateText.post.tags[0]" = "documents"
"schemes.length" = 1
"schemes[0]" = "https"
"securityDefinitions.Oauth2.authorizationUrl" = "https://accounts.google.com/o/oauth2/auth"
"securityDefinitions.Oauth2.description" = "Oauth 2.0 authentication"
"securityDefinitions.Oauth2.flow" = "implicit"
"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/cloud-language" = "Apply machine learning models to reveal the structure and meaning of text"
"securityDefinitions.Oauth2.scopes.https://www.googleapis.com/auth/cloud-platform" = "View and manage your data across Google Cloud Platform services"
"securityDefinitions.Oauth2.type" = "oauth2"
swagger = "2.0"
"tags.length" = 1
"tags[0].name" = "documents"
