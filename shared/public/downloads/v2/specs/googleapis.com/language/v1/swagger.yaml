swagger: '2.0'
schemes:
  - https
host: language.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'Provides natural language understanding technologies to developers. Examples include sentiment analysis, entity recognition, entity sentiment analysis, and text annotations.'
  title: Google Cloud Natural Language
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - text
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://language.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: language
externalDocs:
  url: 'https://cloud.google.com/natural-language/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-language': Apply machine learning models to reveal the structure and meaning of text
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: documents
paths:
  '/v1/documents:analyzeEntities':
    parameters:
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
    post:
      description: |-
        Finds named entities (currently proper names and common nouns) in the text
        along with entity types, salience, mentions for each entity, and
        other properties.
      operationId: language.documents.analyzeEntities
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnalyzeEntitiesRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnalyzeEntitiesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-language'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - documents
  '/v1/documents:analyzeEntitySentiment':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Finds entities, similar to AnalyzeEntities in the text and analyzes
        sentiment associated with each entity and its mentions.
      operationId: language.documents.analyzeEntitySentiment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnalyzeEntitySentimentRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnalyzeEntitySentimentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-language'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - documents
  '/v1/documents:analyzeSentiment':
    parameters:
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
    post:
      description: Analyzes the sentiment of the provided text.
      operationId: language.documents.analyzeSentiment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnalyzeSentimentRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnalyzeSentimentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-language'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - documents
  '/v1/documents:analyzeSyntax':
    parameters:
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
    post:
      description: |-
        Analyzes the syntax of the text and provides sentence boundaries and
        tokenization along with part of speech tags, dependency trees, and other
        properties.
      operationId: language.documents.analyzeSyntax
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnalyzeSyntaxRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnalyzeSyntaxResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-language'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - documents
  '/v1/documents:annotateText':
    parameters:
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/quotaUser'
    post:
      description: |-
        A convenience method that provides all the features that analyzeSentiment,
        analyzeEntities, and analyzeSyntax provide in one call.
      operationId: language.documents.annotateText
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AnnotateTextRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AnnotateTextResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-language'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - documents
definitions:
  AnalyzeEntitiesRequest:
    description: The entity analysis request message.
    properties:
      document:
        $ref: '#/definitions/Document'
        description: Input document.
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
    type: object
  AnalyzeEntitiesResponse:
    description: The entity analysis response message.
    properties:
      entities:
        description: The recognized entities in the input document.
        items:
          $ref: '#/definitions/Entity'
        type: array
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See Document.language field for more details.
        type: string
    type: object
  AnalyzeEntitySentimentRequest:
    description: The entity-level sentiment analysis request message.
    properties:
      document:
        $ref: '#/definitions/Document'
        description: Input document.
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
    type: object
  AnalyzeEntitySentimentResponse:
    description: The entity-level sentiment analysis response message.
    properties:
      entities:
        description: The recognized entities in the input document with associated sentiments.
        items:
          $ref: '#/definitions/Entity'
        type: array
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See Document.language field for more details.
        type: string
    type: object
  AnalyzeSentimentRequest:
    description: The sentiment analysis request message.
    properties:
      document:
        $ref: '#/definitions/Document'
        description: Input document.
      encodingType:
        description: The encoding type used by the API to calculate sentence offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
    type: object
  AnalyzeSentimentResponse:
    description: The sentiment analysis response message.
    properties:
      documentSentiment:
        $ref: '#/definitions/Sentiment'
        description: The overall sentiment of the input document.
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See Document.language field for more details.
        type: string
      sentences:
        description: The sentiment for all the sentences in the document.
        items:
          $ref: '#/definitions/Sentence'
        type: array
    type: object
  AnalyzeSyntaxRequest:
    description: The syntax analysis request message.
    properties:
      document:
        $ref: '#/definitions/Document'
        description: Input document.
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
    type: object
  AnalyzeSyntaxResponse:
    description: The syntax analysis response message.
    properties:
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See Document.language field for more details.
        type: string
      sentences:
        description: Sentences in the input document.
        items:
          $ref: '#/definitions/Sentence'
        type: array
      tokens:
        description: 'Tokens, along with their syntactic information, in the input document.'
        items:
          $ref: '#/definitions/Token'
        type: array
    type: object
  AnnotateTextRequest:
    description: |-
      The request message for the text annotation API, which can perform multiple
      analysis types (sentiment, entities, and syntax) in one call.
    properties:
      document:
        $ref: '#/definitions/Document'
        description: Input document.
      encodingType:
        description: The encoding type used by the API to calculate offsets.
        enum:
          - NONE
          - UTF8
          - UTF16
          - UTF32
        type: string
      features:
        $ref: '#/definitions/Features'
        description: The enabled features.
    type: object
  AnnotateTextResponse:
    description: The text annotations response message.
    properties:
      documentSentiment:
        $ref: '#/definitions/Sentiment'
        description: |-
          The overall sentiment for the document. Populated if the user enables
          AnnotateTextRequest.Features.extract_document_sentiment.
      entities:
        description: |-
          Entities, along with their semantic information, in the input document.
          Populated if the user enables
          AnnotateTextRequest.Features.extract_entities.
        items:
          $ref: '#/definitions/Entity'
        type: array
      language:
        description: |-
          The language of the text, which will be the same as the language specified
          in the request or, if not specified, the automatically-detected language.
          See Document.language field for more details.
        type: string
      sentences:
        description: |-
          Sentences in the input document. Populated if the user enables
          AnnotateTextRequest.Features.extract_syntax.
        items:
          $ref: '#/definitions/Sentence'
        type: array
      tokens:
        description: |-
          Tokens, along with their syntactic information, in the input document.
          Populated if the user enables
          AnnotateTextRequest.Features.extract_syntax.
        items:
          $ref: '#/definitions/Token'
        type: array
    type: object
  DependencyEdge:
    description: |-
      Represents dependency parse tree information for a token. (For more
      information on dependency labels, see
      http://www.aclweb.org/anthology/P13-2017
    properties:
      headTokenIndex:
        description: |-
          Represents the head of this token in the dependency tree.
          This is the index of the token which has an arc going to this token.
          The index is the position of the token in the array of tokens returned
          by the API method. If this token is a root token, then the
          `head_token_index` is its own index.
        format: int32
        type: integer
      label:
        description: The parse label for the token.
        enum:
          - UNKNOWN
          - ABBREV
          - ACOMP
          - ADVCL
          - ADVMOD
          - AMOD
          - APPOS
          - ATTR
          - AUX
          - AUXPASS
          - CC
          - CCOMP
          - CONJ
          - CSUBJ
          - CSUBJPASS
          - DEP
          - DET
          - DISCOURSE
          - DOBJ
          - EXPL
          - GOESWITH
          - IOBJ
          - MARK
          - MWE
          - MWV
          - NEG
          - NN
          - NPADVMOD
          - NSUBJ
          - NSUBJPASS
          - NUM
          - NUMBER
          - P
          - PARATAXIS
          - PARTMOD
          - PCOMP
          - POBJ
          - POSS
          - POSTNEG
          - PRECOMP
          - PRECONJ
          - PREDET
          - PREF
          - PREP
          - PRONL
          - PRT
          - PS
          - QUANTMOD
          - RCMOD
          - RCMODREL
          - RDROP
          - REF
          - REMNANT
          - REPARANDUM
          - ROOT
          - SNUM
          - SUFF
          - TMOD
          - TOPIC
          - VMOD
          - VOCATIVE
          - XCOMP
          - SUFFIX
          - TITLE
          - ADVPHMOD
          - AUXCAUS
          - AUXVV
          - DTMOD
          - FOREIGN
          - KW
          - LIST
          - NOMC
          - NOMCSUBJ
          - NOMCSUBJPASS
          - NUMC
          - COP
          - DISLOCATED
          - ASP
          - GMOD
          - GOBJ
          - INFMOD
          - MES
          - NCOMP
        type: string
    type: object
  Document:
    description: |-
      ################################################################ #

      Represents the input to API methods.
    properties:
      content:
        description: The content of the input in string format.
        type: string
      gcsContentUri:
        description: |-
          The Google Cloud Storage URI where the file content is located.
          This URI must be of the form: gs://bucket_name/object_name. For more
          details, see https://cloud.google.com/storage/docs/reference-uris.
          NOTE: Cloud Storage object versioning is not supported.
        type: string
      language:
        description: |-
          The language of the document (if not specified, the language is
          automatically detected). Both ISO and BCP-47 language codes are
          accepted.<br>
          [Language Support](/natural-language/docs/languages)
          lists currently supported languages for each API method.
          If the language (either specified by the caller or automatically detected)
          is not supported by the called API method, an `INVALID_ARGUMENT` error
          is returned.
        type: string
      type:
        description: |-
          Required. If the type is not set or is `TYPE_UNSPECIFIED`,
          returns an `INVALID_ARGUMENT` error.
        enum:
          - TYPE_UNSPECIFIED
          - PLAIN_TEXT
          - HTML
        type: string
    type: object
  Entity:
    description: |-
      Represents a phrase in the text that is a known entity, such as
      a person, an organization, or location. The API associates information, such
      as salience and mentions, with entities.
    properties:
      mentions:
        description: |-
          The mentions of this entity in the input document. The API currently
          supports proper noun mentions.
        items:
          $ref: '#/definitions/EntityMention'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: |-
          Metadata associated with the entity.

          Currently, Wikipedia URLs and Knowledge Graph MIDs are provided, if
          available. The associated keys are "wikipedia_url" and "mid", respectively.
        type: object
      name:
        description: The representative name for the entity.
        type: string
      salience:
        description: |-
          The salience score associated with the entity in the [0, 1.0] range.

          The salience score for an entity provides information about the
          importance or centrality of that entity to the entire document text.
          Scores closer to 0 are less salient, while scores closer to 1.0 are highly
          salient.
        format: float
        type: number
      sentiment:
        $ref: '#/definitions/Sentiment'
        description: |-
          For calls to AnalyzeEntitySentiment or if
          AnnotateTextRequest.Features.extract_entity_sentiment is set to
          true, this field will contain the aggregate sentiment expressed for this
          entity in the provided document.
      type:
        description: The entity type.
        enum:
          - UNKNOWN
          - PERSON
          - LOCATION
          - ORGANIZATION
          - EVENT
          - WORK_OF_ART
          - CONSUMER_GOOD
          - OTHER
        type: string
    type: object
  EntityMention:
    description: |-
      Represents a mention for an entity in the text. Currently, proper noun
      mentions are supported.
    properties:
      sentiment:
        $ref: '#/definitions/Sentiment'
        description: |-
          For calls to AnalyzeEntitySentiment or if
          AnnotateTextRequest.Features.extract_entity_sentiment is set to
          true, this field will contain the sentiment expressed for this mention of
          the entity in the provided document.
      text:
        $ref: '#/definitions/TextSpan'
        description: The mention text.
      type:
        description: The type of the entity mention.
        enum:
          - TYPE_UNKNOWN
          - PROPER
          - COMMON
        type: string
    type: object
  Features:
    description: |-
      All available features for sentiment, syntax, and semantic analysis.
      Setting each one to true will enable that specific analysis for the input.
    properties:
      extractDocumentSentiment:
        description: Extract document-level sentiment.
        type: boolean
      extractEntities:
        description: Extract entities.
        type: boolean
      extractEntitySentiment:
        description: Extract entities and their associated sentiment.
        type: boolean
      extractSyntax:
        description: Extract syntax information.
        type: boolean
    type: object
  PartOfSpeech:
    description: |-
      Represents part of speech information for a token. Parts of speech
      are as defined in
      http://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf
    properties:
      aspect:
        description: The grammatical aspect.
        enum:
          - ASPECT_UNKNOWN
          - PERFECTIVE
          - IMPERFECTIVE
          - PROGRESSIVE
        type: string
      case:
        description: The grammatical case.
        enum:
          - CASE_UNKNOWN
          - ACCUSATIVE
          - ADVERBIAL
          - COMPLEMENTIVE
          - DATIVE
          - GENITIVE
          - INSTRUMENTAL
          - LOCATIVE
          - NOMINATIVE
          - OBLIQUE
          - PARTITIVE
          - PREPOSITIONAL
          - REFLEXIVE_CASE
          - RELATIVE_CASE
          - VOCATIVE
        type: string
      form:
        description: The grammatical form.
        enum:
          - FORM_UNKNOWN
          - ADNOMIAL
          - AUXILIARY
          - COMPLEMENTIZER
          - FINAL_ENDING
          - GERUND
          - REALIS
          - IRREALIS
          - SHORT
          - LONG
          - ORDER
          - SPECIFIC
        type: string
      gender:
        description: The grammatical gender.
        enum:
          - GENDER_UNKNOWN
          - FEMININE
          - MASCULINE
          - NEUTER
        type: string
      mood:
        description: The grammatical mood.
        enum:
          - MOOD_UNKNOWN
          - CONDITIONAL_MOOD
          - IMPERATIVE
          - INDICATIVE
          - INTERROGATIVE
          - JUSSIVE
          - SUBJUNCTIVE
        type: string
      number:
        description: The grammatical number.
        enum:
          - NUMBER_UNKNOWN
          - SINGULAR
          - PLURAL
          - DUAL
        type: string
      person:
        description: The grammatical person.
        enum:
          - PERSON_UNKNOWN
          - FIRST
          - SECOND
          - THIRD
          - REFLEXIVE_PERSON
        type: string
      proper:
        description: The grammatical properness.
        enum:
          - PROPER_UNKNOWN
          - PROPER
          - NOT_PROPER
        type: string
      reciprocity:
        description: The grammatical reciprocity.
        enum:
          - RECIPROCITY_UNKNOWN
          - RECIPROCAL
          - NON_RECIPROCAL
        type: string
      tag:
        description: The part of speech tag.
        enum:
          - UNKNOWN
          - ADJ
          - ADP
          - ADV
          - CONJ
          - DET
          - NOUN
          - NUM
          - PRON
          - PRT
          - PUNCT
          - VERB
          - X
          - AFFIX
        type: string
      tense:
        description: The grammatical tense.
        enum:
          - TENSE_UNKNOWN
          - CONDITIONAL_TENSE
          - FUTURE
          - PAST
          - PRESENT
          - IMPERFECT
          - PLUPERFECT
        type: string
      voice:
        description: The grammatical voice.
        enum:
          - VOICE_UNKNOWN
          - ACTIVE
          - CAUSATIVE
          - PASSIVE
        type: string
    type: object
  Sentence:
    description: Represents a sentence in the input document.
    properties:
      sentiment:
        $ref: '#/definitions/Sentiment'
        description: |-
          For calls to AnalyzeSentiment or if
          AnnotateTextRequest.Features.extract_document_sentiment is set to
          true, this field will contain the sentiment for the sentence.
      text:
        $ref: '#/definitions/TextSpan'
        description: The sentence text.
    type: object
  Sentiment:
    description: |-
      Represents the feeling associated with the entire text or entities in
      the text.
    properties:
      magnitude:
        description: |-
          A non-negative number in the [0, +inf) range, which represents
          the absolute magnitude of sentiment regardless of score (positive or
          negative).
        format: float
        type: number
      score:
        description: |-
          Sentiment score between -1.0 (negative sentiment) and 1.0
          (positive sentiment).
        format: float
        type: number
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  TextSpan:
    description: Represents an output piece of text.
    properties:
      beginOffset:
        description: |-
          The API calculates the beginning offset of the content in the original
          document according to the EncodingType specified in the API request.
        format: int32
        type: integer
      content:
        description: The content of the output text.
        type: string
    type: object
  Token:
    description: Represents the smallest syntactic building block of the text.
    properties:
      dependencyEdge:
        $ref: '#/definitions/DependencyEdge'
        description: Dependency tree parse for this token.
      lemma:
        description: '[Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token.'
        type: string
      partOfSpeech:
        $ref: '#/definitions/PartOfSpeech'
        description: Parts of speech tag for this token.
      text:
        $ref: '#/definitions/TextSpan'
        description: The token text.
    type: object
