basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.AncestorSummary.properties.ancestor_type.type" = "string"
"definitions.AncestorSummary.properties.id.type" = "string"
"definitions.AncestorSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.AncestorSummary.properties.images.type" = "array"
"definitions.AncestorSummary.properties.titles.$ref" = "#/definitions/AncestorTitles"
"definitions.AncestorSummary.properties.type.type" = "string"
"definitions.AncestorSummary.required.length" = 5
"definitions.AncestorSummary.required[0]" = "ancestor_type"
"definitions.AncestorSummary.required[1]" = "id"
"definitions.AncestorSummary.required[2]" = "images"
"definitions.AncestorSummary.required[3]" = "titles"
"definitions.AncestorSummary.required[4]" = "type"
"definitions.AncestorSummary.type" = "object"
"definitions.AncestorTitles.properties.title.type" = "string"
"definitions.AncestorTitles.properties.type.type" = "string"
"definitions.AncestorTitles.required.length" = 2
"definitions.AncestorTitles.required[0]" = "title"
"definitions.AncestorTitles.required[1]" = "type"
"definitions.AncestorTitles.type" = "object"
"definitions.AvailableVersions.properties.available.type" = "string"
"definitions.AvailableVersions.properties.available_from_date.type" = "string"
"definitions.AvailableVersions.properties.available_to_date.type" = "string"
"definitions.AvailableVersions.properties.duration.type" = "string"
"definitions.AvailableVersions.properties.has_guidance.type" = "boolean"
"definitions.AvailableVersions.properties.media_set.type" = "string"
"definitions.AvailableVersions.properties.type.type" = "string"
"definitions.AvailableVersions.properties.version_pid.type" = "string"
"definitions.AvailableVersions.properties.version_type.type" = "string"
"definitions.AvailableVersions.required.length" = 9
"definitions.AvailableVersions.required[0]" = "available"
"definitions.AvailableVersions.required[1]" = "available_from_date"
"definitions.AvailableVersions.required[2]" = "available_to_date"
"definitions.AvailableVersions.required[3]" = "duration"
"definitions.AvailableVersions.required[4]" = "has_guidance"
"definitions.AvailableVersions.required[5]" = "media_set"
"definitions.AvailableVersions.required[6]" = "type"
"definitions.AvailableVersions.required[7]" = "version_pid"
"definitions.AvailableVersions.required[8]" = "version_type"
"definitions.AvailableVersions.type" = "object"
"definitions.Body.properties.category_id.type" = "string"
"definitions.Body.properties.platform.enum.length" = 2
"definitions.Body.properties.platform.enum[0]" = "responsiveweb"
"definitions.Body.properties.platform.enum[1]" = "app"
"definitions.Body.properties.platform.type" = "string"
"definitions.Body.required.length" = 2
"definitions.Body.required[0]" = "category_id"
"definitions.Body.required[1]" = "platform"
"definitions.Body.type" = "object"
"definitions.Body_1.properties.category_id.type" = "string"
"definitions.Body_1.properties.platform.enum.length" = 2
"definitions.Body_1.properties.platform.enum[0]" = "responsiveweb"
"definitions.Body_1.properties.platform.enum[1]" = "app"
"definitions.Body_1.properties.platform.type" = "string"
"definitions.Body_1.required.length" = 2
"definitions.Body_1.required[0]" = "category_id"
"definitions.Body_1.required[1]" = "platform"
"definitions.Body_1.type" = "object"
"definitions.Body_2.properties.platform.enum.length" = 2
"definitions.Body_2.properties.platform.enum[0]" = "responsiveweb"
"definitions.Body_2.properties.platform.enum[1]" = "app"
"definitions.Body_2.properties.platform.type" = "string"
"definitions.Body_2.properties.service_id.type" = "string"
"definitions.Body_2.required.length" = 2
"definitions.Body_2.required[0]" = "platform"
"definitions.Body_2.required[1]" = "service_id"
"definitions.Body_2.type" = "object"
"definitions.Body_3.properties.platform.enum.length" = 2
"definitions.Body_3.properties.platform.enum[0]" = "responsiveweb"
"definitions.Body_3.properties.platform.enum[1]" = "app"
"definitions.Body_3.properties.platform.type" = "string"
"definitions.Body_3.properties.service_id.type" = "string"
"definitions.Body_3.required.length" = 2
"definitions.Body_3.required[0]" = "platform"
"definitions.Body_3.required[1]" = "service_id"
"definitions.Body_3.type" = "object"
"definitions.Body_4.properties.action.enum.length" = 4
"definitions.Body_4.properties.action.enum[0]" = "started"
"definitions.Body_4.properties.action.enum[1]" = "ended"
"definitions.Body_4.properties.action.enum[2]" = "paused"
"definitions.Body_4.properties.action.enum[3]" = "heartbeat"
"definitions.Body_4.properties.action.type" = "string"
"definitions.Body_4.properties.elapsed_time.type" = "integer"
"definitions.Body_4.properties.pid.type" = "string"
"definitions.Body_4.properties.resource_type.enum.length" = 2
"definitions.Body_4.properties.resource_type.enum[0]" = "episode"
"definitions.Body_4.properties.resource_type.enum[1]" = "clip"
"definitions.Body_4.properties.resource_type.type" = "string"
"definitions.Body_4.properties.version_pid.type" = "string"
"definitions.Body_4.required.length" = 5
"definitions.Body_4.required[0]" = "action"
"definitions.Body_4.required[1]" = "elapsed_time"
"definitions.Body_4.required[2]" = "pid"
"definitions.Body_4.required[3]" = "resource_type"
"definitions.Body_4.required[4]" = "version_pid"
"definitions.Body_4.type" = "object"
"definitions.BrandSummary.properties.available_versions.items.$ref" = "#/definitions/AvailableVersions"
"definitions.BrandSummary.properties.available_versions.type" = "array"
"definitions.BrandSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.BrandSummary.properties.images.type" = "array"
"definitions.BrandSummary.properties.latest_available_episodes.items.$ref" = "#/definitions/EpisodeSummary"
"definitions.BrandSummary.properties.latest_available_episodes.type" = "array"
"definitions.BrandSummary.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.BrandSummary.properties.pid.type" = "string"
"definitions.BrandSummary.properties.short_synopsis.type" = "string"
"definitions.BrandSummary.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.BrandSummary.properties.total_available_episodes.type" = "integer"
"definitions.BrandSummary.properties.type.enum.length" = 1
"definitions.BrandSummary.properties.type.enum[0]" = "brand_summary"
"definitions.BrandSummary.properties.type.type" = "string"
"definitions.BrandSummary.required.length" = 8
"definitions.BrandSummary.required[0]" = "images"
"definitions.BrandSummary.required[1]" = "latest_available_episodes"
"definitions.BrandSummary.required[2]" = "network_summary"
"definitions.BrandSummary.required[3]" = "pid"
"definitions.BrandSummary.required[4]" = "short_synopsis"
"definitions.BrandSummary.required[5]" = "titles"
"definitions.BrandSummary.required[6]" = "total_available_episodes"
"definitions.BrandSummary.required[7]" = "type"
"definitions.BrandSummary.type" = "object"
"definitions.Broadcast.properties.duration.type" = "integer"
"definitions.Broadcast.properties.end.type" = "string"
"definitions.Broadcast.properties.is_audio_described.type" = "boolean"
"definitions.Broadcast.properties.is_blanked.type" = "boolean"
"definitions.Broadcast.properties.is_critical.type" = "boolean"
"definitions.Broadcast.properties.is_live.type" = "boolean"
"definitions.Broadcast.properties.is_repeat.type" = "boolean"
"definitions.Broadcast.properties.is_webcast.type" = "boolean"
"definitions.Broadcast.properties.pid.type" = "string"
"definitions.Broadcast.properties.programme.$ref" = "#/definitions/ProgrammeSummary"
"definitions.Broadcast.properties.service_id.type" = "string"
"definitions.Broadcast.properties.start.type" = "string"
"definitions.Broadcast.properties.type.type" = "string"
"definitions.Broadcast.properties.version_pid.type" = "string"
"definitions.Broadcast.required.length" = 13
"definitions.Broadcast.required[0]" = "duration"
"definitions.Broadcast.required[10]" = "start"
"definitions.Broadcast.required[11]" = "type"
"definitions.Broadcast.required[12]" = "version_pid"
"definitions.Broadcast.required[1]" = "end"
"definitions.Broadcast.required[2]" = "is_audio_described"
"definitions.Broadcast.required[3]" = "is_blanked"
"definitions.Broadcast.required[4]" = "is_critical"
"definitions.Broadcast.required[5]" = "is_live"
"definitions.Broadcast.required[6]" = "is_repeat"
"definitions.Broadcast.required[7]" = "is_webcast"
"definitions.Broadcast.required[8]" = "pid"
"definitions.Broadcast.required[9]" = "service_id"
"definitions.Broadcast.type" = "object"
"definitions.BroadcastsResponse.properties.$schema.type" = "string"
"definitions.BroadcastsResponse.properties.limit.type" = "integer"
"definitions.BroadcastsResponse.properties.offset.type" = "integer"
"definitions.BroadcastsResponse.properties.results.items.$ref" = "#/definitions/Broadcast"
"definitions.BroadcastsResponse.properties.results.type" = "array"
"definitions.BroadcastsResponse.properties.total.type" = "integer"
"definitions.BroadcastsResponse.required.length" = 5
"definitions.BroadcastsResponse.required[0]" = "$schema"
"definitions.BroadcastsResponse.required[1]" = "limit"
"definitions.BroadcastsResponse.required[2]" = "offset"
"definitions.BroadcastsResponse.required[3]" = "results"
"definitions.BroadcastsResponse.required[4]" = "total"
"definitions.BroadcastsResponse.type" = "object"
"definitions.CategoriesResponse.properties.$schema.type" = "string"
"definitions.CategoriesResponse.properties.limit.type" = "integer"
"definitions.CategoriesResponse.properties.offset.type" = "integer"
"definitions.CategoriesResponse.properties.results.items.$ref" = "#/definitions/Category"
"definitions.CategoriesResponse.properties.results.type" = "array"
"definitions.CategoriesResponse.properties.total.type" = "integer"
"definitions.CategoriesResponse.required.length" = 5
"definitions.CategoriesResponse.required[0]" = "$schema"
"definitions.CategoriesResponse.required[1]" = "limit"
"definitions.CategoriesResponse.required[2]" = "offset"
"definitions.CategoriesResponse.required[3]" = "results"
"definitions.CategoriesResponse.required[4]" = "total"
"definitions.CategoriesResponse.type" = "object"
"definitions.Category.properties.category_type.type" = "string"
"definitions.Category.properties.child_categories.items.$ref" = "#/definitions/ChildCategory"
"definitions.Category.properties.child_categories.type" = "array"
"definitions.Category.properties.depth.type" = "integer"
"definitions.Category.properties.id.type" = "string"
"definitions.Category.properties.pip_id.type" = "string"
"definitions.Category.properties.title.type" = "string"
"definitions.Category.properties.type.type" = "string"
"definitions.Category.properties.url_key.type" = "string"
"definitions.Category.required.length" = 8
"definitions.Category.required[0]" = "category_type"
"definitions.Category.required[1]" = "child_categories"
"definitions.Category.required[2]" = "depth"
"definitions.Category.required[3]" = "id"
"definitions.Category.required[4]" = "pip_id"
"definitions.Category.required[5]" = "title"
"definitions.Category.required[6]" = "type"
"definitions.Category.required[7]" = "url_key"
"definitions.Category.type" = "object"
"definitions.CategoryError.properties.href.type" = "string"
"definitions.CategoryError.properties.id.type" = "string"
"definitions.CategoryError.properties.message.type" = "string"
"definitions.CategoryError.properties.replied_at.type" = "string"
"definitions.CategoryError.properties.status.type" = "integer"
"definitions.CategoryError.required.length" = 5
"definitions.CategoryError.required[0]" = "href"
"definitions.CategoryError.required[1]" = "id"
"definitions.CategoryError.required[2]" = "message"
"definitions.CategoryError.required[3]" = "replied_at"
"definitions.CategoryError.required[4]" = "status"
"definitions.CategoryError.type" = "object"
"definitions.CategoryErrorResponse.properties.$schema.type" = "string"
"definitions.CategoryErrorResponse.properties.errors.items.$ref" = "#/definitions/CategoryError"
"definitions.CategoryErrorResponse.properties.errors.type" = "array"
"definitions.CategoryErrorResponse.required.length" = 2
"definitions.CategoryErrorResponse.required[0]" = "$schema"
"definitions.CategoryErrorResponse.required[1]" = "errors"
"definitions.CategoryErrorResponse.type" = "object"
"definitions.CategorySummary.properties.category_type.type" = "string"
"definitions.CategorySummary.properties.id.type" = "string"
"definitions.CategorySummary.properties.key.type" = "string"
"definitions.CategorySummary.properties.title.type" = "string"
"definitions.CategorySummary.properties.type.type" = "string"
"definitions.CategorySummary.required.length" = 5
"definitions.CategorySummary.required[0]" = "category_type"
"definitions.CategorySummary.required[1]" = "id"
"definitions.CategorySummary.required[2]" = "key"
"definitions.CategorySummary.required[3]" = "title"
"definitions.CategorySummary.required[4]" = "type"
"definitions.CategorySummary.type" = "object"
"definitions.ChildCategory.properties.category_type.type" = "string"
"definitions.ChildCategory.properties.child_categories.items.$ref" = "#/definitions/ChildCategory"
"definitions.ChildCategory.properties.child_categories.type" = "array"
"definitions.ChildCategory.properties.depth.type" = "integer"
"definitions.ChildCategory.properties.id.type" = "string"
"definitions.ChildCategory.properties.pip_id.type" = "string"
"definitions.ChildCategory.properties.title.type" = "string"
"definitions.ChildCategory.properties.type.type" = "string"
"definitions.ChildCategory.properties.url_key.type" = "string"
"definitions.ChildCategory.required.length" = 8
"definitions.ChildCategory.required[0]" = "category_type"
"definitions.ChildCategory.required[1]" = "child_categories"
"definitions.ChildCategory.required[2]" = "depth"
"definitions.ChildCategory.required[3]" = "id"
"definitions.ChildCategory.required[4]" = "pip_id"
"definitions.ChildCategory.required[5]" = "title"
"definitions.ChildCategory.required[6]" = "type"
"definitions.ChildCategory.required[7]" = "url_key"
"definitions.ChildCategory.type" = "object"
"definitions.ClipSummary.properties.ancestors.items.$ref" = "#/definitions/AncestorSummary"
"definitions.ClipSummary.properties.ancestors.type" = "array"
"definitions.ClipSummary.properties.available_versions.items.$ref" = "#/definitions/AvailableVersions"
"definitions.ClipSummary.properties.available_versions.type" = "array"
"definitions.ClipSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.ClipSummary.properties.images.type" = "array"
"definitions.ClipSummary.properties.media_type.type" = "string"
"definitions.ClipSummary.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.ClipSummary.properties.pid.type" = "string"
"definitions.ClipSummary.properties.release_date.type" = "string"
"definitions.ClipSummary.properties.short_synopsis.type" = "string"
"definitions.ClipSummary.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.ClipSummary.properties.type.enum.length" = 1
"definitions.ClipSummary.properties.type.enum[0]" = "clip_summary"
"definitions.ClipSummary.properties.type.type" = "string"
"definitions.ClipSummary.required.length" = 10
"definitions.ClipSummary.required[0]" = "ancestors"
"definitions.ClipSummary.required[1]" = "available_versions"
"definitions.ClipSummary.required[2]" = "images"
"definitions.ClipSummary.required[3]" = "media_type"
"definitions.ClipSummary.required[4]" = "network_summary"
"definitions.ClipSummary.required[5]" = "pid"
"definitions.ClipSummary.required[6]" = "release_date"
"definitions.ClipSummary.required[7]" = "short_synopsis"
"definitions.ClipSummary.required[8]" = "titles"
"definitions.ClipSummary.required[9]" = "type"
"definitions.ClipSummary.type" = "object"
"definitions.Contact.properties.handle.type" = "string"
"definitions.Contact.properties.name.type" = "string"
"definitions.Contact.properties.service.type" = "string"
"definitions.Contact.properties.url.type" = "string"
"definitions.Contact.required.length" = 4
"definitions.Contact.required[0]" = "handle"
"definitions.Contact.required[1]" = "name"
"definitions.Contact.required[2]" = "service"
"definitions.Contact.required[3]" = "url"
"definitions.Contact.type" = "object"
"definitions.DateRange.properties.end.type" = "string"
"definitions.DateRange.properties.start.type" = "string"
"definitions.DateRange.required.length" = 2
"definitions.DateRange.required[0]" = "end"
"definitions.DateRange.required[1]" = "start"
"definitions.DateRange.type" = "object"
"definitions.DisplayModule.properties.description.type" = "string"
"definitions.DisplayModule.properties.title.type" = "string"
"definitions.DisplayModule.properties.type.type" = "string"
"definitions.DisplayModule.properties.uri.type" = "string"
"definitions.DisplayModule.type" = "object"
"definitions.Empty.type" = "object"
"definitions.Empty.x-nullable" = true
"definitions.EpisodeSummary.properties.ancestors.items.$ref" = "#/definitions/AncestorSummary"
"definitions.EpisodeSummary.properties.ancestors.type" = "array"
"definitions.EpisodeSummary.properties.available_versions.items.$ref" = "#/definitions/AvailableVersions"
"definitions.EpisodeSummary.properties.available_versions.type" = "array"
"definitions.EpisodeSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.EpisodeSummary.properties.images.type" = "array"
"definitions.EpisodeSummary.properties.media_type.type" = "string"
"definitions.EpisodeSummary.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.EpisodeSummary.properties.pid.type" = "string"
"definitions.EpisodeSummary.properties.release_date.type" = "string"
"definitions.EpisodeSummary.properties.short_synopsis.type" = "string"
"definitions.EpisodeSummary.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.EpisodeSummary.properties.type.enum.length" = 1
"definitions.EpisodeSummary.properties.type.enum[0]" = "episode_summary"
"definitions.EpisodeSummary.properties.type.type" = "string"
"definitions.EpisodeSummary.required.length" = 10
"definitions.EpisodeSummary.required[0]" = "ancestors"
"definitions.EpisodeSummary.required[1]" = "available_versions"
"definitions.EpisodeSummary.required[2]" = "images"
"definitions.EpisodeSummary.required[3]" = "media_type"
"definitions.EpisodeSummary.required[4]" = "network_summary"
"definitions.EpisodeSummary.required[5]" = "pid"
"definitions.EpisodeSummary.required[6]" = "release_date"
"definitions.EpisodeSummary.required[7]" = "short_synopsis"
"definitions.EpisodeSummary.required[8]" = "titles"
"definitions.EpisodeSummary.required[9]" = "type"
"definitions.EpisodeSummary.type" = "object"
"definitions.Error.properties.href.type" = "string"
"definitions.Error.properties.id.type" = "string"
"definitions.Error.properties.message.type" = "string"
"definitions.Error.properties.replied_at.type" = "string"
"definitions.Error.required.length" = 4
"definitions.Error.required[0]" = "href"
"definitions.Error.required[1]" = "id"
"definitions.Error.required[2]" = "message"
"definitions.Error.required[3]" = "replied_at"
"definitions.Error.type" = "object"
"definitions.ErrorResponse.properties.$schema.type" = "string"
"definitions.ErrorResponse.properties.errors.items.$ref" = "#/definitions/Error"
"definitions.ErrorResponse.properties.errors.type" = "array"
"definitions.ErrorResponse.required.length" = 2
"definitions.ErrorResponse.required[0]" = "$schema"
"definitions.ErrorResponse.required[1]" = "errors"
"definitions.ErrorResponse.type" = "object"
"definitions.ExperienceResponse.properties.$schema.type" = "string"
"definitions.ExperienceResponse.properties.data.items.$ref" = "#/definitions/DisplayModule"
"definitions.ExperienceResponse.properties.data.type" = "array"
"definitions.ExperienceResponse.required.length" = 2
"definitions.ExperienceResponse.required[0]" = "$schema"
"definitions.ExperienceResponse.required[1]" = "data"
"definitions.ExperienceResponse.type" = "object"
"definitions.ExternalPartner.properties.type.type" = "string"
"definitions.ExternalPartner.properties.value.type" = "string"
"definitions.ExternalPartner.required.length" = 2
"definitions.ExternalPartner.required[0]" = "type"
"definitions.ExternalPartner.required[1]" = "value"
"definitions.ExternalPartner.type" = "object"
"definitions.Image.properties.id.type" = "string"
"definitions.Image.properties.image_type.type" = "string"
"definitions.Image.properties.template_url.type" = "string"
"definitions.Image.properties.type.type" = "string"
"definitions.Image.required.length" = 4
"definitions.Image.required[0]" = "id"
"definitions.Image.required[1]" = "image_type"
"definitions.Image.required[2]" = "template_url"
"definitions.Image.required[3]" = "type"
"definitions.Image.type" = "object"
"definitions.MetaData.properties.miscellaneous.$ref" = "#/definitions/Miscellaneous"
"definitions.MetaData.properties.origin.$ref" = "#/definitions/Origin"
"definitions.MetaData.properties.programme_type.type" = "string"
"definitions.MetaData.properties.type.type" = "string"
"definitions.MetaData.required.length" = 4
"definitions.MetaData.required[0]" = "miscellaneous"
"definitions.MetaData.required[1]" = "origin"
"definitions.MetaData.required[2]" = "programme_type"
"definitions.MetaData.required[3]" = "type"
"definitions.MetaData.type" = "object"
"definitions.Miscellaneous.properties.title.type" = "string"
"definitions.Miscellaneous.required.length" = 1
"definitions.Miscellaneous.required[0]" = "title"
"definitions.Miscellaneous.type" = "object"
"definitions.MusicExportError.properties.message.type" = "string"
"definitions.MusicExportError.properties.replied_at.type" = "integer"
"definitions.MusicExportError.properties.status.type" = "integer"
"definitions.MusicExportError.required.length" = 3
"definitions.MusicExportError.required[0]" = "message"
"definitions.MusicExportError.required[1]" = "replied_at"
"definitions.MusicExportError.required[2]" = "status"
"definitions.MusicExportError.type" = "object"
"definitions.MusicExportErrorResponse.properties.errors.items.$ref" = "#/definitions/MusicExportError"
"definitions.MusicExportErrorResponse.properties.errors.type" = "array"
"definitions.MusicExportErrorResponse.properties.schema.type" = "string"
"definitions.MusicExportErrorResponse.required.length" = 2
"definitions.MusicExportErrorResponse.required[0]" = "errors"
"definitions.MusicExportErrorResponse.required[1]" = "schema"
"definitions.MusicExportErrorResponse.type" = "object"
"definitions.MusicExportJob.properties.created_at.type" = "string"
"definitions.MusicExportJob.properties.id.type" = "string"
"definitions.MusicExportJob.properties.job_id.type" = "string"
"definitions.MusicExportJob.properties.status.type" = "string"
"definitions.MusicExportJob.properties.vendor.type" = "string"
"definitions.MusicExportJob.required.length" = 5
"definitions.MusicExportJob.required[0]" = "created_at"
"definitions.MusicExportJob.required[1]" = "id"
"definitions.MusicExportJob.required[2]" = "job_id"
"definitions.MusicExportJob.required[3]" = "status"
"definitions.MusicExportJob.required[4]" = "vendor"
"definitions.MusicExportJob.type" = "object"
"definitions.MusicExportPreferences.properties.access_expires_at.type" = "string"
"definitions.MusicExportPreferences.properties.access_token.type" = "string"
"definitions.MusicExportPreferences.properties.add_plus_export.type" = "boolean"
"definitions.MusicExportPreferences.properties.authorization_code.type" = "string"
"definitions.MusicExportPreferences.properties.last_export.type" = "string"
"definitions.MusicExportPreferences.properties.legacy_state.type" = "string"
"definitions.MusicExportPreferences.properties.partner_id.type" = "string"
"definitions.MusicExportPreferences.properties.refresh_token.type" = "string"
"definitions.MusicExportPreferences.properties.terms.type" = "boolean"
"definitions.MusicExportPreferences.properties.vendor.type" = "string"
"definitions.MusicExportPreferences.required.length" = 10
"definitions.MusicExportPreferences.required[0]" = "access_expires_at"
"definitions.MusicExportPreferences.required[1]" = "access_token"
"definitions.MusicExportPreferences.required[2]" = "add_plus_export"
"definitions.MusicExportPreferences.required[3]" = "authorization_code"
"definitions.MusicExportPreferences.required[4]" = "last_export"
"definitions.MusicExportPreferences.required[5]" = "legacy_state"
"definitions.MusicExportPreferences.required[6]" = "partner_id"
"definitions.MusicExportPreferences.required[7]" = "refresh_token"
"definitions.MusicExportPreferences.required[8]" = "terms"
"definitions.MusicExportPreferences.required[9]" = "vendor"
"definitions.MusicExportPreferences.type" = "object"
"definitions.MusicExportPreferencesResponse.properties.method.type" = "string"
"definitions.MusicExportPreferencesResponse.properties.replied_at.type" = "string"
"definitions.MusicExportPreferencesResponse.properties.results.items.$ref" = "#/definitions/MusicExportPreferences"
"definitions.MusicExportPreferencesResponse.properties.results.type" = "array"
"definitions.MusicExportPreferencesResponse.properties.schema.type" = "string"
"definitions.MusicExportPreferencesResponse.properties.total.type" = "integer"
"definitions.MusicExportPreferencesResponse.required.length" = 5
"definitions.MusicExportPreferencesResponse.required[0]" = "method"
"definitions.MusicExportPreferencesResponse.required[1]" = "replied_at"
"definitions.MusicExportPreferencesResponse.required[2]" = "results"
"definitions.MusicExportPreferencesResponse.required[3]" = "schema"
"definitions.MusicExportPreferencesResponse.required[4]" = "total"
"definitions.MusicExportPreferencesResponse.type" = "object"
"definitions.MusicExportSuccess.properties.method.type" = "string"
"definitions.MusicExportSuccess.properties.replied_at.type" = "string"
"definitions.MusicExportSuccess.properties.schema.type" = "string"
"definitions.MusicExportSuccess.required.length" = 3
"definitions.MusicExportSuccess.required[0]" = "method"
"definitions.MusicExportSuccess.required[1]" = "replied_at"
"definitions.MusicExportSuccess.required[2]" = "schema"
"definitions.MusicExportSuccess.type" = "object"
"definitions.MusicPopularityArtist.properties.gid.type" = "string"
"definitions.MusicPopularityArtist.properties.id.type" = "string"
"definitions.MusicPopularityArtist.properties.imagePid.type" = "string"
"definitions.MusicPopularityArtist.properties.name.type" = "string"
"definitions.MusicPopularityArtist.properties.score.type" = "integer"
"definitions.MusicPopularityArtist.properties.sortName.type" = "string"
"definitions.MusicPopularityArtist.required.length" = 6
"definitions.MusicPopularityArtist.required[0]" = "gid"
"definitions.MusicPopularityArtist.required[1]" = "id"
"definitions.MusicPopularityArtist.required[2]" = "imagePid"
"definitions.MusicPopularityArtist.required[3]" = "name"
"definitions.MusicPopularityArtist.required[4]" = "score"
"definitions.MusicPopularityArtist.required[5]" = "sortName"
"definitions.MusicPopularityArtist.type" = "object"
"definitions.MusicPopularityArtists.properties.limit.type" = "integer"
"definitions.MusicPopularityArtists.properties.method.type" = "string"
"definitions.MusicPopularityArtists.properties.offset.type" = "integer"
"definitions.MusicPopularityArtists.properties.repliedAt.type" = "string"
"definitions.MusicPopularityArtists.properties.results.items.$ref" = "#/definitions/MusicPopularityArtist"
"definitions.MusicPopularityArtists.properties.results.type" = "array"
"definitions.MusicPopularityArtists.properties.schema.type" = "string"
"definitions.MusicPopularityArtists.properties.total.type" = "integer"
"definitions.MusicPopularityArtists.required.length" = 5
"definitions.MusicPopularityArtists.required[0]" = "method"
"definitions.MusicPopularityArtists.required[1]" = "repliedAt"
"definitions.MusicPopularityArtists.required[2]" = "results"
"definitions.MusicPopularityArtists.required[3]" = "schema"
"definitions.MusicPopularityArtists.required[4]" = "total"
"definitions.MusicPopularityArtists.type" = "object"
"definitions.MusicPopularityError.properties.errors.items.type" = "string"
"definitions.MusicPopularityError.properties.errors.type" = "array"
"definitions.MusicPopularityError.properties.schema.type" = "string"
"definitions.MusicPopularityError.type" = "object"
"definitions.MusicPopularityPlaylist.properties.categories.items.type" = "string"
"definitions.MusicPopularityPlaylist.properties.categories.type" = "array"
"definitions.MusicPopularityPlaylist.properties.commentsEnabled.type" = "boolean"
"definitions.MusicPopularityPlaylist.properties.description.type" = "string"
"definitions.MusicPopularityPlaylist.properties.externalPartners.items.$ref" = "#/definitions/ExternalPartner"
"definitions.MusicPopularityPlaylist.properties.externalPartners.type" = "array"
"definitions.MusicPopularityPlaylist.properties.genre.type" = "string"
"definitions.MusicPopularityPlaylist.properties.id.type" = "string"
"definitions.MusicPopularityPlaylist.properties.imagePid.type" = "string"
"definitions.MusicPopularityPlaylist.properties.imageUrl.type" = "string"
"definitions.MusicPopularityPlaylist.properties.kind.type" = "string"
"definitions.MusicPopularityPlaylist.properties.mood.type" = "string"
"definitions.MusicPopularityPlaylist.properties.oneOff.type" = "boolean"
"definitions.MusicPopularityPlaylist.properties.playlistPlaybackType.type" = "string"
"definitions.MusicPopularityPlaylist.properties.score.type" = "integer"
"definitions.MusicPopularityPlaylist.properties.serviceId.type" = "string"
"definitions.MusicPopularityPlaylist.properties.title.type" = "string"
"definitions.MusicPopularityPlaylist.properties.updatedAt.type" = "string"
"definitions.MusicPopularityPlaylist.properties.visibility.type" = "string"
"definitions.MusicPopularityPlaylist.properties.wideImagePid.type" = "string"
"definitions.MusicPopularityPlaylist.properties.wideImageUrl.type" = "string"
"definitions.MusicPopularityPlaylist.required.length" = 19
"definitions.MusicPopularityPlaylist.required[0]" = "categories"
"definitions.MusicPopularityPlaylist.required[10]" = "oneOff"
"definitions.MusicPopularityPlaylist.required[11]" = "playlistPlaybackType"
"definitions.MusicPopularityPlaylist.required[12]" = "score"
"definitions.MusicPopularityPlaylist.required[13]" = "serviceId"
"definitions.MusicPopularityPlaylist.required[14]" = "title"
"definitions.MusicPopularityPlaylist.required[15]" = "updatedAt"
"definitions.MusicPopularityPlaylist.required[16]" = "visibility"
"definitions.MusicPopularityPlaylist.required[17]" = "wideImagePid"
"definitions.MusicPopularityPlaylist.required[18]" = "wideImageUrl"
"definitions.MusicPopularityPlaylist.required[1]" = "commentsEnabled"
"definitions.MusicPopularityPlaylist.required[2]" = "description"
"definitions.MusicPopularityPlaylist.required[3]" = "externalPartners"
"definitions.MusicPopularityPlaylist.required[4]" = "genre"
"definitions.MusicPopularityPlaylist.required[5]" = "id"
"definitions.MusicPopularityPlaylist.required[6]" = "imagePid"
"definitions.MusicPopularityPlaylist.required[7]" = "imageUrl"
"definitions.MusicPopularityPlaylist.required[8]" = "kind"
"definitions.MusicPopularityPlaylist.required[9]" = "mood"
"definitions.MusicPopularityPlaylist.type" = "object"
"definitions.MusicPopularityPlaylists.properties.limit.type" = "integer"
"definitions.MusicPopularityPlaylists.properties.method.type" = "string"
"definitions.MusicPopularityPlaylists.properties.offset.type" = "integer"
"definitions.MusicPopularityPlaylists.properties.repliedAt.type" = "string"
"definitions.MusicPopularityPlaylists.properties.results.items.$ref" = "#/definitions/MusicPopularityPlaylist"
"definitions.MusicPopularityPlaylists.properties.results.type" = "array"
"definitions.MusicPopularityPlaylists.properties.schema.type" = "string"
"definitions.MusicPopularityPlaylists.properties.total.type" = "integer"
"definitions.MusicPopularityPlaylists.required.length" = 5
"definitions.MusicPopularityPlaylists.required[0]" = "method"
"definitions.MusicPopularityPlaylists.required[1]" = "repliedAt"
"definitions.MusicPopularityPlaylists.required[2]" = "results"
"definitions.MusicPopularityPlaylists.required[3]" = "schema"
"definitions.MusicPopularityPlaylists.required[4]" = "total"
"definitions.MusicPopularityPlaylists.type" = "object"
"definitions.MusicPopularityTrack.properties.album.type" = "string"
"definitions.MusicPopularityTrack.properties.artistGid.type" = "string"
"definitions.MusicPopularityTrack.properties.artistName.type" = "string"
"definitions.MusicPopularityTrack.properties.artists.items.$ref" = "#/definitions/MusicTrackArtist"
"definitions.MusicPopularityTrack.properties.artists.type" = "array"
"definitions.MusicPopularityTrack.properties.baseTitle.type" = "string"
"definitions.MusicPopularityTrack.properties.classical.type" = "boolean"
"definitions.MusicPopularityTrack.properties.id.type" = "string"
"definitions.MusicPopularityTrack.properties.mergedIds.items.type" = "string"
"definitions.MusicPopularityTrack.properties.mergedIds.type" = "array"
"definitions.MusicPopularityTrack.properties.preferredMultiplayRecordAudio.$ref" = "#/definitions/MusicRecordAudio"
"definitions.MusicPopularityTrack.properties.preferredRecordAudio.$ref" = "#/definitions/MusicRecordAudio"
"definitions.MusicPopularityTrack.properties.radioEdit.type" = "boolean"
"definitions.MusicPopularityTrack.properties.recordAudio.items.$ref" = "#/definitions/MusicRecordAudio"
"definitions.MusicPopularityTrack.properties.recordAudio.type" = "array"
"definitions.MusicPopularityTrack.properties.recordImageHref.type" = "string"
"definitions.MusicPopularityTrack.properties.recordImagePid.type" = "string"
"definitions.MusicPopularityTrack.properties.score.type" = "integer"
"definitions.MusicPopularityTrack.properties.title.type" = "string"
"definitions.MusicPopularityTrack.properties.type.type" = "string"
"definitions.MusicPopularityTrack.required.length" = 2
"definitions.MusicPopularityTrack.required[0]" = "id"
"definitions.MusicPopularityTrack.required[1]" = "score"
"definitions.MusicPopularityTrack.type" = "object"
"definitions.MusicPopularityTracks.properties.limit.type" = "integer"
"definitions.MusicPopularityTracks.properties.method.type" = "string"
"definitions.MusicPopularityTracks.properties.offset.type" = "integer"
"definitions.MusicPopularityTracks.properties.repliedAt.type" = "string"
"definitions.MusicPopularityTracks.properties.results.items.$ref" = "#/definitions/MusicPopularityTrack"
"definitions.MusicPopularityTracks.properties.results.type" = "array"
"definitions.MusicPopularityTracks.properties.schema.type" = "string"
"definitions.MusicPopularityTracks.properties.total.type" = "integer"
"definitions.MusicPopularityTracks.required.length" = 5
"definitions.MusicPopularityTracks.required[0]" = "method"
"definitions.MusicPopularityTracks.required[1]" = "repliedAt"
"definitions.MusicPopularityTracks.required[2]" = "results"
"definitions.MusicPopularityTracks.required[3]" = "schema"
"definitions.MusicPopularityTracks.required[4]" = "total"
"definitions.MusicPopularityTracks.type" = "object"
"definitions.MusicRecordAudio.properties.audioType.type" = "string"
"definitions.MusicRecordAudio.properties.duration.type" = "integer"
"definitions.MusicRecordAudio.properties.identifier.type" = "string"
"definitions.MusicRecordAudio.properties.resourceType.type" = "string"
"definitions.MusicRecordAudio.required.length" = 4
"definitions.MusicRecordAudio.required[0]" = "audioType"
"definitions.MusicRecordAudio.required[1]" = "duration"
"definitions.MusicRecordAudio.required[2]" = "identifier"
"definitions.MusicRecordAudio.required[3]" = "resourceType"
"definitions.MusicRecordAudio.type" = "object"
"definitions.MusicTrackArtist.properties.gid.type" = "string"
"definitions.MusicTrackArtist.properties.imagePid.type" = "string"
"definitions.MusicTrackArtist.properties.name.type" = "string"
"definitions.MusicTrackArtist.properties.role.type" = "string"
"definitions.MusicTrackArtist.properties.sortName.type" = "string"
"definitions.MusicTrackArtist.required.length" = 5
"definitions.MusicTrackArtist.required[0]" = "gid"
"definitions.MusicTrackArtist.required[1]" = "imagePid"
"definitions.MusicTrackArtist.required[2]" = "name"
"definitions.MusicTrackArtist.required[3]" = "role"
"definitions.MusicTrackArtist.required[4]" = "sortName"
"definitions.MusicTrackArtist.type" = "object"
"definitions.Network.properties.active.type" = "boolean"
"definitions.Network.properties.contacts.items.$ref" = "#/definitions/Contact"
"definitions.Network.properties.contacts.type" = "array"
"definitions.Network.properties.date_ranges.items.$ref" = "#/definitions/DateRange"
"definitions.Network.properties.date_ranges.type" = "array"
"definitions.Network.properties.group.type" = "string"
"definitions.Network.properties.id.type" = "string"
"definitions.Network.properties.international.type" = "boolean"
"definitions.Network.properties.key.type" = "string"
"definitions.Network.properties.preset.type" = "boolean"
"definitions.Network.properties.promoted_category_summaries.items.$ref" = "#/definitions/CategorySummary"
"definitions.Network.properties.promoted_category_summaries.type" = "array"
"definitions.Network.properties.services.items.$ref" = "#/definitions/Service"
"definitions.Network.properties.services.type" = "array"
"definitions.Network.properties.short_title.type" = "string"
"definitions.Network.properties.sort.type" = "integer"
"definitions.Network.properties.title.type" = "string"
"definitions.Network.properties.type.type" = "string"
"definitions.Network.required.length" = 13
"definitions.Network.required[0]" = "active"
"definitions.Network.required[10]" = "sort"
"definitions.Network.required[11]" = "title"
"definitions.Network.required[12]" = "type"
"definitions.Network.required[1]" = "contacts"
"definitions.Network.required[2]" = "date_ranges"
"definitions.Network.required[3]" = "group"
"definitions.Network.required[4]" = "id"
"definitions.Network.required[5]" = "international"
"definitions.Network.required[6]" = "key"
"definitions.Network.required[7]" = "preset"
"definitions.Network.required[8]" = "services"
"definitions.Network.required[9]" = "short_title"
"definitions.Network.type" = "object"
"definitions.NetworkSummary.properties.active.type" = "boolean"
"definitions.NetworkSummary.properties.group.type" = "string"
"definitions.NetworkSummary.properties.id.type" = "string"
"definitions.NetworkSummary.properties.key.type" = "string"
"definitions.NetworkSummary.properties.titles.$ref" = "#/definitions/NetworkTitles"
"definitions.NetworkSummary.properties.type.type" = "string"
"definitions.NetworkSummary.required.length" = 6
"definitions.NetworkSummary.required[0]" = "active"
"definitions.NetworkSummary.required[1]" = "group"
"definitions.NetworkSummary.required[2]" = "id"
"definitions.NetworkSummary.required[3]" = "key"
"definitions.NetworkSummary.required[4]" = "titles"
"definitions.NetworkSummary.required[5]" = "type"
"definitions.NetworkSummary.type" = "object"
"definitions.NetworkTitles.properties.long_title.type" = "string"
"definitions.NetworkTitles.properties.short_title.type" = "string"
"definitions.NetworkTitles.properties.type.type" = "string"
"definitions.NetworkTitles.required.length" = 3
"definitions.NetworkTitles.required[0]" = "long_title"
"definitions.NetworkTitles.required[1]" = "short_title"
"definitions.NetworkTitles.required[2]" = "type"
"definitions.NetworkTitles.type" = "object"
"definitions.NetworksResponse.properties.$schema.type" = "string"
"definitions.NetworksResponse.properties.limit.type" = "integer"
"definitions.NetworksResponse.properties.offset.type" = "integer"
"definitions.NetworksResponse.properties.results.items.$ref" = "#/definitions/Network"
"definitions.NetworksResponse.properties.results.type" = "array"
"definitions.NetworksResponse.properties.total.type" = "integer"
"definitions.NetworksResponse.required.length" = 5
"definitions.NetworksResponse.required[0]" = "$schema"
"definitions.NetworksResponse.required[1]" = "limit"
"definitions.NetworksResponse.required[2]" = "offset"
"definitions.NetworksResponse.required[3]" = "results"
"definitions.NetworksResponse.required[4]" = "total"
"definitions.NetworksResponse.type" = "object"
"definitions.Origin.properties.type.type" = "string"
"definitions.Origin.required.length" = 1
"definitions.Origin.required[0]" = "type"
"definitions.Origin.type" = "object"
"definitions.PersonalisedCategories.properties.created.type" = "string"
"definitions.PersonalisedCategories.properties.type.type" = "string"
"definitions.PersonalisedCategories.required.length" = 2
"definitions.PersonalisedCategories.required[0]" = "created"
"definitions.PersonalisedCategories.required[1]" = "type"
"definitions.PersonalisedCategories.type" = "object"
"definitions.PersonalisedCategoriesResponse.properties.$schema.type" = "string"
"definitions.PersonalisedCategoriesResponse.properties.limit.type" = "integer"
"definitions.PersonalisedCategoriesResponse.properties.offset.type" = "integer"
"definitions.PersonalisedCategoriesResponse.properties.total.type" = "integer"
"definitions.PersonalisedCategoriesResponse.required.length" = 4
"definitions.PersonalisedCategoriesResponse.required[0]" = "$schema"
"definitions.PersonalisedCategoriesResponse.required[1]" = "limit"
"definitions.PersonalisedCategoriesResponse.required[2]" = "offset"
"definitions.PersonalisedCategoriesResponse.required[3]" = "total"
"definitions.PersonalisedCategoriesResponse.type" = "object"
"definitions.PersonalisedMusicActivity.properties.action.type" = "string"
"definitions.PersonalisedMusicActivity.properties.activity.type" = "string"
"definitions.PersonalisedMusicActivity.properties.added_at.type" = "string"
"definitions.PersonalisedMusicActivity.properties.data.items.$ref" = "#/definitions/PersonalisedMusicData"
"definitions.PersonalisedMusicActivity.properties.data.type" = "array"
"definitions.PersonalisedMusicActivity.properties.domain.type" = "string"
"definitions.PersonalisedMusicActivity.properties.id.type" = "string"
"definitions.PersonalisedMusicActivity.properties.meta_data.$ref" = "#/definitions/PersonalisedMusicMetaData"
"definitions.PersonalisedMusicActivity.properties.type.type" = "string"
"definitions.PersonalisedMusicActivity.properties.urn.type" = "string"
"definitions.PersonalisedMusicActivity.required.length" = 9
"definitions.PersonalisedMusicActivity.required[0]" = "action"
"definitions.PersonalisedMusicActivity.required[1]" = "activity"
"definitions.PersonalisedMusicActivity.required[2]" = "added_at"
"definitions.PersonalisedMusicActivity.required[3]" = "data"
"definitions.PersonalisedMusicActivity.required[4]" = "domain"
"definitions.PersonalisedMusicActivity.required[5]" = "id"
"definitions.PersonalisedMusicActivity.required[6]" = "meta_data"
"definitions.PersonalisedMusicActivity.required[7]" = "type"
"definitions.PersonalisedMusicActivity.required[8]" = "urn"
"definitions.PersonalisedMusicActivity.type" = "object"
"definitions.PersonalisedMusicArtist.properties.id.type" = "string"
"definitions.PersonalisedMusicArtist.properties.images.items.$ref" = "#/definitions/PersonalisedMusicImage"
"definitions.PersonalisedMusicArtist.properties.images.type" = "array"
"definitions.PersonalisedMusicArtist.properties.name.type" = "string"
"definitions.PersonalisedMusicArtist.properties.role.type" = "string"
"definitions.PersonalisedMusicArtist.type" = "object"
"definitions.PersonalisedMusicBatchRequest.properties.action.type" = "string"
"definitions.PersonalisedMusicBatchRequest.properties.added_at.type" = "string"
"definitions.PersonalisedMusicBatchRequest.properties.context.type" = "string"
"definitions.PersonalisedMusicBatchRequest.properties.domain.type" = "string"
"definitions.PersonalisedMusicBatchRequest.properties.id.type" = "string"
"definitions.PersonalisedMusicBatchRequest.properties.meta_data.$ref" = "#/definitions/PersonalisedMusicMetaData"
"definitions.PersonalisedMusicBatchRequest.properties.type.type" = "string"
"definitions.PersonalisedMusicBatchRequest.required.length" = 4
"definitions.PersonalisedMusicBatchRequest.required[0]" = "action"
"definitions.PersonalisedMusicBatchRequest.required[1]" = "domain"
"definitions.PersonalisedMusicBatchRequest.required[2]" = "id"
"definitions.PersonalisedMusicBatchRequest.required[3]" = "type"
"definitions.PersonalisedMusicBatchRequest.type" = "object"
"definitions.PersonalisedMusicClip.properties.contributors.items.type" = "string"
"definitions.PersonalisedMusicClip.properties.contributors.type" = "array"
"definitions.PersonalisedMusicClip.properties.endDate.type" = "string"
"definitions.PersonalisedMusicClip.properties.entityType.type" = "string"
"definitions.PersonalisedMusicClip.properties.imageUrl.type" = "string"
"definitions.PersonalisedMusicClip.properties.masterbrandMid.type" = "string"
"definitions.PersonalisedMusicClip.properties.mediaType.type" = "string"
"definitions.PersonalisedMusicClip.properties.parentProgramme.$ref" = "#/definitions/PersonalisedMusicClipParentProgramme"
"definitions.PersonalisedMusicClip.properties.pid.type" = "string"
"definitions.PersonalisedMusicClip.properties.startDate.type" = "string"
"definitions.PersonalisedMusicClip.properties.synopsis.type" = "string"
"definitions.PersonalisedMusicClip.properties.title.type" = "string"
"definitions.PersonalisedMusicClip.properties.version.$ref" = "#/definitions/PersonalisedMusicVersion"
"definitions.PersonalisedMusicClip.type" = "object"
"definitions.PersonalisedMusicClipParentProgramme.properties.entityType.type" = "string"
"definitions.PersonalisedMusicClipParentProgramme.properties.pid.type" = "string"
"definitions.PersonalisedMusicClipParentProgramme.properties.title.type" = "string"
"definitions.PersonalisedMusicClipParentProgramme.type" = "object"
"definitions.PersonalisedMusicData.properties.artist.$ref" = "#/definitions/PersonalisedMusicArtist"
"definitions.PersonalisedMusicData.properties.clip.$ref" = "#/definitions/PersonalisedMusicClip"
"definitions.PersonalisedMusicData.properties.genre.$ref" = "#/definitions/PersonalisedMusicGenre"
"definitions.PersonalisedMusicData.properties.playlist.$ref" = "#/definitions/PersonalisedMusicPlaylist"
"definitions.PersonalisedMusicData.properties.service.$ref" = "#/definitions/PersonalisedMusicService"
"definitions.PersonalisedMusicData.properties.track.$ref" = "#/definitions/PersonalisedMusicTrack"
"definitions.PersonalisedMusicData.type" = "object"
"definitions.PersonalisedMusicError.properties.message.type" = "string"
"definitions.PersonalisedMusicError.properties.replied_at.type" = "integer"
"definitions.PersonalisedMusicError.properties.status.type" = "integer"
"definitions.PersonalisedMusicError.required.length" = 3
"definitions.PersonalisedMusicError.required[0]" = "message"
"definitions.PersonalisedMusicError.required[1]" = "replied_at"
"definitions.PersonalisedMusicError.required[2]" = "status"
"definitions.PersonalisedMusicError.type" = "object"
"definitions.PersonalisedMusicErrorResponse.properties.errors.items.$ref" = "#/definitions/PersonalisedMusicError"
"definitions.PersonalisedMusicErrorResponse.properties.errors.type" = "array"
"definitions.PersonalisedMusicErrorResponse.properties.schema.type" = "string"
"definitions.PersonalisedMusicErrorResponse.required.length" = 2
"definitions.PersonalisedMusicErrorResponse.required[0]" = "errors"
"definitions.PersonalisedMusicErrorResponse.required[1]" = "schema"
"definitions.PersonalisedMusicErrorResponse.type" = "object"
"definitions.PersonalisedMusicGenre.properties.id.type" = "string"
"definitions.PersonalisedMusicGenre.properties.key.type" = "string"
"definitions.PersonalisedMusicGenre.properties.title.type" = "string"
"definitions.PersonalisedMusicGenre.properties.type.type" = "string"
"definitions.PersonalisedMusicGenre.type" = "object"
"definitions.PersonalisedMusicImage.properties.format.type" = "string"
"definitions.PersonalisedMusicImage.properties.id.type" = "string"
"definitions.PersonalisedMusicImage.properties.type.type" = "string"
"definitions.PersonalisedMusicImage.type" = "object"
"definitions.PersonalisedMusicMetaData.properties.key.type" = "string"
"definitions.PersonalisedMusicMetaData.required.length" = 1
"definitions.PersonalisedMusicMetaData.required[0]" = "key"
"definitions.PersonalisedMusicMetaData.type" = "object"
"definitions.PersonalisedMusicPlaylist.properties.description.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.images.items.$ref" = "#/definitions/PersonalisedMusicImage"
"definitions.PersonalisedMusicPlaylist.properties.images.type" = "array"
"definitions.PersonalisedMusicPlaylist.properties.playback_type.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.service_id.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.title.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.tracks.$ref" = "#/definitions/PersonalisedMusicTrack"
"definitions.PersonalisedMusicPlaylist.properties.type.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.updated_at.type" = "string"
"definitions.PersonalisedMusicPlaylist.properties.version.$ref" = "#/definitions/PersonalisedMusicPlaylistVersion"
"definitions.PersonalisedMusicPlaylist.type" = "object"
"definitions.PersonalisedMusicPlaylistVersion.properties.duration.type" = "string"
"definitions.PersonalisedMusicPlaylistVersion.properties.expires_at.type" = "string"
"definitions.PersonalisedMusicPlaylistVersion.properties.id.type" = "string"
"definitions.PersonalisedMusicPlaylistVersion.properties.starts_at.type" = "string"
"definitions.PersonalisedMusicPlaylistVersion.properties.warnings.items.type" = "string"
"definitions.PersonalisedMusicPlaylistVersion.properties.warnings.type" = "array"
"definitions.PersonalisedMusicPlaylistVersion.required.length" = 1
"definitions.PersonalisedMusicPlaylistVersion.required[0]" = "warnings"
"definitions.PersonalisedMusicPlaylistVersion.type" = "object"
"definitions.PersonalisedMusicRequest.properties.action.type" = "string"
"definitions.PersonalisedMusicRequest.properties.added_at.type" = "string"
"definitions.PersonalisedMusicRequest.properties.context.type" = "string"
"definitions.PersonalisedMusicRequest.properties.meta_data.$ref" = "#/definitions/PersonalisedMusicMetaData"
"definitions.PersonalisedMusicRequest.required.length" = 1
"definitions.PersonalisedMusicRequest.required[0]" = "action"
"definitions.PersonalisedMusicRequest.type" = "object"
"definitions.PersonalisedMusicResponse.properties.limit.type" = "integer"
"definitions.PersonalisedMusicResponse.properties.method.type" = "string"
"definitions.PersonalisedMusicResponse.properties.offset.type" = "integer"
"definitions.PersonalisedMusicResponse.properties.replied_at.type" = "string"
"definitions.PersonalisedMusicResponse.properties.results.items.$ref" = "#/definitions/PersonalisedMusicActivity"
"definitions.PersonalisedMusicResponse.properties.results.type" = "array"
"definitions.PersonalisedMusicResponse.properties.schema.type" = "string"
"definitions.PersonalisedMusicResponse.properties.total.type" = "integer"
"definitions.PersonalisedMusicResponse.required.length" = 7
"definitions.PersonalisedMusicResponse.required[0]" = "limit"
"definitions.PersonalisedMusicResponse.required[1]" = "method"
"definitions.PersonalisedMusicResponse.required[2]" = "offset"
"definitions.PersonalisedMusicResponse.required[3]" = "replied_at"
"definitions.PersonalisedMusicResponse.required[4]" = "results"
"definitions.PersonalisedMusicResponse.required[5]" = "schema"
"definitions.PersonalisedMusicResponse.required[6]" = "total"
"definitions.PersonalisedMusicResponse.type" = "object"
"definitions.PersonalisedMusicService.properties.id.type" = "string"
"definitions.PersonalisedMusicService.properties.key.type" = "string"
"definitions.PersonalisedMusicService.properties.title.type" = "string"
"definitions.PersonalisedMusicService.properties.type.type" = "string"
"definitions.PersonalisedMusicService.type" = "object"
"definitions.PersonalisedMusicSuccess.properties.method.type" = "string"
"definitions.PersonalisedMusicSuccess.properties.replied_at.type" = "string"
"definitions.PersonalisedMusicSuccess.properties.schema.type" = "string"
"definitions.PersonalisedMusicSuccess.required.length" = 3
"definitions.PersonalisedMusicSuccess.required[0]" = "method"
"definitions.PersonalisedMusicSuccess.required[1]" = "replied_at"
"definitions.PersonalisedMusicSuccess.required[2]" = "schema"
"definitions.PersonalisedMusicSuccess.type" = "object"
"definitions.PersonalisedMusicTrack.properties.contributions.items.$ref" = "#/definitions/PersonalisedMusicTrackContribution"
"definitions.PersonalisedMusicTrack.properties.contributions.type" = "array"
"definitions.PersonalisedMusicTrack.properties.id.type" = "string"
"definitions.PersonalisedMusicTrack.properties.images.items.$ref" = "#/definitions/PersonalisedMusicTrackImage"
"definitions.PersonalisedMusicTrack.properties.images.type" = "array"
"definitions.PersonalisedMusicTrack.properties.media.items.$ref" = "#/definitions/PersonalisedMusicTrackMedia"
"definitions.PersonalisedMusicTrack.properties.media.type" = "array"
"definitions.PersonalisedMusicTrack.properties.title.type" = "string"
"definitions.PersonalisedMusicTrack.properties.type.type" = "string"
"definitions.PersonalisedMusicTrack.properties.version.$ref" = "#/definitions/PersonalisedMusicVersion"
"definitions.PersonalisedMusicTrack.required.length" = 7
"definitions.PersonalisedMusicTrack.required[0]" = "contributions"
"definitions.PersonalisedMusicTrack.required[1]" = "id"
"definitions.PersonalisedMusicTrack.required[2]" = "images"
"definitions.PersonalisedMusicTrack.required[3]" = "media"
"definitions.PersonalisedMusicTrack.required[4]" = "title"
"definitions.PersonalisedMusicTrack.required[5]" = "type"
"definitions.PersonalisedMusicTrack.required[6]" = "version"
"definitions.PersonalisedMusicTrack.type" = "object"
"definitions.PersonalisedMusicTrackContribution.properties.id.type" = "string"
"definitions.PersonalisedMusicTrackContribution.properties.images.items.$ref" = "#/definitions/PersonalisedMusicTrackImage"
"definitions.PersonalisedMusicTrackContribution.properties.images.type" = "array"
"definitions.PersonalisedMusicTrackContribution.properties.name.type" = "string"
"definitions.PersonalisedMusicTrackContribution.properties.role.type" = "string"
"definitions.PersonalisedMusicTrackContribution.required.length" = 4
"definitions.PersonalisedMusicTrackContribution.required[0]" = "id"
"definitions.PersonalisedMusicTrackContribution.required[1]" = "images"
"definitions.PersonalisedMusicTrackContribution.required[2]" = "name"
"definitions.PersonalisedMusicTrackContribution.required[3]" = "role"
"definitions.PersonalisedMusicTrackContribution.type" = "object"
"definitions.PersonalisedMusicTrackImage.properties.format.type" = "string"
"definitions.PersonalisedMusicTrackImage.properties.id.type" = "string"
"definitions.PersonalisedMusicTrackImage.properties.type.type" = "string"
"definitions.PersonalisedMusicTrackImage.required.length" = 3
"definitions.PersonalisedMusicTrackImage.required[0]" = "format"
"definitions.PersonalisedMusicTrackImage.required[1]" = "id"
"definitions.PersonalisedMusicTrackImage.required[2]" = "type"
"definitions.PersonalisedMusicTrackImage.type" = "object"
"definitions.PersonalisedMusicTrackMedia.properties.duration.type" = "integer"
"definitions.PersonalisedMusicTrackMedia.properties.format.type" = "string"
"definitions.PersonalisedMusicTrackMedia.properties.id.type" = "string"
"definitions.PersonalisedMusicTrackMedia.properties.scope.type" = "string"
"definitions.PersonalisedMusicTrackMedia.properties.source.type" = "string"
"definitions.PersonalisedMusicTrackMedia.properties.type.type" = "string"
"definitions.PersonalisedMusicTrackMedia.required.length" = 6
"definitions.PersonalisedMusicTrackMedia.required[0]" = "duration"
"definitions.PersonalisedMusicTrackMedia.required[1]" = "format"
"definitions.PersonalisedMusicTrackMedia.required[2]" = "id"
"definitions.PersonalisedMusicTrackMedia.required[3]" = "scope"
"definitions.PersonalisedMusicTrackMedia.required[4]" = "source"
"definitions.PersonalisedMusicTrackMedia.required[5]" = "type"
"definitions.PersonalisedMusicTrackMedia.type" = "object"
"definitions.PersonalisedMusicVersion.properties.classical.type" = "boolean"
"definitions.PersonalisedMusicVersion.properties.duration.type" = "string"
"definitions.PersonalisedMusicVersion.properties.radio.type" = "boolean"
"definitions.PersonalisedMusicVersion.properties.vpid.type" = "string"
"definitions.PersonalisedMusicVersion.type" = "object"
"definitions.PersonalisedNetworks.properties.created.type" = "string"
"definitions.PersonalisedNetworks.properties.type.type" = "string"
"definitions.PersonalisedNetworks.required.length" = 2
"definitions.PersonalisedNetworks.required[0]" = "created"
"definitions.PersonalisedNetworks.required[1]" = "type"
"definitions.PersonalisedNetworks.type" = "object"
"definitions.PersonalisedNetworksResponse.properties.$schema.type" = "string"
"definitions.PersonalisedNetworksResponse.properties.limit.type" = "integer"
"definitions.PersonalisedNetworksResponse.properties.offset.type" = "integer"
"definitions.PersonalisedNetworksResponse.properties.results.items.$ref" = "#/definitions/PersonalisedNetworks"
"definitions.PersonalisedNetworksResponse.properties.results.type" = "array"
"definitions.PersonalisedNetworksResponse.properties.total.type" = "integer"
"definitions.PersonalisedNetworksResponse.required.length" = 5
"definitions.PersonalisedNetworksResponse.required[0]" = "$schema"
"definitions.PersonalisedNetworksResponse.required[1]" = "limit"
"definitions.PersonalisedNetworksResponse.required[2]" = "offset"
"definitions.PersonalisedNetworksResponse.required[3]" = "results"
"definitions.PersonalisedNetworksResponse.required[4]" = "total"
"definitions.PersonalisedNetworksResponse.type" = "object"
"definitions.PersonalisedRadioActivity.properties.action.type" = "string"
"definitions.PersonalisedRadioActivity.properties.activity.type" = "string"
"definitions.PersonalisedRadioActivity.properties.added_at.type" = "string"
"definitions.PersonalisedRadioActivity.properties.data.$ref" = "#/definitions/ProgrammeSummary"
"definitions.PersonalisedRadioActivity.properties.domain.type" = "string"
"definitions.PersonalisedRadioActivity.properties.id.type" = "string"
"definitions.PersonalisedRadioActivity.properties.metadata.$ref" = "#/definitions/MetaData"
"definitions.PersonalisedRadioActivity.properties.type.type" = "string"
"definitions.PersonalisedRadioActivity.properties.uas_type.type" = "string"
"definitions.PersonalisedRadioActivity.properties.urn.type" = "string"
"definitions.PersonalisedRadioActivity.required.length" = 10
"definitions.PersonalisedRadioActivity.required[0]" = "action"
"definitions.PersonalisedRadioActivity.required[1]" = "activity"
"definitions.PersonalisedRadioActivity.required[2]" = "added_at"
"definitions.PersonalisedRadioActivity.required[3]" = "data"
"definitions.PersonalisedRadioActivity.required[4]" = "domain"
"definitions.PersonalisedRadioActivity.required[5]" = "id"
"definitions.PersonalisedRadioActivity.required[6]" = "metadata"
"definitions.PersonalisedRadioActivity.required[7]" = "type"
"definitions.PersonalisedRadioActivity.required[8]" = "uas_type"
"definitions.PersonalisedRadioActivity.required[9]" = "urn"
"definitions.PersonalisedRadioActivity.type" = "object"
"definitions.PersonalisedRadioBatchRequest.properties.action.type" = "string"
"definitions.PersonalisedRadioBatchRequest.properties.added_at.type" = "string"
"definitions.PersonalisedRadioBatchRequest.properties.context.type" = "string"
"definitions.PersonalisedRadioBatchRequest.properties.id.type" = "string"
"definitions.PersonalisedRadioBatchRequest.properties.metadata.$ref" = "#/definitions/PersonalisedRadioMetaData"
"definitions.PersonalisedRadioBatchRequest.properties.type.type" = "string"
"definitions.PersonalisedRadioBatchRequest.required.length" = 1
"definitions.PersonalisedRadioBatchRequest.required[0]" = "action"
"definitions.PersonalisedRadioBatchRequest.type" = "object"
"definitions.PersonalisedRadioErrorResponse.properties.$schema.type" = "string"
"definitions.PersonalisedRadioErrorResponse.properties.errors.items.$ref" = "#/definitions/PersonalisedRadioErrorResponse_errors"
"definitions.PersonalisedRadioErrorResponse.properties.errors.type" = "array"
"definitions.PersonalisedRadioErrorResponse.required.length" = 2
"definitions.PersonalisedRadioErrorResponse.required[0]" = "$schema"
"definitions.PersonalisedRadioErrorResponse.required[1]" = "errors"
"definitions.PersonalisedRadioErrorResponse.type" = "object"
"definitions.PersonalisedRadioErrorResponse_errors.properties.code.type" = "string"
"definitions.PersonalisedRadioErrorResponse_errors.properties.detail.type" = "string"
"definitions.PersonalisedRadioErrorResponse_errors.properties.href.type" = "string"
"definitions.PersonalisedRadioErrorResponse_errors.properties.id.type" = "string"
"definitions.PersonalisedRadioErrorResponse_errors.properties.status.type" = "integer"
"definitions.PersonalisedRadioErrorResponse_errors.properties.timestamp.type" = "integer"
"definitions.PersonalisedRadioErrorResponse_errors.properties.title.type" = "string"
"definitions.PersonalisedRadioErrorResponse_errors.required.length" = 7
"definitions.PersonalisedRadioErrorResponse_errors.required[0]" = "code"
"definitions.PersonalisedRadioErrorResponse_errors.required[1]" = "detail"
"definitions.PersonalisedRadioErrorResponse_errors.required[2]" = "href"
"definitions.PersonalisedRadioErrorResponse_errors.required[3]" = "id"
"definitions.PersonalisedRadioErrorResponse_errors.required[4]" = "status"
"definitions.PersonalisedRadioErrorResponse_errors.required[5]" = "timestamp"
"definitions.PersonalisedRadioErrorResponse_errors.required[6]" = "title"
"definitions.PersonalisedRadioMetaData.properties.key.type" = "string"
"definitions.PersonalisedRadioMetaData.required.length" = 1
"definitions.PersonalisedRadioMetaData.required[0]" = "key"
"definitions.PersonalisedRadioMetaData.type" = "object"
"definitions.PersonalisedRadioRequest.properties.action.type" = "string"
"definitions.PersonalisedRadioRequest.properties.added_at.type" = "string"
"definitions.PersonalisedRadioRequest.properties.context.type" = "string"
"definitions.PersonalisedRadioRequest.properties.metadata.$ref" = "#/definitions/PersonalisedRadioMetaData"
"definitions.PersonalisedRadioRequest.required.length" = 1
"definitions.PersonalisedRadioRequest.required[0]" = "action"
"definitions.PersonalisedRadioRequest.type" = "object"
"definitions.PersonalisedRadioResponse.properties.$schema.type" = "string"
"definitions.PersonalisedRadioResponse.properties.limit.type" = "integer"
"definitions.PersonalisedRadioResponse.properties.method.type" = "string"
"definitions.PersonalisedRadioResponse.properties.offset.type" = "integer"
"definitions.PersonalisedRadioResponse.properties.replied_at.type" = "string"
"definitions.PersonalisedRadioResponse.properties.results.items.$ref" = "#/definitions/PersonalisedRadioActivity"
"definitions.PersonalisedRadioResponse.properties.results.type" = "array"
"definitions.PersonalisedRadioResponse.properties.total.type" = "integer"
"definitions.PersonalisedRadioResponse.required.length" = 7
"definitions.PersonalisedRadioResponse.required[0]" = "$schema"
"definitions.PersonalisedRadioResponse.required[1]" = "limit"
"definitions.PersonalisedRadioResponse.required[2]" = "method"
"definitions.PersonalisedRadioResponse.required[3]" = "offset"
"definitions.PersonalisedRadioResponse.required[4]" = "replied_at"
"definitions.PersonalisedRadioResponse.required[5]" = "results"
"definitions.PersonalisedRadioResponse.required[6]" = "total"
"definitions.PersonalisedRadioResponse.type" = "object"
"definitions.PersonalisedRadioSuccessResponse.properties.$schema.type" = "string"
"definitions.PersonalisedRadioSuccessResponse.properties.method.type" = "string"
"definitions.PersonalisedRadioSuccessResponse.properties.replied_at.type" = "string"
"definitions.PersonalisedRadioSuccessResponse.required.length" = 3
"definitions.PersonalisedRadioSuccessResponse.required[0]" = "$schema"
"definitions.PersonalisedRadioSuccessResponse.required[1]" = "method"
"definitions.PersonalisedRadioSuccessResponse.required[2]" = "replied_at"
"definitions.PersonalisedRadioSuccessResponse.type" = "object"
"definitions.PlayableItem.properties.description.type" = "string"
"definitions.PlayableItem.properties.image_url.type" = "string"
"definitions.PlayableItem.properties.pid.type" = "string"
"definitions.PlayableItem.properties.title.type" = "string"
"definitions.PlayableItem.properties.type.type" = "string"
"definitions.PlayableItem.properties.version_pid.type" = "string"
"definitions.PlayableItem.type" = "object"
"definitions.PlayspaceContainer.properties.id.type" = "string"
"definitions.PlayspaceContainer.properties.members.items.$ref" = "#/definitions/PlayableItem"
"definitions.PlayspaceContainer.properties.members.type" = "array"
"definitions.PlayspaceContainer.properties.title.type" = "string"
"definitions.PlayspaceContainer.properties.type.type" = "string"
"definitions.PlayspaceContainer.type" = "object"
"definitions.Podcast.properties.category_summaries.items.$ref" = "#/definitions/CategorySummary"
"definitions.Podcast.properties.category_summaries.type" = "array"
"definitions.Podcast.properties.days_available.type" = "integer"
"definitions.Podcast.properties.entity_type.type" = "string"
"definitions.Podcast.properties.first_published_date.type" = "string"
"definitions.Podcast.properties.frequency.type" = "string"
"definitions.Podcast.properties.images.items.$ref" = "#/definitions/Image"
"definitions.Podcast.properties.images.type" = "array"
"definitions.Podcast.properties.latest_available_episodes.items.$ref" = "#/definitions/PodcastEpisodeSummary"
"definitions.Podcast.properties.latest_available_episodes.type" = "array"
"definitions.Podcast.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.Podcast.properties.pid.type" = "string"
"definitions.Podcast.properties.rss_url.type" = "string"
"definitions.Podcast.properties.synopses.$ref" = "#/definitions/PodcastSynopses"
"definitions.Podcast.properties.territory.type" = "string"
"definitions.Podcast.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.Podcast.properties.total_available_episodes.type" = "integer"
"definitions.Podcast.properties.type.type" = "string"
"definitions.Podcast.properties.updated_at.type" = "string"
"definitions.Podcast.required.length" = 16
"definitions.Podcast.required[0]" = "category_summaries"
"definitions.Podcast.required[10]" = "synopses"
"definitions.Podcast.required[11]" = "territory"
"definitions.Podcast.required[12]" = "titles"
"definitions.Podcast.required[13]" = "total_available_episodes"
"definitions.Podcast.required[14]" = "type"
"definitions.Podcast.required[15]" = "updated_at"
"definitions.Podcast.required[1]" = "days_available"
"definitions.Podcast.required[2]" = "entity_type"
"definitions.Podcast.required[3]" = "first_published_date"
"definitions.Podcast.required[4]" = "frequency"
"definitions.Podcast.required[5]" = "images"
"definitions.Podcast.required[6]" = "latest_available_episodes"
"definitions.Podcast.required[7]" = "network_summary"
"definitions.Podcast.required[8]" = "pid"
"definitions.Podcast.required[9]" = "rss_url"
"definitions.Podcast.type" = "object"
"definitions.PodcastEpisodeSummary.properties.asset_url.type" = "string"
"definitions.PodcastEpisodeSummary.properties.available_versions.items.$ref" = "#/definitions/AvailableVersions"
"definitions.PodcastEpisodeSummary.properties.available_versions.type" = "array"
"definitions.PodcastEpisodeSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.PodcastEpisodeSummary.properties.images.type" = "array"
"definitions.PodcastEpisodeSummary.properties.media_type.type" = "string"
"definitions.PodcastEpisodeSummary.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.PodcastEpisodeSummary.properties.pid.type" = "string"
"definitions.PodcastEpisodeSummary.properties.release_date.type" = "string"
"definitions.PodcastEpisodeSummary.properties.short_synopsis.type" = "string"
"definitions.PodcastEpisodeSummary.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.PodcastEpisodeSummary.properties.type.type" = "string"
"definitions.PodcastEpisodeSummary.required.length" = 10
"definitions.PodcastEpisodeSummary.required[0]" = "asset_url"
"definitions.PodcastEpisodeSummary.required[1]" = "available_versions"
"definitions.PodcastEpisodeSummary.required[2]" = "images"
"definitions.PodcastEpisodeSummary.required[3]" = "media_type"
"definitions.PodcastEpisodeSummary.required[4]" = "network_summary"
"definitions.PodcastEpisodeSummary.required[5]" = "pid"
"definitions.PodcastEpisodeSummary.required[6]" = "release_date"
"definitions.PodcastEpisodeSummary.required[7]" = "short_synopsis"
"definitions.PodcastEpisodeSummary.required[8]" = "titles"
"definitions.PodcastEpisodeSummary.required[9]" = "type"
"definitions.PodcastEpisodeSummary.type" = "object"
"definitions.PodcastEpisodesResponse.properties.$schema.type" = "string"
"definitions.PodcastEpisodesResponse.properties.limit.type" = "number"
"definitions.PodcastEpisodesResponse.properties.offset.type" = "number"
"definitions.PodcastEpisodesResponse.properties.results.items.$ref" = "#/definitions/PodcastEpisodeSummary"
"definitions.PodcastEpisodesResponse.properties.results.type" = "array"
"definitions.PodcastEpisodesResponse.properties.total.type" = "number"
"definitions.PodcastEpisodesResponse.required.length" = 5
"definitions.PodcastEpisodesResponse.required[0]" = "$schema"
"definitions.PodcastEpisodesResponse.required[1]" = "limit"
"definitions.PodcastEpisodesResponse.required[2]" = "offset"
"definitions.PodcastEpisodesResponse.required[3]" = "results"
"definitions.PodcastEpisodesResponse.required[4]" = "total"
"definitions.PodcastError.properties.href.type" = "string"
"definitions.PodcastError.properties.id.type" = "string"
"definitions.PodcastError.properties.message.type" = "string"
"definitions.PodcastError.properties.replied_at.type" = "string"
"definitions.PodcastError.properties.status.type" = "number"
"definitions.PodcastError.type" = "object"
"definitions.PodcastErrorResponse.properties.$schema.type" = "string"
"definitions.PodcastErrorResponse.properties.errors.items.$ref" = "#/definitions/PodcastError"
"definitions.PodcastErrorResponse.properties.errors.type" = "array"
"definitions.PodcastErrorResponse.type" = "object"
"definitions.PodcastSynopses.properties.long.type" = "string"
"definitions.PodcastSynopses.properties.medium.type" = "string"
"definitions.PodcastSynopses.properties.short.type" = "string"
"definitions.PodcastSynopses.properties.type.type" = "string"
"definitions.PodcastSynopses.required.length" = 4
"definitions.PodcastSynopses.required[0]" = "long"
"definitions.PodcastSynopses.required[1]" = "medium"
"definitions.PodcastSynopses.required[2]" = "short"
"definitions.PodcastSynopses.required[3]" = "type"
"definitions.PodcastSynopses.type" = "object"
"definitions.PodcastsFeatured.properties.featured_podcasts.items.$ref" = "#/definitions/Podcast"
"definitions.PodcastsFeatured.properties.featured_podcasts.type" = "array"
"definitions.PodcastsFeatured.properties.title.type" = "string"
"definitions.PodcastsFeatured.properties.type.type" = "string"
"definitions.PodcastsFeatured.type" = "object"
"definitions.PodcastsFeaturedResponse.properties.$schema.type" = "string"
"definitions.PodcastsFeaturedResponse.properties.limit.type" = "number"
"definitions.PodcastsFeaturedResponse.properties.offset.type" = "number"
"definitions.PodcastsFeaturedResponse.properties.results.items.$ref" = "#/definitions/PodcastsFeatured"
"definitions.PodcastsFeaturedResponse.properties.results.type" = "array"
"definitions.PodcastsFeaturedResponse.properties.total.type" = "number"
"definitions.PodcastsFeaturedResponse.required.length" = 5
"definitions.PodcastsFeaturedResponse.required[0]" = "$schema"
"definitions.PodcastsFeaturedResponse.required[1]" = "limit"
"definitions.PodcastsFeaturedResponse.required[2]" = "offset"
"definitions.PodcastsFeaturedResponse.required[3]" = "results"
"definitions.PodcastsFeaturedResponse.required[4]" = "total"
"definitions.PodcastsResponse.properties.$schema.type" = "string"
"definitions.PodcastsResponse.properties.limit.type" = "integer"
"definitions.PodcastsResponse.properties.offset.type" = "integer"
"definitions.PodcastsResponse.properties.results.items.$ref" = "#/definitions/Podcast"
"definitions.PodcastsResponse.properties.results.type" = "array"
"definitions.PodcastsResponse.properties.total.type" = "integer"
"definitions.PodcastsResponse.required.length" = 5
"definitions.PodcastsResponse.required[0]" = "$schema"
"definitions.PodcastsResponse.required[1]" = "limit"
"definitions.PodcastsResponse.required[2]" = "offset"
"definitions.PodcastsResponse.required[3]" = "results"
"definitions.PodcastsResponse.required[4]" = "total"
"definitions.PodcastsResponse.type" = "object"
"definitions.PopularError.properties.href.type" = "string"
"definitions.PopularError.properties.id.type" = "string"
"definitions.PopularError.properties.message.type" = "string"
"definitions.PopularError.properties.replied_at.type" = "string"
"definitions.PopularError.properties.status.type" = "integer"
"definitions.PopularError.required.length" = 5
"definitions.PopularError.required[0]" = "href"
"definitions.PopularError.required[1]" = "id"
"definitions.PopularError.required[2]" = "message"
"definitions.PopularError.required[3]" = "replied_at"
"definitions.PopularError.required[4]" = "status"
"definitions.PopularError.type" = "object"
"definitions.PopularErrorResponse.properties.$schema.type" = "string"
"definitions.PopularErrorResponse.properties.errors.items.$ref" = "#/definitions/PopularError"
"definitions.PopularErrorResponse.properties.errors.type" = "array"
"definitions.PopularErrorResponse.required.length" = 2
"definitions.PopularErrorResponse.required[0]" = "$schema"
"definitions.PopularErrorResponse.required[1]" = "errors"
"definitions.PopularErrorResponse.type" = "object"
"definitions.PopularItemSummary.properties.data.$ref" = "#/definitions/ProgrammeSummary"
"definitions.PopularItemSummary.properties.id.type" = "string"
"definitions.PopularItemSummary.properties.score.type" = "integer"
"definitions.PopularItemSummary.properties.type.type" = "string"
"definitions.PopularItemSummary.required.length" = 4
"definitions.PopularItemSummary.required[0]" = "data"
"definitions.PopularItemSummary.required[1]" = "id"
"definitions.PopularItemSummary.required[2]" = "score"
"definitions.PopularItemSummary.required[3]" = "type"
"definitions.PopularItemSummary.type" = "object"
"definitions.PopularResponse.properties.$schema.type" = "string"
"definitions.PopularResponse.properties.limit.type" = "integer"
"definitions.PopularResponse.properties.offset.type" = "integer"
"definitions.PopularResponse.properties.results.items.$ref" = "#/definitions/PopularItemSummary"
"definitions.PopularResponse.properties.results.type" = "array"
"definitions.PopularResponse.properties.total.type" = "integer"
"definitions.PopularResponse.required.length" = 5
"definitions.PopularResponse.required[0]" = "$schema"
"definitions.PopularResponse.required[1]" = "limit"
"definitions.PopularResponse.required[2]" = "offset"
"definitions.PopularResponse.required[3]" = "results"
"definitions.PopularResponse.required[4]" = "total"
"definitions.PopularResponse.type" = "object"
"definitions.Programme.properties.images.items.$ref" = "#/definitions/Image"
"definitions.Programme.properties.images.type" = "array"
"definitions.Programme.properties.latest_available_episodes.items.$ref" = "#/definitions/EpisodeSummary"
"definitions.Programme.properties.latest_available_episodes.type" = "array"
"definitions.Programme.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.Programme.properties.pid.type" = "string"
"definitions.Programme.properties.short_synopsis.type" = "string"
"definitions.Programme.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.Programme.properties.total_available_episodes.type" = "integer"
"definitions.Programme.properties.type.enum.length" = 4
"definitions.Programme.properties.type.enum[0]" = "brand_summary"
"definitions.Programme.properties.type.enum[1]" = "series_summary"
"definitions.Programme.properties.type.enum[2]" = "episode_summary"
"definitions.Programme.properties.type.enum[3]" = "clip_summary"
"definitions.Programme.properties.type.type" = "string"
"definitions.Programme.required.length" = 6
"definitions.Programme.required[0]" = "images"
"definitions.Programme.required[1]" = "network_summary"
"definitions.Programme.required[2]" = "pid"
"definitions.Programme.required[3]" = "short_synopsis"
"definitions.Programme.required[4]" = "titles"
"definitions.Programme.required[5]" = "type"
"definitions.Programme.type" = "object"
"definitions.ProgrammeSummary.properties.pid.type" = "string"
"definitions.ProgrammeSummary.properties.type.enum.length" = 4
"definitions.ProgrammeSummary.properties.type.enum[0]" = "brand_summary"
"definitions.ProgrammeSummary.properties.type.enum[1]" = "series_summary"
"definitions.ProgrammeSummary.properties.type.enum[2]" = "episode_summary"
"definitions.ProgrammeSummary.properties.type.enum[3]" = "clip_summary"
"definitions.ProgrammeSummary.properties.type.type" = "string"
"definitions.ProgrammeSummary.required.length" = 2
"definitions.ProgrammeSummary.required[0]" = "pid"
"definitions.ProgrammeSummary.required[1]" = "type"
"definitions.ProgrammeSummary.type" = "object"
"definitions.ProgrammeTitles.properties.display_title.type" = "string"
"definitions.ProgrammeTitles.properties.entity_title.type" = "string"
"definitions.ProgrammeTitles.properties.primary_title.type" = "string"
"definitions.ProgrammeTitles.properties.secondary_title.type" = "string"
"definitions.ProgrammeTitles.properties.type.type" = "string"
"definitions.ProgrammeTitles.required.length" = 1
"definitions.ProgrammeTitles.required[0]" = "type"
"definitions.ProgrammeTitles.type" = "object"
"definitions.ProgrammesResponse.properties.$schema.type" = "string"
"definitions.ProgrammesResponse.properties.limit.type" = "integer"
"definitions.ProgrammesResponse.properties.offset.type" = "integer"
"definitions.ProgrammesResponse.properties.results.items.$ref" = "#/definitions/ProgrammeSummary"
"definitions.ProgrammesResponse.properties.results.type" = "array"
"definitions.ProgrammesResponse.properties.total.type" = "integer"
"definitions.ProgrammesResponse.required.length" = 5
"definitions.ProgrammesResponse.required[0]" = "$schema"
"definitions.ProgrammesResponse.required[1]" = "limit"
"definitions.ProgrammesResponse.required[2]" = "offset"
"definitions.ProgrammesResponse.required[3]" = "results"
"definitions.ProgrammesResponse.required[4]" = "total"
"definitions.ProgrammesResponse.type" = "object"
"definitions.RadioError.properties.code.type" = "string"
"definitions.RadioError.properties.detail.type" = "string"
"definitions.RadioError.properties.href.type" = "string"
"definitions.RadioError.properties.id.type" = "string"
"definitions.RadioError.properties.status.type" = "integer"
"definitions.RadioError.properties.timestamp.type" = "integer"
"definitions.RadioError.properties.title.type" = "string"
"definitions.RadioError.required.length" = 7
"definitions.RadioError.required[0]" = "code"
"definitions.RadioError.required[1]" = "detail"
"definitions.RadioError.required[2]" = "href"
"definitions.RadioError.required[3]" = "id"
"definitions.RadioError.required[4]" = "status"
"definitions.RadioError.required[5]" = "timestamp"
"definitions.RadioError.required[6]" = "title"
"definitions.RadioError.type" = "object"
"definitions.RadioErrorResponse.properties.$schema.type" = "string"
"definitions.RadioErrorResponse.properties.errors.items.$ref" = "#/definitions/RadioError"
"definitions.RadioErrorResponse.properties.errors.type" = "array"
"definitions.RadioErrorResponse.required.length" = 2
"definitions.RadioErrorResponse.required[0]" = "$schema"
"definitions.RadioErrorResponse.required[1]" = "errors"
"definitions.RadioErrorResponse.type" = "object"
"definitions.SeriesSummary.properties.ancestors.items.$ref" = "#/definitions/AncestorSummary"
"definitions.SeriesSummary.properties.ancestors.type" = "array"
"definitions.SeriesSummary.properties.images.items.$ref" = "#/definitions/Image"
"definitions.SeriesSummary.properties.images.type" = "array"
"definitions.SeriesSummary.properties.latest_available_episodes.items.$ref" = "#/definitions/EpisodeSummary"
"definitions.SeriesSummary.properties.latest_available_episodes.type" = "array"
"definitions.SeriesSummary.properties.network_summary.$ref" = "#/definitions/NetworkSummary"
"definitions.SeriesSummary.properties.pid.type" = "string"
"definitions.SeriesSummary.properties.short_synopsis.type" = "string"
"definitions.SeriesSummary.properties.titles.$ref" = "#/definitions/ProgrammeTitles"
"definitions.SeriesSummary.properties.total_available_episodes.type" = "integer"
"definitions.SeriesSummary.properties.type.enum.length" = 1
"definitions.SeriesSummary.properties.type.enum[0]" = "series_summary"
"definitions.SeriesSummary.properties.type.type" = "string"
"definitions.SeriesSummary.required.length" = 9
"definitions.SeriesSummary.required[0]" = "ancestors"
"definitions.SeriesSummary.required[1]" = "images"
"definitions.SeriesSummary.required[2]" = "latest_available_episodes"
"definitions.SeriesSummary.required[3]" = "network_summary"
"definitions.SeriesSummary.required[4]" = "pid"
"definitions.SeriesSummary.required[5]" = "short_synopsis"
"definitions.SeriesSummary.required[6]" = "titles"
"definitions.SeriesSummary.required[7]" = "total_available_episodes"
"definitions.SeriesSummary.required[8]" = "type"
"definitions.SeriesSummary.type" = "object"
"definitions.Service.properties.active.type" = "boolean"
"definitions.Service.properties.coverage.type" = "string"
"definitions.Service.properties.date_ranges.items.$ref" = "#/definitions/DateRange"
"definitions.Service.properties.date_ranges.type" = "array"
"definitions.Service.properties.default.type" = "boolean"
"definitions.Service.properties.default_language.type" = "string"
"definitions.Service.properties.id.type" = "string"
"definitions.Service.properties.region.type" = "string"
"definitions.Service.properties.short_title.type" = "string"
"definitions.Service.properties.title.type" = "string"
"definitions.Service.properties.type.type" = "string"
"definitions.Service.required.length" = 10
"definitions.Service.required[0]" = "active"
"definitions.Service.required[1]" = "coverage"
"definitions.Service.required[2]" = "date_ranges"
"definitions.Service.required[3]" = "default"
"definitions.Service.required[4]" = "default_language"
"definitions.Service.required[5]" = "id"
"definitions.Service.required[6]" = "region"
"definitions.Service.required[7]" = "short_title"
"definitions.Service.required[8]" = "title"
"definitions.Service.required[9]" = "type"
"definitions.Service.type" = "object"
host = "rms.api.bbc.co.uk"
"info.description" = "We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients."
"info.title" = "Radio & Music Services"
"info.version" = "1.0.0"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "media"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_thumb_6_63_BBC_Radio_logo.svg_140px-BBC_Radio_logo.svg.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://rms.api.bbc.co.uk/docs/swagger.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "bbc.co.uk"
"parameters.Authorization.default" = "Bearer OAUTH_TOKEN"
"parameters.Authorization.description" = "Bearer OAUTH_TOKEN"
"parameters.Authorization.in" = "header"
"parameters.Authorization.name" = "Authorization"
"parameters.Authorization.required" = true
"parameters.Authorization.type" = "string"
"parameters.X-API-Key.description" = "API_KEY"
"parameters.X-API-Key.in" = "header"
"parameters.X-API-Key.name" = "X-API-Key"
"parameters.X-API-Key.required" = true
"parameters.X-API-Key.type" = "string"
"parameters.X-Authentication-Provider.default" = "idv5"
"parameters.X-Authentication-Provider.description" = "Authentication type"
"parameters.X-Authentication-Provider.in" = "header"
"parameters.X-Authentication-Provider.name" = "X-Authentication-Provider"
"parameters.X-Authentication-Provider.required" = true
"parameters.X-Authentication-Provider.type" = "string"
"parameters.artist.description" = "MusicBrainz artist ID"
"parameters.artist.in" = "query"
"parameters.artist.name" = "artist"
"parameters.artist.required" = false
"parameters.artist.type" = "string"
"parameters.category.description" = "Category ID"
"parameters.category.in" = "query"
"parameters.category.name" = "category"
"parameters.category.required" = false
"parameters.category.type" = "string"
"parameters.coverage.description" = "Local, National or Regional Coverage"
"parameters.coverage.enum.length" = 3
"parameters.coverage.enum[0]" = "local"
"parameters.coverage.enum[1]" = "national"
"parameters.coverage.enum[2]" = "regional"
"parameters.coverage.in" = "query"
"parameters.coverage.name" = "coverage"
"parameters.coverage.required" = false
"parameters.coverage.type" = "string"
"parameters.decomposed.description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"parameters.decomposed.in" = "query"
"parameters.decomposed.name" = "decomposed"
"parameters.decomposed.required" = false
"parameters.decomposed.type" = "boolean"
"parameters.limit.description" = "Paginated results limit"
"parameters.limit.in" = "query"
"parameters.limit.name" = "limit"
"parameters.limit.required" = false
"parameters.limit.type" = "integer"
"parameters.network.description" = "Return items with given Network ID"
"parameters.network.in" = "query"
"parameters.network.name" = "network"
"parameters.network.required" = false
"parameters.network.type" = "string"
"parameters.offset.description" = "Paginated results offset"
"parameters.offset.in" = "query"
"parameters.offset.name" = "offset"
"parameters.offset.required" = false
"parameters.offset.type" = "integer"
"parameters.over16.description" = "Boolean age check"
"parameters.over16.in" = "query"
"parameters.over16.name" = "over16"
"parameters.over16.required" = true
"parameters.over16.type" = "boolean"
"parameters.pid.description" = "pid"
"parameters.pid.in" = "path"
"parameters.pid.name" = "pid"
"parameters.pid.required" = true
"parameters.pid.type" = "string"
"parameters.programme.description" = "Items with given Programme Pid"
"parameters.programme.in" = "query"
"parameters.programme.name" = "programme"
"parameters.programme.required" = false
"parameters.programme.type" = "string"
"parameters.q.description" = "Search query String"
"parameters.q.in" = "query"
"parameters.q.name" = "q"
"parameters.q.required" = false
"parameters.q.type" = "string"
"parameters.rights.description" = "Only return available results for the web/mobile."
"parameters.rights.enum.length" = 2
"parameters.rights.enum[0]" = "web"
"parameters.rights.enum[1]" = "mobile"
"parameters.rights.in" = "query"
"parameters.rights.name" = "rights"
"parameters.rights.required" = true
"parameters.rights.type" = "string"
"parameters.since.description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"parameters.since.in" = "query"
"parameters.since.name" = "since"
"parameters.since.required" = false
"parameters.since.type" = "string"
"parameters.sort.description" = "Sort order for Podcasts results"
"parameters.sort.enum.length" = 4
"parameters.sort.enum[0]" = "title"
"parameters.sort.enum[1]" = "-title"
"parameters.sort.enum[2]" = "available_from_date"
"parameters.sort.enum[3]" = "-available_from_date"
"parameters.sort.in" = "query"
"parameters.sort.name" = "sort"
"parameters.sort.required" = false
"parameters.sort.type" = "string"
"parameters.until.description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"parameters.until.in" = "query"
"parameters.until.name" = "until"
"parameters.until.required" = false
"parameters.until.type" = "string"
"paths./broadcasts.get.description" = "All broadcasts\n"
"paths./broadcasts.get.parameters.length" = 6
"paths./broadcasts.get.parameters[0].description" = "API_KEY"
"paths./broadcasts.get.parameters[0].in" = "header"
"paths./broadcasts.get.parameters[0].name" = "X-API-Key"
"paths./broadcasts.get.parameters[0].required" = true
"paths./broadcasts.get.parameters[0].type" = "string"
"paths./broadcasts.get.parameters[1].description" = "Paginated results offset"
"paths./broadcasts.get.parameters[1].in" = "query"
"paths./broadcasts.get.parameters[1].name" = "offset"
"paths./broadcasts.get.parameters[1].required" = false
"paths./broadcasts.get.parameters[1].type" = "integer"
"paths./broadcasts.get.parameters[2].description" = "Paginated results limit"
"paths./broadcasts.get.parameters[2].in" = "query"
"paths./broadcasts.get.parameters[2].name" = "limit"
"paths./broadcasts.get.parameters[2].required" = false
"paths./broadcasts.get.parameters[2].type" = "integer"
"paths./broadcasts.get.parameters[3].description" = "Filter by Service ID. E.g. bbc_radio_fourfm"
"paths./broadcasts.get.parameters[3].in" = "query"
"paths./broadcasts.get.parameters[3].name" = "service_id"
"paths./broadcasts.get.parameters[3].required" = false
"paths./broadcasts.get.parameters[3].type" = "string"
"paths./broadcasts.get.parameters[4].description" = "Filter by date. E.g. 2016-06-17"
"paths./broadcasts.get.parameters[4].in" = "query"
"paths./broadcasts.get.parameters[4].name" = "date"
"paths./broadcasts.get.parameters[4].required" = false
"paths./broadcasts.get.parameters[4].type" = "string"
"paths./broadcasts.get.parameters[5].description" = "Sort by provided query. E.g. 'start_at' sorts in ascending order, and '-start_at' sorts in descending order"
"paths./broadcasts.get.parameters[5].enum.length" = 4
"paths./broadcasts.get.parameters[5].enum[0]" = "start_at"
"paths./broadcasts.get.parameters[5].enum[1]" = "-start_at"
"paths./broadcasts.get.parameters[5].enum[2]" = "end_at"
"paths./broadcasts.get.parameters[5].enum[3]" = "-end_at"
"paths./broadcasts.get.parameters[5].in" = "query"
"paths./broadcasts.get.parameters[5].name" = "sort"
"paths./broadcasts.get.parameters[5].required" = false
"paths./broadcasts.get.parameters[5].type" = "string"
"paths./broadcasts.get.responses.200.description" = "OK"
"paths./broadcasts.get.responses.200.schema.$ref" = "#/definitions/BroadcastsResponse"
"paths./broadcasts.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./broadcasts.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts.get.responses.default.description" = "Unexpected error"
"paths./broadcasts.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts.get.schemes.length" = 1
"paths./broadcasts.get.schemes[0]" = "https"
"paths./broadcasts.get.summary" = "Broadcasts"
"paths./broadcasts.get.tags.length" = 1
"paths./broadcasts.get.tags[0]" = "Broadcasts"
"paths./broadcasts/latest.get.description" = "Broadcasts for the current day\n"
"paths./broadcasts/latest.get.parameters.length" = 8
"paths./broadcasts/latest.get.parameters[0].description" = "API_KEY"
"paths./broadcasts/latest.get.parameters[0].in" = "header"
"paths./broadcasts/latest.get.parameters[0].name" = "X-API-Key"
"paths./broadcasts/latest.get.parameters[0].required" = true
"paths./broadcasts/latest.get.parameters[0].type" = "string"
"paths./broadcasts/latest.get.parameters[1].description" = "Paginated results offset"
"paths./broadcasts/latest.get.parameters[1].in" = "query"
"paths./broadcasts/latest.get.parameters[1].name" = "offset"
"paths./broadcasts/latest.get.parameters[1].required" = false
"paths./broadcasts/latest.get.parameters[1].type" = "integer"
"paths./broadcasts/latest.get.parameters[2].description" = "Paginated results limit"
"paths./broadcasts/latest.get.parameters[2].in" = "query"
"paths./broadcasts/latest.get.parameters[2].name" = "limit"
"paths./broadcasts/latest.get.parameters[2].required" = false
"paths./broadcasts/latest.get.parameters[2].type" = "integer"
"paths./broadcasts/latest.get.parameters[3].description" = "Filter by Service ID. E.g. bbc_radio_fourfm"
"paths./broadcasts/latest.get.parameters[3].in" = "query"
"paths./broadcasts/latest.get.parameters[3].name" = "service_id"
"paths./broadcasts/latest.get.parameters[3].required" = false
"paths./broadcasts/latest.get.parameters[3].type" = "string"
"paths./broadcasts/latest.get.parameters[4].description" = "Filter what is on air. E.g. 'now' returns current programme being broadcasted."
"paths./broadcasts/latest.get.parameters[4].enum.length" = 3
"paths./broadcasts/latest.get.parameters[4].enum[0]" = "now"
"paths./broadcasts/latest.get.parameters[4].enum[1]" = "previous"
"paths./broadcasts/latest.get.parameters[4].enum[2]" = "next"
"paths./broadcasts/latest.get.parameters[4].in" = "query"
"paths./broadcasts/latest.get.parameters[4].name" = "on_air"
"paths./broadcasts/latest.get.parameters[4].required" = false
"paths./broadcasts/latest.get.parameters[4].type" = "string"
"paths./broadcasts/latest.get.parameters[5].description" = "Filter what will be on air next in minutes. E.g. '240' returns programmes broadcasted in the next four hurs"
"paths./broadcasts/latest.get.parameters[5].in" = "query"
"paths./broadcasts/latest.get.parameters[5].name" = "next"
"paths./broadcasts/latest.get.parameters[5].required" = false
"paths./broadcasts/latest.get.parameters[5].type" = "string"
"paths./broadcasts/latest.get.parameters[6].description" = "Filter what was on air previously in minutes. E.g. '240' returns programmes broadcasted in the previous four hurs"
"paths./broadcasts/latest.get.parameters[6].in" = "query"
"paths./broadcasts/latest.get.parameters[6].name" = "previous"
"paths./broadcasts/latest.get.parameters[6].required" = false
"paths./broadcasts/latest.get.parameters[6].type" = "string"
"paths./broadcasts/latest.get.parameters[7].description" = "Sort by provided query. E.g. 'start_at' sorts in ascending order, and '-start_at' sorts in descending order"
"paths./broadcasts/latest.get.parameters[7].enum.length" = 4
"paths./broadcasts/latest.get.parameters[7].enum[0]" = "start_at"
"paths./broadcasts/latest.get.parameters[7].enum[1]" = "-start_at"
"paths./broadcasts/latest.get.parameters[7].enum[2]" = "end_at"
"paths./broadcasts/latest.get.parameters[7].enum[3]" = "-end_at"
"paths./broadcasts/latest.get.parameters[7].in" = "query"
"paths./broadcasts/latest.get.parameters[7].name" = "sort"
"paths./broadcasts/latest.get.parameters[7].required" = false
"paths./broadcasts/latest.get.parameters[7].type" = "string"
"paths./broadcasts/latest.get.responses.200.description" = "OK"
"paths./broadcasts/latest.get.responses.200.schema.$ref" = "#/definitions/BroadcastsResponse"
"paths./broadcasts/latest.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./broadcasts/latest.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts/latest.get.responses.default.description" = "Unexpected error"
"paths./broadcasts/latest.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts/latest.get.schemes.length" = 1
"paths./broadcasts/latest.get.schemes[0]" = "https"
"paths./broadcasts/latest.get.summary" = "Latest Broadcasts"
"paths./broadcasts/latest.get.tags.length" = 1
"paths./broadcasts/latest.get.tags[0]" = "Broadcasts"
"paths./broadcasts/{pid}.get.description" = "Find broadcast by PID\n"
"paths./broadcasts/{pid}.get.operationId" = "getBroadcastByPid"
"paths./broadcasts/{pid}.get.parameters.length" = 2
"paths./broadcasts/{pid}.get.parameters[0].description" = "API_KEY"
"paths./broadcasts/{pid}.get.parameters[0].in" = "header"
"paths./broadcasts/{pid}.get.parameters[0].name" = "X-API-Key"
"paths./broadcasts/{pid}.get.parameters[0].required" = true
"paths./broadcasts/{pid}.get.parameters[0].type" = "string"
"paths./broadcasts/{pid}.get.parameters[1].description" = "pid"
"paths./broadcasts/{pid}.get.parameters[1].in" = "path"
"paths./broadcasts/{pid}.get.parameters[1].name" = "pid"
"paths./broadcasts/{pid}.get.parameters[1].required" = true
"paths./broadcasts/{pid}.get.parameters[1].type" = "string"
"paths./broadcasts/{pid}.get.responses.200.description" = "OK"
"paths./broadcasts/{pid}.get.responses.200.schema.$ref" = "#/definitions/BroadcastsResponse"
"paths./broadcasts/{pid}.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./broadcasts/{pid}.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts/{pid}.get.responses.default.description" = "Unexpected error"
"paths./broadcasts/{pid}.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./broadcasts/{pid}.get.schemes.length" = 1
"paths./broadcasts/{pid}.get.schemes[0]" = "https"
"paths./broadcasts/{pid}.get.summary" = "Broadcasts by PID"
"paths./broadcasts/{pid}.get.tags.length" = 1
"paths./broadcasts/{pid}.get.tags[0]" = "Broadcasts"
"paths./categories.get.description" = "Retrieve Categories\n"
"paths./categories.get.parameters.length" = 2
"paths./categories.get.parameters[0].description" = "API_KEY"
"paths./categories.get.parameters[0].in" = "header"
"paths./categories.get.parameters[0].name" = "X-API-Key"
"paths./categories.get.parameters[0].required" = true
"paths./categories.get.parameters[0].type" = "string"
"paths./categories.get.parameters[1].description" = "Filter by provided query. E.g. 'promoted' returns promoted categories"
"paths./categories.get.parameters[1].enum.length" = 1
"paths./categories.get.parameters[1].enum[0]" = "promoted"
"paths./categories.get.parameters[1].in" = "query"
"paths./categories.get.parameters[1].name" = "kind"
"paths./categories.get.parameters[1].required" = false
"paths./categories.get.parameters[1].type" = "string"
"paths./categories.get.responses.200.description" = "OK"
"paths./categories.get.responses.200.schema.$ref" = "#/definitions/CategoriesResponse"
"paths./categories.get.responses.default.description" = "Unexpected error"
"paths./categories.get.responses.default.schema.$ref" = "#/definitions/CategoryErrorResponse"
"paths./categories.get.summary" = "List of categories"
"paths./categories.get.tags.length" = 1
"paths./categories.get.tags[0]" = "Categories"
"paths./categories/{id}.get.description" = "Retrieve Categories by ID\n"
"paths./categories/{id}.get.parameters.length" = 2
"paths./categories/{id}.get.parameters[0].description" = "API_KEY"
"paths./categories/{id}.get.parameters[0].in" = "header"
"paths./categories/{id}.get.parameters[0].name" = "X-API-Key"
"paths./categories/{id}.get.parameters[0].required" = true
"paths./categories/{id}.get.parameters[0].type" = "string"
"paths./categories/{id}.get.parameters[1].description" = "Retrieve information about the category. E.g. 'sport-football-europeanchampionship'"
"paths./categories/{id}.get.parameters[1].in" = "path"
"paths./categories/{id}.get.parameters[1].name" = "id"
"paths./categories/{id}.get.parameters[1].required" = true
"paths./categories/{id}.get.parameters[1].type" = "string"
"paths./categories/{id}.get.responses.200.description" = "OK"
"paths./categories/{id}.get.responses.200.schema.$ref" = "#/definitions/CategoriesResponse"
"paths./categories/{id}.get.responses.default.description" = "Unexpected error"
"paths./categories/{id}.get.responses.default.schema.$ref" = "#/definitions/CategoryErrorResponse"
"paths./categories/{id}.get.summary" = "Category by ID"
"paths./categories/{id}.get.tags.length" = 1
"paths./categories/{id}.get.tags[0]" = "Categories"
"paths./collections/{pid}/members.get.description" = "Episodes and Clips from Collection\n"
"paths./collections/{pid}/members.get.operationId" = "getCollectionMembers"
"paths./collections/{pid}/members.get.parameters.length" = 4
"paths./collections/{pid}/members.get.parameters[0].description" = "API_KEY"
"paths./collections/{pid}/members.get.parameters[0].in" = "header"
"paths./collections/{pid}/members.get.parameters[0].name" = "X-API-Key"
"paths./collections/{pid}/members.get.parameters[0].required" = true
"paths./collections/{pid}/members.get.parameters[0].type" = "string"
"paths./collections/{pid}/members.get.parameters[1].description" = "pid"
"paths./collections/{pid}/members.get.parameters[1].in" = "path"
"paths./collections/{pid}/members.get.parameters[1].name" = "pid"
"paths./collections/{pid}/members.get.parameters[1].required" = true
"paths./collections/{pid}/members.get.parameters[1].type" = "string"
"paths./collections/{pid}/members.get.parameters[2].description" = "Paginated results offset"
"paths./collections/{pid}/members.get.parameters[2].in" = "query"
"paths./collections/{pid}/members.get.parameters[2].name" = "offset"
"paths./collections/{pid}/members.get.parameters[2].required" = false
"paths./collections/{pid}/members.get.parameters[2].type" = "integer"
"paths./collections/{pid}/members.get.parameters[3].description" = "Paginated results limit"
"paths./collections/{pid}/members.get.parameters[3].in" = "query"
"paths./collections/{pid}/members.get.parameters[3].name" = "limit"
"paths./collections/{pid}/members.get.parameters[3].required" = false
"paths./collections/{pid}/members.get.parameters[3].type" = "integer"
"paths./collections/{pid}/members.get.responses.200.description" = "OK"
"paths./collections/{pid}/members.get.responses.200.schema.$ref" = "#/definitions/ProgrammesResponse"
"paths./collections/{pid}/members.get.responses.404.description" = "Collection not found"
"paths./collections/{pid}/members.get.responses.404.schema.$ref" = "#/definitions/ErrorResponse"
"paths./collections/{pid}/members.get.responses.default.description" = "Unexpected error"
"paths./collections/{pid}/members.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./collections/{pid}/members.get.schemes.length" = 1
"paths./collections/{pid}/members.get.schemes[0]" = "https"
"paths./collections/{pid}/members.get.summary" = "Collection Members"
"paths./collections/{pid}/members.get.tags.length" = 1
"paths./collections/{pid}/members.get.tags[0]" = "Collections"
"paths./experience/homepage.get.description" = "Homepage Experience\n"
"paths./experience/homepage.get.operationId" = "getExperienceHomepage"
"paths./experience/homepage.get.parameters.length" = 1
"paths./experience/homepage.get.parameters[0].description" = "API_KEY"
"paths./experience/homepage.get.parameters[0].in" = "header"
"paths./experience/homepage.get.parameters[0].name" = "X-API-Key"
"paths./experience/homepage.get.parameters[0].required" = true
"paths./experience/homepage.get.parameters[0].type" = "string"
"paths./experience/homepage.get.responses.200.description" = "OK"
"paths./experience/homepage.get.responses.200.schema.$ref" = "#/definitions/ExperienceResponse"
"paths./experience/homepage.get.responses.default.description" = "Unexpected error"
"paths./experience/homepage.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./experience/homepage.get.schemes.length" = 1
"paths./experience/homepage.get.schemes[0]" = "https"
"paths./experience/homepage.get.summary" = "Homepage Experience"
"paths./experience/homepage.get.tags.length" = 1
"paths./experience/homepage.get.tags[0]" = "Experience"
"paths./music/popular/artists.get.description" = "List of Most Popular artists from BBC Music.\n"
"paths./music/popular/artists.get.operationId" = "getMusicPopularArtists"
"paths./music/popular/artists.get.parameters.length" = 6
"paths./music/popular/artists.get.parameters[0].description" = "API_KEY"
"paths./music/popular/artists.get.parameters[0].in" = "header"
"paths./music/popular/artists.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/artists.get.parameters[0].required" = true
"paths./music/popular/artists.get.parameters[0].type" = "string"
"paths./music/popular/artists.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/artists.get.parameters[1].in" = "query"
"paths./music/popular/artists.get.parameters[1].name" = "since"
"paths./music/popular/artists.get.parameters[1].required" = false
"paths./music/popular/artists.get.parameters[1].type" = "string"
"paths./music/popular/artists.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/artists.get.parameters[2].in" = "query"
"paths./music/popular/artists.get.parameters[2].name" = "until"
"paths./music/popular/artists.get.parameters[2].required" = false
"paths./music/popular/artists.get.parameters[2].type" = "string"
"paths./music/popular/artists.get.parameters[3].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/artists.get.parameters[3].in" = "query"
"paths./music/popular/artists.get.parameters[3].name" = "decomposed"
"paths./music/popular/artists.get.parameters[3].required" = false
"paths./music/popular/artists.get.parameters[3].type" = "boolean"
"paths./music/popular/artists.get.parameters[4].description" = "Paginated results offset"
"paths./music/popular/artists.get.parameters[4].in" = "query"
"paths./music/popular/artists.get.parameters[4].name" = "offset"
"paths./music/popular/artists.get.parameters[4].required" = false
"paths./music/popular/artists.get.parameters[4].type" = "integer"
"paths./music/popular/artists.get.parameters[5].description" = "Paginated results limit"
"paths./music/popular/artists.get.parameters[5].in" = "query"
"paths./music/popular/artists.get.parameters[5].name" = "limit"
"paths./music/popular/artists.get.parameters[5].required" = false
"paths./music/popular/artists.get.parameters[5].type" = "integer"
"paths./music/popular/artists.get.responses.200.description" = "OK"
"paths./music/popular/artists.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityArtists"
"paths./music/popular/artists.get.responses.default.description" = "Unexpected error"
"paths./music/popular/artists.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/artists.get.schemes.length" = 1
"paths./music/popular/artists.get.schemes[0]" = "http"
"paths./music/popular/artists.get.summary" = "Popular Artists"
"paths./music/popular/artists.get.tags.length" = 1
"paths./music/popular/artists.get.tags[0]" = "Music"
"paths./music/popular/artists/{id}.get.description" = "Popularity Artist By Id\n"
"paths./music/popular/artists/{id}.get.operationId" = "getMusicPopularArtistById"
"paths./music/popular/artists/{id}.get.parameters.length" = 5
"paths./music/popular/artists/{id}.get.parameters[0].description" = "API_KEY"
"paths./music/popular/artists/{id}.get.parameters[0].in" = "header"
"paths./music/popular/artists/{id}.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/artists/{id}.get.parameters[0].required" = true
"paths./music/popular/artists/{id}.get.parameters[0].type" = "string"
"paths./music/popular/artists/{id}.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/artists/{id}.get.parameters[1].in" = "query"
"paths./music/popular/artists/{id}.get.parameters[1].name" = "since"
"paths./music/popular/artists/{id}.get.parameters[1].required" = false
"paths./music/popular/artists/{id}.get.parameters[1].type" = "string"
"paths./music/popular/artists/{id}.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/artists/{id}.get.parameters[2].in" = "query"
"paths./music/popular/artists/{id}.get.parameters[2].name" = "until"
"paths./music/popular/artists/{id}.get.parameters[2].required" = false
"paths./music/popular/artists/{id}.get.parameters[2].type" = "string"
"paths./music/popular/artists/{id}.get.parameters[3].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/artists/{id}.get.parameters[3].in" = "query"
"paths./music/popular/artists/{id}.get.parameters[3].name" = "decomposed"
"paths./music/popular/artists/{id}.get.parameters[3].required" = false
"paths./music/popular/artists/{id}.get.parameters[3].type" = "boolean"
"paths./music/popular/artists/{id}.get.parameters[4].description" = "MusicBrainz Id - Used to get single resource score"
"paths./music/popular/artists/{id}.get.parameters[4].in" = "path"
"paths./music/popular/artists/{id}.get.parameters[4].name" = "id"
"paths./music/popular/artists/{id}.get.parameters[4].required" = true
"paths./music/popular/artists/{id}.get.parameters[4].type" = "string"
"paths./music/popular/artists/{id}.get.responses.200.description" = "OK"
"paths./music/popular/artists/{id}.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityArtists"
"paths./music/popular/artists/{id}.get.responses.default.description" = "Unexpected error"
"paths./music/popular/artists/{id}.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/artists/{id}.get.schemes.length" = 1
"paths./music/popular/artists/{id}.get.schemes[0]" = "http"
"paths./music/popular/artists/{id}.get.summary" = "Single Artist Popularity"
"paths./music/popular/artists/{id}.get.tags.length" = 1
"paths./music/popular/artists/{id}.get.tags[0]" = "Music"
"paths./music/popular/playlists.get.description" = "List of Most Popular playlists from BBC Music.\n"
"paths./music/popular/playlists.get.operationId" = "getMusicPopularPlaylists"
"paths./music/popular/playlists.get.parameters.length" = 6
"paths./music/popular/playlists.get.parameters[0].description" = "API_KEY"
"paths./music/popular/playlists.get.parameters[0].in" = "header"
"paths./music/popular/playlists.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/playlists.get.parameters[0].required" = true
"paths./music/popular/playlists.get.parameters[0].type" = "string"
"paths./music/popular/playlists.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/playlists.get.parameters[1].in" = "query"
"paths./music/popular/playlists.get.parameters[1].name" = "since"
"paths./music/popular/playlists.get.parameters[1].required" = false
"paths./music/popular/playlists.get.parameters[1].type" = "string"
"paths./music/popular/playlists.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/playlists.get.parameters[2].in" = "query"
"paths./music/popular/playlists.get.parameters[2].name" = "until"
"paths./music/popular/playlists.get.parameters[2].required" = false
"paths./music/popular/playlists.get.parameters[2].type" = "string"
"paths./music/popular/playlists.get.parameters[3].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/playlists.get.parameters[3].in" = "query"
"paths./music/popular/playlists.get.parameters[3].name" = "decomposed"
"paths./music/popular/playlists.get.parameters[3].required" = false
"paths./music/popular/playlists.get.parameters[3].type" = "boolean"
"paths./music/popular/playlists.get.parameters[4].description" = "Paginated results offset"
"paths./music/popular/playlists.get.parameters[4].in" = "query"
"paths./music/popular/playlists.get.parameters[4].name" = "offset"
"paths./music/popular/playlists.get.parameters[4].required" = false
"paths./music/popular/playlists.get.parameters[4].type" = "integer"
"paths./music/popular/playlists.get.parameters[5].description" = "Paginated results limit"
"paths./music/popular/playlists.get.parameters[5].in" = "query"
"paths./music/popular/playlists.get.parameters[5].name" = "limit"
"paths./music/popular/playlists.get.parameters[5].required" = false
"paths./music/popular/playlists.get.parameters[5].type" = "integer"
"paths./music/popular/playlists.get.responses.200.description" = "OK"
"paths./music/popular/playlists.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityPlaylists"
"paths./music/popular/playlists.get.responses.default.description" = "Unexpected error"
"paths./music/popular/playlists.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/playlists.get.schemes.length" = 1
"paths./music/popular/playlists.get.schemes[0]" = "http"
"paths./music/popular/playlists.get.summary" = "Popular Playlists"
"paths./music/popular/playlists.get.tags.length" = 1
"paths./music/popular/playlists.get.tags[0]" = "Music"
"paths./music/popular/playlists/{id}.get.description" = "Popular playlist by Id\n"
"paths./music/popular/playlists/{id}.get.operationId" = "getMusicPopularPlaylistById"
"paths./music/popular/playlists/{id}.get.parameters.length" = 5
"paths./music/popular/playlists/{id}.get.parameters[0].description" = "API_KEY"
"paths./music/popular/playlists/{id}.get.parameters[0].in" = "header"
"paths./music/popular/playlists/{id}.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/playlists/{id}.get.parameters[0].required" = true
"paths./music/popular/playlists/{id}.get.parameters[0].type" = "string"
"paths./music/popular/playlists/{id}.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/playlists/{id}.get.parameters[1].in" = "query"
"paths./music/popular/playlists/{id}.get.parameters[1].name" = "since"
"paths./music/popular/playlists/{id}.get.parameters[1].required" = false
"paths./music/popular/playlists/{id}.get.parameters[1].type" = "string"
"paths./music/popular/playlists/{id}.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/playlists/{id}.get.parameters[2].in" = "query"
"paths./music/popular/playlists/{id}.get.parameters[2].name" = "until"
"paths./music/popular/playlists/{id}.get.parameters[2].required" = false
"paths./music/popular/playlists/{id}.get.parameters[2].type" = "string"
"paths./music/popular/playlists/{id}.get.parameters[3].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/playlists/{id}.get.parameters[3].in" = "query"
"paths./music/popular/playlists/{id}.get.parameters[3].name" = "decomposed"
"paths./music/popular/playlists/{id}.get.parameters[3].required" = false
"paths./music/popular/playlists/{id}.get.parameters[3].type" = "boolean"
"paths./music/popular/playlists/{id}.get.parameters[4].description" = "BBC Music Playlist Id - Used to get single resource score"
"paths./music/popular/playlists/{id}.get.parameters[4].in" = "path"
"paths./music/popular/playlists/{id}.get.parameters[4].name" = "id"
"paths./music/popular/playlists/{id}.get.parameters[4].required" = true
"paths./music/popular/playlists/{id}.get.parameters[4].type" = "string"
"paths./music/popular/playlists/{id}.get.responses.200.description" = "OK"
"paths./music/popular/playlists/{id}.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityPlaylists"
"paths./music/popular/playlists/{id}.get.responses.default.description" = "Unexpected error"
"paths./music/popular/playlists/{id}.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/playlists/{id}.get.schemes.length" = 1
"paths./music/popular/playlists/{id}.get.schemes[0]" = "http"
"paths./music/popular/playlists/{id}.get.summary" = "Single Playlist Popularity"
"paths./music/popular/playlists/{id}.get.tags.length" = 1
"paths./music/popular/playlists/{id}.get.tags[0]" = "Music"
"paths./music/popular/tracks.get.description" = "List of popular tracks for BBC Music. Filter by time, network, artist, playlist or programme.\n"
"paths./music/popular/tracks.get.operationId" = "getMusicPopularTracks"
"paths./music/popular/tracks.get.parameters.length" = 9
"paths./music/popular/tracks.get.parameters[0].description" = "API_KEY"
"paths./music/popular/tracks.get.parameters[0].in" = "header"
"paths./music/popular/tracks.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/tracks.get.parameters[0].required" = true
"paths./music/popular/tracks.get.parameters[0].type" = "string"
"paths./music/popular/tracks.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/tracks.get.parameters[1].in" = "query"
"paths./music/popular/tracks.get.parameters[1].name" = "since"
"paths./music/popular/tracks.get.parameters[1].required" = false
"paths./music/popular/tracks.get.parameters[1].type" = "string"
"paths./music/popular/tracks.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/tracks.get.parameters[2].in" = "query"
"paths./music/popular/tracks.get.parameters[2].name" = "until"
"paths./music/popular/tracks.get.parameters[2].required" = false
"paths./music/popular/tracks.get.parameters[2].type" = "string"
"paths./music/popular/tracks.get.parameters[3].description" = "Return items with given Network ID"
"paths./music/popular/tracks.get.parameters[3].in" = "query"
"paths./music/popular/tracks.get.parameters[3].name" = "network"
"paths./music/popular/tracks.get.parameters[3].required" = false
"paths./music/popular/tracks.get.parameters[3].type" = "string"
"paths./music/popular/tracks.get.parameters[4].description" = "Items with given Programme Pid"
"paths./music/popular/tracks.get.parameters[4].in" = "query"
"paths./music/popular/tracks.get.parameters[4].name" = "programme"
"paths./music/popular/tracks.get.parameters[4].required" = false
"paths./music/popular/tracks.get.parameters[4].type" = "string"
"paths./music/popular/tracks.get.parameters[5].description" = "MusicBrainz artist ID"
"paths./music/popular/tracks.get.parameters[5].in" = "query"
"paths./music/popular/tracks.get.parameters[5].name" = "artist"
"paths./music/popular/tracks.get.parameters[5].required" = false
"paths./music/popular/tracks.get.parameters[5].type" = "string"
"paths./music/popular/tracks.get.parameters[6].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/tracks.get.parameters[6].in" = "query"
"paths./music/popular/tracks.get.parameters[6].name" = "decomposed"
"paths./music/popular/tracks.get.parameters[6].required" = false
"paths./music/popular/tracks.get.parameters[6].type" = "boolean"
"paths./music/popular/tracks.get.parameters[7].description" = "Paginated results offset"
"paths./music/popular/tracks.get.parameters[7].in" = "query"
"paths./music/popular/tracks.get.parameters[7].name" = "offset"
"paths./music/popular/tracks.get.parameters[7].required" = false
"paths./music/popular/tracks.get.parameters[7].type" = "integer"
"paths./music/popular/tracks.get.parameters[8].description" = "Paginated results limit"
"paths./music/popular/tracks.get.parameters[8].in" = "query"
"paths./music/popular/tracks.get.parameters[8].name" = "limit"
"paths./music/popular/tracks.get.parameters[8].required" = false
"paths./music/popular/tracks.get.parameters[8].type" = "integer"
"paths./music/popular/tracks.get.responses.200.description" = "OK"
"paths./music/popular/tracks.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityTracks"
"paths./music/popular/tracks.get.responses.default.description" = "Unexpected error"
"paths./music/popular/tracks.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/tracks.get.schemes.length" = 1
"paths./music/popular/tracks.get.schemes[0]" = "http"
"paths./music/popular/tracks.get.summary" = "Popular Tracks"
"paths./music/popular/tracks.get.tags.length" = 1
"paths./music/popular/tracks.get.tags[0]" = "Music"
"paths./music/popular/tracks/{id}.get.description" = "Popular Track for BBC Music\n"
"paths./music/popular/tracks/{id}.get.operationId" = "getMusicPopularTrackById"
"paths./music/popular/tracks/{id}.get.parameters.length" = 8
"paths./music/popular/tracks/{id}.get.parameters[0].description" = "API_KEY"
"paths./music/popular/tracks/{id}.get.parameters[0].in" = "header"
"paths./music/popular/tracks/{id}.get.parameters[0].name" = "X-API-Key"
"paths./music/popular/tracks/{id}.get.parameters[0].required" = true
"paths./music/popular/tracks/{id}.get.parameters[0].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[1].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and now"
"paths./music/popular/tracks/{id}.get.parameters[1].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[1].name" = "since"
"paths./music/popular/tracks/{id}.get.parameters[1].required" = false
"paths./music/popular/tracks/{id}.get.parameters[1].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[2].description" = "ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and 'until' date params"
"paths./music/popular/tracks/{id}.get.parameters[2].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[2].name" = "until"
"paths./music/popular/tracks/{id}.get.parameters[2].required" = false
"paths./music/popular/tracks/{id}.get.parameters[2].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[3].description" = "Return items with given Network ID"
"paths./music/popular/tracks/{id}.get.parameters[3].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[3].name" = "network"
"paths./music/popular/tracks/{id}.get.parameters[3].required" = false
"paths./music/popular/tracks/{id}.get.parameters[3].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[4].description" = "Items with given Programme Pid"
"paths./music/popular/tracks/{id}.get.parameters[4].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[4].name" = "programme"
"paths./music/popular/tracks/{id}.get.parameters[4].required" = false
"paths./music/popular/tracks/{id}.get.parameters[4].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[5].description" = "MusicBrainz artist ID"
"paths./music/popular/tracks/{id}.get.parameters[5].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[5].name" = "artist"
"paths./music/popular/tracks/{id}.get.parameters[5].required" = false
"paths./music/popular/tracks/{id}.get.parameters[5].type" = "string"
"paths./music/popular/tracks/{id}.get.parameters[6].description" = "In addition to the overall score, return a list of scores broken down by day N.B Must be used in conjunction with since and/or until and since is >= 31 days"
"paths./music/popular/tracks/{id}.get.parameters[6].in" = "query"
"paths./music/popular/tracks/{id}.get.parameters[6].name" = "decomposed"
"paths./music/popular/tracks/{id}.get.parameters[6].required" = false
"paths./music/popular/tracks/{id}.get.parameters[6].type" = "boolean"
"paths./music/popular/tracks/{id}.get.parameters[7].description" = "BBC Music Track Id - Used to get single resource score"
"paths./music/popular/tracks/{id}.get.parameters[7].in" = "path"
"paths./music/popular/tracks/{id}.get.parameters[7].name" = "id"
"paths./music/popular/tracks/{id}.get.parameters[7].required" = true
"paths./music/popular/tracks/{id}.get.parameters[7].type" = "string"
"paths./music/popular/tracks/{id}.get.responses.200.description" = "OK"
"paths./music/popular/tracks/{id}.get.responses.200.schema.$ref" = "#/definitions/MusicPopularityTracks"
"paths./music/popular/tracks/{id}.get.responses.default.description" = "Unexpected error"
"paths./music/popular/tracks/{id}.get.responses.default.schema.$ref" = "#/definitions/MusicPopularityError"
"paths./music/popular/tracks/{id}.get.schemes.length" = 1
"paths./music/popular/tracks/{id}.get.schemes[0]" = "http"
"paths./music/popular/tracks/{id}.get.summary" = "Single Track Popularity"
"paths./music/popular/tracks/{id}.get.tags.length" = 1
"paths./music/popular/tracks/{id}.get.tags[0]" = "Music"
"paths./my/categories/follows.delete.parameters.length" = 3
"paths./my/categories/follows.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.delete.parameters[0].in" = "header"
"paths./my/categories/follows.delete.parameters[0].name" = "Authorization"
"paths./my/categories/follows.delete.parameters[0].required" = true
"paths./my/categories/follows.delete.parameters[0].type" = "string"
"paths./my/categories/follows.delete.parameters[1].description" = "API_KEY"
"paths./my/categories/follows.delete.parameters[1].in" = "header"
"paths./my/categories/follows.delete.parameters[1].name" = "X-API-Key"
"paths./my/categories/follows.delete.parameters[1].required" = true
"paths./my/categories/follows.delete.parameters[1].type" = "string"
"paths./my/categories/follows.delete.parameters[2].in" = "body"
"paths./my/categories/follows.delete.parameters[2].name" = "Body"
"paths./my/categories/follows.delete.parameters[2].required" = true
"paths./my/categories/follows.delete.parameters[2].schema.$ref" = "#/definitions/Body_1"
"paths./my/categories/follows.delete.responses.202.description" = "Request successfully sent to UAS."
"paths./my/categories/follows.delete.responses.400.description" = "The request was malformed."
"paths./my/categories/follows.delete.responses.400.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/categories/follows.delete.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/categories/follows.delete.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/categories/follows.delete.summary" = "Unfollow category"
"paths./my/categories/follows.delete.tags.length" = 1
"paths./my/categories/follows.delete.tags[0]" = "Personalised Categories"
"paths./my/categories/follows.get.description" = "List of followed categories for a given user.\n"
"paths./my/categories/follows.get.parameters.length" = 4
"paths./my/categories/follows.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.get.parameters[0].in" = "header"
"paths./my/categories/follows.get.parameters[0].name" = "Authorization"
"paths./my/categories/follows.get.parameters[0].required" = true
"paths./my/categories/follows.get.parameters[0].type" = "string"
"paths./my/categories/follows.get.parameters[1].description" = "API_KEY"
"paths./my/categories/follows.get.parameters[1].in" = "header"
"paths./my/categories/follows.get.parameters[1].name" = "X-API-Key"
"paths./my/categories/follows.get.parameters[1].required" = true
"paths./my/categories/follows.get.parameters[1].type" = "string"
"paths./my/categories/follows.get.parameters[2].description" = "Paginated results offset"
"paths./my/categories/follows.get.parameters[2].in" = "query"
"paths./my/categories/follows.get.parameters[2].name" = "offset"
"paths./my/categories/follows.get.parameters[2].required" = false
"paths./my/categories/follows.get.parameters[2].type" = "integer"
"paths./my/categories/follows.get.parameters[3].description" = "Paginated results limit"
"paths./my/categories/follows.get.parameters[3].in" = "query"
"paths./my/categories/follows.get.parameters[3].name" = "limit"
"paths./my/categories/follows.get.parameters[3].required" = false
"paths./my/categories/follows.get.parameters[3].type" = "integer"
"paths./my/categories/follows.get.responses.200.description" = "OK"
"paths./my/categories/follows.get.responses.200.schema.$ref" = "#/definitions/PersonalisedCategoriesResponse"
"paths./my/categories/follows.get.responses.default.description" = "Unexpected error"
"paths./my/categories/follows.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/categories/follows.get.summary" = "List of followed categories"
"paths./my/categories/follows.get.tags.length" = 1
"paths./my/categories/follows.get.tags[0]" = "Personalised Categories"
"paths./my/categories/follows.post.parameters.length" = 3
"paths./my/categories/follows.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/categories/follows.post.parameters[0].in" = "header"
"paths./my/categories/follows.post.parameters[0].name" = "Authorization"
"paths./my/categories/follows.post.parameters[0].required" = true
"paths./my/categories/follows.post.parameters[0].type" = "string"
"paths./my/categories/follows.post.parameters[1].description" = "API_KEY"
"paths./my/categories/follows.post.parameters[1].in" = "header"
"paths./my/categories/follows.post.parameters[1].name" = "X-API-Key"
"paths./my/categories/follows.post.parameters[1].required" = true
"paths./my/categories/follows.post.parameters[1].type" = "string"
"paths./my/categories/follows.post.parameters[2].in" = "body"
"paths./my/categories/follows.post.parameters[2].name" = "Body"
"paths./my/categories/follows.post.parameters[2].required" = true
"paths./my/categories/follows.post.parameters[2].schema.$ref" = "#/definitions/Body"
"paths./my/categories/follows.post.responses.202.description" = "Request successfully sent to UAS."
"paths./my/categories/follows.post.responses.400.description" = "The request was malformed."
"paths./my/categories/follows.post.responses.400.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/categories/follows.post.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/categories/follows.post.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/categories/follows.post.summary" = "Follow category"
"paths./my/categories/follows.post.tags.length" = 1
"paths./my/categories/follows.post.tags[0]" = "Personalised Categories"
"paths./my/music/export.get.description" = "Returns status of all previous third party export actions for a given BBC Music user.\n"
"paths./my/music/export.get.operationId" = "getMusicExport"
"paths./my/music/export.get.parameters.length" = 5
"paths./my/music/export.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/export.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/export.get.parameters[0].in" = "header"
"paths./my/music/export.get.parameters[0].name" = "Authorization"
"paths./my/music/export.get.parameters[0].required" = true
"paths./my/music/export.get.parameters[0].type" = "string"
"paths./my/music/export.get.parameters[1].default" = "idv5"
"paths./my/music/export.get.parameters[1].description" = "Authentication type"
"paths./my/music/export.get.parameters[1].in" = "header"
"paths./my/music/export.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/export.get.parameters[1].required" = true
"paths./my/music/export.get.parameters[1].type" = "string"
"paths./my/music/export.get.parameters[2].description" = "API_KEY"
"paths./my/music/export.get.parameters[2].in" = "header"
"paths./my/music/export.get.parameters[2].name" = "X-API-Key"
"paths./my/music/export.get.parameters[2].required" = true
"paths./my/music/export.get.parameters[2].type" = "string"
"paths./my/music/export.get.parameters[3].description" = "Paginated results offset"
"paths./my/music/export.get.parameters[3].in" = "query"
"paths./my/music/export.get.parameters[3].name" = "offset"
"paths./my/music/export.get.parameters[3].required" = false
"paths./my/music/export.get.parameters[3].type" = "integer"
"paths./my/music/export.get.parameters[4].description" = "Paginated results limit"
"paths./my/music/export.get.parameters[4].in" = "query"
"paths./my/music/export.get.parameters[4].name" = "limit"
"paths./my/music/export.get.parameters[4].required" = false
"paths./my/music/export.get.parameters[4].type" = "integer"
"paths./my/music/export.get.responses.200.description" = "OK"
"paths./my/music/export.get.responses.200.schema.$ref" = "#/definitions/MusicExportJob"
"paths./my/music/export.get.responses.default.description" = "Unexpected error"
"paths./my/music/export.get.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/export.get.summary" = "Music Exports"
"paths./my/music/export.get.tags.length" = 1
"paths./my/music/export.get.tags[0]" = "Music Export"
"paths./my/music/exports/jobs.get.description" = "All items associated to a users export request\n"
"paths./my/music/exports/jobs.get.operationId" = "getMusicExportJobs"
"paths./my/music/exports/jobs.get.parameters.length" = 5
"paths./my/music/exports/jobs.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/jobs.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/jobs.get.parameters[0].in" = "header"
"paths./my/music/exports/jobs.get.parameters[0].name" = "Authorization"
"paths./my/music/exports/jobs.get.parameters[0].required" = true
"paths./my/music/exports/jobs.get.parameters[0].type" = "string"
"paths./my/music/exports/jobs.get.parameters[1].default" = "idv5"
"paths./my/music/exports/jobs.get.parameters[1].description" = "Authentication type"
"paths./my/music/exports/jobs.get.parameters[1].in" = "header"
"paths./my/music/exports/jobs.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/exports/jobs.get.parameters[1].required" = true
"paths./my/music/exports/jobs.get.parameters[1].type" = "string"
"paths./my/music/exports/jobs.get.parameters[2].description" = "API_KEY"
"paths./my/music/exports/jobs.get.parameters[2].in" = "header"
"paths./my/music/exports/jobs.get.parameters[2].name" = "X-API-Key"
"paths./my/music/exports/jobs.get.parameters[2].required" = true
"paths./my/music/exports/jobs.get.parameters[2].type" = "string"
"paths./my/music/exports/jobs.get.parameters[3].description" = "Boolean age check"
"paths./my/music/exports/jobs.get.parameters[3].in" = "query"
"paths./my/music/exports/jobs.get.parameters[3].name" = "over16"
"paths./my/music/exports/jobs.get.parameters[3].required" = true
"paths./my/music/exports/jobs.get.parameters[3].type" = "boolean"
"paths./my/music/exports/jobs.get.parameters[4].description" = "Specify Vendor Jobs"
"paths./my/music/exports/jobs.get.parameters[4].enum.length" = 4
"paths./my/music/exports/jobs.get.parameters[4].enum[0]" = "spotify"
"paths./my/music/exports/jobs.get.parameters[4].enum[1]" = "deezer"
"paths./my/music/exports/jobs.get.parameters[4].enum[2]" = "youtube"
"paths./my/music/exports/jobs.get.parameters[4].enum[3]" = "itunes"
"paths./my/music/exports/jobs.get.parameters[4].in" = "query"
"paths./my/music/exports/jobs.get.parameters[4].name" = "vendor"
"paths./my/music/exports/jobs.get.parameters[4].required" = false
"paths./my/music/exports/jobs.get.parameters[4].type" = "string"
"paths./my/music/exports/jobs.get.responses.200.description" = "OK"
"paths./my/music/exports/jobs.get.responses.200.schema.$ref" = "#/definitions/MusicExportJob"
"paths./my/music/exports/jobs.get.responses.default.description" = "Unexpected error"
"paths./my/music/exports/jobs.get.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/exports/jobs.get.summary" = "Music Export Jobs"
"paths./my/music/exports/jobs.get.tags.length" = 1
"paths./my/music/exports/jobs.get.tags[0]" = "Music Export"
"paths./my/music/exports/jobs.post.description" = "Create Export Job for a user\n"
"paths./my/music/exports/jobs.post.operationId" = "postMusicExportJob"
"paths./my/music/exports/jobs.post.parameters.length" = 6
"paths./my/music/exports/jobs.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/jobs.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/jobs.post.parameters[0].in" = "header"
"paths./my/music/exports/jobs.post.parameters[0].name" = "Authorization"
"paths./my/music/exports/jobs.post.parameters[0].required" = true
"paths./my/music/exports/jobs.post.parameters[0].type" = "string"
"paths./my/music/exports/jobs.post.parameters[1].default" = "idv5"
"paths./my/music/exports/jobs.post.parameters[1].description" = "Authentication type"
"paths./my/music/exports/jobs.post.parameters[1].in" = "header"
"paths./my/music/exports/jobs.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/exports/jobs.post.parameters[1].required" = true
"paths./my/music/exports/jobs.post.parameters[1].type" = "string"
"paths./my/music/exports/jobs.post.parameters[2].description" = "API_KEY"
"paths./my/music/exports/jobs.post.parameters[2].in" = "header"
"paths./my/music/exports/jobs.post.parameters[2].name" = "X-API-Key"
"paths./my/music/exports/jobs.post.parameters[2].required" = true
"paths./my/music/exports/jobs.post.parameters[2].type" = "string"
"paths./my/music/exports/jobs.post.parameters[3].description" = "Boolean age check"
"paths./my/music/exports/jobs.post.parameters[3].in" = "query"
"paths./my/music/exports/jobs.post.parameters[3].name" = "over16"
"paths./my/music/exports/jobs.post.parameters[3].required" = true
"paths./my/music/exports/jobs.post.parameters[3].type" = "boolean"
"paths./my/music/exports/jobs.post.parameters[4].description" = "Specify Vendor Jobs"
"paths./my/music/exports/jobs.post.parameters[4].enum.length" = 4
"paths./my/music/exports/jobs.post.parameters[4].enum[0]" = "spotify"
"paths./my/music/exports/jobs.post.parameters[4].enum[1]" = "deezer"
"paths./my/music/exports/jobs.post.parameters[4].enum[2]" = "youtube"
"paths./my/music/exports/jobs.post.parameters[4].enum[3]" = "itunes"
"paths./my/music/exports/jobs.post.parameters[4].in" = "query"
"paths./my/music/exports/jobs.post.parameters[4].name" = "vendor"
"paths./my/music/exports/jobs.post.parameters[4].required" = false
"paths./my/music/exports/jobs.post.parameters[4].type" = "string"
"paths./my/music/exports/jobs.post.parameters[5].description" = ""
"paths./my/music/exports/jobs.post.parameters[5].in" = "body"
"paths./my/music/exports/jobs.post.parameters[5].name" = "body"
"paths./my/music/exports/jobs.post.parameters[5].required" = true
"paths./my/music/exports/jobs.post.parameters[5].schema.items.$ref" = "#/definitions/MusicExportJob"
"paths./my/music/exports/jobs.post.parameters[5].schema.type" = "array"
"paths./my/music/exports/jobs.post.responses.200.description" = "OK"
"paths./my/music/exports/jobs.post.responses.200.schema.$ref" = "#/definitions/MusicExportSuccess"
"paths./my/music/exports/jobs.post.responses.default.description" = "Unexpected error"
"paths./my/music/exports/jobs.post.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/exports/jobs.post.summary" = "Music Export Jobs"
"paths./my/music/exports/jobs.post.tags.length" = 1
"paths./my/music/exports/jobs.post.tags[0]" = "Music Export"
"paths./my/music/exports/tracks.get.description" = "Retrieves vendor and status specific tracks\n"
"paths./my/music/exports/tracks.get.operationId" = "getMusicExportTracks"
"paths./my/music/exports/tracks.get.parameters.length" = 8
"paths./my/music/exports/tracks.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/tracks.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/exports/tracks.get.parameters[0].in" = "header"
"paths./my/music/exports/tracks.get.parameters[0].name" = "Authorization"
"paths./my/music/exports/tracks.get.parameters[0].required" = true
"paths./my/music/exports/tracks.get.parameters[0].type" = "string"
"paths./my/music/exports/tracks.get.parameters[1].default" = "idv5"
"paths./my/music/exports/tracks.get.parameters[1].description" = "Authentication type"
"paths./my/music/exports/tracks.get.parameters[1].in" = "header"
"paths./my/music/exports/tracks.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/exports/tracks.get.parameters[1].required" = true
"paths./my/music/exports/tracks.get.parameters[1].type" = "string"
"paths./my/music/exports/tracks.get.parameters[2].description" = "API_KEY"
"paths./my/music/exports/tracks.get.parameters[2].in" = "header"
"paths./my/music/exports/tracks.get.parameters[2].name" = "X-API-Key"
"paths./my/music/exports/tracks.get.parameters[2].required" = true
"paths./my/music/exports/tracks.get.parameters[2].type" = "string"
"paths./my/music/exports/tracks.get.parameters[3].description" = "Boolean age check"
"paths./my/music/exports/tracks.get.parameters[3].in" = "query"
"paths./my/music/exports/tracks.get.parameters[3].name" = "over16"
"paths./my/music/exports/tracks.get.parameters[3].required" = true
"paths./my/music/exports/tracks.get.parameters[3].type" = "boolean"
"paths./my/music/exports/tracks.get.parameters[4].description" = "Paginated results offset"
"paths./my/music/exports/tracks.get.parameters[4].in" = "query"
"paths./my/music/exports/tracks.get.parameters[4].name" = "offset"
"paths./my/music/exports/tracks.get.parameters[4].required" = false
"paths./my/music/exports/tracks.get.parameters[4].type" = "integer"
"paths./my/music/exports/tracks.get.parameters[5].description" = "Paginated results limit"
"paths./my/music/exports/tracks.get.parameters[5].in" = "query"
"paths./my/music/exports/tracks.get.parameters[5].name" = "limit"
"paths./my/music/exports/tracks.get.parameters[5].required" = false
"paths./my/music/exports/tracks.get.parameters[5].type" = "integer"
"paths./my/music/exports/tracks.get.parameters[6].description" = "Specify Vendor Tracks"
"paths./my/music/exports/tracks.get.parameters[6].enum.length" = 4
"paths./my/music/exports/tracks.get.parameters[6].enum[0]" = "spotify"
"paths./my/music/exports/tracks.get.parameters[6].enum[1]" = "deezer"
"paths./my/music/exports/tracks.get.parameters[6].enum[2]" = "youtube"
"paths./my/music/exports/tracks.get.parameters[6].enum[3]" = "itunes"
"paths./my/music/exports/tracks.get.parameters[6].in" = "query"
"paths./my/music/exports/tracks.get.parameters[6].name" = "vendor"
"paths./my/music/exports/tracks.get.parameters[6].required" = false
"paths./my/music/exports/tracks.get.parameters[6].type" = "string"
"paths./my/music/exports/tracks.get.parameters[7].description" = "Specify Track status"
"paths./my/music/exports/tracks.get.parameters[7].enum.length" = 3
"paths./my/music/exports/tracks.get.parameters[7].enum[0]" = "failed"
"paths./my/music/exports/tracks.get.parameters[7].enum[1]" = "done"
"paths./my/music/exports/tracks.get.parameters[7].enum[2]" = "pending"
"paths./my/music/exports/tracks.get.parameters[7].in" = "query"
"paths./my/music/exports/tracks.get.parameters[7].name" = "status"
"paths./my/music/exports/tracks.get.parameters[7].required" = false
"paths./my/music/exports/tracks.get.parameters[7].type" = "string"
"paths./my/music/exports/tracks.get.responses.200.description" = "OK"
"paths./my/music/exports/tracks.get.responses.200.schema.$ref" = "#/definitions/MusicExportJob"
"paths./my/music/exports/tracks.get.responses.default.description" = "Unexpected error"
"paths./my/music/exports/tracks.get.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/exports/tracks.get.summary" = "Music Export Tracks"
"paths./my/music/exports/tracks.get.tags.length" = 1
"paths./my/music/exports/tracks.get.tags[0]" = "Music Export"
"paths./my/music/favourites.get.description" = "List of favourited tracks and clips for a given user for BBC Music.\n"
"paths./my/music/favourites.get.operationId" = "getPersonalisedMusicFavourites"
"paths./my/music/favourites.get.parameters.length" = 7
"paths./my/music/favourites.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.get.parameters[0].in" = "header"
"paths./my/music/favourites.get.parameters[0].name" = "Authorization"
"paths./my/music/favourites.get.parameters[0].required" = true
"paths./my/music/favourites.get.parameters[0].type" = "string"
"paths./my/music/favourites.get.parameters[1].default" = "idv5"
"paths./my/music/favourites.get.parameters[1].description" = "Authentication type"
"paths./my/music/favourites.get.parameters[1].in" = "header"
"paths./my/music/favourites.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites.get.parameters[1].required" = true
"paths./my/music/favourites.get.parameters[1].type" = "string"
"paths./my/music/favourites.get.parameters[2].description" = "API_KEY"
"paths./my/music/favourites.get.parameters[2].in" = "header"
"paths./my/music/favourites.get.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites.get.parameters[2].required" = true
"paths./my/music/favourites.get.parameters[2].type" = "string"
"paths./my/music/favourites.get.parameters[3].description" = "Paginated results offset"
"paths./my/music/favourites.get.parameters[3].in" = "query"
"paths./my/music/favourites.get.parameters[3].name" = "offset"
"paths./my/music/favourites.get.parameters[3].required" = false
"paths./my/music/favourites.get.parameters[3].type" = "integer"
"paths./my/music/favourites.get.parameters[4].description" = "Paginated results limit"
"paths./my/music/favourites.get.parameters[4].in" = "query"
"paths./my/music/favourites.get.parameters[4].name" = "limit"
"paths./my/music/favourites.get.parameters[4].required" = false
"paths./my/music/favourites.get.parameters[4].type" = "integer"
"paths./my/music/favourites.get.parameters[5].description" = "Filters activities based on the type of action"
"paths./my/music/favourites.get.parameters[5].enum.length" = 2
"paths./my/music/favourites.get.parameters[5].enum[0]" = "favourited"
"paths./my/music/favourites.get.parameters[5].enum[1]" = "unfavourited"
"paths./my/music/favourites.get.parameters[5].in" = "query"
"paths./my/music/favourites.get.parameters[5].name" = "action"
"paths./my/music/favourites.get.parameters[5].required" = false
"paths./my/music/favourites.get.parameters[5].type" = "string"
"paths./my/music/favourites.get.parameters[6].description" = "Omits music data from the response, defaults to true"
"paths./my/music/favourites.get.parameters[6].in" = "query"
"paths./my/music/favourites.get.parameters[6].name" = "music-data"
"paths./my/music/favourites.get.parameters[6].required" = false
"paths./my/music/favourites.get.parameters[6].type" = "boolean"
"paths./my/music/favourites.get.responses.200.description" = "OK"
"paths./my/music/favourites.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/favourites.get.responses.default.description" = "Unexpected error"
"paths./my/music/favourites.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites.get.summary" = "Favourite Tracks or Clips"
"paths./my/music/favourites.get.tags.length" = 1
"paths./my/music/favourites.get.tags[0]" = "Music"
"paths./my/music/favourites.post.description" = "Add multiple tracks and/or clips to a BBC Music user's favourites.\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/favourites.post.operationId" = "postPersonalisedMusicFavouritesBatch"
"paths./my/music/favourites.post.parameters.length" = 4
"paths./my/music/favourites.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.post.parameters[0].in" = "header"
"paths./my/music/favourites.post.parameters[0].name" = "Authorization"
"paths./my/music/favourites.post.parameters[0].required" = true
"paths./my/music/favourites.post.parameters[0].type" = "string"
"paths./my/music/favourites.post.parameters[1].default" = "idv5"
"paths./my/music/favourites.post.parameters[1].description" = "Authentication type"
"paths./my/music/favourites.post.parameters[1].in" = "header"
"paths./my/music/favourites.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites.post.parameters[1].required" = true
"paths./my/music/favourites.post.parameters[1].type" = "string"
"paths./my/music/favourites.post.parameters[2].description" = "API_KEY"
"paths./my/music/favourites.post.parameters[2].in" = "header"
"paths./my/music/favourites.post.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites.post.parameters[2].required" = true
"paths./my/music/favourites.post.parameters[2].type" = "string"
"paths./my/music/favourites.post.parameters[3].description" = "Action favourited or unfavourited"
"paths./my/music/favourites.post.parameters[3].in" = "body"
"paths./my/music/favourites.post.parameters[3].name" = "body"
"paths./my/music/favourites.post.parameters[3].required" = true
"paths./my/music/favourites.post.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedMusicBatchRequest"
"paths./my/music/favourites.post.parameters[3].schema.type" = "array"
"paths./my/music/favourites.post.responses.200.description" = "OK"
"paths./my/music/favourites.post.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/favourites.post.responses.default.description" = "Unexpected error"
"paths./my/music/favourites.post.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites.post.summary" = "Favourite Tracks or Clips"
"paths./my/music/favourites.post.tags.length" = 1
"paths./my/music/favourites.post.tags[0]" = "Music"
"paths./my/music/favourites.put.description" = "Update tracks or clips from a BBC Music user favourites.\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/favourites.put.operationId" = "putPersonalisedMusicFavouritesBatch"
"paths./my/music/favourites.put.parameters.length" = 4
"paths./my/music/favourites.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites.put.parameters[0].in" = "header"
"paths./my/music/favourites.put.parameters[0].name" = "Authorization"
"paths./my/music/favourites.put.parameters[0].required" = true
"paths./my/music/favourites.put.parameters[0].type" = "string"
"paths./my/music/favourites.put.parameters[1].default" = "idv5"
"paths./my/music/favourites.put.parameters[1].description" = "Authentication type"
"paths./my/music/favourites.put.parameters[1].in" = "header"
"paths./my/music/favourites.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites.put.parameters[1].required" = true
"paths./my/music/favourites.put.parameters[1].type" = "string"
"paths./my/music/favourites.put.parameters[2].description" = "API_KEY"
"paths./my/music/favourites.put.parameters[2].in" = "header"
"paths./my/music/favourites.put.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites.put.parameters[2].required" = true
"paths./my/music/favourites.put.parameters[2].type" = "string"
"paths./my/music/favourites.put.parameters[3].description" = "Action favourited or unfavourited"
"paths./my/music/favourites.put.parameters[3].in" = "body"
"paths./my/music/favourites.put.parameters[3].name" = "body"
"paths./my/music/favourites.put.parameters[3].required" = true
"paths./my/music/favourites.put.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedMusicBatchRequest"
"paths./my/music/favourites.put.parameters[3].schema.type" = "array"
"paths./my/music/favourites.put.responses.200.description" = "OK"
"paths./my/music/favourites.put.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/favourites.put.responses.default.description" = "Unexpected error"
"paths./my/music/favourites.put.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites.put.summary" = "Favourite Tracks or Clips"
"paths./my/music/favourites.put.tags.length" = 1
"paths./my/music/favourites.put.tags[0]" = "Music"
"paths./my/music/favourites/{type}.get.description" = "List of favourited tracks or clips for a given user for BBC Music.\n"
"paths./my/music/favourites/{type}.get.operationId" = "getPersonalisedMusicFavouritesByType"
"paths./my/music/favourites/{type}.get.parameters.length" = 7
"paths./my/music/favourites/{type}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}.get.parameters[0].in" = "header"
"paths./my/music/favourites/{type}.get.parameters[0].name" = "Authorization"
"paths./my/music/favourites/{type}.get.parameters[0].required" = true
"paths./my/music/favourites/{type}.get.parameters[0].type" = "string"
"paths./my/music/favourites/{type}.get.parameters[1].default" = "idv5"
"paths./my/music/favourites/{type}.get.parameters[1].description" = "Authentication type"
"paths./my/music/favourites/{type}.get.parameters[1].in" = "header"
"paths./my/music/favourites/{type}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites/{type}.get.parameters[1].required" = true
"paths./my/music/favourites/{type}.get.parameters[1].type" = "string"
"paths./my/music/favourites/{type}.get.parameters[2].description" = "API_KEY"
"paths./my/music/favourites/{type}.get.parameters[2].in" = "header"
"paths./my/music/favourites/{type}.get.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites/{type}.get.parameters[2].required" = true
"paths./my/music/favourites/{type}.get.parameters[2].type" = "string"
"paths./my/music/favourites/{type}.get.parameters[3].description" = "Supported Music favourite types: Clips or Tracks"
"paths./my/music/favourites/{type}.get.parameters[3].enum.length" = 2
"paths./my/music/favourites/{type}.get.parameters[3].enum[0]" = "clips"
"paths./my/music/favourites/{type}.get.parameters[3].enum[1]" = "tracks"
"paths./my/music/favourites/{type}.get.parameters[3].in" = "path"
"paths./my/music/favourites/{type}.get.parameters[3].name" = "type"
"paths./my/music/favourites/{type}.get.parameters[3].required" = true
"paths./my/music/favourites/{type}.get.parameters[3].type" = "string"
"paths./my/music/favourites/{type}.get.parameters[4].description" = "Filters activities based on the type of action"
"paths./my/music/favourites/{type}.get.parameters[4].enum.length" = 2
"paths./my/music/favourites/{type}.get.parameters[4].enum[0]" = "favourited"
"paths./my/music/favourites/{type}.get.parameters[4].enum[1]" = "unfavourited"
"paths./my/music/favourites/{type}.get.parameters[4].in" = "query"
"paths./my/music/favourites/{type}.get.parameters[4].name" = "action"
"paths./my/music/favourites/{type}.get.parameters[4].required" = false
"paths./my/music/favourites/{type}.get.parameters[4].type" = "string"
"paths./my/music/favourites/{type}.get.parameters[5].description" = "Paginated results offset"
"paths./my/music/favourites/{type}.get.parameters[5].in" = "query"
"paths./my/music/favourites/{type}.get.parameters[5].name" = "offset"
"paths./my/music/favourites/{type}.get.parameters[5].required" = false
"paths./my/music/favourites/{type}.get.parameters[5].type" = "integer"
"paths./my/music/favourites/{type}.get.parameters[6].description" = "Paginated results limit"
"paths./my/music/favourites/{type}.get.parameters[6].in" = "query"
"paths./my/music/favourites/{type}.get.parameters[6].name" = "limit"
"paths./my/music/favourites/{type}.get.parameters[6].required" = false
"paths./my/music/favourites/{type}.get.parameters[6].type" = "integer"
"paths./my/music/favourites/{type}.get.responses.200.description" = "OK"
"paths./my/music/favourites/{type}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/favourites/{type}.get.responses.default.description" = "Unexpected error"
"paths./my/music/favourites/{type}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites/{type}.get.summary" = "Favourite Tracks or Clips by Type"
"paths./my/music/favourites/{type}.get.tags.length" = 1
"paths./my/music/favourites/{type}.get.tags[0]" = "Music"
"paths./my/music/favourites/{type}/{id}.delete.description" = "Delete track or clip from a BBC Music user favourites.\n"
"paths./my/music/favourites/{type}/{id}.delete.operationId" = "deletePersonalisedMusicFavouritesByTypeById"
"paths./my/music/favourites/{type}/{id}.delete.parameters.length" = 5
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].in" = "header"
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].name" = "Authorization"
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].required" = true
"paths./my/music/favourites/{type}/{id}.delete.parameters[0].type" = "string"
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].default" = "idv5"
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].description" = "Authentication type"
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].in" = "header"
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].required" = true
"paths./my/music/favourites/{type}/{id}.delete.parameters[1].type" = "string"
"paths./my/music/favourites/{type}/{id}.delete.parameters[2].description" = "API_KEY"
"paths./my/music/favourites/{type}/{id}.delete.parameters[2].in" = "header"
"paths./my/music/favourites/{type}/{id}.delete.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites/{type}/{id}.delete.parameters[2].required" = true
"paths./my/music/favourites/{type}/{id}.delete.parameters[2].type" = "string"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].description" = "Supported Music favourite types: Clips or Tracks"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].enum.length" = 2
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].enum[0]" = "clips"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].enum[1]" = "tracks"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].in" = "path"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].name" = "type"
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].required" = true
"paths./my/music/favourites/{type}/{id}.delete.parameters[3].type" = "string"
"paths./my/music/favourites/{type}/{id}.delete.parameters[4].description" = "Clip PID or Track ID"
"paths./my/music/favourites/{type}/{id}.delete.parameters[4].in" = "path"
"paths./my/music/favourites/{type}/{id}.delete.parameters[4].name" = "id"
"paths./my/music/favourites/{type}/{id}.delete.parameters[4].required" = true
"paths./my/music/favourites/{type}/{id}.delete.parameters[4].type" = "string"
"paths./my/music/favourites/{type}/{id}.delete.responses.200.description" = "OK"
"paths./my/music/favourites/{type}/{id}.delete.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/favourites/{type}/{id}.delete.responses.default.description" = "Unexpected error"
"paths./my/music/favourites/{type}/{id}.delete.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites/{type}/{id}.delete.summary" = "Favourite Track or Clip"
"paths./my/music/favourites/{type}/{id}.delete.tags.length" = 1
"paths./my/music/favourites/{type}/{id}.delete.tags[0]" = "Music"
"paths./my/music/favourites/{type}/{id}.get.description" = "Check to see if a single track or clip entity is in a users favourites - determines UX of add button.\n"
"paths./my/music/favourites/{type}/{id}.get.operationId" = "getPersonalisedMusicFavouritesByTypeById"
"paths./my/music/favourites/{type}/{id}.get.parameters.length" = 5
"paths./my/music/favourites/{type}/{id}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.get.parameters[0].in" = "header"
"paths./my/music/favourites/{type}/{id}.get.parameters[0].name" = "Authorization"
"paths./my/music/favourites/{type}/{id}.get.parameters[0].required" = true
"paths./my/music/favourites/{type}/{id}.get.parameters[0].type" = "string"
"paths./my/music/favourites/{type}/{id}.get.parameters[1].default" = "idv5"
"paths./my/music/favourites/{type}/{id}.get.parameters[1].description" = "Authentication type"
"paths./my/music/favourites/{type}/{id}.get.parameters[1].in" = "header"
"paths./my/music/favourites/{type}/{id}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites/{type}/{id}.get.parameters[1].required" = true
"paths./my/music/favourites/{type}/{id}.get.parameters[1].type" = "string"
"paths./my/music/favourites/{type}/{id}.get.parameters[2].description" = "API_KEY"
"paths./my/music/favourites/{type}/{id}.get.parameters[2].in" = "header"
"paths./my/music/favourites/{type}/{id}.get.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites/{type}/{id}.get.parameters[2].required" = true
"paths./my/music/favourites/{type}/{id}.get.parameters[2].type" = "string"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].description" = "Supported Music favourite types: Clips or Tracks"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].enum.length" = 2
"paths./my/music/favourites/{type}/{id}.get.parameters[3].enum[0]" = "clips"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].enum[1]" = "tracks"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].in" = "path"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].name" = "type"
"paths./my/music/favourites/{type}/{id}.get.parameters[3].required" = true
"paths./my/music/favourites/{type}/{id}.get.parameters[3].type" = "string"
"paths./my/music/favourites/{type}/{id}.get.parameters[4].description" = "Clip PID or Track ID"
"paths./my/music/favourites/{type}/{id}.get.parameters[4].in" = "path"
"paths./my/music/favourites/{type}/{id}.get.parameters[4].name" = "id"
"paths./my/music/favourites/{type}/{id}.get.parameters[4].required" = true
"paths./my/music/favourites/{type}/{id}.get.parameters[4].type" = "string"
"paths./my/music/favourites/{type}/{id}.get.responses.200.description" = "OK"
"paths./my/music/favourites/{type}/{id}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/favourites/{type}/{id}.get.responses.default.description" = "Unexpected error"
"paths./my/music/favourites/{type}/{id}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites/{type}/{id}.get.summary" = "Favourite Track or Clip"
"paths./my/music/favourites/{type}/{id}.get.tags.length" = 1
"paths./my/music/favourites/{type}/{id}.get.tags[0]" = "Music"
"paths./my/music/favourites/{type}/{id}.post.description" = "Add track or clip to a BBC Music user favourites.\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/favourites/{type}/{id}.post.operationId" = "postPersonalisedMusicFavouritesByTypeById"
"paths./my/music/favourites/{type}/{id}.post.parameters.length" = 6
"paths./my/music/favourites/{type}/{id}.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.post.parameters[0].in" = "header"
"paths./my/music/favourites/{type}/{id}.post.parameters[0].name" = "Authorization"
"paths./my/music/favourites/{type}/{id}.post.parameters[0].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[0].type" = "string"
"paths./my/music/favourites/{type}/{id}.post.parameters[1].default" = "idv5"
"paths./my/music/favourites/{type}/{id}.post.parameters[1].description" = "Authentication type"
"paths./my/music/favourites/{type}/{id}.post.parameters[1].in" = "header"
"paths./my/music/favourites/{type}/{id}.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites/{type}/{id}.post.parameters[1].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[1].type" = "string"
"paths./my/music/favourites/{type}/{id}.post.parameters[2].description" = "API_KEY"
"paths./my/music/favourites/{type}/{id}.post.parameters[2].in" = "header"
"paths./my/music/favourites/{type}/{id}.post.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites/{type}/{id}.post.parameters[2].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[2].type" = "string"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].description" = "Supported Music favourite types: Clips or Tracks"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].enum.length" = 2
"paths./my/music/favourites/{type}/{id}.post.parameters[3].enum[0]" = "clips"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].enum[1]" = "tracks"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].in" = "path"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].name" = "type"
"paths./my/music/favourites/{type}/{id}.post.parameters[3].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[3].type" = "string"
"paths./my/music/favourites/{type}/{id}.post.parameters[4].description" = "Clip PID or Track ID"
"paths./my/music/favourites/{type}/{id}.post.parameters[4].in" = "path"
"paths./my/music/favourites/{type}/{id}.post.parameters[4].name" = "id"
"paths./my/music/favourites/{type}/{id}.post.parameters[4].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[4].type" = "string"
"paths./my/music/favourites/{type}/{id}.post.parameters[5].description" = "Action favourited or unfavourited"
"paths./my/music/favourites/{type}/{id}.post.parameters[5].in" = "body"
"paths./my/music/favourites/{type}/{id}.post.parameters[5].name" = "body"
"paths./my/music/favourites/{type}/{id}.post.parameters[5].required" = true
"paths./my/music/favourites/{type}/{id}.post.parameters[5].schema.$ref" = "#/definitions/PersonalisedMusicRequest"
"paths./my/music/favourites/{type}/{id}.post.responses.200.description" = "OK"
"paths./my/music/favourites/{type}/{id}.post.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/favourites/{type}/{id}.post.responses.default.description" = "Unexpected error"
"paths./my/music/favourites/{type}/{id}.post.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites/{type}/{id}.post.summary" = "Favourite Track or Clip"
"paths./my/music/favourites/{type}/{id}.post.tags.length" = 1
"paths./my/music/favourites/{type}/{id}.post.tags[0]" = "Music"
"paths./my/music/favourites/{type}/{id}.put.description" = "Update tracks or clips from a BBC Music user favourites.\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/favourites/{type}/{id}.put.operationId" = "putPersonalisedMusicFavouritesByTypeById"
"paths./my/music/favourites/{type}/{id}.put.parameters.length" = 6
"paths./my/music/favourites/{type}/{id}.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/favourites/{type}/{id}.put.parameters[0].in" = "header"
"paths./my/music/favourites/{type}/{id}.put.parameters[0].name" = "Authorization"
"paths./my/music/favourites/{type}/{id}.put.parameters[0].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[0].type" = "string"
"paths./my/music/favourites/{type}/{id}.put.parameters[1].default" = "idv5"
"paths./my/music/favourites/{type}/{id}.put.parameters[1].description" = "Authentication type"
"paths./my/music/favourites/{type}/{id}.put.parameters[1].in" = "header"
"paths./my/music/favourites/{type}/{id}.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/favourites/{type}/{id}.put.parameters[1].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[1].type" = "string"
"paths./my/music/favourites/{type}/{id}.put.parameters[2].description" = "API_KEY"
"paths./my/music/favourites/{type}/{id}.put.parameters[2].in" = "header"
"paths./my/music/favourites/{type}/{id}.put.parameters[2].name" = "X-API-Key"
"paths./my/music/favourites/{type}/{id}.put.parameters[2].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[2].type" = "string"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].description" = "Supported Music favourite types: Clips or Tracks"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].enum.length" = 2
"paths./my/music/favourites/{type}/{id}.put.parameters[3].enum[0]" = "clips"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].enum[1]" = "tracks"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].in" = "path"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].name" = "type"
"paths./my/music/favourites/{type}/{id}.put.parameters[3].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[3].type" = "string"
"paths./my/music/favourites/{type}/{id}.put.parameters[4].description" = "Clip PID or Track ID"
"paths./my/music/favourites/{type}/{id}.put.parameters[4].in" = "path"
"paths./my/music/favourites/{type}/{id}.put.parameters[4].name" = "id"
"paths./my/music/favourites/{type}/{id}.put.parameters[4].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[4].type" = "string"
"paths./my/music/favourites/{type}/{id}.put.parameters[5].description" = "Action favourited or unfavourited"
"paths./my/music/favourites/{type}/{id}.put.parameters[5].in" = "body"
"paths./my/music/favourites/{type}/{id}.put.parameters[5].name" = "body"
"paths./my/music/favourites/{type}/{id}.put.parameters[5].required" = true
"paths./my/music/favourites/{type}/{id}.put.parameters[5].schema.$ref" = "#/definitions/PersonalisedMusicRequest"
"paths./my/music/favourites/{type}/{id}.put.responses.200.description" = "OK"
"paths./my/music/favourites/{type}/{id}.put.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/favourites/{type}/{id}.put.responses.default.description" = "Unexpected error"
"paths./my/music/favourites/{type}/{id}.put.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/favourites/{type}/{id}.put.summary" = "Favourite Track or Clip"
"paths./my/music/favourites/{type}/{id}.put.tags.length" = 1
"paths./my/music/favourites/{type}/{id}.put.tags[0]" = "Music"
"paths./my/music/follows.get.description" = "List of followed networks, categories, artists, playlists and genres for a given user for BBC Music.\n"
"paths./my/music/follows.get.operationId" = "getPersonalisedMusicFollows"
"paths./my/music/follows.get.parameters.length" = 9
"paths./my/music/follows.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.get.parameters[0].in" = "header"
"paths./my/music/follows.get.parameters[0].name" = "Authorization"
"paths./my/music/follows.get.parameters[0].required" = true
"paths./my/music/follows.get.parameters[0].type" = "string"
"paths./my/music/follows.get.parameters[1].default" = "idv5"
"paths./my/music/follows.get.parameters[1].description" = "Authentication type"
"paths./my/music/follows.get.parameters[1].in" = "header"
"paths./my/music/follows.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows.get.parameters[1].required" = true
"paths./my/music/follows.get.parameters[1].type" = "string"
"paths./my/music/follows.get.parameters[2].description" = "API_KEY"
"paths./my/music/follows.get.parameters[2].in" = "header"
"paths./my/music/follows.get.parameters[2].name" = "X-API-Key"
"paths./my/music/follows.get.parameters[2].required" = true
"paths./my/music/follows.get.parameters[2].type" = "string"
"paths./my/music/follows.get.parameters[3].description" = "Filters activities based on the type of action"
"paths./my/music/follows.get.parameters[3].enum.length" = 2
"paths./my/music/follows.get.parameters[3].enum[0]" = "followed"
"paths./my/music/follows.get.parameters[3].enum[1]" = "unfollowed"
"paths./my/music/follows.get.parameters[3].in" = "query"
"paths./my/music/follows.get.parameters[3].name" = "action"
"paths./my/music/follows.get.parameters[3].required" = false
"paths./my/music/follows.get.parameters[3].type" = "string"
"paths./my/music/follows.get.parameters[4].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows.get.parameters[4].in" = "query"
"paths./my/music/follows.get.parameters[4].name" = "music-data"
"paths./my/music/follows.get.parameters[4].required" = false
"paths./my/music/follows.get.parameters[4].type" = "boolean"
"paths./my/music/follows.get.parameters[5].description" = "Specify context to be passed to Music API"
"paths./my/music/follows.get.parameters[5].enum.length" = 7
"paths./my/music/follows.get.parameters[5].enum[0]" = "events"
"paths./my/music/follows.get.parameters[5].enum[1]" = "ivote"
"paths./my/music/follows.get.parameters[5].enum[2]" = "music"
"paths./my/music/follows.get.parameters[5].enum[3]" = "musicplaylist"
"paths./my/music/follows.get.parameters[5].enum[4]" = "programmes"
"paths./my/music/follows.get.parameters[5].enum[5]" = "radio"
"paths./my/music/follows.get.parameters[5].enum[6]" = "unknown"
"paths./my/music/follows.get.parameters[5].in" = "query"
"paths./my/music/follows.get.parameters[5].name" = "music_context"
"paths./my/music/follows.get.parameters[5].required" = false
"paths./my/music/follows.get.parameters[5].type" = "string"
"paths./my/music/follows.get.parameters[6].description" = "Specify location to be passed to Music API"
"paths./my/music/follows.get.parameters[6].in" = "query"
"paths./my/music/follows.get.parameters[6].name" = "music_within_uk"
"paths./my/music/follows.get.parameters[6].required" = false
"paths./my/music/follows.get.parameters[6].type" = "boolean"
"paths./my/music/follows.get.parameters[7].description" = "Paginated results offset"
"paths./my/music/follows.get.parameters[7].in" = "query"
"paths./my/music/follows.get.parameters[7].name" = "offset"
"paths./my/music/follows.get.parameters[7].required" = false
"paths./my/music/follows.get.parameters[7].type" = "integer"
"paths./my/music/follows.get.parameters[8].description" = "Paginated results limit"
"paths./my/music/follows.get.parameters[8].in" = "query"
"paths./my/music/follows.get.parameters[8].name" = "limit"
"paths./my/music/follows.get.parameters[8].required" = false
"paths./my/music/follows.get.parameters[8].type" = "integer"
"paths./my/music/follows.get.responses.200.description" = "OK"
"paths./my/music/follows.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/follows.get.responses.default.description" = "Unexpected error"
"paths./my/music/follows.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows.get.summary" = "Followed Networks, Categories, Artists, Playlists and Genres"
"paths./my/music/follows.get.tags.length" = 1
"paths./my/music/follows.get.tags[0]" = "Music"
"paths./my/music/follows.post.description" = "Add networks, categories, artists, playlists, networks, genres or services in a users follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/follows.post.operationId" = "postPersonalisedMusicFollowsBatch"
"paths./my/music/follows.post.parameters.length" = 8
"paths./my/music/follows.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.post.parameters[0].in" = "header"
"paths./my/music/follows.post.parameters[0].name" = "Authorization"
"paths./my/music/follows.post.parameters[0].required" = true
"paths./my/music/follows.post.parameters[0].type" = "string"
"paths./my/music/follows.post.parameters[1].default" = "idv5"
"paths./my/music/follows.post.parameters[1].description" = "Authentication type"
"paths./my/music/follows.post.parameters[1].in" = "header"
"paths./my/music/follows.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows.post.parameters[1].required" = true
"paths./my/music/follows.post.parameters[1].type" = "string"
"paths./my/music/follows.post.parameters[2].description" = "API_KEY"
"paths./my/music/follows.post.parameters[2].in" = "header"
"paths./my/music/follows.post.parameters[2].name" = "X-API-Key"
"paths./my/music/follows.post.parameters[2].required" = true
"paths./my/music/follows.post.parameters[2].type" = "string"
"paths./my/music/follows.post.parameters[3].description" = "Filters activities based on the type of action"
"paths./my/music/follows.post.parameters[3].enum.length" = 2
"paths./my/music/follows.post.parameters[3].enum[0]" = "followed"
"paths./my/music/follows.post.parameters[3].enum[1]" = "unfollowed"
"paths./my/music/follows.post.parameters[3].in" = "query"
"paths./my/music/follows.post.parameters[3].name" = "action"
"paths./my/music/follows.post.parameters[3].required" = false
"paths./my/music/follows.post.parameters[3].type" = "string"
"paths./my/music/follows.post.parameters[4].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows.post.parameters[4].in" = "query"
"paths./my/music/follows.post.parameters[4].name" = "music-data"
"paths./my/music/follows.post.parameters[4].required" = false
"paths./my/music/follows.post.parameters[4].type" = "boolean"
"paths./my/music/follows.post.parameters[5].description" = "Specify context to be passed to Music API"
"paths./my/music/follows.post.parameters[5].enum.length" = 7
"paths./my/music/follows.post.parameters[5].enum[0]" = "events"
"paths./my/music/follows.post.parameters[5].enum[1]" = "ivote"
"paths./my/music/follows.post.parameters[5].enum[2]" = "music"
"paths./my/music/follows.post.parameters[5].enum[3]" = "musicplaylist"
"paths./my/music/follows.post.parameters[5].enum[4]" = "programmes"
"paths./my/music/follows.post.parameters[5].enum[5]" = "radio"
"paths./my/music/follows.post.parameters[5].enum[6]" = "unknown"
"paths./my/music/follows.post.parameters[5].in" = "query"
"paths./my/music/follows.post.parameters[5].name" = "music_context"
"paths./my/music/follows.post.parameters[5].required" = false
"paths./my/music/follows.post.parameters[5].type" = "string"
"paths./my/music/follows.post.parameters[6].description" = "Specify location to be passed to Music API"
"paths./my/music/follows.post.parameters[6].in" = "query"
"paths./my/music/follows.post.parameters[6].name" = "music_within_uk"
"paths./my/music/follows.post.parameters[6].required" = false
"paths./my/music/follows.post.parameters[6].type" = "boolean"
"paths./my/music/follows.post.parameters[7].description" = "Action followed or unfollowed"
"paths./my/music/follows.post.parameters[7].in" = "body"
"paths./my/music/follows.post.parameters[7].name" = "body"
"paths./my/music/follows.post.parameters[7].required" = true
"paths./my/music/follows.post.parameters[7].schema.items.$ref" = "#/definitions/PersonalisedMusicBatchRequest"
"paths./my/music/follows.post.parameters[7].schema.type" = "array"
"paths./my/music/follows.post.responses.200.description" = "OK"
"paths./my/music/follows.post.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/follows.post.responses.default.description" = "Unexpected error"
"paths./my/music/follows.post.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows.post.summary" = "Followed Networks, Categories, Artists, Playlists and Genres"
"paths./my/music/follows.post.tags.length" = 1
"paths./my/music/follows.post.tags[0]" = "Music"
"paths./my/music/follows.put.description" = "Update networks, categories, artists, playlists, networks, genres or services in a users follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/follows.put.operationId" = "putPersonalisedMusicFollowsBatch"
"paths./my/music/follows.put.parameters.length" = 8
"paths./my/music/follows.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows.put.parameters[0].in" = "header"
"paths./my/music/follows.put.parameters[0].name" = "Authorization"
"paths./my/music/follows.put.parameters[0].required" = true
"paths./my/music/follows.put.parameters[0].type" = "string"
"paths./my/music/follows.put.parameters[1].default" = "idv5"
"paths./my/music/follows.put.parameters[1].description" = "Authentication type"
"paths./my/music/follows.put.parameters[1].in" = "header"
"paths./my/music/follows.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows.put.parameters[1].required" = true
"paths./my/music/follows.put.parameters[1].type" = "string"
"paths./my/music/follows.put.parameters[2].description" = "API_KEY"
"paths./my/music/follows.put.parameters[2].in" = "header"
"paths./my/music/follows.put.parameters[2].name" = "X-API-Key"
"paths./my/music/follows.put.parameters[2].required" = true
"paths./my/music/follows.put.parameters[2].type" = "string"
"paths./my/music/follows.put.parameters[3].description" = "Filters activities based on the type of action"
"paths./my/music/follows.put.parameters[3].enum.length" = 2
"paths./my/music/follows.put.parameters[3].enum[0]" = "followed"
"paths./my/music/follows.put.parameters[3].enum[1]" = "unfollowed"
"paths./my/music/follows.put.parameters[3].in" = "query"
"paths./my/music/follows.put.parameters[3].name" = "action"
"paths./my/music/follows.put.parameters[3].required" = false
"paths./my/music/follows.put.parameters[3].type" = "string"
"paths./my/music/follows.put.parameters[4].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows.put.parameters[4].in" = "query"
"paths./my/music/follows.put.parameters[4].name" = "music-data"
"paths./my/music/follows.put.parameters[4].required" = false
"paths./my/music/follows.put.parameters[4].type" = "boolean"
"paths./my/music/follows.put.parameters[5].description" = "Specify context to be passed to Music API"
"paths./my/music/follows.put.parameters[5].enum.length" = 7
"paths./my/music/follows.put.parameters[5].enum[0]" = "events"
"paths./my/music/follows.put.parameters[5].enum[1]" = "ivote"
"paths./my/music/follows.put.parameters[5].enum[2]" = "music"
"paths./my/music/follows.put.parameters[5].enum[3]" = "musicplaylist"
"paths./my/music/follows.put.parameters[5].enum[4]" = "programmes"
"paths./my/music/follows.put.parameters[5].enum[5]" = "radio"
"paths./my/music/follows.put.parameters[5].enum[6]" = "unknown"
"paths./my/music/follows.put.parameters[5].in" = "query"
"paths./my/music/follows.put.parameters[5].name" = "music_context"
"paths./my/music/follows.put.parameters[5].required" = false
"paths./my/music/follows.put.parameters[5].type" = "string"
"paths./my/music/follows.put.parameters[6].description" = "Specify location to be passed to Music API"
"paths./my/music/follows.put.parameters[6].in" = "query"
"paths./my/music/follows.put.parameters[6].name" = "music_within_uk"
"paths./my/music/follows.put.parameters[6].required" = false
"paths./my/music/follows.put.parameters[6].type" = "boolean"
"paths./my/music/follows.put.parameters[7].description" = "Action followed or unfollowed"
"paths./my/music/follows.put.parameters[7].in" = "body"
"paths./my/music/follows.put.parameters[7].name" = "body"
"paths./my/music/follows.put.parameters[7].required" = true
"paths./my/music/follows.put.parameters[7].schema.items.$ref" = "#/definitions/PersonalisedMusicBatchRequest"
"paths./my/music/follows.put.parameters[7].schema.type" = "array"
"paths./my/music/follows.put.responses.200.description" = "OK"
"paths./my/music/follows.put.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/follows.put.responses.default.description" = "Unexpected error"
"paths./my/music/follows.put.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows.put.summary" = "Followed Networks, Categories, Artists, Playlists and Genres"
"paths./my/music/follows.put.tags.length" = 1
"paths./my/music/follows.put.tags[0]" = "Music"
"paths./my/music/follows/{type}.get.description" = "List of followed networks, categories, artists, playlists, networks, genres, categories or services for a given BBC Music user.\n"
"paths./my/music/follows/{type}.get.operationId" = "getPersonalisedMusicFollowsByType"
"paths./my/music/follows/{type}.get.parameters.length" = 10
"paths./my/music/follows/{type}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}.get.parameters[0].in" = "header"
"paths./my/music/follows/{type}.get.parameters[0].name" = "Authorization"
"paths./my/music/follows/{type}.get.parameters[0].required" = true
"paths./my/music/follows/{type}.get.parameters[0].type" = "string"
"paths./my/music/follows/{type}.get.parameters[1].default" = "idv5"
"paths./my/music/follows/{type}.get.parameters[1].description" = "Authentication type"
"paths./my/music/follows/{type}.get.parameters[1].in" = "header"
"paths./my/music/follows/{type}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows/{type}.get.parameters[1].required" = true
"paths./my/music/follows/{type}.get.parameters[1].type" = "string"
"paths./my/music/follows/{type}.get.parameters[2].description" = "API_KEY"
"paths./my/music/follows/{type}.get.parameters[2].in" = "header"
"paths./my/music/follows/{type}.get.parameters[2].name" = "X-API-Key"
"paths./my/music/follows/{type}.get.parameters[2].required" = true
"paths./my/music/follows/{type}.get.parameters[2].type" = "string"
"paths./my/music/follows/{type}.get.parameters[3].description" = "Supported Music follows types: Playlists, Services, Genres & Artists"
"paths./my/music/follows/{type}.get.parameters[3].enum.length" = 6
"paths./my/music/follows/{type}.get.parameters[3].enum[0]" = "playlists"
"paths./my/music/follows/{type}.get.parameters[3].enum[1]" = "services"
"paths./my/music/follows/{type}.get.parameters[3].enum[2]" = "networks"
"paths./my/music/follows/{type}.get.parameters[3].enum[3]" = "genres"
"paths./my/music/follows/{type}.get.parameters[3].enum[4]" = "categories"
"paths./my/music/follows/{type}.get.parameters[3].enum[5]" = "artists"
"paths./my/music/follows/{type}.get.parameters[3].in" = "path"
"paths./my/music/follows/{type}.get.parameters[3].name" = "type"
"paths./my/music/follows/{type}.get.parameters[3].required" = true
"paths./my/music/follows/{type}.get.parameters[3].type" = "string"
"paths./my/music/follows/{type}.get.parameters[4].description" = "Filters activities based on the type of action"
"paths./my/music/follows/{type}.get.parameters[4].enum.length" = 2
"paths./my/music/follows/{type}.get.parameters[4].enum[0]" = "followed"
"paths./my/music/follows/{type}.get.parameters[4].enum[1]" = "unfollowed"
"paths./my/music/follows/{type}.get.parameters[4].in" = "query"
"paths./my/music/follows/{type}.get.parameters[4].name" = "action"
"paths./my/music/follows/{type}.get.parameters[4].required" = false
"paths./my/music/follows/{type}.get.parameters[4].type" = "string"
"paths./my/music/follows/{type}.get.parameters[5].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows/{type}.get.parameters[5].in" = "query"
"paths./my/music/follows/{type}.get.parameters[5].name" = "music-data"
"paths./my/music/follows/{type}.get.parameters[5].required" = false
"paths./my/music/follows/{type}.get.parameters[5].type" = "boolean"
"paths./my/music/follows/{type}.get.parameters[6].description" = "Specify context to be passed to Music API"
"paths./my/music/follows/{type}.get.parameters[6].enum.length" = 7
"paths./my/music/follows/{type}.get.parameters[6].enum[0]" = "events"
"paths./my/music/follows/{type}.get.parameters[6].enum[1]" = "ivote"
"paths./my/music/follows/{type}.get.parameters[6].enum[2]" = "music"
"paths./my/music/follows/{type}.get.parameters[6].enum[3]" = "musicplaylist"
"paths./my/music/follows/{type}.get.parameters[6].enum[4]" = "programmes"
"paths./my/music/follows/{type}.get.parameters[6].enum[5]" = "radio"
"paths./my/music/follows/{type}.get.parameters[6].enum[6]" = "unknown"
"paths./my/music/follows/{type}.get.parameters[6].in" = "query"
"paths./my/music/follows/{type}.get.parameters[6].name" = "music_context"
"paths./my/music/follows/{type}.get.parameters[6].required" = false
"paths./my/music/follows/{type}.get.parameters[6].type" = "string"
"paths./my/music/follows/{type}.get.parameters[7].description" = "Specify location to be passed to Music API"
"paths./my/music/follows/{type}.get.parameters[7].in" = "query"
"paths./my/music/follows/{type}.get.parameters[7].name" = "music_within_uk"
"paths./my/music/follows/{type}.get.parameters[7].required" = false
"paths./my/music/follows/{type}.get.parameters[7].type" = "boolean"
"paths./my/music/follows/{type}.get.parameters[8].description" = "Paginated results offset"
"paths./my/music/follows/{type}.get.parameters[8].in" = "query"
"paths./my/music/follows/{type}.get.parameters[8].name" = "offset"
"paths./my/music/follows/{type}.get.parameters[8].required" = false
"paths./my/music/follows/{type}.get.parameters[8].type" = "integer"
"paths./my/music/follows/{type}.get.parameters[9].description" = "Paginated results limit"
"paths./my/music/follows/{type}.get.parameters[9].in" = "query"
"paths./my/music/follows/{type}.get.parameters[9].name" = "limit"
"paths./my/music/follows/{type}.get.parameters[9].required" = false
"paths./my/music/follows/{type}.get.parameters[9].type" = "integer"
"paths./my/music/follows/{type}.get.responses.200.description" = "OK"
"paths./my/music/follows/{type}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/follows/{type}.get.responses.default.description" = "Unexpected error"
"paths./my/music/follows/{type}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows/{type}.get.summary" = "Followed Networks, Categories, Artists, Playlists and Genres by Type"
"paths./my/music/follows/{type}.get.tags.length" = 1
"paths./my/music/follows/{type}.get.tags[0]" = "Music"
"paths./my/music/follows/{type}/{id}.delete.description" = "Remove a single network, category, artist, playlist, network, genre or service entity is in a users follows\n"
"paths./my/music/follows/{type}/{id}.delete.operationId" = "deletePersonalisedMusicFollowsByTypeById"
"paths./my/music/follows/{type}/{id}.delete.parameters.length" = 8
"paths./my/music/follows/{type}/{id}.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.delete.parameters[0].in" = "header"
"paths./my/music/follows/{type}/{id}.delete.parameters[0].name" = "Authorization"
"paths./my/music/follows/{type}/{id}.delete.parameters[0].required" = true
"paths./my/music/follows/{type}/{id}.delete.parameters[0].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[1].default" = "idv5"
"paths./my/music/follows/{type}/{id}.delete.parameters[1].description" = "Authentication type"
"paths./my/music/follows/{type}/{id}.delete.parameters[1].in" = "header"
"paths./my/music/follows/{type}/{id}.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows/{type}/{id}.delete.parameters[1].required" = true
"paths./my/music/follows/{type}/{id}.delete.parameters[1].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[2].description" = "API_KEY"
"paths./my/music/follows/{type}/{id}.delete.parameters[2].in" = "header"
"paths./my/music/follows/{type}/{id}.delete.parameters[2].name" = "X-API-Key"
"paths./my/music/follows/{type}/{id}.delete.parameters[2].required" = true
"paths./my/music/follows/{type}/{id}.delete.parameters[2].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].description" = "Supported Music follows types: Playlists, Services, Genres & Artists"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum.length" = 6
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[0]" = "playlists"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[1]" = "services"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[2]" = "networks"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[3]" = "genres"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[4]" = "categories"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].enum[5]" = "artists"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].in" = "path"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].name" = "type"
"paths./my/music/follows/{type}/{id}.delete.parameters[3].required" = true
"paths./my/music/follows/{type}/{id}.delete.parameters[3].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[4].description" = "Playlists, Services, Networks, Genres, Categories or Artists ID"
"paths./my/music/follows/{type}/{id}.delete.parameters[4].in" = "path"
"paths./my/music/follows/{type}/{id}.delete.parameters[4].name" = "id"
"paths./my/music/follows/{type}/{id}.delete.parameters[4].required" = true
"paths./my/music/follows/{type}/{id}.delete.parameters[4].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[5].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows/{type}/{id}.delete.parameters[5].in" = "query"
"paths./my/music/follows/{type}/{id}.delete.parameters[5].name" = "music-data"
"paths./my/music/follows/{type}/{id}.delete.parameters[5].required" = false
"paths./my/music/follows/{type}/{id}.delete.parameters[5].type" = "boolean"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].description" = "Specify context to be passed to Music API"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum.length" = 7
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[0]" = "events"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[1]" = "ivote"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[2]" = "music"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[3]" = "musicplaylist"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[4]" = "programmes"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[5]" = "radio"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].enum[6]" = "unknown"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].in" = "query"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].name" = "music_context"
"paths./my/music/follows/{type}/{id}.delete.parameters[6].required" = false
"paths./my/music/follows/{type}/{id}.delete.parameters[6].type" = "string"
"paths./my/music/follows/{type}/{id}.delete.parameters[7].description" = "Specify location to be passed to Music API"
"paths./my/music/follows/{type}/{id}.delete.parameters[7].in" = "query"
"paths./my/music/follows/{type}/{id}.delete.parameters[7].name" = "music_within_uk"
"paths./my/music/follows/{type}/{id}.delete.parameters[7].required" = false
"paths./my/music/follows/{type}/{id}.delete.parameters[7].type" = "boolean"
"paths./my/music/follows/{type}/{id}.delete.responses.200.description" = "OK"
"paths./my/music/follows/{type}/{id}.delete.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/follows/{type}/{id}.delete.responses.default.description" = "Unexpected error"
"paths./my/music/follows/{type}/{id}.delete.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows/{type}/{id}.delete.summary" = "Followed Network, Category, Artist, Playlist and Genre"
"paths./my/music/follows/{type}/{id}.delete.tags.length" = 1
"paths./my/music/follows/{type}/{id}.delete.tags[0]" = "Music"
"paths./my/music/follows/{type}/{id}.get.description" = "Check to see if a single network, category, artist, playlist, network, genre or service entity is in a users follows - determines UX of add button.\n"
"paths./my/music/follows/{type}/{id}.get.operationId" = "getPersonalisedMusicFollowsByTypeById"
"paths./my/music/follows/{type}/{id}.get.parameters.length" = 8
"paths./my/music/follows/{type}/{id}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.get.parameters[0].in" = "header"
"paths./my/music/follows/{type}/{id}.get.parameters[0].name" = "Authorization"
"paths./my/music/follows/{type}/{id}.get.parameters[0].required" = true
"paths./my/music/follows/{type}/{id}.get.parameters[0].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[1].default" = "idv5"
"paths./my/music/follows/{type}/{id}.get.parameters[1].description" = "Authentication type"
"paths./my/music/follows/{type}/{id}.get.parameters[1].in" = "header"
"paths./my/music/follows/{type}/{id}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows/{type}/{id}.get.parameters[1].required" = true
"paths./my/music/follows/{type}/{id}.get.parameters[1].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[2].description" = "API_KEY"
"paths./my/music/follows/{type}/{id}.get.parameters[2].in" = "header"
"paths./my/music/follows/{type}/{id}.get.parameters[2].name" = "X-API-Key"
"paths./my/music/follows/{type}/{id}.get.parameters[2].required" = true
"paths./my/music/follows/{type}/{id}.get.parameters[2].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[3].description" = "Supported Music follows types: Playlists, Services, Genres & Artists"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum.length" = 6
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[0]" = "playlists"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[1]" = "services"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[2]" = "networks"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[3]" = "genres"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[4]" = "categories"
"paths./my/music/follows/{type}/{id}.get.parameters[3].enum[5]" = "artists"
"paths./my/music/follows/{type}/{id}.get.parameters[3].in" = "path"
"paths./my/music/follows/{type}/{id}.get.parameters[3].name" = "type"
"paths./my/music/follows/{type}/{id}.get.parameters[3].required" = true
"paths./my/music/follows/{type}/{id}.get.parameters[3].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[4].description" = "Playlists, Services, Networks, Genres, Categories or Artists ID"
"paths./my/music/follows/{type}/{id}.get.parameters[4].in" = "path"
"paths./my/music/follows/{type}/{id}.get.parameters[4].name" = "id"
"paths./my/music/follows/{type}/{id}.get.parameters[4].required" = true
"paths./my/music/follows/{type}/{id}.get.parameters[4].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[5].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows/{type}/{id}.get.parameters[5].in" = "query"
"paths./my/music/follows/{type}/{id}.get.parameters[5].name" = "music-data"
"paths./my/music/follows/{type}/{id}.get.parameters[5].required" = false
"paths./my/music/follows/{type}/{id}.get.parameters[5].type" = "boolean"
"paths./my/music/follows/{type}/{id}.get.parameters[6].description" = "Specify context to be passed to Music API"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum.length" = 7
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[0]" = "events"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[1]" = "ivote"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[2]" = "music"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[3]" = "musicplaylist"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[4]" = "programmes"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[5]" = "radio"
"paths./my/music/follows/{type}/{id}.get.parameters[6].enum[6]" = "unknown"
"paths./my/music/follows/{type}/{id}.get.parameters[6].in" = "query"
"paths./my/music/follows/{type}/{id}.get.parameters[6].name" = "music_context"
"paths./my/music/follows/{type}/{id}.get.parameters[6].required" = false
"paths./my/music/follows/{type}/{id}.get.parameters[6].type" = "string"
"paths./my/music/follows/{type}/{id}.get.parameters[7].description" = "Specify location to be passed to Music API"
"paths./my/music/follows/{type}/{id}.get.parameters[7].in" = "query"
"paths./my/music/follows/{type}/{id}.get.parameters[7].name" = "music_within_uk"
"paths./my/music/follows/{type}/{id}.get.parameters[7].required" = false
"paths./my/music/follows/{type}/{id}.get.parameters[7].type" = "boolean"
"paths./my/music/follows/{type}/{id}.get.responses.200.description" = "OK"
"paths./my/music/follows/{type}/{id}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicResponse"
"paths./my/music/follows/{type}/{id}.get.responses.default.description" = "Unexpected error"
"paths./my/music/follows/{type}/{id}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows/{type}/{id}.get.summary" = "Followed Network, Category, Artist, Playlist and Genre"
"paths./my/music/follows/{type}/{id}.get.tags.length" = 1
"paths./my/music/follows/{type}/{id}.get.tags[0]" = "Music"
"paths./my/music/follows/{type}/{id}.post.description" = "Add a single network, category, artist, playlist, network, genre or service entity is in a users follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/follows/{type}/{id}.post.operationId" = "postPersonalisedMusicFollowsByTypeById"
"paths./my/music/follows/{type}/{id}.post.parameters.length" = 9
"paths./my/music/follows/{type}/{id}.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.post.parameters[0].in" = "header"
"paths./my/music/follows/{type}/{id}.post.parameters[0].name" = "Authorization"
"paths./my/music/follows/{type}/{id}.post.parameters[0].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[0].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[1].default" = "idv5"
"paths./my/music/follows/{type}/{id}.post.parameters[1].description" = "Authentication type"
"paths./my/music/follows/{type}/{id}.post.parameters[1].in" = "header"
"paths./my/music/follows/{type}/{id}.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows/{type}/{id}.post.parameters[1].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[1].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[2].description" = "API_KEY"
"paths./my/music/follows/{type}/{id}.post.parameters[2].in" = "header"
"paths./my/music/follows/{type}/{id}.post.parameters[2].name" = "X-API-Key"
"paths./my/music/follows/{type}/{id}.post.parameters[2].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[2].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[3].description" = "Supported Music follows types: Playlists, Services, Genres & Artists"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum.length" = 6
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[0]" = "playlists"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[1]" = "services"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[2]" = "networks"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[3]" = "genres"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[4]" = "categories"
"paths./my/music/follows/{type}/{id}.post.parameters[3].enum[5]" = "artists"
"paths./my/music/follows/{type}/{id}.post.parameters[3].in" = "path"
"paths./my/music/follows/{type}/{id}.post.parameters[3].name" = "type"
"paths./my/music/follows/{type}/{id}.post.parameters[3].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[3].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[4].description" = "Playlists, Services, Networks, Genres, Categories or Artists ID"
"paths./my/music/follows/{type}/{id}.post.parameters[4].in" = "path"
"paths./my/music/follows/{type}/{id}.post.parameters[4].name" = "id"
"paths./my/music/follows/{type}/{id}.post.parameters[4].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[4].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[5].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows/{type}/{id}.post.parameters[5].in" = "query"
"paths./my/music/follows/{type}/{id}.post.parameters[5].name" = "music-data"
"paths./my/music/follows/{type}/{id}.post.parameters[5].required" = false
"paths./my/music/follows/{type}/{id}.post.parameters[5].type" = "boolean"
"paths./my/music/follows/{type}/{id}.post.parameters[6].description" = "Specify context to be passed to Music API"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum.length" = 7
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[0]" = "events"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[1]" = "ivote"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[2]" = "music"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[3]" = "musicplaylist"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[4]" = "programmes"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[5]" = "radio"
"paths./my/music/follows/{type}/{id}.post.parameters[6].enum[6]" = "unknown"
"paths./my/music/follows/{type}/{id}.post.parameters[6].in" = "query"
"paths./my/music/follows/{type}/{id}.post.parameters[6].name" = "music_context"
"paths./my/music/follows/{type}/{id}.post.parameters[6].required" = false
"paths./my/music/follows/{type}/{id}.post.parameters[6].type" = "string"
"paths./my/music/follows/{type}/{id}.post.parameters[7].description" = "Specify location to be passed to Music API"
"paths./my/music/follows/{type}/{id}.post.parameters[7].in" = "query"
"paths./my/music/follows/{type}/{id}.post.parameters[7].name" = "music_within_uk"
"paths./my/music/follows/{type}/{id}.post.parameters[7].required" = false
"paths./my/music/follows/{type}/{id}.post.parameters[7].type" = "boolean"
"paths./my/music/follows/{type}/{id}.post.parameters[8].description" = "Action followed or unfollowed"
"paths./my/music/follows/{type}/{id}.post.parameters[8].in" = "body"
"paths./my/music/follows/{type}/{id}.post.parameters[8].name" = "body"
"paths./my/music/follows/{type}/{id}.post.parameters[8].required" = true
"paths./my/music/follows/{type}/{id}.post.parameters[8].schema.$ref" = "#/definitions/PersonalisedMusicRequest"
"paths./my/music/follows/{type}/{id}.post.responses.200.description" = "OK"
"paths./my/music/follows/{type}/{id}.post.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/follows/{type}/{id}.post.responses.default.description" = "Unexpected error"
"paths./my/music/follows/{type}/{id}.post.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows/{type}/{id}.post.summary" = "Followed Network, Category, Artist, Playlist and Genre"
"paths./my/music/follows/{type}/{id}.post.tags.length" = 1
"paths./my/music/follows/{type}/{id}.post.tags[0]" = "Music"
"paths./my/music/follows/{type}/{id}.put.description" = "Update a single network, category, artist, playlist, network, genre or service entity is in a users follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/music/follows/{type}/{id}.put.operationId" = "putPersonalisedMusicFollowsByTypeById"
"paths./my/music/follows/{type}/{id}.put.parameters.length" = 9
"paths./my/music/follows/{type}/{id}.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/follows/{type}/{id}.put.parameters[0].in" = "header"
"paths./my/music/follows/{type}/{id}.put.parameters[0].name" = "Authorization"
"paths./my/music/follows/{type}/{id}.put.parameters[0].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[0].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[1].default" = "idv5"
"paths./my/music/follows/{type}/{id}.put.parameters[1].description" = "Authentication type"
"paths./my/music/follows/{type}/{id}.put.parameters[1].in" = "header"
"paths./my/music/follows/{type}/{id}.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/follows/{type}/{id}.put.parameters[1].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[1].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[2].description" = "API_KEY"
"paths./my/music/follows/{type}/{id}.put.parameters[2].in" = "header"
"paths./my/music/follows/{type}/{id}.put.parameters[2].name" = "X-API-Key"
"paths./my/music/follows/{type}/{id}.put.parameters[2].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[2].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[3].description" = "Supported Music follows types: Playlists, Services, Genres & Artists"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum.length" = 6
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[0]" = "playlists"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[1]" = "services"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[2]" = "networks"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[3]" = "genres"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[4]" = "categories"
"paths./my/music/follows/{type}/{id}.put.parameters[3].enum[5]" = "artists"
"paths./my/music/follows/{type}/{id}.put.parameters[3].in" = "path"
"paths./my/music/follows/{type}/{id}.put.parameters[3].name" = "type"
"paths./my/music/follows/{type}/{id}.put.parameters[3].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[3].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[4].description" = "Playlists, Services, Networks, Genres, Categories or Artists ID"
"paths./my/music/follows/{type}/{id}.put.parameters[4].in" = "path"
"paths./my/music/follows/{type}/{id}.put.parameters[4].name" = "id"
"paths./my/music/follows/{type}/{id}.put.parameters[4].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[4].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[5].description" = "Omits music data from the response, defaults to true"
"paths./my/music/follows/{type}/{id}.put.parameters[5].in" = "query"
"paths./my/music/follows/{type}/{id}.put.parameters[5].name" = "music-data"
"paths./my/music/follows/{type}/{id}.put.parameters[5].required" = false
"paths./my/music/follows/{type}/{id}.put.parameters[5].type" = "boolean"
"paths./my/music/follows/{type}/{id}.put.parameters[6].description" = "Specify context to be passed to Music API"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum.length" = 7
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[0]" = "events"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[1]" = "ivote"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[2]" = "music"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[3]" = "musicplaylist"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[4]" = "programmes"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[5]" = "radio"
"paths./my/music/follows/{type}/{id}.put.parameters[6].enum[6]" = "unknown"
"paths./my/music/follows/{type}/{id}.put.parameters[6].in" = "query"
"paths./my/music/follows/{type}/{id}.put.parameters[6].name" = "music_context"
"paths./my/music/follows/{type}/{id}.put.parameters[6].required" = false
"paths./my/music/follows/{type}/{id}.put.parameters[6].type" = "string"
"paths./my/music/follows/{type}/{id}.put.parameters[7].description" = "Specify location to be passed to Music API"
"paths./my/music/follows/{type}/{id}.put.parameters[7].in" = "query"
"paths./my/music/follows/{type}/{id}.put.parameters[7].name" = "music_within_uk"
"paths./my/music/follows/{type}/{id}.put.parameters[7].required" = false
"paths./my/music/follows/{type}/{id}.put.parameters[7].type" = "boolean"
"paths./my/music/follows/{type}/{id}.put.parameters[8].description" = "Action followed or unfollowed"
"paths./my/music/follows/{type}/{id}.put.parameters[8].in" = "body"
"paths./my/music/follows/{type}/{id}.put.parameters[8].name" = "body"
"paths./my/music/follows/{type}/{id}.put.parameters[8].required" = true
"paths./my/music/follows/{type}/{id}.put.parameters[8].schema.$ref" = "#/definitions/PersonalisedMusicRequest"
"paths./my/music/follows/{type}/{id}.put.responses.200.description" = "OK"
"paths./my/music/follows/{type}/{id}.put.responses.200.schema.$ref" = "#/definitions/PersonalisedMusicSuccess"
"paths./my/music/follows/{type}/{id}.put.responses.default.description" = "Unexpected error"
"paths./my/music/follows/{type}/{id}.put.responses.default.schema.$ref" = "#/definitions/PersonalisedMusicErrorResponse"
"paths./my/music/follows/{type}/{id}.put.summary" = "Followed Network, Category, Artist, Playlist and Genre"
"paths./my/music/follows/{type}/{id}.put.tags.length" = 1
"paths./my/music/follows/{type}/{id}.put.tags[0]" = "Music"
"paths./my/music/preferences/export.delete.description" = "Remove export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.\n"
"paths./my/music/preferences/export.delete.operationId" = "deleteMusicPreferencesExport"
"paths./my/music/preferences/export.delete.parameters.length" = 3
"paths./my/music/preferences/export.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.delete.parameters[0].in" = "header"
"paths./my/music/preferences/export.delete.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export.delete.parameters[0].required" = true
"paths./my/music/preferences/export.delete.parameters[0].type" = "string"
"paths./my/music/preferences/export.delete.parameters[1].default" = "idv5"
"paths./my/music/preferences/export.delete.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export.delete.parameters[1].in" = "header"
"paths./my/music/preferences/export.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export.delete.parameters[1].required" = true
"paths./my/music/preferences/export.delete.parameters[1].type" = "string"
"paths./my/music/preferences/export.delete.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export.delete.parameters[2].in" = "header"
"paths./my/music/preferences/export.delete.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export.delete.parameters[2].required" = true
"paths./my/music/preferences/export.delete.parameters[2].type" = "string"
"paths./my/music/preferences/export.delete.responses.200.description" = "OK"
"paths./my/music/preferences/export.delete.responses.200.schema.$ref" = "#/definitions/MusicExportSuccess"
"paths./my/music/preferences/export.delete.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export.delete.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export.delete.summary" = "Music Export Preferences"
"paths./my/music/preferences/export.delete.tags.length" = 1
"paths./my/music/preferences/export.delete.tags[0]" = "Music Export"
"paths./my/music/preferences/export.get.description" = "Returns export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.\n"
"paths./my/music/preferences/export.get.operationId" = "getMusicPreferencesExport"
"paths./my/music/preferences/export.get.parameters.length" = 3
"paths./my/music/preferences/export.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.get.parameters[0].in" = "header"
"paths./my/music/preferences/export.get.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export.get.parameters[0].required" = true
"paths./my/music/preferences/export.get.parameters[0].type" = "string"
"paths./my/music/preferences/export.get.parameters[1].default" = "idv5"
"paths./my/music/preferences/export.get.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export.get.parameters[1].in" = "header"
"paths./my/music/preferences/export.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export.get.parameters[1].required" = true
"paths./my/music/preferences/export.get.parameters[1].type" = "string"
"paths./my/music/preferences/export.get.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export.get.parameters[2].in" = "header"
"paths./my/music/preferences/export.get.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export.get.parameters[2].required" = true
"paths./my/music/preferences/export.get.parameters[2].type" = "string"
"paths./my/music/preferences/export.get.responses.200.description" = "OK"
"paths./my/music/preferences/export.get.responses.200.schema.$ref" = "#/definitions/MusicExportPreferencesResponse"
"paths./my/music/preferences/export.get.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export.get.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export.get.summary" = "Music Export Preferences"
"paths./my/music/preferences/export.get.tags.length" = 1
"paths./my/music/preferences/export.get.tags[0]" = "Music Export"
"paths./my/music/preferences/export.post.description" = "Create export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.\n"
"paths./my/music/preferences/export.post.operationId" = "postMusicPreferencesExport"
"paths./my/music/preferences/export.post.parameters.length" = 4
"paths./my/music/preferences/export.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export.post.parameters[0].in" = "header"
"paths./my/music/preferences/export.post.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export.post.parameters[0].required" = true
"paths./my/music/preferences/export.post.parameters[0].type" = "string"
"paths./my/music/preferences/export.post.parameters[1].default" = "idv5"
"paths./my/music/preferences/export.post.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export.post.parameters[1].in" = "header"
"paths./my/music/preferences/export.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export.post.parameters[1].required" = true
"paths./my/music/preferences/export.post.parameters[1].type" = "string"
"paths./my/music/preferences/export.post.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export.post.parameters[2].in" = "header"
"paths./my/music/preferences/export.post.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export.post.parameters[2].required" = true
"paths./my/music/preferences/export.post.parameters[2].type" = "string"
"paths./my/music/preferences/export.post.parameters[3].description" = ""
"paths./my/music/preferences/export.post.parameters[3].in" = "body"
"paths./my/music/preferences/export.post.parameters[3].name" = "body"
"paths./my/music/preferences/export.post.parameters[3].required" = true
"paths./my/music/preferences/export.post.parameters[3].schema.$ref" = "#/definitions/MusicExportPreferences"
"paths./my/music/preferences/export.post.responses.200.description" = "OK"
"paths./my/music/preferences/export.post.responses.200.schema.$ref" = "#/definitions/MusicExportSuccess"
"paths./my/music/preferences/export.post.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export.post.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export.post.summary" = "Music Export Preferences"
"paths./my/music/preferences/export.post.tags.length" = 1
"paths./my/music/preferences/export.post.tags[0]" = "Music Export"
"paths./my/music/preferences/export/{vendor}.delete.description" = "Remove Vendor specific export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.\n"
"paths./my/music/preferences/export/{vendor}.delete.operationId" = "deleteMusicPreferencesExportVendor"
"paths./my/music/preferences/export/{vendor}.delete.parameters.length" = 4
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].in" = "header"
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].required" = true
"paths./my/music/preferences/export/{vendor}.delete.parameters[0].type" = "string"
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].default" = "idv5"
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].in" = "header"
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].required" = true
"paths./my/music/preferences/export/{vendor}.delete.parameters[1].type" = "string"
"paths./my/music/preferences/export/{vendor}.delete.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export/{vendor}.delete.parameters[2].in" = "header"
"paths./my/music/preferences/export/{vendor}.delete.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export/{vendor}.delete.parameters[2].required" = true
"paths./my/music/preferences/export/{vendor}.delete.parameters[2].type" = "string"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].description" = "Supported 3rd Party Vendor"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].enum.length" = 4
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].enum[0]" = "spotify"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].enum[1]" = "deezer"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].enum[2]" = "youtube"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].enum[3]" = "itunes"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].in" = "path"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].name" = "vendor"
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].required" = true
"paths./my/music/preferences/export/{vendor}.delete.parameters[3].type" = "string"
"paths./my/music/preferences/export/{vendor}.delete.responses.200.description" = "OK"
"paths./my/music/preferences/export/{vendor}.delete.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export/{vendor}.delete.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export/{vendor}.delete.summary" = "Music Export Vendor Preferences"
"paths./my/music/preferences/export/{vendor}.delete.tags.length" = 1
"paths./my/music/preferences/export/{vendor}.delete.tags[0]" = "Music Export"
"paths./my/music/preferences/export/{vendor}.get.description" = "Returns vendor specific export preferences for a given BBC Music user.\n"
"paths./my/music/preferences/export/{vendor}.get.operationId" = "getMusicPreferencesExportVendor"
"paths./my/music/preferences/export/{vendor}.get.parameters.length" = 4
"paths./my/music/preferences/export/{vendor}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.get.parameters[0].in" = "header"
"paths./my/music/preferences/export/{vendor}.get.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export/{vendor}.get.parameters[0].required" = true
"paths./my/music/preferences/export/{vendor}.get.parameters[0].type" = "string"
"paths./my/music/preferences/export/{vendor}.get.parameters[1].default" = "idv5"
"paths./my/music/preferences/export/{vendor}.get.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export/{vendor}.get.parameters[1].in" = "header"
"paths./my/music/preferences/export/{vendor}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export/{vendor}.get.parameters[1].required" = true
"paths./my/music/preferences/export/{vendor}.get.parameters[1].type" = "string"
"paths./my/music/preferences/export/{vendor}.get.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export/{vendor}.get.parameters[2].in" = "header"
"paths./my/music/preferences/export/{vendor}.get.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export/{vendor}.get.parameters[2].required" = true
"paths./my/music/preferences/export/{vendor}.get.parameters[2].type" = "string"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].description" = "Supported 3rd Party Vendor"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].enum.length" = 4
"paths./my/music/preferences/export/{vendor}.get.parameters[3].enum[0]" = "spotify"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].enum[1]" = "deezer"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].enum[2]" = "youtube"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].enum[3]" = "itunes"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].in" = "path"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].name" = "vendor"
"paths./my/music/preferences/export/{vendor}.get.parameters[3].required" = true
"paths./my/music/preferences/export/{vendor}.get.parameters[3].type" = "string"
"paths./my/music/preferences/export/{vendor}.get.responses.200.description" = "OK"
"paths./my/music/preferences/export/{vendor}.get.responses.200.schema.$ref" = "#/definitions/MusicExportPreferencesResponse"
"paths./my/music/preferences/export/{vendor}.get.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export/{vendor}.get.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export/{vendor}.get.summary" = "Music Export Vendor Preferences"
"paths./my/music/preferences/export/{vendor}.get.tags.length" = 1
"paths./my/music/preferences/export/{vendor}.get.tags[0]" = "Music Export"
"paths./my/music/preferences/export/{vendor}.post.description" = "Create Vendor specific export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.\n"
"paths./my/music/preferences/export/{vendor}.post.operationId" = "postMusicPreferencesExportVendor"
"paths./my/music/preferences/export/{vendor}.post.parameters.length" = 5
"paths./my/music/preferences/export/{vendor}.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.post.parameters[0].in" = "header"
"paths./my/music/preferences/export/{vendor}.post.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export/{vendor}.post.parameters[0].required" = true
"paths./my/music/preferences/export/{vendor}.post.parameters[0].type" = "string"
"paths./my/music/preferences/export/{vendor}.post.parameters[1].default" = "idv5"
"paths./my/music/preferences/export/{vendor}.post.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export/{vendor}.post.parameters[1].in" = "header"
"paths./my/music/preferences/export/{vendor}.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export/{vendor}.post.parameters[1].required" = true
"paths./my/music/preferences/export/{vendor}.post.parameters[1].type" = "string"
"paths./my/music/preferences/export/{vendor}.post.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export/{vendor}.post.parameters[2].in" = "header"
"paths./my/music/preferences/export/{vendor}.post.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export/{vendor}.post.parameters[2].required" = true
"paths./my/music/preferences/export/{vendor}.post.parameters[2].type" = "string"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].description" = "Supported 3rd Party Vendor"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].enum.length" = 4
"paths./my/music/preferences/export/{vendor}.post.parameters[3].enum[0]" = "spotify"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].enum[1]" = "deezer"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].enum[2]" = "youtube"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].enum[3]" = "itunes"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].in" = "path"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].name" = "vendor"
"paths./my/music/preferences/export/{vendor}.post.parameters[3].required" = true
"paths./my/music/preferences/export/{vendor}.post.parameters[3].type" = "string"
"paths./my/music/preferences/export/{vendor}.post.parameters[4].description" = ""
"paths./my/music/preferences/export/{vendor}.post.parameters[4].in" = "body"
"paths./my/music/preferences/export/{vendor}.post.parameters[4].name" = "body"
"paths./my/music/preferences/export/{vendor}.post.parameters[4].required" = true
"paths./my/music/preferences/export/{vendor}.post.parameters[4].schema.$ref" = "#/definitions/MusicExportPreferences"
"paths./my/music/preferences/export/{vendor}.post.responses.200.description" = "OK"
"paths./my/music/preferences/export/{vendor}.post.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export/{vendor}.post.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export/{vendor}.post.summary" = "Music Export Vendor Preferences"
"paths./my/music/preferences/export/{vendor}.post.tags.length" = 1
"paths./my/music/preferences/export/{vendor}.post.tags[0]" = "Music Export"
"paths./my/music/preferences/export/{vendor}.put.description" = "Update vendor specific export preferences for a given BBC Music user.\n"
"paths./my/music/preferences/export/{vendor}.put.operationId" = "putMusicPreferencesExportVendor"
"paths./my/music/preferences/export/{vendor}.put.parameters.length" = 5
"paths./my/music/preferences/export/{vendor}.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/music/preferences/export/{vendor}.put.parameters[0].in" = "header"
"paths./my/music/preferences/export/{vendor}.put.parameters[0].name" = "Authorization"
"paths./my/music/preferences/export/{vendor}.put.parameters[0].required" = true
"paths./my/music/preferences/export/{vendor}.put.parameters[0].type" = "string"
"paths./my/music/preferences/export/{vendor}.put.parameters[1].default" = "idv5"
"paths./my/music/preferences/export/{vendor}.put.parameters[1].description" = "Authentication type"
"paths./my/music/preferences/export/{vendor}.put.parameters[1].in" = "header"
"paths./my/music/preferences/export/{vendor}.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/music/preferences/export/{vendor}.put.parameters[1].required" = true
"paths./my/music/preferences/export/{vendor}.put.parameters[1].type" = "string"
"paths./my/music/preferences/export/{vendor}.put.parameters[2].description" = "API_KEY"
"paths./my/music/preferences/export/{vendor}.put.parameters[2].in" = "header"
"paths./my/music/preferences/export/{vendor}.put.parameters[2].name" = "X-API-Key"
"paths./my/music/preferences/export/{vendor}.put.parameters[2].required" = true
"paths./my/music/preferences/export/{vendor}.put.parameters[2].type" = "string"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].description" = "Supported 3rd Party Vendor"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].enum.length" = 4
"paths./my/music/preferences/export/{vendor}.put.parameters[3].enum[0]" = "spotify"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].enum[1]" = "deezer"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].enum[2]" = "youtube"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].enum[3]" = "itunes"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].in" = "path"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].name" = "vendor"
"paths./my/music/preferences/export/{vendor}.put.parameters[3].required" = true
"paths./my/music/preferences/export/{vendor}.put.parameters[3].type" = "string"
"paths./my/music/preferences/export/{vendor}.put.parameters[4].description" = ""
"paths./my/music/preferences/export/{vendor}.put.parameters[4].in" = "body"
"paths./my/music/preferences/export/{vendor}.put.parameters[4].name" = "body"
"paths./my/music/preferences/export/{vendor}.put.parameters[4].required" = true
"paths./my/music/preferences/export/{vendor}.put.parameters[4].schema.$ref" = "#/definitions/MusicExportPreferences"
"paths./my/music/preferences/export/{vendor}.put.responses.200.description" = "OK"
"paths./my/music/preferences/export/{vendor}.put.responses.default.description" = "Unexpected error"
"paths./my/music/preferences/export/{vendor}.put.responses.default.schema.$ref" = "#/definitions/MusicExportErrorResponse"
"paths./my/music/preferences/export/{vendor}.put.summary" = "Music Export Vendor Preferences"
"paths./my/music/preferences/export/{vendor}.put.tags.length" = 1
"paths./my/music/preferences/export/{vendor}.put.tags[0]" = "Music Export"
"paths./my/networks/follows.delete.parameters.length" = 5
"paths./my/networks/follows.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.delete.parameters[0].in" = "header"
"paths./my/networks/follows.delete.parameters[0].name" = "Authorization"
"paths./my/networks/follows.delete.parameters[0].required" = true
"paths./my/networks/follows.delete.parameters[0].type" = "string"
"paths./my/networks/follows.delete.parameters[1].description" = "API_KEY"
"paths./my/networks/follows.delete.parameters[1].in" = "header"
"paths./my/networks/follows.delete.parameters[1].name" = "X-API-Key"
"paths./my/networks/follows.delete.parameters[1].required" = true
"paths./my/networks/follows.delete.parameters[1].type" = "string"
"paths./my/networks/follows.delete.parameters[2].description" = "Paginated results offset"
"paths./my/networks/follows.delete.parameters[2].in" = "query"
"paths./my/networks/follows.delete.parameters[2].name" = "offset"
"paths./my/networks/follows.delete.parameters[2].required" = false
"paths./my/networks/follows.delete.parameters[2].type" = "integer"
"paths./my/networks/follows.delete.parameters[3].description" = "Paginated results limit"
"paths./my/networks/follows.delete.parameters[3].in" = "query"
"paths./my/networks/follows.delete.parameters[3].name" = "limit"
"paths./my/networks/follows.delete.parameters[3].required" = false
"paths./my/networks/follows.delete.parameters[3].type" = "integer"
"paths./my/networks/follows.delete.parameters[4].in" = "body"
"paths./my/networks/follows.delete.parameters[4].name" = "Body"
"paths./my/networks/follows.delete.parameters[4].required" = true
"paths./my/networks/follows.delete.parameters[4].schema.$ref" = "#/definitions/Body_3"
"paths./my/networks/follows.delete.responses.202.description" = "Request successfully sent to UAS."
"paths./my/networks/follows.delete.responses.400.description" = "The request was malformed."
"paths./my/networks/follows.delete.responses.400.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/networks/follows.delete.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/networks/follows.delete.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/networks/follows.delete.summary" = "Unfollow network"
"paths./my/networks/follows.delete.tags.length" = 1
"paths./my/networks/follows.delete.tags[0]" = "Personalised Networks"
"paths./my/networks/follows.get.description" = "List of followed networks for a given user.\n"
"paths./my/networks/follows.get.parameters.length" = 4
"paths./my/networks/follows.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.get.parameters[0].in" = "header"
"paths./my/networks/follows.get.parameters[0].name" = "Authorization"
"paths./my/networks/follows.get.parameters[0].required" = true
"paths./my/networks/follows.get.parameters[0].type" = "string"
"paths./my/networks/follows.get.parameters[1].description" = "API_KEY"
"paths./my/networks/follows.get.parameters[1].in" = "header"
"paths./my/networks/follows.get.parameters[1].name" = "X-API-Key"
"paths./my/networks/follows.get.parameters[1].required" = true
"paths./my/networks/follows.get.parameters[1].type" = "string"
"paths./my/networks/follows.get.parameters[2].description" = "Paginated results offset"
"paths./my/networks/follows.get.parameters[2].in" = "query"
"paths./my/networks/follows.get.parameters[2].name" = "offset"
"paths./my/networks/follows.get.parameters[2].required" = false
"paths./my/networks/follows.get.parameters[2].type" = "integer"
"paths./my/networks/follows.get.parameters[3].description" = "Paginated results limit"
"paths./my/networks/follows.get.parameters[3].in" = "query"
"paths./my/networks/follows.get.parameters[3].name" = "limit"
"paths./my/networks/follows.get.parameters[3].required" = false
"paths./my/networks/follows.get.parameters[3].type" = "integer"
"paths./my/networks/follows.get.responses.200.description" = "OK"
"paths./my/networks/follows.get.responses.200.schema.$ref" = "#/definitions/PersonalisedNetworksResponse"
"paths./my/networks/follows.get.responses.default.description" = "Unexpected error"
"paths./my/networks/follows.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/networks/follows.get.summary" = "List of followed networks"
"paths./my/networks/follows.get.tags.length" = 1
"paths./my/networks/follows.get.tags[0]" = "Personalised Networks"
"paths./my/networks/follows.post.parameters.length" = 5
"paths./my/networks/follows.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/networks/follows.post.parameters[0].in" = "header"
"paths./my/networks/follows.post.parameters[0].name" = "Authorization"
"paths./my/networks/follows.post.parameters[0].required" = true
"paths./my/networks/follows.post.parameters[0].type" = "string"
"paths./my/networks/follows.post.parameters[1].description" = "API_KEY"
"paths./my/networks/follows.post.parameters[1].in" = "header"
"paths./my/networks/follows.post.parameters[1].name" = "X-API-Key"
"paths./my/networks/follows.post.parameters[1].required" = true
"paths./my/networks/follows.post.parameters[1].type" = "string"
"paths./my/networks/follows.post.parameters[2].description" = "Paginated results offset"
"paths./my/networks/follows.post.parameters[2].in" = "query"
"paths./my/networks/follows.post.parameters[2].name" = "offset"
"paths./my/networks/follows.post.parameters[2].required" = false
"paths./my/networks/follows.post.parameters[2].type" = "integer"
"paths./my/networks/follows.post.parameters[3].description" = "Paginated results limit"
"paths./my/networks/follows.post.parameters[3].in" = "query"
"paths./my/networks/follows.post.parameters[3].name" = "limit"
"paths./my/networks/follows.post.parameters[3].required" = false
"paths./my/networks/follows.post.parameters[3].type" = "integer"
"paths./my/networks/follows.post.parameters[4].in" = "body"
"paths./my/networks/follows.post.parameters[4].name" = "Body"
"paths./my/networks/follows.post.parameters[4].required" = true
"paths./my/networks/follows.post.parameters[4].schema.$ref" = "#/definitions/Body_2"
"paths./my/networks/follows.post.responses.202.description" = "Request successfully sent to UAS."
"paths./my/networks/follows.post.responses.400.description" = "The request was malformed."
"paths./my/networks/follows.post.responses.400.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/networks/follows.post.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/networks/follows.post.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/networks/follows.post.summary" = "Follow network"
"paths./my/networks/follows.post.tags.length" = 1
"paths./my/networks/follows.post.tags[0]" = "Personalised Networks"
"paths./my/plays.post.parameters.length" = 3
"paths./my/plays.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/plays.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/plays.post.parameters[0].in" = "header"
"paths./my/plays.post.parameters[0].name" = "Authorization"
"paths./my/plays.post.parameters[0].required" = true
"paths./my/plays.post.parameters[0].type" = "string"
"paths./my/plays.post.parameters[1].description" = "API_KEY"
"paths./my/plays.post.parameters[1].in" = "header"
"paths./my/plays.post.parameters[1].name" = "X-API-Key"
"paths./my/plays.post.parameters[1].required" = true
"paths./my/plays.post.parameters[1].type" = "string"
"paths./my/plays.post.parameters[2].in" = "body"
"paths./my/plays.post.parameters[2].name" = "Body"
"paths./my/plays.post.parameters[2].required" = true
"paths./my/plays.post.parameters[2].schema.$ref" = "#/definitions/Body_4"
"paths./my/plays.post.responses.202.description" = "Request successfully sent to UAS."
"paths./my/plays.post.responses.400.description" = "The request was malformed."
"paths./my/plays.post.responses.400.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/plays.post.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/plays.post.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/plays.post.schemes.length" = 1
"paths./my/plays.post.schemes[0]" = "https"
"paths./my/plays.post.summary" = "Write Play Event"
"paths./my/plays.post.tags.length" = 1
"paths./my/plays.post.tags[0]" = "Personalised Plays"
"paths./my/playspace/containers/suggested.get.description" = "Suggested Playspace Container\n"
"paths./my/playspace/containers/suggested.get.operationId" = "suggestContainer"
"paths./my/playspace/containers/suggested.get.parameters.length" = 4
"paths./my/playspace/containers/suggested.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/playspace/containers/suggested.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/playspace/containers/suggested.get.parameters[0].in" = "header"
"paths./my/playspace/containers/suggested.get.parameters[0].name" = "Authorization"
"paths./my/playspace/containers/suggested.get.parameters[0].required" = true
"paths./my/playspace/containers/suggested.get.parameters[0].type" = "string"
"paths./my/playspace/containers/suggested.get.parameters[1].description" = "API_KEY"
"paths./my/playspace/containers/suggested.get.parameters[1].in" = "header"
"paths./my/playspace/containers/suggested.get.parameters[1].name" = "X-API-Key"
"paths./my/playspace/containers/suggested.get.parameters[1].required" = true
"paths./my/playspace/containers/suggested.get.parameters[1].type" = "string"
"paths./my/playspace/containers/suggested.get.parameters[2].description" = "Clip or Episode PID of the previous or first content item in the Playspace stream."
"paths./my/playspace/containers/suggested.get.parameters[2].in" = "query"
"paths./my/playspace/containers/suggested.get.parameters[2].name" = "previous_pid"
"paths./my/playspace/containers/suggested.get.parameters[2].required" = true
"paths./my/playspace/containers/suggested.get.parameters[2].type" = "string"
"paths./my/playspace/containers/suggested.get.parameters[3].description" = "Container ID of the previous container in the Playspace stream."
"paths./my/playspace/containers/suggested.get.parameters[3].in" = "query"
"paths./my/playspace/containers/suggested.get.parameters[3].name" = "previous_container"
"paths./my/playspace/containers/suggested.get.parameters[3].required" = false
"paths./my/playspace/containers/suggested.get.parameters[3].type" = "string"
"paths./my/playspace/containers/suggested.get.responses.200.description" = "OK"
"paths./my/playspace/containers/suggested.get.responses.200.schema.$ref" = "#/definitions/PlayspaceContainer"
"paths./my/playspace/containers/suggested.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/playspace/containers/suggested.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/playspace/containers/suggested.get.schemes.length" = 1
"paths./my/playspace/containers/suggested.get.schemes[0]" = "https"
"paths./my/playspace/containers/suggested.get.summary" = "Suggested Playspace Container"
"paths./my/playspace/containers/suggested.get.tags.length" = 1
"paths./my/playspace/containers/suggested.get.tags[0]" = "Playspace"
"paths./my/playspace/containers/{id}.get.description" = "Playspace Container by ID\n"
"paths./my/playspace/containers/{id}.get.operationId" = "getContainer"
"paths./my/playspace/containers/{id}.get.parameters.length" = 3
"paths./my/playspace/containers/{id}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/playspace/containers/{id}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/playspace/containers/{id}.get.parameters[0].in" = "header"
"paths./my/playspace/containers/{id}.get.parameters[0].name" = "Authorization"
"paths./my/playspace/containers/{id}.get.parameters[0].required" = true
"paths./my/playspace/containers/{id}.get.parameters[0].type" = "string"
"paths./my/playspace/containers/{id}.get.parameters[1].description" = "API_KEY"
"paths./my/playspace/containers/{id}.get.parameters[1].in" = "header"
"paths./my/playspace/containers/{id}.get.parameters[1].name" = "X-API-Key"
"paths./my/playspace/containers/{id}.get.parameters[1].required" = true
"paths./my/playspace/containers/{id}.get.parameters[1].type" = "string"
"paths./my/playspace/containers/{id}.get.parameters[2].description" = "Playspace Container ID"
"paths./my/playspace/containers/{id}.get.parameters[2].in" = "path"
"paths./my/playspace/containers/{id}.get.parameters[2].name" = "id"
"paths./my/playspace/containers/{id}.get.parameters[2].required" = true
"paths./my/playspace/containers/{id}.get.parameters[2].type" = "string"
"paths./my/playspace/containers/{id}.get.responses.200.description" = "OK"
"paths./my/playspace/containers/{id}.get.responses.200.schema.$ref" = "#/definitions/PlayspaceContainer"
"paths./my/playspace/containers/{id}.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/playspace/containers/{id}.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/playspace/containers/{id}.get.responses.404.description" = "No Playspace container with given ID could be found."
"paths./my/playspace/containers/{id}.get.responses.404.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/playspace/containers/{id}.get.schemes.length" = 1
"paths./my/playspace/containers/{id}.get.schemes[0]" = "https"
"paths./my/playspace/containers/{id}.get.summary" = "Playspace Container by ID"
"paths./my/playspace/containers/{id}.get.tags.length" = 1
"paths./my/playspace/containers/{id}.get.tags[0]" = "Playspace"
"paths./my/programmes/recommendations.get.description" = "Recommended Programmes from the Audience Platforms' Recomendations Service\n"
"paths./my/programmes/recommendations.get.operationId" = "getRecommendations"
"paths./my/programmes/recommendations.get.parameters.length" = 5
"paths./my/programmes/recommendations.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/programmes/recommendations.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/programmes/recommendations.get.parameters[0].in" = "header"
"paths./my/programmes/recommendations.get.parameters[0].name" = "Authorization"
"paths./my/programmes/recommendations.get.parameters[0].required" = true
"paths./my/programmes/recommendations.get.parameters[0].type" = "string"
"paths./my/programmes/recommendations.get.parameters[1].description" = "API_KEY"
"paths./my/programmes/recommendations.get.parameters[1].in" = "header"
"paths./my/programmes/recommendations.get.parameters[1].name" = "X-API-Key"
"paths./my/programmes/recommendations.get.parameters[1].required" = true
"paths./my/programmes/recommendations.get.parameters[1].type" = "string"
"paths./my/programmes/recommendations.get.parameters[2].description" = "Paginated results offset"
"paths./my/programmes/recommendations.get.parameters[2].in" = "query"
"paths./my/programmes/recommendations.get.parameters[2].name" = "offset"
"paths./my/programmes/recommendations.get.parameters[2].required" = false
"paths./my/programmes/recommendations.get.parameters[2].type" = "integer"
"paths./my/programmes/recommendations.get.parameters[3].description" = "Paginated results limit"
"paths./my/programmes/recommendations.get.parameters[3].in" = "query"
"paths./my/programmes/recommendations.get.parameters[3].name" = "limit"
"paths./my/programmes/recommendations.get.parameters[3].required" = false
"paths./my/programmes/recommendations.get.parameters[3].type" = "integer"
"paths./my/programmes/recommendations.get.parameters[4].description" = "Only return available results for the web/mobile."
"paths./my/programmes/recommendations.get.parameters[4].enum.length" = 2
"paths./my/programmes/recommendations.get.parameters[4].enum[0]" = "web"
"paths./my/programmes/recommendations.get.parameters[4].enum[1]" = "mobile"
"paths./my/programmes/recommendations.get.parameters[4].in" = "query"
"paths./my/programmes/recommendations.get.parameters[4].name" = "rights"
"paths./my/programmes/recommendations.get.parameters[4].required" = true
"paths./my/programmes/recommendations.get.parameters[4].type" = "string"
"paths./my/programmes/recommendations.get.responses.200.description" = "OK"
"paths./my/programmes/recommendations.get.responses.200.schema.$ref" = "#/definitions/ProgrammesResponse"
"paths./my/programmes/recommendations.get.responses.401.description" = "There was an error with the supplied `Authorization` header."
"paths./my/programmes/recommendations.get.responses.401.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/programmes/recommendations.get.responses.default.description" = "Unexpected error"
"paths./my/programmes/recommendations.get.responses.default.schema.$ref" = "#/definitions/ErrorResponse"
"paths./my/programmes/recommendations.get.summary" = "Recommended Programmes"
"paths./my/programmes/recommendations.get.tags.length" = 1
"paths./my/programmes/recommendations.get.tags[0]" = "Programmes"
"paths./my/radio/favourites.get.description" = "List of favourited episodes and clips for a given user for iPlayer Radio.\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/favourites.get.operationId" = "getPersonalisedRadioFavourites"
"paths./my/radio/favourites.get.parameters.length" = 7
"paths./my/radio/favourites.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.get.parameters[0].in" = "header"
"paths./my/radio/favourites.get.parameters[0].name" = "Authorization"
"paths./my/radio/favourites.get.parameters[0].required" = true
"paths./my/radio/favourites.get.parameters[0].type" = "string"
"paths./my/radio/favourites.get.parameters[1].default" = "idv5"
"paths./my/radio/favourites.get.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites.get.parameters[1].in" = "header"
"paths./my/radio/favourites.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites.get.parameters[1].required" = true
"paths./my/radio/favourites.get.parameters[1].type" = "string"
"paths./my/radio/favourites.get.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites.get.parameters[2].in" = "header"
"paths./my/radio/favourites.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites.get.parameters[2].required" = true
"paths./my/radio/favourites.get.parameters[2].type" = "string"
"paths./my/radio/favourites.get.parameters[3].description" = "Paginated results offset"
"paths./my/radio/favourites.get.parameters[3].in" = "query"
"paths./my/radio/favourites.get.parameters[3].name" = "offset"
"paths./my/radio/favourites.get.parameters[3].required" = false
"paths./my/radio/favourites.get.parameters[3].type" = "integer"
"paths./my/radio/favourites.get.parameters[4].description" = "Paginated results limit"
"paths./my/radio/favourites.get.parameters[4].in" = "query"
"paths./my/radio/favourites.get.parameters[4].name" = "limit"
"paths./my/radio/favourites.get.parameters[4].required" = false
"paths./my/radio/favourites.get.parameters[4].type" = "integer"
"paths./my/radio/favourites.get.parameters[5].description" = "Sort order for Personalised Radio results"
"paths./my/radio/favourites.get.parameters[5].enum.length" = 3
"paths./my/radio/favourites.get.parameters[5].enum[0]" = "programme_titles"
"paths./my/radio/favourites.get.parameters[5].enum[1]" = "available_from_date"
"paths./my/radio/favourites.get.parameters[5].enum[2]" = "available_to_date"
"paths./my/radio/favourites.get.parameters[5].in" = "query"
"paths./my/radio/favourites.get.parameters[5].name" = "sort"
"paths./my/radio/favourites.get.parameters[5].required" = false
"paths./my/radio/favourites.get.parameters[5].type" = "string"
"paths./my/radio/favourites.get.parameters[6].description" = "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
"paths./my/radio/favourites.get.parameters[6].in" = "query"
"paths./my/radio/favourites.get.parameters[6].name" = "show_all_activity"
"paths./my/radio/favourites.get.parameters[6].required" = false
"paths./my/radio/favourites.get.parameters[6].type" = "boolean"
"paths./my/radio/favourites.get.responses.200.description" = "OK"
"paths./my/radio/favourites.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/favourites.get.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites.get.schemes.length" = 1
"paths./my/radio/favourites.get.schemes[0]" = "https"
"paths./my/radio/favourites.get.summary" = "Favourite Episodes and Clips"
"paths./my/radio/favourites.get.tags.length" = 1
"paths./my/radio/favourites.get.tags[0]" = "Radio"
"paths./my/radio/favourites.post.description" = "Add User favourites\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/favourites.post.operationId" = "postPersonalisedRadioBatch"
"paths./my/radio/favourites.post.parameters.length" = 4
"paths./my/radio/favourites.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.post.parameters[0].in" = "header"
"paths./my/radio/favourites.post.parameters[0].name" = "Authorization"
"paths./my/radio/favourites.post.parameters[0].required" = true
"paths./my/radio/favourites.post.parameters[0].type" = "string"
"paths./my/radio/favourites.post.parameters[1].default" = "idv5"
"paths./my/radio/favourites.post.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites.post.parameters[1].in" = "header"
"paths./my/radio/favourites.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites.post.parameters[1].required" = true
"paths./my/radio/favourites.post.parameters[1].type" = "string"
"paths./my/radio/favourites.post.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites.post.parameters[2].in" = "header"
"paths./my/radio/favourites.post.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites.post.parameters[2].required" = true
"paths./my/radio/favourites.post.parameters[2].type" = "string"
"paths./my/radio/favourites.post.parameters[3].description" = "Action favourited or unfavourited"
"paths./my/radio/favourites.post.parameters[3].in" = "body"
"paths./my/radio/favourites.post.parameters[3].name" = "body"
"paths./my/radio/favourites.post.parameters[3].required" = true
"paths./my/radio/favourites.post.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedRadioBatchRequest"
"paths./my/radio/favourites.post.parameters[3].schema.type" = "array"
"paths./my/radio/favourites.post.responses.200.description" = "OK"
"paths./my/radio/favourites.post.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/favourites.post.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites.post.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites.post.summary" = "Favourite Episodes and Clips"
"paths./my/radio/favourites.post.tags.length" = 1
"paths./my/radio/favourites.post.tags[0]" = "Radio"
"paths./my/radio/favourites.put.description" = "Update user favourites\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/favourites.put.operationId" = "putPersonalisedRadioBatch"
"paths./my/radio/favourites.put.parameters.length" = 4
"paths./my/radio/favourites.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites.put.parameters[0].in" = "header"
"paths./my/radio/favourites.put.parameters[0].name" = "Authorization"
"paths./my/radio/favourites.put.parameters[0].required" = true
"paths./my/radio/favourites.put.parameters[0].type" = "string"
"paths./my/radio/favourites.put.parameters[1].default" = "idv5"
"paths./my/radio/favourites.put.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites.put.parameters[1].in" = "header"
"paths./my/radio/favourites.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites.put.parameters[1].required" = true
"paths./my/radio/favourites.put.parameters[1].type" = "string"
"paths./my/radio/favourites.put.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites.put.parameters[2].in" = "header"
"paths./my/radio/favourites.put.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites.put.parameters[2].required" = true
"paths./my/radio/favourites.put.parameters[2].type" = "string"
"paths./my/radio/favourites.put.parameters[3].description" = "Action favourited or unfavourited"
"paths./my/radio/favourites.put.parameters[3].in" = "body"
"paths./my/radio/favourites.put.parameters[3].name" = "body"
"paths./my/radio/favourites.put.parameters[3].required" = true
"paths./my/radio/favourites.put.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedRadioBatchRequest"
"paths./my/radio/favourites.put.parameters[3].schema.type" = "array"
"paths./my/radio/favourites.put.responses.200.description" = "OK"
"paths./my/radio/favourites.put.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/favourites.put.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites.put.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites.put.summary" = "Favourite Episodes and Clips"
"paths./my/radio/favourites.put.tags.length" = 1
"paths./my/radio/favourites.put.tags[0]" = "Radio"
"paths./my/radio/favourites/{type}.get.description" = "List of followed 'clips' or 'episode' items for a given iPlayer Radio user\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/favourites/{type}.get.operationId" = "getPersonalisedRadioFavouritesByType"
"paths./my/radio/favourites/{type}.get.parameters.length" = 8
"paths./my/radio/favourites/{type}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}.get.parameters[0].in" = "header"
"paths./my/radio/favourites/{type}.get.parameters[0].name" = "Authorization"
"paths./my/radio/favourites/{type}.get.parameters[0].required" = true
"paths./my/radio/favourites/{type}.get.parameters[0].type" = "string"
"paths./my/radio/favourites/{type}.get.parameters[1].default" = "idv5"
"paths./my/radio/favourites/{type}.get.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites/{type}.get.parameters[1].in" = "header"
"paths./my/radio/favourites/{type}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites/{type}.get.parameters[1].required" = true
"paths./my/radio/favourites/{type}.get.parameters[1].type" = "string"
"paths./my/radio/favourites/{type}.get.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites/{type}.get.parameters[2].in" = "header"
"paths./my/radio/favourites/{type}.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites/{type}.get.parameters[2].required" = true
"paths./my/radio/favourites/{type}.get.parameters[2].type" = "string"
"paths./my/radio/favourites/{type}.get.parameters[3].description" = "Supported Radio favourite types: Clips or Episodes"
"paths./my/radio/favourites/{type}.get.parameters[3].enum.length" = 2
"paths./my/radio/favourites/{type}.get.parameters[3].enum[0]" = "clips"
"paths./my/radio/favourites/{type}.get.parameters[3].enum[1]" = "episodes"
"paths./my/radio/favourites/{type}.get.parameters[3].in" = "path"
"paths./my/radio/favourites/{type}.get.parameters[3].name" = "type"
"paths./my/radio/favourites/{type}.get.parameters[3].required" = true
"paths./my/radio/favourites/{type}.get.parameters[3].type" = "string"
"paths./my/radio/favourites/{type}.get.parameters[4].description" = "Sort order for Personalised Radio results"
"paths./my/radio/favourites/{type}.get.parameters[4].enum.length" = 3
"paths./my/radio/favourites/{type}.get.parameters[4].enum[0]" = "programme_titles"
"paths./my/radio/favourites/{type}.get.parameters[4].enum[1]" = "available_from_date"
"paths./my/radio/favourites/{type}.get.parameters[4].enum[2]" = "available_to_date"
"paths./my/radio/favourites/{type}.get.parameters[4].in" = "query"
"paths./my/radio/favourites/{type}.get.parameters[4].name" = "sort"
"paths./my/radio/favourites/{type}.get.parameters[4].required" = false
"paths./my/radio/favourites/{type}.get.parameters[4].type" = "string"
"paths./my/radio/favourites/{type}.get.parameters[5].description" = "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
"paths./my/radio/favourites/{type}.get.parameters[5].in" = "query"
"paths./my/radio/favourites/{type}.get.parameters[5].name" = "show_all_activity"
"paths./my/radio/favourites/{type}.get.parameters[5].required" = false
"paths./my/radio/favourites/{type}.get.parameters[5].type" = "boolean"
"paths./my/radio/favourites/{type}.get.parameters[6].description" = "Paginated results offset"
"paths./my/radio/favourites/{type}.get.parameters[6].in" = "query"
"paths./my/radio/favourites/{type}.get.parameters[6].name" = "offset"
"paths./my/radio/favourites/{type}.get.parameters[6].required" = false
"paths./my/radio/favourites/{type}.get.parameters[6].type" = "integer"
"paths./my/radio/favourites/{type}.get.parameters[7].description" = "Paginated results limit"
"paths./my/radio/favourites/{type}.get.parameters[7].in" = "query"
"paths./my/radio/favourites/{type}.get.parameters[7].name" = "limit"
"paths./my/radio/favourites/{type}.get.parameters[7].required" = false
"paths./my/radio/favourites/{type}.get.parameters[7].type" = "integer"
"paths./my/radio/favourites/{type}.get.responses.200.description" = "OK"
"paths./my/radio/favourites/{type}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/favourites/{type}.get.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites/{type}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites/{type}.get.summary" = "Favourite Episodes and Clips by Type"
"paths./my/radio/favourites/{type}.get.tags.length" = 1
"paths./my/radio/favourites/{type}.get.tags[0]" = "Radio"
"paths./my/radio/favourites/{type}/{pid}.delete.description" = "Remove User favourite\n"
"paths./my/radio/favourites/{type}/{pid}.delete.operationId" = "deletePersonalisedRadioByActivityTypeById"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters.length" = 5
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].name" = "Authorization"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].required" = true
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[0].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].default" = "idv5"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].required" = true
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[1].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[2].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[2].required" = true
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[2].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].description" = "Supported Radio favourite types: Clips or Episodes"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].enum.length" = 2
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].enum[0]" = "clips"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].enum[1]" = "episodes"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].name" = "type"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].required" = true
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[3].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[4].description" = "pid"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[4].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[4].name" = "pid"
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[4].required" = true
"paths./my/radio/favourites/{type}/{pid}.delete.parameters[4].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.delete.responses.200.description" = "OK"
"paths./my/radio/favourites/{type}/{pid}.delete.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/favourites/{type}/{pid}.delete.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites/{type}/{pid}.delete.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites/{type}/{pid}.delete.summary" = "Favourite Episode or Clip"
"paths./my/radio/favourites/{type}/{pid}.delete.tags.length" = 1
"paths./my/radio/favourites/{type}/{pid}.delete.tags[0]" = "Radio"
"paths./my/radio/favourites/{type}/{pid}.get.description" = "Check to see if a single clip or episode entity is in a users favourites - determines UX of add button.\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/favourites/{type}/{pid}.get.operationId" = "getPersonalisedRadioByActivityTypeById"
"paths./my/radio/favourites/{type}/{pid}.get.parameters.length" = 6
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].name" = "Authorization"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].required" = true
"paths./my/radio/favourites/{type}/{pid}.get.parameters[0].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].default" = "idv5"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].required" = true
"paths./my/radio/favourites/{type}/{pid}.get.parameters[1].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[2].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[2].required" = true
"paths./my/radio/favourites/{type}/{pid}.get.parameters[2].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].description" = "Supported Radio favourite types: Clips or Episodes"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].enum.length" = 2
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].enum[0]" = "clips"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].enum[1]" = "episodes"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].name" = "type"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].required" = true
"paths./my/radio/favourites/{type}/{pid}.get.parameters[3].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[4].description" = "pid"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[4].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[4].name" = "pid"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[4].required" = true
"paths./my/radio/favourites/{type}/{pid}.get.parameters[4].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[5].description" = "Include items which have been 'soft' unfavourited in response. I.e items with UAS type of 'unfavourited'"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[5].in" = "query"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[5].name" = "show_all_activity"
"paths./my/radio/favourites/{type}/{pid}.get.parameters[5].required" = false
"paths./my/radio/favourites/{type}/{pid}.get.parameters[5].type" = "boolean"
"paths./my/radio/favourites/{type}/{pid}.get.responses.200.description" = "OK"
"paths./my/radio/favourites/{type}/{pid}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/favourites/{type}/{pid}.get.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites/{type}/{pid}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites/{type}/{pid}.get.summary" = "Favourite Episode or Clip"
"paths./my/radio/favourites/{type}/{pid}.get.tags.length" = 1
"paths./my/radio/favourites/{type}/{pid}.get.tags[0]" = "Radio"
"paths./my/radio/favourites/{type}/{pid}.post.description" = "Add User favourite\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/favourites/{type}/{pid}.post.operationId" = "postPersonalisedRadioByActivityTypeById"
"paths./my/radio/favourites/{type}/{pid}.post.parameters.length" = 6
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].name" = "Authorization"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[0].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].default" = "idv5"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[1].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[2].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[2].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[2].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].description" = "Supported Radio favourite types: Clips or Episodes"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].enum.length" = 2
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].enum[0]" = "clips"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].enum[1]" = "episodes"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].name" = "type"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[3].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[4].description" = "pid"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[4].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[4].name" = "pid"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[4].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[4].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[5].description" = "Action favourited or unfavourited"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[5].in" = "body"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[5].name" = "body"
"paths./my/radio/favourites/{type}/{pid}.post.parameters[5].required" = true
"paths./my/radio/favourites/{type}/{pid}.post.parameters[5].schema.$ref" = "#/definitions/PersonalisedRadioRequest"
"paths./my/radio/favourites/{type}/{pid}.post.responses.200.description" = "OK"
"paths./my/radio/favourites/{type}/{pid}.post.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/favourites/{type}/{pid}.post.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites/{type}/{pid}.post.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites/{type}/{pid}.post.summary" = "Favourite Episode or Clip"
"paths./my/radio/favourites/{type}/{pid}.post.tags.length" = 1
"paths./my/radio/favourites/{type}/{pid}.post.tags[0]" = "Radio"
"paths./my/radio/favourites/{type}/{pid}.put.description" = "Update user favourite\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/favourites/{type}/{pid}.put.operationId" = "putPersonalisedRadioByActivityTypeById"
"paths./my/radio/favourites/{type}/{pid}.put.parameters.length" = 6
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].name" = "Authorization"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[0].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].default" = "idv5"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].description" = "Authentication type"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[1].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[2].description" = "API_KEY"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[2].in" = "header"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[2].name" = "X-API-Key"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[2].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[2].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].description" = "Supported Radio favourite types: Clips or Episodes"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].enum.length" = 2
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].enum[0]" = "clips"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].enum[1]" = "episodes"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].name" = "type"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[3].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[4].description" = "pid"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[4].in" = "path"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[4].name" = "pid"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[4].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[4].type" = "string"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[5].description" = "Action favourited or unfavourited"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[5].in" = "body"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[5].name" = "body"
"paths./my/radio/favourites/{type}/{pid}.put.parameters[5].required" = true
"paths./my/radio/favourites/{type}/{pid}.put.parameters[5].schema.$ref" = "#/definitions/PersonalisedRadioRequest"
"paths./my/radio/favourites/{type}/{pid}.put.responses.200.description" = "OK"
"paths./my/radio/favourites/{type}/{pid}.put.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/favourites/{type}/{pid}.put.responses.default.description" = "Unexpected error"
"paths./my/radio/favourites/{type}/{pid}.put.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/favourites/{type}/{pid}.put.summary" = "Favourite Episode or Clip"
"paths./my/radio/favourites/{type}/{pid}.put.tags.length" = 1
"paths./my/radio/favourites/{type}/{pid}.put.tags[0]" = "Radio"
"paths./my/radio/follows.get.description" = "List of favourited brands and series for a given user for iPlayer Radio.\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/follows.get.operationId" = "getPersonalisedRadioFollows"
"paths./my/radio/follows.get.parameters.length" = 7
"paths./my/radio/follows.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.get.parameters[0].in" = "header"
"paths./my/radio/follows.get.parameters[0].name" = "Authorization"
"paths./my/radio/follows.get.parameters[0].required" = true
"paths./my/radio/follows.get.parameters[0].type" = "string"
"paths./my/radio/follows.get.parameters[1].default" = "idv5"
"paths./my/radio/follows.get.parameters[1].description" = "Authentication type"
"paths./my/radio/follows.get.parameters[1].in" = "header"
"paths./my/radio/follows.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows.get.parameters[1].required" = true
"paths./my/radio/follows.get.parameters[1].type" = "string"
"paths./my/radio/follows.get.parameters[2].description" = "API_KEY"
"paths./my/radio/follows.get.parameters[2].in" = "header"
"paths./my/radio/follows.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows.get.parameters[2].required" = true
"paths./my/radio/follows.get.parameters[2].type" = "string"
"paths./my/radio/follows.get.parameters[3].description" = "Paginated results offset"
"paths./my/radio/follows.get.parameters[3].in" = "query"
"paths./my/radio/follows.get.parameters[3].name" = "offset"
"paths./my/radio/follows.get.parameters[3].required" = false
"paths./my/radio/follows.get.parameters[3].type" = "integer"
"paths./my/radio/follows.get.parameters[4].description" = "Paginated results limit"
"paths./my/radio/follows.get.parameters[4].in" = "query"
"paths./my/radio/follows.get.parameters[4].name" = "limit"
"paths./my/radio/follows.get.parameters[4].required" = false
"paths./my/radio/follows.get.parameters[4].type" = "integer"
"paths./my/radio/follows.get.parameters[5].description" = "Sort order for Personalised Radio results"
"paths./my/radio/follows.get.parameters[5].enum.length" = 3
"paths./my/radio/follows.get.parameters[5].enum[0]" = "programme_titles"
"paths./my/radio/follows.get.parameters[5].enum[1]" = "available_from_date"
"paths./my/radio/follows.get.parameters[5].enum[2]" = "available_to_date"
"paths./my/radio/follows.get.parameters[5].in" = "query"
"paths./my/radio/follows.get.parameters[5].name" = "sort"
"paths./my/radio/follows.get.parameters[5].required" = false
"paths./my/radio/follows.get.parameters[5].type" = "string"
"paths./my/radio/follows.get.parameters[6].description" = "Include items which have been 'soft' unfollowed in response. I.e items with UAS type of 'unfollowed'"
"paths./my/radio/follows.get.parameters[6].in" = "query"
"paths./my/radio/follows.get.parameters[6].name" = "show_all_activity"
"paths./my/radio/follows.get.parameters[6].required" = false
"paths./my/radio/follows.get.parameters[6].type" = "boolean"
"paths./my/radio/follows.get.responses.200.description" = "OK"
"paths./my/radio/follows.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/follows.get.responses.default.description" = "Unexpected error"
"paths./my/radio/follows.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows.get.summary" = "Followed Brands and Series"
"paths./my/radio/follows.get.tags.length" = 1
"paths./my/radio/follows.get.tags[0]" = "Radio"
"paths./my/radio/follows.post.description" = "Add 'brand' or 'series' items to a users iPlayer Radio follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/follows.post.operationId" = "postPersonalisedRadioFollowsBatch"
"paths./my/radio/follows.post.parameters.length" = 4
"paths./my/radio/follows.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.post.parameters[0].in" = "header"
"paths./my/radio/follows.post.parameters[0].name" = "Authorization"
"paths./my/radio/follows.post.parameters[0].required" = true
"paths./my/radio/follows.post.parameters[0].type" = "string"
"paths./my/radio/follows.post.parameters[1].default" = "idv5"
"paths./my/radio/follows.post.parameters[1].description" = "Authentication type"
"paths./my/radio/follows.post.parameters[1].in" = "header"
"paths./my/radio/follows.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows.post.parameters[1].required" = true
"paths./my/radio/follows.post.parameters[1].type" = "string"
"paths./my/radio/follows.post.parameters[2].description" = "API_KEY"
"paths./my/radio/follows.post.parameters[2].in" = "header"
"paths./my/radio/follows.post.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows.post.parameters[2].required" = true
"paths./my/radio/follows.post.parameters[2].type" = "string"
"paths./my/radio/follows.post.parameters[3].description" = "Action followed or unfollowed"
"paths./my/radio/follows.post.parameters[3].in" = "body"
"paths./my/radio/follows.post.parameters[3].name" = "body"
"paths./my/radio/follows.post.parameters[3].required" = true
"paths./my/radio/follows.post.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedRadioBatchRequest"
"paths./my/radio/follows.post.parameters[3].schema.type" = "array"
"paths./my/radio/follows.post.responses.200.description" = "OK"
"paths./my/radio/follows.post.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/follows.post.responses.default.description" = "Unexpected error"
"paths./my/radio/follows.post.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows.post.summary" = "Followed Brands and Series"
"paths./my/radio/follows.post.tags.length" = 1
"paths./my/radio/follows.post.tags[0]" = "Radio"
"paths./my/radio/follows.put.description" = "Update 'brands' or 'series' items from a users iPlayer Radio follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/follows.put.operationId" = "putPersonalisedRadioFollowsBatch"
"paths./my/radio/follows.put.parameters.length" = 4
"paths./my/radio/follows.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows.put.parameters[0].in" = "header"
"paths./my/radio/follows.put.parameters[0].name" = "Authorization"
"paths./my/radio/follows.put.parameters[0].required" = true
"paths./my/radio/follows.put.parameters[0].type" = "string"
"paths./my/radio/follows.put.parameters[1].default" = "idv5"
"paths./my/radio/follows.put.parameters[1].description" = "Authentication type"
"paths./my/radio/follows.put.parameters[1].in" = "header"
"paths./my/radio/follows.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows.put.parameters[1].required" = true
"paths./my/radio/follows.put.parameters[1].type" = "string"
"paths./my/radio/follows.put.parameters[2].description" = "API_KEY"
"paths./my/radio/follows.put.parameters[2].in" = "header"
"paths./my/radio/follows.put.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows.put.parameters[2].required" = true
"paths./my/radio/follows.put.parameters[2].type" = "string"
"paths./my/radio/follows.put.parameters[3].description" = "Action followed or unfollowed"
"paths./my/radio/follows.put.parameters[3].in" = "body"
"paths./my/radio/follows.put.parameters[3].name" = "body"
"paths./my/radio/follows.put.parameters[3].required" = true
"paths./my/radio/follows.put.parameters[3].schema.items.$ref" = "#/definitions/PersonalisedRadioBatchRequest"
"paths./my/radio/follows.put.parameters[3].schema.type" = "array"
"paths./my/radio/follows.put.responses.200.description" = "OK"
"paths./my/radio/follows.put.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/follows.put.responses.default.description" = "Unexpected error"
"paths./my/radio/follows.put.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows.put.summary" = "Followed Brands and Series"
"paths./my/radio/follows.put.tags.length" = 1
"paths./my/radio/follows.put.tags[0]" = "Radio"
"paths./my/radio/follows/{type}.get.description" = "List of followed 'brand' or 'series' items for a given iPlayer Radio user\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/follows/{type}.get.operationId" = "getPersonalisedRadioFollowsByType"
"paths./my/radio/follows/{type}.get.parameters.length" = 8
"paths./my/radio/follows/{type}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}.get.parameters[0].in" = "header"
"paths./my/radio/follows/{type}.get.parameters[0].name" = "Authorization"
"paths./my/radio/follows/{type}.get.parameters[0].required" = true
"paths./my/radio/follows/{type}.get.parameters[0].type" = "string"
"paths./my/radio/follows/{type}.get.parameters[1].default" = "idv5"
"paths./my/radio/follows/{type}.get.parameters[1].description" = "Authentication type"
"paths./my/radio/follows/{type}.get.parameters[1].in" = "header"
"paths./my/radio/follows/{type}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows/{type}.get.parameters[1].required" = true
"paths./my/radio/follows/{type}.get.parameters[1].type" = "string"
"paths./my/radio/follows/{type}.get.parameters[2].description" = "API_KEY"
"paths./my/radio/follows/{type}.get.parameters[2].in" = "header"
"paths./my/radio/follows/{type}.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows/{type}.get.parameters[2].required" = true
"paths./my/radio/follows/{type}.get.parameters[2].type" = "string"
"paths./my/radio/follows/{type}.get.parameters[3].description" = "Supported Radio follows types: Brands or Series"
"paths./my/radio/follows/{type}.get.parameters[3].enum.length" = 2
"paths./my/radio/follows/{type}.get.parameters[3].enum[0]" = "brands"
"paths./my/radio/follows/{type}.get.parameters[3].enum[1]" = "series"
"paths./my/radio/follows/{type}.get.parameters[3].in" = "path"
"paths./my/radio/follows/{type}.get.parameters[3].name" = "type"
"paths./my/radio/follows/{type}.get.parameters[3].required" = true
"paths./my/radio/follows/{type}.get.parameters[3].type" = "string"
"paths./my/radio/follows/{type}.get.parameters[4].description" = "Sort order for Personalised Radio results"
"paths./my/radio/follows/{type}.get.parameters[4].enum.length" = 3
"paths./my/radio/follows/{type}.get.parameters[4].enum[0]" = "programme_titles"
"paths./my/radio/follows/{type}.get.parameters[4].enum[1]" = "available_from_date"
"paths./my/radio/follows/{type}.get.parameters[4].enum[2]" = "available_to_date"
"paths./my/radio/follows/{type}.get.parameters[4].in" = "query"
"paths./my/radio/follows/{type}.get.parameters[4].name" = "sort"
"paths./my/radio/follows/{type}.get.parameters[4].required" = false
"paths./my/radio/follows/{type}.get.parameters[4].type" = "string"
"paths./my/radio/follows/{type}.get.parameters[5].description" = "Paginated results offset"
"paths./my/radio/follows/{type}.get.parameters[5].in" = "query"
"paths./my/radio/follows/{type}.get.parameters[5].name" = "offset"
"paths./my/radio/follows/{type}.get.parameters[5].required" = false
"paths./my/radio/follows/{type}.get.parameters[5].type" = "integer"
"paths./my/radio/follows/{type}.get.parameters[6].description" = "Paginated results limit"
"paths./my/radio/follows/{type}.get.parameters[6].in" = "query"
"paths./my/radio/follows/{type}.get.parameters[6].name" = "limit"
"paths./my/radio/follows/{type}.get.parameters[6].required" = false
"paths./my/radio/follows/{type}.get.parameters[6].type" = "integer"
"paths./my/radio/follows/{type}.get.parameters[7].description" = "Include items which have been 'soft' unfollowed in response. I.e items with UAS type of 'unfollowed'"
"paths./my/radio/follows/{type}.get.parameters[7].in" = "query"
"paths./my/radio/follows/{type}.get.parameters[7].name" = "show_all_activity"
"paths./my/radio/follows/{type}.get.parameters[7].required" = false
"paths./my/radio/follows/{type}.get.parameters[7].type" = "boolean"
"paths./my/radio/follows/{type}.get.responses.200.description" = "OK"
"paths./my/radio/follows/{type}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/follows/{type}.get.responses.default.description" = "Unexpected error"
"paths./my/radio/follows/{type}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows/{type}.get.summary" = "Followed Brands or Series by Type"
"paths./my/radio/follows/{type}.get.tags.length" = 1
"paths./my/radio/follows/{type}.get.tags[0]" = "Radio"
"paths./my/radio/follows/{type}/{pid}.delete.description" = "Remove 'brand' or 'series' items from a users iPlayer Radio follows\n"
"paths./my/radio/follows/{type}/{pid}.delete.operationId" = "deletePersonalisedRadioFollowsByTypeById"
"paths./my/radio/follows/{type}/{pid}.delete.parameters.length" = 5
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].in" = "header"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].name" = "Authorization"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].required" = true
"paths./my/radio/follows/{type}/{pid}.delete.parameters[0].type" = "string"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].default" = "idv5"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].description" = "Authentication type"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].in" = "header"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].required" = true
"paths./my/radio/follows/{type}/{pid}.delete.parameters[1].type" = "string"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[2].description" = "API_KEY"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[2].in" = "header"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[2].required" = true
"paths./my/radio/follows/{type}/{pid}.delete.parameters[2].type" = "string"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].description" = "Supported Radio follows types: Brands or Series"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].enum.length" = 2
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].enum[0]" = "brands"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].enum[1]" = "series"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].in" = "path"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].name" = "type"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].required" = true
"paths./my/radio/follows/{type}/{pid}.delete.parameters[3].type" = "string"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[4].description" = "pid"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[4].in" = "path"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[4].name" = "pid"
"paths./my/radio/follows/{type}/{pid}.delete.parameters[4].required" = true
"paths./my/radio/follows/{type}/{pid}.delete.parameters[4].type" = "string"
"paths./my/radio/follows/{type}/{pid}.delete.responses.200.description" = "OK"
"paths./my/radio/follows/{type}/{pid}.delete.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/follows/{type}/{pid}.delete.responses.default.description" = "Unexpected error"
"paths./my/radio/follows/{type}/{pid}.delete.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows/{type}/{pid}.delete.summary" = "Followed Brand or Series"
"paths./my/radio/follows/{type}/{pid}.delete.tags.length" = 1
"paths./my/radio/follows/{type}/{pid}.delete.tags[0]" = "Radio"
"paths./my/radio/follows/{type}/{pid}.get.description" = "Check to see if a single brand or series entity is in a users follows - determines UX of add button.\n"
"paths./my/radio/follows/{type}/{pid}.get.operationId" = "getPersonalisedRadioFollowsByTypeById"
"paths./my/radio/follows/{type}/{pid}.get.parameters.length" = 5
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].in" = "header"
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].name" = "Authorization"
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].required" = true
"paths./my/radio/follows/{type}/{pid}.get.parameters[0].type" = "string"
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].default" = "idv5"
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].description" = "Authentication type"
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].in" = "header"
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].required" = true
"paths./my/radio/follows/{type}/{pid}.get.parameters[1].type" = "string"
"paths./my/radio/follows/{type}/{pid}.get.parameters[2].description" = "API_KEY"
"paths./my/radio/follows/{type}/{pid}.get.parameters[2].in" = "header"
"paths./my/radio/follows/{type}/{pid}.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows/{type}/{pid}.get.parameters[2].required" = true
"paths./my/radio/follows/{type}/{pid}.get.parameters[2].type" = "string"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].description" = "Supported Radio follows types: Brands or Series"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].enum.length" = 2
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].enum[0]" = "brands"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].enum[1]" = "series"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].in" = "path"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].name" = "type"
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].required" = true
"paths./my/radio/follows/{type}/{pid}.get.parameters[3].type" = "string"
"paths./my/radio/follows/{type}/{pid}.get.parameters[4].description" = "pid"
"paths./my/radio/follows/{type}/{pid}.get.parameters[4].in" = "path"
"paths./my/radio/follows/{type}/{pid}.get.parameters[4].name" = "pid"
"paths./my/radio/follows/{type}/{pid}.get.parameters[4].required" = true
"paths./my/radio/follows/{type}/{pid}.get.parameters[4].type" = "string"
"paths./my/radio/follows/{type}/{pid}.get.responses.200.description" = "OK"
"paths./my/radio/follows/{type}/{pid}.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/follows/{type}/{pid}.get.responses.default.description" = "Unexpected error"
"paths./my/radio/follows/{type}/{pid}.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows/{type}/{pid}.get.summary" = "Followed Brand or Series"
"paths./my/radio/follows/{type}/{pid}.get.tags.length" = 1
"paths./my/radio/follows/{type}/{pid}.get.tags[0]" = "Radio"
"paths./my/radio/follows/{type}/{pid}.post.description" = "Add 'brand' or 'series' items from a users iPlayer Radio follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/follows/{type}/{pid}.post.operationId" = "postPersonalisedRadioFollowsByTypeById"
"paths./my/radio/follows/{type}/{pid}.post.parameters.length" = 6
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].in" = "header"
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].name" = "Authorization"
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[0].type" = "string"
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].default" = "idv5"
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].description" = "Authentication type"
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].in" = "header"
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[1].type" = "string"
"paths./my/radio/follows/{type}/{pid}.post.parameters[2].description" = "API_KEY"
"paths./my/radio/follows/{type}/{pid}.post.parameters[2].in" = "header"
"paths./my/radio/follows/{type}/{pid}.post.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows/{type}/{pid}.post.parameters[2].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[2].type" = "string"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].description" = "Supported Radio follows types: Brands or Series"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].enum.length" = 2
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].enum[0]" = "brands"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].enum[1]" = "series"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].in" = "path"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].name" = "type"
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[3].type" = "string"
"paths./my/radio/follows/{type}/{pid}.post.parameters[4].description" = "pid"
"paths./my/radio/follows/{type}/{pid}.post.parameters[4].in" = "path"
"paths./my/radio/follows/{type}/{pid}.post.parameters[4].name" = "pid"
"paths./my/radio/follows/{type}/{pid}.post.parameters[4].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[4].type" = "string"
"paths./my/radio/follows/{type}/{pid}.post.parameters[5].description" = "Action followed or unfollowed"
"paths./my/radio/follows/{type}/{pid}.post.parameters[5].in" = "body"
"paths./my/radio/follows/{type}/{pid}.post.parameters[5].name" = "body"
"paths./my/radio/follows/{type}/{pid}.post.parameters[5].required" = true
"paths./my/radio/follows/{type}/{pid}.post.parameters[5].schema.$ref" = "#/definitions/PersonalisedRadioRequest"
"paths./my/radio/follows/{type}/{pid}.post.responses.200.description" = "OK"
"paths./my/radio/follows/{type}/{pid}.post.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/follows/{type}/{pid}.post.responses.default.description" = "Unexpected error"
"paths./my/radio/follows/{type}/{pid}.post.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows/{type}/{pid}.post.summary" = "Followed Brand or Series"
"paths./my/radio/follows/{type}/{pid}.post.tags.length" = 1
"paths./my/radio/follows/{type}/{pid}.post.tags[0]" = "Radio"
"paths./my/radio/follows/{type}/{pid}.put.description" = "Update 'brand' or 'series' items from a users iPlayer Radio follows\n\nN.B. Any HTML tags submitted in metadata will be removed\n"
"paths./my/radio/follows/{type}/{pid}.put.operationId" = "putPersonalisedRadioFollowsByTypeById"
"paths./my/radio/follows/{type}/{pid}.put.parameters.length" = 6
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].in" = "header"
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].name" = "Authorization"
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[0].type" = "string"
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].default" = "idv5"
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].description" = "Authentication type"
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].in" = "header"
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[1].type" = "string"
"paths./my/radio/follows/{type}/{pid}.put.parameters[2].description" = "API_KEY"
"paths./my/radio/follows/{type}/{pid}.put.parameters[2].in" = "header"
"paths./my/radio/follows/{type}/{pid}.put.parameters[2].name" = "X-API-Key"
"paths./my/radio/follows/{type}/{pid}.put.parameters[2].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[2].type" = "string"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].description" = "Supported Radio follows types: Brands or Series"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].enum.length" = 2
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].enum[0]" = "brands"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].enum[1]" = "series"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].in" = "path"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].name" = "type"
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[3].type" = "string"
"paths./my/radio/follows/{type}/{pid}.put.parameters[4].description" = "pid"
"paths./my/radio/follows/{type}/{pid}.put.parameters[4].in" = "path"
"paths./my/radio/follows/{type}/{pid}.put.parameters[4].name" = "pid"
"paths./my/radio/follows/{type}/{pid}.put.parameters[4].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[4].type" = "string"
"paths./my/radio/follows/{type}/{pid}.put.parameters[5].description" = "Action followed or unfollowed"
"paths./my/radio/follows/{type}/{pid}.put.parameters[5].in" = "body"
"paths./my/radio/follows/{type}/{pid}.put.parameters[5].name" = "body"
"paths./my/radio/follows/{type}/{pid}.put.parameters[5].required" = true
"paths./my/radio/follows/{type}/{pid}.put.parameters[5].schema.$ref" = "#/definitions/PersonalisedRadioRequest"
"paths./my/radio/follows/{type}/{pid}.put.responses.200.description" = "OK"
"paths./my/radio/follows/{type}/{pid}.put.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioSuccessResponse"
"paths./my/radio/follows/{type}/{pid}.put.responses.default.description" = "Unexpected error"
"paths./my/radio/follows/{type}/{pid}.put.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/follows/{type}/{pid}.put.summary" = "Followed Brand or Series"
"paths./my/radio/follows/{type}/{pid}.put.tags.length" = 1
"paths./my/radio/follows/{type}/{pid}.put.tags[0]" = "Radio"
"paths./my/radio/plays.get.description" = "Returns mixed episode and clip plays for a given BBC iPlayer radio user.\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./my/radio/plays.get.operationId" = "getPersonalisedRadioPlays"
"paths./my/radio/plays.get.parameters.length" = 7
"paths./my/radio/plays.get.parameters[0].default" = "Bearer OAUTH_TOKEN"
"paths./my/radio/plays.get.parameters[0].description" = "Bearer OAUTH_TOKEN"
"paths./my/radio/plays.get.parameters[0].in" = "header"
"paths./my/radio/plays.get.parameters[0].name" = "Authorization"
"paths./my/radio/plays.get.parameters[0].required" = true
"paths./my/radio/plays.get.parameters[0].type" = "string"
"paths./my/radio/plays.get.parameters[1].default" = "idv5"
"paths./my/radio/plays.get.parameters[1].description" = "Authentication type"
"paths./my/radio/plays.get.parameters[1].in" = "header"
"paths./my/radio/plays.get.parameters[1].name" = "X-Authentication-Provider"
"paths./my/radio/plays.get.parameters[1].required" = true
"paths./my/radio/plays.get.parameters[1].type" = "string"
"paths./my/radio/plays.get.parameters[2].description" = "API_KEY"
"paths./my/radio/plays.get.parameters[2].in" = "header"
"paths./my/radio/plays.get.parameters[2].name" = "X-API-Key"
"paths./my/radio/plays.get.parameters[2].required" = true
"paths./my/radio/plays.get.parameters[2].type" = "string"
"paths./my/radio/plays.get.parameters[3].description" = "Paginated results offset"
"paths./my/radio/plays.get.parameters[3].in" = "query"
"paths./my/radio/plays.get.parameters[3].name" = "offset"
"paths./my/radio/plays.get.parameters[3].required" = false
"paths./my/radio/plays.get.parameters[3].type" = "integer"
"paths./my/radio/plays.get.parameters[4].description" = "Paginated results limit"
"paths./my/radio/plays.get.parameters[4].in" = "query"
"paths./my/radio/plays.get.parameters[4].name" = "limit"
"paths./my/radio/plays.get.parameters[4].required" = false
"paths./my/radio/plays.get.parameters[4].type" = "integer"
"paths./my/radio/plays.get.parameters[5].description" = "Sort order for Personalised Radio results"
"paths./my/radio/plays.get.parameters[5].enum.length" = 3
"paths./my/radio/plays.get.parameters[5].enum[0]" = "programme_titles"
"paths./my/radio/plays.get.parameters[5].enum[1]" = "available_from_date"
"paths./my/radio/plays.get.parameters[5].enum[2]" = "available_to_date"
"paths./my/radio/plays.get.parameters[5].in" = "query"
"paths./my/radio/plays.get.parameters[5].name" = "sort"
"paths./my/radio/plays.get.parameters[5].required" = false
"paths./my/radio/plays.get.parameters[5].type" = "string"
"paths./my/radio/plays.get.parameters[6].description" = "Include expired/unavailable items"
"paths./my/radio/plays.get.parameters[6].in" = "query"
"paths./my/radio/plays.get.parameters[6].name" = "show_all_activity"
"paths./my/radio/plays.get.parameters[6].required" = false
"paths./my/radio/plays.get.parameters[6].type" = "boolean"
"paths./my/radio/plays.get.responses.200.description" = "OK"
"paths./my/radio/plays.get.responses.200.schema.$ref" = "#/definitions/PersonalisedRadioResponse"
"paths./my/radio/plays.get.responses.default.description" = "Unexpected error"
"paths./my/radio/plays.get.responses.default.schema.$ref" = "#/definitions/PersonalisedRadioErrorResponse"
"paths./my/radio/plays.get.summary" = "Played Episode or Clip"
"paths./my/radio/plays.get.tags.length" = 1
"paths./my/radio/plays.get.tags[0]" = "Radio"
"paths./podcasts.get.description" = "Retrieve all Podcasts\n"
"paths./podcasts.get.operationId" = "getPodcasts"
"paths./podcasts.get.parameters.length" = 9
"paths./podcasts.get.parameters[0].description" = "API_KEY"
"paths./podcasts.get.parameters[0].in" = "header"
"paths./podcasts.get.parameters[0].name" = "X-API-Key"
"paths./podcasts.get.parameters[0].required" = true
"paths./podcasts.get.parameters[0].type" = "string"
"paths./podcasts.get.parameters[1].description" = "Paginated results offset"
"paths./podcasts.get.parameters[1].in" = "query"
"paths./podcasts.get.parameters[1].name" = "offset"
"paths./podcasts.get.parameters[1].required" = false
"paths./podcasts.get.parameters[1].type" = "integer"
"paths./podcasts.get.parameters[2].description" = "Paginated results limit"
"paths./podcasts.get.parameters[2].in" = "query"
"paths./podcasts.get.parameters[2].name" = "limit"
"paths./podcasts.get.parameters[2].required" = false
"paths./podcasts.get.parameters[2].type" = "integer"
"paths./podcasts.get.parameters[3].description" = "Sort order for Podcasts results"
"paths./podcasts.get.parameters[3].enum.length" = 4
"paths./podcasts.get.parameters[3].enum[0]" = "title"
"paths./podcasts.get.parameters[3].enum[1]" = "-title"
"paths./podcasts.get.parameters[3].enum[2]" = "available_from_date"
"paths./podcasts.get.parameters[3].enum[3]" = "-available_from_date"
"paths./podcasts.get.parameters[3].in" = "query"
"paths./podcasts.get.parameters[3].name" = "sort"
"paths./podcasts.get.parameters[3].required" = false
"paths./podcasts.get.parameters[3].type" = "string"
"paths./podcasts.get.parameters[4].description" = "Network Master Brand ID (mid)"
"paths./podcasts.get.parameters[4].in" = "query"
"paths./podcasts.get.parameters[4].name" = "network"
"paths./podcasts.get.parameters[4].required" = false
"paths./podcasts.get.parameters[4].type" = "string"
"paths./podcasts.get.parameters[5].description" = "Network URL key"
"paths./podcasts.get.parameters[5].in" = "query"
"paths./podcasts.get.parameters[5].name" = "network_url_key"
"paths./podcasts.get.parameters[5].required" = false
"paths./podcasts.get.parameters[5].type" = "string"
"paths./podcasts.get.parameters[6].description" = "Category ID"
"paths./podcasts.get.parameters[6].in" = "query"
"paths./podcasts.get.parameters[6].name" = "category"
"paths./podcasts.get.parameters[6].required" = false
"paths./podcasts.get.parameters[6].type" = "string"
"paths./podcasts.get.parameters[7].description" = "Search query String"
"paths./podcasts.get.parameters[7].in" = "query"
"paths./podcasts.get.parameters[7].name" = "q"
"paths./podcasts.get.parameters[7].required" = false
"paths./podcasts.get.parameters[7].type" = "string"
"paths./podcasts.get.parameters[8].description" = "Local, National or Regional Coverage"
"paths./podcasts.get.parameters[8].enum.length" = 3
"paths./podcasts.get.parameters[8].enum[0]" = "local"
"paths./podcasts.get.parameters[8].enum[1]" = "national"
"paths./podcasts.get.parameters[8].enum[2]" = "regional"
"paths./podcasts.get.parameters[8].in" = "query"
"paths./podcasts.get.parameters[8].name" = "coverage"
"paths./podcasts.get.parameters[8].required" = false
"paths./podcasts.get.parameters[8].type" = "string"
"paths./podcasts.get.responses.200.description" = "OK"
"paths./podcasts.get.responses.200.schema.$ref" = "#/definitions/PodcastsResponse"
"paths./podcasts.get.responses.default.description" = "Unexpected error"
"paths./podcasts.get.responses.default.schema.$ref" = "#/definitions/PodcastErrorResponse"
"paths./podcasts.get.summary" = "All Podcasts"
"paths./podcasts.get.tags.length" = 1
"paths./podcasts.get.tags[0]" = "Podcasts"
"paths./podcasts/featured.get.description" = "Retrieve featured podcasts\n"
"paths./podcasts/featured.get.operationId" = "getPodcastsFeatured"
"paths./podcasts/featured.get.parameters.length" = 1
"paths./podcasts/featured.get.parameters[0].description" = "API_KEY"
"paths./podcasts/featured.get.parameters[0].in" = "header"
"paths./podcasts/featured.get.parameters[0].name" = "X-API-Key"
"paths./podcasts/featured.get.parameters[0].required" = true
"paths./podcasts/featured.get.parameters[0].type" = "string"
"paths./podcasts/featured.get.responses.200.description" = "OK"
"paths./podcasts/featured.get.responses.200.schema.$ref" = "#/definitions/PodcastsFeaturedResponse"
"paths./podcasts/featured.get.responses.default.description" = "Unexpected error"
"paths./podcasts/featured.get.responses.default.schema.$ref" = "#/definitions/PodcastErrorResponse"
"paths./podcasts/featured.get.summary" = "Featured Podcasts"
"paths./podcasts/featured.get.tags.length" = 1
"paths./podcasts/featured.get.tags[0]" = "Podcasts"
"paths./podcasts/{pid}.get.description" = "Retrieve data about the podcast with the supplied PID\n"
"paths./podcasts/{pid}.get.operationId" = "getPodcastByPid"
"paths./podcasts/{pid}.get.parameters.length" = 4
"paths./podcasts/{pid}.get.parameters[0].description" = "API_KEY"
"paths./podcasts/{pid}.get.parameters[0].in" = "header"
"paths./podcasts/{pid}.get.parameters[0].name" = "X-API-Key"
"paths./podcasts/{pid}.get.parameters[0].required" = true
"paths./podcasts/{pid}.get.parameters[0].type" = "string"
"paths./podcasts/{pid}.get.parameters[1].description" = "pid"
"paths./podcasts/{pid}.get.parameters[1].in" = "path"
"paths./podcasts/{pid}.get.parameters[1].name" = "pid"
"paths./podcasts/{pid}.get.parameters[1].required" = true
"paths./podcasts/{pid}.get.parameters[1].type" = "string"
"paths./podcasts/{pid}.get.parameters[2].description" = "Paginated results offset"
"paths./podcasts/{pid}.get.parameters[2].in" = "query"
"paths./podcasts/{pid}.get.parameters[2].name" = "offset"
"paths./podcasts/{pid}.get.parameters[2].required" = false
"paths./podcasts/{pid}.get.parameters[2].type" = "integer"
"paths./podcasts/{pid}.get.parameters[3].description" = "Paginated results limit"
"paths./podcasts/{pid}.get.parameters[3].in" = "query"
"paths./podcasts/{pid}.get.parameters[3].name" = "limit"
"paths./podcasts/{pid}.get.parameters[3].required" = false
"paths./podcasts/{pid}.get.parameters[3].type" = "integer"
"paths./podcasts/{pid}.get.responses.200.description" = "OK"
"paths./podcasts/{pid}.get.responses.200.schema.$ref" = "#/definitions/PodcastsResponse"
"paths./podcasts/{pid}.get.responses.default.description" = "Unexpected error"
"paths./podcasts/{pid}.get.responses.default.schema.$ref" = "#/definitions/PodcastErrorResponse"
"paths./podcasts/{pid}.get.summary" = "Podcast"
"paths./podcasts/{pid}.get.tags.length" = 1
"paths./podcasts/{pid}.get.tags[0]" = "Podcasts"
"paths./podcasts/{pid}/episodes.get.description" = "Retrieve all episodes for a specific podcast\n"
"paths./podcasts/{pid}/episodes.get.operationId" = "getPodcastEpisodes"
"paths./podcasts/{pid}/episodes.get.parameters.length" = 4
"paths./podcasts/{pid}/episodes.get.parameters[0].description" = "API_KEY"
"paths./podcasts/{pid}/episodes.get.parameters[0].in" = "header"
"paths./podcasts/{pid}/episodes.get.parameters[0].name" = "X-API-Key"
"paths./podcasts/{pid}/episodes.get.parameters[0].required" = true
"paths./podcasts/{pid}/episodes.get.parameters[0].type" = "string"
"paths./podcasts/{pid}/episodes.get.parameters[1].description" = "pid"
"paths./podcasts/{pid}/episodes.get.parameters[1].in" = "path"
"paths./podcasts/{pid}/episodes.get.parameters[1].name" = "pid"
"paths./podcasts/{pid}/episodes.get.parameters[1].required" = true
"paths./podcasts/{pid}/episodes.get.parameters[1].type" = "string"
"paths./podcasts/{pid}/episodes.get.parameters[2].description" = "Paginated results offset"
"paths./podcasts/{pid}/episodes.get.parameters[2].in" = "query"
"paths./podcasts/{pid}/episodes.get.parameters[2].name" = "offset"
"paths./podcasts/{pid}/episodes.get.parameters[2].required" = false
"paths./podcasts/{pid}/episodes.get.parameters[2].type" = "integer"
"paths./podcasts/{pid}/episodes.get.parameters[3].description" = "Paginated results limit"
"paths./podcasts/{pid}/episodes.get.parameters[3].in" = "query"
"paths./podcasts/{pid}/episodes.get.parameters[3].name" = "limit"
"paths./podcasts/{pid}/episodes.get.parameters[3].required" = false
"paths./podcasts/{pid}/episodes.get.parameters[3].type" = "integer"
"paths./podcasts/{pid}/episodes.get.responses.200.description" = "OK"
"paths./podcasts/{pid}/episodes.get.responses.200.schema.$ref" = "#/definitions/PodcastEpisodesResponse"
"paths./podcasts/{pid}/episodes.get.responses.default.description" = "Unexpected error"
"paths./podcasts/{pid}/episodes.get.responses.default.schema.$ref" = "#/definitions/PodcastErrorResponse"
"paths./podcasts/{pid}/episodes.get.summary" = "Podcast Episodes"
"paths./podcasts/{pid}/episodes.get.tags.length" = 1
"paths./podcasts/{pid}/episodes.get.tags[0]" = "Podcasts"
"paths./radio/networks.json.get.description" = "All iPlayer Radio networks - contains business logic for masterbrand and service relationships\n"
"paths./radio/networks.json.get.operationId" = "getRadioNetworks"
"paths./radio/networks.json.get.parameters.length" = 3
"paths./radio/networks.json.get.parameters[0].description" = "API_KEY"
"paths./radio/networks.json.get.parameters[0].in" = "header"
"paths./radio/networks.json.get.parameters[0].name" = "X-API-Key"
"paths./radio/networks.json.get.parameters[0].required" = true
"paths./radio/networks.json.get.parameters[0].type" = "string"
"paths./radio/networks.json.get.parameters[1].description" = "Returns all networks needed for iPlayer Radio responsive web navigation"
"paths./radio/networks.json.get.parameters[1].in" = "query"
"paths./radio/networks.json.get.parameters[1].name" = "preset"
"paths./radio/networks.json.get.parameters[1].required" = false
"paths./radio/networks.json.get.parameters[1].type" = "boolean"
"paths./radio/networks.json.get.parameters[2].description" = "Returns all networks available internationally"
"paths./radio/networks.json.get.parameters[2].in" = "query"
"paths./radio/networks.json.get.parameters[2].name" = "international"
"paths./radio/networks.json.get.parameters[2].required" = false
"paths./radio/networks.json.get.parameters[2].type" = "boolean"
"paths./radio/networks.json.get.responses.200.description" = "OK"
"paths./radio/networks.json.get.responses.200.schema.$ref" = "#/definitions/NetworksResponse"
"paths./radio/networks.json.get.responses.default.description" = "Unexpected error"
"paths./radio/networks.json.get.responses.default.schema.$ref" = "#/definitions/RadioErrorResponse"
"paths./radio/networks.json.get.summary" = "Networks"
"paths./radio/networks.json.get.tags.length" = 1
"paths./radio/networks.json.get.tags[0]" = "Networks"
"paths./radio/popular.get.description" = "Retrieve Popular Episodes & Clips\n"
"paths./radio/popular.get.operationId" = "getPopularEpisodesClips"
"paths./radio/popular.get.parameters.length" = 12
"paths./radio/popular.get.parameters[0].description" = "API_KEY"
"paths./radio/popular.get.parameters[0].in" = "header"
"paths./radio/popular.get.parameters[0].name" = "X-API-Key"
"paths./radio/popular.get.parameters[0].required" = true
"paths./radio/popular.get.parameters[0].type" = "string"
"paths./radio/popular.get.parameters[10].collectionFormat" = "csv"
"paths./radio/popular.get.parameters[10].description" = "Filter by media set name. Accepts comma separated combinations of the following: pc,mobile-download,android-download-high,apple-ios-download-high,mobile-cellular-main,mobile-phone-main,iptv-all"
"paths./radio/popular.get.parameters[10].enum.length" = 7
"paths./radio/popular.get.parameters[10].enum[0]" = "pc"
"paths./radio/popular.get.parameters[10].enum[1]" = "mobile-download"
"paths./radio/popular.get.parameters[10].enum[2]" = "android-download-high"
"paths./radio/popular.get.parameters[10].enum[3]" = "apple-ios-download-high"
"paths./radio/popular.get.parameters[10].enum[4]" = "mobile-cellular-main"
"paths./radio/popular.get.parameters[10].enum[5]" = "mobile-phone-main"
"paths./radio/popular.get.parameters[10].enum[6]" = "iptv-all"
"paths./radio/popular.get.parameters[10].in" = "query"
"paths./radio/popular.get.parameters[10].name" = "media_set"
"paths./radio/popular.get.parameters[10].required" = false
"paths./radio/popular.get.parameters[10].type" = "array"
"paths./radio/popular.get.parameters[11].description" = "Search query String"
"paths./radio/popular.get.parameters[11].in" = "query"
"paths./radio/popular.get.parameters[11].name" = "q"
"paths./radio/popular.get.parameters[11].required" = false
"paths./radio/popular.get.parameters[11].type" = "string"
"paths./radio/popular.get.parameters[1].description" = "Programme type required. Accepts comma separated values"
"paths./radio/popular.get.parameters[1].enum.length" = 3
"paths./radio/popular.get.parameters[1].enum[0]" = "episode"
"paths./radio/popular.get.parameters[1].enum[1]" = "clip"
"paths./radio/popular.get.parameters[1].enum[2]" = "episode,clip"
"paths./radio/popular.get.parameters[1].in" = "query"
"paths./radio/popular.get.parameters[1].name" = "type"
"paths./radio/popular.get.parameters[1].required" = false
"paths./radio/popular.get.parameters[1].type" = "string"
"paths./radio/popular.get.parameters[2].description" = "Filter by deduplication rule. E.g. 'tleo' returns programmes with distinct top level episode objects"
"paths./radio/popular.get.parameters[2].enum.length" = 1
"paths./radio/popular.get.parameters[2].enum[0]" = "tleo"
"paths./radio/popular.get.parameters[2].in" = "query"
"paths./radio/popular.get.parameters[2].name" = "distinct"
"paths./radio/popular.get.parameters[2].required" = false
"paths./radio/popular.get.parameters[2].type" = "string"
"paths./radio/popular.get.parameters[3].description" = "Filter by network master brand ID (mid). Accepts comma separated values"
"paths./radio/popular.get.parameters[3].in" = "query"
"paths./radio/popular.get.parameters[3].name" = "network"
"paths./radio/popular.get.parameters[3].required" = false
"paths./radio/popular.get.parameters[3].type" = "string"
"paths./radio/popular.get.parameters[4].description" = "Filter by network URL key. Accepts comma separated values"
"paths./radio/popular.get.parameters[4].in" = "query"
"paths./radio/popular.get.parameters[4].name" = "network_url_key"
"paths./radio/popular.get.parameters[4].required" = false
"paths./radio/popular.get.parameters[4].type" = "string"
"paths./radio/popular.get.parameters[5].description" = "Filter by category. Accepts comma separated values"
"paths./radio/popular.get.parameters[5].in" = "query"
"paths./radio/popular.get.parameters[5].name" = "category"
"paths./radio/popular.get.parameters[5].required" = false
"paths./radio/popular.get.parameters[5].type" = "string"
"paths./radio/popular.get.parameters[6].description" = "Filter by format. Accepts comma separated values"
"paths./radio/popular.get.parameters[6].in" = "query"
"paths./radio/popular.get.parameters[6].name" = "format"
"paths./radio/popular.get.parameters[6].required" = false
"paths./radio/popular.get.parameters[6].type" = "string"
"paths./radio/popular.get.parameters[7].description" = "Filter by group. Accepts comma separated values"
"paths./radio/popular.get.parameters[7].enum.length" = 3
"paths./radio/popular.get.parameters[7].enum[0]" = "tv"
"paths./radio/popular.get.parameters[7].enum[1]" = "radio"
"paths./radio/popular.get.parameters[7].enum[2]" = "tv,radio"
"paths./radio/popular.get.parameters[7].in" = "query"
"paths./radio/popular.get.parameters[7].name" = "group"
"paths./radio/popular.get.parameters[7].required" = false
"paths./radio/popular.get.parameters[7].type" = "string"
"paths./radio/popular.get.parameters[8].description" = "Filter by programme media type. Accepts comma separated values"
"paths./radio/popular.get.parameters[8].enum.length" = 3
"paths./radio/popular.get.parameters[8].enum[0]" = "audio"
"paths./radio/popular.get.parameters[8].enum[1]" = "video"
"paths./radio/popular.get.parameters[8].enum[2]" = "audio,video"
"paths./radio/popular.get.parameters[8].in" = "query"
"paths./radio/popular.get.parameters[8].name" = "media_type"
"paths./radio/popular.get.parameters[8].required" = false
"paths./radio/popular.get.parameters[8].type" = "string"
"paths./radio/popular.get.parameters[9].description" = "Filter by container. Accepts any pid e.g. brand,series,episode"
"paths./radio/popular.get.parameters[9].in" = "query"
"paths./radio/popular.get.parameters[9].name" = "container"
"paths./radio/popular.get.parameters[9].required" = false
"paths./radio/popular.get.parameters[9].type" = "string"
"paths./radio/popular.get.responses.200.description" = "OK"
"paths./radio/popular.get.responses.200.schema.$ref" = "#/definitions/PopularResponse"
"paths./radio/popular.get.responses.default.description" = "Unexpected error"
"paths./radio/popular.get.responses.default.schema.$ref" = "#/definitions/PopularErrorResponse"
"paths./radio/popular.get.summary" = "Popular Episodes & Clips"
"paths./radio/popular.get.tags.length" = 1
"paths./radio/popular.get.tags[0]" = "Programmes"
"paths./radio/programmes.get.description" = "Provides a paginated list of programmes by PID (brand, series, episode and clip). Accepts various filters and sorting methods.\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./radio/programmes.get.operationId" = "getRadioProgrammes"
"paths./radio/programmes.get.parameters.length" = 8
"paths./radio/programmes.get.parameters[0].description" = "API_KEY"
"paths./radio/programmes.get.parameters[0].in" = "header"
"paths./radio/programmes.get.parameters[0].name" = "X-API-Key"
"paths./radio/programmes.get.parameters[0].required" = true
"paths./radio/programmes.get.parameters[0].type" = "string"
"paths./radio/programmes.get.parameters[1].description" = "Filter by provided query. E.g. 'tleo' returns top level objects, ie. brands, orphaned series, and orphaned episodes"
"paths./radio/programmes.get.parameters[1].enum.length" = 1
"paths./radio/programmes.get.parameters[1].enum[0]" = "tleo"
"paths./radio/programmes.get.parameters[1].in" = "query"
"paths./radio/programmes.get.parameters[1].name" = "kind"
"paths./radio/programmes.get.parameters[1].required" = false
"paths./radio/programmes.get.parameters[1].type" = "string"
"paths./radio/programmes.get.parameters[2].description" = "Filter by network master brand ID (mid). Accepts comma separated values"
"paths./radio/programmes.get.parameters[2].in" = "query"
"paths./radio/programmes.get.parameters[2].name" = "network"
"paths./radio/programmes.get.parameters[2].required" = false
"paths./radio/programmes.get.parameters[2].type" = "string"
"paths./radio/programmes.get.parameters[3].description" = "Filter by network URL key. Accepts comma separated values"
"paths./radio/programmes.get.parameters[3].in" = "query"
"paths./radio/programmes.get.parameters[3].name" = "network_url_key"
"paths./radio/programmes.get.parameters[3].required" = false
"paths./radio/programmes.get.parameters[3].type" = "string"
"paths./radio/programmes.get.parameters[4].description" = "Filter by category id. Accepts comma separated values. See /category endpoint below for the type of response provided"
"paths./radio/programmes.get.parameters[4].in" = "query"
"paths./radio/programmes.get.parameters[4].name" = "category"
"paths./radio/programmes.get.parameters[4].required" = false
"paths./radio/programmes.get.parameters[4].type" = "string"
"paths./radio/programmes.get.parameters[5].description" = "Sort by provided query. E.g. 'title' sorts in ascending order, and -title sorts in descending order"
"paths./radio/programmes.get.parameters[5].enum.length" = 4
"paths./radio/programmes.get.parameters[5].enum[0]" = "available_from_date"
"paths./radio/programmes.get.parameters[5].enum[1]" = "-available_from_date"
"paths./radio/programmes.get.parameters[5].enum[2]" = "title"
"paths./radio/programmes.get.parameters[5].enum[3]" = "-title"
"paths./radio/programmes.get.parameters[5].in" = "query"
"paths./radio/programmes.get.parameters[5].name" = "sort"
"paths./radio/programmes.get.parameters[5].required" = false
"paths./radio/programmes.get.parameters[5].type" = "string"
"paths./radio/programmes.get.parameters[6].description" = "Filter by container. Accepts any brand or series pid"
"paths./radio/programmes.get.parameters[6].in" = "query"
"paths./radio/programmes.get.parameters[6].name" = "container"
"paths./radio/programmes.get.parameters[6].required" = false
"paths./radio/programmes.get.parameters[6].type" = "string"
"paths./radio/programmes.get.parameters[7].description" = "Filter by programme type. Accepts comma separated values"
"paths./radio/programmes.get.parameters[7].enum.length" = 5
"paths./radio/programmes.get.parameters[7].enum[0]" = "brand"
"paths./radio/programmes.get.parameters[7].enum[1]" = "series"
"paths./radio/programmes.get.parameters[7].enum[2]" = "episode"
"paths./radio/programmes.get.parameters[7].enum[3]" = "clip"
"paths./radio/programmes.get.parameters[7].enum[4]" = "episode,clip"
"paths./radio/programmes.get.parameters[7].in" = "query"
"paths./radio/programmes.get.parameters[7].name" = "type"
"paths./radio/programmes.get.parameters[7].required" = false
"paths./radio/programmes.get.parameters[7].type" = "string"
"paths./radio/programmes.get.responses.200.description" = "OK"
"paths./radio/programmes.get.responses.200.schema.$ref" = "#/definitions/ProgrammesResponse"
"paths./radio/programmes.get.responses.default.description" = "Unexpected error"
"paths./radio/programmes.get.responses.default.schema.$ref" = "#/definitions/RadioErrorResponse"
"paths./radio/programmes.get.summary" = "Radio programmes"
"paths./radio/programmes.get.tags.length" = 1
"paths./radio/programmes.get.tags[0]" = "Programmes"
"paths./radio/programmes/{pid}.get.description" = "Find programmes by PID (brand, series, episode and clip)\n\nN.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\nand Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for\n anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n"
"paths./radio/programmes/{pid}.get.operationId" = "getRadioProgrammesByPid"
"paths./radio/programmes/{pid}.get.parameters.length" = 2
"paths./radio/programmes/{pid}.get.parameters[0].description" = "API_KEY"
"paths./radio/programmes/{pid}.get.parameters[0].in" = "header"
"paths./radio/programmes/{pid}.get.parameters[0].name" = "X-API-Key"
"paths./radio/programmes/{pid}.get.parameters[0].required" = true
"paths./radio/programmes/{pid}.get.parameters[0].type" = "string"
"paths./radio/programmes/{pid}.get.parameters[1].description" = "pid"
"paths./radio/programmes/{pid}.get.parameters[1].in" = "path"
"paths./radio/programmes/{pid}.get.parameters[1].name" = "pid"
"paths./radio/programmes/{pid}.get.parameters[1].required" = true
"paths./radio/programmes/{pid}.get.parameters[1].type" = "string"
"paths./radio/programmes/{pid}.get.responses.200.description" = "OK"
"paths./radio/programmes/{pid}.get.responses.200.schema.$ref" = "#/definitions/ProgrammesResponse"
"paths./radio/programmes/{pid}.get.responses.default.description" = "Unexpected error"
"paths./radio/programmes/{pid}.get.responses.default.schema.$ref" = "#/definitions/RadioErrorResponse"
"paths./radio/programmes/{pid}.get.summary" = "Available radio programme by Pid"
"paths./radio/programmes/{pid}.get.tags.length" = 1
"paths./radio/programmes/{pid}.get.tags[0]" = "Programmes"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
swagger = "2.0"
"tags.length" = 14
"tags[0].name" = "Experience"
"tags[10].name" = "Personalised Plays"
"tags[11].name" = "Radio"
"tags[12].name" = "Music"
"tags[13].name" = "Music Export"
"tags[1].description" = "<a href=\"https://confluence.dev.bbc.co.uk/display/RMServices/Playspace+API+Client+Documetation\">Client Documentation</a>"
"tags[1].name" = "Playspace"
"tags[2].name" = "Categories"
"tags[3].name" = "Networks"
"tags[4].name" = "Broadcasts"
"tags[5].name" = "Collections"
"tags[6].name" = "Podcasts"
"tags[7].name" = "Programmes"
"tags[8].name" = "Personalised Categories"
"tags[9].name" = "Personalised Networks"
