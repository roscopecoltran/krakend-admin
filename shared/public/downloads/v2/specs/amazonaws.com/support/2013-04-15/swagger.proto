syntax = "proto3";

import "google/api/annotations.proto";

package awssupport;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddAttachmentsToSetRequest body = 10;
}

message Post#AddCommunicationToCaseRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddCommunicationToCaseRequest body = 10;
}

message Post#CreateCaseRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCaseRequest body = 10;
}

message Post#DescribeAttachmentRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAttachmentRequest body = 10;
}

message Post#DescribeCasesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCasesRequest body = 10;
    // Pagination limit
    string maxResults = 11;
    // Pagination token
    string nextToken = 12;
}

message Post#DescribeCommunicationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCommunicationsRequest body = 10;
    // Pagination limit
    string maxResults = 11;
    // Pagination token
    string nextToken = 12;
}

message Post#DescribeServicesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeServicesRequest body = 10;
}

message Post#DescribeSeverityLevelsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSeverityLevelsRequest body = 10;
}

message Post#DescribeTrustedAdvisorCheckRefreshStatusesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeTrustedAdvisorCheckRefreshStatusesRequest body = 10;
}

message Post#DescribeTrustedAdvisorCheckResultRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeTrustedAdvisorCheckResultRequest body = 10;
}

message Post#DescribeTrustedAdvisorCheckSummariesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeTrustedAdvisorCheckSummariesRequest body = 10;
}

message Post#DescribeTrustedAdvisorChecksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeTrustedAdvisorChecksRequest body = 10;
}

message Post#RefreshTrustedAdvisorCheckRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RefreshTrustedAdvisorCheckRequest body = 10;
}

message Post#ResolveCaseRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResolveCaseRequest body = 10;
}

message AddAttachmentsToSetRequest {
    // The ID of the attachment set. If an <code>attachmentSetId</code> is not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> is specified, the attachments are added to the specified set, if it exists.
    string attachmentSetId = 1;
    // One or more attachments to add to the set. The limit is 3 attachments per set, and the size limit is 5 MB per attachment.
    array attachments = 2;
}

message AddAttachmentsToSetResponse {
    // The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.
    string attachmentSetId = 1;
    // The time and date when the attachment set expires.
    string expiryTime = 2;
}

message AddCommunicationToCaseRequest {
    // The ID of a set of one or more attachments for the communication to add to the case. Create the set by calling <a>AddAttachmentsToSet</a>
    string attachmentSetId = 1;
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 2;
    // The email addresses in the CC line of an email to be added to the support case.
    array ccEmailAddresses = 3;
    // The body of an email communication to add to the support case.
    string communicationBody = 4;
}

message AddCommunicationToCaseResponse {
    // True if <a>AddCommunicationToCase</a> succeeds. Otherwise, returns an error.
    boolean result = 1;
}

message Attachment {
    // The content of the attachment file.
    string data = 1;
    // The name of the attachment file.
    string fileName = 2;
}

message AttachmentDetails {
    // The ID of the attachment.
    string attachmentId = 1;
    // The file name of the attachment.
    string fileName = 2;
}

message AttachmentIdNotFound {
    // An attachment with the specified ID could not be found.
    string message = 1;
}

message AttachmentLimitExceeded {
    // The limit for the number of attachment sets created in a short period of time has been exceeded.
    string message = 1;
}

repeated AttachmentDetails AttachmentSet = 1

message AttachmentSetExpired {
    // The expiration time of the attachment set has passed. The set expires 1 hour after it is created.
    string message = 1;
}

message AttachmentSetIdNotFound {
    // An attachment set with the specified ID could not be found.
    string message = 1;
}

message AttachmentSetSizeLimitExceeded {
    // A limit for the size of an attachment set has been exceeded. The limits are 3 attachments and 5 MB per attachment.
    string message = 1;
}

repeated Attachment Attachments = 1





message CaseCreationLimitExceeded {
    // An error message that indicates that you have exceeded the number of cases you can have open.
    string message = 1;
}

message CaseDetails {
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 1;
    // The category of problem for the AWS Support case.
    string categoryCode = 2;
    // The email addresses that receive copies of communication about the case.
    array ccEmailAddresses = 3;
    // The ID displayed for the case in the AWS Support Center. This is a numeric string.
    string displayId = 4;
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 5;
    // The five most recent communications between you and AWS Support Center, including the IDs of any attachments to the communications. Also includes a <code>nextToken</code> that you can use to retrieve earlier communications.
    RecentCaseCommunications recentCommunications = 6;
    // The code for the AWS service returned by the call to <a>DescribeServices</a>.
    string serviceCode = 7;
    // The code for the severity level returned by the call to <a>DescribeSeverityLevels</a>.
    string severityCode = 8;
    // The status of the case.
    string status = 9;
    // The subject line for the case in the AWS Support Center.
    string subject = 10;
    // The email address of the account that submitted the case.
    string submittedBy = 11;
    // The time that the case was case created in the AWS Support Center.
    string timeCreated = 12;
}



repeated string CaseIdList = 1

message CaseIdNotFound {
    // The requested <code>CaseId</code> could not be located.
    string message = 1;
}

repeated CaseDetails CaseList = 1



message Category {
    // The category code for the support case.
    string code = 1;
    // The category name for the support case.
    string name = 2;
}



repeated Category CategoryList = 1





repeated string CcEmailAddressList = 1

message Communication {
    // Information about the attachments to the case communication.
    array attachmentSet = 1;
    // The text of the communication between the customer and AWS Support.
    string body = 2;
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 3;
    // The email address of the account that submitted the AWS Support case.
    string submittedBy = 4;
    // The time the communication was created.
    string timeCreated = 5;
}



repeated Communication CommunicationList = 1

message CreateCaseRequest {
    // The ID of a set of one or more attachments for the case. Create the set by using <a>AddAttachmentsToSet</a>.
    string attachmentSetId = 1;
    // The category of problem for the AWS Support case.
    string categoryCode = 2;
    // A list of email addresses that AWS Support copies on case correspondence.
    array ccEmailAddresses = 3;
    // The communication body text when you create an AWS Support case by calling <a>CreateCase</a>.
    string communicationBody = 4;
    // The type of issue for the case. You can specify either "customer-service" or "technical." If you do not indicate a value, the default is "technical."
    string issueType = 5;
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 6;
    // The code for the AWS service returned by the call to <a>DescribeServices</a>.
    string serviceCode = 7;
    // <p>The code for the severity level returned by the call to <a>DescribeSeverityLevels</a>.</p> <note> <p>The availability of severity levels depends on each customer's support subscription. In other words, your subscription may not necessarily require the urgent level of response time.</p> </note>
    string severityCode = 8;
    // The title of the AWS Support case.
    string subject = 9;
}

message CreateCaseResponse {
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 1;
}

message DescribeAttachmentLimitExceeded {
    // The limit for the number of <a>DescribeAttachment</a> requests in a short period of time has been exceeded.
    string message = 1;
}

message DescribeAttachmentRequest {
    // The ID of the attachment to return. Attachment IDs are returned by the <a>DescribeCommunications</a> operation.
    string attachmentId = 1;
}

message DescribeAttachmentResponse {
    // The attachment content and file name.
    Attachment attachment = 1;
}

message DescribeCasesRequest {
    // The start date for a filtered date search on support case communications. Case communications are available for 12 months after creation.
    string afterTime = 1;
    // The end date for a filtered date search on support case communications. Case communications are available for 12 months after creation.
    string beforeTime = 2;
    // A list of ID numbers of the support cases you want returned. The maximum number of cases is 100.
    array caseIdList = 3;
    // The ID displayed for a case in the AWS Support Center user interface.
    string displayId = 4;
    // Specifies whether communications should be included in the <a>DescribeCases</a> results. The default is <i>true</i>.
    boolean includeCommunications = 5;
    // Specifies whether resolved support cases should be included in the <a>DescribeCases</a> results. The default is <i>false</i>.
    boolean includeResolvedCases = 6;
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 7;
    // The maximum number of results to return before paginating.
    integer maxResults = 8;
    // A resumption point for pagination.
    string nextToken = 9;
}

message DescribeCasesResponse {
    // The details for the cases that match the request.
    array cases = 1;
    // A resumption point for pagination.
    string nextToken = 2;
}

message DescribeCommunicationsRequest {
    // The start date for a filtered date search on support case communications. Case communications are available for 12 months after creation.
    string afterTime = 1;
    // The end date for a filtered date search on support case communications. Case communications are available for 12 months after creation.
    string beforeTime = 2;
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 3;
    // The maximum number of results to return before paginating.
    integer maxResults = 4;
    // A resumption point for pagination.
    string nextToken = 5;
}

message DescribeCommunicationsResponse {
    // The communications for the case.
    array communications = 1;
    // A resumption point for pagination.
    string nextToken = 2;
}

message DescribeServicesRequest {
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 1;
    // A JSON-formatted list of service codes available for AWS services.
    array serviceCodeList = 2;
}

message DescribeServicesResponse {
    // A JSON-formatted list of AWS services.
    array services = 1;
}

message DescribeSeverityLevelsRequest {
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 1;
}

message DescribeSeverityLevelsResponse {
    // The available severity levels for the support case. Available severity levels are defined by your service level agreement with AWS.
    array severityLevels = 1;
}

message DescribeTrustedAdvisorCheckRefreshStatusesRequest {
    // The IDs of the Trusted Advisor checks to get the status of. <b>Note:</b> Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.
    array checkIds = 1;
}

message DescribeTrustedAdvisorCheckRefreshStatusesResponse {
    // The refresh status of the specified Trusted Advisor checks.
    array statuses = 1;
}

message DescribeTrustedAdvisorCheckResultRequest {
    // The unique identifier for the Trusted Advisor check.
    string checkId = 1;
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 2;
}

message DescribeTrustedAdvisorCheckResultResponse {
    // The detailed results of the Trusted Advisor check.
    TrustedAdvisorCheckResult result = 1;
}

message DescribeTrustedAdvisorCheckSummariesRequest {
    // The IDs of the Trusted Advisor checks.
    array checkIds = 1;
}

message DescribeTrustedAdvisorCheckSummariesResponse {
    // The summary information for the requested Trusted Advisor checks.
    array summaries = 1;
}

message DescribeTrustedAdvisorChecksRequest {
    // The ISO 639-1 code for the language in which AWS provides support. AWS Support currently supports English ("en") and Japanese ("ja"). Language parameters must be passed explicitly for operations that take them.
    string language = 1;
}

message DescribeTrustedAdvisorChecksResponse {
    // Information about all available Trusted Advisor checks.
    array checks = 1;
}

message InternalServerError {
    // An internal server error occurred.
    string message = 1;
}

message RecentCaseCommunications {
    // The five most recent communications associated with the case.
    array communications = 1;
    // A resumption point for pagination.
    string nextToken = 2;
}

message RefreshTrustedAdvisorCheckRequest {
    // The unique identifier for the Trusted Advisor check to refresh. <b>Note:</b> Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.
    string checkId = 1;
}

message RefreshTrustedAdvisorCheckResponse {
    // The current refresh status for a check, including the amount of time until the check is eligible for refresh.
    TrustedAdvisorCheckRefreshStatus status = 1;
}

message ResolveCaseRequest {
    // The AWS Support case ID requested or returned in the call. The case ID is an alphanumeric string formatted as shown in this example: case-<i>12345678910-2013-c4c1d2bf33c5cf47</i>
    string caseId = 1;
}

message ResolveCaseResponse {
    // The status of the case after the <a>ResolveCase</a> request was processed.
    string finalCaseStatus = 1;
    // The status of the case when the <a>ResolveCase</a> request was sent.
    string initialCaseStatus = 2;
}

message Service {
    // A list of categories that describe the type of support issue a case describes. Categories consist of a category name and a category code. Category names and codes are passed to AWS Support when you call <a>CreateCase</a>.
    array categories = 1;
    // The code for an AWS service returned by the <a>DescribeServices</a> response. The <code>name</code> element contains the corresponding friendly name.
    string code = 2;
    // The friendly name for an AWS service. The <code>code</code> element contains the corresponding code.
    string name = 3;
}



repeated string ServiceCodeList = 1

repeated Service ServiceList = 1





message SeverityLevel {
    // One of four values: "low," "medium," "high," and "urgent". These values correspond to response times returned to the caller in <code>severityLevel.name</code>.
    string code = 1;
    // The name of the severity level that corresponds to the severity level code.
    string name = 2;
}





repeated SeverityLevel SeverityLevelsList = 1





repeated string StringList = 1







message TrustedAdvisorCategorySpecificSummary {
    // The summary information about cost savings for a Trusted Advisor check that is in the Cost Optimizing category.
    TrustedAdvisorCostOptimizingSummary costOptimizing = 1;
}

message TrustedAdvisorCheckDescription {
    // The category of the Trusted Advisor check.
    string category = 1;
    // The description of the Trusted Advisor check, which includes the alert criteria and recommended actions (contains HTML markup).
    string description = 2;
    // The unique identifier for the Trusted Advisor check.
    string id = 3;
    // The column headings for the data returned by the Trusted Advisor check. The order of the headings corresponds to the order of the data in the <b>Metadata</b> element of the <a>TrustedAdvisorResourceDetail</a> for the check. <b>Metadata</b> contains all the data that is shown in the Excel download, even in those cases where the UI shows just summary data.
    array metadata = 4;
    // The display name for the Trusted Advisor check.
    string name = 5;
}

repeated TrustedAdvisorCheckDescription TrustedAdvisorCheckList = 1

message TrustedAdvisorCheckRefreshStatus {
    // The unique identifier for the Trusted Advisor check.
    string checkId = 1;
    // The amount of time, in milliseconds, until the Trusted Advisor check is eligible for refresh.
    integer millisUntilNextRefreshable = 2;
    // The status of the Trusted Advisor check for which a refresh has been requested: "none", "enqueued", "processing", "success", or "abandoned".
    string status = 3;
}

repeated TrustedAdvisorCheckRefreshStatus TrustedAdvisorCheckRefreshStatusList = 1

message TrustedAdvisorCheckResult {
    // Summary information that relates to the category of the check. Cost Optimizing is the only category that is currently supported.
    TrustedAdvisorCategorySpecificSummary categorySpecificSummary = 1;
    // The unique identifier for the Trusted Advisor check.
    string checkId = 2;
    // The details about each resource listed in the check result.
    array flaggedResources = 3;
    TrustedAdvisorResourcesSummary resourcesSummary = 4;
    // The alert status of the check: "ok" (green), "warning" (yellow), "error" (red), or "not_available".
    string status = 5;
    // The time of the last refresh of the check.
    string timestamp = 6;
}

message TrustedAdvisorCheckSummary {
    // Summary information that relates to the category of the check. Cost Optimizing is the only category that is currently supported.
    TrustedAdvisorCategorySpecificSummary categorySpecificSummary = 1;
    // The unique identifier for the Trusted Advisor check.
    string checkId = 2;
    // Specifies whether the Trusted Advisor check has flagged resources.
    boolean hasFlaggedResources = 3;
    TrustedAdvisorResourcesSummary resourcesSummary = 4;
    // The alert status of the check: "ok" (green), "warning" (yellow), "error" (red), or "not_available".
    string status = 5;
    // The time of the last refresh of the check.
    string timestamp = 6;
}

repeated TrustedAdvisorCheckSummary TrustedAdvisorCheckSummaryList = 1

message TrustedAdvisorCostOptimizingSummary {
    // The estimated monthly savings that might be realized if the recommended actions are taken.
    number estimatedMonthlySavings = 1;
    // The estimated percentage of savings that might be realized if the recommended actions are taken.
    number estimatedPercentMonthlySavings = 2;
}

message TrustedAdvisorResourceDetail {
    // Specifies whether the AWS resource was ignored by Trusted Advisor because it was marked as suppressed by the user.
    boolean isSuppressed = 1;
    // Additional information about the identified resource. The exact metadata and its order can be obtained by inspecting the <a>TrustedAdvisorCheckDescription</a> object returned by the call to <a>DescribeTrustedAdvisorChecks</a>. <b>Metadata</b> contains all the data that is shown in the Excel download, even in those cases where the UI shows just summary data.
    array metadata = 2;
    // The AWS region in which the identified resource is located.
    string region = 3;
    // The unique identifier for the identified resource.
    string resourceId = 4;
    // The status code for the resource identified in the Trusted Advisor check.
    string status = 5;
}

repeated TrustedAdvisorResourceDetail TrustedAdvisorResourceDetailList = 1

message TrustedAdvisorResourcesSummary {
    // The number of AWS resources that were flagged (listed) by the Trusted Advisor check.
    integer resourcesFlagged = 1;
    // The number of AWS resources ignored by Trusted Advisor because information was unavailable.
    integer resourcesIgnored = 2;
    // The number of AWS resources that were analyzed by the Trusted Advisor check.
    integer resourcesProcessed = 3;
    // The number of AWS resources ignored by Trusted Advisor because they were marked as suppressed by the user.
    integer resourcesSuppressed = 4;
}

service AWSSupportService {
    // <p>Adds one or more attachments to an attachment set. If an <code>attachmentSetId</code> is not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> is specified, the attachments are added to the specified set, if it exists.</p> <p>An attachment set is a temporary container for attachments that are to be added to a case or case communication. The set is available for one hour after it is created; the <code>expiryTime</code> returned in the response indicates when the set expires. The maximum number of attachments in a set is 3, and the maximum size of any attachment in the set is 5 MB.</p>
    rpc Post(PostRequest) returns (AddAttachmentsToSetResponse) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Adds additional customer communication to an AWS Support case. You use the <code>caseId</code> value to identify the case to add communication to. You can list a set of email addresses to copy on the communication using the <code>ccEmailAddresses</code> value. The <code>communicationBody</code> value contains the text of the communication.</p> <p>The response indicates the success or failure of the request.</p> <p>This operation implements a subset of the features of the AWS Support Center.</p>
    rpc Post#AddCommunicationToCase(Post#AddCommunicationToCaseRequest) returns (AddCommunicationToCaseResponse) {
      option (google.api.http) = {
        post: "//#AddCommunicationToCase"
        body: "body"
      };
    }
    // <p>Creates a new case in the AWS Support Center. This operation is modeled on the behavior of the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. Its parameters require you to specify the following information: </p> <ul> <li> <p> <b>issueType.</b> The type of issue for the case. You can specify either "customer-service" or "technical." If you do not indicate a value, the default is "technical." </p> </li> <li> <p> <b>serviceCode.</b> The code for an AWS service. You obtain the <code>serviceCode</code> by calling <a>DescribeServices</a>. </p> </li> <li> <p> <b>categoryCode.</b> The category for the service defined for the <code>serviceCode</code> value. You also obtain the category code for a service by calling <a>DescribeServices</a>. Each AWS service defines its own set of category codes. </p> </li> <li> <p> <b>severityCode.</b> A value that indicates the urgency of the case, which in turn determines the response time according to your service level agreement with AWS Support. You obtain the SeverityCode by calling <a>DescribeSeverityLevels</a>.</p> </li> <li> <p> <b>subject.</b> The <b>Subject</b> field on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p> </li> <li> <p> <b>communicationBody.</b> The <b>Description</b> field on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p> </li> <li> <p> <b>attachmentSetId.</b> The ID of a set of attachments that has been created by using <a>AddAttachmentsToSet</a>.</p> </li> <li> <p> <b>language.</b> The human language in which AWS Support handles the case. English and Japanese are currently supported.</p> </li> <li> <p> <b>ccEmailAddresses.</b> The AWS Support Center <b>CC</b> field on the <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. You can list email addresses to be copied on any correspondence about the case. The account that opens the case is already identified by passing the AWS Credentials in the HTTP POST method or in a method or function call from one of the programming languages supported by an <a href="http://aws.amazon.com/tools/">AWS SDK</a>. </p> </li> </ul> <note> <p>To add additional communication or attachments to an existing case, use <a>AddCommunicationToCase</a>.</p> </note> <p>A successful <a>CreateCase</a> request returns an AWS Support case number. Case numbers are used by the <a>DescribeCases</a> operation to retrieve existing AWS Support cases. </p>
    rpc Post#CreateCase(Post#CreateCaseRequest) returns (CreateCaseResponse) {
      option (google.api.http) = {
        post: "//#CreateCase"
        body: "body"
      };
    }
    // Returns the attachment that has the specified ID. Attachment IDs are generated by the case management system when you add an attachment to a case or case communication. Attachment IDs are returned in the <a>AttachmentDetails</a> objects that are returned by the <a>DescribeCommunications</a> operation.
    rpc Post#DescribeAttachment(Post#DescribeAttachmentRequest) returns (DescribeAttachmentResponse) {
      option (google.api.http) = {
        post: "//#DescribeAttachment"
        body: "body"
      };
    }
    // <p>Returns a list of cases that you specify by passing one or more case IDs. In addition, you can filter the cases by date by setting values for the <code>afterTime</code> and <code>beforeTime</code> request parameters. You can set values for the <code>includeResolvedCases</code> and <code>includeCommunications</code> request parameters to control how much information is returned. </p> <p>Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error.</p> <p>The response returns the following in JSON format:</p> <ul> <li> <p>One or more <a>CaseDetails</a> data types. </p> </li> <li> <p>One or more <code>nextToken</code> values, which specify where to paginate the returned records represented by the <code>CaseDetails</code> objects.</p> </li> </ul>
    rpc Post#DescribeCases(Post#DescribeCasesRequest) returns (DescribeCasesResponse) {
      option (google.api.http) = {
        post: "//#DescribeCases"
        body: "body"
      };
    }
    // <p>Returns communications (and attachments) for one or more support cases. You can use the <code>afterTime</code> and <code>beforeTime</code> parameters to filter by date. You can use the <code>caseId</code> parameter to restrict the results to a particular case.</p> <p>Case data is available for 12 months after creation. If a case was created more than 12 months ago, a request for data might cause an error.</p> <p>You can use the <code>maxResults</code> and <code>nextToken</code> parameters to control the pagination of the result set. Set <code>maxResults</code> to the number of cases you want displayed on each page, and use <code>nextToken</code> to specify the resumption of pagination.</p>
    rpc Post#DescribeCommunications(Post#DescribeCommunicationsRequest) returns (DescribeCommunicationsResponse) {
      option (google.api.http) = {
        post: "//#DescribeCommunications"
        body: "body"
      };
    }
    // <p>Returns the current list of AWS services and a list of service categories that applies to each one. You then use service names and categories in your <a>CreateCase</a> requests. Each AWS service has its own set of categories.</p> <p>The service codes and category codes correspond to the values that are displayed in the <b>Service</b> and <b>Category</b> drop-down lists on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. The values in those fields, however, do not necessarily match the service codes and categories returned by the <code>DescribeServices</code> request. Always use the service codes and categories obtained programmatically. This practice ensures that you always have the most recent set of service and category codes.</p>
    rpc Post#DescribeServices(Post#DescribeServicesRequest) returns (DescribeServicesResponse) {
      option (google.api.http) = {
        post: "//#DescribeServices"
        body: "body"
      };
    }
    // Returns the list of severity levels that you can assign to an AWS Support case. The severity level for a case is also a field in the <a>CaseDetails</a> data type included in any <a>CreateCase</a> request.
    rpc Post#DescribeSeverityLevels(Post#DescribeSeverityLevelsRequest) returns (DescribeSeverityLevelsResponse) {
      option (google.api.http) = {
        post: "//#DescribeSeverityLevels"
        body: "body"
      };
    }
    // <p>Returns the refresh status of the Trusted Advisor checks that have the specified check IDs. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.</p> <note> <p>Some checks are refreshed automatically, and their refresh statuses cannot be retrieved by using this operation. Use of the <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation for these checks causes an <code>InvalidParameterValue</code> error.</p> </note>
    rpc Post#DescribeTrustedAdvisorCheckRefreshStatuses(Post#DescribeTrustedAdvisorCheckRefreshStatusesRequest) returns (DescribeTrustedAdvisorCheckRefreshStatusesResponse) {
      option (google.api.http) = {
        post: "//#DescribeTrustedAdvisorCheckRefreshStatuses"
        body: "body"
      };
    }
    // <p>Returns the results of the Trusted Advisor check that has the specified check ID. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.</p> <p>The response contains a <a>TrustedAdvisorCheckResult</a> object, which contains these three objects:</p> <ul> <li> <p> <a>TrustedAdvisorCategorySpecificSummary</a> </p> </li> <li> <p> <a>TrustedAdvisorResourceDetail</a> </p> </li> <li> <p> <a>TrustedAdvisorResourcesSummary</a> </p> </li> </ul> <p>In addition, the response contains these fields:</p> <ul> <li> <p> <b>status.</b> The alert status of the check: "ok" (green), "warning" (yellow), "error" (red), or "not_available".</p> </li> <li> <p> <b>timestamp.</b> The time of the last refresh of the check.</p> </li> <li> <p> <b>checkId.</b> The unique identifier for the check.</p> </li> </ul>
    rpc Post#DescribeTrustedAdvisorCheckResult(Post#DescribeTrustedAdvisorCheckResultRequest) returns (DescribeTrustedAdvisorCheckResultResponse) {
      option (google.api.http) = {
        post: "//#DescribeTrustedAdvisorCheckResult"
        body: "body"
      };
    }
    // <p>Returns the summaries of the results of the Trusted Advisor checks that have the specified check IDs. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.</p> <p>The response contains an array of <a>TrustedAdvisorCheckSummary</a> objects.</p>
    rpc Post#DescribeTrustedAdvisorCheckSummaries(Post#DescribeTrustedAdvisorCheckSummariesRequest) returns (DescribeTrustedAdvisorCheckSummariesResponse) {
      option (google.api.http) = {
        post: "//#DescribeTrustedAdvisorCheckSummaries"
        body: "body"
      };
    }
    // Returns information about all available Trusted Advisor checks, including name, ID, category, description, and metadata. You must specify a language code; English ("en") and Japanese ("ja") are currently supported. The response contains a <a>TrustedAdvisorCheckDescription</a> for each check.
    rpc Post#DescribeTrustedAdvisorChecks(Post#DescribeTrustedAdvisorChecksRequest) returns (DescribeTrustedAdvisorChecksResponse) {
      option (google.api.http) = {
        post: "//#DescribeTrustedAdvisorChecks"
        body: "body"
      };
    }
    // <p>Requests a refresh of the Trusted Advisor check that has the specified check ID. Check IDs can be obtained by calling <a>DescribeTrustedAdvisorChecks</a>.</p> <note> <p>Some checks are refreshed automatically, and they cannot be refreshed by using this operation. Use of the <code>RefreshTrustedAdvisorCheck</code> operation for these checks causes an <code>InvalidParameterValue</code> error.</p> </note> <p>The response contains a <a>TrustedAdvisorCheckRefreshStatus</a> object, which contains these fields:</p> <ul> <li> <p> <b>status.</b> The refresh status of the check: "none", "enqueued", "processing", "success", or "abandoned".</p> </li> <li> <p> <b>millisUntilNextRefreshable.</b> The amount of time, in milliseconds, until the check is eligible for refresh.</p> </li> <li> <p> <b>checkId.</b> The unique identifier for the check.</p> </li> </ul>
    rpc Post#RefreshTrustedAdvisorCheck(Post#RefreshTrustedAdvisorCheckRequest) returns (RefreshTrustedAdvisorCheckResponse) {
      option (google.api.http) = {
        post: "//#RefreshTrustedAdvisorCheck"
        body: "body"
      };
    }
    // Takes a <code>caseId</code> and returns the initial state of the case along with the state of the case after the call to <a>ResolveCase</a> completed.
    rpc Post#ResolveCase(Post#ResolveCaseRequest) returns (ResolveCaseResponse) {
      option (google.api.http) = {
        post: "//#ResolveCase"
        body: "body"
      };
    }
}
