{
	"basePath": "/",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AssociateRoleToGroupRequest.properties.RoleArn.$ref": "#/definitions/__string",
	"definitions.AssociateRoleToGroupRequest.properties.RoleArn.description": "Role arn you wish to associate with this group.",
	"definitions.AssociateRoleToGroupRequest.type": "object",
	"definitions.AssociateRoleToGroupResponse.properties.AssociatedAt.$ref": "#/definitions/__string",
	"definitions.AssociateRoleToGroupResponse.properties.AssociatedAt.description": "Time the role arn was associated to your group.",
	"definitions.AssociateRoleToGroupResponse.type": "object",
	"definitions.AssociateServiceRoleToAccountRequest.properties.RoleArn.$ref": "#/definitions/__string",
	"definitions.AssociateServiceRoleToAccountRequest.properties.RoleArn.description": "Role arn you wish to associate with this account.",
	"definitions.AssociateServiceRoleToAccountRequest.type": "object",
	"definitions.AssociateServiceRoleToAccountResponse.properties.AssociatedAt.$ref": "#/definitions/__string",
	"definitions.AssociateServiceRoleToAccountResponse.properties.AssociatedAt.description": "Time when the service role was associated to the account.",
	"definitions.AssociateServiceRoleToAccountResponse.type": "object",
	"definitions.BadRequestException.description": "General Error",
	"definitions.BadRequestException.properties.ErrorDetails.$ref": "#/definitions/ErrorDetails",
	"definitions.BadRequestException.properties.ErrorDetails.description": "Error Details",
	"definitions.BadRequestException.properties.Message.$ref": "#/definitions/__string",
	"definitions.BadRequestException.properties.Message.description": "Message containing information about the error",
	"definitions.BadRequestException.type": "object",
	"definitions.ConnectivityInfo.description": "Connectivity Info",
	"definitions.ConnectivityInfo.properties.HostAddress.$ref": "#/definitions/__string",
	"definitions.ConnectivityInfo.properties.HostAddress.description": "Endpoint for the GGC. Can be an IP address or DNS.",
	"definitions.ConnectivityInfo.properties.Id.$ref": "#/definitions/__string",
	"definitions.ConnectivityInfo.properties.Id.description": "Element Id for this entry in the list.",
	"definitions.ConnectivityInfo.properties.Metadata.$ref": "#/definitions/__string",
	"definitions.ConnectivityInfo.properties.Metadata.description": "Metadata for this endpoint.",
	"definitions.ConnectivityInfo.properties.PortNumber.$ref": "#/definitions/__integer",
	"definitions.ConnectivityInfo.properties.PortNumber.description": "Port of the GGC. Usually 8883.",
	"definitions.ConnectivityInfo.type": "object",
	"definitions.Core.description": "Information on the core",
	"definitions.Core.properties.CertificateArn.$ref": "#/definitions/__string",
	"definitions.Core.properties.CertificateArn.description": "Certificate arn of the core.",
	"definitions.Core.properties.Id.$ref": "#/definitions/__string",
	"definitions.Core.properties.Id.description": "Element Id for this entry in the list.",
	"definitions.Core.properties.SyncShadow.$ref": "#/definitions/__boolean",
	"definitions.Core.properties.SyncShadow.description": "If true, the local shadow value automatically syncs with the cloud's shadow state.",
	"definitions.Core.properties.ThingArn.$ref": "#/definitions/__string",
	"definitions.Core.properties.ThingArn.description": "Thing arn of the core.",
	"definitions.Core.type": "object",
	"definitions.CoreDefinitionVersion.description": "Information on core definition version",
	"definitions.CoreDefinitionVersion.properties.Cores.$ref": "#/definitions/ListOfCore",
	"definitions.CoreDefinitionVersion.properties.Cores.description": "Cores in the definition version.",
	"definitions.CoreDefinitionVersion.type": "object",
	"definitions.CreateCoreDefinitionRequest.description": "Information on the core definition request",
	"definitions.CreateCoreDefinitionRequest.properties.InitialVersion.$ref": "#/definitions/CoreDefinitionVersion",
	"definitions.CreateCoreDefinitionRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateCoreDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionRequest.properties.Name.description": "name of the core definition",
	"definitions.CreateCoreDefinitionRequest.type": "object",
	"definitions.CreateCoreDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateCoreDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateCoreDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateCoreDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateCoreDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateCoreDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateCoreDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateCoreDefinitionResponse.type": "object",
	"definitions.CreateCoreDefinitionVersionRequest.properties.Cores.$ref": "#/definitions/ListOfCore",
	"definitions.CreateCoreDefinitionVersionRequest.properties.Cores.description": "Cores in the definition version.",
	"definitions.CreateCoreDefinitionVersionRequest.type": "object",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateCoreDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateCoreDefinitionVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateCoreDefinitionVersionResponse.type": "object",
	"definitions.CreateDeploymentRequest.properties.DeploymentId.$ref": "#/definitions/__string",
	"definitions.CreateDeploymentRequest.properties.DeploymentId.description": "Id of the deployment if you wish to redeploy a previous deployment.",
	"definitions.CreateDeploymentRequest.properties.DeploymentType.$ref": "#/definitions/DeploymentType",
	"definitions.CreateDeploymentRequest.properties.DeploymentType.description": "Type of deployment. When used in CreateDeployment, only NewDeployment and Redeployment are valid. ",
	"definitions.CreateDeploymentRequest.properties.GroupVersionId.$ref": "#/definitions/__string",
	"definitions.CreateDeploymentRequest.properties.GroupVersionId.description": "Group Version you wish to deploy.",
	"definitions.CreateDeploymentRequest.type": "object",
	"definitions.CreateDeploymentResponse.properties.DeploymentArn.$ref": "#/definitions/__string",
	"definitions.CreateDeploymentResponse.properties.DeploymentArn.description": "The arn of the deployment.",
	"definitions.CreateDeploymentResponse.properties.DeploymentId.$ref": "#/definitions/__string",
	"definitions.CreateDeploymentResponse.properties.DeploymentId.description": "The id of the deployment.",
	"definitions.CreateDeploymentResponse.type": "object",
	"definitions.CreateDeviceDefinitionRequest.properties.InitialVersion.$ref": "#/definitions/DeviceDefinitionVersion",
	"definitions.CreateDeviceDefinitionRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateDeviceDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionRequest.properties.Name.description": "name of the device definition",
	"definitions.CreateDeviceDefinitionRequest.type": "object",
	"definitions.CreateDeviceDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateDeviceDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateDeviceDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateDeviceDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateDeviceDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateDeviceDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateDeviceDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateDeviceDefinitionResponse.type": "object",
	"definitions.CreateDeviceDefinitionVersionRequest.properties.Devices.$ref": "#/definitions/ListOfDevice",
	"definitions.CreateDeviceDefinitionVersionRequest.properties.Devices.description": "Devices in the definition version.",
	"definitions.CreateDeviceDefinitionVersionRequest.type": "object",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateDeviceDefinitionVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateDeviceDefinitionVersionResponse.type": "object",
	"definitions.CreateFunctionDefinitionRequest.properties.InitialVersion.$ref": "#/definitions/FunctionDefinitionVersion",
	"definitions.CreateFunctionDefinitionRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateFunctionDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionRequest.properties.Name.description": "name of the function definition",
	"definitions.CreateFunctionDefinitionRequest.type": "object",
	"definitions.CreateFunctionDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateFunctionDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateFunctionDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateFunctionDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateFunctionDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateFunctionDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateFunctionDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateFunctionDefinitionResponse.type": "object",
	"definitions.CreateFunctionDefinitionVersionRequest.description": "Function definition version",
	"definitions.CreateFunctionDefinitionVersionRequest.properties.Functions.$ref": "#/definitions/ListOfFunction",
	"definitions.CreateFunctionDefinitionVersionRequest.properties.Functions.description": "Lambda functions in this function definition version.",
	"definitions.CreateFunctionDefinitionVersionRequest.type": "object",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateFunctionDefinitionVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateFunctionDefinitionVersionResponse.type": "object",
	"definitions.CreateGroupCertificateAuthorityRequest.type": "object",
	"definitions.CreateGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityArn.description": "Arn of the group certificate authority.",
	"definitions.CreateGroupCertificateAuthorityResponse.type": "object",
	"definitions.CreateGroupRequest.properties.InitialVersion.$ref": "#/definitions/GroupVersion",
	"definitions.CreateGroupRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateGroupRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateGroupRequest.properties.Name.description": "name of the group",
	"definitions.CreateGroupRequest.type": "object",
	"definitions.CreateGroupResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateGroupResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateGroupResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateGroupResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateGroupResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateGroupResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateGroupResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateGroupResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateGroupResponse.type": "object",
	"definitions.CreateGroupVersionRequest.properties.CoreDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionRequest.properties.CoreDefinitionVersionArn.description": "Core definition version arn for this group.",
	"definitions.CreateGroupVersionRequest.properties.DeviceDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionRequest.properties.DeviceDefinitionVersionArn.description": "Device definition version arn for this group.",
	"definitions.CreateGroupVersionRequest.properties.FunctionDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionRequest.properties.FunctionDefinitionVersionArn.description": "Function definition version arn for this group.",
	"definitions.CreateGroupVersionRequest.properties.LoggerDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionRequest.properties.LoggerDefinitionVersionArn.description": "Logger definitionv ersion arn for this group.",
	"definitions.CreateGroupVersionRequest.properties.SubscriptionDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionRequest.properties.SubscriptionDefinitionVersionArn.description": "Subscription definition version arn for this group.",
	"definitions.CreateGroupVersionRequest.type": "object",
	"definitions.CreateGroupVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateGroupVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateGroupVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateGroupVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateGroupVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateGroupVersionResponse.type": "object",
	"definitions.CreateLoggerDefinitionRequest.properties.InitialVersion.$ref": "#/definitions/LoggerDefinitionVersion",
	"definitions.CreateLoggerDefinitionRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateLoggerDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionRequest.properties.Name.description": "name of the logger definition",
	"definitions.CreateLoggerDefinitionRequest.type": "object",
	"definitions.CreateLoggerDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateLoggerDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateLoggerDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateLoggerDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateLoggerDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateLoggerDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateLoggerDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateLoggerDefinitionResponse.type": "object",
	"definitions.CreateLoggerDefinitionVersionRequest.properties.Loggers.$ref": "#/definitions/ListOfLogger",
	"definitions.CreateLoggerDefinitionVersionRequest.properties.Loggers.description": "List of loggers.",
	"definitions.CreateLoggerDefinitionVersionRequest.type": "object",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateLoggerDefinitionVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateLoggerDefinitionVersionResponse.type": "object",
	"definitions.CreateSubscriptionDefinitionRequest.properties.InitialVersion.$ref": "#/definitions/SubscriptionDefinitionVersion",
	"definitions.CreateSubscriptionDefinitionRequest.properties.InitialVersion.description": "Information on the initial version",
	"definitions.CreateSubscriptionDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionRequest.properties.Name.description": "name of the subscription definition",
	"definitions.CreateSubscriptionDefinitionRequest.type": "object",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.CreateSubscriptionDefinitionResponse.type": "object",
	"definitions.CreateSubscriptionDefinitionVersionRequest.properties.Subscriptions.$ref": "#/definitions/ListOfSubscription",
	"definitions.CreateSubscriptionDefinitionVersionRequest.properties.Subscriptions.description": "Subscriptions in the version.",
	"definitions.CreateSubscriptionDefinitionVersionRequest.type": "object",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Arn.description": "Arn of the version.",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Id.description": "Id of the resource container.",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.CreateSubscriptionDefinitionVersionResponse.properties.Version.description": "Unique Id of a version.",
	"definitions.CreateSubscriptionDefinitionVersionResponse.type": "object",
	"definitions.DefinitionInformation.description": "Information on the Definition",
	"definitions.DefinitionInformation.properties.Arn.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.Arn.description": "Arn of the definition.",
	"definitions.DefinitionInformation.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.DefinitionInformation.properties.Id.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.Id.description": "Id of the definition.",
	"definitions.DefinitionInformation.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.DefinitionInformation.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.DefinitionInformation.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.DefinitionInformation.properties.Name.$ref": "#/definitions/__string",
	"definitions.DefinitionInformation.properties.Name.description": "Name of the definition.",
	"definitions.DefinitionInformation.type": "object",
	"definitions.DeleteCoreDefinitionRequest.type": "object",
	"definitions.DeleteCoreDefinitionResponse.type": "object",
	"definitions.DeleteDeviceDefinitionRequest.type": "object",
	"definitions.DeleteDeviceDefinitionResponse.type": "object",
	"definitions.DeleteFunctionDefinitionRequest.type": "object",
	"definitions.DeleteFunctionDefinitionResponse.type": "object",
	"definitions.DeleteGroupRequest.type": "object",
	"definitions.DeleteGroupResponse.type": "object",
	"definitions.DeleteLoggerDefinitionRequest.type": "object",
	"definitions.DeleteLoggerDefinitionResponse.type": "object",
	"definitions.DeleteSubscriptionDefinitionRequest.type": "object",
	"definitions.DeleteSubscriptionDefinitionResponse.type": "object",
	"definitions.Deployment.description": "Information on the deployment",
	"definitions.Deployment.properties.CreatedAt.$ref": "#/definitions/__string",
	"definitions.Deployment.properties.CreatedAt.description": "Timestamp when the deployment was created.",
	"definitions.Deployment.properties.DeploymentArn.$ref": "#/definitions/__string",
	"definitions.Deployment.properties.DeploymentArn.description": "Arn of the deployment.",
	"definitions.Deployment.properties.DeploymentId.$ref": "#/definitions/__string",
	"definitions.Deployment.properties.DeploymentId.description": "Id of the deployment.",
	"definitions.Deployment.properties.DeploymentType.$ref": "#/definitions/DeploymentType",
	"definitions.Deployment.properties.DeploymentType.description": "The type of deployment.",
	"definitions.Deployment.properties.GroupArn.$ref": "#/definitions/__string",
	"definitions.Deployment.properties.GroupArn.description": "Arn of the group for this deployment.",
	"definitions.Deployment.type": "object",
	"definitions.DeploymentType.enum.length": 4,
	"definitions.DeploymentType.enum[0]": "NewDeployment",
	"definitions.DeploymentType.enum[1]": "Redeployment",
	"definitions.DeploymentType.enum[2]": "ResetDeployment",
	"definitions.DeploymentType.enum[3]": "ForceResetDeployment",
	"definitions.DeploymentType.type": "string",
	"definitions.Deployments.items.$ref": "#/definitions/Deployment",
	"definitions.Deployments.type": "array",
	"definitions.Device.description": "Information on a Device",
	"definitions.Device.properties.CertificateArn.$ref": "#/definitions/__string",
	"definitions.Device.properties.CertificateArn.description": "Certificate arn of the device.",
	"definitions.Device.properties.Id.$ref": "#/definitions/__string",
	"definitions.Device.properties.Id.description": "Element Id for this entry in the list.",
	"definitions.Device.properties.SyncShadow.$ref": "#/definitions/__boolean",
	"definitions.Device.properties.SyncShadow.description": "If true, the local shadow value automatically syncs with the cloud's shadow state.",
	"definitions.Device.properties.ThingArn.$ref": "#/definitions/__string",
	"definitions.Device.properties.ThingArn.description": "Thing arn of the device.",
	"definitions.Device.type": "object",
	"definitions.DeviceDefinitionVersion.description": "Information on device definition version",
	"definitions.DeviceDefinitionVersion.properties.Devices.$ref": "#/definitions/ListOfDevice",
	"definitions.DeviceDefinitionVersion.properties.Devices.description": "Devices in the definition version.",
	"definitions.DeviceDefinitionVersion.type": "object",
	"definitions.DisassociateRoleFromGroupRequest.type": "object",
	"definitions.DisassociateRoleFromGroupResponse.properties.DisassociatedAt.$ref": "#/definitions/__string",
	"definitions.DisassociateRoleFromGroupResponse.properties.DisassociatedAt.description": "Time when the role was disassociated from the group.",
	"definitions.DisassociateRoleFromGroupResponse.type": "object",
	"definitions.DisassociateServiceRoleFromAccountRequest.type": "object",
	"definitions.DisassociateServiceRoleFromAccountResponse.properties.DisassociatedAt.$ref": "#/definitions/__string",
	"definitions.DisassociateServiceRoleFromAccountResponse.properties.DisassociatedAt.description": "Time when the service role was disassociated from the account.",
	"definitions.DisassociateServiceRoleFromAccountResponse.type": "object",
	"definitions.Empty.description": "Empty",
	"definitions.Empty.type": "object",
	"definitions.ErrorDetail.description": "ErrorDetail",
	"definitions.ErrorDetail.properties.DetailedErrorCode.$ref": "#/definitions/__string",
	"definitions.ErrorDetail.properties.DetailedErrorCode.description": "Detailed Error Code",
	"definitions.ErrorDetail.properties.DetailedErrorMessage.$ref": "#/definitions/__string",
	"definitions.ErrorDetail.properties.DetailedErrorMessage.description": "Detailed Error Message",
	"definitions.ErrorDetail.type": "object",
	"definitions.ErrorDetails.description": "Error Details",
	"definitions.ErrorDetails.items.$ref": "#/definitions/ErrorDetail",
	"definitions.ErrorDetails.type": "array",
	"definitions.Function.description": "Information on function",
	"definitions.Function.properties.FunctionArn.$ref": "#/definitions/__string",
	"definitions.Function.properties.FunctionArn.description": "Arn of the Lambda function.",
	"definitions.Function.properties.FunctionConfiguration.$ref": "#/definitions/FunctionConfiguration",
	"definitions.Function.properties.FunctionConfiguration.description": "Configuration of the function",
	"definitions.Function.properties.Id.$ref": "#/definitions/__string",
	"definitions.Function.properties.Id.description": "Id of the function in this version.",
	"definitions.Function.type": "object",
	"definitions.FunctionConfiguration.description": "Configuration of the function",
	"definitions.FunctionConfiguration.properties.Environment.$ref": "#/definitions/FunctionConfigurationEnvironment",
	"definitions.FunctionConfiguration.properties.Environment.description": "Environment of the function configuration",
	"definitions.FunctionConfiguration.properties.ExecArgs.$ref": "#/definitions/__string",
	"definitions.FunctionConfiguration.properties.ExecArgs.description": "Execution Arguments",
	"definitions.FunctionConfiguration.properties.Executable.$ref": "#/definitions/__string",
	"definitions.FunctionConfiguration.properties.Executable.description": "Executable",
	"definitions.FunctionConfiguration.properties.MemorySize.$ref": "#/definitions/__integer",
	"definitions.FunctionConfiguration.properties.MemorySize.description": "The memory size, in KB, you configured for the function.",
	"definitions.FunctionConfiguration.properties.Pinned.$ref": "#/definitions/__boolean",
	"definitions.FunctionConfiguration.properties.Pinned.description": "Whether the function is pinned or not. Pinned means the function is long-lived and starts when the core starts.",
	"definitions.FunctionConfiguration.properties.Timeout.$ref": "#/definitions/__integer",
	"definitions.FunctionConfiguration.properties.Timeout.description": "The function execution time at which Lambda should terminate the function. This timeout still applies to pinned lambdas for each request.",
	"definitions.FunctionConfiguration.type": "object",
	"definitions.FunctionConfigurationEnvironment.description": "Environment of the function configuration",
	"definitions.FunctionConfigurationEnvironment.properties.Variables.$ref": "#/definitions/MapOf__string",
	"definitions.FunctionConfigurationEnvironment.properties.Variables.description": "Environment variables for the lambda function.",
	"definitions.FunctionConfigurationEnvironment.type": "object",
	"definitions.FunctionDefinitionVersion.description": "Information on the function definition version",
	"definitions.FunctionDefinitionVersion.properties.Functions.$ref": "#/definitions/ListOfFunction",
	"definitions.FunctionDefinitionVersion.properties.Functions.description": "Lambda functions in this function definition version.",
	"definitions.FunctionDefinitionVersion.type": "object",
	"definitions.GeneralError.description": "General Error",
	"definitions.GeneralError.properties.ErrorDetails.$ref": "#/definitions/ErrorDetails",
	"definitions.GeneralError.properties.ErrorDetails.description": "Error Details",
	"definitions.GeneralError.properties.Message.$ref": "#/definitions/__string",
	"definitions.GeneralError.properties.Message.description": "Message containing information about the error",
	"definitions.GeneralError.type": "object",
	"definitions.GetAssociatedRoleRequest.type": "object",
	"definitions.GetAssociatedRoleResponse.properties.AssociatedAt.$ref": "#/definitions/__string",
	"definitions.GetAssociatedRoleResponse.properties.AssociatedAt.description": "Time when the role was associated for the group.",
	"definitions.GetAssociatedRoleResponse.properties.RoleArn.$ref": "#/definitions/__string",
	"definitions.GetAssociatedRoleResponse.properties.RoleArn.description": "Arn of the role that is associated with the group.",
	"definitions.GetAssociatedRoleResponse.type": "object",
	"definitions.GetConnectivityInfoRequest.type": "object",
	"definitions.GetConnectivityInfoResponse.properties.ConnectivityInfo.$ref": "#/definitions/ListOfConnectivityInfo",
	"definitions.GetConnectivityInfoResponse.properties.ConnectivityInfo.description": "Connectivity info list",
	"definitions.GetConnectivityInfoResponse.properties.Message.$ref": "#/definitions/__string",
	"definitions.GetConnectivityInfoResponse.properties.Message.description": "Response Text",
	"definitions.GetConnectivityInfoResponse.type": "object",
	"definitions.GetCoreDefinitionRequest.type": "object",
	"definitions.GetCoreDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetCoreDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetCoreDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetCoreDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetCoreDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetCoreDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetCoreDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetCoreDefinitionResponse.type": "object",
	"definitions.GetCoreDefinitionVersionRequest.type": "object",
	"definitions.GetCoreDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionVersionResponse.properties.Arn.description": "Arn of the core definition version.",
	"definitions.GetCoreDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the core definition version was created.",
	"definitions.GetCoreDefinitionVersionResponse.properties.Definition.$ref": "#/definitions/CoreDefinitionVersion",
	"definitions.GetCoreDefinitionVersionResponse.properties.Definition.description": "Information on definition",
	"definitions.GetCoreDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionVersionResponse.properties.Id.description": "Id of the core definition the version belongs to.",
	"definitions.GetCoreDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetCoreDefinitionVersionResponse.properties.Version.description": "Version of the core definition version.",
	"definitions.GetCoreDefinitionVersionResponse.type": "object",
	"definitions.GetDeploymentStatusRequest.type": "object",
	"definitions.GetDeploymentStatusResponse.properties.DeploymentStatus.$ref": "#/definitions/__string",
	"definitions.GetDeploymentStatusResponse.properties.DeploymentStatus.description": "Status of the deployment.",
	"definitions.GetDeploymentStatusResponse.properties.DeploymentType.$ref": "#/definitions/DeploymentType",
	"definitions.GetDeploymentStatusResponse.properties.DeploymentType.description": "The type of the deployment.",
	"definitions.GetDeploymentStatusResponse.properties.ErrorDetails.$ref": "#/definitions/ErrorDetails",
	"definitions.GetDeploymentStatusResponse.properties.ErrorDetails.description": "The error Details",
	"definitions.GetDeploymentStatusResponse.properties.ErrorMessage.$ref": "#/definitions/__string",
	"definitions.GetDeploymentStatusResponse.properties.ErrorMessage.description": "Error Message",
	"definitions.GetDeploymentStatusResponse.properties.UpdatedAt.$ref": "#/definitions/__string",
	"definitions.GetDeploymentStatusResponse.properties.UpdatedAt.description": "Last time the deployment status was updated.",
	"definitions.GetDeploymentStatusResponse.type": "object",
	"definitions.GetDeviceDefinitionRequest.type": "object",
	"definitions.GetDeviceDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetDeviceDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetDeviceDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetDeviceDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetDeviceDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetDeviceDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetDeviceDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetDeviceDefinitionResponse.type": "object",
	"definitions.GetDeviceDefinitionVersionRequest.type": "object",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Arn.description": "Arn of the device definition version.",
	"definitions.GetDeviceDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the device definition version was created.",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Definition.$ref": "#/definitions/DeviceDefinitionVersion",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Definition.description": "Device definition version",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Id.description": "Id of the device definition the version belongs to.",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetDeviceDefinitionVersionResponse.properties.Version.description": "Version of the device definition version.",
	"definitions.GetDeviceDefinitionVersionResponse.type": "object",
	"definitions.GetFunctionDefinitionRequest.type": "object",
	"definitions.GetFunctionDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetFunctionDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetFunctionDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetFunctionDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetFunctionDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetFunctionDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetFunctionDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetFunctionDefinitionResponse.type": "object",
	"definitions.GetFunctionDefinitionVersionRequest.type": "object",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Arn.description": "Arn of the function definition version.",
	"definitions.GetFunctionDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp when the funtion definition version was created.",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Definition.$ref": "#/definitions/FunctionDefinitionVersion",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Definition.description": "Information on the definition.",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Id.description": "Id of the function definition the version belongs to.",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetFunctionDefinitionVersionResponse.properties.Version.description": "Version of the function definition version.",
	"definitions.GetFunctionDefinitionVersionResponse.type": "object",
	"definitions.GetGroupCertificateAuthorityRequest.type": "object",
	"definitions.GetGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityArn.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityArn.description": "Arn of the certificate authority for the group.",
	"definitions.GetGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityId.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateAuthorityResponse.properties.GroupCertificateAuthorityId.description": "Id of the certificate authority for the group.",
	"definitions.GetGroupCertificateAuthorityResponse.properties.PemEncodedCertificate.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateAuthorityResponse.properties.PemEncodedCertificate.description": "PEM encoded certificate for the group.",
	"definitions.GetGroupCertificateAuthorityResponse.type": "object",
	"definitions.GetGroupCertificateConfigurationRequest.type": "object",
	"definitions.GetGroupCertificateConfigurationResponse.properties.CertificateAuthorityExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateConfigurationResponse.properties.CertificateAuthorityExpiryInMilliseconds.description": "Amount of time when the certificate authority expires in milliseconds.",
	"definitions.GetGroupCertificateConfigurationResponse.properties.CertificateExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateConfigurationResponse.properties.CertificateExpiryInMilliseconds.description": "Amount of time when the certificate expires in milliseconds.",
	"definitions.GetGroupCertificateConfigurationResponse.properties.GroupId.$ref": "#/definitions/__string",
	"definitions.GetGroupCertificateConfigurationResponse.properties.GroupId.description": "Id of the group the certificate configuration belongs to.",
	"definitions.GetGroupCertificateConfigurationResponse.type": "object",
	"definitions.GetGroupRequest.type": "object",
	"definitions.GetGroupResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetGroupResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetGroupResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetGroupResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetGroupResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetGroupResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetGroupResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetGroupResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetGroupResponse.type": "object",
	"definitions.GetGroupVersionRequest.type": "object",
	"definitions.GetGroupVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetGroupVersionResponse.properties.Arn.description": "Arn of the group version.",
	"definitions.GetGroupVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetGroupVersionResponse.properties.CreationTimestamp.description": "Timestamp when the group version was created.",
	"definitions.GetGroupVersionResponse.properties.Definition.$ref": "#/definitions/GroupVersion",
	"definitions.GetGroupVersionResponse.properties.Definition.description": "Information on the definition",
	"definitions.GetGroupVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetGroupVersionResponse.properties.Id.description": "Id of the group version.",
	"definitions.GetGroupVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetGroupVersionResponse.properties.Version.description": "Unique Id for a version of the Group.",
	"definitions.GetGroupVersionResponse.type": "object",
	"definitions.GetLoggerDefinitionRequest.type": "object",
	"definitions.GetLoggerDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetLoggerDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetLoggerDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetLoggerDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetLoggerDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetLoggerDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetLoggerDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetLoggerDefinitionResponse.type": "object",
	"definitions.GetLoggerDefinitionVersionRequest.type": "object",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Arn.description": "Arn of the logger definition version.",
	"definitions.GetLoggerDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the logger definition version was created.",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Definition.$ref": "#/definitions/LoggerDefinitionVersion",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Definition.description": "Information on definition",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Id.description": "Id of the logger definition the version belongs to.",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetLoggerDefinitionVersionResponse.properties.Version.description": "Version of the logger definition version.",
	"definitions.GetLoggerDefinitionVersionResponse.type": "object",
	"definitions.GetServiceRoleForAccountRequest.type": "object",
	"definitions.GetServiceRoleForAccountResponse.properties.AssociatedAt.$ref": "#/definitions/__string",
	"definitions.GetServiceRoleForAccountResponse.properties.AssociatedAt.description": "Time when the service role was associated to the account.",
	"definitions.GetServiceRoleForAccountResponse.properties.RoleArn.$ref": "#/definitions/__string",
	"definitions.GetServiceRoleForAccountResponse.properties.RoleArn.description": "Role arn which is associated to the account.",
	"definitions.GetServiceRoleForAccountResponse.type": "object",
	"definitions.GetSubscriptionDefinitionRequest.type": "object",
	"definitions.GetSubscriptionDefinitionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.Arn.description": "Arn of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.CreationTimestamp.description": "Timestamp of when the definition was created.",
	"definitions.GetSubscriptionDefinitionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.Id.description": "Id of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.LatestVersion.description": "Last version of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.LatestVersionArn.description": "Latest version arn of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.properties.Name.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionResponse.properties.Name.description": "Name of the definition.",
	"definitions.GetSubscriptionDefinitionResponse.type": "object",
	"definitions.GetSubscriptionDefinitionVersionRequest.type": "object",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Arn.description": "Arn of the subscription definition version.",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.CreationTimestamp.description": "Timestamp of when the subscription definition version was created.",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Definition.$ref": "#/definitions/SubscriptionDefinitionVersion",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Definition.description": "Information on the definition",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Id.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Id.description": "Id of the subscription definition the version belongs to.",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.GetSubscriptionDefinitionVersionResponse.properties.Version.description": "Version of the subscription definition version.",
	"definitions.GetSubscriptionDefinitionVersionResponse.type": "object",
	"definitions.GroupCertificateAuthorityProperties.description": "Information on group certificate authority properties",
	"definitions.GroupCertificateAuthorityProperties.properties.GroupCertificateAuthorityArn.$ref": "#/definitions/__string",
	"definitions.GroupCertificateAuthorityProperties.properties.GroupCertificateAuthorityArn.description": "Arn of the certificate authority for the group.",
	"definitions.GroupCertificateAuthorityProperties.properties.GroupCertificateAuthorityId.$ref": "#/definitions/__string",
	"definitions.GroupCertificateAuthorityProperties.properties.GroupCertificateAuthorityId.description": "Id of the certificate authority for the group.",
	"definitions.GroupCertificateAuthorityProperties.type": "object",
	"definitions.GroupCertificateConfiguration.description": "Information on the group certificate configuration",
	"definitions.GroupCertificateConfiguration.properties.CertificateAuthorityExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.GroupCertificateConfiguration.properties.CertificateAuthorityExpiryInMilliseconds.description": "Amount of time when the certificate authority expires in milliseconds.",
	"definitions.GroupCertificateConfiguration.properties.CertificateExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.GroupCertificateConfiguration.properties.CertificateExpiryInMilliseconds.description": "Amount of time when the certificate expires in milliseconds.",
	"definitions.GroupCertificateConfiguration.properties.GroupId.$ref": "#/definitions/__string",
	"definitions.GroupCertificateConfiguration.properties.GroupId.description": "Id of the group the certificate configuration belongs to.",
	"definitions.GroupCertificateConfiguration.type": "object",
	"definitions.GroupInformation.description": "Information on the group",
	"definitions.GroupInformation.properties.Arn.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.Arn.description": "Arn of a group.",
	"definitions.GroupInformation.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.CreationTimestamp.description": "Timestamp of when the group was created.",
	"definitions.GroupInformation.properties.Id.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.Id.description": "Id of a group.",
	"definitions.GroupInformation.properties.LastUpdatedTimestamp.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.LastUpdatedTimestamp.description": "Last updated timestamp of the group.",
	"definitions.GroupInformation.properties.LatestVersion.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.LatestVersion.description": "Last version of the group.",
	"definitions.GroupInformation.properties.LatestVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.LatestVersionArn.description": "Latest version arn of the group.",
	"definitions.GroupInformation.properties.Name.$ref": "#/definitions/__string",
	"definitions.GroupInformation.properties.Name.description": "Name of a group.",
	"definitions.GroupInformation.type": "object",
	"definitions.GroupVersion.description": "Information on group version",
	"definitions.GroupVersion.properties.CoreDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupVersion.properties.CoreDefinitionVersionArn.description": "Core definition version arn for this group.",
	"definitions.GroupVersion.properties.DeviceDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupVersion.properties.DeviceDefinitionVersionArn.description": "Device definition version arn for this group.",
	"definitions.GroupVersion.properties.FunctionDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupVersion.properties.FunctionDefinitionVersionArn.description": "Function definition version arn for this group.",
	"definitions.GroupVersion.properties.LoggerDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupVersion.properties.LoggerDefinitionVersionArn.description": "Logger definitionv ersion arn for this group.",
	"definitions.GroupVersion.properties.SubscriptionDefinitionVersionArn.$ref": "#/definitions/__string",
	"definitions.GroupVersion.properties.SubscriptionDefinitionVersionArn.description": "Subscription definition version arn for this group.",
	"definitions.GroupVersion.type": "object",
	"definitions.InternalServerErrorException.description": "General Error",
	"definitions.InternalServerErrorException.properties.ErrorDetails.$ref": "#/definitions/ErrorDetails",
	"definitions.InternalServerErrorException.properties.ErrorDetails.description": "Error Details",
	"definitions.InternalServerErrorException.properties.Message.$ref": "#/definitions/__string",
	"definitions.InternalServerErrorException.properties.Message.description": "Message containing information about the error",
	"definitions.InternalServerErrorException.type": "object",
	"definitions.ListCoreDefinitionVersionsRequest.type": "object",
	"definitions.ListCoreDefinitionVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListCoreDefinitionVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListCoreDefinitionVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListCoreDefinitionVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListCoreDefinitionVersionsResponse.type": "object",
	"definitions.ListCoreDefinitionsRequest.type": "object",
	"definitions.ListCoreDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListCoreDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListCoreDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListCoreDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListCoreDefinitionsResponse.type": "object",
	"definitions.ListDefinitionsResponse.description": "List of definition responses",
	"definitions.ListDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListDefinitionsResponse.type": "object",
	"definitions.ListDeploymentsRequest.type": "object",
	"definitions.ListDeploymentsResponse.properties.Deployments.$ref": "#/definitions/Deployments",
	"definitions.ListDeploymentsResponse.properties.Deployments.description": "List of deployments for the requested groups",
	"definitions.ListDeploymentsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListDeploymentsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListDeploymentsResponse.type": "object",
	"definitions.ListDeviceDefinitionVersionsRequest.type": "object",
	"definitions.ListDeviceDefinitionVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListDeviceDefinitionVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListDeviceDefinitionVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListDeviceDefinitionVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListDeviceDefinitionVersionsResponse.type": "object",
	"definitions.ListDeviceDefinitionsRequest.type": "object",
	"definitions.ListDeviceDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListDeviceDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListDeviceDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListDeviceDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListDeviceDefinitionsResponse.type": "object",
	"definitions.ListFunctionDefinitionVersionsRequest.type": "object",
	"definitions.ListFunctionDefinitionVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListFunctionDefinitionVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListFunctionDefinitionVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListFunctionDefinitionVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListFunctionDefinitionVersionsResponse.type": "object",
	"definitions.ListFunctionDefinitionsRequest.type": "object",
	"definitions.ListFunctionDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListFunctionDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListFunctionDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListFunctionDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListFunctionDefinitionsResponse.type": "object",
	"definitions.ListGroupCertificateAuthoritiesRequest.type": "object",
	"definitions.ListGroupCertificateAuthoritiesResponse.properties.GroupCertificateAuthorities.$ref": "#/definitions/ListOfGroupCertificateAuthorityProperties",
	"definitions.ListGroupCertificateAuthoritiesResponse.properties.GroupCertificateAuthorities.description": "List of certificate authorities associated with the group.",
	"definitions.ListGroupCertificateAuthoritiesResponse.type": "object",
	"definitions.ListGroupVersionsRequest.type": "object",
	"definitions.ListGroupVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListGroupVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListGroupVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListGroupVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListGroupVersionsResponse.type": "object",
	"definitions.ListGroupsRequest.type": "object",
	"definitions.ListGroupsResponse.properties.Groups.$ref": "#/definitions/ListOfGroupInformation",
	"definitions.ListGroupsResponse.properties.Groups.description": "Groups",
	"definitions.ListGroupsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListGroupsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListGroupsResponse.type": "object",
	"definitions.ListLoggerDefinitionVersionsRequest.type": "object",
	"definitions.ListLoggerDefinitionVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListLoggerDefinitionVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListLoggerDefinitionVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListLoggerDefinitionVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListLoggerDefinitionVersionsResponse.type": "object",
	"definitions.ListLoggerDefinitionsRequest.type": "object",
	"definitions.ListLoggerDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListLoggerDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListLoggerDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListLoggerDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListLoggerDefinitionsResponse.type": "object",
	"definitions.ListOfConnectivityInfo.items.$ref": "#/definitions/ConnectivityInfo",
	"definitions.ListOfConnectivityInfo.type": "array",
	"definitions.ListOfCore.items.$ref": "#/definitions/Core",
	"definitions.ListOfCore.type": "array",
	"definitions.ListOfDefinitionInformation.items.$ref": "#/definitions/DefinitionInformation",
	"definitions.ListOfDefinitionInformation.type": "array",
	"definitions.ListOfDevice.items.$ref": "#/definitions/Device",
	"definitions.ListOfDevice.type": "array",
	"definitions.ListOfFunction.items.$ref": "#/definitions/Function",
	"definitions.ListOfFunction.type": "array",
	"definitions.ListOfGroupCertificateAuthorityProperties.items.$ref": "#/definitions/GroupCertificateAuthorityProperties",
	"definitions.ListOfGroupCertificateAuthorityProperties.type": "array",
	"definitions.ListOfGroupInformation.items.$ref": "#/definitions/GroupInformation",
	"definitions.ListOfGroupInformation.type": "array",
	"definitions.ListOfLogger.items.$ref": "#/definitions/Logger",
	"definitions.ListOfLogger.type": "array",
	"definitions.ListOfSubscription.items.$ref": "#/definitions/Subscription",
	"definitions.ListOfSubscription.type": "array",
	"definitions.ListOfVersionInformation.items.$ref": "#/definitions/VersionInformation",
	"definitions.ListOfVersionInformation.type": "array",
	"definitions.ListSubscriptionDefinitionVersionsRequest.type": "object",
	"definitions.ListSubscriptionDefinitionVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListSubscriptionDefinitionVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListSubscriptionDefinitionVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListSubscriptionDefinitionVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListSubscriptionDefinitionVersionsResponse.type": "object",
	"definitions.ListSubscriptionDefinitionsRequest.type": "object",
	"definitions.ListSubscriptionDefinitionsResponse.properties.Definitions.$ref": "#/definitions/ListOfDefinitionInformation",
	"definitions.ListSubscriptionDefinitionsResponse.properties.Definitions.description": "Definitions",
	"definitions.ListSubscriptionDefinitionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListSubscriptionDefinitionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListSubscriptionDefinitionsResponse.type": "object",
	"definitions.ListVersionsResponse.description": "List of versions response",
	"definitions.ListVersionsResponse.properties.NextToken.$ref": "#/definitions/__string",
	"definitions.ListVersionsResponse.properties.NextToken.description": "The token for the next set of results, or ''null'' if there are no additional results.",
	"definitions.ListVersionsResponse.properties.Versions.$ref": "#/definitions/ListOfVersionInformation",
	"definitions.ListVersionsResponse.properties.Versions.description": "Versions",
	"definitions.ListVersionsResponse.type": "object",
	"definitions.Logger.description": "Information on the Logger",
	"definitions.Logger.properties.Component.$ref": "#/definitions/LoggerComponent",
	"definitions.Logger.properties.Component.description": "The component that will be subject to logs",
	"definitions.Logger.properties.Id.$ref": "#/definitions/__string",
	"definitions.Logger.properties.Id.description": "Element Id for this entry in the list.",
	"definitions.Logger.properties.Level.$ref": "#/definitions/LoggerLevel",
	"definitions.Logger.properties.Level.description": "The level of the logs",
	"definitions.Logger.properties.Space.$ref": "#/definitions/__integer",
	"definitions.Logger.properties.Space.description": "Amount of hardware space, in KB, to use if file system is used for logging purposes.",
	"definitions.Logger.properties.Type.$ref": "#/definitions/LoggerType",
	"definitions.Logger.properties.Type.description": "The type which will be use for log output",
	"definitions.Logger.type": "object",
	"definitions.LoggerComponent.enum.length": 2,
	"definitions.LoggerComponent.enum[0]": "GreengrassSystem",
	"definitions.LoggerComponent.enum[1]": "Lambda",
	"definitions.LoggerComponent.type": "string",
	"definitions.LoggerDefinitionVersion.description": "Information on logger definition version",
	"definitions.LoggerDefinitionVersion.properties.Loggers.$ref": "#/definitions/ListOfLogger",
	"definitions.LoggerDefinitionVersion.properties.Loggers.description": "List of loggers.",
	"definitions.LoggerDefinitionVersion.type": "object",
	"definitions.LoggerLevel.enum.length": 5,
	"definitions.LoggerLevel.enum[0]": "DEBUG",
	"definitions.LoggerLevel.enum[1]": "INFO",
	"definitions.LoggerLevel.enum[2]": "WARN",
	"definitions.LoggerLevel.enum[3]": "ERROR",
	"definitions.LoggerLevel.enum[4]": "FATAL",
	"definitions.LoggerLevel.type": "string",
	"definitions.LoggerType.enum.length": 2,
	"definitions.LoggerType.enum[0]": "FileSystem",
	"definitions.LoggerType.enum[1]": "AWSCloudWatch",
	"definitions.LoggerType.type": "string",
	"definitions.MapOf__string.items.properties.key.$ref": "#/definitions/__string",
	"definitions.MapOf__string.items.properties.value.$ref": "#/definitions/__string",
	"definitions.MapOf__string.items.type": "object",
	"definitions.MapOf__string.type": "array",
	"definitions.ResetDeploymentsRequest.description": "Information needed to perform a reset of a group's deployments.",
	"definitions.ResetDeploymentsRequest.properties.Force.$ref": "#/definitions/__boolean",
	"definitions.ResetDeploymentsRequest.properties.Force.description": "When set to true, perform a best-effort only core reset.",
	"definitions.ResetDeploymentsRequest.type": "object",
	"definitions.ResetDeploymentsResponse.properties.DeploymentArn.$ref": "#/definitions/__string",
	"definitions.ResetDeploymentsResponse.properties.DeploymentArn.description": "The arn of the reset deployment.",
	"definitions.ResetDeploymentsResponse.properties.DeploymentId.$ref": "#/definitions/__string",
	"definitions.ResetDeploymentsResponse.properties.DeploymentId.description": "The id of the reset deployment.",
	"definitions.ResetDeploymentsResponse.type": "object",
	"definitions.Subscription.description": "Information on subscription",
	"definitions.Subscription.properties.Id.$ref": "#/definitions/__string",
	"definitions.Subscription.properties.Id.description": "Element Id for this entry in the list.",
	"definitions.Subscription.properties.Source.$ref": "#/definitions/__string",
	"definitions.Subscription.properties.Source.description": "Source of the subscription. Can be a thing arn, lambda arn or word 'cloud'",
	"definitions.Subscription.properties.Subject.$ref": "#/definitions/__string",
	"definitions.Subscription.properties.Subject.description": "Subject of the message.",
	"definitions.Subscription.properties.Target.$ref": "#/definitions/__string",
	"definitions.Subscription.properties.Target.description": "Where the message is sent to. Can be a thing arn, lambda arn or word 'cloud'.",
	"definitions.Subscription.type": "object",
	"definitions.SubscriptionDefinitionVersion.description": "Information on subscription definition version",
	"definitions.SubscriptionDefinitionVersion.properties.Subscriptions.$ref": "#/definitions/ListOfSubscription",
	"definitions.SubscriptionDefinitionVersion.properties.Subscriptions.description": "Subscriptions in the version.",
	"definitions.SubscriptionDefinitionVersion.type": "object",
	"definitions.UpdateConnectivityInfoRequest.description": "connectivity info request",
	"definitions.UpdateConnectivityInfoRequest.properties.ConnectivityInfo.$ref": "#/definitions/ListOfConnectivityInfo",
	"definitions.UpdateConnectivityInfoRequest.properties.ConnectivityInfo.description": "Connectivity info list",
	"definitions.UpdateConnectivityInfoRequest.type": "object",
	"definitions.UpdateConnectivityInfoResponse.properties.Message.$ref": "#/definitions/__string",
	"definitions.UpdateConnectivityInfoResponse.properties.Message.description": "Response Text",
	"definitions.UpdateConnectivityInfoResponse.properties.Version.$ref": "#/definitions/__string",
	"definitions.UpdateConnectivityInfoResponse.properties.Version.description": "New Version",
	"definitions.UpdateConnectivityInfoResponse.type": "object",
	"definitions.UpdateCoreDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateCoreDefinitionRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateCoreDefinitionRequest.type": "object",
	"definitions.UpdateCoreDefinitionResponse.type": "object",
	"definitions.UpdateDeviceDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateDeviceDefinitionRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateDeviceDefinitionRequest.type": "object",
	"definitions.UpdateDeviceDefinitionResponse.type": "object",
	"definitions.UpdateFunctionDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateFunctionDefinitionRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateFunctionDefinitionRequest.type": "object",
	"definitions.UpdateFunctionDefinitionResponse.type": "object",
	"definitions.UpdateGroupCertificateConfigurationRequest.properties.CertificateExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.UpdateGroupCertificateConfigurationRequest.properties.CertificateExpiryInMilliseconds.description": "Amount of time when the certificate expires in milliseconds.",
	"definitions.UpdateGroupCertificateConfigurationRequest.type": "object",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.CertificateAuthorityExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.CertificateAuthorityExpiryInMilliseconds.description": "Amount of time when the certificate authority expires in milliseconds.",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.CertificateExpiryInMilliseconds.$ref": "#/definitions/__string",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.CertificateExpiryInMilliseconds.description": "Amount of time when the certificate expires in milliseconds.",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.GroupId.$ref": "#/definitions/__string",
	"definitions.UpdateGroupCertificateConfigurationResponse.properties.GroupId.description": "Id of the group the certificate configuration belongs to.",
	"definitions.UpdateGroupCertificateConfigurationResponse.type": "object",
	"definitions.UpdateGroupRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateGroupRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateGroupRequest.type": "object",
	"definitions.UpdateGroupResponse.type": "object",
	"definitions.UpdateLoggerDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateLoggerDefinitionRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateLoggerDefinitionRequest.type": "object",
	"definitions.UpdateLoggerDefinitionResponse.type": "object",
	"definitions.UpdateSubscriptionDefinitionRequest.properties.Name.$ref": "#/definitions/__string",
	"definitions.UpdateSubscriptionDefinitionRequest.properties.Name.description": "name of the definition",
	"definitions.UpdateSubscriptionDefinitionRequest.type": "object",
	"definitions.UpdateSubscriptionDefinitionResponse.type": "object",
	"definitions.VersionInformation.description": "Information on the version",
	"definitions.VersionInformation.properties.Arn.$ref": "#/definitions/__string",
	"definitions.VersionInformation.properties.Arn.description": "Arn of the version.",
	"definitions.VersionInformation.properties.CreationTimestamp.$ref": "#/definitions/__string",
	"definitions.VersionInformation.properties.CreationTimestamp.description": "Timestamp of when the version was created.",
	"definitions.VersionInformation.properties.Id.$ref": "#/definitions/__string",
	"definitions.VersionInformation.properties.Id.description": "Id of the resource container.",
	"definitions.VersionInformation.properties.Version.$ref": "#/definitions/__string",
	"definitions.VersionInformation.properties.Version.description": "Unique Id of a version.",
	"definitions.VersionInformation.type": "object",
	"definitions.__boolean.type": "boolean",
	"definitions.__double.format": "double",
	"definitions.__double.type": "number",
	"definitions.__integer.type": "integer",
	"definitions.__string.type": "string",
	"definitions.__timestamp.format": "date-time",
	"definitions.__timestamp.type": "string",
	"externalDocs.description": "Amazon Web Services documentation",
	"externalDocs.url": "https://aws.amazon.com/greengrass/",
	"host": "greengrass.amazonaws.com",
	"info.contact.email": "mike.ralphson@gmail.com",
	"info.contact.name": "Mike Ralphson",
	"info.contact.url": "https://github.com/mermade/aws2openapi",
	"info.description": "AWS Greengrass seamlessly extends AWS onto physical devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. AWS Greengrass ensures your devices can respond quickly to local events and operate with intermittent connectivity. AWS Greengrass minimizes the cost of transmitting data to the cloud by allowing you to author AWS Lambda functions that execute locally.",
	"info.license.name": "Apache 2.0 License",
	"info.license.url": "http://www.apache.org/licenses/",
	"info.termsOfService": "https://aws.amazon.com/service-terms/",
	"info.title": "AWS Greengrass",
	"info.version": "2017-06-07",
	"info.x-apiClientRegistration.url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].contentType": "application/json",
	"info.x-origin[0].converter.url": "https://github.com/mermade/aws2openapi",
	"info.x-origin[0].converter.version": "1.0.0",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/greengrass-2017-06-07.normal.json",
	"info.x-origin[0].x-apisguru-direct": true,
	"info.x-preferred": true,
	"info.x-providerName": "amazonaws.com",
	"info.x-release": "v4",
	"info.x-serviceName": "greengrass",
	"parameters.Action.in": "header",
	"parameters.Action.name": "Action",
	"parameters.Action.required": true,
	"parameters.Action.type": "string",
	"parameters.Version.in": "header",
	"parameters.Version.name": "Version",
	"parameters.Version.required": true,
	"parameters.Version.type": "string",
	"parameters.X-Amz-Algorithm.in": "header",
	"parameters.X-Amz-Algorithm.name": "X-Amz-Algorithm",
	"parameters.X-Amz-Algorithm.required": false,
	"parameters.X-Amz-Algorithm.type": "string",
	"parameters.X-Amz-Content-Sha256.in": "header",
	"parameters.X-Amz-Content-Sha256.name": "X-Amz-Content-Sha256",
	"parameters.X-Amz-Content-Sha256.required": false,
	"parameters.X-Amz-Content-Sha256.type": "string",
	"parameters.X-Amz-Credential.in": "header",
	"parameters.X-Amz-Credential.name": "X-Amz-Credential",
	"parameters.X-Amz-Credential.required": false,
	"parameters.X-Amz-Credential.type": "string",
	"parameters.X-Amz-Date.in": "header",
	"parameters.X-Amz-Date.name": "X-Amz-Date",
	"parameters.X-Amz-Date.required": false,
	"parameters.X-Amz-Date.type": "string",
	"parameters.X-Amz-Security-Token.in": "header",
	"parameters.X-Amz-Security-Token.name": "X-Amz-Security-Token",
	"parameters.X-Amz-Security-Token.required": false,
	"parameters.X-Amz-Security-Token.type": "string",
	"parameters.X-Amz-Signature.in": "header",
	"parameters.X-Amz-Signature.name": "X-Amz-Signature",
	"parameters.X-Amz-Signature.required": false,
	"parameters.X-Amz-Signature.type": "string",
	"parameters.X-Amz-SignedHeaders.in": "header",
	"parameters.X-Amz-SignedHeaders.name": "X-Amz-SignedHeaders",
	"parameters.X-Amz-SignedHeaders.required": false,
	"parameters.X-Amz-SignedHeaders.type": "string",
	"paths./greengrass/definition/cores.get.description": "Retrieves a list of core definitions.",
	"paths./greengrass/definition/cores.get.operationId": "ListCoreDefinitions",
	"paths./greengrass/definition/cores.get.parameters.length": 1,
	"paths./greengrass/definition/cores.get.parameters[0].in": "body",
	"paths./greengrass/definition/cores.get.parameters[0].name": "body",
	"paths./greengrass/definition/cores.get.parameters[0].required": true,
	"paths./greengrass/definition/cores.get.parameters[0].schema.$ref": "#/definitions/ListCoreDefinitionsRequest",
	"paths./greengrass/definition/cores.get.responses.200.description": "Success",
	"paths./greengrass/definition/cores.get.responses.200.schema.$ref": "#/definitions/ListCoreDefinitionsResponse",
	"paths./greengrass/definition/cores.parameters.length": 9,
	"paths./greengrass/definition/cores.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/cores.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/cores.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/cores.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/cores.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/cores.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/cores.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/cores.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/cores.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters.length": 9,
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.description": "Updates a core definition.",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.operationId": "UpdateCoreDefinition",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters.length": 2,
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[0].in": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[0].name": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[0].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[0].schema.$ref": "#/definitions/UpdateCoreDefinitionRequest",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[1].in": "path",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[1].name": "CoreDefinitionId",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[1].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.parameters[1].type": "string",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.responses.200.description": "Success",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.responses.200.schema.$ref": "#/definitions/UpdateCoreDefinitionResponse",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.description": "Lists versions of a core definition.",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.operationId": "ListCoreDefinitionVersions",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters.length": 2,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[0].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListCoreDefinitionVersionsRequest",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[1].name": "CoreDefinitionId",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[1].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.responses.200.schema.$ref": "#/definitions/ListCoreDefinitionVersionsResponse",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters.length": 9,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.description": "Retrieves information about a core definition version.",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.operationId": "GetCoreDefinitionVersion",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters.length": 3,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[0].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetCoreDefinitionVersionRequest",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[1].name": "CoreDefinitionId",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[1].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[2].name": "CoreDefinitionVersionId",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[2].required": true,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.responses.200.schema.$ref": "#/definitions/GetCoreDefinitionVersionResponse",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters.length": 9,
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/devices.get.description": "Retrieves a list of device definitions.",
	"paths./greengrass/definition/devices.get.operationId": "ListDeviceDefinitions",
	"paths./greengrass/definition/devices.get.parameters.length": 1,
	"paths./greengrass/definition/devices.get.parameters[0].in": "body",
	"paths./greengrass/definition/devices.get.parameters[0].name": "body",
	"paths./greengrass/definition/devices.get.parameters[0].required": true,
	"paths./greengrass/definition/devices.get.parameters[0].schema.$ref": "#/definitions/ListDeviceDefinitionsRequest",
	"paths./greengrass/definition/devices.get.responses.200.description": "Success",
	"paths./greengrass/definition/devices.get.responses.200.schema.$ref": "#/definitions/ListDeviceDefinitionsResponse",
	"paths./greengrass/definition/devices.parameters.length": 9,
	"paths./greengrass/definition/devices.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/devices.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/devices.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/devices.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/devices.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/devices.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/devices.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/devices.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/devices.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters.length": 9,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.description": "Updates a device definition.",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.operationId": "UpdateDeviceDefinition",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters.length": 2,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[0].in": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[0].name": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[0].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[0].schema.$ref": "#/definitions/UpdateDeviceDefinitionRequest",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[1].in": "path",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[1].name": "DeviceDefinitionId",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[1].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.parameters[1].type": "string",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.responses.200.description": "Success",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.responses.200.schema.$ref": "#/definitions/UpdateDeviceDefinitionResponse",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.description": "Lists the versions of a device definition.",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.operationId": "ListDeviceDefinitionVersions",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters.length": 2,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[0].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListDeviceDefinitionVersionsRequest",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[1].name": "DeviceDefinitionId",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[1].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.responses.200.schema.$ref": "#/definitions/ListDeviceDefinitionVersionsResponse",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters.length": 9,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.description": "Retrieves information about a device definition version.",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.operationId": "GetDeviceDefinitionVersion",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters.length": 3,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[0].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetDeviceDefinitionVersionRequest",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[1].name": "DeviceDefinitionId",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[1].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[2].name": "DeviceDefinitionVersionId",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[2].required": true,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.responses.200.schema.$ref": "#/definitions/GetDeviceDefinitionVersionResponse",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters.length": 9,
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/functions.get.description": "Retrieves a list of Lambda function definitions.",
	"paths./greengrass/definition/functions.get.operationId": "ListFunctionDefinitions",
	"paths./greengrass/definition/functions.get.parameters.length": 1,
	"paths./greengrass/definition/functions.get.parameters[0].in": "body",
	"paths./greengrass/definition/functions.get.parameters[0].name": "body",
	"paths./greengrass/definition/functions.get.parameters[0].required": true,
	"paths./greengrass/definition/functions.get.parameters[0].schema.$ref": "#/definitions/ListFunctionDefinitionsRequest",
	"paths./greengrass/definition/functions.get.responses.200.description": "Success",
	"paths./greengrass/definition/functions.get.responses.200.schema.$ref": "#/definitions/ListFunctionDefinitionsResponse",
	"paths./greengrass/definition/functions.parameters.length": 9,
	"paths./greengrass/definition/functions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/functions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/functions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/functions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/functions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/functions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/functions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/functions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/functions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters.length": 9,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.description": "Updates a Lambda function definition.",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.operationId": "UpdateFunctionDefinition",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters.length": 2,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[0].in": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[0].name": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[0].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[0].schema.$ref": "#/definitions/UpdateFunctionDefinitionRequest",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[1].in": "path",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[1].name": "FunctionDefinitionId",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[1].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.parameters[1].type": "string",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.responses.200.description": "Success",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.responses.200.schema.$ref": "#/definitions/UpdateFunctionDefinitionResponse",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.description": "Lists the versions of a Lambda function definition.",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.operationId": "ListFunctionDefinitionVersions",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters.length": 2,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[0].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListFunctionDefinitionVersionsRequest",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[1].name": "FunctionDefinitionId",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[1].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.responses.200.schema.$ref": "#/definitions/ListFunctionDefinitionVersionsResponse",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters.length": 9,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.description": "Retrieves information about a Lambda function definition version, such as which Lambda functions are included in the version and their configurations.",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.operationId": "GetFunctionDefinitionVersion",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters.length": 3,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[0].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetFunctionDefinitionVersionRequest",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[1].name": "FunctionDefinitionId",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[1].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[2].name": "FunctionDefinitionVersionId",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[2].required": true,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.responses.200.schema.$ref": "#/definitions/GetFunctionDefinitionVersionResponse",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters.length": 9,
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/loggers.get.description": "Retrieves a list of logger definitions.",
	"paths./greengrass/definition/loggers.get.operationId": "ListLoggerDefinitions",
	"paths./greengrass/definition/loggers.get.parameters.length": 1,
	"paths./greengrass/definition/loggers.get.parameters[0].in": "body",
	"paths./greengrass/definition/loggers.get.parameters[0].name": "body",
	"paths./greengrass/definition/loggers.get.parameters[0].required": true,
	"paths./greengrass/definition/loggers.get.parameters[0].schema.$ref": "#/definitions/ListLoggerDefinitionsRequest",
	"paths./greengrass/definition/loggers.get.responses.200.description": "Success",
	"paths./greengrass/definition/loggers.get.responses.200.schema.$ref": "#/definitions/ListLoggerDefinitionsResponse",
	"paths./greengrass/definition/loggers.parameters.length": 9,
	"paths./greengrass/definition/loggers.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/loggers.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/loggers.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/loggers.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/loggers.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/loggers.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/loggers.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/loggers.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/loggers.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters.length": 9,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.description": "Updates a logger definition.",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.operationId": "UpdateLoggerDefinition",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters.length": 2,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[0].in": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[0].name": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[0].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[0].schema.$ref": "#/definitions/UpdateLoggerDefinitionRequest",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[1].in": "path",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[1].name": "LoggerDefinitionId",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[1].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.parameters[1].type": "string",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.responses.200.description": "Success",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.responses.200.schema.$ref": "#/definitions/UpdateLoggerDefinitionResponse",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.description": "Lists the versions of a logger definition.",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.operationId": "ListLoggerDefinitionVersions",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters.length": 2,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[0].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListLoggerDefinitionVersionsRequest",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[1].name": "LoggerDefinitionId",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[1].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.responses.200.schema.$ref": "#/definitions/ListLoggerDefinitionVersionsResponse",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters.length": 9,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.description": "Retrieves information about a logger definition version.",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.operationId": "GetLoggerDefinitionVersion",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters.length": 3,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[0].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetLoggerDefinitionVersionRequest",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[1].name": "LoggerDefinitionId",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[1].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[2].name": "LoggerDefinitionVersionId",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[2].required": true,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.responses.200.schema.$ref": "#/definitions/GetLoggerDefinitionVersionResponse",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters.length": 9,
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/subscriptions.get.description": "Retrieves a list of subscription definitions.",
	"paths./greengrass/definition/subscriptions.get.operationId": "ListSubscriptionDefinitions",
	"paths./greengrass/definition/subscriptions.get.parameters.length": 1,
	"paths./greengrass/definition/subscriptions.get.parameters[0].in": "body",
	"paths./greengrass/definition/subscriptions.get.parameters[0].name": "body",
	"paths./greengrass/definition/subscriptions.get.parameters[0].required": true,
	"paths./greengrass/definition/subscriptions.get.parameters[0].schema.$ref": "#/definitions/ListSubscriptionDefinitionsRequest",
	"paths./greengrass/definition/subscriptions.get.responses.200.description": "Success",
	"paths./greengrass/definition/subscriptions.get.responses.200.schema.$ref": "#/definitions/ListSubscriptionDefinitionsResponse",
	"paths./greengrass/definition/subscriptions.parameters.length": 9,
	"paths./greengrass/definition/subscriptions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/subscriptions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/subscriptions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/subscriptions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/subscriptions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/subscriptions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/subscriptions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/subscriptions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/subscriptions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters.length": 9,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.description": "Updates a subscription definition.",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.operationId": "UpdateSubscriptionDefinition",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters.length": 2,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[0].in": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[0].name": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[0].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[0].schema.$ref": "#/definitions/UpdateSubscriptionDefinitionRequest",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[1].in": "path",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[1].name": "SubscriptionDefinitionId",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[1].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.parameters[1].type": "string",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.responses.200.description": "Success",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.responses.200.schema.$ref": "#/definitions/UpdateSubscriptionDefinitionResponse",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.description": "Lists the versions of a subscription definition.",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.operationId": "ListSubscriptionDefinitionVersions",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters.length": 2,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[0].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListSubscriptionDefinitionVersionsRequest",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[1].name": "SubscriptionDefinitionId",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[1].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.responses.200.schema.$ref": "#/definitions/ListSubscriptionDefinitionVersionsResponse",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters.length": 9,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.description": "Retrieves information about a subscription definition version.",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.operationId": "GetSubscriptionDefinitionVersion",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters.length": 3,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[0].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetSubscriptionDefinitionVersionRequest",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[1].name": "SubscriptionDefinitionId",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[1].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[2].name": "SubscriptionDefinitionVersionId",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[2].required": true,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.responses.200.schema.$ref": "#/definitions/GetSubscriptionDefinitionVersionResponse",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters.length": 9,
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups.get.description": "Retrieves a list of groups.",
	"paths./greengrass/groups.get.operationId": "ListGroups",
	"paths./greengrass/groups.get.parameters.length": 1,
	"paths./greengrass/groups.get.parameters[0].in": "body",
	"paths./greengrass/groups.get.parameters[0].name": "body",
	"paths./greengrass/groups.get.parameters[0].required": true,
	"paths./greengrass/groups.get.parameters[0].schema.$ref": "#/definitions/ListGroupsRequest",
	"paths./greengrass/groups.get.responses.200.description": "Success",
	"paths./greengrass/groups.get.responses.200.schema.$ref": "#/definitions/ListGroupsResponse",
	"paths./greengrass/groups.parameters.length": 9,
	"paths./greengrass/groups.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}.put.description": "Updates a group.",
	"paths./greengrass/groups/{GroupId}.put.operationId": "UpdateGroup",
	"paths./greengrass/groups/{GroupId}.put.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}.put.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}.put.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}.put.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}.put.parameters[0].schema.$ref": "#/definitions/UpdateGroupRequest",
	"paths./greengrass/groups/{GroupId}.put.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}.put.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}.put.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}.put.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}.put.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}.put.responses.200.schema.$ref": "#/definitions/UpdateGroupResponse",
	"paths./greengrass/groups/{GroupId}.put.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.description": "Retrieves the current CAs for a group.",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.operationId": "ListGroupCertificateAuthorities",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[0].schema.$ref": "#/definitions/ListGroupCertificateAuthoritiesRequest",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.200.schema.$ref": "#/definitions/ListGroupCertificateAuthoritiesResponse",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.481.description": "InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.get.responses.481.schema.$ref": "#/definitions/InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/certificateauthorities.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.description": "Updates the Cert expiry time for a group.",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.operationId": "UpdateGroupCertificateConfiguration",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[0].schema.$ref": "#/definitions/UpdateGroupCertificateConfigurationRequest",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.200.schema.$ref": "#/definitions/UpdateGroupCertificateConfigurationResponse",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.481.description": "InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry.put.responses.481.schema.$ref": "#/definitions/InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.description": "Retreives the CA associated with a group. Returns the public key of the CA.",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.operationId": "GetGroupCertificateAuthority",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters.length": 3,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[0].schema.$ref": "#/definitions/GetGroupCertificateAuthorityRequest",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[2].in": "path",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[2].name": "CertificateAuthorityId",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[2].required": true,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.parameters[2].type": "string",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.200.schema.$ref": "#/definitions/GetGroupCertificateAuthorityResponse",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.481.description": "InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.get.responses.481.schema.$ref": "#/definitions/InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/deployments.get.description": "Returns a history of deployments for the group.",
	"paths./greengrass/groups/{GroupId}/deployments.get.operationId": "ListDeployments",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[0].schema.$ref": "#/definitions/ListDeploymentsRequest",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/deployments.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/deployments.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/deployments.get.responses.200.schema.$ref": "#/definitions/ListDeploymentsResponse",
	"paths./greengrass/groups/{GroupId}/deployments.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/deployments.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/deployments.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.description": "Resets a group's deployments.",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.operationId": "ResetDeployments",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[0].schema.$ref": "#/definitions/ResetDeploymentsRequest",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.responses.200.schema.$ref": "#/definitions/ResetDeploymentsResponse",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments/$reset.post.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.description": "Returns the status of a deployment.",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.operationId": "GetDeploymentStatus",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters.length": 3,
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[0].schema.$ref": "#/definitions/GetDeploymentStatusRequest",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[2].in": "path",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[2].name": "DeploymentId",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[2].required": true,
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.parameters[2].type": "string",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.responses.200.schema.$ref": "#/definitions/GetDeploymentStatusResponse",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/deployments/{DeploymentId}/status.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/role.get.description": "Retrieves the role associated with a particular group.",
	"paths./greengrass/groups/{GroupId}/role.get.operationId": "GetAssociatedRole",
	"paths./greengrass/groups/{GroupId}/role.get.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/role.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/role.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/role.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/role.get.parameters[0].schema.$ref": "#/definitions/GetAssociatedRoleRequest",
	"paths./greengrass/groups/{GroupId}/role.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/role.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/role.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/role.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/role.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/role.get.responses.200.schema.$ref": "#/definitions/GetAssociatedRoleResponse",
	"paths./greengrass/groups/{GroupId}/role.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/role.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/role.get.responses.481.description": "InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/role.get.responses.481.schema.$ref": "#/definitions/InternalServerErrorException",
	"paths./greengrass/groups/{GroupId}/role.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/role.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/role.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/role.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/role.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/role.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/role.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/role.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/role.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/role.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/versions.get.description": "List the versions of a group.",
	"paths./greengrass/groups/{GroupId}/versions.get.operationId": "ListGroupVersions",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters.length": 2,
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[0].schema.$ref": "#/definitions/ListGroupVersionsRequest",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/versions.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/versions.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/versions.get.responses.200.schema.$ref": "#/definitions/ListGroupVersionsResponse",
	"paths./greengrass/groups/{GroupId}/versions.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/versions.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/versions.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/versions.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/versions.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/versions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/versions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/versions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/versions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/versions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/versions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/versions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.description": "Retrieves information about a group version.",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.operationId": "GetGroupVersion",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters.length": 3,
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[0].in": "body",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[0].name": "body",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[0].required": true,
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[0].schema.$ref": "#/definitions/GetGroupVersionRequest",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[1].in": "path",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[1].name": "GroupId",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[1].required": true,
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[1].type": "string",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[2].in": "path",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[2].name": "GroupVersionId",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[2].required": true,
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.parameters[2].type": "string",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.responses.200.description": "Success",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.responses.200.schema.$ref": "#/definitions/GetGroupVersionResponse",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.responses.480.description": "BadRequestException",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.get.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters.length": 9,
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/groups/{GroupId}/versions/{GroupVersionId}.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/servicerole.get.description": "Retrieves the service role that is attached to the account.",
	"paths./greengrass/servicerole.get.operationId": "GetServiceRoleForAccount",
	"paths./greengrass/servicerole.get.parameters.length": 1,
	"paths./greengrass/servicerole.get.parameters[0].in": "body",
	"paths./greengrass/servicerole.get.parameters[0].name": "body",
	"paths./greengrass/servicerole.get.parameters[0].required": true,
	"paths./greengrass/servicerole.get.parameters[0].schema.$ref": "#/definitions/GetServiceRoleForAccountRequest",
	"paths./greengrass/servicerole.get.responses.200.description": "Success",
	"paths./greengrass/servicerole.get.responses.200.schema.$ref": "#/definitions/GetServiceRoleForAccountResponse",
	"paths./greengrass/servicerole.get.responses.480.description": "InternalServerErrorException",
	"paths./greengrass/servicerole.get.responses.480.schema.$ref": "#/definitions/InternalServerErrorException",
	"paths./greengrass/servicerole.parameters.length": 9,
	"paths./greengrass/servicerole.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/servicerole.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/servicerole.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/servicerole.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/servicerole.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/servicerole.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/servicerole.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/servicerole.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/servicerole.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters.length": 9,
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[0].$ref": "#/parameters/Action",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[1].$ref": "#/parameters/Version",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./greengrass/things/{ThingName}/connectivityInfo.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.description": "Updates the connectivity information for the core. Any devices that belong to the group which has this core will receive this information in order to find the location of the core and connect to it.",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.operationId": "UpdateConnectivityInfo",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters.length": 2,
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[0].in": "body",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[0].name": "body",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[0].required": true,
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[0].schema.$ref": "#/definitions/UpdateConnectivityInfoRequest",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[1].in": "path",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[1].name": "ThingName",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[1].required": true,
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.parameters[1].type": "string",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.200.description": "Success",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.200.schema.$ref": "#/definitions/UpdateConnectivityInfoResponse",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.480.description": "BadRequestException",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.480.schema.$ref": "#/definitions/BadRequestException",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.481.description": "InternalServerErrorException",
	"paths./greengrass/things/{ThingName}/connectivityInfo.put.responses.481.schema.$ref": "#/definitions/InternalServerErrorException",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "http",
	"security.length": 1,
	"securityDefinitions.hmac.description": "Amazon Signature authorization v4",
	"securityDefinitions.hmac.in": "header",
	"securityDefinitions.hmac.name": "Authorization",
	"securityDefinitions.hmac.type": "apiKey",
	"securityDefinitions.hmac.x-amazon-apigateway-authtype": "awsSigv4",
	"security[0].hmac.length": 0,
	"swagger": "2.0",
	"x-hasEquivalentPaths": true
}