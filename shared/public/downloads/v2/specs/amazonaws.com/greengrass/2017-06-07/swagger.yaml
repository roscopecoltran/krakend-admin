swagger: '2.0'
schemes:
  - http
host: greengrass.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: 'AWS Greengrass seamlessly extends AWS onto physical devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. AWS Greengrass ensures your devices can respond quickly to local events and operate with intermittent connectivity. AWS Greengrass minimizes the cost of transmitting data to the cloud by allowing you to author AWS Lambda functions that execute locally.'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Greengrass
  version: '2017-06-07'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/greengrass-2017-06-07.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: greengrass
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/greengrass/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /greengrass/definition/cores:
    get:
      description: Retrieves a list of core definitions.
      operationId: ListCoreDefinitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListCoreDefinitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCoreDefinitionsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/cores/{CoreDefinitionId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a core definition.
      operationId: UpdateCoreDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCoreDefinitionRequest'
        - in: path
          name: CoreDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCoreDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/definition/cores/{CoreDefinitionId}/versions':
    get:
      description: Lists versions of a core definition.
      operationId: ListCoreDefinitionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListCoreDefinitionVersionsRequest'
        - in: path
          name: CoreDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCoreDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}':
    get:
      description: Retrieves information about a core definition version.
      operationId: GetCoreDefinitionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetCoreDefinitionVersionRequest'
        - in: path
          name: CoreDefinitionId
          required: true
          type: string
        - in: path
          name: CoreDefinitionVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCoreDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/definition/devices:
    get:
      description: Retrieves a list of device definitions.
      operationId: ListDeviceDefinitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDeviceDefinitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceDefinitionsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/devices/{DeviceDefinitionId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a device definition.
      operationId: UpdateDeviceDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDeviceDefinitionRequest'
        - in: path
          name: DeviceDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDeviceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/definition/devices/{DeviceDefinitionId}/versions':
    get:
      description: Lists the versions of a device definition.
      operationId: ListDeviceDefinitionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDeviceDefinitionVersionsRequest'
        - in: path
          name: DeviceDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}':
    get:
      description: Retrieves information about a device definition version.
      operationId: GetDeviceDefinitionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDeviceDefinitionVersionRequest'
        - in: path
          name: DeviceDefinitionId
          required: true
          type: string
        - in: path
          name: DeviceDefinitionVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeviceDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/definition/functions:
    get:
      description: Retrieves a list of Lambda function definitions.
      operationId: ListFunctionDefinitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFunctionDefinitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionDefinitionsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/functions/{FunctionDefinitionId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a Lambda function definition.
      operationId: UpdateFunctionDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFunctionDefinitionRequest'
        - in: path
          name: FunctionDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFunctionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/definition/functions/{FunctionDefinitionId}/versions':
    get:
      description: Lists the versions of a Lambda function definition.
      operationId: ListFunctionDefinitionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFunctionDefinitionVersionsRequest'
        - in: path
          name: FunctionDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}':
    get:
      description: 'Retrieves information about a Lambda function definition version, such as which Lambda functions are included in the version and their configurations.'
      operationId: GetFunctionDefinitionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetFunctionDefinitionVersionRequest'
        - in: path
          name: FunctionDefinitionId
          required: true
          type: string
        - in: path
          name: FunctionDefinitionVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFunctionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/definition/loggers:
    get:
      description: Retrieves a list of logger definitions.
      operationId: ListLoggerDefinitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListLoggerDefinitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLoggerDefinitionsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/loggers/{LoggerDefinitionId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a logger definition.
      operationId: UpdateLoggerDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLoggerDefinitionRequest'
        - in: path
          name: LoggerDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLoggerDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/definition/loggers/{LoggerDefinitionId}/versions':
    get:
      description: Lists the versions of a logger definition.
      operationId: ListLoggerDefinitionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListLoggerDefinitionVersionsRequest'
        - in: path
          name: LoggerDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLoggerDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}':
    get:
      description: Retrieves information about a logger definition version.
      operationId: GetLoggerDefinitionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetLoggerDefinitionVersionRequest'
        - in: path
          name: LoggerDefinitionId
          required: true
          type: string
        - in: path
          name: LoggerDefinitionVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoggerDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/definition/subscriptions:
    get:
      description: Retrieves a list of subscription definitions.
      operationId: ListSubscriptionDefinitions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a subscription definition.
      operationId: UpdateSubscriptionDefinition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionDefinitionRequest'
        - in: path
          name: SubscriptionDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSubscriptionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions':
    get:
      description: Lists the versions of a subscription definition.
      operationId: ListSubscriptionDefinitionVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionVersionsRequest'
        - in: path
          name: SubscriptionDefinitionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}':
    get:
      description: Retrieves information about a subscription definition version.
      operationId: GetSubscriptionDefinitionVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionVersionRequest'
        - in: path
          name: SubscriptionDefinitionId
          required: true
          type: string
        - in: path
          name: SubscriptionDefinitionVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/groups:
    get:
      description: Retrieves a list of groups.
      operationId: ListGroups
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a group.
      operationId: UpdateGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/groups/{GroupId}/certificateauthorities':
    get:
      description: Retrieves the current CAs for a group.
      operationId: ListGroupCertificateAuthorities
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupCertificateAuthoritiesRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupCertificateAuthoritiesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the Cert expiry time for a group.
      operationId: UpdateGroupCertificateConfiguration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupCertificateConfigurationRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupCertificateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
  '/greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}':
    get:
      description: Retreives the CA associated with a group. Returns the public key of the CA.
      operationId: GetGroupCertificateAuthority
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupCertificateAuthorityRequest'
        - in: path
          name: GroupId
          required: true
          type: string
        - in: path
          name: CertificateAuthorityId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupCertificateAuthorityResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/deployments':
    get:
      description: Returns a history of deployments for the group.
      operationId: ListDeployments
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentsRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/deployments/$reset':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Resets a group's deployments.
      operationId: ResetDeployments
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetDeploymentsRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetDeploymentsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
  '/greengrass/groups/{GroupId}/deployments/{DeploymentId}/status':
    get:
      description: Returns the status of a deployment.
      operationId: GetDeploymentStatus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentStatusRequest'
        - in: path
          name: GroupId
          required: true
          type: string
        - in: path
          name: DeploymentId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeploymentStatusResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/role':
    get:
      description: Retrieves the role associated with a particular group.
      operationId: GetAssociatedRole
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAssociatedRoleRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAssociatedRoleResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/versions':
    get:
      description: List the versions of a group.
      operationId: ListGroupVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupVersionsRequest'
        - in: path
          name: GroupId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/versions/{GroupVersionId}':
    get:
      description: Retrieves information about a group version.
      operationId: GetGroupVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupVersionRequest'
        - in: path
          name: GroupId
          required: true
          type: string
        - in: path
          name: GroupVersionId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/servicerole:
    get:
      description: Retrieves the service role that is attached to the account.
      operationId: GetServiceRoleForAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceRoleForAccountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceRoleForAccountResponse'
        '480':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/things/{ThingName}/connectivityInfo':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the connectivity information for the core. Any devices that belong to the group which has this core will receive this information in order to find the location of the core and connect to it.
      operationId: UpdateConnectivityInfo
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConnectivityInfoRequest'
        - in: path
          name: ThingName
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConnectivityInfoResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
definitions:
  AssociateRoleToGroupRequest:
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: Role arn you wish to associate with this group.
    type: object
  AssociateRoleToGroupResponse:
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: Time the role arn was associated to your group.
    type: object
  AssociateServiceRoleToAccountRequest:
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: Role arn you wish to associate with this account.
    type: object
  AssociateServiceRoleToAccountResponse:
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: Time when the service role was associated to the account.
    type: object
  BadRequestException:
    description: General Error
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Error Details
      Message:
        $ref: '#/definitions/__string'
        description: Message containing information about the error
    type: object
  ConnectivityInfo:
    description: Connectivity Info
    properties:
      HostAddress:
        $ref: '#/definitions/__string'
        description: Endpoint for the GGC. Can be an IP address or DNS.
      Id:
        $ref: '#/definitions/__string'
        description: Element Id for this entry in the list.
      Metadata:
        $ref: '#/definitions/__string'
        description: Metadata for this endpoint.
      PortNumber:
        $ref: '#/definitions/__integer'
        description: Port of the GGC. Usually 8883.
    type: object
  Core:
    description: Information on the core
    properties:
      CertificateArn:
        $ref: '#/definitions/__string'
        description: Certificate arn of the core.
      Id:
        $ref: '#/definitions/__string'
        description: Element Id for this entry in the list.
      SyncShadow:
        $ref: '#/definitions/__boolean'
        description: 'If true, the local shadow value automatically syncs with the cloud''s shadow state.'
      ThingArn:
        $ref: '#/definitions/__string'
        description: Thing arn of the core.
    type: object
  CoreDefinitionVersion:
    description: Information on core definition version
    properties:
      Cores:
        $ref: '#/definitions/ListOfCore'
        description: Cores in the definition version.
    type: object
  CreateCoreDefinitionRequest:
    description: Information on the core definition request
    properties:
      InitialVersion:
        $ref: '#/definitions/CoreDefinitionVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the core definition
    type: object
  CreateCoreDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateCoreDefinitionVersionRequest:
    properties:
      Cores:
        $ref: '#/definitions/ListOfCore'
        description: Cores in the definition version.
    type: object
  CreateCoreDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  CreateDeploymentRequest:
    properties:
      DeploymentId:
        $ref: '#/definitions/__string'
        description: Id of the deployment if you wish to redeploy a previous deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: 'Type of deployment. When used in CreateDeployment, only NewDeployment and Redeployment are valid. '
      GroupVersionId:
        $ref: '#/definitions/__string'
        description: Group Version you wish to deploy.
    type: object
  CreateDeploymentResponse:
    properties:
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: The arn of the deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The id of the deployment.
    type: object
  CreateDeviceDefinitionRequest:
    properties:
      InitialVersion:
        $ref: '#/definitions/DeviceDefinitionVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the device definition
    type: object
  CreateDeviceDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateDeviceDefinitionVersionRequest:
    properties:
      Devices:
        $ref: '#/definitions/ListOfDevice'
        description: Devices in the definition version.
    type: object
  CreateDeviceDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  CreateFunctionDefinitionRequest:
    properties:
      InitialVersion:
        $ref: '#/definitions/FunctionDefinitionVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the function definition
    type: object
  CreateFunctionDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateFunctionDefinitionVersionRequest:
    description: Function definition version
    properties:
      Functions:
        $ref: '#/definitions/ListOfFunction'
        description: Lambda functions in this function definition version.
    type: object
  CreateFunctionDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  CreateGroupCertificateAuthorityRequest:
    properties: {}
    type: object
  CreateGroupCertificateAuthorityResponse:
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: Arn of the group certificate authority.
    type: object
  CreateGroupRequest:
    properties:
      InitialVersion:
        $ref: '#/definitions/GroupVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the group
    type: object
  CreateGroupResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateGroupVersionRequest:
    properties:
      CoreDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Core definition version arn for this group.
      DeviceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Device definition version arn for this group.
      FunctionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Function definition version arn for this group.
      LoggerDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Logger definitionv ersion arn for this group.
      SubscriptionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Subscription definition version arn for this group.
    type: object
  CreateGroupVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  CreateLoggerDefinitionRequest:
    properties:
      InitialVersion:
        $ref: '#/definitions/LoggerDefinitionVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the logger definition
    type: object
  CreateLoggerDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateLoggerDefinitionVersionRequest:
    properties:
      Loggers:
        $ref: '#/definitions/ListOfLogger'
        description: List of loggers.
    type: object
  CreateLoggerDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  CreateSubscriptionDefinitionRequest:
    properties:
      InitialVersion:
        $ref: '#/definitions/SubscriptionDefinitionVersion'
        description: Information on the initial version
      Name:
        $ref: '#/definitions/__string'
        description: name of the subscription definition
    type: object
  CreateSubscriptionDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  CreateSubscriptionDefinitionVersionRequest:
    properties:
      Subscriptions:
        $ref: '#/definitions/ListOfSubscription'
        description: Subscriptions in the version.
    type: object
  CreateSubscriptionDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  DefinitionInformation:
    description: Information on the Definition
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  DeleteCoreDefinitionRequest:
    properties: {}
    type: object
  DeleteCoreDefinitionResponse:
    properties: {}
    type: object
  DeleteDeviceDefinitionRequest:
    properties: {}
    type: object
  DeleteDeviceDefinitionResponse:
    properties: {}
    type: object
  DeleteFunctionDefinitionRequest:
    properties: {}
    type: object
  DeleteFunctionDefinitionResponse:
    properties: {}
    type: object
  DeleteGroupRequest:
    properties: {}
    type: object
  DeleteGroupResponse:
    properties: {}
    type: object
  DeleteLoggerDefinitionRequest:
    properties: {}
    type: object
  DeleteLoggerDefinitionResponse:
    properties: {}
    type: object
  DeleteSubscriptionDefinitionRequest:
    properties: {}
    type: object
  DeleteSubscriptionDefinitionResponse:
    properties: {}
    type: object
  Deployment:
    description: Information on the deployment
    properties:
      CreatedAt:
        $ref: '#/definitions/__string'
        description: Timestamp when the deployment was created.
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: Arn of the deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: Id of the deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: The type of deployment.
      GroupArn:
        $ref: '#/definitions/__string'
        description: Arn of the group for this deployment.
    type: object
  DeploymentType:
    enum:
      - NewDeployment
      - Redeployment
      - ResetDeployment
      - ForceResetDeployment
    type: string
  Deployments:
    items:
      $ref: '#/definitions/Deployment'
    type: array
  Device:
    description: Information on a Device
    properties:
      CertificateArn:
        $ref: '#/definitions/__string'
        description: Certificate arn of the device.
      Id:
        $ref: '#/definitions/__string'
        description: Element Id for this entry in the list.
      SyncShadow:
        $ref: '#/definitions/__boolean'
        description: 'If true, the local shadow value automatically syncs with the cloud''s shadow state.'
      ThingArn:
        $ref: '#/definitions/__string'
        description: Thing arn of the device.
    type: object
  DeviceDefinitionVersion:
    description: Information on device definition version
    properties:
      Devices:
        $ref: '#/definitions/ListOfDevice'
        description: Devices in the definition version.
    type: object
  DisassociateRoleFromGroupRequest:
    properties: {}
    type: object
  DisassociateRoleFromGroupResponse:
    properties:
      DisassociatedAt:
        $ref: '#/definitions/__string'
        description: Time when the role was disassociated from the group.
    type: object
  DisassociateServiceRoleFromAccountRequest:
    properties: {}
    type: object
  DisassociateServiceRoleFromAccountResponse:
    properties:
      DisassociatedAt:
        $ref: '#/definitions/__string'
        description: Time when the service role was disassociated from the account.
    type: object
  Empty:
    description: Empty
    properties: {}
    type: object
  ErrorDetail:
    description: ErrorDetail
    properties:
      DetailedErrorCode:
        $ref: '#/definitions/__string'
        description: Detailed Error Code
      DetailedErrorMessage:
        $ref: '#/definitions/__string'
        description: Detailed Error Message
    type: object
  ErrorDetails:
    description: Error Details
    items:
      $ref: '#/definitions/ErrorDetail'
    type: array
  Function:
    description: Information on function
    properties:
      FunctionArn:
        $ref: '#/definitions/__string'
        description: Arn of the Lambda function.
      FunctionConfiguration:
        $ref: '#/definitions/FunctionConfiguration'
        description: Configuration of the function
      Id:
        $ref: '#/definitions/__string'
        description: Id of the function in this version.
    type: object
  FunctionConfiguration:
    description: Configuration of the function
    properties:
      Environment:
        $ref: '#/definitions/FunctionConfigurationEnvironment'
        description: Environment of the function configuration
      ExecArgs:
        $ref: '#/definitions/__string'
        description: Execution Arguments
      Executable:
        $ref: '#/definitions/__string'
        description: Executable
      MemorySize:
        $ref: '#/definitions/__integer'
        description: 'The memory size, in KB, you configured for the function.'
      Pinned:
        $ref: '#/definitions/__boolean'
        description: Whether the function is pinned or not. Pinned means the function is long-lived and starts when the core starts.
      Timeout:
        $ref: '#/definitions/__integer'
        description: The function execution time at which Lambda should terminate the function. This timeout still applies to pinned lambdas for each request.
    type: object
  FunctionConfigurationEnvironment:
    description: Environment of the function configuration
    properties:
      Variables:
        $ref: '#/definitions/MapOf__string'
        description: Environment variables for the lambda function.
    type: object
  FunctionDefinitionVersion:
    description: Information on the function definition version
    properties:
      Functions:
        $ref: '#/definitions/ListOfFunction'
        description: Lambda functions in this function definition version.
    type: object
  GeneralError:
    description: General Error
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Error Details
      Message:
        $ref: '#/definitions/__string'
        description: Message containing information about the error
    type: object
  GetAssociatedRoleRequest:
    properties: {}
    type: object
  GetAssociatedRoleResponse:
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: Time when the role was associated for the group.
      RoleArn:
        $ref: '#/definitions/__string'
        description: Arn of the role that is associated with the group.
    type: object
  GetConnectivityInfoRequest:
    properties: {}
    type: object
  GetConnectivityInfoResponse:
    properties:
      ConnectivityInfo:
        $ref: '#/definitions/ListOfConnectivityInfo'
        description: Connectivity info list
      Message:
        $ref: '#/definitions/__string'
        description: Response Text
    type: object
  GetCoreDefinitionRequest:
    properties: {}
    type: object
  GetCoreDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetCoreDefinitionVersionRequest:
    properties: {}
    type: object
  GetCoreDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the core definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the core definition version was created.
      Definition:
        $ref: '#/definitions/CoreDefinitionVersion'
        description: Information on definition
      Id:
        $ref: '#/definitions/__string'
        description: Id of the core definition the version belongs to.
      Version:
        $ref: '#/definitions/__string'
        description: Version of the core definition version.
    type: object
  GetDeploymentStatusRequest:
    properties: {}
    type: object
  GetDeploymentStatusResponse:
    properties:
      DeploymentStatus:
        $ref: '#/definitions/__string'
        description: Status of the deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: The type of the deployment.
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: The error Details
      ErrorMessage:
        $ref: '#/definitions/__string'
        description: Error Message
      UpdatedAt:
        $ref: '#/definitions/__string'
        description: Last time the deployment status was updated.
    type: object
  GetDeviceDefinitionRequest:
    properties: {}
    type: object
  GetDeviceDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetDeviceDefinitionVersionRequest:
    properties: {}
    type: object
  GetDeviceDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the device definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the device definition version was created.
      Definition:
        $ref: '#/definitions/DeviceDefinitionVersion'
        description: Device definition version
      Id:
        $ref: '#/definitions/__string'
        description: Id of the device definition the version belongs to.
      Version:
        $ref: '#/definitions/__string'
        description: Version of the device definition version.
    type: object
  GetFunctionDefinitionRequest:
    properties: {}
    type: object
  GetFunctionDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetFunctionDefinitionVersionRequest:
    properties: {}
    type: object
  GetFunctionDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the function definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp when the funtion definition version was created.
      Definition:
        $ref: '#/definitions/FunctionDefinitionVersion'
        description: Information on the definition.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the function definition the version belongs to.
      Version:
        $ref: '#/definitions/__string'
        description: Version of the function definition version.
    type: object
  GetGroupCertificateAuthorityRequest:
    properties: {}
    type: object
  GetGroupCertificateAuthorityResponse:
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: Arn of the certificate authority for the group.
      GroupCertificateAuthorityId:
        $ref: '#/definitions/__string'
        description: Id of the certificate authority for the group.
      PemEncodedCertificate:
        $ref: '#/definitions/__string'
        description: PEM encoded certificate for the group.
    type: object
  GetGroupCertificateConfigurationRequest:
    properties: {}
    type: object
  GetGroupCertificateConfigurationResponse:
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate authority expires in milliseconds.
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate expires in milliseconds.
      GroupId:
        $ref: '#/definitions/__string'
        description: Id of the group the certificate configuration belongs to.
    type: object
  GetGroupRequest:
    properties: {}
    type: object
  GetGroupResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetGroupVersionRequest:
    properties: {}
    type: object
  GetGroupVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the group version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp when the group version was created.
      Definition:
        $ref: '#/definitions/GroupVersion'
        description: Information on the definition
      Id:
        $ref: '#/definitions/__string'
        description: Id of the group version.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id for a version of the Group.
    type: object
  GetLoggerDefinitionRequest:
    properties: {}
    type: object
  GetLoggerDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetLoggerDefinitionVersionRequest:
    properties: {}
    type: object
  GetLoggerDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the logger definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the logger definition version was created.
      Definition:
        $ref: '#/definitions/LoggerDefinitionVersion'
        description: Information on definition
      Id:
        $ref: '#/definitions/__string'
        description: Id of the logger definition the version belongs to.
      Version:
        $ref: '#/definitions/__string'
        description: Version of the logger definition version.
    type: object
  GetServiceRoleForAccountRequest:
    properties: {}
    type: object
  GetServiceRoleForAccountResponse:
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: Time when the service role was associated to the account.
      RoleArn:
        $ref: '#/definitions/__string'
        description: Role arn which is associated to the account.
    type: object
  GetSubscriptionDefinitionRequest:
    properties: {}
    type: object
  GetSubscriptionDefinitionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the definition was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the definition.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: Name of the definition.
    type: object
  GetSubscriptionDefinitionVersionRequest:
    properties: {}
    type: object
  GetSubscriptionDefinitionVersionResponse:
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the subscription definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the subscription definition version was created.
      Definition:
        $ref: '#/definitions/SubscriptionDefinitionVersion'
        description: Information on the definition
      Id:
        $ref: '#/definitions/__string'
        description: Id of the subscription definition the version belongs to.
      Version:
        $ref: '#/definitions/__string'
        description: Version of the subscription definition version.
    type: object
  GroupCertificateAuthorityProperties:
    description: Information on group certificate authority properties
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: Arn of the certificate authority for the group.
      GroupCertificateAuthorityId:
        $ref: '#/definitions/__string'
        description: Id of the certificate authority for the group.
    type: object
  GroupCertificateConfiguration:
    description: Information on the group certificate configuration
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate authority expires in milliseconds.
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate expires in milliseconds.
      GroupId:
        $ref: '#/definitions/__string'
        description: Id of the group the certificate configuration belongs to.
    type: object
  GroupInformation:
    description: Information on the group
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of a group.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the group was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of a group.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: Last updated timestamp of the group.
      LatestVersion:
        $ref: '#/definitions/__string'
        description: Last version of the group.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: Latest version arn of the group.
      Name:
        $ref: '#/definitions/__string'
        description: Name of a group.
    type: object
  GroupVersion:
    description: Information on group version
    properties:
      CoreDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Core definition version arn for this group.
      DeviceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Device definition version arn for this group.
      FunctionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Function definition version arn for this group.
      LoggerDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Logger definitionv ersion arn for this group.
      SubscriptionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: Subscription definition version arn for this group.
    type: object
  InternalServerErrorException:
    description: General Error
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Error Details
      Message:
        $ref: '#/definitions/__string'
        description: Message containing information about the error
    type: object
  ListCoreDefinitionVersionsRequest:
    properties: {}
    type: object
  ListCoreDefinitionVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListCoreDefinitionsRequest:
    properties: {}
    type: object
  ListCoreDefinitionsResponse:
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListDefinitionsResponse:
    description: List of definition responses
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListDeploymentsRequest:
    properties: {}
    type: object
  ListDeploymentsResponse:
    properties:
      Deployments:
        $ref: '#/definitions/Deployments'
        description: List of deployments for the requested groups
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListDeviceDefinitionVersionsRequest:
    properties: {}
    type: object
  ListDeviceDefinitionVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListDeviceDefinitionsRequest:
    properties: {}
    type: object
  ListDeviceDefinitionsResponse:
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListFunctionDefinitionVersionsRequest:
    properties: {}
    type: object
  ListFunctionDefinitionVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListFunctionDefinitionsRequest:
    properties: {}
    type: object
  ListFunctionDefinitionsResponse:
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListGroupCertificateAuthoritiesRequest:
    properties: {}
    type: object
  ListGroupCertificateAuthoritiesResponse:
    properties:
      GroupCertificateAuthorities:
        $ref: '#/definitions/ListOfGroupCertificateAuthorityProperties'
        description: List of certificate authorities associated with the group.
    type: object
  ListGroupVersionsRequest:
    properties: {}
    type: object
  ListGroupVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListGroupsRequest:
    properties: {}
    type: object
  ListGroupsResponse:
    properties:
      Groups:
        $ref: '#/definitions/ListOfGroupInformation'
        description: Groups
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListLoggerDefinitionVersionsRequest:
    properties: {}
    type: object
  ListLoggerDefinitionVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListLoggerDefinitionsRequest:
    properties: {}
    type: object
  ListLoggerDefinitionsResponse:
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListOfConnectivityInfo:
    items:
      $ref: '#/definitions/ConnectivityInfo'
    type: array
  ListOfCore:
    items:
      $ref: '#/definitions/Core'
    type: array
  ListOfDefinitionInformation:
    items:
      $ref: '#/definitions/DefinitionInformation'
    type: array
  ListOfDevice:
    items:
      $ref: '#/definitions/Device'
    type: array
  ListOfFunction:
    items:
      $ref: '#/definitions/Function'
    type: array
  ListOfGroupCertificateAuthorityProperties:
    items:
      $ref: '#/definitions/GroupCertificateAuthorityProperties'
    type: array
  ListOfGroupInformation:
    items:
      $ref: '#/definitions/GroupInformation'
    type: array
  ListOfLogger:
    items:
      $ref: '#/definitions/Logger'
    type: array
  ListOfSubscription:
    items:
      $ref: '#/definitions/Subscription'
    type: array
  ListOfVersionInformation:
    items:
      $ref: '#/definitions/VersionInformation'
    type: array
  ListSubscriptionDefinitionVersionsRequest:
    properties: {}
    type: object
  ListSubscriptionDefinitionVersionsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  ListSubscriptionDefinitionsRequest:
    properties: {}
    type: object
  ListSubscriptionDefinitionsResponse:
    properties:
      Definitions:
        $ref: '#/definitions/ListOfDefinitionInformation'
        description: Definitions
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    type: object
  ListVersionsResponse:
    description: List of versions response
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/ListOfVersionInformation'
        description: Versions
    type: object
  Logger:
    description: Information on the Logger
    properties:
      Component:
        $ref: '#/definitions/LoggerComponent'
        description: The component that will be subject to logs
      Id:
        $ref: '#/definitions/__string'
        description: Element Id for this entry in the list.
      Level:
        $ref: '#/definitions/LoggerLevel'
        description: The level of the logs
      Space:
        $ref: '#/definitions/__integer'
        description: 'Amount of hardware space, in KB, to use if file system is used for logging purposes.'
      Type:
        $ref: '#/definitions/LoggerType'
        description: The type which will be use for log output
    type: object
  LoggerComponent:
    enum:
      - GreengrassSystem
      - Lambda
    type: string
  LoggerDefinitionVersion:
    description: Information on logger definition version
    properties:
      Loggers:
        $ref: '#/definitions/ListOfLogger'
        description: List of loggers.
    type: object
  LoggerLevel:
    enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    type: string
  LoggerType:
    enum:
      - FileSystem
      - AWSCloudWatch
    type: string
  MapOf__string:
    items:
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/__string'
      type: object
    type: array
  ResetDeploymentsRequest:
    description: Information needed to perform a reset of a group's deployments.
    properties:
      Force:
        $ref: '#/definitions/__boolean'
        description: 'When set to true, perform a best-effort only core reset.'
    type: object
  ResetDeploymentsResponse:
    properties:
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: The arn of the reset deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The id of the reset deployment.
    type: object
  Subscription:
    description: Information on subscription
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: Element Id for this entry in the list.
      Source:
        $ref: '#/definitions/__string'
        description: 'Source of the subscription. Can be a thing arn, lambda arn or word ''cloud'''
      Subject:
        $ref: '#/definitions/__string'
        description: Subject of the message.
      Target:
        $ref: '#/definitions/__string'
        description: 'Where the message is sent to. Can be a thing arn, lambda arn or word ''cloud''.'
    type: object
  SubscriptionDefinitionVersion:
    description: Information on subscription definition version
    properties:
      Subscriptions:
        $ref: '#/definitions/ListOfSubscription'
        description: Subscriptions in the version.
    type: object
  UpdateConnectivityInfoRequest:
    description: connectivity info request
    properties:
      ConnectivityInfo:
        $ref: '#/definitions/ListOfConnectivityInfo'
        description: Connectivity info list
    type: object
  UpdateConnectivityInfoResponse:
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: Response Text
      Version:
        $ref: '#/definitions/__string'
        description: New Version
    type: object
  UpdateCoreDefinitionRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateCoreDefinitionResponse:
    properties: {}
    type: object
  UpdateDeviceDefinitionRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateDeviceDefinitionResponse:
    properties: {}
    type: object
  UpdateFunctionDefinitionRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateFunctionDefinitionResponse:
    properties: {}
    type: object
  UpdateGroupCertificateConfigurationRequest:
    properties:
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate expires in milliseconds.
    type: object
  UpdateGroupCertificateConfigurationResponse:
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate authority expires in milliseconds.
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: Amount of time when the certificate expires in milliseconds.
      GroupId:
        $ref: '#/definitions/__string'
        description: Id of the group the certificate configuration belongs to.
    type: object
  UpdateGroupRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateGroupResponse:
    properties: {}
    type: object
  UpdateLoggerDefinitionRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateLoggerDefinitionResponse:
    properties: {}
    type: object
  UpdateSubscriptionDefinitionRequest:
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: name of the definition
    type: object
  UpdateSubscriptionDefinitionResponse:
    properties: {}
    type: object
  VersionInformation:
    description: Information on the version
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: Timestamp of when the version was created.
      Id:
        $ref: '#/definitions/__string'
        description: Id of the resource container.
      Version:
        $ref: '#/definitions/__string'
        description: Unique Id of a version.
    type: object
  __boolean:
    type: boolean
  __double:
    format: double
    type: number
  __integer:
    type: integer
  __string:
    type: string
  __timestamp:
    format: date-time
    type: string
