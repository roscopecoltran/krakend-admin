swagger: '2.0'
schemes:
  - http
host: codepipeline.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>AWS CodePipeline</fullname> <p> <b>Overview</b> </p> <p>This is the AWS CodePipeline API Reference. This guide provides descriptions of the actions and data types for AWS CodePipeline. Some functionality for your pipeline is only configurable through the API. For additional information, see the <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html">AWS CodePipeline User Guide</a>.</p> <p>You can use the AWS CodePipeline API to work with pipelines, stages, actions, gates, and transitions, as described below.</p> <p> <i>Pipelines</i> are models of automated release processes. Each pipeline is uniquely named, and consists of actions, gates, and stages. </p> <p>You can work with pipelines by calling:</p> <ul> <li> <p> <a>CreatePipeline</a>, which creates a uniquely-named pipeline.</p> </li> <li> <p> <a>DeletePipeline</a>, which deletes the specified pipeline.</p> </li> <li> <p> <a>GetPipeline</a>, which returns information about the pipeline structure and pipeline metadata, including the pipeline Amazon Resource Name (ARN).</p> </li> <li> <p> <a>GetPipelineExecution</a>, which returns information about a specific execution of a pipeline.</p> </li> <li> <p> <a>GetPipelineState</a>, which returns information about the current state of the stages and actions of a pipeline.</p> </li> <li> <p> <a>ListPipelines</a>, which gets a summary of all of the pipelines associated with your account.</p> </li> <li> <p> <a>ListPipelineExecutions</a>, which gets a summary of the most recent executions for a pipeline.</p> </li> <li> <p> <a>StartPipelineExecution</a>, which runs the the most recent revision of an artifact through the pipeline.</p> </li> <li> <p> <a>UpdatePipeline</a>, which updates a pipeline with edits or changes to the structure of the pipeline.</p> </li> </ul> <p>Pipelines include <i>stages</i>, which are logical groupings of gates and actions. Each stage contains one or more actions that must complete before the next stage begins. A stage will result in success or failure. If a stage fails, then the pipeline stops at that stage and will remain stopped until either a new version of an artifact appears in the source location, or a user takes action to re-run the most recent artifact through the pipeline. You can call <a>GetPipelineState</a>, which displays the status of a pipeline, including the status of stages in the pipeline, or <a>GetPipeline</a>, which returns the entire structure of the pipeline, including the stages of that pipeline. For more information about the structure of stages and actions, also refer to the <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html">AWS CodePipeline Pipeline Structure Reference</a>.</p> <p>Pipeline stages include <i>actions</i>, which are categorized into categories such as source or build actions performed within a stage of a pipeline. For example, you can use a source action to import artifacts into a pipeline from a source such as Amazon S3. Like stages, you do not work with actions directly in most cases, but you do define and interact with actions when working with pipeline operations such as <a>CreatePipeline</a> and <a>GetPipelineState</a>. </p> <p>Pipelines also include <i>transitions</i>, which allow the transition of artifacts from one stage to the next in a pipeline after the actions in one stage complete.</p> <p>You can work with transitions by calling:</p> <ul> <li> <p> <a>DisableStageTransition</a>, which prevents artifacts from transitioning to the next stage in a pipeline.</p> </li> <li> <p> <a>EnableStageTransition</a>, which enables transition of artifacts between stages in a pipeline. </p> </li> </ul> <p> <b>Using the API to integrate with AWS CodePipeline</b> </p> <p>For third-party integrators or developers who want to create their own integrations with AWS CodePipeline, the expected sequence varies from the standard API user. In order to integrate with AWS CodePipeline, developers will need to work with the following items:</p> <p> <b>Jobs</b>, which are instances of an action. For example, a job for a source action might import a revision of an artifact from a source. </p> <p>You can work with jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeJob</a>, which confirms whether a job worker has received the specified job,</p> </li> <li> <p> <a>GetJobDetails</a>, which returns the details of a job,</p> </li> <li> <p> <a>PollForJobs</a>, which determines whether there are any jobs to act upon, </p> </li> <li> <p> <a>PutJobFailureResult</a>, which provides details of a job failure, and</p> </li> <li> <p> <a>PutJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul> <p> <b>Third party jobs</b>, which are instances of an action created by a partner action and integrated into AWS CodePipeline. Partner actions are created by members of the AWS Partner Network.</p> <p>You can work with third party jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeThirdPartyJob</a>, which confirms whether a job worker has received the specified job,</p> </li> <li> <p> <a>GetThirdPartyJobDetails</a>, which requests the details of a job for a partner action,</p> </li> <li> <p> <a>PollForThirdPartyJobs</a>, which determines whether there are any jobs to act upon, </p> </li> <li> <p> <a>PutThirdPartyJobFailureResult</a>, which provides details of a job failure, and</p> </li> <li> <p> <a>PutThirdPartyJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS CodePipeline
  version: '2015-07-09'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codepipeline-2015-07-09.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: codepipeline
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/codepipeline/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about a specified job and whether that job has been received by the job worker. Only used for custom actions.
      operationId: AcknowledgeJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AcknowledgeJobInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcknowledgeJobOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNonceException
          schema:
            $ref: '#/definitions/InvalidNonceException'
        '482':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
  '/#AcknowledgeThirdPartyJob':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Confirms a job worker has received the specified job. Only used for partner actions.
      operationId: AcknowledgeThirdPartyJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AcknowledgeThirdPartyJobInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcknowledgeThirdPartyJobOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNonceException
          schema:
            $ref: '#/definitions/InvalidNonceException'
        '482':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
  '/#CreateCustomActionType':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.
      operationId: CreateCustomActionType
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomActionTypeInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCustomActionTypeOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#CreatePipeline':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a pipeline.
      operationId: CreatePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePipelineInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNameInUseException
          schema:
            $ref: '#/definitions/PipelineNameInUseException'
        '482':
          description: InvalidStageDeclarationException
          schema:
            $ref: '#/definitions/InvalidStageDeclarationException'
        '483':
          description: InvalidActionDeclarationException
          schema:
            $ref: '#/definitions/InvalidActionDeclarationException'
        '484':
          description: InvalidBlockerDeclarationException
          schema:
            $ref: '#/definitions/InvalidBlockerDeclarationException'
        '485':
          description: InvalidStructureException
          schema:
            $ref: '#/definitions/InvalidStructureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#DeleteCustomActionType':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Marks a custom action as deleted. PollForJobs for the custom action will fail after the action is marked for deletion. Only used for custom actions.</p> <important> <p>You cannot recreate a custom action after it has been deleted unless you increase the version number of the action.</p> </important>
      operationId: DeleteCustomActionType
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCustomActionTypeInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#DeletePipeline':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified pipeline.
      operationId: DeletePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePipelineInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#DisableStageTransition':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
      operationId: DisableStageTransition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableStageTransitionInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
  '/#EnableStageTransition':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables artifacts in a pipeline to transition to a stage in a pipeline.
      operationId: EnableStageTransition
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableStageTransitionInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
  '/#GetJobDetails':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns information about a job. Only used for custom actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      operationId: GetJobDetails
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobDetailsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobDetailsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
  '/#GetPipeline':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.'
      operationId: GetPipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: PipelineVersionNotFoundException
          schema:
            $ref: '#/definitions/PipelineVersionNotFoundException'
  '/#GetPipelineExecution':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.'
      operationId: GetPipelineExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineExecutionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: PipelineExecutionNotFoundException
          schema:
            $ref: '#/definitions/PipelineExecutionNotFoundException'
  '/#GetPipelineState':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns information about the state of a pipeline, including the stages and actions.'
      operationId: GetPipelineState
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineStateInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineStateOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
  '/#GetThirdPartyJobDetails':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Requests the details of a job for a third party action. Only used for partner actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      operationId: GetThirdPartyJobDetails
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetThirdPartyJobDetailsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetThirdPartyJobDetailsOutput'
        '480':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
        '483':
          description: InvalidJobException
          schema:
            $ref: '#/definitions/InvalidJobException'
  '/#ListActionTypes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets a summary of all AWS CodePipeline action types associated with your account.
      operationId: ListActionTypes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListActionTypesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActionTypesOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#ListPipelineExecutions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets a summary of the most recent executions for a pipeline.
      operationId: ListPipelineExecutions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPipelineExecutionsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPipelineExecutionsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#ListPipelines':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets a summary of all of the pipelines associated with your account.
      operationId: ListPipelines
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPipelinesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPipelinesOutput'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  '/#PollForJobs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns information about any jobs for AWS CodePipeline to act upon.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      operationId: PollForJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PollForJobsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PollForJobsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ActionTypeNotFoundException
          schema:
            $ref: '#/definitions/ActionTypeNotFoundException'
  '/#PollForThirdPartyJobs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Determines whether there are any third party jobs for a job worker to act on. Only used for partner actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts.</p> </important>'
      operationId: PollForThirdPartyJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PollForThirdPartyJobsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PollForThirdPartyJobsOutput'
        '480':
          description: ActionTypeNotFoundException
          schema:
            $ref: '#/definitions/ActionTypeNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#PutActionRevision':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides information to AWS CodePipeline about new revisions to a source.
      operationId: PutActionRevision
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutActionRevisionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutActionRevisionOutput'
        '480':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '481':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '482':
          description: ActionNotFoundException
          schema:
            $ref: '#/definitions/ActionNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#PutApprovalResult':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.
      operationId: PutApprovalResult
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutApprovalResultInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutApprovalResultOutput'
        '480':
          description: InvalidApprovalTokenException
          schema:
            $ref: '#/definitions/InvalidApprovalTokenException'
        '481':
          description: ApprovalAlreadyCompletedException
          schema:
            $ref: '#/definitions/ApprovalAlreadyCompletedException'
        '482':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '483':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '484':
          description: ActionNotFoundException
          schema:
            $ref: '#/definitions/ActionNotFoundException'
        '485':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
  '/#PutJobFailureResult':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Represents the failure of a job as returned to the pipeline by a job worker. Only used for custom actions.
      operationId: PutJobFailureResult
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutJobFailureResultInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
  '/#PutJobSuccessResult':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Represents the success of a job as returned to the pipeline by a job worker. Only used for custom actions.
      operationId: PutJobSuccessResult
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutJobSuccessResultInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
  '/#PutThirdPartyJobFailureResult':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Represents the failure of a third party job as returned to the pipeline by a job worker. Only used for partner actions.
      operationId: PutThirdPartyJobFailureResult
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutThirdPartyJobFailureResultInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
  '/#PutThirdPartyJobSuccessResult':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Represents the success of a third party job as returned to the pipeline by a job worker. Only used for partner actions.
      operationId: PutThirdPartyJobSuccessResult
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutThirdPartyJobSuccessResultInput'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
  '/#RetryStageExecution':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Resumes the pipeline execution by retrying the last failed actions in a stage.
      operationId: RetryStageExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RetryStageExecutionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RetryStageExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '483':
          description: StageNotRetryableException
          schema:
            $ref: '#/definitions/StageNotRetryableException'
        '484':
          description: NotLatestPipelineExecutionException
          schema:
            $ref: '#/definitions/NotLatestPipelineExecutionException'
  '/#StartPipelineExecution':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.'
      operationId: StartPipelineExecution
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartPipelineExecutionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartPipelineExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
  '/#UpdatePipeline':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure in conjunction with UpdatePipeline to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.
      operationId: UpdatePipeline
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePipelineInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidStageDeclarationException
          schema:
            $ref: '#/definitions/InvalidStageDeclarationException'
        '482':
          description: InvalidActionDeclarationException
          schema:
            $ref: '#/definitions/InvalidActionDeclarationException'
        '483':
          description: InvalidBlockerDeclarationException
          schema:
            $ref: '#/definitions/InvalidBlockerDeclarationException'
        '484':
          description: InvalidStructureException
          schema:
            $ref: '#/definitions/InvalidStructureException'
definitions:
  AWSSessionCredentials:
    description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
    properties:
      accessKeyId:
        $ref: '#/definitions/AccessKeyId'
        description: The access key for the session.
      secretAccessKey:
        $ref: '#/definitions/SecretAccessKey'
        description: The secret access key for the session.
      sessionToken:
        $ref: '#/definitions/SessionToken'
        description: The token for the session.
    required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
    type: object
  AccessKeyId:
    type: string
  AccountId:
    pattern: '[0-9]{12}'
    type: string
  AcknowledgeJobInput:
    description: Represents the input of an AcknowledgeJob action.
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job for which you want to confirm receipt.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response of the <a>PollForJobs</a> request that returned this job.
    required:
      - jobId
      - nonce
    type: object
  AcknowledgeJobOutput:
    description: Represents the output of an AcknowledgeJob action.
    properties:
      status:
        $ref: '#/definitions/JobStatus'
        description: Whether the job worker has received the specified job.
    type: object
  AcknowledgeThirdPartyJobInput:
    description: Represents the input of an AcknowledgeThirdPartyJob action.
    properties:
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The unique system-generated ID of the job.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response to a <a>GetThirdPartyJobDetails</a> request.
    required:
      - jobId
      - nonce
      - clientToken
    type: object
  AcknowledgeThirdPartyJobOutput:
    description: Represents the output of an AcknowledgeThirdPartyJob action.
    properties:
      status:
        $ref: '#/definitions/JobStatus'
        description: 'The status information for the third party job, if any.'
    type: object
  ActionCategory:
    enum:
      - Source
      - Build
      - Deploy
      - Test
      - Invoke
      - Approval
    type: string
  ActionConfiguration:
    description: Represents information about an action configuration.
    properties:
      configuration:
        $ref: '#/definitions/ActionConfigurationMap'
        description: The configuration data for the action.
    type: object
  ActionConfigurationKey:
    maxLength: 50
    minLength: 1
    type: string
  ActionConfigurationMap:
    items:
      properties:
        key:
          $ref: '#/definitions/ActionConfigurationKey'
        value:
          $ref: '#/definitions/ActionConfigurationValue'
      type: object
    type: array
  ActionConfigurationProperty:
    description: Represents information about an action configuration property.
    properties:
      description:
        $ref: '#/definitions/Description'
        description: The description of the action configuration property that will be displayed to users.
      key:
        $ref: '#/definitions/Boolean'
        description: Whether the configuration property is a key.
      name:
        $ref: '#/definitions/ActionConfigurationKey'
        description: The name of the action configuration property.
      queryable:
        $ref: '#/definitions/Boolean'
        description: '<p>Indicates that the property will be used in conjunction with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.</p> <p>If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to additional restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.</p>'
      required:
        $ref: '#/definitions/Boolean'
        description: Whether the configuration property is a required value.
      secret:
        $ref: '#/definitions/Boolean'
        description: '<p>Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.</p> <p>When updating a pipeline, passing * * * * * without changing any other values of the action will preserve the prior value of the secret.</p>'
      type:
        $ref: '#/definitions/ActionConfigurationPropertyType'
        description: The type of the configuration property.
    required:
      - name
      - required
      - key
      - secret
    type: object
  ActionConfigurationPropertyList:
    items:
      $ref: '#/definitions/ActionConfigurationProperty'
    maxItems: 10
    type: array
  ActionConfigurationPropertyType:
    enum:
      - String
      - Number
      - Boolean
    type: string
  ActionConfigurationQueryableValue:
    maxLength: 50
    minLength: 1
    pattern: '[a-zA-Z0-9_-]+'
    type: string
  ActionConfigurationValue:
    maxLength: 1000
    minLength: 1
    type: string
  ActionContext:
    description: Represents the context of an action within the stage of a pipeline to a job worker.
    properties:
      name:
        $ref: '#/definitions/ActionName'
        description: The name of the action within the context of a job.
    type: object
  ActionDeclaration:
    description: Represents information about an action declaration.
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: The configuration information for the action type.
      configuration:
        $ref: '#/definitions/ActionConfigurationMap'
        description: The action declaration's configuration.
      inputArtifacts:
        $ref: '#/definitions/InputArtifactList'
        description: 'The name or ID of the artifact consumed by the action, such as a test or build artifact.'
      name:
        $ref: '#/definitions/ActionName'
        description: The action declaration's name.
      outputArtifacts:
        $ref: '#/definitions/OutputArtifactList'
        description: 'The name or ID of the result of the action declaration, such as a test or build artifact.'
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
      runOrder:
        $ref: '#/definitions/ActionRunOrder'
        description: The order in which actions are run.
    required:
      - name
      - actionTypeId
    type: object
  ActionExecution:
    description: Represents information about the run of an action.
    properties:
      errorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: The details of an error returned by a URL external to AWS.
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: The external ID of the run of the action.
      externalExecutionUrl:
        $ref: '#/definitions/Url'
        description: 'The URL of a resource external to AWS that will be used when running the action, for example an external repository URL.'
      lastStatusChange:
        $ref: '#/definitions/Timestamp'
        description: The last status change of the action.
      lastUpdatedBy:
        $ref: '#/definitions/LastUpdatedBy'
        description: The ARN of the user who last changed the pipeline.
      percentComplete:
        $ref: '#/definitions/Percentage'
        description: A percentage of completeness of the action as it runs.
      status:
        $ref: '#/definitions/ActionExecutionStatus'
        description: 'The status of the action, or for a completed action, the last status of the action.'
      summary:
        $ref: '#/definitions/ExecutionSummary'
        description: A summary of the run of the action.
      token:
        $ref: '#/definitions/ActionExecutionToken'
        description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the GetPipelineState command and is used to validate that the approval request corresponding to this token is still valid.
    type: object
  ActionExecutionStatus:
    enum:
      - InProgress
      - Succeeded
      - Failed
    type: string
  ActionExecutionToken:
    type: string
  ActionName:
    maxLength: 100
    minLength: 1
    pattern: '[A-Za-z0-9.@\-_]+'
    type: string
  ActionNotFoundException:
    description: The specified action cannot be found.
    properties: {}
    type: object
  ActionOwner:
    enum:
      - AWS
      - ThirdParty
      - Custom
    type: string
  ActionProvider:
    maxLength: 25
    minLength: 1
    pattern: '[0-9A-Za-z_-]+'
    type: string
  ActionRevision:
    description: Represents information about the version (or revision) of an action.
    properties:
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the most recent version of the action was created, in timestamp format.'
      revisionChangeId:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: 'The unique identifier of the change that set the state to this revision, for example a deployment ID or timestamp.'
      revisionId:
        $ref: '#/definitions/Revision'
        description: The system-generated unique ID that identifies the revision number of the action.
    required:
      - revisionId
      - revisionChangeId
      - created
    type: object
  ActionRunOrder:
    maximum: 999
    minimum: 1
    type: integer
  ActionState:
    description: Represents information about the state of an action.
    properties:
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action.
      currentRevision:
        $ref: '#/definitions/ActionRevision'
        description: Represents information about the version (or revision) of an action.
      entityUrl:
        $ref: '#/definitions/Url'
        description: 'A URL link for more information about the state of the action, such as a deployment group details page.'
      latestExecution:
        $ref: '#/definitions/ActionExecution'
        description: Represents information about the run of an action.
      revisionUrl:
        $ref: '#/definitions/Url'
        description: 'A URL link for more information about the revision, such as a commit details page.'
    type: object
  ActionStateList:
    items:
      $ref: '#/definitions/ActionState'
    type: array
  ActionType:
    description: Returns information about the details of an action type.
    properties:
      actionConfigurationProperties:
        $ref: '#/definitions/ActionConfigurationPropertyList'
        description: The configuration properties for the action type.
      id:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      inputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the input artifact for the action, such as its commit ID.'
      outputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the output artifact of the action, such as its commit ID.'
      settings:
        $ref: '#/definitions/ActionTypeSettings'
        description: The settings for the action type.
    required:
      - id
      - inputArtifactDetails
      - outputArtifactDetails
    type: object
  ActionTypeId:
    description: Represents information about an action type.
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: 'A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below.'
      owner:
        $ref: '#/definitions/ActionOwner'
        description: The creator of the action being called.
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy.'
      version:
        $ref: '#/definitions/Version'
        description: A string that identifies the action type.
    required:
      - category
      - owner
      - provider
      - version
    type: object
  ActionTypeList:
    items:
      $ref: '#/definitions/ActionType'
    type: array
  ActionTypeNotFoundException:
    description: The specified action type cannot be found.
    properties: {}
    type: object
  ActionTypeSettings:
    description: Returns information about the settings for an action type.
    properties:
      entityUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: 'The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display within the pipeline.'
      executionUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: 'The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.'
      revisionUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
      thirdPartyConfigurationUrl:
        $ref: '#/definitions/Url'
        description: The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
    type: object
  ApprovalAlreadyCompletedException:
    description: The approval action has already been approved or rejected.
    properties: {}
    type: object
  ApprovalResult:
    description: Represents information about the result of an approval request.
    properties:
      status:
        $ref: '#/definitions/ApprovalStatus'
        description: The response submitted by a reviewer assigned to an approval action request.
      summary:
        $ref: '#/definitions/ApprovalSummary'
        description: The summary of the current status of the approval request.
    required:
      - summary
      - status
    type: object
  ApprovalStatus:
    enum:
      - Approved
      - Rejected
    type: string
  ApprovalSummary:
    maxLength: 512
    minLength: 0
    type: string
  ApprovalToken:
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    type: string
  Artifact:
    description: Represents information about an artifact that will be worked upon by actions in the pipeline.
    properties:
      location:
        $ref: '#/definitions/ArtifactLocation'
        description: The location of an artifact.
      name:
        $ref: '#/definitions/ArtifactName'
        description: The artifact's name.
      revision:
        $ref: '#/definitions/Revision'
        description: 'The artifact''s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).'
    type: object
  ArtifactDetails:
    description: Returns information about the details of an artifact.
    properties:
      maximumCount:
        $ref: '#/definitions/MaximumArtifactCount'
        description: The maximum number of artifacts allowed for the action type.
      minimumCount:
        $ref: '#/definitions/MinimumArtifactCount'
        description: The minimum number of artifacts allowed for the action type.
    required:
      - minimumCount
      - maximumCount
    type: object
  ArtifactList:
    items:
      $ref: '#/definitions/Artifact'
    type: array
  ArtifactLocation:
    description: Represents information about the location of an artifact.
    properties:
      s3Location:
        $ref: '#/definitions/S3ArtifactLocation'
        description: The Amazon S3 bucket that contains the artifact.
      type:
        $ref: '#/definitions/ArtifactLocationType'
        description: The type of artifact in the location.
    type: object
  ArtifactLocationType:
    enum:
      - S3
    type: string
  ArtifactName:
    maxLength: 100
    minLength: 1
    pattern: '[a-zA-Z0-9_\-]+'
    type: string
  ArtifactRevision:
    description: 'Represents revision details of an artifact. '
    properties:
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
      name:
        $ref: '#/definitions/ArtifactName'
        description: 'The name of an artifact. This name might be system-generated, such as "MyApp", or might be defined by the user when an action is created.'
      revisionChangeIdentifier:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: 'An additional identifier for a revision, such as a commit date or, for artifacts stored in Amazon S3 buckets, the ETag value.'
      revisionId:
        $ref: '#/definitions/Revision'
        description: The revision ID of the artifact.
      revisionSummary:
        $ref: '#/definitions/RevisionSummary'
        description: 'Summary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code> key specified in the object metadata.'
      revisionUrl:
        $ref: '#/definitions/Url'
        description: 'The commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page.'
    type: object
  ArtifactRevisionList:
    items:
      $ref: '#/definitions/ArtifactRevision'
    type: array
  ArtifactStore:
    description: The Amazon S3 bucket where artifacts are stored for the pipeline.
    properties:
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'The encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.'
      location:
        $ref: '#/definitions/ArtifactStoreLocation'
        description: The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder within the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.
      type:
        $ref: '#/definitions/ArtifactStoreType'
        description: 'The type of the artifact store, such as S3.'
    required:
      - type
      - location
    type: object
  ArtifactStoreLocation:
    maxLength: 63
    minLength: 3
    pattern: '[a-zA-Z0-9\-\.]+'
    type: string
  ArtifactStoreType:
    enum:
      - S3
    type: string
  BlockerDeclaration:
    description: Reserved for future use.
    properties:
      name:
        $ref: '#/definitions/BlockerName'
        description: Reserved for future use.
      type:
        $ref: '#/definitions/BlockerType'
        description: Reserved for future use.
    required:
      - name
      - type
    type: object
  BlockerName:
    maxLength: 100
    minLength: 1
    type: string
  BlockerType:
    enum:
      - Schedule
    type: string
  Boolean:
    type: boolean
  ClientId:
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    type: string
  ClientToken:
    maxLength: 256
    minLength: 1
    type: string
  Code:
    type: string
  ContinuationToken:
    type: string
  CreateCustomActionTypeInput:
    description: Represents the input of a CreateCustomActionType operation.
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: '<p>The category of the custom action, such as a build action or a test action.</p> <note> <p>Although Source and Approval are listed as valid values, they are not currently functional. These values are reserved for future use.</p> </note>'
      configurationProperties:
        $ref: '#/definitions/ActionConfigurationPropertyList'
        description: '<p>The configuration properties for the custom action.</p> <note> <p>You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html">Create a Custom Action for a Pipeline</a>.</p> </note>'
      inputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the input artifact for the action, such as its commit ID.'
      outputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the output artifact of the action, such as its commit ID.'
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
      settings:
        $ref: '#/definitions/ActionTypeSettings'
        description: Returns information about the settings for an action type.
      version:
        $ref: '#/definitions/Version'
        description: The version identifier of the custom action.
    required:
      - category
      - provider
      - version
      - inputArtifactDetails
      - outputArtifactDetails
    type: object
  CreateCustomActionTypeOutput:
    description: Represents the output of a CreateCustomActionType operation.
    properties:
      actionType:
        $ref: '#/definitions/ActionType'
        description: Returns information about the details of an action type.
    required:
      - actionType
    type: object
  CreatePipelineInput:
    description: Represents the input of a CreatePipeline action.
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
    required:
      - pipeline
    type: object
  CreatePipelineOutput:
    description: Represents the output of a CreatePipeline action.
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
    type: object
  CurrentRevision:
    description: Represents information about a current revision.
    properties:
      changeIdentifier:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: The change identifier for the current revision.
      created:
        $ref: '#/definitions/Time'
        description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
      revision:
        $ref: '#/definitions/Revision'
        description: The revision ID of the current version of an artifact.
      revisionSummary:
        $ref: '#/definitions/RevisionSummary'
        description: The summary of the most recent revision of the artifact.
    required:
      - revision
      - changeIdentifier
    type: object
  DeleteCustomActionTypeInput:
    description: Represents the input of a DeleteCustomActionType operation. The custom action will be marked as deleted.
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: 'The category of the custom action that you want to delete, such as source or deploy.'
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
      version:
        $ref: '#/definitions/Version'
        description: The version of the custom action to delete.
    required:
      - category
      - provider
      - version
    type: object
  DeletePipelineInput:
    description: Represents the input of a DeletePipeline action.
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline to be deleted.
    required:
      - name
    type: object
  Description:
    maxLength: 2048
    minLength: 1
    type: string
  DisableStageTransitionInput:
    description: Represents the input of a DisableStageTransition action.
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.
      reason:
        $ref: '#/definitions/DisabledReason'
        description: 'The reason given to the user why a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.'
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage where you want to disable the inbound or outbound transition of artifacts.
      transitionType:
        $ref: '#/definitions/StageTransitionType'
        description: 'Specifies whether artifacts will be prevented from transitioning into the stage and being processed by the actions in that stage (inbound), or prevented from transitioning from the stage after they have been processed by the actions in that stage (outbound).'
    required:
      - pipelineName
      - stageName
      - transitionType
      - reason
    type: object
  DisabledReason:
    maxLength: 300
    minLength: 1
    pattern: '[a-zA-Z0-9!@ \(\)\.\*\?\-]+'
    type: string
  EnableStageTransitionInput:
    description: Represents the input of an EnableStageTransition action.
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline in which you want to enable the flow of artifacts from one stage to another.
      stageName:
        $ref: '#/definitions/StageName'
        description: 'The name of the stage where you want to enable the transition of artifacts, either into the stage (inbound) or from that stage to the next stage (outbound).'
      transitionType:
        $ref: '#/definitions/StageTransitionType'
        description: Specifies whether artifacts will be allowed to enter the stage and be processed by the actions in that stage (inbound) or whether already-processed artifacts will be allowed to transition to the next stage (outbound).
    required:
      - pipelineName
      - stageName
      - transitionType
    type: object
  Enabled:
    type: boolean
  EncryptionKey:
    description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.'
    properties:
      id:
        $ref: '#/definitions/EncryptionKeyId'
        description: 'The ID used to identify the key. For an AWS KMS key, this is the key ID or key ARN.'
      type:
        $ref: '#/definitions/EncryptionKeyType'
        description: 'The type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ''KMS''.'
    required:
      - id
      - type
    type: object
  EncryptionKeyId:
    maxLength: 100
    minLength: 1
    type: string
  EncryptionKeyType:
    enum:
      - KMS
    type: string
  ErrorDetails:
    description: Represents information about an error in AWS CodePipeline.
    properties:
      code:
        $ref: '#/definitions/Code'
        description: The system ID or error number code of the error.
      message:
        $ref: '#/definitions/Message'
        description: The text of the error message.
    type: object
  ExecutionDetails:
    description: The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
    properties:
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: 'The system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.'
      percentComplete:
        $ref: '#/definitions/Percentage'
        description: 'The percentage of work completed on the action, represented on a scale of zero to one hundred percent.'
      summary:
        $ref: '#/definitions/ExecutionSummary'
        description: The summary of the current status of the actions.
    type: object
  ExecutionId:
    maxLength: 1500
    minLength: 1
    type: string
  ExecutionSummary:
    type: string
  FailureDetails:
    description: Represents information about failure details.
    properties:
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: The external ID of the run of the action that failed.
      message:
        $ref: '#/definitions/Message'
        description: The message about the failure.
      type:
        $ref: '#/definitions/FailureType'
        description: The type of the failure.
    required:
      - type
      - message
    type: object
  FailureType:
    enum:
      - JobFailed
      - ConfigurationError
      - PermissionError
      - RevisionOutOfSync
      - RevisionUnavailable
      - SystemUnavailable
    type: string
  GetJobDetailsInput:
    description: Represents the input of a GetJobDetails action.
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID for the job.
    required:
      - jobId
    type: object
  GetJobDetailsOutput:
    description: Represents the output of a GetJobDetails action.
    properties:
      jobDetails:
        $ref: '#/definitions/JobDetails'
        description: '<p>The details of the job.</p> <note> <p>If AWSSessionCredentials is used, a long-running job can call GetJobDetails again to obtain new credentials.</p> </note>'
    type: object
  GetPipelineExecutionInput:
    description: Represents the input of a GetPipelineExecution action.
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution about which you want to get execution details.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline about which you want to get execution details.
    required:
      - pipelineName
      - pipelineExecutionId
    type: object
  GetPipelineExecutionOutput:
    description: Represents the output of a GetPipelineExecution action.
    properties:
      pipelineExecution:
        $ref: '#/definitions/PipelineExecution'
        description: Represents information about the execution of a pipeline.
    type: object
  GetPipelineInput:
    description: Represents the input of a GetPipeline action.
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get information. Pipeline names must be unique under an Amazon Web Services (AWS) user account.
      version:
        $ref: '#/definitions/PipelineVersion'
        description: 'The version number of the pipeline. If you do not specify a version, defaults to the most current version.'
    required:
      - name
    type: object
  GetPipelineOutput:
    description: Represents the output of a GetPipeline action.
    properties:
      metadata:
        $ref: '#/definitions/PipelineMetadata'
        description: Represents the pipeline metadata information returned as part of the output of a GetPipeline action.
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
    type: object
  GetPipelineStateInput:
    description: Represents the input of a GetPipelineState action.
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline about which you want to get information.
    required:
      - name
    type: object
  GetPipelineStateOutput:
    description: Represents the output of a GetPipelineState action.
    properties:
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get the state.
      pipelineVersion:
        $ref: '#/definitions/PipelineVersion'
        description: <p>The version number of the pipeline.</p> <note> <p>A newly-created pipeline is always assigned a version number of <code>1</code>.</p> </note>
      stageStates:
        $ref: '#/definitions/StageStateList'
        description: 'A list of the pipeline stage output information, including stage name, state, most recent run details, whether the stage is disabled, and other data.'
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was last updated, in timestamp format.'
    type: object
  GetThirdPartyJobDetailsInput:
    description: Represents the input of a GetThirdPartyJobDetails action.
    properties:
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The unique system-generated ID used for identifying the job.
    required:
      - jobId
      - clientToken
    type: object
  GetThirdPartyJobDetailsOutput:
    description: Represents the output of a GetThirdPartyJobDetails action.
    properties:
      jobDetails:
        $ref: '#/definitions/ThirdPartyJobDetails'
        description: 'The details of the job, including any protected values defined for the job.'
    type: object
  InputArtifact:
    description: 'Represents information about an artifact to be worked on, such as a test or build artifact.'
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: '<p>The name of the artifact to be worked on, for example, "My App".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p>'
    required:
      - name
    type: object
  InputArtifactList:
    items:
      $ref: '#/definitions/InputArtifact'
    type: array
  InvalidActionDeclarationException:
    description: The specified action declaration was specified in an invalid format.
    properties: {}
    type: object
  InvalidApprovalTokenException:
    description: The approval request already received a response or has expired.
    properties: {}
    type: object
  InvalidBlockerDeclarationException:
    description: Reserved for future use.
    properties: {}
    type: object
  InvalidClientTokenException:
    description: The client token was specified in an invalid format
    properties: {}
    type: object
  InvalidJobException:
    description: The specified job was specified in an invalid format or cannot be found.
    properties: {}
    type: object
  InvalidJobStateException:
    description: The specified job state was specified in an invalid format.
    properties: {}
    type: object
  InvalidNextTokenException:
    description: The next token was specified in an invalid format. Make sure that the next token you provided is the token returned by a previous call.
    properties: {}
    type: object
  InvalidNonceException:
    description: The specified nonce was specified in an invalid format.
    properties: {}
    type: object
  InvalidStageDeclarationException:
    description: The specified stage declaration was specified in an invalid format.
    properties: {}
    type: object
  InvalidStructureException:
    description: The specified structure was specified in an invalid format.
    properties: {}
    type: object
  Job:
    description: Represents information about a job.
    properties:
      accountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the AWS account to use when performing the job.
      data:
        $ref: '#/definitions/JobData'
        description: Additional data about a job.
      id:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeJob</a> request.
    type: object
  JobData:
    description: Represents additional information about a job required for a job worker to complete the job.
    properties:
      actionConfiguration:
        $ref: '#/definitions/ActionConfiguration'
        description: Represents information about an action configuration.
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      artifactCredentials:
        $ref: '#/definitions/AWSSessionCredentials'
        description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.'
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. '
      inputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: The artifact supplied to the job.
      outputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: The output of the job.
      pipelineContext:
        $ref: '#/definitions/PipelineContext'
        description: Represents information about a pipeline to a job worker.
    type: object
  JobDetails:
    description: Represents information about the details of a job.
    properties:
      accountId:
        $ref: '#/definitions/AccountId'
        description: The AWS account ID associated with the job.
      data:
        $ref: '#/definitions/JobData'
        description: 'Represents additional information about a job required for a job worker to complete the job. '
      id:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job.
    type: object
  JobId:
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    type: string
  JobList:
    items:
      $ref: '#/definitions/Job'
    type: array
  JobNotFoundException:
    description: The specified job was specified in an invalid format or cannot be found.
    properties: {}
    type: object
  JobStatus:
    enum:
      - Created
      - Queued
      - Dispatched
      - InProgress
      - TimedOut
      - Succeeded
      - Failed
    type: string
  LastChangedAt:
    format: date-time
    type: string
  LastChangedBy:
    type: string
  LastUpdatedBy:
    type: string
  LimitExceededException:
    description: The number of pipelines associated with the AWS account has exceeded the limit allowed for the account.
    properties: {}
    type: object
  ListActionTypesInput:
    description: Represents the input of a ListActionTypes action.
    properties:
      actionOwnerFilter:
        $ref: '#/definitions/ActionOwner'
        description: Filters the list of action types to those created by a specified entity.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.'
    type: object
  ListActionTypesOutput:
    description: Represents the output of a ListActionTypes action.
    properties:
      actionTypes:
        $ref: '#/definitions/ActionTypeList'
        description: Provides details of the action types.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list action types call to return the next set of action types in the list.'
    required:
      - actionTypes
    type: object
  ListPipelineExecutionsInput:
    description: Represents the input of a ListPipelineExecutions action.
    properties:
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. The available pipeline execution history is limited to the most recent 12 months, based on pipeline execution start times. Default value is 100.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token that was returned from the previous ListPipelineExecutions call, which can be used to return the next set of pipeline executions in the list.'
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get execution summary information.
    required:
      - pipelineName
    type: object
  ListPipelineExecutionsOutput:
    description: Represents the output of a ListPipelineExecutions action.
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used in the next ListPipelineExecutions call. To view all items in the list, continue to call this operation with each subsequent token until no more nextToken values are returned.'
      pipelineExecutionSummaries:
        $ref: '#/definitions/PipelineExecutionSummaryList'
        description: A list of executions in the history of a pipeline.
    type: object
  ListPipelinesInput:
    description: Represents the input of a ListPipelines action.
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'An identifier that was returned from the previous list pipelines call, which can be used to return the next set of pipelines in the list.'
    type: object
  ListPipelinesOutput:
    description: Represents the output of a ListPipelines action.
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list pipelines call to return the next set of pipelines in the list.'
      pipelines:
        $ref: '#/definitions/PipelineList'
        description: The list of pipelines.
    type: object
  MaxBatchSize:
    minimum: 1
    type: integer
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  MaximumArtifactCount:
    maximum: 5
    minimum: 0
    type: integer
  Message:
    type: string
  MinimumArtifactCount:
    maximum: 5
    minimum: 0
    type: integer
  NextToken:
    maxLength: 2048
    minLength: 1
    type: string
  Nonce:
    type: string
  NotLatestPipelineExecutionException:
    description: The stage has failed in a later run of the pipeline and the pipelineExecutionId associated with the request is out of date.
    properties: {}
    type: object
  OutputArtifact:
    description: Represents information about the output of an action.
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: '<p>The name of the output of an artifact, such as "My App".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p> <p>Output artifact names must be unique within a pipeline.</p>'
    required:
      - name
    type: object
  OutputArtifactList:
    items:
      $ref: '#/definitions/OutputArtifact'
    type: array
  Percentage:
    maximum: 100
    minimum: 0
    type: integer
  PipelineArn:
    pattern: 'arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+'
    type: string
  PipelineContext:
    description: Represents information about a pipeline to a job worker.
    properties:
      action:
        $ref: '#/definitions/ActionContext'
        description: The context of an action to a job worker within the stage of a pipeline.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.
      stage:
        $ref: '#/definitions/StageContext'
        description: The stage of the pipeline.
    type: object
  PipelineDeclaration:
    description: Represents the structure of actions and stages to be performed in the pipeline.
    properties:
      artifactStore:
        $ref: '#/definitions/ArtifactStore'
        description: 'Represents information about the Amazon S3 bucket where artifacts are stored for the pipeline. '
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the action to be performed.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn.'
      stages:
        $ref: '#/definitions/PipelineStageDeclarationList'
        description: The stage in which to perform the action.
      version:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline. A new pipeline always has a version number of 1. This number is automatically incremented when a pipeline is updated.
    required:
      - name
      - roleArn
      - artifactStore
      - stages
    type: object
  PipelineExecution:
    description: Represents information about an execution of a pipeline.
    properties:
      artifactRevisions:
        $ref: '#/definitions/ArtifactRevisionList'
        description: A list of ArtifactRevision objects included in a pipeline execution.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that was executed.
      pipelineVersion:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline that was executed.
      status:
        $ref: '#/definitions/PipelineExecutionStatus'
        description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. </p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
    type: object
  PipelineExecutionId:
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    type: string
  PipelineExecutionNotFoundException:
    description: 'The pipeline execution was specified in an invalid format or cannot be found, or an execution ID does not belong to the specified pipeline. '
    properties: {}
    type: object
  PipelineExecutionStatus:
    enum:
      - InProgress
      - Succeeded
      - Superseded
      - Failed
    type: string
  PipelineExecutionSummary:
    description: Summary information about a pipeline execution.
    properties:
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time of the last change to the pipeline execution, in timestamp format.'
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the pipeline execution began, in timestamp format.'
      status:
        $ref: '#/definitions/PipelineExecutionStatus'
        description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. </p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
    type: object
  PipelineExecutionSummaryList:
    items:
      $ref: '#/definitions/PipelineExecutionSummary'
    type: array
  PipelineList:
    items:
      $ref: '#/definitions/PipelineSummary'
    type: array
  PipelineMetadata:
    description: Information about a pipeline.
    properties:
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      pipelineArn:
        $ref: '#/definitions/PipelineArn'
        description: The Amazon Resource Name (ARN) of the pipeline.
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was last updated, in timestamp format.'
    type: object
  PipelineName:
    maxLength: 100
    minLength: 1
    pattern: '[A-Za-z0-9.@\-_]+'
    type: string
  PipelineNameInUseException:
    description: The specified pipeline name is already in use.
    properties: {}
    type: object
  PipelineNotFoundException:
    description: The specified pipeline was specified in an invalid format or cannot be found.
    properties: {}
    type: object
  PipelineStageDeclarationList:
    items:
      $ref: '#/definitions/StageDeclaration'
    type: array
  PipelineSummary:
    description: Returns a summary of a pipeline.
    properties:
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time of the last update to the pipeline, in timestamp format.'
      version:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline.
    type: object
  PipelineVersion:
    minimum: 1
    type: integer
  PipelineVersionNotFoundException:
    description: The specified pipeline version was specified in an invalid format or cannot be found.
    properties: {}
    type: object
  PollForJobsInput:
    description: Represents the input of a PollForJobs action.
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      maxBatchSize:
        $ref: '#/definitions/MaxBatchSize'
        description: The maximum number of jobs to return in a poll for jobs call.
      queryParam:
        $ref: '#/definitions/QueryParamMap'
        description: 'A map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value will be returned.'
    required:
      - actionTypeId
    type: object
  PollForJobsOutput:
    description: Represents the output of a PollForJobs action.
    properties:
      jobs:
        $ref: '#/definitions/JobList'
        description: Information about the jobs to take action on.
    type: object
  PollForThirdPartyJobsInput:
    description: Represents the input of a PollForThirdPartyJobs action.
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      maxBatchSize:
        $ref: '#/definitions/MaxBatchSize'
        description: The maximum number of jobs to return in a poll for jobs call.
    required:
      - actionTypeId
    type: object
  PollForThirdPartyJobsOutput:
    description: Represents the output of a PollForThirdPartyJobs action.
    properties:
      jobs:
        $ref: '#/definitions/ThirdPartyJobList'
        description: Information about the jobs to take action on.
    type: object
  PutActionRevisionInput:
    description: Represents the input of a PutActionRevision action.
    properties:
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action that will process the revision.
      actionRevision:
        $ref: '#/definitions/ActionRevision'
        description: Represents information about the version (or revision) of an action.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that will start processing the revision to the source.
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage that contains the action that will act upon the revision.
    required:
      - pipelineName
      - stageName
      - actionName
      - actionRevision
    type: object
  PutActionRevisionOutput:
    description: Represents the output of a PutActionRevision action.
    properties:
      newRevision:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the artifact revision was previously used in an execution of the specified pipeline.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the current workflow state of the pipeline.
    type: object
  PutApprovalResultInput:
    description: Represents the input of a PutApprovalResult action.
    properties:
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action for which approval is requested.
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: 'The name of the pipeline that contains the action. '
      result:
        $ref: '#/definitions/ApprovalResult'
        description: Represents information about the result of the approval request.
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage that contains the action.
      token:
        $ref: '#/definitions/ApprovalToken'
        description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the <a>GetPipelineState</a> action and is used to validate that the approval request corresponding to this token is still valid.
    required:
      - pipelineName
      - stageName
      - actionName
      - result
      - token
    type: object
  PutApprovalResultOutput:
    description: Represents the output of a PutApprovalResult action.
    properties:
      approvedAt:
        $ref: '#/definitions/Timestamp'
        description: The timestamp showing when the approval or rejection was submitted.
    type: object
  PutJobFailureResultInput:
    description: Represents the input of a PutJobFailureResult action.
    properties:
      failureDetails:
        $ref: '#/definitions/FailureDetails'
        description: The details about the failure of a job.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job that failed. This is the same ID returned from PollForJobs.
    required:
      - jobId
      - failureDetails
    type: object
  PutJobSuccessResultInput:
    description: Represents the input of a PutJobSuccessResult action.
    properties:
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs will use this token in order to identify the running instance of the action. It can be reused to return additional information about the progress of the custom action. When the action is complete, no continuation token should be supplied.'
      currentRevision:
        $ref: '#/definitions/CurrentRevision'
        description: The ID of the current revision of the artifact successfully worked upon by the job.
      executionDetails:
        $ref: '#/definitions/ExecutionDetails'
        description: 'The execution details of the successful job, such as the actions taken by the job worker.'
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job that succeeded. This is the same ID returned from PollForJobs.
    required:
      - jobId
    type: object
  PutThirdPartyJobFailureResultInput:
    description: Represents the input of a PutThirdPartyJobFailureResult action.
    properties:
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      failureDetails:
        $ref: '#/definitions/FailureDetails'
        description: Represents information about failure details.
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The ID of the job that failed. This is the same ID returned from PollForThirdPartyJobs.
    required:
      - jobId
      - clientToken
      - failureDetails
    type: object
  PutThirdPartyJobSuccessResultInput:
    description: Represents the input of a PutThirdPartyJobSuccessResult action.
    properties:
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a partner action in progress. Future jobs will use this token in order to identify the running instance of the action. It can be reused to return additional information about the progress of the partner action. When the action is complete, no continuation token should be supplied.'
      currentRevision:
        $ref: '#/definitions/CurrentRevision'
        description: Represents information about a current revision.
      executionDetails:
        $ref: '#/definitions/ExecutionDetails'
        description: 'The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline. '
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The ID of the job that successfully completed. This is the same ID returned from PollForThirdPartyJobs.
    required:
      - jobId
      - clientToken
    type: object
  QueryParamMap:
    items:
      properties:
        key:
          $ref: '#/definitions/ActionConfigurationKey'
        value:
          $ref: '#/definitions/ActionConfigurationQueryableValue'
      type: object
    maxItems: 1
    minItems: 0
    type: array
  RetryStageExecutionInput:
    description: Represents the input of a RetryStageExecution action.
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution in the failed stage to be retried. Use the <a>GetPipelineState</a> action to retrieve the current pipelineExecutionId of the failed stage
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that contains the failed stage.
      retryMode:
        $ref: '#/definitions/StageRetryMode'
        description: 'The scope of the retry attempt. Currently, the only supported value is FAILED_ACTIONS.'
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the failed stage to be retried.
    required:
      - pipelineName
      - stageName
      - pipelineExecutionId
      - retryMode
    type: object
  RetryStageExecutionOutput:
    description: Represents the output of a RetryStageExecution action.
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the current workflow execution in the failed stage.
    type: object
  Revision:
    maxLength: 1500
    minLength: 1
    type: string
  RevisionChangeIdentifier:
    maxLength: 100
    minLength: 1
    type: string
  RevisionSummary:
    maxLength: 2048
    minLength: 1
    type: string
  RoleArn:
    maxLength: 1024
    pattern: 'arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*'
    type: string
  S3ArtifactLocation:
    description: The location of the Amazon S3 bucket that contains a revision.
    properties:
      bucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket.
      objectKey:
        $ref: '#/definitions/S3ObjectKey'
        description: 'The key of the object in the Amazon S3 bucket, which uniquely identifies the object in the bucket.'
    required:
      - bucketName
      - objectKey
    type: object
  S3BucketName:
    type: string
  S3ObjectKey:
    type: string
  SecretAccessKey:
    type: string
  SessionToken:
    type: string
  StageActionDeclarationList:
    items:
      $ref: '#/definitions/ActionDeclaration'
    type: array
  StageBlockerDeclarationList:
    items:
      $ref: '#/definitions/BlockerDeclaration'
    type: array
  StageContext:
    description: Represents information about a stage to a job worker.
    properties:
      name:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
    type: object
  StageDeclaration:
    description: Represents information about a stage and its definition.
    properties:
      actions:
        $ref: '#/definitions/StageActionDeclarationList'
        description: The actions included in a stage.
      blockers:
        $ref: '#/definitions/StageBlockerDeclarationList'
        description: Reserved for future use.
      name:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
    required:
      - name
      - actions
    type: object
  StageExecution:
    description: Represents information about the run of a stage.
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution associated with the stage.
      status:
        $ref: '#/definitions/StageExecutionStatus'
        description: 'The status of the stage, or for a completed stage, the last status of the stage.'
    required:
      - pipelineExecutionId
      - status
    type: object
  StageExecutionStatus:
    enum:
      - InProgress
      - Failed
      - Succeeded
    type: string
  StageName:
    maxLength: 100
    minLength: 1
    pattern: '[A-Za-z0-9.@\-_]+'
    type: string
  StageNotFoundException:
    description: The specified stage was specified in an invalid format or cannot be found.
    properties: {}
    type: object
  StageNotRetryableException:
    description: 'The specified stage can''t be retried because the pipeline structure or stage state changed after the stage was not completed; the stage contains no failed actions; one or more actions are still in progress; or another retry attempt is already in progress. '
    properties: {}
    type: object
  StageRetryMode:
    enum:
      - FAILED_ACTIONS
    type: string
  StageState:
    description: Represents information about the state of the stage.
    properties:
      actionStates:
        $ref: '#/definitions/ActionStateList'
        description: The state of the stage.
      inboundTransitionState:
        $ref: '#/definitions/TransitionState'
        description: 'The state of the inbound transition, which is either enabled or disabled.'
      latestExecution:
        $ref: '#/definitions/StageExecution'
        description: 'Information about the latest execution in the stage, including its ID and status.'
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
    type: object
  StageStateList:
    items:
      $ref: '#/definitions/StageState'
    type: array
  StageTransitionType:
    enum:
      - Inbound
      - Outbound
    type: string
  StartPipelineExecutionInput:
    description: Represents the input of a StartPipelineExecution action.
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline to start.
    required:
      - name
    type: object
  StartPipelineExecutionOutput:
    description: Represents the output of a StartPipelineExecution action.
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The unique system-generated ID of the pipeline execution that was started.
    type: object
  ThirdPartyJob:
    description: A response to a PollForThirdPartyJobs request returned by AWS CodePipeline when there is a job to be worked upon by a partner action.
    properties:
      clientId:
        $ref: '#/definitions/ClientId'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      jobId:
        $ref: '#/definitions/JobId'
        description: The identifier used to identify the job in AWS CodePipeline.
    type: object
  ThirdPartyJobData:
    description: Represents information about the job data for a partner action.
    properties:
      actionConfiguration:
        $ref: '#/definitions/ActionConfiguration'
        description: Represents information about an action configuration.
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      artifactCredentials:
        $ref: '#/definitions/AWSSessionCredentials'
        description: 'Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline. '
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.'
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'The encryption key used to encrypt and decrypt data in the artifact store for the pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and might not be present.'
      inputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: 'The name of the artifact that will be worked upon by the action, if any. This name might be system-generated, such as "MyApp", or might be defined by the user when the action is created. The input artifact name must match the name of an output artifact generated by an action in an earlier action or stage of the pipeline.'
      outputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: 'The name of the artifact that will be the result of the action, if any. This name might be system-generated, such as "MyBuiltApp", or might be defined by the user when the action is created.'
      pipelineContext:
        $ref: '#/definitions/PipelineContext'
        description: Represents information about a pipeline to a job worker.
    type: object
  ThirdPartyJobDetails:
    description: The details of a job sent in response to a GetThirdPartyJobDetails request.
    properties:
      data:
        $ref: '#/definitions/ThirdPartyJobData'
        description: The data to be returned by the third party job worker.
      id:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The identifier used to identify the job details in AWS CodePipeline.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeThirdPartyJob</a> request.
    type: object
  ThirdPartyJobId:
    maxLength: 512
    minLength: 1
    type: string
  ThirdPartyJobList:
    items:
      $ref: '#/definitions/ThirdPartyJob'
    type: array
  Time:
    format: date-time
    type: string
  Timestamp:
    format: date-time
    type: string
  TransitionState:
    description: Represents information about the state of transitions between one stage and another stage.
    properties:
      disabledReason:
        $ref: '#/definitions/DisabledReason'
        description: The user-specified reason why the transition between two stages of a pipeline was disabled.
      enabled:
        $ref: '#/definitions/Enabled'
        description: Whether the transition between stages is enabled (true) or disabled (false).
      lastChangedAt:
        $ref: '#/definitions/LastChangedAt'
        description: The timestamp when the transition state was last changed.
      lastChangedBy:
        $ref: '#/definitions/LastChangedBy'
        description: The ID of the user who last changed the transition state.
    type: object
  UpdatePipelineInput:
    description: Represents the input of an UpdatePipeline action.
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: The name of the pipeline to be updated.
    required:
      - pipeline
    type: object
  UpdatePipelineOutput:
    description: Represents the output of an UpdatePipeline action.
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: The structure of the updated pipeline.
    type: object
  Url:
    maxLength: 2048
    minLength: 1
    type: string
  UrlTemplate:
    maxLength: 2048
    minLength: 1
    type: string
  ValidationException:
    description: The validation was specified in an invalid format.
    properties: {}
    type: object
  Version:
    maxLength: 9
    minLength: 1
    pattern: '[0-9A-Za-z_-]+'
    type: string
