syntax = "proto3";

import "google/api/annotations.proto";

package awsmigrationhub;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateCreatedArtifactRequest body = 10;
}

message Post#AssociateDiscoveredResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateDiscoveredResourceRequest body = 10;
}

message Post#CreateProgressUpdateStreamRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateProgressUpdateStreamRequest body = 10;
}

message Post#DeleteProgressUpdateStreamRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteProgressUpdateStreamRequest body = 10;
}

message Post#DescribeApplicationStateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeApplicationStateRequest body = 10;
}

message Post#DescribeMigrationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeMigrationTaskRequest body = 10;
}

message Post#DisassociateCreatedArtifactRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateCreatedArtifactRequest body = 10;
}

message Post#DisassociateDiscoveredResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateDiscoveredResourceRequest body = 10;
}

message Post#ImportMigrationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportMigrationTaskRequest body = 10;
}

message Post#ListCreatedArtifactsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListCreatedArtifactsRequest body = 10;
}

message Post#ListDiscoveredResourcesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListDiscoveredResourcesRequest body = 10;
}

message Post#ListMigrationTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListMigrationTasksRequest body = 10;
}

message Post#ListProgressUpdateStreamsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListProgressUpdateStreamsRequest body = 10;
}

message Post#NotifyApplicationStateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    NotifyApplicationStateRequest body = 10;
}

message Post#NotifyMigrationTaskStateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    NotifyMigrationTaskStateRequest body = 10;
}

message Post#PutResourceAttributesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PutResourceAttributesRequest body = 10;
}

message AccessDeniedException {
    string Message = 1;
}

enum ApplicationStatu {
    NOT_STARTED = 0;
    IN_PROGRESS = 1;
    COMPLETED = 2;
}

message AssociateCreatedArtifactRequest {
    // An ARN of the AWS resource related to the migration (e.g., AMI, EC2 instance, RDS instance, etc.)
    CreatedArtifact CreatedArtifact = 1;
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 2;
    // Unique identifier that references the migration task.
    string MigrationTaskName = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message AssociateCreatedArtifactResult {
}

message AssociateDiscoveredResourceRequest {
    // Object representing a Resource.
    DiscoveredResource DiscoveredResource = 1;
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 2;
    // The identifier given to the MigrationTask.
    string MigrationTaskName = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message AssociateDiscoveredResourceResult {
}

message CreateProgressUpdateStreamRequest {
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 1;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStreamName = 2;
}

message CreateProgressUpdateStreamResult {
}

message CreatedArtifact {
    // A description that can be free-form text to record additional detail about the artifact for clarity or for later reference.
    string Description = 1;
    // An ARN that uniquely identifies the result of a migration task.
    string Name = 2;
}



repeated CreatedArtifact CreatedArtifactList = 1



message DeleteProgressUpdateStreamRequest {
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 1;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStreamName = 2;
}

message DeleteProgressUpdateStreamResult {
}

message DescribeApplicationStateRequest {
    // The configurationId in ADS that uniquely identifies the grouped application.
    string ApplicationId = 1;
}

message DescribeApplicationStateResult {
    // Status of the application - Not Started, In-Progress, Complete.
    ApplicationStatus ApplicationStatus = 1;
    // The timestamp when the application status was last updated.
    string LastUpdatedTime = 2;
}

message DescribeMigrationTaskRequest {
    // The identifier given to the MigrationTask.
    string MigrationTaskName = 1;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 2;
}

message DescribeMigrationTaskResult {
    // Object encapsulating information about the migration task.
    MigrationTask MigrationTask = 1;
}

message DisassociateCreatedArtifactRequest {
    // An ARN of the AWS resource related to the migration (e.g., AMI, EC2 instance, RDS instance, etc.)
    string CreatedArtifactName = 1;
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 2;
    // Unique identifier that references the migration task to be disassociated with the artifact.
    string MigrationTaskName = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message DisassociateCreatedArtifactResult {
}

message DisassociateDiscoveredResourceRequest {
    // ConfigurationId of the ADS resource to be disassociated.
    string ConfigurationId = 1;
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 2;
    // The identifier given to the MigrationTask.
    string MigrationTaskName = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message DisassociateDiscoveredResourceResult {
}

message DiscoveredResource {
    // The configurationId in ADS that uniquely identifies the on-premise resource.
    string ConfigurationId = 1;
    // A description that can be free-form text to record additional detail about the discovered resource for clarity or later reference.
    string Description = 2;
}



repeated DiscoveredResource DiscoveredResourceList = 1



message DryRunOperation {
    string Message = 1;
}

message ImportMigrationTaskRequest {
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 1;
    // Unique identifier that references the migration task.
    string MigrationTaskName = 2;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 3;
}

message ImportMigrationTaskResult {
}

message InternalServerError {
    string Message = 1;
}

message InvalidInputException {
    string Message = 1;
}

repeated ResourceAttribute LatestResourceAttributeList = 1

message ListCreatedArtifactsRequest {
    // Maximum number of results to be returned per page.
    integer MaxResults = 1;
    // Unique identifier that references the migration task.
    string MigrationTaskName = 2;
    // If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.
    string NextToken = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message ListCreatedArtifactsResult {
    // List of created artifacts up to the maximum number of results specified in the request.
    array CreatedArtifactList = 1;
    // If there are more created artifacts than the max result, return the next token to be passed to the next call as a bookmark of where to start from.
    string NextToken = 2;
}

message ListDiscoveredResourcesRequest {
    // The maximum number of results returned per page.
    integer MaxResults = 1;
    // The name of the MigrationTask.
    string MigrationTaskName = 2;
    // If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.
    string NextToken = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
}

message ListDiscoveredResourcesResult {
    // Returned list of discovered resources associated with the given MigrationTask.
    array DiscoveredResourceList = 1;
    // If there are more discovered resources than the max result, return the next token to be passed to the next call as a bookmark of where to start from.
    string NextToken = 2;
}

message ListMigrationTasksRequest {
    // Value to specify how many results are returned per page.
    integer MaxResults = 1;
    // If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.
    string NextToken = 2;
    // Filter migration tasks by discovered resource name.
    string ResourceName = 3;
}

message ListMigrationTasksResult {
    // Lists the migration task's summary which includes: <code>MigrationTaskName</code>, <code>ProgressPercent</code>, <code>ProgressUpdateStream</code>, <code>Status</code>, and the <code>UpdateDateTime</code> for each task.
    array MigrationTaskSummaryList = 1;
    // If there are more migration tasks than the max result, return the next token to be passed to the next call as a bookmark of where to start from.
    string NextToken = 2;
}

message ListProgressUpdateStreamsRequest {
    // Filter to limit the maximum number of results to list per page.
    integer MaxResults = 1;
    // If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.
    string NextToken = 2;
}

message ListProgressUpdateStreamsResult {
    // If there are more streams created than the max result, return the next token to be passed to the next call as a bookmark of where to start from.
    string NextToken = 1;
    // List of progress update streams up to the max number of results passed in the input.
    array ProgressUpdateStreamSummaryList = 2;
}

message MigrationTask {
    // Unique identifier that references the migration task.
    string MigrationTaskName = 1;
    // A name that identifies the vendor of the migration tool being used.
    string ProgressUpdateStream = 2;
    // <p/>
    array ResourceAttributeList = 3;
    // Task object encapsulating task information.
    Task Task = 4;
    // The timestamp when the task was gathered.
    string UpdateDateTime = 5;
}

message MigrationTaskSummary {
    // Unique identifier that references the migration task.
    string MigrationTaskName = 1;
    // <p/>
    integer ProgressPercent = 2;
    // An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool.
    string ProgressUpdateStream = 3;
    // Status of the task.
    Status Status = 4;
    // Detail information of what is being done within the overall status state.
    string StatusDetail = 5;
    // The timestamp when the task was gathered.
    string UpdateDateTime = 6;
}

repeated MigrationTaskSummary MigrationTaskSummaryList = 1



message NotifyApplicationStateRequest {
    // The configurationId in ADS that uniquely identifies the grouped application.
    string ApplicationId = 1;
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 2;
    // Status of the application - Not Started, In-Progress, Complete.
    ApplicationStatus Status = 3;
}

message NotifyApplicationStateResult {
}

message NotifyMigrationTaskStateRequest {
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 1;
    // Unique identifier that references the migration task.
    string MigrationTaskName = 2;
    // Number of seconds after the UpdateDateTime within which the Migration Hub can expect an update. If Migration Hub does not receive an update within the specified interval, then the migration task will be considered stale.
    integer NextUpdateSeconds = 3;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 4;
    // Information about the task's progress and status.
    Task Task = 5;
    // The timestamp when the task was gathered.
    string UpdateDateTime = 6;
}

message NotifyMigrationTaskStateResult {
}

message PolicyErrorException {
    string Message = 1;
}

message ProgressUpdateStreamSummary {
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStreamName = 1;
}

repeated ProgressUpdateStreamSummary ProgressUpdateStreamSummaryList = 1

message PutResourceAttributesRequest {
    // Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.
    boolean DryRun = 1;
    // Unique identifier that references the migration task.
    string MigrationTaskName = 2;
    // The name of the ProgressUpdateStream.
    string ProgressUpdateStream = 3;
    // Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service (ADS)'s repository.
    array ResourceAttributeList = 4;
}

message PutResourceAttributesResult {
}

message ResourceAttribute {
    // Type of resource.
    ResourceAttributeType Type = 1;
    // Value of the resource type.
    string Value = 2;
}

repeated ResourceAttribute ResourceAttributeList = 1

enum ResourceAttributeType {
    IPV4_ADDRESS = 0;
    IPV6_ADDRESS = 1;
    MAC_ADDRESS = 2;
    FQDN = 3;
    VM_MANAGER_ID = 4;
    VM_MANAGED_OBJECT_REFERENCE = 5;
    VM_NAME = 6;
    VM_PATH = 7;
    BIOS_ID = 8;
    MOTHERBOARD_SERIAL_NUMBER = 9;
    LABEL = 10;
}

message ResourceNotFoundException {
    string Message = 1;
}

message ServiceUnavailableException {
    string Message = 1;
}

enum Statu {
    NOT_STARTED = 0;
    IN_PROGRESS = 1;
    FAILED = 2;
    COMPLETED = 3;
}

message Task {
    // Indication of the percentage completion of the task.
    integer ProgressPercent = 1;
    // Status of the task - Not Started, In-Progress, Complete.
    Status Status = 2;
    // Details of task status as notified by a migration tool. A tool might use this field to provide clarifying information about the status that is unique to that tool or that explains an error state.
    string StatusDetail = 3;
}

message UnauthorizedOperation {
    string Message = 1;
}

service AWSMigrationHubService {
    // <p>Associates a created artifact of an AWS cloud resource, the target receiving the migration, with the migration task performed by a migration tool. This API has the following traits:</p> <ul> <li> <p>Migration tools can call the <code>AssociateCreatedArtifact</code> operation to indicate which AWS artifact is associated with a migration task.</p> </li> <li> <p>The created artifact name must be provided in ARN (Amazon Resource Name) format which will contain information about type and region; for example: <code>arn:aws:ec2:us-east-1:488216288981:image/ami-6d0ba87b</code>.</p> </li> <li> <p>Examples of the AWS resource behind the created artifact are, AMI's, EC2 instance, or DMS endpoint, etc.</p> </li> </ul>
    rpc Post(PostRequest) returns (AssociateCreatedArtifactResult) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Associates a discovered resource ID from Application Discovery Service (ADS) with a migration task.
    rpc Post#AssociateDiscoveredResource(Post#AssociateDiscoveredResourceRequest) returns (AssociateDiscoveredResourceResult) {
      option (google.api.http) = {
        post: "//#AssociateDiscoveredResource"
        body: "body"
      };
    }
    // Creates a progress update stream which is an AWS resource used for access control as well as a namespace for migration task names that is implicitly linked to your AWS account. It must uniquely identify the migration tool as it is used for all updates made by the tool; however, it does not need to be unique for each AWS account because it is scoped to the AWS account.
    rpc Post#CreateProgressUpdateStream(Post#CreateProgressUpdateStreamRequest) returns (CreateProgressUpdateStreamResult) {
      option (google.api.http) = {
        post: "//#CreateProgressUpdateStream"
        body: "body"
      };
    }
    // <p>Deletes a progress update stream, including all of its tasks, which was previously created as an AWS resource used for access control. This API has the following traits:</p> <ul> <li> <p>The only parameter needed for <code>DeleteProgressUpdateStream</code> is the stream name (same as a <code>CreateProgressUpdateStream</code> call).</p> </li> <li> <p>The call will return, and a background process will asynchronously be doing the actual delete of the stream and all of its resources (tasks, associated resources, resource attributes, created artifacts).</p> </li> <li> <p>If the stream takes time to be deleted, it might still show up on a <code>ListProgressUpdateStreams</code> call.</p> </li> <li> <p> <code>CreateProgressUpdateStream</code>, <code>ImportMigrationTask</code>, <code>NotifyMigrationTaskState</code>, and all Associate[*] APIs realted to the tasks belonging to the stream will throw "InvalidInputException" if the stream of the same name is in the process of being deleted.</p> </li> <li> <p>Once the stream and all of its resources are deleted, <code>CreateProgressUpdateStream</code> for a stream of the same name will succeed, and that stream will be an entirely new logical resource (without any resources associated with the old stream).</p> </li> </ul>
    rpc Post#DeleteProgressUpdateStream(Post#DeleteProgressUpdateStreamRequest) returns (DeleteProgressUpdateStreamResult) {
      option (google.api.http) = {
        post: "//#DeleteProgressUpdateStream"
        body: "body"
      };
    }
    // Gets the migration status of an application.
    rpc Post#DescribeApplicationState(Post#DescribeApplicationStateRequest) returns (DescribeApplicationStateResult) {
      option (google.api.http) = {
        post: "//#DescribeApplicationState"
        body: "body"
      };
    }
    // Retrieves a list of all attributes associated with a specific migration task.
    rpc Post#DescribeMigrationTask(Post#DescribeMigrationTaskRequest) returns (DescribeMigrationTaskResult) {
      option (google.api.http) = {
        post: "//#DescribeMigrationTask"
        body: "body"
      };
    }
    // <p>Disassociates a created artifact of an AWS resource with a migration task performed by a migration tool that was previously associated. This API has the following traits:</p> <ul> <li> <p>A migration user can call the <code>DisassociateCreatedArtifacts</code> operation to disassociate a created AWS Artifact from a migration task.</p> </li> <li> <p>The created artifact name must be provided in ARN (Amazon Resource Name) format which will contain information about type and region; for example: <code>arn:aws:ec2:us-east-1:488216288981:image/ami-6d0ba87b</code>.</p> </li> <li> <p>Examples of the AWS resource behind the created artifact are, AMI's, EC2 instance, or RDS instance, etc.</p> </li> </ul>
    rpc Post#DisassociateCreatedArtifact(Post#DisassociateCreatedArtifactRequest) returns (DisassociateCreatedArtifactResult) {
      option (google.api.http) = {
        post: "//#DisassociateCreatedArtifact"
        body: "body"
      };
    }
    // Disassociate an Application Discovery Service (ADS) discovered resource from a migration task.
    rpc Post#DisassociateDiscoveredResource(Post#DisassociateDiscoveredResourceRequest) returns (DisassociateDiscoveredResourceResult) {
      option (google.api.http) = {
        post: "//#DisassociateDiscoveredResource"
        body: "body"
      };
    }
    // <p>Registers a new migration task which represents a server, database, etc., being migrated to AWS by a migration tool.</p> <p>This API is a prerequisite to calling the <code>NotifyMigrationTaskState</code> API as the migration tool must first register the migration task with Migration Hub.</p>
    rpc Post#ImportMigrationTask(Post#ImportMigrationTaskRequest) returns (ImportMigrationTaskResult) {
      option (google.api.http) = {
        post: "//#ImportMigrationTask"
        body: "body"
      };
    }
    // <p>Lists the created artifacts attached to a given migration task in an update stream. This API has the following traits:</p> <ul> <li> <p>Gets the list of the created artifacts while migration is taking place.</p> </li> <li> <p>Shows the artifacts created by the migration tool that was associated by the <code>AssociateCreatedArtifact</code> API. </p> </li> <li> <p>Lists created artifacts in a paginated interface. </p> </li> </ul>
    rpc Post#ListCreatedArtifacts(Post#ListCreatedArtifactsRequest) returns (ListCreatedArtifactsResult) {
      option (google.api.http) = {
        post: "//#ListCreatedArtifacts"
        body: "body"
      };
    }
    // Lists discovered resources associated with the given <code>MigrationTask</code>.
    rpc Post#ListDiscoveredResources(Post#ListDiscoveredResourcesRequest) returns (ListDiscoveredResourcesResult) {
      option (google.api.http) = {
        post: "//#ListDiscoveredResources"
        body: "body"
      };
    }
    // <p>Lists all, or filtered by resource name, migration tasks associated with the user account making this call. This API has the following traits:</p> <ul> <li> <p>Can show a summary list of the most recent migration tasks.</p> </li> <li> <p>Can show a summary list of migration tasks associated with a given discovered resource.</p> </li> <li> <p>Lists migration tasks in a paginated interface.</p> </li> </ul>
    rpc Post#ListMigrationTasks(Post#ListMigrationTasksRequest) returns (ListMigrationTasksResult) {
      option (google.api.http) = {
        post: "//#ListMigrationTasks"
        body: "body"
      };
    }
    // Lists progress update streams associated with the user account making this call.
    rpc Post#ListProgressUpdateStreams(Post#ListProgressUpdateStreamsRequest) returns (ListProgressUpdateStreamsResult) {
      option (google.api.http) = {
        post: "//#ListProgressUpdateStreams"
        body: "body"
      };
    }
    // Sets the migration state of an application. For a given application identified by the value passed to <code>ApplicationId</code>, its status is set or updated by passing one of three values to <code>Status</code>: <code>NOT_STARTED | IN_PROGRESS | COMPLETED</code>.
    rpc Post#NotifyApplicationState(Post#NotifyApplicationStateRequest) returns (NotifyApplicationStateResult) {
      option (google.api.http) = {
        post: "//#NotifyApplicationState"
        body: "body"
      };
    }
    // <p>Notifies Migration Hub of the current status, progress, or other detail regarding a migration task. This API has the following traits:</p> <ul> <li> <p>Migration tools will call the <code>NotifyMigrationTaskState</code> API to share the latest progress and status.</p> </li> <li> <p> <code>MigrationTaskName</code> is used for addressing updates to the correct target.</p> </li> <li> <p> <code>ProgressUpdateStream</code> is used for access control and to provide a namespace for each migration tool.</p> </li> </ul>
    rpc Post#NotifyMigrationTaskState(Post#NotifyMigrationTaskStateRequest) returns (NotifyMigrationTaskStateResult) {
      option (google.api.http) = {
        post: "//#NotifyMigrationTaskState"
        body: "body"
      };
    }
    // <p>Provides identifying details of the resource being migrated so that it can be associated in the Application Discovery Service (ADS)'s repository. This association occurs asynchronously after <code>PutResourceAttributes</code> returns.</p> <important> <p>Keep in mind that subsequent calls to PutResourceAttributes will override previously stored attributes. For example, if it is first called with a MAC address, but later, it is desired to <i>add</i> an IP address, it will then be required to call it with <i>both</i> the IP and MAC addresses to prevent overiding the MAC address.</p> </important> <note> <p>Because this is an asynchronous call, it will always return 200, whether an association occurs or not. To confirm if an association was found based on the provided details, call <code>ListAssociatedResource</code>.</p> </note>
    rpc Post#PutResourceAttributes(Post#PutResourceAttributesRequest) returns (PutResourceAttributesResult) {
      option (google.api.http) = {
        post: "//#PutResourceAttributes"
        body: "body"
      };
    }
}
