basePath: /
consumes.length: 1
consumes[0]: application/json
definitions.AddEventSourceRequest.properties.BatchSize.$ref: '#/definitions/Integer'
definitions.AddEventSourceRequest.properties.BatchSize.description: The largest number
  of records that AWS Lambda will give to your function in a single event. The default
  is 100 records.
definitions.AddEventSourceRequest.properties.EventSource.$ref: '#/definitions/String'
definitions.AddEventSourceRequest.properties.EventSource.description: The Amazon Resource
  Name (ARN) of the Amazon Kinesis stream that is the event source. Any record added
  to this stream causes AWS Lambda to invoke your Lambda function. AWS Lambda POSTs
  the Amazon Kinesis event, containing records, to your Lambda function as JSON.
definitions.AddEventSourceRequest.properties.FunctionName.$ref: '#/definitions/FunctionName'
definitions.AddEventSourceRequest.properties.FunctionName.description: The Lambda
  function to invoke when AWS Lambda detects an event on the stream.
definitions.AddEventSourceRequest.properties.Parameters.$ref: '#/definitions/Map'
definitions.AddEventSourceRequest.properties.Parameters.description: 'A map (key-value
  pairs) defining the configuration for AWS Lambda to use when reading the event source.
  Currently, AWS Lambda supports only the <code>InitialPositionInStream</code> key.
  The valid values are: "TRIM_HORIZON" and "LATEST". The default value is "TRIM_HORIZON".
  For more information, go to <a href="http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType">ShardIteratorType</a>
  in the Amazon Kinesis Service API Reference. '
definitions.AddEventSourceRequest.properties.Role.$ref: '#/definitions/RoleArn'
definitions.AddEventSourceRequest.properties.Role.description: The ARN of the IAM
  role (invocation role) that AWS Lambda can assume to read from the stream and invoke
  the function.
definitions.AddEventSourceRequest.required.length: 3
definitions.AddEventSourceRequest.required[0]: EventSource
definitions.AddEventSourceRequest.required[1]: FunctionName
definitions.AddEventSourceRequest.required[2]: Role
definitions.AddEventSourceRequest.type: object
definitions.Blob.type: string
definitions.Boolean.type: boolean
definitions.DeleteFunctionRequest.type: object
definitions.Description.maxLength: 256
definitions.Description.minLength: 0
definitions.Description.type: string
definitions.EventSourceConfiguration.description: Describes mapping between an Amazon
  Kinesis stream and a Lambda function.
definitions.EventSourceConfiguration.properties.BatchSize.$ref: '#/definitions/Integer'
definitions.EventSourceConfiguration.properties.BatchSize.description: The largest
  number of records that AWS Lambda will POST in the invocation request to your function.
definitions.EventSourceConfiguration.properties.EventSource.$ref: '#/definitions/String'
definitions.EventSourceConfiguration.properties.EventSource.description: The Amazon
  Resource Name (ARN) of the Amazon Kinesis stream that is the source of events.
definitions.EventSourceConfiguration.properties.FunctionName.$ref: '#/definitions/FunctionName'
definitions.EventSourceConfiguration.properties.FunctionName.description: The Lambda
  function to invoke when AWS Lambda detects an event on the stream.
definitions.EventSourceConfiguration.properties.IsActive.$ref: '#/definitions/Boolean'
definitions.EventSourceConfiguration.properties.IsActive.description: Indicates whether
  the event source mapping is currently honored. Events are only processes if IsActive
  is true.
definitions.EventSourceConfiguration.properties.LastModified.$ref: '#/definitions/Timestamp'
definitions.EventSourceConfiguration.properties.LastModified.description: The UTC
  time string indicating the last time the event mapping was updated.
definitions.EventSourceConfiguration.properties.Parameters.$ref: '#/definitions/Map'
definitions.EventSourceConfiguration.properties.Parameters.description: The map (key-value
  pairs) defining the configuration for AWS Lambda to use when reading the event source.
definitions.EventSourceConfiguration.properties.Role.$ref: '#/definitions/RoleArn'
definitions.EventSourceConfiguration.properties.Role.description: The ARN of the IAM
  role (invocation role) that AWS Lambda can assume to read from the stream and invoke
  the function.
definitions.EventSourceConfiguration.properties.Status.$ref: '#/definitions/String'
definitions.EventSourceConfiguration.properties.Status.description: 'The description
  of the health of the event source mapping. Valid values are: "PENDING", "OK", and
  "PROBLEM:<i>message</i>". Initially this staus is "PENDING". When AWS Lambda begins
  processing events, it changes the status to "OK".'
definitions.EventSourceConfiguration.properties.UUID.$ref: '#/definitions/String'
definitions.EventSourceConfiguration.properties.UUID.description: The AWS Lambda assigned
  opaque identifier for the mapping.
definitions.EventSourceConfiguration.type: object
definitions.EventSourceList.items.$ref: '#/definitions/EventSourceConfiguration'
definitions.EventSourceList.type: array
definitions.FunctionArn.pattern: arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?
definitions.FunctionArn.type: string
definitions.FunctionCodeLocation.description: The object for the Lambda function location.
definitions.FunctionCodeLocation.properties.Location.$ref: '#/definitions/String'
definitions.FunctionCodeLocation.properties.Location.description: The presigned URL
  you can use to download the function's .zip file that you previously uploaded. The
  URL is valid for up to 10 minutes.
definitions.FunctionCodeLocation.properties.RepositoryType.$ref: '#/definitions/String'
definitions.FunctionCodeLocation.properties.RepositoryType.description: The repository
  from which you can download the function.
definitions.FunctionCodeLocation.type: object
definitions.FunctionConfiguration.description: A complex type that describes function
  metadata.
definitions.FunctionConfiguration.properties.CodeSize.$ref: '#/definitions/Long'
definitions.FunctionConfiguration.properties.CodeSize.description: The size, in bytes,
  of the function .zip file you uploaded.
definitions.FunctionConfiguration.properties.ConfigurationId.$ref: '#/definitions/String'
definitions.FunctionConfiguration.properties.ConfigurationId.description: A Lambda-assigned
  unique identifier for the current function code and related configuration.
definitions.FunctionConfiguration.properties.Description.$ref: '#/definitions/Description'
definitions.FunctionConfiguration.properties.Description.description: The user-provided
  description.
definitions.FunctionConfiguration.properties.FunctionARN.$ref: '#/definitions/FunctionArn'
definitions.FunctionConfiguration.properties.FunctionARN.description: The Amazon Resource
  Name (ARN) assigned to the function.
definitions.FunctionConfiguration.properties.FunctionName.$ref: '#/definitions/FunctionName'
definitions.FunctionConfiguration.properties.FunctionName.description: The name of
  the function.
definitions.FunctionConfiguration.properties.Handler.$ref: '#/definitions/Handler'
definitions.FunctionConfiguration.properties.Handler.description: The function Lambda
  calls to begin executing your function.
definitions.FunctionConfiguration.properties.LastModified.$ref: '#/definitions/Timestamp'
definitions.FunctionConfiguration.properties.LastModified.description: The timestamp
  of the last time you updated the function.
definitions.FunctionConfiguration.properties.MemorySize.$ref: '#/definitions/MemorySize'
definitions.FunctionConfiguration.properties.MemorySize.description: The memory size,
  in MB, you configured for the function. Must be a multiple of 64 MB.
definitions.FunctionConfiguration.properties.Mode.$ref: '#/definitions/Mode'
definitions.FunctionConfiguration.properties.Mode.description: 'The type of the Lambda
  function you uploaded. '
definitions.FunctionConfiguration.properties.Role.$ref: '#/definitions/RoleArn'
definitions.FunctionConfiguration.properties.Role.description: The Amazon Resource
  Name (ARN) of the IAM role that Lambda assumes when it executes your function to
  access any other Amazon Web Services (AWS) resources.
definitions.FunctionConfiguration.properties.Runtime.$ref: '#/definitions/Runtime'
definitions.FunctionConfiguration.properties.Runtime.description: The runtime environment
  for the Lambda function.
definitions.FunctionConfiguration.properties.Timeout.$ref: '#/definitions/Timeout'
definitions.FunctionConfiguration.properties.Timeout.description: 'The function execution
  time at which Lambda should terminate the function. Because the execution time has
  cost implications, we recommend you set this value based on your expected execution
  time. The default is 3 seconds. '
definitions.FunctionConfiguration.type: object
definitions.FunctionList.items.$ref: '#/definitions/FunctionConfiguration'
definitions.FunctionList.type: array
definitions.FunctionName.maxLength: 64
definitions.FunctionName.minLength: 1
definitions.FunctionName.pattern: '[a-zA-Z0-9-_]+'
definitions.FunctionName.type: string
definitions.GetEventSourceRequest.type: object
definitions.GetFunctionConfigurationRequest.type: object
definitions.GetFunctionRequest.type: object
definitions.GetFunctionResponse.description: This response contains the object for
  AWS Lambda function location (see <a>API_FunctionCodeLocation</a>
definitions.GetFunctionResponse.properties.Code.$ref: '#/definitions/FunctionCodeLocation'
definitions.GetFunctionResponse.properties.Configuration.$ref: '#/definitions/FunctionConfiguration'
definitions.GetFunctionResponse.type: object
definitions.Handler.pattern: '[a-zA-Z0-9./\-_]+'
definitions.Handler.type: string
definitions.HttpStatus.type: integer
definitions.Integer.type: integer
definitions.InvalidParameterValueException.description: 'One of the parameters in
  the request is invalid. For example, if you provided an IAM role for AWS Lambda
  to assume in the <code>UploadFunction</code> or the <code>UpdateFunctionConfiguration</code>
  API, that AWS Lambda is unable to assume you will get this exception. '
definitions.InvalidParameterValueException.properties.Type.$ref: '#/definitions/String'
definitions.InvalidParameterValueException.properties.message.$ref: '#/definitions/String'
definitions.InvalidParameterValueException.type: object
definitions.InvalidRequestContentException.description: The request body could not
  be parsed as JSON.
definitions.InvalidRequestContentException.properties.Type.$ref: '#/definitions/String'
definitions.InvalidRequestContentException.properties.message.$ref: '#/definitions/String'
definitions.InvalidRequestContentException.type: object
definitions.InvokeAsyncRequest.properties.InvokeArgs.$ref: '#/definitions/Blob'
definitions.InvokeAsyncRequest.properties.InvokeArgs.description: JSON that you want
  to provide to your Lambda function as input.
definitions.InvokeAsyncRequest.required.length: 1
definitions.InvokeAsyncRequest.required[0]: InvokeArgs
definitions.InvokeAsyncRequest.type: object
definitions.InvokeAsyncResponse.description: Upon success, it returns empty response.
  Otherwise, throws an exception.
definitions.InvokeAsyncResponse.type: object
definitions.ListEventSourcesRequest.type: object
definitions.ListEventSourcesResponse.description: Contains a list of event sources
  (see <a>API_EventSourceConfiguration</a>)
definitions.ListEventSourcesResponse.properties.EventSources.$ref: '#/definitions/EventSourceList'
definitions.ListEventSourcesResponse.properties.EventSources.description: An arrary
  of <code>EventSourceConfiguration</code> objects.
definitions.ListEventSourcesResponse.properties.NextMarker.$ref: '#/definitions/String'
definitions.ListEventSourcesResponse.properties.NextMarker.description: A string,
  present if there are more event source mappings.
definitions.ListEventSourcesResponse.type: object
definitions.ListFunctionsRequest.type: object
definitions.ListFunctionsResponse.description: Contains a list of AWS Lambda function
  configurations (see <a>API_FunctionConfiguration</a>.
definitions.ListFunctionsResponse.properties.Functions.$ref: '#/definitions/FunctionList'
definitions.ListFunctionsResponse.properties.Functions.description: A list of Lambda
  functions.
definitions.ListFunctionsResponse.properties.NextMarker.$ref: '#/definitions/String'
definitions.ListFunctionsResponse.properties.NextMarker.description: A string, present
  if there are more functions.
definitions.ListFunctionsResponse.type: object
definitions.Long.type: integer
definitions.Map.items.properties.key.$ref: '#/definitions/String'
definitions.Map.items.properties.value.$ref: '#/definitions/String'
definitions.Map.items.type: object
definitions.Map.type: array
definitions.MaxListItems.maximum: 10000
definitions.MaxListItems.minimum: 1
definitions.MaxListItems.type: integer
definitions.MemorySize.maximum: 1024
definitions.MemorySize.minimum: 128
definitions.MemorySize.type: integer
definitions.Mode.enum.length: 1
definitions.Mode.enum[0]: event
definitions.Mode.type: string
definitions.RemoveEventSourceRequest.type: object
definitions.ResourceNotFoundException.description: The function or the event source
  specified in the request does not exist.
definitions.ResourceNotFoundException.properties.Message.$ref: '#/definitions/String'
definitions.ResourceNotFoundException.properties.Type.$ref: '#/definitions/String'
definitions.ResourceNotFoundException.type: object
definitions.RoleArn.pattern: arn:aws:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
definitions.RoleArn.type: string
definitions.Runtime.enum.length: 1
definitions.Runtime.enum[0]: nodejs
definitions.Runtime.type: string
definitions.ServiceException.description: The AWS Lambda service encountered an internal
  error.
definitions.ServiceException.properties.Message.$ref: '#/definitions/String'
definitions.ServiceException.properties.Type.$ref: '#/definitions/String'
definitions.ServiceException.type: object
definitions.String.type: string
definitions.Timeout.maximum: 60
definitions.Timeout.minimum: 1
definitions.Timeout.type: integer
definitions.Timestamp.format: date-time
definitions.Timestamp.type: string
definitions.UpdateFunctionConfigurationRequest.type: object
definitions.UploadFunctionRequest.properties.FunctionZip.$ref: '#/definitions/Blob'
definitions.UploadFunctionRequest.properties.FunctionZip.description: 'A .zip file
  containing your packaged source code. For more information about creating a .zip
  file, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events.html">AWS
  LambdaL How it Works</a> in the AWS Lambda Developer Guide. '
definitions.UploadFunctionRequest.required.length: 1
definitions.UploadFunctionRequest.required[0]: FunctionZip
definitions.UploadFunctionRequest.type: object
externalDocs.description: Amazon Web Services documentation
externalDocs.url: https://aws.amazon.com/lambda/
host: lambda.amazonaws.com
info.contact.email: mike.ralphson@gmail.com
info.contact.name: Mike Ralphson
info.contact.url: https://github.com/mermade/aws2openapi
info.description: <fullname>AWS Lambda</fullname> <p><b>Overview</b></p> <p>This is
  the AWS Lambda API Reference. The AWS Lambda Developer Guide provides additional
  information. For the service overview, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/welcome.html">What
  is AWS Lambda</a>, and for information about how the service works, go to <a href="http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html">AWS
  LambdaL How it Works</a> in the AWS Lambda Developer Guide.</p>
info.license.name: Apache 2.0 License
info.license.url: http://www.apache.org/licenses/
info.termsOfService: https://aws.amazon.com/service-terms/
info.title: AWS Lambda
info.version: 2014-11-11
info.x-apiClientRegistration.url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: cloud
info.x-logo.backgroundColor: '#FFFFFF'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg
info.x-origin.length: 1
info.x-origin[0].contentType: application/json
info.x-origin[0].converter.url: https://github.com/mermade/aws2openapi
info.x-origin[0].converter.version: 1.0.0
info.x-origin[0].url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2014-11-11.normal.json
info.x-origin[0].x-apisguru-direct: true
info.x-preferred: false
info.x-providerName: amazonaws.com
info.x-release: v4
info.x-serviceName: lambda
parameters.Action.in: header
parameters.Action.name: Action
parameters.Action.required: true
parameters.Action.type: string
parameters.Version.in: header
parameters.Version.name: Version
parameters.Version.required: true
parameters.Version.type: string
parameters.X-Amz-Algorithm.in: header
parameters.X-Amz-Algorithm.name: X-Amz-Algorithm
parameters.X-Amz-Algorithm.required: false
parameters.X-Amz-Algorithm.type: string
parameters.X-Amz-Content-Sha256.in: header
parameters.X-Amz-Content-Sha256.name: X-Amz-Content-Sha256
parameters.X-Amz-Content-Sha256.required: false
parameters.X-Amz-Content-Sha256.type: string
parameters.X-Amz-Credential.in: header
parameters.X-Amz-Credential.name: X-Amz-Credential
parameters.X-Amz-Credential.required: false
parameters.X-Amz-Credential.type: string
parameters.X-Amz-Date.in: header
parameters.X-Amz-Date.name: X-Amz-Date
parameters.X-Amz-Date.required: false
parameters.X-Amz-Date.type: string
parameters.X-Amz-Security-Token.in: header
parameters.X-Amz-Security-Token.name: X-Amz-Security-Token
parameters.X-Amz-Security-Token.required: false
parameters.X-Amz-Security-Token.type: string
parameters.X-Amz-Signature.in: header
parameters.X-Amz-Signature.name: X-Amz-Signature
parameters.X-Amz-Signature.required: false
parameters.X-Amz-Signature.type: string
parameters.X-Amz-SignedHeaders.in: header
parameters.X-Amz-SignedHeaders.name: X-Amz-SignedHeaders
parameters.X-Amz-SignedHeaders.required: false
parameters.X-Amz-SignedHeaders.type: string
paths./2014-11-13/event-source-mappings/.get.description: <p>Returns a list of event
  source mappings you created using the <code>AddEventSource</code> (see <a>AddEventSource</a>),
  where you identify a stream as event source. This list does not include Amazon S3
  event sources. </p> <p>For each mapping, the API returns configuration information.
  You can optionally specify filters to retrieve specific event source mappings.</p>
  <p>This operation requires permission for the <code>lambda:ListEventSources</code>
  action.</p>
paths./2014-11-13/event-source-mappings/.get.operationId: ListEventSources
paths./2014-11-13/event-source-mappings/.get.parameters.length: 3
paths./2014-11-13/event-source-mappings/.get.parameters[0].in: body
paths./2014-11-13/event-source-mappings/.get.parameters[0].name: body
paths./2014-11-13/event-source-mappings/.get.parameters[0].required: true
paths./2014-11-13/event-source-mappings/.get.parameters[0].schema.$ref: '#/definitions/ListEventSourcesRequest'
paths./2014-11-13/event-source-mappings/.get.parameters[1].description: Pagination
  limit
paths./2014-11-13/event-source-mappings/.get.parameters[1].in: query
paths./2014-11-13/event-source-mappings/.get.parameters[1].name: MaxItems
paths./2014-11-13/event-source-mappings/.get.parameters[1].required: false
paths./2014-11-13/event-source-mappings/.get.parameters[1].type: string
paths./2014-11-13/event-source-mappings/.get.parameters[2].description: Pagination
  token
paths./2014-11-13/event-source-mappings/.get.parameters[2].in: query
paths./2014-11-13/event-source-mappings/.get.parameters[2].name: Marker
paths./2014-11-13/event-source-mappings/.get.parameters[2].required: false
paths./2014-11-13/event-source-mappings/.get.parameters[2].type: string
paths./2014-11-13/event-source-mappings/.get.responses.200.description: Success
paths./2014-11-13/event-source-mappings/.get.responses.200.schema.$ref: '#/definitions/ListEventSourcesResponse'
paths./2014-11-13/event-source-mappings/.get.responses.400.description: InvalidParameterValueException
paths./2014-11-13/event-source-mappings/.get.responses.400.schema.$ref: '#/definitions/InvalidParameterValueException'
paths./2014-11-13/event-source-mappings/.get.responses.400.x-aws-exception: true
paths./2014-11-13/event-source-mappings/.get.responses.404.description: ResourceNotFoundException
paths./2014-11-13/event-source-mappings/.get.responses.404.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./2014-11-13/event-source-mappings/.get.responses.404.x-aws-exception: true
paths./2014-11-13/event-source-mappings/.get.responses.500.description: ServiceException
paths./2014-11-13/event-source-mappings/.get.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/event-source-mappings/.get.responses.500.x-aws-exception: true
paths./2014-11-13/event-source-mappings/.parameters.length: 9
paths./2014-11-13/event-source-mappings/.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/event-source-mappings/.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/event-source-mappings/.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/event-source-mappings/.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/event-source-mappings/.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/event-source-mappings/.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/event-source-mappings/.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/event-source-mappings/.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/event-source-mappings/.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/event-source-mappings/{UUID}.delete.description: <p>Removes an event
  source mapping. This means AWS Lambda will no longer invoke the function for events
  in the associated source.</p> <p>This operation requires permission for the <code>lambda:RemoveEventSource</code>
  action.</p>
paths./2014-11-13/event-source-mappings/{UUID}.delete.operationId: RemoveEventSource
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters.length: 2
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[0].in: body
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[0].name: body
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[0].required: true
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[0].schema.$ref: '#/definitions/RemoveEventSourceRequest'
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[1].in: path
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[1].name: UUID
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[1].required: true
paths./2014-11-13/event-source-mappings/{UUID}.delete.parameters[1].type: string
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.204.description: Success
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.400.description: InvalidParameterValueException
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.400.schema.$ref: '#/definitions/InvalidParameterValueException'
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.400.x-aws-exception: true
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.404.description: ResourceNotFoundException
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.404.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.404.x-aws-exception: true
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.500.description: ServiceException
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/event-source-mappings/{UUID}.delete.responses.500.x-aws-exception: true
paths./2014-11-13/event-source-mappings/{UUID}.parameters.length: 9
paths./2014-11-13/event-source-mappings/{UUID}.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/event-source-mappings/{UUID}.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/functions/.get.description: <p>Returns a list of your Lambda functions.
  For each function, the response includes the function configuration information.
  You must use <a>GetFunction</a> to retrieve the code for your function.</p> <p>This
  operation requires permission for the <code>lambda:ListFunctions</code> action.</p>
paths./2014-11-13/functions/.get.operationId: ListFunctions
paths./2014-11-13/functions/.get.parameters.length: 3
paths./2014-11-13/functions/.get.parameters[0].in: body
paths./2014-11-13/functions/.get.parameters[0].name: body
paths./2014-11-13/functions/.get.parameters[0].required: true
paths./2014-11-13/functions/.get.parameters[0].schema.$ref: '#/definitions/ListFunctionsRequest'
paths./2014-11-13/functions/.get.parameters[1].description: Pagination limit
paths./2014-11-13/functions/.get.parameters[1].in: query
paths./2014-11-13/functions/.get.parameters[1].name: MaxItems
paths./2014-11-13/functions/.get.parameters[1].required: false
paths./2014-11-13/functions/.get.parameters[1].type: string
paths./2014-11-13/functions/.get.parameters[2].description: Pagination token
paths./2014-11-13/functions/.get.parameters[2].in: query
paths./2014-11-13/functions/.get.parameters[2].name: Marker
paths./2014-11-13/functions/.get.parameters[2].required: false
paths./2014-11-13/functions/.get.parameters[2].type: string
paths./2014-11-13/functions/.get.responses.200.description: Success
paths./2014-11-13/functions/.get.responses.200.schema.$ref: '#/definitions/ListFunctionsResponse'
paths./2014-11-13/functions/.get.responses.500.description: ServiceException
paths./2014-11-13/functions/.get.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/functions/.get.responses.500.x-aws-exception: true
paths./2014-11-13/functions/.parameters.length: 9
paths./2014-11-13/functions/.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/functions/.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/functions/.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/functions/.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/functions/.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/functions/.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/functions/.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/functions/.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/functions/.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/functions/{FunctionName}.parameters.length: 9
paths./2014-11-13/functions/{FunctionName}.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/functions/{FunctionName}.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/functions/{FunctionName}.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/functions/{FunctionName}.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/functions/{FunctionName}.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/functions/{FunctionName}.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/functions/{FunctionName}.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/functions/{FunctionName}.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/functions/{FunctionName}.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/functions/{FunctionName}.put.description: <p>Creates a new Lambda
  function or updates an existing function. The function metadata is created from
  the request parameters, and the code for the function is provided by a .zip file
  in the request body. If the function name already exists, the existing Lambda function
  is updated with the new code and metadata. </p> <p>This operation requires permission
  for the <code>lambda:UploadFunction</code> action.</p>
paths./2014-11-13/functions/{FunctionName}.put.operationId: UploadFunction
paths./2014-11-13/functions/{FunctionName}.put.parameters.length: 3
paths./2014-11-13/functions/{FunctionName}.put.parameters[0].in: body
paths./2014-11-13/functions/{FunctionName}.put.parameters[0].name: body
paths./2014-11-13/functions/{FunctionName}.put.parameters[0].required: true
paths./2014-11-13/functions/{FunctionName}.put.parameters[0].schema.$ref: '#/definitions/UploadFunctionRequest'
paths./2014-11-13/functions/{FunctionName}.put.parameters[1].in: path
paths./2014-11-13/functions/{FunctionName}.put.parameters[1].name: FunctionName
paths./2014-11-13/functions/{FunctionName}.put.parameters[1].required: true
paths./2014-11-13/functions/{FunctionName}.put.parameters[1].type: string
paths./2014-11-13/functions/{FunctionName}.put.parameters[2].in: query
paths./2014-11-13/functions/{FunctionName}.put.parameters[2].name: FunctionName
paths./2014-11-13/functions/{FunctionName}.put.parameters[2].type: string
paths./2014-11-13/functions/{FunctionName}.put.responses.201.description: Success
paths./2014-11-13/functions/{FunctionName}.put.responses.201.schema.$ref: '#/definitions/FunctionConfiguration'
paths./2014-11-13/functions/{FunctionName}.put.responses.400.description: InvalidParameterValueException
paths./2014-11-13/functions/{FunctionName}.put.responses.400.schema.$ref: '#/definitions/InvalidParameterValueException'
paths./2014-11-13/functions/{FunctionName}.put.responses.400.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}.put.responses.404.description: ResourceNotFoundException
paths./2014-11-13/functions/{FunctionName}.put.responses.404.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./2014-11-13/functions/{FunctionName}.put.responses.404.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}.put.responses.500.description: ServiceException
paths./2014-11-13/functions/{FunctionName}.put.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/functions/{FunctionName}.put.responses.500.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/configuration.parameters.length: 9
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/functions/{FunctionName}/configuration.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/functions/{FunctionName}/configuration.put.description: <p>Updates
  the configuration parameters for the specified Lambda function by using the values
  provided in the request. You provide only the parameters you want to change. This
  operation must only be used on an existing Lambda function and cannot be used to
  update the function's code. </p> <p>This operation requires permission for the <code>lambda:UpdateFunctionConfiguration</code>
  action.</p>
paths./2014-11-13/functions/{FunctionName}/configuration.put.operationId: UpdateFunctionConfiguration
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters.length: 3
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[0].in: body
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[0].name: body
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[0].required: true
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[0].schema.$ref: '#/definitions/UpdateFunctionConfigurationRequest'
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[1].in: path
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[1].name: FunctionName
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[1].required: true
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[1].type: string
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[2].in: query
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[2].name: FunctionName
paths./2014-11-13/functions/{FunctionName}/configuration.put.parameters[2].type: string
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.200.description: Success
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.200.schema.$ref: '#/definitions/FunctionConfiguration'
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.400.description: InvalidParameterValueException
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.400.schema.$ref: '#/definitions/InvalidParameterValueException'
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.400.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.404.description: ResourceNotFoundException
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.404.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.404.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.500.description: ServiceException
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/functions/{FunctionName}/configuration.put.responses.500.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters.length: 9
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[0].$ref: '#/parameters/Action'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[1].$ref: '#/parameters/Version'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.description: <p>Submits
  an invocation request to AWS Lambda. Upon receiving the request, Lambda executes
  the specified function asynchronously. To see the logs generated by the Lambda function
  execution, see the CloudWatch logs console.</p> <p>This operation requires permission
  for the <code>lambda:InvokeAsync</code> action.</p>
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.operationId: InvokeAsync
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters.length: 3
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[0].in: body
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[0].name: body
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[0].required: true
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[0].schema.$ref: '#/definitions/InvokeAsyncRequest'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[1].in: path
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[1].name: FunctionName
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[1].required: true
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[1].type: string
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[2].in: query
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[2].name: FunctionName
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.parameters[2].type: string
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.202.description: Success
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.202.schema.$ref: '#/definitions/InvokeAsyncResponse'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.400.description: InvalidRequestContentException
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.400.schema.$ref: '#/definitions/InvalidRequestContentException'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.400.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.404.description: ResourceNotFoundException
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.404.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.404.x-aws-exception: true
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.500.description: ServiceException
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.500.schema.$ref: '#/definitions/ServiceException'
paths./2014-11-13/functions/{FunctionName}/invoke-async/.post.responses.500.x-aws-exception: true
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: http
security.length: 1
security[0].hmac.length: 0
securityDefinitions.hmac.description: Amazon Signature authorization v4
securityDefinitions.hmac.in: header
securityDefinitions.hmac.name: Authorization
securityDefinitions.hmac.type: apiKey
securityDefinitions.hmac.x-amazon-apigateway-authtype: awsSigv4
swagger: "2.0"
x-hasEquivalentPaths: true
