syntax = "proto3";

import "google/api/annotations.proto";

package amazonimport/exportsnowball;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelClusterRequest body = 10;
}

message Post#CancelJobRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelJobRequest body = 10;
}

message Post#CreateAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateAddressRequest body = 10;
}

message Post#CreateClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateClusterRequest body = 10;
}

message Post#CreateJobRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateJobRequest body = 10;
}

message Post#DescribeAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAddressRequest body = 10;
}

message Post#DescribeAddressesRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeAddressesRequest body = 12;
}

message Post#DescribeClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeClusterRequest body = 10;
}

message Post#DescribeJobRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeJobRequest body = 10;
}

message Post#GetJobManifestRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetJobManifestRequest body = 10;
}

message Post#GetJobUnlockCodeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetJobUnlockCodeRequest body = 10;
}

message Post#GetSnowballUsageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetSnowballUsageRequest body = 10;
}

message Post#ListClusterJobsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListClusterJobsRequest body = 10;
}

message Post#ListClustersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListClustersRequest body = 10;
}

message Post#ListJobsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListJobsRequest body = 12;
}

message Post#UpdateClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateClusterRequest body = 10;
}

message Post#UpdateJobRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateJobRequest body = 10;
}

message Address {
    // The unique ID for an address.
    string AddressId = 1;
    // The city in an address that a Snowball is to be delivered to.
    string City = 2;
    // The name of the company to receive a Snowball at an address.
    string Company = 3;
    // The country in an address that a Snowball is to be delivered to.
    string Country = 4;
    // If the address you are creating is a primary address, then set this option to true. This field is not supported in most regions.
    boolean IsRestricted = 5;
    // This field is no longer used and the value is ignored.
    string Landmark = 6;
    // The name of a person to receive a Snowball at an address.
    string Name = 7;
    // The phone number associated with an address that a Snowball is to be delivered to.
    string PhoneNumber = 8;
    // The postal code in an address that a Snowball is to be delivered to.
    string PostalCode = 9;
    // This field is no longer used and the value is ignored.
    string PrefectureOrDistrict = 10;
    // The state or province in an address that a Snowball is to be delivered to.
    string StateOrProvince = 11;
    // The first line in a street address that a Snowball is to be delivered to.
    string Street1 = 12;
    // The second line in a street address that a Snowball is to be delivered to.
    string Street2 = 13;
    // The third line in a street address that a Snowball is to be delivered to.
    string Street3 = 14;
}



repeated Address AddressList = 1



message CancelClusterRequest {
    // The 39-character ID for the cluster that you want to cancel, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.
    string ClusterId = 1;
}

message CancelClusterResult {
}

message CancelJobRequest {
    // The 39-character job ID for the job that you want to cancel, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 1;
}

message CancelJobResult {
}

message ClusterLimitExceededException {
    string Message = 1;
}

message ClusterListEntry {
    // The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.
    string ClusterId = 1;
    // The current state of this cluster. For information about the state of a specific node, see <a>JobListEntry$JobState</a>.
    ClusterState ClusterState = 2;
    // The creation date for this cluster.
    string CreationDate = 3;
    // Defines an optional description of the cluster, for example <code>Environmental Data Cluster-01</code>.
    string Description = 4;
}

repeated ClusterListEntry ClusterListEntryList = 1

message ClusterMetadata {
    // The automatically generated ID for a specific address.
    string AddressId = 1;
    // The automatically generated ID for a cluster.
    string ClusterId = 2;
    // The current status of the cluster.
    ClusterState ClusterState = 3;
    // The creation date for this cluster.
    string CreationDate = 4;
    // The optional description of the cluster.
    string Description = 5;
    // The ID of the address that you want a cluster shipped to, after it will be shipped to its primary address. This field is not supported in most regions.
    string ForwardingAddressId = 6;
    // The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.
    JobType JobType = 7;
    // The <code>KmsKeyARN</code> Amazon Resource Name (ARN) associated with this cluster. This ARN was created using the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS Key Management Service (AWS KMS).
    string KmsKeyARN = 8;
    // The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
    Notification Notification = 9;
    // The arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.
    JobResource Resources = 10;
    // The role ARN associated with this cluster. This ARN was created using the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).
    string RoleARN = 11;
    // <p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each Snowball Edge appliance, rather it represents how quickly each appliance moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, appliances shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snowball Edges shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snowball Edges are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>
    ShippingOption ShippingOption = 12;
    // The type of AWS Snowball appliance to use for this cluster. Currently, the only supported appliance type for cluster jobs is <code>EDGE</code>.
    SnowballType SnowballType = 13;
}

enum ClusterState {
    AWAITINGQUORUM = 0;
    PENDING = 1;
    INUSE = 2;
    COMPLETE = 3;
    CANCELLED = 4;
}

message CreateAddressRequest {
    // The address that you want the Snowball shipped to.
    Address Address = 1;
}

message CreateAddressResult {
    // The automatically generated ID for a specific address. You'll use this ID when you create a job to specify which address you want the Snowball for that job shipped to.
    string AddressId = 1;
}

message CreateClusterRequest {
    // The ID for the address that you want the cluster shipped to.&gt;
    string AddressId = 1;
    // An optional description of this specific cluster, for example <code>Environmental Data Cluster-01</code>.
    string Description = 2;
    // The forwarding address ID for a cluster. This field is not supported in most regions.
    string ForwardingAddressId = 3;
    // The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.
    JobType JobType = 4;
    // The <code>KmsKeyARN</code> value that you want to associate with this cluster. <code>KmsKeyARN</code> values are created by using the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS Key Management Service (AWS KMS).
    string KmsKeyARN = 5;
    // The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.
    Notification Notification = 6;
    // The resources associated with the cluster job. These resources include Amazon S3 buckets and optional AWS Lambda functions written in the Python language.
    JobResource Resources = 7;
    // The <code>RoleARN</code> that you want to associate with this cluster. <code>RoleArn</code> values are created by using the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).
    string RoleARN = 8;
    // <p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each Snowball Edge appliance, rather it represents how quickly each appliance moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, appliances shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snowball Edges shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snowball Edges are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>
    ShippingOption ShippingOption = 9;
    // The type of AWS Snowball appliance to use for this cluster. Currently, the only supported appliance type for cluster jobs is <code>EDGE</code>.
    SnowballType SnowballType = 10;
}

message CreateClusterResult {
    // The automatically generated ID for a cluster.
    string ClusterId = 1;
}

message CreateJobRequest {
    // The ID for the address that you want the Snowball shipped to.
    string AddressId = 1;
    // The ID of a cluster. If you're creating a job for a node in a cluster, you need to provide only this <code>clusterId</code> value. The other job attributes are inherited from the cluster.
    string ClusterId = 2;
    // Defines an optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.
    string Description = 3;
    // The forwarding address ID for a job. This field is not supported in most regions.
    string ForwardingAddressId = 4;
    // Defines the type of job that you're creating.
    JobType JobType = 5;
    // The <code>KmsKeyARN</code> that you want to associate with this job. <code>KmsKeyARN</code>s are created using the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> AWS Key Management Service (KMS) API action.
    string KmsKeyARN = 6;
    // Defines the Amazon Simple Notification Service (Amazon SNS) notification settings for this job.
    Notification Notification = 7;
    // <p>Defines the Amazon S3 buckets associated with this job.</p> <p>With <code>IMPORT</code> jobs, you specify the bucket or buckets that your transferred data will be imported into.</p> <p>With <code>EXPORT</code> jobs, you specify the bucket or buckets that your transferred data will be exported from. Optionally, you can also specify a <code>KeyRange</code> value. If you choose to export a range, you define the length of the range by providing either an inclusive <code>BeginMarker</code> value, an inclusive <code>EndMarker</code> value, or both. Ranges are UTF-8 binary sorted.</p>
    JobResource Resources = 8;
    // The <code>RoleARN</code> that you want to associate with this job. <code>RoleArn</code>s are created using the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> AWS Identity and Access Management (IAM) API action.
    string RoleARN = 9;
    // <p>The shipping speed for this job. This speed doesn't dictate how soon you'll get the Snowball, rather it represents how quickly the Snowball moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snowballs shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snowballs shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snowballs are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>
    ShippingOption ShippingOption = 10;
    // If your job is being created in one of the US regions, you have the option of specifying what size Snowball you'd like for this job. In all other regions, Snowballs come with 80 TB in storage capacity.
    SnowballCapacity SnowballCapacityPreference = 11;
    // The type of AWS Snowball appliance to use for this job. Currently, the only supported appliance type for cluster jobs is <code>EDGE</code>.
    SnowballType SnowballType = 12;
}

message CreateJobResult {
    // The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 1;
}

message DataTransfer {
    // The number of bytes transferred between a Snowball and Amazon S3.
    integer BytesTransferred = 1;
    // The number of objects transferred between a Snowball and Amazon S3.
    integer ObjectsTransferred = 2;
    // The total bytes of data for a transfer between a Snowball and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.
    integer TotalBytes = 3;
    // The total number of objects for a transfer between a Snowball and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.
    integer TotalObjects = 4;
}

message DescribeAddressRequest {
    // The automatically generated ID for a specific address.
    string AddressId = 1;
}

message DescribeAddressResult {
    // The address that you want the Snowball or Snowballs associated with a specific job to be shipped to.
    Address Address = 1;
}

message DescribeAddressesRequest {
    // The number of <code>ADDRESS</code> objects to return.
    integer MaxResults = 1;
    // HTTP requests are stateless. To identify what object comes "next" in the list of <code>ADDRESS</code> objects, you have the option of specifying a value for <code>NextToken</code> as the starting point for your list of returned addresses.
    string NextToken = 2;
}

message DescribeAddressesResult {
    // The Snowball shipping addresses that were created for this account.
    array Addresses = 1;
    // HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>DescribeAddresses</code> call, your list of returned addresses will start from this point in the array.
    string NextToken = 2;
}

message DescribeClusterRequest {
    // The automatically generated ID for a cluster.
    string ClusterId = 1;
}

message DescribeClusterResult {
    // Information about a specific cluster, including shipping information, cluster status, and other important metadata.
    ClusterMetadata ClusterMetadata = 1;
}

message DescribeJobRequest {
    // The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 1;
}

message DescribeJobResult {
    // Information about a specific job, including shipping information, job status, and other important metadata.
    JobMetadata JobMetadata = 1;
    // Information about a specific job part (in the case of an export job), including shipping information, job status, and other important metadata.
    array SubJobMetadata = 2;
}

message EventTriggerDefinition {
    // The Amazon Resource Name (ARN) for any local Amazon S3 resource that is an AWS Lambda function's event trigger associated with this job.
    string EventResourceARN = 1;
}

repeated EventTriggerDefinition EventTriggerDefinitionList = 1

message GetJobManifestRequest {
    // The ID for a job that you want to get the manifest file for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 1;
}

message GetJobManifestResult {
    // The Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value.
    string ManifestURI = 1;
}

message GetJobUnlockCodeRequest {
    // The ID for the job that you want to get the <code>UnlockCode</code> value for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 1;
}

message GetJobUnlockCodeResult {
    // The <code>UnlockCode</code> value for the specified job. The <code>UnlockCode</code> value can be accessed for up to 90 days after the job has been created.
    string UnlockCode = 1;
}

message GetSnowballUsageRequest {
}

message GetSnowballUsageResult {
    // The service limit for number of Snowballs this account can have at once. The default service limit is 1 (one).
    integer SnowballLimit = 1;
    // The number of Snowballs that this account is currently using.
    integer SnowballsInUse = 2;
}

message InvalidAddressException {
    string Message = 1;
}

message InvalidInputCombinationException {
    string Message = 1;
}

message InvalidJobStateException {
    string Message = 1;
}

message InvalidNextTokenException {
    string Message = 1;
}

message InvalidResourceException {
    string Message = 1;
}

message JobListEntry {
    // The creation date for this job.
    string CreationDate = 1;
    // The optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.
    string Description = 2;
    // A value that indicates that this job is a master job. A master job represents a successful request to create an export job. Master jobs aren't associated with any Snowballs. Instead, each master job will have at least one job part, and each job part is associated with a Snowball. It might take some time before the job parts associated with a particular master job are listed, because they are created after the master job is created.
    boolean IsMaster = 3;
    // The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 4;
    // The current state of this job.
    JobState JobState = 5;
    // The type of job.
    JobType JobType = 6;
    // The type of appliance used with this job.
    SnowballType SnowballType = 7;
}

repeated JobListEntry JobListEntryList = 1

message JobLogs {
    // A link to an Amazon S3 presigned URL where the job completion report is located.
    string JobCompletionReportURI = 1;
    // A link to an Amazon S3 presigned URL where the job failure log is located.
    string JobFailureLogURI = 2;
    // A link to an Amazon S3 presigned URL where the job success log is located.
    string JobSuccessLogURI = 3;
}

message JobMetadata {
    // The ID for the address that you want the Snowball shipped to.
    string AddressId = 1;
    // The 39-character ID for the cluster, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.
    string ClusterId = 2;
    // The creation date for this job.
    string CreationDate = 3;
    // A value that defines the real-time status of a Snowball's data transfer while the appliance is at AWS. This data is only available while a job has a <code>JobState</code> value of <code>InProgress</code>, for both import and export jobs.
    DataTransfer DataTransferProgress = 4;
    // The description of the job, provided at job creation.
    string Description = 5;
    // The ID of the address that you want a job shipped to, after it will be shipped to its primary address. This field is not supported in most regions.
    string ForwardingAddressId = 6;
    // The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 7;
    // Links to Amazon S3 presigned URLs for the job report and logs. For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snowball for your job part is being delivered to you.
    JobLogs JobLogInfo = 8;
    // The current status of the jobs.
    JobState JobState = 9;
    // The type of job.
    JobType JobType = 10;
    // The Amazon Resource Name (ARN) for the AWS Key Management Service (AWS KMS) key associated with this job. This ARN was created using the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS KMS.
    string KmsKeyARN = 11;
    // The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.
    Notification Notification = 12;
    // An array of <code>S3Resource</code> objects. Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into.
    JobResource Resources = 13;
    // The role ARN associated with this job. This ARN was created using the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).
    string RoleARN = 14;
    // A job's shipping information, including inbound and outbound tracking numbers and shipping speed options.
    ShippingDetails ShippingDetails = 15;
    // The Snowball capacity preference for this job, specified at job creation. In US regions, you can choose between 50 TB and 80 TB Snowballs. All other regions use 80 TB capacity Snowballs.
    SnowballCapacity SnowballCapacityPreference = 16;
    // The type of appliance used with this job.
    SnowballType SnowballType = 17;
}

repeated JobMetadata JobMetadataList = 1

message JobResource {
    // The Python-language Lambda functions for this job.
    array LambdaResources = 1;
    // An array of <code>S3Resource</code> objects.
    array S3Resources = 2;
}

enum JobState {
    NEW = 0;
    PREPARINGAPPLIANCE = 1;
    PREPARINGSHIPMENT = 2;
    INTRANSITTOCUSTOMER = 3;
    WITHCUSTOMER = 4;
    INTRANSITTOAWS = 5;
    WITHAWS = 6;
    INPROGRESS = 7;
    COMPLETE = 8;
    CANCELLED = 9;
    LISTING = 10;
    PENDING = 11;
}

repeated JobState JobStateList = 1

enum JobType {
    IMPORT = 0;
    EXPORT = 1;
    LOCAL_USE = 2;
}

message KMSRequestFailedException {
    string Message = 1;
}

message KeyRange {
    // The key that starts an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.
    string BeginMarker = 1;
    // The key that ends an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.
    string EndMarker = 2;
}

message LambdaResource {
    // The array of ARNs for <a>S3Resource</a> objects to trigger the <a>LambdaResource</a> objects associated with this job.
    array EventTriggers = 1;
    // An Amazon Resource Name (ARN) that represents an AWS Lambda function to be triggered by PUT object actions on the associated local Amazon S3 resource.
    string LambdaArn = 2;
}

repeated LambdaResource LambdaResourceList = 1

message ListClusterJobsRequest {
    // The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.
    string ClusterId = 1;
    // The number of <code>JobListEntry</code> objects to return.
    integer MaxResults = 2;
    // HTTP requests are stateless. To identify what object comes "next" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.
    string NextToken = 3;
}

message ListClusterJobsResult {
    // Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs.
    array JobListEntries = 1;
    // HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ListClusterJobsResult</code> call, your list of returned jobs will start from this point in the array.
    string NextToken = 2;
}

message ListClustersRequest {
    // The number of <code>ClusterListEntry</code> objects to return.
    integer MaxResults = 1;
    // HTTP requests are stateless. To identify what object comes "next" in the list of <code>ClusterListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.
    string NextToken = 2;
}

message ListClustersResult {
    // Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.
    array ClusterListEntries = 1;
    // HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ClusterListEntry</code> call, your list of returned clusters will start from this point in the array.
    string NextToken = 2;
}

message ListJobsRequest {
    // The number of <code>JobListEntry</code> objects to return.
    integer MaxResults = 1;
    // HTTP requests are stateless. To identify what object comes "next" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.
    string NextToken = 2;
}

message ListJobsResult {
    // Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs.
    array JobListEntries = 1;
    // HTTP requests are stateless. If you use this automatically generated <code>NextToken</code> value in your next <code>ListJobs</code> call, your returned <code>JobListEntry</code> objects will start from this point in the array.
    string NextToken = 2;
}

message Notification {
    // The list of job states that will trigger a notification for this job.
    array JobStatesToNotify = 1;
    // Any change in job state will trigger a notification for this job.
    boolean NotifyAll = 2;
    // <p>The new SNS <code>TopicArn</code> that you want to associate with this job. You can create Amazon Resource Names (ARNs) for topics by using the <a href="http://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html">CreateTopic</a> Amazon SNS API action.</p> <p>You can subscribe email addresses to an Amazon SNS topic through the AWS Management Console, or by using the <a href="http://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html">Subscribe</a> AWS Simple Notification Service (SNS) API action.</p>
    string SnsTopicARN = 3;
}

message S3Resource {
    // The Amazon Resource Name (ARN) of an Amazon S3 bucket.
    string BucketArn = 1;
    // For export jobs, you can provide an optional <code>KeyRange</code> within a specific Amazon S3 bucket. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.
    KeyRange KeyRange = 2;
}

repeated S3Resource S3ResourceList = 1

message Shipment {
    // Status information for a shipment.
    string Status = 1;
    // <p>The tracking number for this job. Using this tracking number with your region's carrier's website, you can track a Snowball as the carrier transports it.</p> <p>For India, the carrier is Amazon Logistics. For all other regions, UPS is the carrier.</p>
    string TrackingNumber = 2;
}

message ShippingDetails {
    // The <code>Status</code> and <code>TrackingNumber</code> values for a Snowball being delivered to the address that you specified for a particular job.
    Shipment InboundShipment = 1;
    // The <code>Status</code> and <code>TrackingNumber</code> values for a Snowball being returned to AWS for a particular job.
    Shipment OutboundShipment = 2;
    // <p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snowball from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snowballs shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snowballs shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snowballs are delivered in one to seven days.</p> </li> <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li> </ul>
    ShippingOption ShippingOption = 3;
}

enum ShippingOption {
    SECOND_DAY = 0;
    NEXT_DAY = 1;
    EXPRESS = 2;
    STANDARD = 3;
}

enum SnowballCapacity {
    T50 = 0;
    T80 = 1;
    T100 = 2;
    NOPREFERENCE = 3;
}

enum SnowballType {
    STANDARD = 0;
    EDGE = 1;
}

message UnsupportedAddressException {
    string Message = 1;
}

message UpdateClusterRequest {
    // The ID of the updated <a>Address</a> object.
    string AddressId = 1;
    // The cluster ID of the cluster that you want to update, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.
    string ClusterId = 2;
    // The updated description of this cluster.
    string Description = 3;
    // The updated ID for the forwarding address for a cluster. This field is not supported in most regions.
    string ForwardingAddressId = 4;
    // The new or updated <a>Notification</a> object.
    Notification Notification = 5;
    // The updated arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.
    JobResource Resources = 6;
    // The new role Amazon Resource Name (ARN) that you want to associate with this cluster. To create a role ARN, use the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in AWS Identity and Access Management (IAM).
    string RoleARN = 7;
    // The updated shipping option value of this cluster's <a>ShippingDetails</a> object.
    ShippingOption ShippingOption = 8;
}

message UpdateClusterResult {
}

message UpdateJobRequest {
    // The ID of the updated <a>Address</a> object.
    string AddressId = 1;
    // The updated description of this job's <a>JobMetadata</a> object.
    string Description = 2;
    // The updated ID for the forwarding address for a job. This field is not supported in most regions.
    string ForwardingAddressId = 3;
    // The job ID of the job that you want to update, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.
    string JobId = 4;
    // The new or updated <a>Notification</a> object.
    Notification Notification = 5;
    // The updated <a>S3Resource</a> object (for a single Amazon S3 bucket or key range), or the updated <a>JobResource</a> object (for multiple buckets or key ranges).
    JobResource Resources = 6;
    // The new role Amazon Resource Name (ARN) that you want to associate with this job. To create a role ARN, use the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a>AWS Identity and Access Management (IAM) API action.
    string RoleARN = 7;
    // The updated shipping option value of this job's <a>ShippingDetails</a> object.
    ShippingOption ShippingOption = 8;
    // The updated <code>SnowballCapacityPreference</code> of this job's <a>JobMetadata</a> object. The 50 TB Snowballs are only available in the US regions.
    SnowballCapacity SnowballCapacityPreference = 9;
}

message UpdateJobResult {
}

service AmazonImport/ExportSnowballService {
    // Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.
    rpc Post(PostRequest) returns (CancelClusterResult) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action will return a job's <code>JobState</code> as part of the response element data returned.
    rpc Post#CancelJob(Post#CancelJobRequest) returns (CancelJobResult) {
      option (google.api.http) = {
        post: "//#CancelJob"
        body: "body"
      };
    }
    // Creates an address for a Snowball to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.
    rpc Post#CreateAddress(Post#CreateAddressRequest) returns (CreateAddressResult) {
      option (google.api.http) = {
        post: "//#CreateAddress"
        body: "body"
      };
    }
    // Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.
    rpc Post#CreateCluster(Post#CreateClusterRequest) returns (CreateClusterResult) {
      option (google.api.http) = {
        post: "//#CreateCluster"
        body: "body"
      };
    }
    // Creates a job to import or export data between Amazon S3 and your on-premises data center. Your AWS account must have the right trust policies and permissions in place to create a job for Snowball. If you're creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster.
    rpc Post#CreateJob(Post#CreateJobRequest) returns (CreateJobResult) {
      option (google.api.http) = {
        post: "//#CreateJob"
        body: "body"
      };
    }
    // Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.
    rpc Post#DescribeAddress(Post#DescribeAddressRequest) returns (DescribeAddressResult) {
      option (google.api.http) = {
        post: "//#DescribeAddress"
        body: "body"
      };
    }
    // Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.
    rpc Post#DescribeAddresses(Post#DescribeAddressesRequest) returns (DescribeAddressesResult) {
      option (google.api.http) = {
        post: "//#DescribeAddresses"
        body: "body"
      };
    }
    // Returns information about a specific cluster including shipping information, cluster status, and other important metadata.
    rpc Post#DescribeCluster(Post#DescribeClusterRequest) returns (DescribeClusterResult) {
      option (google.api.http) = {
        post: "//#DescribeCluster"
        body: "body"
      };
    }
    // Returns information about a specific job including shipping information, job status, and other important metadata.
    rpc Post#DescribeJob(Post#DescribeJobRequest) returns (DescribeJobResult) {
      option (google.api.http) = {
        post: "//#DescribeJob"
        body: "body"
      };
    }
    // <p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you'll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snowball through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snowball associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 90 days after the job is created.</p>
    rpc Post#GetJobManifest(Post#GetJobManifestRequest) returns (GetJobManifestResult) {
      option (google.api.http) = {
        post: "//#GetJobManifest"
        body: "body"
      };
    }
    // <p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 90 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snowball through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snowball associated with that job.</p>
    rpc Post#GetJobUnlockCode(Post#GetJobUnlockCodeRequest) returns (GetJobUnlockCodeResult) {
      option (google.api.http) = {
        post: "//#GetJobUnlockCode"
        body: "body"
      };
    }
    // <p>Returns information about the Snowball service limit for your account, and also the number of Snowballs your account has in use.</p> <p>The default service limit for the number of Snowballs that you can have at one time is 1. If you want to increase your service limit, contact AWS Support.</p>
    rpc Post#GetSnowballUsage(Post#GetSnowballUsageRequest) returns (GetSnowballUsageResult) {
      option (google.api.http) = {
        post: "//#GetSnowballUsage"
        body: "body"
      };
    }
    // Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job's state, a job's ID, and other information.
    rpc Post#ListClusterJobs(Post#ListClusterJobsRequest) returns (ListClusterJobsResult) {
      option (google.api.http) = {
        post: "//#ListClusterJobs"
        body: "body"
      };
    }
    // Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.
    rpc Post#ListClusters(Post#ListClustersRequest) returns (ListClustersResult) {
      option (google.api.http) = {
        post: "//#ListClusters"
        body: "body"
      };
    }
    // Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.
    rpc Post#ListJobs(Post#ListJobsRequest) returns (ListJobsResult) {
      option (google.api.http) = {
        post: "//#ListJobs"
        body: "body"
      };
    }
    // While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.
    rpc Post#UpdateCluster(Post#UpdateClusterRequest) returns (UpdateClusterResult) {
      option (google.api.http) = {
        post: "//#UpdateCluster"
        body: "body"
      };
    }
    // While a job's <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.
    rpc Post#UpdateJob(Post#UpdateJobRequest) returns (UpdateJobResult) {
      option (google.api.http) = {
        post: "//#UpdateJob"
        body: "body"
      };
    }
}
