syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package amazonapigateway;

message GetApikeysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetApiKeysRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
}

message PostApikeysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportApiKeysRequest body = 10;
}

message GetClientcertificatesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetClientCertificatesRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
}

message GetDomainnamesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetDomainNamesRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
}

message GetDomainnamesDomain_nameBasepathmappingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetBasePathMappingsRequest body = 10;
    string domain_name = 11;
    // Pagination limit
    string limit = 12;
    // Pagination token
    string position = 13;
}

message GetRestapisRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetRestApisRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
}

message GetRestapisRestapi_idAuthorizersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetAuthorizersRequest body = 10;
    string restapi_id = 11;
}

message GetRestapisRestapi_idDeploymentsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetDeploymentsRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
    string restapi_id = 13;
}

message PutRestapisRestapi_idDocumentationPartsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportDocumentationPartsRequest body = 10;
    string restapi_id = 11;
}

message GetRestapisRestapi_idDocumentationVersionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetDocumentationVersionsRequest body = 10;
    string restapi_id = 11;
}

message GetRestapisRestapi_idGatewayresponsesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetGatewayResponsesRequest body = 10;
    string restapi_id = 11;
}

message GetRestapisRestapi_idModelsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetModelsRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
    string restapi_id = 13;
}

message GetRestapisRestapi_idModelsModel_nameDefault_templateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetModelTemplateRequest body = 10;
    string model_name = 11;
    string restapi_id = 12;
}

message GetRestapisRestapi_idRequestvalidatorsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetRequestValidatorsRequest body = 10;
    string restapi_id = 11;
}

message GetRestapisRestapi_idResourcesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetResourcesRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
    string restapi_id = 13;
}

message PostRestapisRestapi_idResourcesParent_idRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateResourceRequest body = 10;
    string parent_id = 11;
    string restapi_id = 12;
}

message GetRestapisRestapi_idStagesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetStagesRequest body = 10;
    string restapi_id = 11;
}

message DeleteRestapisRestapi_idStagesStage_nameCacheAuthorizersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    FlushStageAuthorizersCacheRequest body = 10;
    string restapi_id = 11;
    string stage_name = 12;
}

message DeleteRestapisRestapi_idStagesStage_nameCacheDataRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    FlushStageCacheRequest body = 10;
    string restapi_id = 11;
    string stage_name = 12;
}

message GetRestapisRestapi_idStagesStage_nameExportsExport_typeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetExportRequest body = 10;
    string export_type = 11;
    string restapi_id = 12;
    string stage_name = 13;
}

message GetRestapisRestapi_idStagesStage_nameSdksSdk_typeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetSdkRequest body = 10;
    string restapi_id = 11;
    string sdk_type = 12;
    string stage_name = 13;
}

message PostRestapisRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportRestApiRequest body = 10;
}

message GetSdktypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetSdkTypesRequest body = 10;
}

message GetSdktypesSdktype_idRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetSdkTypeRequest body = 10;
    string sdktype_id = 11;
}

message GetUsageplansRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetUsagePlansRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
}

message GetUsageplansUsageplanIdKeysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetUsagePlanKeysRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
    string usageplanId = 13;
}

message GetUsageplansUsageplanIdKeysKeyIdRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetUsagePlanKeyRequest body = 10;
    string keyId = 11;
    string usageplanId = 12;
}

message GetUsageplansUsageplanIdUsageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetUsageRequest body = 10;
    // Pagination limit
    string limit = 11;
    // Pagination token
    string position = 12;
    string usageplanId = 13;
}

message Account {
    // The version of the API keys used for the account.
    string apiKeyVersion = 1;
    // The ARN of an Amazon CloudWatch role for the current <a>Account</a>.
    string cloudwatchRoleArn = 2;
    // A list of features supported for the account. When usage plans are enabled, the features list will include an entry of <code>"UsagePlans"</code>.
    array features = 3;
    // Specifies the API request limits configured for the current <a>Account</a>.
    ThrottleSettings throttleSettings = 4;
}

message ApiKey {
    // The timestamp when the API Key was created.
    string createdDate = 1;
    // An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.
    string customerId = 2;
    // The description of the API Key.
    string description = 3;
    // Specifies whether the API Key can be used by callers.
    boolean enabled = 4;
    // The identifier of the API Key.
    string id = 5;
    // The timestamp when the API Key was last updated.
    string lastUpdatedDate = 6;
    // The name of the API Key.
    string name = 7;
    // A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.
    array stageKeys = 8;
    // The value of the API Key.
    string value = 9;
}

message ApiKeyIds {
    // A list of all the <a>ApiKey</a> identifiers.
    array ids = 1;
    // A list of warning messages.
    array warnings = 2;
}

message ApiKeys {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
    // A list of warning messages logged during the import of API keys when the <code>failOnWarnings</code> option is set to true.
    array warnings = 3;
}

enum ApiKeysFormat {
    CSV = 0;
}

message ApiStage {
    // API Id of the associated API stage in a usage plan.
    string apiId = 1;
    // API stage name of the associated API stage in a usage plan.
    string stage = 2;
}

message Authorizer {
    // Optional customer-defined field, used in Swagger imports and exports without functional impact.
    string authType = 1;
    // Specifies the required credentials as an IAM role for Amazon API Gateway to invoke the authorizer. To specify an IAM role for Amazon API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.
    string authorizerCredentials = 2;
    // The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.
    integer authorizerResultTtlInSeconds = 3;
    // Specifies the authorizer's Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.
    string authorizerUri = 4;
    // The identifier for the authorizer resource.
    string id = 5;
    // The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>. These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li><li>For a <code>COGNITO_USER_POOLS</code> authorizer, this property is not used.</li></ul>
    string identitySource = 6;
    // A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. Amazon API Gateway will match the incoming token from the client against the specified regular expression. It will invoke the authorizer's Lambda function there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.
    string identityValidationExpression = 7;
    // [Required] The name of the authorizer.
    string name = 8;
    // A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined.
    array providerARNs = 9;
    // [Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.
    AuthorizerType type = 10;
}

enum AuthorizerType {
    TOKEN = 0;
    REQUEST = 1;
    COGNITO_USER_POOLS = 2;
}

message Authorizers {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message BadRequestException {
    string message = 1;
}

message BasePathMapping {
    // The base path name that callers of the API must provide as part of the URL after the domain name.
    string basePath = 1;
    // The string identifier of the associated <a>RestApi</a>.
    string restApiId = 2;
    // The name of the associated stage.
    string stage = 3;
}

message BasePathMappings {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

enum CacheClusterSize {
    05 = 0;
    16 = 1;
    61 = 2;
    135 = 3;
    284 = 4;
    582 = 5;
    CACHECLUSTERSIZE_118 = 6;
    CACHECLUSTERSIZE_237 = 7;
}

enum CacheClusterStatu {
    CREATE_IN_PROGRESS = 0;
    AVAILABLE = 1;
    DELETE_IN_PROGRESS = 2;
    NOT_AVAILABLE = 3;
    FLUSH_IN_PROGRESS = 4;
}

message ClientCertificate {
    // The identifier of the client certificate.
    string clientCertificateId = 1;
    // The timestamp when the client certificate was created.
    string createdDate = 2;
    // The description of the client certificate.
    string description = 3;
    // The timestamp when the client certificate will expire.
    string expirationDate = 4;
    // The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .
    string pemEncodedCertificate = 5;
}

message ClientCertificates {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message ConflictException {
    string message = 1;
}

enum ContentHandlingStrategy {
    CONVERT_TO_BINARY = 0;
    CONVERT_TO_TEXT = 1;
}

message CreateApiKeyRequest {
    // An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.
    string customerId = 1;
    // The description of the <a>ApiKey</a>.
    string description = 2;
    // Specifies whether the <a>ApiKey</a> can be used by callers.
    boolean enabled = 3;
    // Specifies whether (<code>true</code>) or not (<code>false</code>) the key identifier is distinct from the created API key value.
    boolean generateDistinctId = 4;
    // The name of the <a>ApiKey</a>.
    string name = 5;
    // DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.
    array stageKeys = 6;
    // Specifies a value of the API key.
    string value = 7;
}

message CreateAuthorizerRequest {
    // Optional customer-defined field, used in Swagger imports and exports without functional impact.
    string authType = 1;
    // Specifies the required credentials as an IAM role for Amazon API Gateway to invoke the authorizer. To specify an IAM role for Amazon API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.
    string authorizerCredentials = 2;
    // The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.
    integer authorizerResultTtlInSeconds = 3;
    // Specifies the authorizer's Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.
    string authorizerUri = 4;
    // The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>. These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li><li>For a <code>COGNITO_USER_POOLS</code> authorizer, this property is not used.</li></ul>
    string identitySource = 5;
    // A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. Amazon API Gateway will match the incoming token from the client against the specified regular expression. It will invoke the authorizer's Lambda function there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.
    string identityValidationExpression = 6;
    // [Required] The name of the authorizer.
    string name = 7;
    // A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined.
    array providerARNs = 8;
    // [Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.
    AuthorizerType type = 9;
}

message CreateBasePathMappingRequest {
    // The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Leave this blank if you do not want callers to specify a base path name after the domain name.
    string basePath = 1;
    // The string identifier of the associated <a>RestApi</a>.
    string restApiId = 2;
    // The name of the API's stage that you want to use for this mapping. Leave this blank if you do not want callers to explicitly specify the stage name after any base path name.
    string stage = 3;
}

message CreateDeploymentRequest {
    // Enables a cache cluster for the <a>Stage</a> resource specified in the input.
    boolean cacheClusterEnabled = 1;
    // Specifies the cache cluster size for the <a>Stage</a> resource specified in the input, if a cache cluster is enabled.
    CacheClusterSize cacheClusterSize = 2;
    // The description for the <a>Deployment</a> resource to create.
    string description = 3;
    // The description of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.
    string stageDescription = 4;
    // The name of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.
    string stageName = 5;
    // A map that defines the stage variables for the <a>Stage</a> resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.
    array variables = 6;
}

message CreateDocumentationPartRequest {
    // [Required] The location of the targeted API entity of the to-be-created documentation part.
    DocumentationPartLocation location = 1;
    // [Required] The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only Swagger-compliant key-value pairs can be exported and, hence, published.
    string properties = 2;
}

message CreateDocumentationVersionRequest {
    // A description about the new documentation snapshot.
    string description = 1;
    // [Required] The version identifier of the new snapshot.
    string documentationVersion = 2;
    // The stage name to be associated with the new documentation snapshot.
    string stageName = 3;
}

message CreateDomainNameRequest {
    // The reference to an AWS-managed certificate. AWS Certificate Manager is the only supported source.
    string certificateArn = 1;
    // [Deprecated] The body of the server certificate provided by your certificate authority.
    string certificateBody = 2;
    // [Deprecated] The intermediate certificates and optionally the root certificate, one after the other without any blank lines. If you include the root certificate, your certificate chain must start with intermediate certificates and end with the root certificate. Use the intermediate certificates that were provided by your certificate authority. Do not include any intermediaries that are not in the chain of trust path.
    string certificateChain = 3;
    // The user-friendly name of the certificate.
    string certificateName = 4;
    // [Deprecated] Your certificate's private key.
    string certificatePrivateKey = 5;
    // (Required) The name of the <a>DomainName</a> resource.
    string domainName = 6;
}

message CreateModelRequest {
    // The content-type for the model.
    string contentType = 1;
    // The description of the model.
    string description = 2;
    // The name of the model. Must be alphanumeric.
    string name = 3;
    // The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model.
    string schema = 4;
}

message CreateRequestValidatorRequest {
    // The name of the to-be-created <a>RequestValidator</a>.
    string name = 1;
    // A Boolean flag to indicate whether to validate request body according to the configured model schema for the method (<code>true</code>) or not (<code>false</code>).
    boolean validateRequestBody = 2;
    // A Boolean flag to indicate whether to validate request parameters, <code>true</code>, or not <code>false</code>.
    boolean validateRequestParameters = 3;
}

message CreateResourceRequest {
    // The last path segment for this resource.
    string pathPart = 1;
}

message CreateRestApiRequest {
    // The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.
    array binaryMediaTypes = 1;
    // The ID of the <a>RestApi</a> that you want to clone from.
    string cloneFrom = 2;
    // The description of the <a>RestApi</a>.
    string description = 3;
    // The name of the <a>RestApi</a>.
    string name = 4;
    // A version identifier for the API.
    string version = 5;
}

message CreateStageRequest {
    // Whether cache clustering is enabled for the stage.
    boolean cacheClusterEnabled = 1;
    // The stage's cache cluster size.
    CacheClusterSize cacheClusterSize = 2;
    // The identifier of the <a>Deployment</a> resource for the <a>Stage</a> resource.
    string deploymentId = 3;
    // The description of the <a>Stage</a> resource.
    string description = 4;
    // The version of the associated API documentation.
    string documentationVersion = 5;
    // The name for the <a>Stage</a> resource.
    string stageName = 6;
    // A map that defines the stage variables for the new <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.
    array variables = 7;
}

message CreateUsagePlanKeyRequest {
    // The identifier of a <a>UsagePlanKey</a> resource for a plan customer.
    string keyId = 1;
    // The type of a <a>UsagePlanKey</a> resource for a plan customer.
    string keyType = 2;
}

message CreateUsagePlanRequest {
    // The associated API stages of the usage plan.
    array apiStages = 1;
    // The description of the usage plan.
    string description = 2;
    // The name of the usage plan.
    string name = 3;
    // The quota of the usage plan.
    QuotaSettings quota = 4;
    // The throttling limits of the usage plan.
    ThrottleSettings throttle = 5;
}

message DeleteApiKeyRequest {
}

message DeleteAuthorizerRequest {
}

message DeleteBasePathMappingRequest {
}

message DeleteClientCertificateRequest {
}

message DeleteDeploymentRequest {
}

message DeleteDocumentationPartRequest {
}

message DeleteDocumentationVersionRequest {
}

message DeleteDomainNameRequest {
}

message DeleteGatewayResponseRequest {
}

message DeleteIntegrationRequest {
}

message DeleteIntegrationResponseRequest {
}

message DeleteMethodRequest {
}

message DeleteMethodResponseRequest {
}

message DeleteModelRequest {
}

message DeleteRequestValidatorRequest {
}

message DeleteResourceRequest {
}

message DeleteRestApiRequest {
}

message DeleteStageRequest {
}

message DeleteUsagePlanKeyRequest {
}

message DeleteUsagePlanRequest {
}

message Deployment {
    // A summary of the <a>RestApi</a> at the date and time that the deployment resource was created.
    array apiSummary = 1;
    // The date and time that the deployment resource was created.
    string createdDate = 2;
    // The description for the deployment resource.
    string description = 3;
    // The identifier for the deployment resource.
    string id = 4;
}

message Deployments {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message DocumentationPart {
    // The <a>DocumentationPart</a> identifier, generated by Amazon API Gateway when the <code>DocumentationPart</code> is created.
    string id = 1;
    // The location of the API entity to which the documentation applies. Valid fields depend on the targeted API entity type. All the valid location fields are not required. If not explicitly specified, a valid location field is treated as a wildcard and associated documentation content may be inherited by matching entities, unless overridden.
    DocumentationPartLocation location = 2;
    // A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., <code>"{ \"description\": \"The API does ...\" }"</code>. Only Swagger-compliant documentation-related fields from the <literal>properties</literal> map are exported and, hence, published as part of the API entity definitions, while the original documentation parts are exported in a Swagger extension of <code>x-amazon-apigateway-documentation</code>.
    string properties = 3;
}

message DocumentationPartIds {
    // A list of the returned documentation part identifiers.
    array ids = 1;
    // A list of warning messages reported during import of documentation parts.
    array warnings = 2;
}

message DocumentationPartLocation {
    // The HTTP verb of a method. It is a valid field for the API entity types of <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any method. When an applicable child entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity's <code>method</code> attribute must match that of the parent entity exactly.
    string method = 1;
    // The name of the targeted API entity. It is a valid and required field for the API entity types of <code>AUTHORIZER</code>, <code>MODEL</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code> and <code>RESPONSE_HEADER</code>. It is an invalid field for any other entity type.
    string name = 2;
    // The URL path of the target. It is a valid field for the API entity types of <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>/</code> for the root resource. When an applicable child entity inherits the content of another entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity's <code>path</code> attribute must match that of the parent entity as a prefix.
    string path = 3;
    // The HTTP status code of a response. It is a valid field for the API entity types of <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any status code. When an applicable child entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity's <code>statusCode</code> attribute must match that of the parent entity exactly.
    string statusCode = 4;
    // The type of API entity to which the documentation content applies. It is a valid and required field for API entity types of <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Content inheritance does not apply to any entity of the <code>API</code>, <code>AUTHORIZER</code>, <code>METHOD</code>, <code>MODEL</code>, <code>REQUEST_BODY</code>, or <code>RESOURCE</code> type.
    DocumentationPartType type = 5;
}

enum DocumentationPartType {
    API = 0;
    AUTHORIZER = 1;
    MODEL = 2;
    RESOURCE = 3;
    METHOD = 4;
    PATH_PARAMETER = 5;
    QUERY_PARAMETER = 6;
    REQUEST_HEADER = 7;
    REQUEST_BODY = 8;
    RESPONSE = 9;
    RESPONSE_HEADER = 10;
    RESPONSE_BODY = 11;
}

message DocumentationParts {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message DocumentationVersion {
    // The date when the API documentation snapshot is created.
    string createdDate = 1;
    // The description of the API documentation snapshot.
    string description = 2;
    // The version identifier of the API documentation snapshot.
    string version = 3;
}

message DocumentationVersions {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message DomainName {
    // The reference to an AWS-managed certificate. AWS Certificate Manager is the only supported source.
    string certificateArn = 1;
    // The name of the certificate.
    string certificateName = 2;
    // The timestamp when the certificate was uploaded.
    string certificateUploadDate = 3;
    // The domain name of the Amazon CloudFront distribution. For more information, see the <a href="http://aws.amazon.com/documentation/cloudfront/" target="_blank">Amazon CloudFront documentation</a>.
    string distributionDomainName = 4;
    // The name of the <a>DomainName</a> resource.
    string domainName = 5;
}

message DomainNames {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message ExportResponse {
    // The binary blob response to <a>GetExport</a>, which contains the export.
    string body = 1;
}

message FlushStageAuthorizersCacheRequest {
}

message FlushStageCacheRequest {
}

message GatewayResponse {
    // A Boolean flag to indicate whether this <a>GatewayResponse</a> is the default gateway response (<code>true</code>) or not (<code>false</code>). A default gateway response is one generated by Amazon API Gateway without any customization by an API developer.
    boolean defaultResponse = 1;
    // Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.
    array responseParameters = 2;
    // Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.
    array responseTemplates = 3;
    // The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPES</li></ul>
    GatewayResponseType responseType = 4;
    // The HTTP status code for this <a>GatewayResponse</a>.
    string statusCode = 5;
}

enum GatewayResponseType {
    DEFAULT_4XX = 0;
    DEFAULT_5XX = 1;
    RESOURCE_NOT_FOUND = 2;
    UNAUTHORIZED = 3;
    INVALID_API_KEY = 4;
    ACCESS_DENIED = 5;
    AUTHORIZER_FAILURE = 6;
    AUTHORIZER_CONFIGURATION_ERROR = 7;
    INVALID_SIGNATURE = 8;
    EXPIRED_TOKEN = 9;
    MISSING_AUTHENTICATION_TOKEN = 10;
    INTEGRATION_FAILURE = 11;
    INTEGRATION_TIMEOUT = 12;
    API_CONFIGURATION_ERROR = 13;
    UNSUPPORTED_MEDIA_TYPE = 14;
    BAD_REQUEST_PARAMETERS = 15;
    BAD_REQUEST_BODY = 16;
    REQUEST_TOO_LARGE = 17;
    THROTTLED = 18;
    QUOTA_EXCEEDED = 19;
}

message GatewayResponses {
    // Returns the entire collection, because of no pagination support.
    array items = 1;
    string position = 2;
}

message GenerateClientCertificateRequest {
    // The description of the <a>ClientCertificate</a>.
    string description = 1;
}

message GetAccountRequest {
}

message GetApiKeyRequest {
}

message GetApiKeysRequest {
}

message GetAuthorizerRequest {
}

message GetAuthorizersRequest {
}

message GetBasePathMappingRequest {
}

message GetBasePathMappingsRequest {
}

message GetClientCertificateRequest {
}

message GetClientCertificatesRequest {
}

message GetDeploymentRequest {
}

message GetDeploymentsRequest {
}

message GetDocumentationPartRequest {
}

message GetDocumentationPartsRequest {
}

message GetDocumentationVersionRequest {
}

message GetDocumentationVersionsRequest {
}

message GetDomainNameRequest {
}

message GetDomainNamesRequest {
}

message GetExportRequest {
}

message GetGatewayResponseRequest {
}

message GetGatewayResponsesRequest {
}

message GetIntegrationRequest {
}

message GetIntegrationResponseRequest {
}

message GetMethodRequest {
}

message GetMethodResponseRequest {
}

message GetModelRequest {
}

message GetModelTemplateRequest {
}

message GetModelsRequest {
}

message GetRequestValidatorRequest {
}

message GetRequestValidatorsRequest {
}

message GetResourceRequest {
}

message GetResourcesRequest {
}

message GetRestApiRequest {
}

message GetRestApisRequest {
}

message GetSdkRequest {
}

message GetSdkTypeRequest {
}

message GetSdkTypesRequest {
}

message GetStageRequest {
}

message GetStagesRequest {
}

message GetUsagePlanKeyRequest {
}

message GetUsagePlanKeysRequest {
}

message GetUsagePlanRequest {
}

message GetUsagePlansRequest {
}

message GetUsageRequest {
}

message ImportApiKeysRequest {
    // The payload of the POST request to import API keys. For the payload format, see <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-key-file-format.html">API Key File Format</a>.
    string body = 1;
}

message ImportDocumentationPartsRequest {
    // [Required] Raw byte array representing the to-be-imported documentation parts. To import from a Swagger file, this is a JSON object.
    string body = 1;
}

message ImportRestApiRequest {
    // The POST request body containing external API definitions. Currently, only Swagger definition JSON files are supported. The maximum size of the API definition file is 2MB.
    string body = 1;
}

message Integration {
    // Specifies the integration's cache key parameters.
    array cacheKeyParameters = 1;
    // Specifies the integration's cache namespace.
    string cacheNamespace = 2;
    // <p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehaviors</code> is configured to support payload pass-through.</p>
    ContentHandlingStrategy contentHandling = 3;
    // Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string <code>arn:aws:iam::\*:user/\*</code>. To use resource-based permissions on supported AWS services, specify null.
    string credentials = 4;
    // Specifies the integration's HTTP method type.
    string httpMethod = 5;
    // <p>Specifies the integration's responses.</p> <div class="remarks"> <p/> <h4>Example: Get integration responses of a method</h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre> <h5>Response</h5> <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>
    array integrationResponses = 6;
    // <div> <p> Specifies how the method request body of an unmapped content type will be passed through the integration request to the back end without transformation. A content type is unmapped if no mapping template is defined in the integration or the content type does not match any of the mapped content types, as specified in <code>requestTemplates</code>. There are three valid values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>, and <code>NEVER</code>. </p> <ul> <li> <code>WHEN_NO_MATCH</code> passes the method request body through the integration request to the back end without transformation when the method request content type does not match any content type associated with the mapping templates defined in the integration request. </li> <li> <code>WHEN_NO_TEMPLATES</code> passes the method request body through the integration request to the back end without transformation when no mapping template is defined in the integration request. If a template is defined when this option is selected, the method request of an unmapped content-type will be rejected with an HTTP <code>415 Unsupported Media Type</code> response. </li> <li> <code>NEVER</code> rejects the method request with an HTTP <code>415 Unsupported Media Type</code> response when either the method request content type does not match any content type associated with the mapping templates defined in the integration request or no mapping template is defined in the integration request. </li> </ul> </div>
    string passthroughBehavior = 7;
    // A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.
    array requestParameters = 8;
    // Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.
    array requestTemplates = 9;
    // Specifies the integration's type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.
    IntegrationType type = 10;
    // Specifies the integration's Uniform Resource Identifier (URI). For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank">RFC-3986 specification</a>. For AWS integrations, the URI should be of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}</code>. <code>Region</code>, <code>subdomain</code> and <code>service</code> are used to determine the right endpoint. For AWS services that use the <code>Action=</code> query string parameter, <code>service_api</code> should be a valid action for the desired service. For RESTful AWS service APIs, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>.
    string uri = 11;
}

message IntegrationResponse {
    // <p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>
    ContentHandlingStrategy contentHandling = 1;
    // A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> is a valid and unique response header name and <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.
    array responseParameters = 2;
    // Specifies the templates used to transform the integration response body. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.
    array responseTemplates = 3;
    // Specifies the regular expression (regex) pattern used to choose an integration response based on the response from the back end. For example, if the success response returns nothing and the error response returns some string, you could use the <code>.+</code> regex to match error response. However, make sure that the error response does not contain any newline (<code>\n</code>) character in such cases. If the back end is an AWS Lambda function, the AWS Lambda function error header is matched. For all other HTTP and AWS back ends, the HTTP status code is matched.
    string selectionPattern = 4;
    // Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.
    string statusCode = 5;
}

enum IntegrationType {
    HTTP = 0;
    AWS = 1;
    MOCK = 2;
    HTTP_PROXY = 3;
    AWS_PROXY = 4;
}

message LimitExceededException {
    string message = 1;
}

repeated string ListOfARNs = 1

repeated ApiKey ListOfApiKey = 1

repeated ApiStage ListOfApiStage = 1

repeated Authorizer ListOfAuthorizer = 1

repeated BasePathMapping ListOfBasePathMapping = 1

repeated ClientCertificate ListOfClientCertificate = 1

repeated Deployment ListOfDeployment = 1

repeated DocumentationPart ListOfDocumentationPart = 1

repeated DocumentationVersion ListOfDocumentationVersion = 1

repeated DomainName ListOfDomainName = 1

repeated GatewayResponse ListOfGatewayResponse = 1

repeated integer ListOfLong = 1

repeated Model ListOfModel = 1

repeated PatchOperation ListOfPatchOperation = 1

repeated RequestValidator ListOfRequestValidator = 1

repeated Resource ListOfResource = 1

repeated RestApi ListOfRestApi = 1

repeated SdkConfigurationProperty ListOfSdkConfigurationProperty = 1

repeated SdkType ListOfSdkType = 1

repeated Stage ListOfStage = 1

repeated StageKey ListOfStageKeys = 1

repeated string ListOfString = 1

repeated array ListOfUsage = 1

repeated UsagePlan ListOfUsagePlan = 1

repeated UsagePlanKey ListOfUsagePlanKey = 1



message MapOfHeaderValue {
    string key = 1;
    string value = 2;
}
repeated MapOfHeaderValue MapOfHeaderValues = 1

message MapOfIntegrationResponse {
    string key = 1;
    IntegrationResponse value = 2;
}
repeated MapOfIntegrationResponse MapOfIntegrationResponse = 1

message MapOfKeyUsage {
    string key = 1;
    array value = 2;
}
repeated MapOfKeyUsage MapOfKeyUsages = 1

message MapOfMethod {
    string key = 1;
    Method value = 2;
}
repeated MapOfMethod MapOfMethod = 1

message MapOfMethodResponse {
    string key = 1;
    MethodResponse value = 2;
}
repeated MapOfMethodResponse MapOfMethodResponse = 1

message MapOfMethodSetting {
    string key = 1;
    MethodSetting value = 2;
}
repeated MapOfMethodSetting MapOfMethodSettings = 1

message MapOfMethodSnapshot {
    string key = 1;
    MethodSnapshot value = 2;
}
repeated MapOfMethodSnapshot MapOfMethodSnapshot = 1

message MapOfStringToBoolean {
    string key = 1;
    boolean value = 2;
}
repeated MapOfStringToBoolean MapOfStringToBoolean = 1

message MapOfStringToList {
    string key = 1;
    array value = 2;
}
repeated MapOfStringToList MapOfStringToList = 1

message MapOfStringToString {
    string key = 1;
    string value = 2;
}
repeated MapOfStringToString MapOfStringToString = 1

message Method {
    // A boolean flag specifying whether a valid <a>ApiKey</a> is required to invoke this method.
    boolean apiKeyRequired = 1;
    // The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.
    string authorizationType = 2;
    // The identifier of an <a>Authorizer</a> to use on this method. The <code>authorizationType</code> must be <code>CUSTOM</code>.
    string authorizerId = 3;
    // The method's HTTP verb.
    string httpMethod = 4;
    // <p>Gets the method's integration responsible for passing the client-submitted request to the back end and performing necessary transformations to make the request compliant with the back end.</p> <div class="remarks"> <p/> <h4>Example: </h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params('operand1')\",\n \"b\": \"$input.params('operand2')\", \n \"op\": \"$input.params('operator')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path('$'))\n{\n \"result\": \"$res.a, $res.b, $res.op => $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-integration.html">AWS CLI</a> </div>
    Integration methodIntegration = 5;
    // <p>Gets a method response associated with a given HTTP status code. </p> <div class="remarks"> <p>The collection of method responses are encapsulated in a key-value map, where the key is a response's HTTP status code and the value is a <a>MethodResponse</a> resource that specifies the response returned to the caller from the back end through the integration response.</p> <h4>Example: Get a 200 OK response of a GET method</h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-method-response.html">AWS CLI</a> </div>
    array methodResponses = 6;
    // A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in <a href="http://petstore-demo-endpoint.execute-api.com/petstore/pets">PetStore</a> example.
    string operationName = 7;
    // A key-value map specifying data schemas, represented by <a>Model</a> resources, (as the mapped value) of the request payloads of given content types (as the mapping key).
    array requestModels = 8;
    // A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key is a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or templates.
    array requestParameters = 9;
    // The identifier of a <a>RequestValidator</a> for request validation.
    string requestValidatorId = 10;
}

message MethodResponse {
    // Specifies the <a>Model</a> resources used for the response's content-type. Response models are represented as a key/value map, with a content-type as the key and a <a>Model</a> name as the value.
    array responseModels = 1;
    // A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header and the value specifies whether the associated method response header is required or not. The expression of the key must match the pattern <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. Amazon API Gateway passes certain integration response data to the method response headers specified here according to the mapping you prescribe in the API's <a>IntegrationResponse</a>. The integration response data that can be mapped include an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)
    array responseParameters = 2;
    // The method response's status code.
    string statusCode = 3;
}

message MethodSetting {
    // Specifies whether the cached responses are encrypted. The PATCH path for this setting is <code>/{method_setting_key}/caching/dataEncrypted</code>, and the value is a Boolean.
    boolean cacheDataEncrypted = 1;
    // Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/ttlInSeconds</code>, and the value is an integer.
    integer cacheTtlInSeconds = 2;
    // Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/enabled</code>, and the value is a Boolean.
    boolean cachingEnabled = 3;
    // Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/dataTrace</code>, and the value is a Boolean.
    boolean dataTraceEnabled = 4;
    // Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/loglevel</code>, and the available levels are <code>OFF</code>, <code>ERROR</code>, and <code>INFO</code>.
    string loggingLevel = 5;
    // Specifies whether Amazon CloudWatch metrics are enabled for this method. The PATCH path for this setting is <code>/{method_setting_key}/metrics/enabled</code>, and the value is a Boolean.
    boolean metricsEnabled = 6;
    // Specifies whether authorization is required for a cache invalidation request. The PATCH path for this setting is <code>/{method_setting_key}/caching/requireAuthorizationForCacheControl</code>, and the value is a Boolean.
    boolean requireAuthorizationForCacheControl = 7;
    // Specifies the throttling burst limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/burstLimit</code>, and the value is an integer.
    integer throttlingBurstLimit = 8;
    // Specifies the throttling rate limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/rateLimit</code>, and the value is a double.
    number throttlingRateLimit = 9;
    // Specifies how to handle unauthorized requests for cache invalidation. The PATCH path for this setting is <code>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</code>, and the available values are <code>FAIL_WITH_403</code>, <code>SUCCEED_WITH_RESPONSE_HEADER</code>, <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code>.
    UnauthorizedCacheControlHeaderStrategy unauthorizedCacheControlHeaderStrategy = 10;
}

message MethodSnapshot {
    // Specifies whether the method requires a valid <a>ApiKey</a>.
    boolean apiKeyRequired = 1;
    // The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.
    string authorizationType = 2;
}

message Model {
    // The content-type for the model.
    string contentType = 1;
    // The description of the model.
    string description = 2;
    // The identifier for the model resource.
    string id = 3;
    // The name of the model. Must be an alphanumeric string.
    string name = 4;
    // The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model. Do not include "\*/" characters in the description of any properties because such "\*/" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.
    string schema = 5;
}

message Models {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message NotFoundException {
    string message = 1;
}

enum Op {
    ADD = 0;
    REMOVE = 1;
    REPLACE = 2;
    MOVE = 3;
    COPY = 4;
    TEST = 5;
}

message PatchOperation {
    //  Not supported.
    string from = 1;
    // An update operation to be performed with this PATCH request. The valid value can be "add", "remove", or "replace". Not all valid operations are supported for a given resource. Support of the operations depends on specific operational contexts. Attempts to apply an unsupported operation on a resource will return an error message.
    Op op = 2;
    // The <code>op</code> operation's target, as identified by a <a href="https://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08">JSON Pointer</a> value that references a location within the targeted resource. For example, if the target resource has an updateable property of <code>{"name":"value"}</code>, the path for this property is <code>/name</code>. If the <code>name</code> property value is a JSON object (e.g., <code>{"name": {"child/name": "child-value"}}</code>), the path for the <code>child/name</code> property will be <code>/name/child~1name</code>. Any slash ("/") character appearing in path names must be escaped with "~1", as shown in the example above. Each <code>op</code> operation can have only one <code>path</code> associated with it.
    string path = 3;
    // The new target value of the update operation. When using AWS CLI to update a property of a JSON value, enclose the JSON object with a pair of single quotes in a Linux shell, e.g., '{"a": ...}'. In a Windows shell, see <a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using JSON for Parameters</a>.
    string value = 4;
}

message PathToMapOfMethodSnapshot {
    string key = 1;
    array value = 2;
}
repeated PathToMapOfMethodSnapshot PathToMapOfMethodSnapshot = 1



message PutGatewayResponseRequest {
    // <p><p>Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p></p>
    array responseParameters = 1;
    // <p><p>Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p></p>
    array responseTemplates = 2;
    // The HTTP status code of the <a>GatewayResponse</a>.
    string statusCode = 3;
}

message PutIntegrationRequest {
    // Specifies a put integration input's cache key parameters.
    array cacheKeyParameters = 1;
    // Specifies a put integration input's cache namespace.
    string cacheNamespace = 2;
    // <p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehaviors</code> is configured to support payload pass-through.</p>
    ContentHandlingStrategy contentHandling = 3;
    // Specifies whether credentials are required for a put integration.
    string credentials = 4;
    // Specifies a put integration HTTP method. When the integration type is HTTP or AWS, this field is required.
    string integrationHttpMethod = 5;
    // <p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the <code>requestTemplates</code> property on the Integration resource. There are three valid values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>, and <code>NEVER</code>. </p> <ul> <li><p><code>WHEN_NO_MATCH</code> passes the request body for unmapped content types through to the integration back end without transformation.</p></li> <li><p><code>NEVER</code> rejects unmapped content types with an HTTP 415 'Unsupported Media Type' response.</p></li> <li><p><code>WHEN_NO_TEMPLATES</code> allows pass-through when the integration has NO content types mapped to templates. However if there is at least one content type defined, unmapped content types will be rejected with the same 415 response.</p></li> </ul>
    string passthroughBehavior = 6;
    // A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.
    array requestParameters = 7;
    // Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.
    array requestTemplates = 8;
    // Specifies a put integration input's type.
    IntegrationType type = 9;
    // Specifies the integration's Uniform Resource Identifier (URI). For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank">RFC-3986 specification</a>. For AWS integrations, the URI should be of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}</code>. <code>Region</code>, <code>subdomain</code> and <code>service</code> are used to determine the right endpoint. For AWS services that use the <code>Action=</code> query string parameter, <code>service_api</code> should be a valid action for the desired service. For RESTful AWS service APIs, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>.
    string uri = 10;
}

message PutIntegrationResponseRequest {
    // <p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>
    ContentHandlingStrategy contentHandling = 1;
    // A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> must be a valid and unique response header name and <code>JSON-expression</code> a valid JSON expression without the <code>$</code> prefix.
    array responseParameters = 2;
    // Specifies a put integration response's templates.
    array responseTemplates = 3;
    // Specifies the selection pattern of a put integration response.
    string selectionPattern = 4;
}

message PutMethodRequest {
    // Specifies whether the method required a valid <a>ApiKey</a>.
    boolean apiKeyRequired = 1;
    // The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.
    string authorizationType = 2;
    // Specifies the identifier of an <a>Authorizer</a> to use on this Method, if the type is CUSTOM.
    string authorizerId = 3;
    // A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in <a href="http://petstore-demo-endpoint.execute-api.com/petstore/pets">PetStore</a> example.
    string operationName = 4;
    // Specifies the <a>Model</a> resources used for the request's content type. Request models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.
    array requestModels = 5;
    // A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key defines a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or body-mapping templates.
    array requestParameters = 6;
    // The identifier of a <a>RequestValidator</a> for validating the method request.
    string requestValidatorId = 7;
}

message PutMethodResponseRequest {
    // Specifies the <a>Model</a> resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.
    array responseModels = 1;
    // A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header name and the associated value is a Boolean flag indicating whether the method response parameter is required or not. The method response header names must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)
    array responseParameters = 2;
}

enum PutMode {
    MERGE = 0;
    OVERWRITE = 1;
}

message PutRestApiRequest {
    // The PUT request body containing external API definitions. Currently, only Swagger definition JSON files are supported. The maximum size of the API definition file is 2MB.
    string body = 1;
}

enum QuotaPeriodType {
    DAY = 0;
    WEEK = 1;
    MONTH = 2;
}

message QuotaSettings {
    // The maximum number of requests that can be made in a given time period.
    integer limit = 1;
    // The number of requests subtracted from the given limit in the initial time period.
    integer offset = 2;
    // The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
    QuotaPeriodType period = 3;
}

message RequestValidator {
    // The identifier of this <a>RequestValidator</a>.
    string id = 1;
    // The name of this <a>RequestValidator</a>
    string name = 2;
    // A Boolean flag to indicate whether to validate a request body according to the configured <a>Model</a> schema.
    boolean validateRequestBody = 3;
    // A Boolean flag to indicate whether to validate request parameters (<code>true</code>) or not (<code>false</code>).
    boolean validateRequestParameters = 4;
}

message RequestValidators {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message Resource {
    // The resource's identifier.
    string id = 1;
    // The parent resource's identifier.
    string parentId = 2;
    // The full path for this resource.
    string path = 3;
    // The last path segment for this resource.
    string pathPart = 4;
    // <p>Gets an API resource's method of a given HTTP verb.</p> <div class="remarks"> <p>The resource methods are a map of methods indexed by methods' HTTP verbs enabled on the resource. This method map is included in the <code>200 OK</code> response of the <code>GET /restapis/{restapi_id}/resources/{resource_id}</code> or <code>GET /restapis/{restapi_id}/resources/{resource_id}?embed=methods</code> request.</p> <h4>Example: Get the GET method of an API resource</h4> <h5>Request</h5> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "'application/x-amz-json-1.1'" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "'application/xml'" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }</code></pre> <p>If the <code>OPTIONS</code> is enabled on the resource, you can follow the example here to get that method. Just replace the <code>GET</code> of the last path segment in the request URL with <code>OPTIONS</code>.</p> </div> <div class="seeAlso"> </div>
    array resourceMethods = 5;
}

message Resources {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message RestApi {
    // The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.
    array binaryMediaTypes = 1;
    // The timestamp when the API was created.
    string createdDate = 2;
    // The API's description.
    string description = 3;
    // The API's identifier. This identifier is unique across all of your APIs in Amazon API Gateway.
    string id = 4;
    // The API's name.
    string name = 5;
    // A version identifier for the API.
    string version = 6;
    // The warning messages reported when <code>failonwarnings</code> is turned on during API import.
    array warnings = 7;
}

message RestApis {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message SdkConfigurationProperty {
    // The default value of an <a>SdkType</a> configuration property.
    string defaultValue = 1;
    // The description of an <a>SdkType</a> configuration property.
    string description = 2;
    // The user-friendly name of an <a>SdkType</a> configuration property.
    string friendlyName = 3;
    // The name of a an <a>SdkType</a> configuration property.
    string name = 4;
    // A boolean flag of an <a>SdkType</a> configuration property to indicate if the associated SDK configuration property is required (<code>true</code>) or not (<code>false</code>).
    boolean required = 5;
}

message SdkResponse {
    // The binary blob response to <a>GetSdk</a>, which contains the generated SDK.
    string body = 1;
}

message SdkType {
    // A list of configuration properties of an <a>SdkType</a>.
    array configurationProperties = 1;
    // The description of an <a>SdkType</a>.
    string description = 2;
    // The user-friendly name of an <a>SdkType</a> instance.
    string friendlyName = 3;
    // The identifier of an <a>SdkType</a> instance.
    string id = 4;
}

message SdkTypes {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message ServiceUnavailableException {
    string message = 1;
}

message Stage {
    // Specifies whether a cache cluster is enabled for the stage.
    boolean cacheClusterEnabled = 1;
    // The size of the cache cluster for the stage, if enabled.
    CacheClusterSize cacheClusterSize = 2;
    // The status of the cache cluster for the stage, if enabled.
    CacheClusterStatus cacheClusterStatus = 3;
    // The identifier of a client certificate for an API stage.
    string clientCertificateId = 4;
    // The timestamp when the stage was created.
    string createdDate = 5;
    // The identifier of the <a>Deployment</a> that the stage points to.
    string deploymentId = 6;
    // The stage's description.
    string description = 7;
    // The version of the associated API documentation.
    string documentationVersion = 8;
    // The timestamp when the stage last updated.
    string lastUpdatedDate = 9;
    // A map that defines the method settings for a <a>Stage</a> resource. Keys (designated as <code>/{method_setting_key</code> below) are method paths defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>/\*/\*</code> for overriding all methods in the stage.
    array methodSettings = 10;
    // The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to Amazon API Gateway.
    string stageName = 11;
    // A map that defines the stage variables for a <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.
    array variables = 12;
}

message StageKey {
    // The string identifier of the associated <a>RestApi</a>.
    string restApiId = 1;
    // The stage name associated with the stage key.
    string stageName = 2;
}

message Stages {
    // The current page of elements from this collection.
    array item = 1;
}

message Template {
    // The Apache <a href="http://velocity.apache.org/engine/devel/vtl-reference-guide.html" target="_blank">Velocity Template Language (VTL)</a> template content used for the template resource.
    string value = 1;
}

message TestInvokeAuthorizerRequest {
    // [Optional] A key-value map of additional context variables.
    array additionalContext = 1;
    // [Optional] The simulated request body of an incoming invocation request.
    string body = 2;
    // [Required] A key-value map of headers to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, should be specified.
    array headers = 3;
    // [Optional] The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.
    string pathWithQueryString = 4;
    // A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.
    array stageVariables = 5;
}

message TestInvokeAuthorizerResponse {
    array authorization = 1;
    // The <a href="http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims">open identity claims</a>, with any supported custom attributes, returned from the Cognito Your User Pool configured for the API.
    array claims = 2;
    // The HTTP status code that the client would have received. Value is 0 if the authorizer succeeded.
    integer clientStatus = 3;
    // The execution latency of the test authorizer request.
    integer latency = 4;
    // The Amazon API Gateway execution log for the test authorizer request.
    string log = 5;
    // The JSON policy document returned by the <a>Authorizer</a>
    string policy = 6;
    // The principal identity returned by the <a>Authorizer</a>
    string principalId = 7;
}

message TestInvokeMethodRequest {
    // The simulated request body of an incoming invocation request.
    string body = 1;
    // A <a>ClientCertificate</a> identifier to use in the test invocation. API Gateway will use the certificate when making the HTTPS request to the defined back-end endpoint.
    string clientCertificateId = 2;
    // A key-value map of headers to simulate an incoming invocation request.
    array headers = 3;
    // The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.
    string pathWithQueryString = 4;
    // A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.
    array stageVariables = 5;
}

message TestInvokeMethodResponse {
    // The body of the HTTP response.
    string body = 1;
    // The headers of the HTTP response.
    array headers = 2;
    // The execution latency of the test invoke request.
    integer latency = 3;
    // The Amazon API Gateway execution log for the test invoke request.
    string log = 4;
    // The HTTP status code.
    integer status = 5;
}

message ThrottleSettings {
    // The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    integer burstLimit = 1;
    // The API request steady-state rate limit.
    number rateLimit = 2;
}

message TooManyRequestsException {
    string message = 1;
}

enum UnauthorizedCacheControlHeaderStrategy {
    FAIL_WITH_403 = 0;
    SUCCEED_WITH_RESPONSE_HEADER = 1;
    SUCCEED_WITHOUT_RESPONSE_HEADER = 2;
}

message UnauthorizedException {
    string message = 1;
}

message UpdateAccountRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateApiKeyRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateAuthorizerRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateBasePathMappingRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateClientCertificateRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateDeploymentRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateDocumentationPartRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateDocumentationVersionRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateDomainNameRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateGatewayResponseRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateIntegrationRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateIntegrationResponseRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateMethodRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateMethodResponseRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateModelRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateRequestValidatorRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateResourceRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateRestApiRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateStageRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateUsagePlanRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message UpdateUsageRequest {
    // A list of update operations to be applied to the specified resource and in the order specified in this list.
    array patchOperations = 1;
}

message Usage {
    // The ending date of the usage data.
    string endDate = 1;
    // The usage data, as daily logs of used and remaining quotas, over the specified time interval indexed over the API keys in a usage plan. For example, <code>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100, 10]]}</code>, where <code>{api_key}</code> stands for an API key value and the daily log entry is of the format <code>[used quota, remaining quota]</code>.
    array items = 2;
    string position = 3;
    // The starting date of the usage data.
    string startDate = 4;
    // The plan Id associated with this usage data.
    string usagePlanId = 5;
}

message UsagePlan {
    // The associated API stages of a usage plan.
    array apiStages = 1;
    // The description of a usage plan.
    string description = 2;
    // The identifier of a <a>UsagePlan</a> resource.
    string id = 3;
    // The name of a usage plan.
    string name = 4;
    // The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
    string productCode = 5;
    // The maximum number of permitted requests per a given unit time interval.
    QuotaSettings quota = 6;
    // The request throttle limits of a usage plan.
    ThrottleSettings throttle = 7;
}

message UsagePlanKey {
    // The Id of a usage plan key.
    string id = 1;
    // The name of a usage plan key.
    string name = 2;
    // The type of a usage plan key. Currently, the valid key type is <code>API_KEY</code>.
    string type = 3;
    // The value of a usage plan key.
    string value = 4;
}

message UsagePlanKeys {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

message UsagePlans {
    // The current page of elements from this collection.
    array items = 1;
    string position = 2;
}

service AmazonAPIGatewayService {

    // Gets information about the current <a>ApiKeys</a> resource.
    rpc GetApikeys(GetApikeysRequest) returns (ApiKeys) {
      option (google.api.http) = {
        get: "//apikeys"
        body: "body"
      };
    }

    // Import API keys from an external source, such as a CSV-formatted file.
    rpc PostApikeys(PostApikeysRequest) returns (ApiKeyIds) {
      option (google.api.http) = {
        post: "//apikeys?mode=import"
        body: "body"
      };
    }
    // Gets a collection of <a>ClientCertificate</a> resources.
    rpc GetClientcertificates(GetClientcertificatesRequest) returns (ClientCertificates) {
      option (google.api.http) = {
        get: "//clientcertificates"
        body: "body"
      };
    }

    // Represents a collection of <a>DomainName</a> resources.
    rpc GetDomainnames(GetDomainnamesRequest) returns (DomainNames) {
      option (google.api.http) = {
        get: "//domainnames"
        body: "body"
      };
    }

    // Represents a collection of <a>BasePathMapping</a> resources.
    rpc GetDomainnamesDomain_nameBasepathmappings(GetDomainnamesDomain_nameBasepathmappingsRequest) returns (BasePathMappings) {
      option (google.api.http) = {
        get: "//domainnames/{domain_name}/basepathmappings"
        body: "body"
      };
    }

    // Lists the <a>RestApis</a> resources for your collection.
    rpc GetRestapis(GetRestapisRequest) returns (RestApis) {
      option (google.api.http) = {
        get: "//restapis"
        body: "body"
      };
    }

    // <p>Describe an existing <a>Authorizers</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizers.html">AWS CLI</a></div>
    rpc GetRestapisRestapi_idAuthorizers(GetRestapisRestapi_idAuthorizersRequest) returns (Authorizers) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/authorizers"
        body: "body"
      };
    }

    // Gets information about a <a>Deployments</a> collection.
    rpc GetRestapisRestapi_idDeployments(GetRestapisRestapi_idDeploymentsRequest) returns (Deployments) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/deployments"
        body: "body"
      };
    }

    rpc PutRestapisRestapi_idDocumentationParts(PutRestapisRestapi_idDocumentationPartsRequest) returns (DocumentationPartIds) {
      option (google.api.http) = {
        put: "//restapis/{restapi_id}/documentation/parts"
        body: "body"
      };
    }

    rpc GetRestapisRestapi_idDocumentationVersions(GetRestapisRestapi_idDocumentationVersionsRequest) returns (DocumentationVersions) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/documentation/versions"
        body: "body"
      };
    }

    // Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the Amazon API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.
    rpc GetRestapisRestapi_idGatewayresponses(GetRestapisRestapi_idGatewayresponsesRequest) returns (GatewayResponses) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/gatewayresponses"
        body: "body"
      };
    }

    // Describes existing <a>Models</a> defined for a <a>RestApi</a> resource.
    rpc GetRestapisRestapi_idModels(GetRestapisRestapi_idModelsRequest) returns (Models) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/models"
        body: "body"
      };
    }

    // Generates a sample mapping template that can be used to transform a payload into the structure of a model.
    rpc GetRestapisRestapi_idModelsModel_nameDefault_template(GetRestapisRestapi_idModelsModel_nameDefault_templateRequest) returns (Template) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/models/{model_name}/default_template"
        body: "body"
      };
    }
    // Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.
    rpc GetRestapisRestapi_idRequestvalidators(GetRestapisRestapi_idRequestvalidatorsRequest) returns (RequestValidators) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/requestvalidators"
        body: "body"
      };
    }

    // Lists information about a collection of <a>Resource</a> resources.
    rpc GetRestapisRestapi_idResources(GetRestapisRestapi_idResourcesRequest) returns (Resources) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/resources"
        body: "body"
      };
    }
    // Creates a <a>Resource</a> resource.
    rpc PostRestapisRestapi_idResourcesParent_id(PostRestapisRestapi_idResourcesParent_idRequest) returns (Resource) {
      option (google.api.http) = {
        post: "//restapis/{restapi_id}/resources/{parent_id}"
        body: "body"
      };
    }





    // Gets information about one or more <a>Stage</a> resources.
    rpc GetRestapisRestapi_idStages(GetRestapisRestapi_idStagesRequest) returns (Stages) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/stages"
        body: "body"
      };
    }

    // Flushes all authorizer cache entries on a stage.
    rpc DeleteRestapisRestapi_idStagesStage_nameCacheAuthorizers(DeleteRestapisRestapi_idStagesStage_nameCacheAuthorizersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//restapis/{restapi_id}/stages/{stage_name}/cache/authorizers"
        body: "body"
      };
    }
    // Flushes a stage's cache.
    rpc DeleteRestapisRestapi_idStagesStage_nameCacheData(DeleteRestapisRestapi_idStagesStage_nameCacheDataRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//restapis/{restapi_id}/stages/{stage_name}/cache/data"
        body: "body"
      };
    }
    // Exports a deployed version of a <a>RestApi</a> in a specified format.
    rpc GetRestapisRestapi_idStagesStage_nameExportsExport_type(GetRestapisRestapi_idStagesStage_nameExportsExport_typeRequest) returns (ExportResponse) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/stages/{stage_name}/exports/{export_type}"
        body: "body"
      };
    }
    // Generates a client SDK for a <a>RestApi</a> and <a>Stage</a>.
    rpc GetRestapisRestapi_idStagesStage_nameSdksSdk_type(GetRestapisRestapi_idStagesStage_nameSdksSdk_typeRequest) returns (SdkResponse) {
      option (google.api.http) = {
        get: "//restapis/{restapi_id}/stages/{stage_name}/sdks/{sdk_type}"
        body: "body"
      };
    }
    // A feature of the Amazon API Gateway control service for creating a new API from an external API definition file.
    rpc PostRestapis(PostRestapisRequest) returns (RestApi) {
      option (google.api.http) = {
        post: "//restapis?mode=import"
        body: "body"
      };
    }
    rpc GetSdktypes(GetSdktypesRequest) returns (SdkTypes) {
      option (google.api.http) = {
        get: "//sdktypes"
        body: "body"
      };
    }
    rpc GetSdktypesSdktype_id(GetSdktypesSdktype_idRequest) returns (SdkType) {
      option (google.api.http) = {
        get: "//sdktypes/{sdktype_id}"
        body: "body"
      };
    }
    // Gets all the usage plans of the caller's account.
    rpc GetUsageplans(GetUsageplansRequest) returns (UsagePlans) {
      option (google.api.http) = {
        get: "//usageplans"
        body: "body"
      };
    }

    // Gets all the usage plan keys representing the API keys added to a specified usage plan.
    rpc GetUsageplansUsageplanIdKeys(GetUsageplansUsageplanIdKeysRequest) returns (UsagePlanKeys) {
      option (google.api.http) = {
        get: "//usageplans/{usageplanId}/keys"
        body: "body"
      };
    }
    // Gets a usage plan key of a given key identifier.
    rpc GetUsageplansUsageplanIdKeysKeyId(GetUsageplansUsageplanIdKeysKeyIdRequest) returns (UsagePlanKey) {
      option (google.api.http) = {
        get: "//usageplans/{usageplanId}/keys/{keyId}"
        body: "body"
      };
    }

    // Gets the usage data of a usage plan in a specified time interval.
    rpc GetUsageplansUsageplanIdUsage(GetUsageplansUsageplanIdUsageRequest) returns (Usage) {
      option (google.api.http) = {
        get: "//usageplans/{usageplanId}/usage"
        body: "body"
      };
    }
}
