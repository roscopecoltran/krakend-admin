swagger: '2.0'
schemes:
  - http
host: apigateway.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. Amazon API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon API Gateway
  version: '2015-07-09'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apigateway-2015-07-09.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: apigateway
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/apigateway/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /account:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about the current <a>Account</a> resource.
      operationId: UpdateAccount
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAccountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Account'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /apikeys:
    get:
      description: Gets information about the current <a>ApiKeys</a> resource.
      operationId: GetApiKeys
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetApiKeysRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApiKeys'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/apikeys/{api_Key}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about an <a>ApiKey</a> resource.
      operationId: UpdateApiKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApiKeyRequest'
        - in: path
          name: api_Key
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApiKey'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /apikeys?mode=import:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Import API keys from an external source, such as a CSV-formatted file.'
      operationId: ImportApiKeys
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportApiKeysRequest'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/ApiKeyIds'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /clientcertificates:
    get:
      description: Gets a collection of <a>ClientCertificate</a> resources.
      operationId: GetClientCertificates
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetClientCertificatesRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ClientCertificates'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/clientcertificates/{clientcertificate_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about an <a>ClientCertificate</a> resource.
      operationId: UpdateClientCertificate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClientCertificateRequest'
        - in: path
          name: clientcertificate_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ClientCertificate'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  /domainnames:
    get:
      description: Represents a collection of <a>DomainName</a> resources.
      operationId: GetDomainNames
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDomainNamesRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DomainNames'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/domainnames/{domain_name}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about the <a>DomainName</a> resource.
      operationId: UpdateDomainName
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDomainNameRequest'
        - in: path
          name: domain_name
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DomainName'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/domainnames/{domain_name}/basepathmappings':
    get:
      description: Represents a collection of <a>BasePathMapping</a> resources.
      operationId: GetBasePathMappings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetBasePathMappingsRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: domain_name
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasePathMappings'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/domainnames/{domain_name}/basepathmappings/{base_path}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about the <a>BasePathMapping</a> resource.
      operationId: UpdateBasePathMapping
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBasePathMappingRequest'
        - in: path
          name: domain_name
          required: true
          type: string
        - in: path
          name: base_path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasePathMapping'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  /restapis:
    get:
      description: Lists the <a>RestApis</a> resources for your collection.
      operationId: GetRestApis
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetRestApisRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestApis'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about the specified API.
      operationId: UpdateRestApi
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRestApiRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestApi'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/authorizers':
    get:
      description: '<p>Describe an existing <a>Authorizers</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizers.html">AWS CLI</a></div>'
      operationId: GetAuthorizers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAuthorizersRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Authorizers'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/authorizers/{authorizer_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: '<p>Updates an existing <a>Authorizer</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/update-authorizer.html">AWS CLI</a></div>'
      operationId: UpdateAuthorizer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAuthorizerRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: authorizer_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Authorizer'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/deployments':
    get:
      description: Gets information about a <a>Deployments</a> collection.
      operationId: GetDeployments
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentsRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Deployments'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/deployments/{deployment_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about a <a>Deployment</a> resource.
      operationId: UpdateDeployment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDeploymentRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: deployment_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Deployment'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/restapis/{restapi_id}/documentation/parts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: ''
      operationId: ImportDocumentationParts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportDocumentationPartsRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationPartIds'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/documentation/parts/{part_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: ''
      operationId: UpdateDocumentationPart
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentationPartRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: part_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationPart'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/documentation/versions':
    get:
      description: ''
      operationId: GetDocumentationVersions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDocumentationVersionsRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationVersions'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/documentation/versions/{doc_version}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: ''
      operationId: UpdateDocumentationVersion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentationVersionRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: doc_version
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DocumentationVersion'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/gatewayresponses':
    get:
      description: 'Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the Amazon API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.'
      operationId: GetGatewayResponses
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetGatewayResponsesRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GatewayResponses'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/gatewayresponses/{response_type}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Updates a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.
      operationId: UpdateGatewayResponse
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGatewayResponseRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: response_type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GatewayResponse'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/models':
    get:
      description: Describes existing <a>Models</a> defined for a <a>RestApi</a> resource.
      operationId: GetModels
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetModelsRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Models'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/models/{model_name}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about a model.
      operationId: UpdateModel
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateModelRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: model_name
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Model'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/models/{model_name}/default_template':
    get:
      description: Generates a sample mapping template that can be used to transform a payload into the structure of a model.
      operationId: GetModelTemplate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetModelTemplateRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: model_name
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Template'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/requestvalidators':
    get:
      description: Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.
      operationId: GetRequestValidators
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetRequestValidatorsRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RequestValidators'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/requestvalidators/{requestvalidator_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.
      operationId: UpdateRequestValidator
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestValidatorRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: requestvalidator_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RequestValidator'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/resources':
    get:
      description: Lists information about a collection of <a>Resource</a> resources.
      operationId: GetResources
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetResourcesRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resources'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{parent_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a <a>Resource</a> resource.
      operationId: CreateResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: parent_id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/resources/{resource_id}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about a <a>Resource</a> resource.
      operationId: UpdateResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResourceRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: resource_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Updates an existing <a>Method</a> resource.
      operationId: UpdateMethod
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMethodRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: resource_id
          required: true
          type: string
        - in: path
          name: http_method
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Method'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Represents an update integration.
      operationId: UpdateIntegration
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateIntegrationRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: resource_id
          required: true
          type: string
        - in: path
          name: http_method
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Integration'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration/responses/{status_code}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Represents an update integration response.
      operationId: UpdateIntegrationResponse
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateIntegrationResponseRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: resource_id
          required: true
          type: string
        - in: path
          name: http_method
          required: true
          type: string
        - in: path
          name: status_code
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IntegrationResponse'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/responses/{status_code}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Updates an existing <a>MethodResponse</a> resource.
      operationId: UpdateMethodResponse
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMethodResponseRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: resource_id
          required: true
          type: string
        - in: path
          name: http_method
          required: true
          type: string
        - in: path
          name: status_code
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/MethodResponse'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/stages':
    get:
      description: Gets information about one or more <a>Stage</a> resources.
      operationId: GetStages
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetStagesRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Stages'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Changes information about a <a>Stage</a> resource.
      operationId: UpdateStage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStageRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: stage_name
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Stage'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
  '/restapis/{restapi_id}/stages/{stage_name}/cache/authorizers':
    delete:
      description: Flushes all authorizer cache entries on a stage.
      operationId: FlushStageAuthorizersCache
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FlushStageAuthorizersCacheRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: stage_name
          required: true
          type: string
      responses:
        '202':
          description: Success
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/cache/data':
    delete:
      description: Flushes a stage's cache.
      operationId: FlushStageCache
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FlushStageCacheRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: stage_name
          required: true
          type: string
      responses:
        '202':
          description: Success
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/exports/{export_type}':
    get:
      description: Exports a deployed version of a <a>RestApi</a> in a specified format.
      operationId: GetExport
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetExportRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: stage_name
          required: true
          type: string
        - in: path
          name: export_type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportResponse'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/sdks/{sdk_type}':
    get:
      description: Generates a client SDK for a <a>RestApi</a> and <a>Stage</a>.
      operationId: GetSdk
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSdkRequest'
        - in: path
          name: restapi_id
          required: true
          type: string
        - in: path
          name: stage_name
          required: true
          type: string
        - in: path
          name: sdk_type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SdkResponse'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /restapis?mode=import:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: A feature of the Amazon API Gateway control service for creating a new API from an external API definition file.
      operationId: ImportRestApi
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportRestApiRequest'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RestApi'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  /sdktypes:
    get:
      description: ''
      operationId: GetSdkTypes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSdkTypesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SdkTypes'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/sdktypes/{sdktype_id}':
    get:
      description: ''
      operationId: GetSdkType
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSdkTypeRequest'
        - in: path
          name: sdktype_id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SdkType'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /usageplans:
    get:
      description: Gets all the usage plans of the caller's account.
      operationId: GetUsagePlans
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUsagePlansRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsagePlans'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Updates a usage plan of a given plan Id.
      operationId: UpdateUsagePlan
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUsagePlanRequest'
        - in: path
          name: usageplanId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsagePlan'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
  '/usageplans/{usageplanId}/keys':
    get:
      description: Gets all the usage plan keys representing the API keys added to a specified usage plan.
      operationId: GetUsagePlanKeys
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUsagePlanKeysRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: usageplanId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsagePlanKeys'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/keys/{keyId}':
    get:
      description: Gets a usage plan key of a given key identifier.
      operationId: GetUsagePlanKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUsagePlanKeyRequest'
        - in: path
          name: usageplanId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
        - in: query
          name: keyId
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsagePlanKey'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/keys/{keyId}/usage':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      description: Grants a temporary extension to the remaining quota of a usage plan associated with a specified API key.
      operationId: UpdateUsage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUsageRequest'
        - in: path
          name: usageplanId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
        - in: query
          name: keyId
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Usage'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '482':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/usageplans/{usageplanId}/usage':
    get:
      description: Gets the usage data of a usage plan in a specified time interval.
      operationId: GetUsage
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUsageRequest'
        - description: Pagination limit
          in: query
          name: limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: position
          required: false
          type: string
        - in: path
          name: usageplanId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Usage'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  Account:
    description: '<p>Represents an AWS account that is associated with Amazon API Gateway.</p> <div class="remarks"> <p>To view the account info, call <code>GET</code> on this resource.</p> <h4>Error Codes</h4> <p>The following exception may be thrown when the request fails.</p> <ul> <li>UnauthorizedException</li> <li>NotFoundException</li> <li>TooManyRequestsException</li> </ul> <p>For detailed error code information, including the corresponding HTTP Status Codes, see <a href="http://docs.aws.amazon.com/apigateway/api-reference/handling-errors/#api-error-codes">API Gateway Error Codes</a></p> <h4>Example: Get the information about an account.</h4> <h5>Request</h5> <pre><code>GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } } </code></pre> <p>In addition to making the REST API call directly, you can use the AWS CLI and an AWS SDK to access this resource.</p> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-limits.html">API Gateway Limits</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html">Developer Guide</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-account.html">AWS CLI</a> </div>'
    properties:
      apiKeyVersion:
        $ref: '#/definitions/String'
        description: The version of the API keys used for the account.
      cloudwatchRoleArn:
        $ref: '#/definitions/String'
        description: 'The ARN of an Amazon CloudWatch role for the current <a>Account</a>. '
      features:
        $ref: '#/definitions/ListOfString'
        description: 'A list of features supported for the account. When usage plans are enabled, the features list will include an entry of <code>"UsagePlans"</code>.'
      throttleSettings:
        $ref: '#/definitions/ThrottleSettings'
        description: Specifies the API request limits configured for the current <a>Account</a>.
    type: object
  ApiKey:
    description: '<p>A resource that can be distributed to callers for executing <a>Method</a> resources that require an API key. API keys can be mapped to any <a>Stage</a> on any <a>RestApi</a>, which indicates that the callers with the API key can make requests to that stage.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>'
    properties:
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the API Key was created.
      customerId:
        $ref: '#/definitions/String'
        description: 'An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.'
      description:
        $ref: '#/definitions/String'
        description: The description of the API Key.
      enabled:
        $ref: '#/definitions/Boolean'
        description: Specifies whether the API Key can be used by callers.
      id:
        $ref: '#/definitions/String'
        description: The identifier of the API Key.
      lastUpdatedDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the API Key was last updated.
      name:
        $ref: '#/definitions/String'
        description: The name of the API Key.
      stageKeys:
        $ref: '#/definitions/ListOfString'
        description: A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.
      value:
        $ref: '#/definitions/String'
        description: The value of the API Key.
    type: object
  ApiKeyIds:
    description: The identifier of an <a>ApiKey</a> used in a <a>UsagePlan</a>.
    properties:
      ids:
        $ref: '#/definitions/ListOfString'
        description: A list of all the <a>ApiKey</a> identifiers.
      warnings:
        $ref: '#/definitions/ListOfString'
        description: A list of warning messages.
    type: object
  ApiKeys:
    description: '<p>Represents a collection of API keys as represented by an <a>ApiKeys</a> resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfApiKey'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
      warnings:
        $ref: '#/definitions/ListOfString'
        description: A list of warning messages logged during the import of API keys when the <code>failOnWarnings</code> option is set to true.
    type: object
  ApiKeysFormat:
    enum:
      - csv
    type: string
  ApiStage:
    description: API stage name of the associated API stage in a usage plan.
    properties:
      apiId:
        $ref: '#/definitions/String'
        description: API Id of the associated API stage in a usage plan.
      stage:
        $ref: '#/definitions/String'
        description: API stage name of the associated API stage in a usage plan.
    type: object
  Authorizer:
    description: '<p>Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>'
    properties:
      authType:
        $ref: '#/definitions/String'
        description: 'Optional customer-defined field, used in Swagger imports and exports without functional impact.'
      authorizerCredentials:
        $ref: '#/definitions/String'
        description: 'Specifies the required credentials as an IAM role for Amazon API Gateway to invoke the authorizer. To specify an IAM role for Amazon API Gateway to assume, use the role''s Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.'
      authorizerResultTtlInSeconds:
        $ref: '#/definitions/NullableInteger'
        description: 'The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.'
      authorizerUri:
        $ref: '#/definitions/String'
        description: 'Specifies the authorizer''s Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.'
      id:
        $ref: '#/definitions/String'
        description: The identifier for the authorizer resource.
      identitySource:
        $ref: '#/definitions/String'
        description: 'The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>. These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li><li>For a <code>COGNITO_USER_POOLS</code> authorizer, this property is not used.</li></ul>'
      identityValidationExpression:
        $ref: '#/definitions/String'
        description: 'A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. Amazon API Gateway will match the incoming token from the client against the specified regular expression. It will invoke the authorizer''s Lambda function there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.'
      name:
        $ref: '#/definitions/String'
        description: '[Required] The name of the authorizer.'
      providerARNs:
        $ref: '#/definitions/ListOfARNs'
        description: 'A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined. '
      type:
        $ref: '#/definitions/AuthorizerType'
        description: '[Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.'
    type: object
  AuthorizerType:
    description: '[Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.'
    enum:
      - TOKEN
      - REQUEST
      - COGNITO_USER_POOLS
    type: string
  Authorizers:
    description: '<p>Represents a collection of <a>Authorizer</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfAuthorizer'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  BadRequestException:
    description: 'The submitted request is not valid, for example, the input is incomplete or incorrect. See the accompanying error message for details.'
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  BasePathMapping:
    description: '<p>Represents the base path that callers of the API must provide as part of the URL after the domain name.</p> <div class="remarks">A custom domain name plus a <code>BasePathMapping</code> specification identifies a deployed <a>RestApi</a> in a given stage of the owner <a>Account</a>.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>'
    properties:
      basePath:
        $ref: '#/definitions/String'
        description: The base path name that callers of the API must provide as part of the URL after the domain name.
      restApiId:
        $ref: '#/definitions/String'
        description: The string identifier of the associated <a>RestApi</a>.
      stage:
        $ref: '#/definitions/String'
        description: The name of the associated stage.
    type: object
  BasePathMappings:
    description: '<p>Represents a collection of <a>BasePathMapping</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfBasePathMapping'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  Blob:
    type: string
  Boolean:
    type: boolean
  CacheClusterSize:
    description: Returns the size of the <b>CacheCluster</b>.
    enum:
      - '0.5'
      - '1.6'
      - '6.1'
      - '13.5'
      - '28.4'
      - '58.2'
      - '118'
      - '237'
    type: string
  CacheClusterStatus:
    description: Returns the status of the <b>CacheCluster</b>.
    enum:
      - CREATE_IN_PROGRESS
      - AVAILABLE
      - DELETE_IN_PROGRESS
      - NOT_AVAILABLE
      - FLUSH_IN_PROGRESS
    type: string
  ClientCertificate:
    description: '<p>Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.</p> <div class="remarks">Client certificates are used to authenticate an API by the backend server. To authenticate an API client (or user), use IAM roles and policies, a custom <a>Authorizer</a> or an Amazon Cognito user pool.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>'
    properties:
      clientCertificateId:
        $ref: '#/definitions/String'
        description: The identifier of the client certificate.
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the client certificate was created.
      description:
        $ref: '#/definitions/String'
        description: The description of the client certificate.
      expirationDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the client certificate will expire.
      pemEncodedCertificate:
        $ref: '#/definitions/String'
        description: 'The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .'
    type: object
  ClientCertificates:
    description: '<p>Represents a collection of <a>ClientCertificate</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfClientCertificate'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  ConflictException:
    description: 'The request configuration has conflicts. For details, see the accompanying error message.'
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  ContentHandlingStrategy:
    enum:
      - CONVERT_TO_BINARY
      - CONVERT_TO_TEXT
    type: string
  CreateApiKeyRequest:
    description: Request to create an <a>ApiKey</a> resource.
    properties:
      customerId:
        $ref: '#/definitions/String'
        description: 'An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.'
      description:
        $ref: '#/definitions/String'
        description: The description of the <a>ApiKey</a>.
      enabled:
        $ref: '#/definitions/Boolean'
        description: Specifies whether the <a>ApiKey</a> can be used by callers.
      generateDistinctId:
        $ref: '#/definitions/Boolean'
        description: Specifies whether (<code>true</code>) or not (<code>false</code>) the key identifier is distinct from the created API key value.
      name:
        $ref: '#/definitions/String'
        description: The name of the <a>ApiKey</a>.
      stageKeys:
        $ref: '#/definitions/ListOfStageKeys'
        description: DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.
      value:
        $ref: '#/definitions/String'
        description: Specifies a value of the API key.
    type: object
  CreateAuthorizerRequest:
    description: Request to add a new <a>Authorizer</a> to an existing <a>RestApi</a> resource.
    properties:
      authType:
        $ref: '#/definitions/String'
        description: 'Optional customer-defined field, used in Swagger imports and exports without functional impact.'
      authorizerCredentials:
        $ref: '#/definitions/String'
        description: 'Specifies the required credentials as an IAM role for Amazon API Gateway to invoke the authorizer. To specify an IAM role for Amazon API Gateway to assume, use the role''s Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.'
      authorizerResultTtlInSeconds:
        $ref: '#/definitions/NullableInteger'
        description: 'The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.'
      authorizerUri:
        $ref: '#/definitions/String'
        description: 'Specifies the authorizer''s Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.'
      identitySource:
        $ref: '#/definitions/String'
        description: 'The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>. These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li><li>For a <code>COGNITO_USER_POOLS</code> authorizer, this property is not used.</li></ul>'
      identityValidationExpression:
        $ref: '#/definitions/String'
        description: 'A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. Amazon API Gateway will match the incoming token from the client against the specified regular expression. It will invoke the authorizer''s Lambda function there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.'
      name:
        $ref: '#/definitions/String'
        description: '[Required] The name of the authorizer.'
      providerARNs:
        $ref: '#/definitions/ListOfARNs'
        description: 'A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined. '
      type:
        $ref: '#/definitions/AuthorizerType'
        description: '[Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.'
    required:
      - name
      - type
    type: object
  CreateBasePathMappingRequest:
    description: Requests Amazon API Gateway to create a new <a>BasePathMapping</a> resource.
    properties:
      basePath:
        $ref: '#/definitions/String'
        description: The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Leave this blank if you do not want callers to specify a base path name after the domain name.
      restApiId:
        $ref: '#/definitions/String'
        description: The string identifier of the associated <a>RestApi</a>.
      stage:
        $ref: '#/definitions/String'
        description: The name of the API's stage that you want to use for this mapping. Leave this blank if you do not want callers to explicitly specify the stage name after any base path name.
    required:
      - restApiId
    type: object
  CreateDeploymentRequest:
    description: Requests Amazon API Gateway to create a <a>Deployment</a> resource.
    properties:
      cacheClusterEnabled:
        $ref: '#/definitions/NullableBoolean'
        description: Enables a cache cluster for the <a>Stage</a> resource specified in the input.
      cacheClusterSize:
        $ref: '#/definitions/CacheClusterSize'
        description: 'Specifies the cache cluster size for the <a>Stage</a> resource specified in the input, if a cache cluster is enabled.'
      description:
        $ref: '#/definitions/String'
        description: The description for the <a>Deployment</a> resource to create.
      stageDescription:
        $ref: '#/definitions/String'
        description: The description of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.
      stageName:
        $ref: '#/definitions/String'
        description: The name of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.
      variables:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A map that defines the stage variables for the <a>Stage</a> resource that is associated with the new deployment. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.'
    type: object
  CreateDocumentationPartRequest:
    description: Creates a new documentation part of a given API.
    properties:
      location:
        $ref: '#/definitions/DocumentationPartLocation'
        description: '[Required] The location of the targeted API entity of the to-be-created documentation part.'
      properties:
        $ref: '#/definitions/String'
        description: '[Required] The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only Swagger-compliant key-value pairs can be exported and, hence, published.'
    required:
      - location
      - properties
    type: object
  CreateDocumentationVersionRequest:
    description: Creates a new documentation version of a given API.
    properties:
      description:
        $ref: '#/definitions/String'
        description: A description about the new documentation snapshot.
      documentationVersion:
        $ref: '#/definitions/String'
        description: '[Required] The version identifier of the new snapshot.'
      stageName:
        $ref: '#/definitions/String'
        description: The stage name to be associated with the new documentation snapshot.
    required:
      - documentationVersion
    type: object
  CreateDomainNameRequest:
    description: A request to create a new domain name.
    properties:
      certificateArn:
        $ref: '#/definitions/String'
        description: The reference to an AWS-managed certificate. AWS Certificate Manager is the only supported source.
      certificateBody:
        $ref: '#/definitions/String'
        description: '[Deprecated] The body of the server certificate provided by your certificate authority.'
      certificateChain:
        $ref: '#/definitions/String'
        description: '[Deprecated] The intermediate certificates and optionally the root certificate, one after the other without any blank lines. If you include the root certificate, your certificate chain must start with intermediate certificates and end with the root certificate. Use the intermediate certificates that were provided by your certificate authority. Do not include any intermediaries that are not in the chain of trust path.'
      certificateName:
        $ref: '#/definitions/String'
        description: The user-friendly name of the certificate.
      certificatePrivateKey:
        $ref: '#/definitions/String'
        description: '[Deprecated] Your certificate''s private key.'
      domainName:
        $ref: '#/definitions/String'
        description: (Required) The name of the <a>DomainName</a> resource.
    required:
      - domainName
    type: object
  CreateModelRequest:
    description: Request to add a new <a>Model</a> to an existing <a>RestApi</a> resource.
    properties:
      contentType:
        $ref: '#/definitions/String'
        description: The content-type for the model.
      description:
        $ref: '#/definitions/String'
        description: The description of the model.
      name:
        $ref: '#/definitions/String'
        description: The name of the model. Must be alphanumeric.
      schema:
        $ref: '#/definitions/String'
        description: 'The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model.'
    required:
      - name
      - contentType
    type: object
  CreateRequestValidatorRequest:
    description: Creates a <a>RequestValidator</a> of a given <a>RestApi</a>.
    properties:
      name:
        $ref: '#/definitions/String'
        description: The name of the to-be-created <a>RequestValidator</a>.
      validateRequestBody:
        $ref: '#/definitions/Boolean'
        description: A Boolean flag to indicate whether to validate request body according to the configured model schema for the method (<code>true</code>) or not (<code>false</code>).
      validateRequestParameters:
        $ref: '#/definitions/Boolean'
        description: 'A Boolean flag to indicate whether to validate request parameters, <code>true</code>, or not <code>false</code>.'
    type: object
  CreateResourceRequest:
    description: Requests Amazon API Gateway to create a <a>Resource</a> resource.
    properties:
      pathPart:
        $ref: '#/definitions/String'
        description: The last path segment for this resource.
    required:
      - pathPart
    type: object
  CreateRestApiRequest:
    description: The POST Request to add a new <a>RestApi</a> resource to your collection.
    properties:
      binaryMediaTypes:
        $ref: '#/definitions/ListOfString'
        description: 'The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.'
      cloneFrom:
        $ref: '#/definitions/String'
        description: The ID of the <a>RestApi</a> that you want to clone from.
      description:
        $ref: '#/definitions/String'
        description: The description of the <a>RestApi</a>.
      name:
        $ref: '#/definitions/String'
        description: The name of the <a>RestApi</a>.
      version:
        $ref: '#/definitions/String'
        description: A version identifier for the API.
    required:
      - name
    type: object
  CreateStageRequest:
    description: Requests Amazon API Gateway to create a <a>Stage</a> resource.
    properties:
      cacheClusterEnabled:
        $ref: '#/definitions/Boolean'
        description: Whether cache clustering is enabled for the stage.
      cacheClusterSize:
        $ref: '#/definitions/CacheClusterSize'
        description: The stage's cache cluster size.
      deploymentId:
        $ref: '#/definitions/String'
        description: The identifier of the <a>Deployment</a> resource for the <a>Stage</a> resource.
      description:
        $ref: '#/definitions/String'
        description: The description of the <a>Stage</a> resource.
      documentationVersion:
        $ref: '#/definitions/String'
        description: The version of the associated API documentation.
      stageName:
        $ref: '#/definitions/String'
        description: The name for the <a>Stage</a> resource.
      variables:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A map that defines the stage variables for the new <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.'
    required:
      - stageName
      - deploymentId
    type: object
  CreateUsagePlanKeyRequest:
    description: The POST request to create a usage plan key for adding an existing API key to a usage plan.
    properties:
      keyId:
        $ref: '#/definitions/String'
        description: The identifier of a <a>UsagePlanKey</a> resource for a plan customer.
      keyType:
        $ref: '#/definitions/String'
        description: The type of a <a>UsagePlanKey</a> resource for a plan customer.
    required:
      - keyId
      - keyType
    type: object
  CreateUsagePlanRequest:
    description: 'The POST request to create a usage plan with the name, description, throttle limits and quota limits, as well as the associated API stages, specified in the payload.'
    properties:
      apiStages:
        $ref: '#/definitions/ListOfApiStage'
        description: The associated API stages of the usage plan.
      description:
        $ref: '#/definitions/String'
        description: The description of the usage plan.
      name:
        $ref: '#/definitions/String'
        description: The name of the usage plan.
      quota:
        $ref: '#/definitions/QuotaSettings'
        description: The quota of the usage plan.
      throttle:
        $ref: '#/definitions/ThrottleSettings'
        description: The throttling limits of the usage plan.
    required:
      - name
    type: object
  DeleteApiKeyRequest:
    description: A request to delete the <a>ApiKey</a> resource.
    properties: {}
    type: object
  DeleteAuthorizerRequest:
    description: Request to delete an existing <a>Authorizer</a> resource.
    properties: {}
    type: object
  DeleteBasePathMappingRequest:
    description: A request to delete the <a>BasePathMapping</a> resource.
    properties: {}
    type: object
  DeleteClientCertificateRequest:
    description: A request to delete the <a>ClientCertificate</a> resource.
    properties: {}
    type: object
  DeleteDeploymentRequest:
    description: Requests Amazon API Gateway to delete a <a>Deployment</a> resource.
    properties: {}
    type: object
  DeleteDocumentationPartRequest:
    description: Deletes an existing documentation part of an API.
    properties: {}
    type: object
  DeleteDocumentationVersionRequest:
    description: Deletes an existing documentation version of an API.
    properties: {}
    type: object
  DeleteDomainNameRequest:
    description: A request to delete the <a>DomainName</a> resource.
    properties: {}
    type: object
  DeleteGatewayResponseRequest:
    description: Clears any customization of a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a> and resets it with the default settings.
    properties: {}
    type: object
  DeleteIntegrationRequest:
    description: Represents a delete integration request.
    properties: {}
    type: object
  DeleteIntegrationResponseRequest:
    description: Represents a delete integration response request.
    properties: {}
    type: object
  DeleteMethodRequest:
    description: Request to delete an existing <a>Method</a> resource.
    properties: {}
    type: object
  DeleteMethodResponseRequest:
    description: A request to delete an existing <a>MethodResponse</a> resource.
    properties: {}
    type: object
  DeleteModelRequest:
    description: Request to delete an existing model in an existing <a>RestApi</a> resource.
    properties: {}
    type: object
  DeleteRequestValidatorRequest:
    description: Deletes a specified <a>RequestValidator</a> of a given <a>RestApi</a>.
    properties: {}
    type: object
  DeleteResourceRequest:
    description: Request to delete a <a>Resource</a>.
    properties: {}
    type: object
  DeleteRestApiRequest:
    description: Request to delete the specified API from your collection.
    properties: {}
    type: object
  DeleteStageRequest:
    description: Requests Amazon API Gateway to delete a <a>Stage</a> resource.
    properties: {}
    type: object
  DeleteUsagePlanKeyRequest:
    description: The DELETE request to delete a usage plan key and remove the underlying API key from the associated usage plan.
    properties: {}
    type: object
  DeleteUsagePlanRequest:
    description: The DELETE request to delete a usage plan of a given plan Id.
    properties: {}
    type: object
  Deployment:
    description: '<p>An immutable representation of a <a>RestApi</a> resource that can be called by users using <a>Stages</a>. A deployment must be associated with a <a>Stage</a> for it to be callable over the Internet.</p> <div class="remarks">To create a deployment, call <code>POST</code> on the <a>Deployments</a> resource of a <a>RestApi</a>. To view, update, or delete a deployment, call <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> on the specified deployment resource (<code>/restapis/{restapi_id}/deployments/{deployment_id}</code>).</div> <div class="seeAlso"><a>RestApi</a>, <a>Deployments</a>, <a>Stage</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>'
    properties:
      apiSummary:
        $ref: '#/definitions/PathToMapOfMethodSnapshot'
        description: A summary of the <a>RestApi</a> at the date and time that the deployment resource was created.
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the deployment resource was created.
      description:
        $ref: '#/definitions/String'
        description: The description for the deployment resource.
      id:
        $ref: '#/definitions/String'
        description: The identifier for the deployment resource.
    type: object
  Deployments:
    description: '<p>Represents a collection resource that contains zero or more references to your existing deployments, and links that guide you on how to interact with your collection. The collection offers a paginated view of the contained deployments.</p> <div class="remarks">To create a new deployment of a <a>RestApi</a>, make a <code>POST</code> request against this resource. To view, update, or delete an existing deployment, make a <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> request, respectively, on a specified <a>Deployment</a> resource.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploying an API</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfDeployment'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  DocumentationPart:
    description: '<p>A documentation part for a targeted API entity.</p> <div class="remarks"> <p>A documentation part consists of a content map (<code>properties</code>) and a target (<code>location</code>). The target specifies an API entity to which the documentation content applies. The supported API entity types are <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Valid <code>location</code> fields depend on the API entity type. All valid fields are not required.</p> <p>The content map is a JSON string of API-specific key-value pairs. Although an API can use any shape for the content map, only the Swagger-compliant documentation fields will be injected into the associated API entity definition in the exported Swagger definition file.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationParts</a> </div>'
    properties:
      id:
        $ref: '#/definitions/String'
        description: 'The <a>DocumentationPart</a> identifier, generated by Amazon API Gateway when the <code>DocumentationPart</code> is created.'
      location:
        $ref: '#/definitions/DocumentationPartLocation'
        description: 'The location of the API entity to which the documentation applies. Valid fields depend on the targeted API entity type. All the valid location fields are not required. If not explicitly specified, a valid location field is treated as a wildcard and associated documentation content may be inherited by matching entities, unless overridden.'
      properties:
        $ref: '#/definitions/String'
        description: 'A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., <code>"{ \"description\": \"The API does ...\" }"</code>. Only Swagger-compliant documentation-related fields from the <literal>properties</literal> map are exported and, hence, published as part of the API entity definitions, while the original documentation parts are exported in a Swagger extension of <code>x-amazon-apigateway-documentation</code>.'
    type: object
  DocumentationPartIds:
    description: '<p>A collection of the imported <a>DocumentationPart</a> identifiers.</p> <div class="remarks">This is used to return the result when documentation parts in an external (e.g., Swagger) file are imported into Amazon API Gateway</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a href="http://docs.aws.amazon.com/apigateway/api-reference/link-relation/documentationpart-import/">documentationpart:import</a>, <a>DocumentationPart</a> </div>'
    properties:
      ids:
        $ref: '#/definitions/ListOfString'
        description: A list of the returned documentation part identifiers.
      warnings:
        $ref: '#/definitions/ListOfString'
        description: A list of warning messages reported during import of documentation parts.
    type: object
  DocumentationPartLocation:
    description: Specifies the target API entity to which the documentation applies.
    properties:
      method:
        $ref: '#/definitions/String'
        description: 'The HTTP verb of a method. It is a valid field for the API entity types of <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any method. When an applicable child entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity''s <code>method</code> attribute must match that of the parent entity exactly.'
      name:
        $ref: '#/definitions/String'
        description: 'The name of the targeted API entity. It is a valid and required field for the API entity types of <code>AUTHORIZER</code>, <code>MODEL</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code> and <code>RESPONSE_HEADER</code>. It is an invalid field for any other entity type.'
      path:
        $ref: '#/definitions/String'
        description: 'The URL path of the target. It is a valid field for the API entity types of <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>/</code> for the root resource. When an applicable child entity inherits the content of another entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity''s <code>path</code> attribute must match that of the parent entity as a prefix.'
      statusCode:
        $ref: '#/definitions/DocumentationPartLocationStatusCode'
        description: 'The HTTP status code of a response. It is a valid field for the API entity types of <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any status code. When an applicable child entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity''s <code>statusCode</code> attribute must match that of the parent entity exactly.'
      type:
        $ref: '#/definitions/DocumentationPartType'
        description: 'The type of API entity to which the documentation content applies. It is a valid and required field for API entity types of <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Content inheritance does not apply to any entity of the <code>API</code>, <code>AUTHORIZER</code>, <code>METHOD</code>, <code>MODEL</code>, <code>REQUEST_BODY</code>, or <code>RESOURCE</code> type.'
    required:
      - type
    type: object
  DocumentationPartLocationStatusCode:
    pattern: '^([1-5]\d\d|\*|\s*)$'
    type: string
  DocumentationPartType:
    enum:
      - API
      - AUTHORIZER
      - MODEL
      - RESOURCE
      - METHOD
      - PATH_PARAMETER
      - QUERY_PARAMETER
      - REQUEST_HEADER
      - REQUEST_BODY
      - RESPONSE
      - RESPONSE_HEADER
      - RESPONSE_BODY
    type: string
  DocumentationParts:
    description: '<p>The collection of documentation parts of an API.</p> <div class="remarks"/> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfDocumentationPart'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  DocumentationVersion:
    description: '<p>A snapshot of the documentation of an API.</p> <div class="remarks"><p>Publishing API documentation involves creating a documentation version associated with an API stage and exporting the versioned documentation to an external (e.g., Swagger) file.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersions</a> </div>'
    properties:
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The date when the API documentation snapshot is created.
      description:
        $ref: '#/definitions/String'
        description: The description of the API documentation snapshot.
      version:
        $ref: '#/definitions/String'
        description: The version identifier of the API documentation snapshot.
    type: object
  DocumentationVersions:
    description: '<p>The collection of documentation snapshots of an API. </p> <div class="remarks"><p>Use the <a>DocumentationVersions</a> to manage documentation snapshots associated with various API stages.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersion</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfDocumentationVersion'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  DomainName:
    description: '<p>Represents a domain name that is contained in a simpler, more intuitive URL that can be called.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>'
    properties:
      certificateArn:
        $ref: '#/definitions/String'
        description: The reference to an AWS-managed certificate. AWS Certificate Manager is the only supported source.
      certificateName:
        $ref: '#/definitions/String'
        description: The name of the certificate.
      certificateUploadDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the certificate was uploaded.
      distributionDomainName:
        $ref: '#/definitions/String'
        description: 'The domain name of the Amazon CloudFront distribution. For more information, see the <a href="http://aws.amazon.com/documentation/cloudfront/" target="_blank">Amazon CloudFront documentation</a>.'
      domainName:
        $ref: '#/definitions/String'
        description: The name of the <a>DomainName</a> resource.
    type: object
  DomainNames:
    description: '<p>Represents a collection of <a>DomainName</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfDomainName'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  Double:
    format: double
    type: number
  ExportResponse:
    description: 'The binary blob response to <a>GetExport</a>, which contains the generated SDK.'
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: 'The binary blob response to <a>GetExport</a>, which contains the export.'
    type: object
  FlushStageAuthorizersCacheRequest:
    description: Request to flush authorizer cache entries on a specified stage.
    properties: {}
    type: object
  FlushStageCacheRequest:
    description: Requests Amazon API Gateway to flush a stage's cache.
    properties: {}
    type: object
  GatewayResponse:
    description: '<p>A gateway response of a given response type and status code, with optional response parameters and mapping templates.</p> <div class="remarks"> For more information about valid gateway response types, see <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html">Gateway Response Types Supported by Amazon API Gateway</a> <div class="example"> <h4>Example: Get a Gateway Response of a given response type</h4> <h5>Request</h5> <p>This example shows how to get a gateway response of the <code>MISSING_AUTHNETICATION_TOKEN</code> type.</p> <pre><code>GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T202516Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a Cache-Control: no-cache Postman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45 </code></pre> <p>The response type is specified as a URL path.</p> <h5>Response</h5> <p>The successful operation returns the <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:delete": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": false, "responseParameters": { "gatewayresponse.header.x-request-path": "method.request.path.petId", "gatewayresponse.header.Access-Control-Allow-Origin": "&apos;a.b.c&apos;", "gatewayresponse.header.x-request-query": "method.request.querystring.q", "gatewayresponse.header.x-request-header": "method.request.header.Accept" }, "responseTemplates": { "application/json": "{\n \"message\": $context.error.messageString,\n \"type\": \"$context.error.responseType\",\n \"stage\": \"$context.stage\",\n \"resourcePath\": \"$context.resourcePath\",\n \"stageVariables.a\": \"$stageVariables.a\",\n \"statusCode\": \"&apos;404&apos;\"\n}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "404" }</code></pre> <p></p> </div> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/customize-gateway-responses.html">Customize Gateway Responses</a> </div>'
    properties:
      defaultResponse:
        $ref: '#/definitions/Boolean'
        description: 'A Boolean flag to indicate whether this <a>GatewayResponse</a> is the default gateway response (<code>true</code>) or not (<code>false</code>). A default gateway response is one generated by Amazon API Gateway without any customization by an API developer. '
      responseParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.'
      responseTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.
      responseType:
        $ref: '#/definitions/GatewayResponseType'
        description: 'The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPES</li></ul> '
      statusCode:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status code for this <a>GatewayResponse</a>.
    type: object
  GatewayResponseType:
    enum:
      - DEFAULT_4XX
      - DEFAULT_5XX
      - RESOURCE_NOT_FOUND
      - UNAUTHORIZED
      - INVALID_API_KEY
      - ACCESS_DENIED
      - AUTHORIZER_FAILURE
      - AUTHORIZER_CONFIGURATION_ERROR
      - INVALID_SIGNATURE
      - EXPIRED_TOKEN
      - MISSING_AUTHENTICATION_TOKEN
      - INTEGRATION_FAILURE
      - INTEGRATION_TIMEOUT
      - API_CONFIGURATION_ERROR
      - UNSUPPORTED_MEDIA_TYPE
      - BAD_REQUEST_PARAMETERS
      - BAD_REQUEST_BODY
      - REQUEST_TOO_LARGE
      - THROTTLED
      - QUOTA_EXCEEDED
    type: string
  GatewayResponses:
    description: '<p>The collection of the <a>GatewayResponse</a> instances of a <a>RestApi</a> as a <code>responseType</code>-to-<a>GatewayResponse</a> object map of key-value pairs. As such, pagination is not supported for querying this collection.</p> <div class="remarks"> For more information about valid gateway response types, see <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html">Gateway Response Types Supported by Amazon API Gateway</a> <div class="example"> <h4>Example: Get the collection of gateway responses of an API</h4> <h5>Request</h5> <p>This example request shows how to retrieve the <a>GatewayResponses</a> collection from an API.</p> <pre><code>GET /restapis/o81lxisefl/gatewayresponses HTTP/1.1 Host: beta-apigateway.us-east-1.amazonaws.com Content-Type: application/json X-Amz-Date: 20170503T220604Z Authorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=59b42fe54a76a5de8adf2c67baa6d39206f8e9ad49a1d77ccc6a5da3103a398a Cache-Control: no-cache Postman-Token: 5637af27-dc29-fc5c-9dfe-0645d52cb515 </code></pre> <p></p> <h5>Response</h5> <p>The successful operation returns the <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html", "name": "gatewayresponse", "templated": true }, "self": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "first": { "href": "/restapis/o81lxisefl/gatewayresponses" }, "gatewayresponse:by-type": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "item": [ { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } ] }, "_embedded": { "item": [ { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_FAILURE", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "RESOURCE_NOT_FOUND", "statusCode": "404" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "REQUEST_TOO_LARGE", "statusCode": "413" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/THROTTLED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "THROTTLED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNSUPPORTED_MEDIA_TYPE", "statusCode": "415" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_5XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "DEFAULT_4XX" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_PARAMETERS", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "BAD_REQUEST_BODY", "statusCode": "400" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "EXPIRED_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "ACCESS_DENIED", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_API_KEY", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "UNAUTHORIZED", "statusCode": "401" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "API_CONFIGURATION_ERROR", "statusCode": "500" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "QUOTA_EXCEEDED", "statusCode": "429" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INTEGRATION_TIMEOUT", "statusCode": "504" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "MISSING_AUTHENTICATION_TOKEN", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "INVALID_SIGNATURE", "statusCode": "403" }, { "_links": { "self": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" }, "gatewayresponse:put": { "href": "/restapis/o81lxisefl/gatewayresponses/{response_type}", "templated": true }, "gatewayresponse:update": { "href": "/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE" } }, "defaultResponse": true, "responseParameters": {}, "responseTemplates": { "application/json": "{\"message\":$context.error.messageString}" }, "responseType": "AUTHORIZER_FAILURE", "statusCode": "500" } ] } }</code></pre> <p></p> </div> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/customize-gateway-responses.html">Customize Gateway Responses</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfGatewayResponse'
        description: 'Returns the entire collection, because of no pagination support.'
      position:
        $ref: '#/definitions/String'
    type: object
  GenerateClientCertificateRequest:
    description: A request to generate a <a>ClientCertificate</a> resource.
    properties:
      description:
        $ref: '#/definitions/String'
        description: The description of the <a>ClientCertificate</a>.
    type: object
  GetAccountRequest:
    description: Requests Amazon API Gateway to get information about the current <a>Account</a> resource.
    properties: {}
    type: object
  GetApiKeyRequest:
    description: A request to get information about the current <a>ApiKey</a> resource.
    properties: {}
    type: object
  GetApiKeysRequest:
    description: A request to get information about the current <a>ApiKeys</a> resource.
    properties: {}
    type: object
  GetAuthorizerRequest:
    description: Request to describe an existing <a>Authorizer</a> resource.
    properties: {}
    type: object
  GetAuthorizersRequest:
    description: Request to describe an existing <a>Authorizers</a> resource.
    properties: {}
    type: object
  GetBasePathMappingRequest:
    description: Request to describe a <a>BasePathMapping</a> resource.
    properties: {}
    type: object
  GetBasePathMappingsRequest:
    description: A request to get information about a collection of <a>BasePathMapping</a> resources.
    properties: {}
    type: object
  GetClientCertificateRequest:
    description: A request to get information about the current <a>ClientCertificate</a> resource.
    properties: {}
    type: object
  GetClientCertificatesRequest:
    description: A request to get information about a collection of <a>ClientCertificate</a> resources.
    properties: {}
    type: object
  GetDeploymentRequest:
    description: Requests Amazon API Gateway to get information about a <a>Deployment</a> resource.
    properties: {}
    type: object
  GetDeploymentsRequest:
    description: Requests Amazon API Gateway to get information about a <a>Deployments</a> collection.
    properties: {}
    type: object
  GetDocumentationPartRequest:
    description: Gets a specified documentation part of a given API.
    properties: {}
    type: object
  GetDocumentationPartsRequest:
    description: 'Gets the documentation parts of an API. The result may be filtered by the type, name, or path of API entities (targets).'
    properties: {}
    type: object
  GetDocumentationVersionRequest:
    description: Gets a documentation snapshot of an API.
    properties: {}
    type: object
  GetDocumentationVersionsRequest:
    description: Gets the documentation versions of an API.
    properties: {}
    type: object
  GetDomainNameRequest:
    description: Request to get the name of a <a>DomainName</a> resource.
    properties: {}
    type: object
  GetDomainNamesRequest:
    description: Request to describe a collection of <a>DomainName</a> resources.
    properties: {}
    type: object
  GetExportRequest:
    description: Request a new export of a <a>RestApi</a> for a particular <a>Stage</a>.
    properties: {}
    type: object
  GetGatewayResponseRequest:
    description: Gets a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.
    properties: {}
    type: object
  GetGatewayResponsesRequest:
    description: 'Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the Amazon API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.'
    properties: {}
    type: object
  GetIntegrationRequest:
    description: Represents a get integration request.
    properties: {}
    type: object
  GetIntegrationResponseRequest:
    description: Represents a get integration response request.
    properties: {}
    type: object
  GetMethodRequest:
    description: Request to describe an existing <a>Method</a> resource.
    properties: {}
    type: object
  GetMethodResponseRequest:
    description: Request to describe a <a>MethodResponse</a> resource.
    properties: {}
    type: object
  GetModelRequest:
    description: Request to list information about a model in an existing <a>RestApi</a> resource.
    properties: {}
    type: object
  GetModelTemplateRequest:
    description: Request to generate a sample mapping template used to transform the payload.
    properties: {}
    type: object
  GetModelsRequest:
    description: Request to list existing <a>Models</a> defined for a <a>RestApi</a> resource.
    properties: {}
    type: object
  GetRequestValidatorRequest:
    description: Gets a <a>RequestValidator</a> of a given <a>RestApi</a>.
    properties: {}
    type: object
  GetRequestValidatorsRequest:
    description: Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.
    properties: {}
    type: object
  GetResourceRequest:
    description: Request to list information about a resource.
    properties: {}
    type: object
  GetResourcesRequest:
    description: Request to list information about a collection of resources.
    properties: {}
    type: object
  GetRestApiRequest:
    description: 'The GET request to list an existing <a>RestApi</a> defined for your collection. '
    properties: {}
    type: object
  GetRestApisRequest:
    description: The GET request to list existing <a>RestApis</a> defined for your collection.
    properties: {}
    type: object
  GetSdkRequest:
    description: Request a new generated client SDK for a <a>RestApi</a> and <a>Stage</a>.
    properties: {}
    type: object
  GetSdkTypeRequest:
    description: Get an <a>SdkType</a> instance.
    properties: {}
    type: object
  GetSdkTypesRequest:
    description: Get the <a>SdkTypes</a> collection.
    properties: {}
    type: object
  GetStageRequest:
    description: Requests Amazon API Gateway to get information about a <a>Stage</a> resource.
    properties: {}
    type: object
  GetStagesRequest:
    description: Requests Amazon API Gateway to get information about one or more <a>Stage</a> resources.
    properties: {}
    type: object
  GetUsagePlanKeyRequest:
    description: The GET request to get a usage plan key of a given key identifier.
    properties: {}
    type: object
  GetUsagePlanKeysRequest:
    description: The GET request to get all the usage plan keys representing the API keys added to a specified usage plan.
    properties: {}
    type: object
  GetUsagePlanRequest:
    description: The GET request to get a usage plan of a given plan identifier.
    properties: {}
    type: object
  GetUsagePlansRequest:
    description: The GET request to get all the usage plans of the caller's account.
    properties: {}
    type: object
  GetUsageRequest:
    description: The GET request to get the usage data of a usage plan in a specified time interval.
    properties: {}
    type: object
  ImportApiKeysRequest:
    description: 'The POST request to import API keys from an external source, such as a CSV-formatted file.'
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: 'The payload of the POST request to import API keys. For the payload format, see <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-key-file-format.html">API Key File Format</a>.'
    required:
      - body
    type: object
  ImportDocumentationPartsRequest:
    description: 'Import documentation parts from an external (e.g., Swagger) definition file. '
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: '[Required] Raw byte array representing the to-be-imported documentation parts. To import from a Swagger file, this is a JSON object.'
    required:
      - body
    type: object
  ImportRestApiRequest:
    description: A POST request to import an API to Amazon API Gateway using an input of an API definition file.
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: 'The POST request body containing external API definitions. Currently, only Swagger definition JSON files are supported. The maximum size of the API definition file is 2MB.'
    required:
      - body
    type: object
  Integer:
    type: integer
  Integration:
    description: '<p>Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.</p> <div class="remarks">In the API Gateway console, the built-in Lambda integration is an AWS integration.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    properties:
      cacheKeyParameters:
        $ref: '#/definitions/ListOfString'
        description: Specifies the integration's cache key parameters.
      cacheNamespace:
        $ref: '#/definitions/String'
        description: Specifies the integration's cache namespace.
      contentHandling:
        $ref: '#/definitions/ContentHandlingStrategy'
        description: '<p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehaviors</code> is configured to support payload pass-through.</p>'
      credentials:
        $ref: '#/definitions/String'
        description: 'Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role''s Amazon Resource Name (ARN). To require that the caller''s identity be passed through from the request, specify the string <code>arn:aws:iam::\*:user/\*</code>. To use resource-based permissions on supported AWS services, specify null.'
      httpMethod:
        $ref: '#/definitions/String'
        description: Specifies the integration's HTTP method type.
      integrationResponses:
        $ref: '#/definitions/MapOfIntegrationResponse'
        description: '<p>Specifies the integration''s responses.</p> <div class="remarks"> <p/> <h4>Example: Get integration responses of a method</h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160607T191449Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre> <h5>Response</h5> <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path(''$.StreamNames''))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
      passthroughBehavior:
        $ref: '#/definitions/String'
        description: '<div> <p> Specifies how the method request body of an unmapped content type will be passed through the integration request to the back end without transformation. A content type is unmapped if no mapping template is defined in the integration or the content type does not match any of the mapped content types, as specified in <code>requestTemplates</code>. There are three valid values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>, and <code>NEVER</code>. </p> <ul> <li> <code>WHEN_NO_MATCH</code> passes the method request body through the integration request to the back end without transformation when the method request content type does not match any content type associated with the mapping templates defined in the integration request. </li> <li> <code>WHEN_NO_TEMPLATES</code> passes the method request body through the integration request to the back end without transformation when no mapping template is defined in the integration request. If a template is defined when this option is selected, the method request of an unmapped content-type will be rejected with an HTTP <code>415 Unsupported Media Type</code> response. </li> <li> <code>NEVER</code> rejects the method request with an HTTP <code>415 Unsupported Media Type</code> response when either the method request content type does not match any content type associated with the mapping templates defined in the integration request or no mapping template is defined in the integration request. </li> </ul> </div>'
      requestParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.'
      requestTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.'
      type:
        $ref: '#/definitions/IntegrationType'
        description: 'Specifies the integration''s type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.'
      uri:
        $ref: '#/definitions/String'
        description: 'Specifies the integration''s Uniform Resource Identifier (URI). For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank">RFC-3986 specification</a>. For AWS integrations, the URI should be of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}</code>. <code>Region</code>, <code>subdomain</code> and <code>service</code> are used to determine the right endpoint. For AWS services that use the <code>Action=</code> query string parameter, <code>service_api</code> should be a valid action for the desired service. For RESTful AWS service APIs, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>.'
    type: object
  IntegrationResponse:
    description: '<p>Represents an integration response. The status code must map to an existing <a>MethodResponse</a>, and parameters and templates can be used to transform the back-end response.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    properties:
      contentHandling:
        $ref: '#/definitions/ContentHandlingStrategy'
        description: '<p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>'
      responseParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> is a valid and unique response header name and <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.'
      responseTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Specifies the templates used to transform the integration response body. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.'
      selectionPattern:
        $ref: '#/definitions/String'
        description: 'Specifies the regular expression (regex) pattern used to choose an integration response based on the response from the back end. For example, if the success response returns nothing and the error response returns some string, you could use the <code>.+</code> regex to match error response. However, make sure that the error response does not contain any newline (<code>\n</code>) character in such cases. If the back end is an AWS Lambda function, the AWS Lambda function error header is matched. For all other HTTP and AWS back ends, the HTTP status code is matched.'
      statusCode:
        $ref: '#/definitions/StatusCode'
        description: Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.
    type: object
  IntegrationType:
    description: 'The integration type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.'
    enum:
      - HTTP
      - AWS
      - MOCK
      - HTTP_PROXY
      - AWS_PROXY
    type: string
  LimitExceededException:
    description: The request exceeded the rate limit. Retry after the specified time period.
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  ListOfARNs:
    items:
      $ref: '#/definitions/ProviderARN'
    type: array
  ListOfApiKey:
    items:
      $ref: '#/definitions/ApiKey'
    type: array
  ListOfApiStage:
    items:
      $ref: '#/definitions/ApiStage'
    type: array
  ListOfAuthorizer:
    items:
      $ref: '#/definitions/Authorizer'
    type: array
  ListOfBasePathMapping:
    items:
      $ref: '#/definitions/BasePathMapping'
    type: array
  ListOfClientCertificate:
    items:
      $ref: '#/definitions/ClientCertificate'
    type: array
  ListOfDeployment:
    items:
      $ref: '#/definitions/Deployment'
    type: array
  ListOfDocumentationPart:
    items:
      $ref: '#/definitions/DocumentationPart'
    type: array
  ListOfDocumentationVersion:
    items:
      $ref: '#/definitions/DocumentationVersion'
    type: array
  ListOfDomainName:
    items:
      $ref: '#/definitions/DomainName'
    type: array
  ListOfGatewayResponse:
    items:
      $ref: '#/definitions/GatewayResponse'
    type: array
  ListOfLong:
    items:
      $ref: '#/definitions/Long'
    type: array
  ListOfModel:
    items:
      $ref: '#/definitions/Model'
    type: array
  ListOfPatchOperation:
    description: A list of operations describing the updates to apply to the specified resource. The patches are applied in the order specified in the list.
    items:
      $ref: '#/definitions/PatchOperation'
    type: array
  ListOfRequestValidator:
    items:
      $ref: '#/definitions/RequestValidator'
    type: array
  ListOfResource:
    items:
      $ref: '#/definitions/Resource'
    type: array
  ListOfRestApi:
    items:
      $ref: '#/definitions/RestApi'
    type: array
  ListOfSdkConfigurationProperty:
    items:
      $ref: '#/definitions/SdkConfigurationProperty'
    type: array
  ListOfSdkType:
    items:
      $ref: '#/definitions/SdkType'
    type: array
  ListOfStage:
    items:
      $ref: '#/definitions/Stage'
    type: array
  ListOfStageKeys:
    items:
      $ref: '#/definitions/StageKey'
    type: array
  ListOfString:
    items:
      $ref: '#/definitions/String'
    type: array
  ListOfUsage:
    items:
      $ref: '#/definitions/ListOfLong'
    type: array
  ListOfUsagePlan:
    items:
      $ref: '#/definitions/UsagePlan'
    type: array
  ListOfUsagePlanKey:
    items:
      $ref: '#/definitions/UsagePlanKey'
    type: array
  Long:
    type: integer
  MapOfHeaderValues:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  MapOfIntegrationResponse:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/IntegrationResponse'
      type: object
    type: array
  MapOfKeyUsages:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/ListOfUsage'
      type: object
    type: array
  MapOfMethod:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/Method'
      type: object
    type: array
  MapOfMethodResponse:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/MethodResponse'
      type: object
    type: array
  MapOfMethodSettings:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/MethodSetting'
      type: object
    type: array
  MapOfMethodSnapshot:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/MethodSnapshot'
      type: object
    type: array
  MapOfStringToBoolean:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/NullableBoolean'
      type: object
    type: array
  MapOfStringToList:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/ListOfString'
      type: object
    type: array
  MapOfStringToString:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  Method:
    description: '<p> Represents a client-facing interface by which the client calls the API to access back-end resources. A <b>Method</b> resource is integrated with an <a>Integration</a> resource. Both consist of a request and one or more responses. The method request takes the client input that is passed to the back end through the integration request. A method response returns the output from the back end to the client through an integration response. A method request is embodied in a <b>Method</b> resource, whereas an integration request is embodied in an <a>Integration</a> resource. On the other hand, a method response is represented by a <a>MethodResponse</a> resource, whereas an integration response is represented by an <a>IntegrationResponse</a> resource. </p> <div class="remarks"> <p/> <h4>Example: Retrive the GET method on a specified resource</h4> <h5>Request</h5> <p>The following example request retrieves the information about the GET method on an API resource (<code>3kzxbg5sa2</code>) of an API (<code>fugvjdxtri</code>). </p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "''application/x-amz-json-1.1''" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }</code></pre> <p>In the example above, the response template for the <code>200 OK</code> response maps the JSON output from the <code>ListStreams</code> action in the back end to an XML output. The mapping template is URL-encoded as <code>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</code> and the output is decoded using the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#util-templat-reference">$util.urlDecode()</a> helper function.</p> </div> <div class="seeAlso"> <a>MethodResponse</a>, <a>Integration</a>, <a>IntegrationResponse</a>, <a>Resource</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings.html">Set up an API''s method</a> </div>'
    properties:
      apiKeyRequired:
        $ref: '#/definitions/NullableBoolean'
        description: A boolean flag specifying whether a valid <a>ApiKey</a> is required to invoke this method.
      authorizationType:
        $ref: '#/definitions/String'
        description: 'The method''s authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.'
      authorizerId:
        $ref: '#/definitions/String'
        description: The identifier of an <a>Authorizer</a> to use on this method. The <code>authorizationType</code> must be <code>CUSTOM</code>.
      httpMethod:
        $ref: '#/definitions/String'
        description: The method's HTTP verb.
      methodIntegration:
        $ref: '#/definitions/Integration'
        description: '<p>Gets the method''s integration responsible for passing the client-submitted request to the back end and performing necessary transformations to make the request compliant with the back end.</p> <div class="remarks"> <p/> <h4>Example: </h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T213210Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true } ], "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integration:responses": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "0cjtch", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestTemplates": { "application/json": "{\n \"a\": \"$input.params(''operand1'')\",\n \"b\": \"$input.params(''operand2'')\", \n \"op\": \"$input.params(''operator'')\" \n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.operator": "integration.response.body.op", "method.response.header.operand_2": "integration.response.body.b", "method.response.header.operand_1": "integration.response.body.a" }, "responseTemplates": { "application/json": "#set($res = $input.path(''$''))\n{\n \"result\": \"$res.a, $res.b, $res.op => $res.c\",\n \"a\" : \"$res.a\",\n \"b\" : \"$res.b\",\n \"op\" : \"$res.op\",\n \"c\" : \"$res.c\"\n}" }, "selectionPattern": "", "statusCode": "200" } } }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-integration.html">AWS CLI</a> </div>'
      methodResponses:
        $ref: '#/definitions/MapOfMethodResponse'
        description: '<p>Gets a method response associated with a given HTTP status code. </p> <div class="remarks"> <p>The collection of method responses are encapsulated in a key-value map, where the key is a response''s HTTP status code and the value is a <a>MethodResponse</a> resource that specifies the response returned to the caller from the back end through the integration response.</p> <h4>Example: Get a 200 OK response of a GET method</h4> <h5>Request</h5> <p/> <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com Content-Length: 117 X-Amz-Date: 20160613T215008Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.operator": false, "method.response.header.operand_2": false, "method.response.header.operand_1": false }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-method-response.html">AWS CLI</a> </div>'
      operationName:
        $ref: '#/definitions/String'
        description: 'A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in <a href="http://petstore-demo-endpoint.execute-api.com/petstore/pets">PetStore</a> example.'
      requestModels:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A key-value map specifying data schemas, represented by <a>Model</a> resources, (as the mapped value) of the request payloads of given content types (as the mapping key).'
      requestParameters:
        $ref: '#/definitions/MapOfStringToBoolean'
        description: 'A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key is a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or templates.'
      requestValidatorId:
        $ref: '#/definitions/String'
        description: The identifier of a <a>RequestValidator</a> for request validation.
    type: object
  MethodResponse:
    description: '<p>Represents a method response of a given HTTP status code returned to the client. The method response is passed from the back end through the associated integration response that can be transformed using a mapping template. </p> <div class="remarks"> <p/> <h4>Example: A <b>MethodResponse</b> instance of an API</h4> <h5>Request</h5> <p>The example request retrieves a <b>MethodResponse</b> of the 200 status code.</p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a>Method</a>, <a>IntegrationResponse</a>, <a>Integration</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    properties:
      responseModels:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Specifies the <a>Model</a> resources used for the response''s content-type. Response models are represented as a key/value map, with a content-type as the key and a <a>Model</a> name as the value.'
      responseParameters:
        $ref: '#/definitions/MapOfStringToBoolean'
        description: 'A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header and the value specifies whether the associated method response header is required or not. The expression of the key must match the pattern <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. Amazon API Gateway passes certain integration response data to the method response headers specified here according to the mapping you prescribe in the API''s <a>IntegrationResponse</a>. The integration response data that can be mapped include an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>''application/json''</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)'
      statusCode:
        $ref: '#/definitions/StatusCode'
        description: The method response's status code.
    type: object
  MethodSetting:
    description: Specifies the method setting properties.
    properties:
      cacheDataEncrypted:
        $ref: '#/definitions/Boolean'
        description: 'Specifies whether the cached responses are encrypted. The PATCH path for this setting is <code>/{method_setting_key}/caching/dataEncrypted</code>, and the value is a Boolean.'
      cacheTtlInSeconds:
        $ref: '#/definitions/Integer'
        description: 'Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/ttlInSeconds</code>, and the value is an integer.'
      cachingEnabled:
        $ref: '#/definitions/Boolean'
        description: 'Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/enabled</code>, and the value is a Boolean.'
      dataTraceEnabled:
        $ref: '#/definitions/Boolean'
        description: 'Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/dataTrace</code>, and the value is a Boolean.'
      loggingLevel:
        $ref: '#/definitions/String'
        description: 'Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/loglevel</code>, and the available levels are <code>OFF</code>, <code>ERROR</code>, and <code>INFO</code>.'
      metricsEnabled:
        $ref: '#/definitions/Boolean'
        description: 'Specifies whether Amazon CloudWatch metrics are enabled for this method. The PATCH path for this setting is <code>/{method_setting_key}/metrics/enabled</code>, and the value is a Boolean.'
      requireAuthorizationForCacheControl:
        $ref: '#/definitions/Boolean'
        description: 'Specifies whether authorization is required for a cache invalidation request. The PATCH path for this setting is <code>/{method_setting_key}/caching/requireAuthorizationForCacheControl</code>, and the value is a Boolean.'
      throttlingBurstLimit:
        $ref: '#/definitions/Integer'
        description: 'Specifies the throttling burst limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/burstLimit</code>, and the value is an integer.'
      throttlingRateLimit:
        $ref: '#/definitions/Double'
        description: 'Specifies the throttling rate limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/rateLimit</code>, and the value is a double.'
      unauthorizedCacheControlHeaderStrategy:
        $ref: '#/definitions/UnauthorizedCacheControlHeaderStrategy'
        description: 'Specifies how to handle unauthorized requests for cache invalidation. The PATCH path for this setting is <code>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</code>, and the available values are <code>FAIL_WITH_403</code>, <code>SUCCEED_WITH_RESPONSE_HEADER</code>, <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code>.'
    type: object
  MethodSnapshot:
    description: 'Represents a summary of a <a>Method</a> resource, given a particular date and time.'
    properties:
      apiKeyRequired:
        $ref: '#/definitions/Boolean'
        description: Specifies whether the method requires a valid <a>ApiKey</a>.
      authorizationType:
        $ref: '#/definitions/String'
        description: 'The method''s authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.'
    type: object
  Model:
    description: '<p>Represents the data structure of a method''s request or response payload.</p> <div class="remarks"> <p>A request model defines the data structure of the client-supplied request payload. A response model defines the data structure of the response payload returned by the back end. Although not required, models are useful for mapping payloads between the front end and back end.</p> <p>A model is used for generating an API''s SDK, validating the input request body, and creating a skeletal mapping template.</p> </div> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>'
    properties:
      contentType:
        $ref: '#/definitions/String'
        description: The content-type for the model.
      description:
        $ref: '#/definitions/String'
        description: The description of the model.
      id:
        $ref: '#/definitions/String'
        description: The identifier for the model resource.
      name:
        $ref: '#/definitions/String'
        description: The name of the model. Must be an alphanumeric string.
      schema:
        $ref: '#/definitions/String'
        description: 'The schema for the model. For <code>application/json</code> models, this should be <a href="http://json-schema.org/documentation.html" target="_blank">JSON-schema draft v4</a> model. Do not include "\*/" characters in the description of any properties because such "\*/" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API''s SDK generated by API Gateway to fail.'
    type: object
  Models:
    description: '<p>Represents a collection of <a>Model</a> resources.</p> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfModel'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  NotFoundException:
    description: The requested resource is not found. Make sure that the request URI is correct.
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  NullableBoolean:
    type: boolean
  NullableInteger:
    type: integer
  Op:
    enum:
      - add
      - remove
      - replace
      - move
      - copy
      - test
    type: string
  PatchOperation:
    description: 'A single patch operation to apply to the specified resource. Please refer to http://tools.ietf.org/html/rfc6902#section-4 for an explanation of how each operation is used.'
    properties:
      from:
        $ref: '#/definitions/String'
        description: ' Not supported.'
      op:
        $ref: '#/definitions/Op'
        description: 'An update operation to be performed with this PATCH request. The valid value can be "add", "remove", or "replace". Not all valid operations are supported for a given resource. Support of the operations depends on specific operational contexts. Attempts to apply an unsupported operation on a resource will return an error message.'
      path:
        $ref: '#/definitions/String'
        description: 'The <code>op</code> operation''s target, as identified by a <a href="https://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08">JSON Pointer</a> value that references a location within the targeted resource. For example, if the target resource has an updateable property of <code>{"name":"value"}</code>, the path for this property is <code>/name</code>. If the <code>name</code> property value is a JSON object (e.g., <code>{"name": {"child/name": "child-value"}}</code>), the path for the <code>child/name</code> property will be <code>/name/child~1name</code>. Any slash ("/") character appearing in path names must be escaped with "~1", as shown in the example above. Each <code>op</code> operation can have only one <code>path</code> associated with it.'
      value:
        $ref: '#/definitions/String'
        description: 'The new target value of the update operation. When using AWS CLI to update a property of a JSON value, enclose the JSON object with a pair of single quotes in a Linux shell, e.g., ''{"a": ...}''. In a Windows shell, see <a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using JSON for Parameters</a>.'
    type: object
  PathToMapOfMethodSnapshot:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/MapOfMethodSnapshot'
      type: object
    type: array
  ProviderARN:
    type: string
  PutGatewayResponseRequest:
    description: Creates a customization of a <a>GatewayResponse</a> of a specified response type and status code on the given <a>RestApi</a>.
    properties:
      responseParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: '<p><p>Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p></p>'
      responseTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: <p><p>Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p></p>
      statusCode:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status code of the <a>GatewayResponse</a>.
    type: object
  PutIntegrationRequest:
    description: Sets up a method's integration.
    properties:
      cacheKeyParameters:
        $ref: '#/definitions/ListOfString'
        description: Specifies a put integration input's cache key parameters.
      cacheNamespace:
        $ref: '#/definitions/String'
        description: Specifies a put integration input's cache namespace.
      contentHandling:
        $ref: '#/definitions/ContentHandlingStrategy'
        description: '<p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehaviors</code> is configured to support payload pass-through.</p>'
      credentials:
        $ref: '#/definitions/String'
        description: Specifies whether credentials are required for a put integration.
      integrationHttpMethod:
        $ref: '#/definitions/String'
        description: 'Specifies a put integration HTTP method. When the integration type is HTTP or AWS, this field is required.'
      passthroughBehavior:
        $ref: '#/definitions/String'
        description: '<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the <code>requestTemplates</code> property on the Integration resource. There are three valid values: <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>, and <code>NEVER</code>. </p> <ul> <li><p><code>WHEN_NO_MATCH</code> passes the request body for unmapped content types through to the integration back end without transformation.</p></li> <li><p><code>NEVER</code> rejects unmapped content types with an HTTP 415 ''Unsupported Media Type'' response.</p></li> <li><p><code>WHEN_NO_TEMPLATES</code> allows pass-through when the integration has NO content types mapped to templates. However if there is at least one content type defined, unmapped content types will be rejected with the same 415 response.</p></li> </ul>'
      requestParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.'
      requestTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.'
      type:
        $ref: '#/definitions/IntegrationType'
        description: Specifies a put integration input's type.
      uri:
        $ref: '#/definitions/String'
        description: 'Specifies the integration''s Uniform Resource Identifier (URI). For HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank">RFC-3986 specification</a>. For AWS integrations, the URI should be of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}</code>. <code>Region</code>, <code>subdomain</code> and <code>service</code> are used to determine the right endpoint. For AWS services that use the <code>Action=</code> query string parameter, <code>service_api</code> should be a valid action for the desired service. For RESTful AWS service APIs, <code>path</code> is used to indicate that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>.'
    required:
      - type
    type: object
  PutIntegrationResponseRequest:
    description: Represents a put integration response request.
    properties:
      contentHandling:
        $ref: '#/definitions/ContentHandlingStrategy'
        description: '<p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p> <ul> <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li> <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li> </ul> <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>'
      responseParameters:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A key-value map specifying response parameters that are passed to the method response from the back end. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> must be a valid and unique response header name and <code>JSON-expression</code> a valid JSON expression without the <code>$</code> prefix.'
      responseTemplates:
        $ref: '#/definitions/MapOfStringToString'
        description: Specifies a put integration response's templates.
      selectionPattern:
        $ref: '#/definitions/String'
        description: Specifies the selection pattern of a put integration response.
    type: object
  PutMethodRequest:
    description: Request to add a method to an existing <a>Resource</a> resource.
    properties:
      apiKeyRequired:
        $ref: '#/definitions/Boolean'
        description: Specifies whether the method required a valid <a>ApiKey</a>.
      authorizationType:
        $ref: '#/definitions/String'
        description: 'The method''s authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.'
      authorizerId:
        $ref: '#/definitions/String'
        description: 'Specifies the identifier of an <a>Authorizer</a> to use on this Method, if the type is CUSTOM.'
      operationName:
        $ref: '#/definitions/String'
        description: 'A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in <a href="http://petstore-demo-endpoint.execute-api.com/petstore/pets">PetStore</a> example.'
      requestModels:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Specifies the <a>Model</a> resources used for the request''s content type. Request models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.'
      requestParameters:
        $ref: '#/definitions/MapOfStringToBoolean'
        description: 'A key-value map defining required or optional method request parameters that can be accepted by Amazon API Gateway. A key defines a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or body-mapping templates.'
      requestValidatorId:
        $ref: '#/definitions/String'
        description: The identifier of a <a>RequestValidator</a> for validating the method request.
    required:
      - authorizationType
    type: object
  PutMethodResponseRequest:
    description: Request to add a <a>MethodResponse</a> to an existing <a>Method</a> resource.
    properties:
      responseModels:
        $ref: '#/definitions/MapOfStringToString'
        description: 'Specifies the <a>Model</a> resources used for the response''s content type. Response models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.'
      responseParameters:
        $ref: '#/definitions/MapOfStringToBoolean'
        description: 'A key-value map specifying required or optional response parameters that Amazon API Gateway can send back to the caller. A key defines a method response header name and the associated value is a Boolean flag indicating whether the method response parameter is required or not. The method response header names must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>''application/json''</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)'
    type: object
  PutMode:
    enum:
      - merge
      - overwrite
    type: string
  PutRestApiRequest:
    description: 'A PUT request to update an existing API, with external API definitions specified as the request body.'
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: 'The PUT request body containing external API definitions. Currently, only Swagger definition JSON files are supported. The maximum size of the API definition file is 2MB.'
    required:
      - body
    type: object
  QuotaPeriodType:
    enum:
      - DAY
      - WEEK
      - MONTH
    type: string
  QuotaSettings:
    description: Quotas configured for a usage plan.
    properties:
      limit:
        $ref: '#/definitions/Integer'
        description: The maximum number of requests that can be made in a given time period.
      offset:
        $ref: '#/definitions/Integer'
        description: The number of requests subtracted from the given limit in the initial time period.
      period:
        $ref: '#/definitions/QuotaPeriodType'
        description: 'The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".'
    type: object
  RequestValidator:
    description: '<p>A set of validation rules for incoming <a>Method</a> requests.</p> <div class="remarks"> <p>In Swagger, a <a>RequestValidator</a> of an API is defined by the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.requestValidator.html">x-amazon-apigateway-request-validators.requestValidator</a> object. It the referenced using the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validator">x-amazon-apigateway-request-validator</a> property.</p> </div> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html">Enable Basic Request Validation in API Gateway</a></div>'
    properties:
      id:
        $ref: '#/definitions/String'
        description: The identifier of this <a>RequestValidator</a>.
      name:
        $ref: '#/definitions/String'
        description: The name of this <a>RequestValidator</a>
      validateRequestBody:
        $ref: '#/definitions/Boolean'
        description: A Boolean flag to indicate whether to validate a request body according to the configured <a>Model</a> schema.
      validateRequestParameters:
        $ref: '#/definitions/Boolean'
        description: A Boolean flag to indicate whether to validate request parameters (<code>true</code>) or not (<code>false</code>).
    type: object
  RequestValidators:
    description: '<p>A collection of <a>RequestValidator</a> resources of a given <a>RestApi</a>.</p> <div class="remarks"> <p>In Swagger, the <a>RequestValidators</a> of an API is defined by the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.html">x-amazon-apigateway-request-validators</a> extension.</p> </div> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html">Enable Basic Request Validation in API Gateway</a></div>'
    properties:
      items:
        $ref: '#/definitions/ListOfRequestValidator'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  Resource:
    description: '<p>Represents an API resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    properties:
      id:
        $ref: '#/definitions/String'
        description: The resource's identifier.
      parentId:
        $ref: '#/definitions/String'
        description: The parent resource's identifier.
      path:
        $ref: '#/definitions/String'
        description: The full path for this resource.
      pathPart:
        $ref: '#/definitions/String'
        description: The last path segment for this resource.
      resourceMethods:
        $ref: '#/definitions/MapOfMethod'
        description: '<p>Gets an API resource''s method of a given HTTP verb.</p> <div class="remarks"> <p>The resource methods are a map of methods indexed by methods'' HTTP verbs enabled on the resource. This method map is included in the <code>200 OK</code> response of the <code>GET /restapis/{restapi_id}/resources/{resource_id}</code> or <code>GET /restapis/{restapi_id}/resources/{resource_id}?embed=methods</code> request.</p> <h4>Example: Get the GET method of an API resource</h4> <h5>Request</h5> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20170223T031827Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": false, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "''application/x-amz-json-1.1''" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E#foreach($stream in $input.path(''$.StreamNames''))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\")\n" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }</code></pre> <p>If the <code>OPTIONS</code> is enabled on the resource, you can follow the example here to get that method. Just replace the <code>GET</code> of the last path segment in the request URL with <code>OPTIONS</code>.</p> </div> <div class="seeAlso"> </div>'
    type: object
  Resources:
    description: '<p>Represents a collection of <a>Resource</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfResource'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  RestApi:
    description: '<p>Represents a REST API.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    properties:
      binaryMediaTypes:
        $ref: '#/definitions/ListOfString'
        description: 'The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.'
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the API was created.
      description:
        $ref: '#/definitions/String'
        description: The API's description.
      id:
        $ref: '#/definitions/String'
        description: The API's identifier. This identifier is unique across all of your APIs in Amazon API Gateway.
      name:
        $ref: '#/definitions/String'
        description: The API's name.
      version:
        $ref: '#/definitions/String'
        description: A version identifier for the API.
      warnings:
        $ref: '#/definitions/ListOfString'
        description: The warning messages reported when <code>failonwarnings</code> is turned on during API import.
    type: object
  RestApis:
    description: '<p>Contains references to your APIs and links that guide you in how to interact with your collection. A collection offers a paginated view of your APIs.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfRestApi'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  SdkConfigurationProperty:
    description: A configuration property of an SDK type.
    properties:
      defaultValue:
        $ref: '#/definitions/String'
        description: The default value of an <a>SdkType</a> configuration property.
      description:
        $ref: '#/definitions/String'
        description: The description of an <a>SdkType</a> configuration property.
      friendlyName:
        $ref: '#/definitions/String'
        description: The user-friendly name of an <a>SdkType</a> configuration property.
      name:
        $ref: '#/definitions/String'
        description: The name of a an <a>SdkType</a> configuration property.
      required:
        $ref: '#/definitions/Boolean'
        description: A boolean flag of an <a>SdkType</a> configuration property to indicate if the associated SDK configuration property is required (<code>true</code>) or not (<code>false</code>).
    type: object
  SdkResponse:
    description: 'The binary blob response to <a>GetSdk</a>, which contains the generated SDK.'
    properties:
      body:
        $ref: '#/definitions/Blob'
        description: 'The binary blob response to <a>GetSdk</a>, which contains the generated SDK.'
    type: object
  SdkType:
    description: A type of SDK that API Gateway can generate.
    properties:
      configurationProperties:
        $ref: '#/definitions/ListOfSdkConfigurationProperty'
        description: A list of configuration properties of an <a>SdkType</a>.
      description:
        $ref: '#/definitions/String'
        description: The description of an <a>SdkType</a>.
      friendlyName:
        $ref: '#/definitions/String'
        description: The user-friendly name of an <a>SdkType</a> instance.
      id:
        $ref: '#/definitions/String'
        description: The identifier of an <a>SdkType</a> instance.
    type: object
  SdkTypes:
    description: The collection of <a>SdkType</a> instances.
    properties:
      items:
        $ref: '#/definitions/ListOfSdkType'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  ServiceUnavailableException:
    description: The requested service is not available. For details see the accompanying error message. Retry after the specified time period.
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  Stage:
    description: '<p>Represents a unique identifier for a version of a deployed <a>RestApi</a> that is callable by users.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploy an API</a> </div>'
    properties:
      cacheClusterEnabled:
        $ref: '#/definitions/Boolean'
        description: Specifies whether a cache cluster is enabled for the stage.
      cacheClusterSize:
        $ref: '#/definitions/CacheClusterSize'
        description: 'The size of the cache cluster for the stage, if enabled.'
      cacheClusterStatus:
        $ref: '#/definitions/CacheClusterStatus'
        description: 'The status of the cache cluster for the stage, if enabled.'
      clientCertificateId:
        $ref: '#/definitions/String'
        description: The identifier of a client certificate for an API stage.
      createdDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the stage was created.
      deploymentId:
        $ref: '#/definitions/String'
        description: The identifier of the <a>Deployment</a> that the stage points to.
      description:
        $ref: '#/definitions/String'
        description: The stage's description.
      documentationVersion:
        $ref: '#/definitions/String'
        description: The version of the associated API documentation.
      lastUpdatedDate:
        $ref: '#/definitions/Timestamp'
        description: The timestamp when the stage last updated.
      methodSettings:
        $ref: '#/definitions/MapOfMethodSettings'
        description: 'A map that defines the method settings for a <a>Stage</a> resource. Keys (designated as <code>/{method_setting_key</code> below) are method paths defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>/\*/\*</code> for overriding all methods in the stage. '
      stageName:
        $ref: '#/definitions/String'
        description: The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to Amazon API Gateway.
      variables:
        $ref: '#/definitions/MapOfStringToString'
        description: 'A map that defines the stage variables for a <a>Stage</a> resource. Variable names can have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&amp;=,]+</code>.'
    type: object
  StageKey:
    description: 'A reference to a unique stage identified in the format <code>{restApiId}/{stage}</code>.'
    properties:
      restApiId:
        $ref: '#/definitions/String'
        description: The string identifier of the associated <a>RestApi</a>.
      stageName:
        $ref: '#/definitions/String'
        description: The stage name associated with the stage key.
    type: object
  Stages:
    description: '<p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html">Deploying API in Stages</a></div>'
    properties:
      item:
        $ref: '#/definitions/ListOfStage'
        description: The current page of elements from this collection.
    type: object
  StatusCode:
    description: The status code.
    pattern: '[1-5]\d\d'
    type: string
  String:
    type: string
  Template:
    description: '<p>Represents a mapping template used to transform a payload.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings">Mapping Templates</a> </div>'
    properties:
      value:
        $ref: '#/definitions/String'
        description: 'The Apache <a href="http://velocity.apache.org/engine/devel/vtl-reference-guide.html" target="_blank">Velocity Template Language (VTL)</a> template content used for the template resource.'
    type: object
  TestInvokeAuthorizerRequest:
    description: Make a request to simulate the execution of an <a>Authorizer</a>.
    properties:
      additionalContext:
        $ref: '#/definitions/MapOfStringToString'
        description: '[Optional] A key-value map of additional context variables.'
      body:
        $ref: '#/definitions/String'
        description: '[Optional] The simulated request body of an incoming invocation request.'
      headers:
        $ref: '#/definitions/MapOfHeaderValues'
        description: '[Required] A key-value map of headers to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, should be specified.'
      pathWithQueryString:
        $ref: '#/definitions/String'
        description: '[Optional] The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.'
      stageVariables:
        $ref: '#/definitions/MapOfStringToString'
        description: A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.
    type: object
  TestInvokeAuthorizerResponse:
    description: Represents the response of the test invoke request for a custom <a>Authorizer</a>
    properties:
      authorization:
        $ref: '#/definitions/MapOfStringToList'
      claims:
        $ref: '#/definitions/MapOfStringToString'
        description: 'The <a href="http://openid.net/specs/openid-connect-core-1_0.html#StandardClaims">open identity claims</a>, with any supported custom attributes, returned from the Cognito Your User Pool configured for the API.'
      clientStatus:
        $ref: '#/definitions/Integer'
        description: The HTTP status code that the client would have received. Value is 0 if the authorizer succeeded.
      latency:
        $ref: '#/definitions/Long'
        description: The execution latency of the test authorizer request.
      log:
        $ref: '#/definitions/String'
        description: The Amazon API Gateway execution log for the test authorizer request.
      policy:
        $ref: '#/definitions/String'
        description: The JSON policy document returned by the <a>Authorizer</a>
      principalId:
        $ref: '#/definitions/String'
        description: The principal identity returned by the <a>Authorizer</a>
    type: object
  TestInvokeMethodRequest:
    description: Make a request to simulate the execution of a <a>Method</a>.
    properties:
      body:
        $ref: '#/definitions/String'
        description: The simulated request body of an incoming invocation request.
      clientCertificateId:
        $ref: '#/definitions/String'
        description: A <a>ClientCertificate</a> identifier to use in the test invocation. API Gateway will use the certificate when making the HTTPS request to the defined back-end endpoint.
      headers:
        $ref: '#/definitions/MapOfHeaderValues'
        description: A key-value map of headers to simulate an incoming invocation request.
      pathWithQueryString:
        $ref: '#/definitions/String'
        description: 'The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.'
      stageVariables:
        $ref: '#/definitions/MapOfStringToString'
        description: A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.
    type: object
  TestInvokeMethodResponse:
    description: '<p>Represents the response of the test invoke request in the HTTP method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-test-method.html#how-to-test-method-console">Test API using the API Gateway console</a> </div>'
    properties:
      body:
        $ref: '#/definitions/String'
        description: The body of the HTTP response.
      headers:
        $ref: '#/definitions/MapOfHeaderValues'
        description: The headers of the HTTP response.
      latency:
        $ref: '#/definitions/Long'
        description: The execution latency of the test invoke request.
      log:
        $ref: '#/definitions/String'
        description: The Amazon API Gateway execution log for the test invoke request.
      status:
        $ref: '#/definitions/Integer'
        description: The HTTP status code.
    type: object
  ThrottleSettings:
    description: ' The API request rate limits.'
    properties:
      burstLimit:
        $ref: '#/definitions/Integer'
        description: 'The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.'
      rateLimit:
        $ref: '#/definitions/Double'
        description: The API request steady-state rate limit.
    type: object
  Timestamp:
    format: date-time
    type: string
  TooManyRequestsException:
    description: The request has reached its throttling limit. Retry after the specified time period.
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  UnauthorizedCacheControlHeaderStrategy:
    enum:
      - FAIL_WITH_403
      - SUCCEED_WITH_RESPONSE_HEADER
      - SUCCEED_WITHOUT_RESPONSE_HEADER
    type: string
  UnauthorizedException:
    description: The request is denied because the caller has insufficient permissions.
    properties:
      message:
        $ref: '#/definitions/String'
    type: object
  UpdateAccountRequest:
    description: Requests Amazon API Gateway to change information about the current <a>Account</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateApiKeyRequest:
    description: A request to change information about an <a>ApiKey</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateAuthorizerRequest:
    description: Request to update an existing <a>Authorizer</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateBasePathMappingRequest:
    description: A request to change information about the <a>BasePathMapping</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateClientCertificateRequest:
    description: A request to change information about an <a>ClientCertificate</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateDeploymentRequest:
    description: Requests Amazon API Gateway to change information about a <a>Deployment</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateDocumentationPartRequest:
    description: Updates an existing documentation part of a given API.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateDocumentationVersionRequest:
    description: Updates an existing documentation version of an API.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateDomainNameRequest:
    description: A request to change information about the <a>DomainName</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateGatewayResponseRequest:
    description: Updates a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateIntegrationRequest:
    description: Represents an update integration request.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateIntegrationResponseRequest:
    description: Represents an update integration response request.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateMethodRequest:
    description: Request to update an existing <a>Method</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateMethodResponseRequest:
    description: A request to update an existing <a>MethodResponse</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateModelRequest:
    description: Request to update an existing model in an existing <a>RestApi</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateRequestValidatorRequest:
    description: Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateResourceRequest:
    description: Request to change information about a <a>Resource</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateRestApiRequest:
    description: Request to update an existing <a>RestApi</a> resource in your collection.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateStageRequest:
    description: Requests Amazon API Gateway to change information about a <a>Stage</a> resource.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateUsagePlanRequest:
    description: The PATCH request to update a usage plan of a given plan Id.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  UpdateUsageRequest:
    description: The PATCH request to grant a temporary extension to the remaining quota of a usage plan associated with a specified API key.
    properties:
      patchOperations:
        $ref: '#/definitions/ListOfPatchOperation'
        description: A list of update operations to be applied to the specified resource and in the order specified in this list.
    type: object
  Usage:
    description: '<p>Represents the usage data of a usage plan.</p> <div class="remarks"/> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-usage-plans-with-console.html#api-gateway-usage-plan-manage-usage">Manage Usage in a Usage Plan</a> </div>'
    properties:
      endDate:
        $ref: '#/definitions/String'
        description: The ending date of the usage data.
      items:
        $ref: '#/definitions/MapOfKeyUsages'
        description: 'The usage data, as daily logs of used and remaining quotas, over the specified time interval indexed over the API keys in a usage plan. For example, <code>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100, 10]]}</code>, where <code>{api_key}</code> stands for an API key value and the daily log entry is of the format <code>[used quota, remaining quota]</code>.'
      position:
        $ref: '#/definitions/String'
      startDate:
        $ref: '#/definitions/String'
        description: The starting date of the usage data.
      usagePlanId:
        $ref: '#/definitions/String'
        description: The plan Id associated with this usage data.
    type: object
  UsagePlan:
    description: '<p>Represents a usage plan than can specify who can assess associated API stages with specified request limits and quotas.</p> <div class="remarks"> <p>In a usage plan, you associate an API by specifying the API''s Id and a stage name of the specified API. You add plan customers by adding API keys to the plan. </p> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    properties:
      apiStages:
        $ref: '#/definitions/ListOfApiStage'
        description: The associated API stages of a usage plan.
      description:
        $ref: '#/definitions/String'
        description: The description of a usage plan.
      id:
        $ref: '#/definitions/String'
        description: The identifier of a <a>UsagePlan</a> resource.
      name:
        $ref: '#/definitions/String'
        description: The name of a usage plan.
      productCode:
        $ref: '#/definitions/String'
        description: The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
      quota:
        $ref: '#/definitions/QuotaSettings'
        description: The maximum number of permitted requests per a given unit time interval.
      throttle:
        $ref: '#/definitions/ThrottleSettings'
        description: The request throttle limits of a usage plan.
    type: object
  UsagePlanKey:
    description: '<p>Represents a usage plan key to identify a plan customer.</p> <div class="remarks"> <p>To associate an API stage with a selected API key in a usage plan, you must create a UsagePlanKey resource to represent the selected <a>ApiKey</a>.</p> </div>" <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    properties:
      id:
        $ref: '#/definitions/String'
        description: The Id of a usage plan key.
      name:
        $ref: '#/definitions/String'
        description: The name of a usage plan key.
      type:
        $ref: '#/definitions/String'
        description: 'The type of a usage plan key. Currently, the valid key type is <code>API_KEY</code>.'
      value:
        $ref: '#/definitions/String'
        description: The value of a usage plan key.
    type: object
  UsagePlanKeys:
    description: '<p>Represents the collection of usage plan keys added to usage plans for the associated API keys and, possibly, other types of keys.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfUsagePlanKey'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
  UsagePlans:
    description: '<p>Represents a collection of usage plans for an AWS account.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    properties:
      items:
        $ref: '#/definitions/ListOfUsagePlan'
        description: The current page of elements from this collection.
      position:
        $ref: '#/definitions/String'
    type: object
