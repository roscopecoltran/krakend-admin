syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package autoscaling;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachInstancesQuery body = 10;
}

message Post#AttachLoadBalancerTargetGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachLoadBalancerTargetGroupsType body = 10;
}

message Post#AttachLoadBalancersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachLoadBalancersType body = 10;
}

message Post#CompleteLifecycleActionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CompleteLifecycleActionType body = 10;
}

message Post#CreateAutoScalingGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateAutoScalingGroupType body = 10;
}

message Post#CreateLaunchConfigurationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateLaunchConfigurationType body = 10;
}

message Post#CreateOrUpdateTagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateOrUpdateTagsType body = 10;
}

message Post#DeleteAutoScalingGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteAutoScalingGroupType body = 10;
}

message Post#DeleteLaunchConfigurationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    LaunchConfigurationNameType body = 10;
}

message Post#DeleteLifecycleHookRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteLifecycleHookType body = 10;
}

message Post#DeleteNotificationConfigurationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNotificationConfigurationType body = 10;
}

message Post#DeletePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePolicyType body = 10;
}

message Post#DeleteScheduledActionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteScheduledActionType body = 10;
}

message Post#DeleteTagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteTagsType body = 10;
}

message Post#DescribeAccountLimitsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeAdjustmentTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeAutoScalingGroupsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    AutoScalingGroupNamesType body = 12;
}

message Post#DescribeAutoScalingInstancesRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeAutoScalingInstancesType body = 12;
}

message Post#DescribeAutoScalingNotificationTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeLaunchConfigurationsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    LaunchConfigurationNamesType body = 12;
}

message Post#DescribeLifecycleHookTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeLifecycleHooksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeLifecycleHooksType body = 10;
}

message Post#DescribeLoadBalancerTargetGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeLoadBalancerTargetGroupsRequest body = 10;
}

message Post#DescribeLoadBalancersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeLoadBalancersRequest body = 10;
}

message Post#DescribeMetricCollectionTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeNotificationConfigurationsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeNotificationConfigurationsType body = 12;
}

message Post#DescribePoliciesRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribePoliciesType body = 12;
}

message Post#DescribeScalingActivitiesRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeScalingActivitiesType body = 12;
}

message Post#DescribeScalingProcessTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeScheduledActionsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeScheduledActionsType body = 12;
}

message Post#DescribeTagsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTagsType body = 12;
}

message Post#DescribeTerminationPolicyTypesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DetachInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachInstancesQuery body = 10;
}

message Post#DetachLoadBalancerTargetGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachLoadBalancerTargetGroupsType body = 10;
}

message Post#DetachLoadBalancersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachLoadBalancersType body = 10;
}

message Post#DisableMetricsCollectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisableMetricsCollectionQuery body = 10;
}

message Post#EnableMetricsCollectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableMetricsCollectionQuery body = 10;
}

message Post#EnterStandbyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnterStandbyQuery body = 10;
}

message Post#ExecutePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ExecutePolicyType body = 10;
}

message Post#ExitStandbyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ExitStandbyQuery body = 10;
}

message Post#PutLifecycleHookRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PutLifecycleHookType body = 10;
}

message Post#PutNotificationConfigurationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PutNotificationConfigurationType body = 10;
}

message Post#PutScalingPolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PutScalingPolicyType body = 10;
}

message Post#PutScheduledUpdateGroupActionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PutScheduledUpdateGroupActionType body = 10;
}

message Post#RecordLifecycleActionHeartbeatRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RecordLifecycleActionHeartbeatType body = 10;
}

message Post#ResumeProcessesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ScalingProcessQuery body = 10;
}

message Post#SetDesiredCapacityRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    SetDesiredCapacityType body = 10;
}

message Post#SetInstanceHealthRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    SetInstanceHealthQuery body = 10;
}

message Post#SetInstanceProtectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    SetInstanceProtectionQuery body = 10;
}

message Post#SuspendProcessesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ScalingProcessQuery body = 10;
}

message Post#TerminateInstanceInAutoScalingGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TerminateInstanceInAutoScalingGroupType body = 10;
}

message Post#UpdateAutoScalingGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateAutoScalingGroupType body = 10;
}





repeated Activity Activities = 1

message ActivitiesType {
    // The scaling activities. Activities are sorted by start time. Activities still in progress are described first.
    array Activities = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

message Activity {
    // The ID of the activity.
    string ActivityId = 1;
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 2;
    // The reason the activity began.
    string Cause = 3;
    // A friendly, more verbose description of the activity.
    string Description = 4;
    // The details about the activity.
    string Details = 5;
    // The end time of the activity.
    string EndTime = 6;
    // A value between 0 and 100 that indicates the progress of the activity.
    integer Progress = 7;
    // The start time of the activity.
    string StartTime = 8;
    // The current status of the activity.
    ScalingActivityStatusCode StatusCode = 9;
    // A friendly, more verbose description of the activity status.
    string StatusMessage = 10;
}

repeated string ActivityIds = 1

message ActivityType {
    // A scaling activity.
    Activity Activity = 1;
}

message AdjustmentType {
    // The policy adjustment type. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.
    string AdjustmentType = 1;
}

repeated AdjustmentType AdjustmentTypes = 1

message Alarm {
    // The Amazon Resource Name (ARN) of the alarm.
    string AlarmARN = 1;
    // The name of the alarm.
    string AlarmName = 2;
}

repeated Alarm Alarms = 1

message AlreadyExistsFault {
    // <p/>
    string message = 1;
}

message AttachInstancesQuery {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
}

message AttachLoadBalancerTargetGroupsResultType {
}

message AttachLoadBalancerTargetGroupsType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The Amazon Resource Names (ARN) of the target groups.
    array TargetGroupARNs = 2;
}

message AttachLoadBalancersResultType {
}

message AttachLoadBalancersType {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // One or more load balancer names.
    array LoadBalancerNames = 2;
}

message AutoScalingGroup {
    // The Amazon Resource Name (ARN) of the group.
    string AutoScalingGroupARN = 1;
    // The name of the group.
    string AutoScalingGroupName = 2;
    // One or more Availability Zones for the group.
    array AvailabilityZones = 3;
    // The date and time the group was created.
    string CreatedTime = 4;
    // The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
    integer DefaultCooldown = 5;
    // The desired size of the group.
    integer DesiredCapacity = 6;
    // The metrics enabled for the group.
    array EnabledMetrics = 7;
    // The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service.
    integer HealthCheckGracePeriod = 8;
    // The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>.
    string HealthCheckType = 9;
    // The EC2 instances associated with the group.
    array Instances = 10;
    // The name of the associated launch configuration.
    string LaunchConfigurationName = 11;
    // One or more load balancers associated with the group.
    array LoadBalancerNames = 12;
    // The maximum size of the group.
    integer MaxSize = 13;
    // The minimum size of the group.
    integer MinSize = 14;
    // Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.
    boolean NewInstancesProtectedFromScaleIn = 15;
    // The name of the placement group into which you'll launch your instances, if any. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string PlacementGroup = 16;
    // The current state of the group when <a>DeleteAutoScalingGroup</a> is in progress.
    string Status = 17;
    // The suspended processes associated with the group.
    array SuspendedProcesses = 18;
    // The tags for the group.
    array Tags = 19;
    // The Amazon Resource Names (ARN) of the target groups for your load balancer.
    array TargetGroupARNs = 20;
    // The termination policies for the group.
    array TerminationPolicies = 21;
    // <p>One or more subnet IDs, if applicable, separated by commas.</p> <p>If you specify <code>VPCZoneIdentifier</code> and <code>AvailabilityZones</code>, ensure that the Availability Zones of the subnets match the values for <code>AvailabilityZones</code>.</p>
    string VPCZoneIdentifier = 22;
}







repeated string AutoScalingGroupNames = 1

message AutoScalingGroupNamesType {
    // The group names. If you omit this parameter, all Auto Scaling groups are described.
    array AutoScalingGroupNames = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

repeated AutoScalingGroup AutoScalingGroups = 1

message AutoScalingGroupsType {
    // The groups.
    array AutoScalingGroups = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

message AutoScalingInstanceDetails {
    // The name of the Auto Scaling group associated with the instance.
    string AutoScalingGroupName = 1;
    // The Availability Zone for the instance.
    string AvailabilityZone = 2;
    // The last reported health status of this instance. "Healthy" means that the instance is healthy and should remain in service. "Unhealthy" means that the instance is unhealthy and Auto Scaling should terminate and replace it.
    string HealthStatus = 3;
    // The ID of the instance.
    string InstanceId = 4;
    // The launch configuration used to launch the instance. This value is not available if you attached the instance to the Auto Scaling group.
    string LaunchConfigurationName = 5;
    // The lifecycle state for the instance. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Auto Scaling User Guide</i>.
    string LifecycleState = 6;
    // Indicates whether the instance is protected from termination by Auto Scaling when scaling in.
    boolean ProtectedFromScaleIn = 7;
}

repeated AutoScalingInstanceDetails AutoScalingInstances = 1

message AutoScalingInstancesType {
    // The instances.
    array AutoScalingInstances = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

repeated string AutoScalingNotificationTypes = 1

repeated string AvailabilityZones = 1











message BlockDeviceMapping {
    // The device name exposed to the EC2 instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string DeviceName = 1;
    // The information about the Amazon EBS volume.
    Ebs Ebs = 2;
    // <p>Suppresses a device mapping.</p> <p>If this parameter is true for the root device, the instance might fail the EC2 health check. Auto Scaling launches a replacement instance if the instance fails the health check.</p>
    boolean NoDevice = 3;
    // The name of the virtual device (for example, <code>ephemeral0</code>).
    string VirtualName = 4;
}

repeated BlockDeviceMapping BlockDeviceMappings = 1

repeated string ClassicLinkVPCSecurityGroups = 1

message CompleteLifecycleActionAnswer {
}

message CompleteLifecycleActionType {
    // The name of the group for the lifecycle hook.
    string AutoScalingGroupName = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // The action for the group to take. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>.
    string LifecycleActionResult = 3;
    // A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
    string LifecycleActionToken = 4;
    // The name of the lifecycle hook.
    string LifecycleHookName = 5;
}

message CreateAutoScalingGroupType {
    // The name of the group. This name must be unique within the scope of your AWS account.
    string AutoScalingGroupName = 1;
    // One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets.
    array AvailabilityZones = 2;
    // <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/Cooldown.html">Auto Scaling Cooldowns</a> in the <i>Auto Scaling User Guide</i>.</p>
    integer DefaultCooldown = 3;
    // The number of EC2 instances that should be running in the group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.
    integer DesiredCapacity = 4;
    // <p>The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default is 0.</p> <p>This parameter is required if you are adding an <code>ELB</code> health check.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/healthcheck.html">Health Checks</a> in the <i>Auto Scaling User Guide</i>.</p>
    integer HealthCheckGracePeriod = 5;
    // <p>The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>.</p> <p>By default, health checks use Amazon EC2 instance status checks to determine the health of an instance. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/healthcheck.html">Health Checks</a> in the <i>Auto Scaling User Guide</i>.</p>
    string HealthCheckType = 6;
    // <p>The ID of the instance used to create a launch configuration for the group. Alternatively, specify a launch configuration instead of an EC2 instance.</p> <p>When you specify an ID of an instance, Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, with the exception of the block device mapping.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/create-asg-from-instance.html">Create an Auto Scaling Group Using an EC2 Instance</a> in the <i>Auto Scaling User Guide</i>.</p>
    string InstanceId = 7;
    // The name of the launch configuration. Alternatively, specify an EC2 instance instead of a launch configuration.
    string LaunchConfigurationName = 8;
    // One or more lifecycle hooks.
    array LifecycleHookSpecificationList = 9;
    // <p>One or more Classic Load Balancers. To specify an Application Load Balancer, use <code>TargetGroupARNs</code> instead.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/create-asg-from-instance.html">Using a Load Balancer With an Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    array LoadBalancerNames = 10;
    // The maximum size of the group.
    integer MaxSize = 11;
    // The minimum size of the group.
    integer MinSize = 12;
    // Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.
    boolean NewInstancesProtectedFromScaleIn = 13;
    // The name of the placement group into which you'll launch your instances, if any. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string PlacementGroup = 14;
    // <p>One or more tags.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Auto Scaling User Guide</i>.</p>
    array Tags = 15;
    // The Amazon Resource Names (ARN) of the target groups.
    array TargetGroupARNs = 16;
    // <p>One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Auto Scaling User Guide</i>.</p>
    array TerminationPolicies = 17;
    // <p>A comma-separated list of subnet identifiers for your virtual private cloud (VPC).</p> <p>If you specify subnets and Availability Zones with this call, ensure that the subnets' Availability Zones match the Availability Zones specified.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Auto Scaling User Guide</i>.</p>
    string VPCZoneIdentifier = 18;
}

message CreateLaunchConfigurationType {
    // <p>Used for groups that launch instances into a virtual private cloud (VPC). Specifies whether to assign a public IP address to each instance. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Auto Scaling User Guide</i>.</p> <p>If you specify this parameter, be sure to specify at least one subnet when you create your group.</p> <p>Default: If the instance is launched into a default subnet, the default is <code>true</code>. If the instance is launched into a nondefault subnet, the default is <code>false</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported Platforms</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    boolean AssociatePublicIpAddress = 1;
    // One or more mappings that specify how block devices are exposed to the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    array BlockDeviceMappings = 2;
    // The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. This parameter is supported only if you are launching EC2-Classic instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClassicLinkVPCId = 3;
    // The IDs of one or more security groups for the specified ClassicLink-enabled VPC. This parameter is required if you specify a ClassicLink-enabled VPC, and is not supported otherwise. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    array ClassicLinkVPCSecurityGroups = 4;
    // Indicates whether the instance is optimized for Amazon EBS I/O. By default, the instance is not optimized for EBS I/O. The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional usage charges apply. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    boolean EbsOptimized = 5;
    // <p>The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance.</p> <p>EC2 instances launched with an IAM role will automatically have AWS security credentials available. You can use IAM roles with Auto Scaling to automatically enable applications running on your EC2 instances to securely access other AWS resources. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/us-iam-role.html">Launch Auto Scaling Instances with an IAM Role</a> in the <i>Auto Scaling User Guide</i>.</p>
    string IamInstanceProfile = 6;
    // <p>The ID of the Amazon Machine Image (AMI) to use to launch your EC2 instances.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>ImageId</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    string ImageId = 7;
    // <p>The ID of the instance to use to create the launch configuration. The new launch configuration derives attributes from the instance, with the exception of the block device mapping.</p> <p>If you do not specify <code>InstanceId</code>, you must specify both <code>ImageId</code> and <code>InstanceType</code>.</p> <p>To create a launch configuration with a block device mapping or override any other instance attributes, specify them as part of the same request.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/create-lc-with-instanceID.html">Create a Launch Configuration Using an EC2 Instance</a> in the <i>Auto Scaling User Guide</i>.</p>
    string InstanceId = 8;
    // Enables detailed monitoring (<code>true</code>) or basic monitoring (<code>false</code>) for the Auto Scaling instances. The default is <code>true</code>.
    InstanceMonitoring InstanceMonitoring = 9;
    // <p>The instance type of the EC2 instance.</p> <p>If you do not specify <code>InstanceId</code>, you must specify <code>InstanceType</code>.</p> <p>For information about available instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide.</i> </p>
    string InstanceType = 10;
    // The ID of the kernel associated with the AMI.
    string KernelId = 11;
    // The name of the key pair. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon EC2 Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string KeyName = 12;
    // The name of the launch configuration. This name must be unique within the scope of your AWS account.
    string LaunchConfigurationName = 13;
    // <p>The tenancy of the instance. An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware and can only be launched into a VPC.</p> <p>You must set the value of this parameter to <code>dedicated</code> if want to launch Dedicated Instances into a shared tenancy VPC (VPC with instance placement tenancy attribute set to <code>default</code>).</p> <p>If you specify this parameter, be sure to specify at least one subnet when you create your group.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Auto Scaling User Guide</i>.</p> <p>Valid values: <code>default</code> | <code>dedicated</code> </p>
    string PlacementTenancy = 14;
    // The ID of the RAM disk associated with the AMI.
    string RamdiskId = 15;
    // <p>One or more security groups with which to associate the instances.</p> <p>If your instances are launched in EC2-Classic, you can either specify security group names or the security group IDs. For more information about security groups for EC2-Classic, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If your instances are launched into a VPC, specify security group IDs. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    array SecurityGroups = 16;
    // The maximum hourly price to be paid for any Spot Instance launched to fulfill the request. Spot Instances are launched when the price you specify exceeds the current Spot market price. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/US-SpotInstances.html">Launching Spot Instances in Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.
    string SpotPrice = 17;
    // The user data to make available to the launched EC2 instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string UserData = 18;
}

message CreateOrUpdateTagsType {
    // One or more tags.
    array Tags = 1;
}

message CustomizedMetricSpecification {
    // The dimensions of the metric.
    array Dimensions = 1;
    // The name of the metric.
    string MetricName = 2;
    // The namespace of the metric.
    string Namespace = 3;
    // The statistic of the metric.
    MetricStatistic Statistic = 4;
    // The unit of the metric.
    string Unit = 5;
}

message DeleteAutoScalingGroupType {
    // The name of the group to delete.
    string AutoScalingGroupName = 1;
    // Specifies that the group will be deleted along with all instances associated with the group, without waiting for all instances to be terminated. This parameter also deletes any lifecycle actions associated with the group.
    boolean ForceDelete = 2;
}

message DeleteLifecycleHookAnswer {
}

message DeleteLifecycleHookType {
    // The name of the Auto Scaling group for the lifecycle hook.
    string AutoScalingGroupName = 1;
    // The name of the lifecycle hook.
    string LifecycleHookName = 2;
}

message DeleteNotificationConfigurationType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
    string TopicARN = 2;
}

message DeletePolicyType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The name or Amazon Resource Name (ARN) of the policy.
    string PolicyName = 2;
}

message DeleteScheduledActionType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The name of the action to delete.
    string ScheduledActionName = 2;
}

message DeleteTagsType {
    // One or more tags.
    array Tags = 1;
}

message DescribeAccountLimitsAnswer {
    // The maximum number of groups allowed for your AWS account. The default limit is 20 per region.
    integer MaxNumberOfAutoScalingGroups = 1;
    // The maximum number of launch configurations allowed for your AWS account. The default limit is 100 per region.
    integer MaxNumberOfLaunchConfigurations = 2;
    // The current number of groups for your AWS account.
    integer NumberOfAutoScalingGroups = 3;
    // The current number of launch configurations for your AWS account.
    integer NumberOfLaunchConfigurations = 4;
}

message DescribeAdjustmentTypesAnswer {
    // The policy adjustment types.
    array AdjustmentTypes = 1;
}

message DescribeAutoScalingInstancesType {
    // The instances to describe; up to 50 instance IDs. If you omit this parameter, all Auto Scaling instances are described. If you specify an ID that does not exist, it is ignored with no error.
    array InstanceIds = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

message DescribeAutoScalingNotificationTypesAnswer {
    // The notification types.
    array AutoScalingNotificationTypes = 1;
}

message DescribeLifecycleHookTypesAnswer {
    // The lifecycle hook types.
    array LifecycleHookTypes = 1;
}

message DescribeLifecycleHooksAnswer {
    // The lifecycle hooks for the specified group.
    array LifecycleHooks = 1;
}

message DescribeLifecycleHooksType {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // The names of one or more lifecycle hooks. If you omit this parameter, all lifecycle hooks are described.
    array LifecycleHookNames = 2;
}

message DescribeLoadBalancerTargetGroupsRequest {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

message DescribeLoadBalancerTargetGroupsResponse {
    // Information about the target groups.
    array LoadBalancerTargetGroups = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

message DescribeLoadBalancersRequest {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

message DescribeLoadBalancersResponse {
    // The load balancers.
    array LoadBalancers = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

message DescribeMetricCollectionTypesAnswer {
    // The granularities for the metrics.
    array Granularities = 1;
    // One or more metrics.
    array Metrics = 2;
}

message DescribeNotificationConfigurationsAnswer {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // The notification configurations.
    array NotificationConfigurations = 2;
}

message DescribeNotificationConfigurationsType {
    // The name of the group.
    array AutoScalingGroupNames = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

message DescribePoliciesType {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // The maximum number of items to be returned with each call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
    // One or more policy names or policy ARNs to be described. If you omit this parameter, all policy names are described. If an group name is provided, the results are limited to that group. This list is limited to 50 items. If you specify an unknown policy name, it is ignored with no error.
    array PolicyNames = 4;
    // One or more policy types. Valid values are <code>SimpleScaling</code> and <code>StepScaling</code>.
    array PolicyTypes = 5;
}

message DescribeScalingActivitiesType {
    // The activity IDs of the desired scaling activities. If you omit this parameter, all activities for the past six weeks are described. If you specify an Auto Scaling group, the results are limited to that group. The list of requested activities cannot contain more than 50 items. If unknown activities are requested, they are ignored with no error.
    array ActivityIds = 1;
    // The name of the group.
    string AutoScalingGroupName = 2;
    // The maximum number of items to return with this call. The default value is 100.
    integer MaxRecords = 3;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 4;
}

message DescribeScheduledActionsType {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
    string EndTime = 2;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 3;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 4;
    // <p>Describes one or more scheduled actions. If you omit this parameter, all scheduled actions are described. If you specify an unknown scheduled action, it is ignored with no error.</p> <p>You can describe up to a maximum of 50 instances with a single call. If there are more items to return, the call returns a token. To get the next set of items, repeat the call with the returned token.</p>
    array ScheduledActionNames = 5;
    // The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
    string StartTime = 6;
}

message DescribeTagsType {
    // A filter used to scope the tags to return.
    array Filters = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

message DescribeTerminationPolicyTypesAnswer {
    // The termination policies supported by Auto Scaling (<code>OldestInstance</code>, <code>OldestLaunchConfiguration</code>, <code>NewestInstance</code>, <code>ClosestToNextInstanceHour</code>, and <code>Default</code>).
    array TerminationPolicyTypes = 1;
}

message DetachInstancesAnswer {
    // The activities related to detaching the instances from the Auto Scaling group.
    array Activities = 1;
}

message DetachInstancesQuery {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
    // If <code>True</code>, the Auto Scaling group decrements the desired capacity value by the number of instances detached.
    boolean ShouldDecrementDesiredCapacity = 3;
}

message DetachLoadBalancerTargetGroupsResultType {
}

message DetachLoadBalancerTargetGroupsType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The Amazon Resource Names (ARN) of the target groups.
    array TargetGroupARNs = 2;
}

message DetachLoadBalancersResultType {
}

message DetachLoadBalancersType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // One or more load balancer names.
    array LoadBalancerNames = 2;
}

message DisableMetricsCollectionQuery {
    // The name or Amazon Resource Name (ARN) of the group.
    string AutoScalingGroupName = 1;
    // <p>One or more of the following metrics. If you omit this parameter, all metrics are disabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
    array Metrics = 2;
}

message Ebs {
    // <p>Indicates whether the volume is deleted on instance termination.</p> <p>Default: <code>true</code> </p>
    boolean DeleteOnTermination = 1;
    // Indicates whether the volume should be encrypted. Encrypted EBS volumes must be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. There is no way to create an encrypted volume from an unencrypted snapshot or an unencrypted volume from an encrypted snapshot. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    boolean Encrypted = 2;
    // <p>The number of I/O operations per second (IOPS) to provision for the volume.</p> <p>Constraint: Required when the volume type is <code>io1</code>.</p>
    integer Iops = 3;
    // The ID of the snapshot.
    string SnapshotId = 4;
    // <p>The volume size, in GiB. For <code>standard</code> volumes, specify a value from 1 to 1,024. For <code>io1</code> volumes, specify a value from 4 to 16,384. For <code>gp2</code> volumes, specify a value from 1 to 16,384. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you create a volume from a snapshot and you don't specify a volume size, the default is the snapshot size.</p>
    integer VolumeSize = 5;
    // <p>The volume type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Valid values: <code>standard</code> | <code>io1</code> | <code>gp2</code> </p> <p>Default: <code>standard</code> </p>
    string VolumeType = 6;
}

message EnableMetricsCollectionQuery {
    // The name or ARN of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The granularity to associate with the metrics to collect. The only valid value is <code>1Minute</code>.
    string Granularity = 2;
    // <p>One or more of the following metrics. If you omit this parameter, all metrics are enabled.</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
    array Metrics = 3;
}

message EnabledMetric {
    // The granularity of the metric. The only valid value is <code>1Minute</code>.
    string Granularity = 1;
    // <p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
    string Metric = 2;
}

repeated EnabledMetric EnabledMetrics = 1

message EnterStandbyAnswer {
    // The activities related to moving instances into <code>Standby</code> mode.
    array Activities = 1;
}

message EnterStandbyQuery {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // One or more instances to move into <code>Standby</code> mode. You must specify at least one instance ID.
    array InstanceIds = 2;
    // Specifies whether the instances moved to <code>Standby</code> mode count as part of the Auto Scaling group's desired capacity. If set, the desired capacity for the Auto Scaling group decrements by the number of instances moved to <code>Standby</code> mode.
    boolean ShouldDecrementDesiredCapacity = 3;
}

message ExecutePolicyType {
    // The name or Amazon Resource Name (ARN) of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // <p>The breach threshold for the alarm.</p> <p>This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
    number BreachThreshold = 2;
    // <p>If this parameter is true, Auto Scaling waits for the cooldown period to complete before executing the policy. Otherwise, Auto Scaling executes the policy without waiting for the cooldown period to complete.</p> <p>This parameter is not supported if the policy type is <code>StepScaling</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/Cooldown.html">Auto Scaling Cooldowns</a> in the <i>Auto Scaling User Guide</i>.</p>
    boolean HonorCooldown = 3;
    // <p>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute a policy of type <code>StepScaling</code> and determine which step adjustment to use. For example, if the breach threshold is 50 and you want to use a step adjustment with a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</p> <p>If you specify a metric value that doesn't correspond to a step adjustment for the policy, the call returns an error.</p> <p>This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
    number MetricValue = 4;
    // The name or ARN of the policy.
    string PolicyName = 5;
}

message ExitStandbyAnswer {
    // The activities related to moving instances out of <code>Standby</code> mode.
    array Activities = 1;
}

message ExitStandbyQuery {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // One or more instance IDs. You must specify at least one instance ID.
    array InstanceIds = 2;
}

message Filter {
    // The name of the filter. The valid values are: <code>"auto-scaling-group"</code>, <code>"key"</code>, <code>"value"</code>, and <code>"propagate-at-launch"</code>.
    string Name = 1;
    // The value of the filter.
    array Values = 2;
}

repeated Filter Filters = 1











message Instance {
    // The Availability Zone in which the instance is running.
    string AvailabilityZone = 1;
    // The last reported health status of the instance. "Healthy" means that the instance is healthy and should remain in service. "Unhealthy" means that the instance is unhealthy and Auto Scaling should terminate and replace it.
    string HealthStatus = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The launch configuration associated with the instance.
    string LaunchConfigurationName = 4;
    // A description of the current lifecycle state. Note that the <code>Quarantined</code> state is not used.
    LifecycleState LifecycleState = 5;
    // Indicates whether the instance is protected from termination by Auto Scaling when scaling in.
    boolean ProtectedFromScaleIn = 6;
}

repeated string InstanceIds = 1

message InstanceMonitoring {
    // If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
    boolean Enabled = 1;
}



repeated Instance Instances = 1

message InvalidNextToken {
    // <p/>
    string message = 1;
}

message LaunchConfiguration {
    // [EC2-VPC] Indicates whether to assign a public IP address to each instance.
    boolean AssociatePublicIpAddress = 1;
    // A block device mapping, which specifies the block devices for the instance.
    array BlockDeviceMappings = 2;
    // The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. This parameter can only be used if you are launching EC2-Classic instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClassicLinkVPCId = 3;
    // The IDs of one or more security groups for the VPC specified in <code>ClassicLinkVPCId</code>. This parameter is required if you specify a ClassicLink-enabled VPC, and cannot be used otherwise. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    array ClassicLinkVPCSecurityGroups = 4;
    // The creation date and time for the launch configuration.
    string CreatedTime = 5;
    // Controls whether the instance is optimized for EBS I/O (<code>true</code>) or not (<code>false</code>).
    boolean EbsOptimized = 6;
    // The name or Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance.
    string IamInstanceProfile = 7;
    // The ID of the Amazon Machine Image (AMI).
    string ImageId = 8;
    // Controls whether instances in this group are launched with detailed (<code>true</code>) or basic (<code>false</code>) monitoring.
    InstanceMonitoring InstanceMonitoring = 9;
    // The instance type for the instances.
    string InstanceType = 10;
    // The ID of the kernel associated with the AMI.
    string KernelId = 11;
    // The name of the key pair.
    string KeyName = 12;
    // The Amazon Resource Name (ARN) of the launch configuration.
    string LaunchConfigurationARN = 13;
    // The name of the launch configuration.
    string LaunchConfigurationName = 14;
    // The tenancy of the instance, either <code>default</code> or <code>dedicated</code>. An instance with <code>dedicated</code> tenancy runs in an isolated, single-tenant hardware and can only be launched into a VPC.
    string PlacementTenancy = 15;
    // The ID of the RAM disk associated with the AMI.
    string RamdiskId = 16;
    // The security groups to associate with the instances.
    array SecurityGroups = 17;
    // The price to bid when launching Spot Instances.
    string SpotPrice = 18;
    // The user data available to the instances.
    string UserData = 19;
}

message LaunchConfigurationNameType {
    // The name of the launch configuration.
    string LaunchConfigurationName = 1;
}

repeated string LaunchConfigurationNames = 1

message LaunchConfigurationNamesType {
    // The launch configuration names. If you omit this parameter, all launch configurations are described.
    array LaunchConfigurationNames = 1;
    // The maximum number of items to return with this call. The default value is 50 and the maximum value is 100.
    integer MaxRecords = 2;
    // The token for the next set of items to return. (You received this token from a previous call.)
    string NextToken = 3;
}

repeated LaunchConfiguration LaunchConfigurations = 1

message LaunchConfigurationsType {
    // The launch configurations.
    array LaunchConfigurations = 1;
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 2;
}

message LifecycleHook {
    // The name of the Auto Scaling group for the lifecycle hook.
    string AutoScalingGroupName = 1;
    // Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are <code>CONTINUE</code> and <code>ABANDON</code>. The default value is <code>CONTINUE</code>.
    string DefaultResult = 2;
    // The maximum time, in seconds, that an instance can remain in a <code>Pending:Wait</code> or <code>Terminating:Wait</code> state. The maximum is 172800 seconds (48 hours) or 100 times <code>HeartbeatTimeout</code>, whichever is smaller.
    integer GlobalTimeout = 3;
    // The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.
    integer HeartbeatTimeout = 4;
    // The name of the lifecycle hook.
    string LifecycleHookName = 5;
    // The state of the EC2 instance to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see <a>DescribeLifecycleHookTypes</a>.
    string LifecycleTransition = 6;
    // Additional information that you want to include any time Auto Scaling sends a message to the notification target.
    string NotificationMetadata = 7;
    // The ARN of the target that Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic.
    string NotificationTargetARN = 8;
    // The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
    string RoleARN = 9;
}

repeated string LifecycleHookNames = 1

message LifecycleHookSpecification {
    // Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are <code>CONTINUE</code> and <code>ABANDON</code>. The default value is <code>CONTINUE</code>.
    string DefaultResult = 1;
    // The maximum time, in seconds, that can elapse before the lifecycle hook times out. If the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.
    integer HeartbeatTimeout = 2;
    // The name of the lifecycle hook.
    string LifecycleHookName = 3;
    // The state of the EC2 instance to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see <a>DescribeLifecycleHookTypes</a>.
    string LifecycleTransition = 4;
    // Additional information that you want to include any time Auto Scaling sends a message to the notification target.
    string NotificationMetadata = 5;
    // The ARN of the target that Auto Scaling sends notifications to when an instance is in the transition state for the lifecycle hook. The notification target can be either an SQS queue or an SNS topic.
    string NotificationTargetARN = 6;
    // The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
    string RoleARN = 7;
}

repeated LifecycleHookSpecification LifecycleHookSpecifications = 1

repeated LifecycleHook LifecycleHooks = 1

enum LifecycleState {
    PENDING = 0;
    PENDING:WAIT = 1;
    PENDING:PROCEED = 2;
    QUARANTINED = 3;
    INSERVICE = 4;
    TERMINATING = 5;
    TERMINATING:WAIT = 6;
    TERMINATING:PROCEED = 7;
    TERMINATED = 8;
    DETACHING = 9;
    DETACHED = 10;
    ENTERINGSTANDBY = 11;
    STANDBY = 12;
}

message LimitExceededFault {
    // <p/>
    string message = 1;
}

repeated string LoadBalancerNames = 1

message LoadBalancerState {
    // The name of the load balancer.
    string LoadBalancerName = 1;
    // <p>One of the following load balancer states:</p> <ul> <li> <p> <code>Adding</code> - The instances in the group are being registered with the load balancer.</p> </li> <li> <p> <code>Added</code> - All instances in the group are registered with the load balancer.</p> </li> <li> <p> <code>InService</code> - At least one instance in the group passed an ELB health check.</p> </li> <li> <p> <code>Removing</code> - The instances in the group are being deregistered from the load balancer. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All instances in the group are deregistered from the load balancer.</p> </li> </ul>
    string State = 2;
}

repeated LoadBalancerState LoadBalancerStates = 1

message LoadBalancerTargetGroupState {
    // The Amazon Resource Name (ARN) of the target group.
    string LoadBalancerTargetGroupARN = 1;
    // <p>The state of the target group.</p> <ul> <li> <p> <code>Adding</code> - The Auto Scaling instances are being registered with the target group.</p> </li> <li> <p> <code>Added</code> - All Auto Scaling instances are registered with the target group.</p> </li> <li> <p> <code>InService</code> - At least one Auto Scaling instance passed an ELB health check.</p> </li> <li> <p> <code>Removing</code> - The Auto Scaling instances are being deregistered from the target group. If connection draining is enabled, Elastic Load Balancing waits for in-flight requests to complete before deregistering the instances.</p> </li> <li> <p> <code>Removed</code> - All Auto Scaling instances are deregistered from the target group.</p> </li> </ul>
    string State = 2;
}

repeated LoadBalancerTargetGroupState LoadBalancerTargetGroupStates = 1







message MetricCollectionType {
    // <p>One of the following metrics:</p> <ul> <li> <p> <code>GroupMinSize</code> </p> </li> <li> <p> <code>GroupMaxSize</code> </p> </li> <li> <p> <code>GroupDesiredCapacity</code> </p> </li> <li> <p> <code>GroupInServiceInstances</code> </p> </li> <li> <p> <code>GroupPendingInstances</code> </p> </li> <li> <p> <code>GroupStandbyInstances</code> </p> </li> <li> <p> <code>GroupTerminatingInstances</code> </p> </li> <li> <p> <code>GroupTotalInstances</code> </p> </li> </ul>
    string Metric = 1;
}

repeated MetricCollectionType MetricCollectionTypes = 1

message MetricDimension {
    // The name of the dimension.
    string Name = 1;
    // The value of the dimension.
    string Value = 2;
}





repeated MetricDimension MetricDimensions = 1

message MetricGranularityType {
    // The granularity. The only valid value is <code>1Minute</code>.
    string Granularity = 1;
}

repeated MetricGranularityType MetricGranularityTypes = 1







enum MetricStatistic {
    AVERAGE = 0;
    MINIMUM = 1;
    MAXIMUM = 2;
    SAMPLECOUNT = 3;
    SUM = 4;
}

enum MetricType {
    ASGAVERAGECPUUTILIZATION = 0;
    ASGAVERAGENETWORKIN = 1;
    ASGAVERAGENETWORKOUT = 2;
    ALBREQUESTCOUNTPERTARGET = 3;
}



repeated string Metrics = 1









message NotificationConfiguration {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // <p>One of the following event notification types:</p> <ul> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE</code> </p> </li> <li> <p> <code>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</code> </p> </li> <li> <p> <code>autoscaling:TEST_NOTIFICATION</code> </p> </li> </ul>
    string NotificationType = 2;
    // The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
    string TopicARN = 3;
}

repeated NotificationConfiguration NotificationConfigurations = 1







message PoliciesType {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // The scaling policies.
    array ScalingPolicies = 2;
}

message PolicyARNType {
    // The CloudWatch alarms created for the target tracking policy.
    array Alarms = 1;
    // The Amazon Resource Name (ARN) of the policy.
    string PolicyARN = 2;
}



repeated string PolicyNames = 1

repeated string PolicyTypes = 1

message PredefinedMetricSpecification {
    // The metric type.
    MetricType PredefinedMetricType = 1;
    // <p>Identifies the resource associated with the metric type. The following predefined metrics are available:</p> <ul> <li> <p> <code>ASGAverageCPUUtilization</code> - average CPU utilization of the Auto Scaling group</p> </li> <li> <p> <code>ASGAverageNetworkIn</code> - average number of bytes received on all network interfaces by the Auto Scaling group</p> </li> <li> <p> <code>ASGAverageNetworkOut</code> - average number of bytes sent out on all network interfaces by the Auto Scaling group</p> </li> <li> <p> <code>ALBRequestCountPerTarget</code> - number of requests completed per target in an Application Load Balancer target group</p> </li> </ul> <p>For predefined metric types <code>ASGAverageCPUUtilization</code>, <code>ASGAverageNetworkIn</code> and <code>ASGAverageNetworkOut</code>, the parameter must not be specified as the resource associated with the metric type is the Auto Scaling group. For predefined metric type <code>ALBRequestCountPerTarget</code>, the parameter must be specified in the format: <code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i>/targetgroup/<i>target-group-name</i>/<i>target-group-id</i> </code>, where <code>app/<i>load-balancer-name</i>/<i>load-balancer-id</i> </code> is the final portion of the load balancer ARN, and <code>targetgroup/<i>target-group-name</i>/<i>target-group-id</i> </code> is the final portion of the target group ARN. The target group must be attached to the Auto Scaling group.</p>
    string ResourceLabel = 2;
}

repeated string ProcessNames = 1

message ProcessType {
    // <p>One of the following processes:</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> </ul>
    string ProcessName = 1;
}

repeated ProcessType Processes = 1

message ProcessesType {
    // The names of the process types.
    array Processes = 1;
}

message PutLifecycleHookAnswer {
}

message PutLifecycleHookType {
    // The name of the Auto Scaling group to which you want to assign the lifecycle hook.
    string AutoScalingGroupName = 1;
    // Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code> or <code>ABANDON</code>. The default value is <code>ABANDON</code>.
    string DefaultResult = 2;
    // <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default is 3600 seconds (1 hour).</p> <p>If the lifecycle hook times out, Auto Scaling performs the default action. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.</p>
    integer HeartbeatTimeout = 3;
    // The name of the lifecycle hook.
    string LifecycleHookName = 4;
    // <p>The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see <a>DescribeLifecycleHookTypes</a>.</p> <p>This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
    string LifecycleTransition = 5;
    // Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
    string NotificationMetadata = 6;
    // <p>The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This target can be either an SQS queue or an SNS topic. If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key/value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Auto Scaling sends it a test message. Test messages contains the following additional key/value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
    string NotificationTargetARN = 7;
    // <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.</p> <p>This parameter is required for new lifecycle hooks, but optional when updating existing hooks.</p>
    string RoleARN = 8;
}

message PutNotificationConfigurationType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The type of event that will cause the notification to be sent. For details about notification types supported by Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
    array NotificationTypes = 2;
    // The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
    string TopicARN = 3;
}

message PutScalingPolicyType {
    // <p>The adjustment type. The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</p> <p>This parameter is supported if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-scale-based-on-demand.html">Dynamic Scaling</a> in the <i>Auto Scaling User Guide</i>.</p>
    string AdjustmentType = 1;
    // The name or ARN of the group.
    string AutoScalingGroupName = 2;
    // <p>The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. If this parameter is not specified, the default cooldown period for the group applies.</p> <p>This parameter is supported if the policy type is <code>SimpleScaling</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/Cooldown.html">Auto Scaling Cooldowns</a> in the <i>Auto Scaling User Guide</i>.</p>
    integer Cooldown = 3;
    // <p>The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. The default is to use the value specified for the default cooldown period for the group.</p> <p>This parameter is supported if the policy type is <code>StepScaling</code> or <code>TargetTrackingScaling</code>.</p>
    integer EstimatedInstanceWarmup = 4;
    // <p>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the value is treated as <code>Average</code>.</p> <p>This parameter is supported if the policy type is <code>StepScaling</code>.</p>
    string MetricAggregationType = 5;
    // <p>The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.</p> <p>This parameter is supported if the policy type is <code>SimpleScaling</code> or <code>StepScaling</code>.</p>
    integer MinAdjustmentMagnitude = 6;
    // Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
    integer MinAdjustmentStep = 7;
    // The name of the policy.
    string PolicyName = 8;
    // The policy type. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, and <code>TargetTrackingScaling</code>. If the policy type is null, the value is treated as <code>SimpleScaling</code>.
    string PolicyType = 9;
    // <p>The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity.</p> <p>This parameter is required if the policy type is <code>SimpleScaling</code> and not supported otherwise.</p>
    integer ScalingAdjustment = 10;
    // <p>A set of adjustments that enable you to scale based on the size of the alarm breach.</p> <p>This parameter is required if the policy type is <code>StepScaling</code> and not supported otherwise.</p>
    array StepAdjustments = 11;
    // <p>A target tracking policy.</p> <p>This parameter is required if the policy type is <code>TargetTrackingScaling</code> and not supported otherwise.</p>
    TargetTrackingConfiguration TargetTrackingConfiguration = 12;
}

message PutScheduledUpdateGroupActionType {
    // The name or Amazon Resource Name (ARN) of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The number of EC2 instances that should be running in the group.
    integer DesiredCapacity = 2;
    // The time for the recurring schedule to end. Auto Scaling does not perform the action after this time.
    string EndTime = 3;
    // The maximum size for the Auto Scaling group.
    integer MaxSize = 4;
    // The minimum size for the Auto Scaling group.
    integer MinSize = 5;
    // The recurring schedule for this action, in Unix cron syntax format. For more information, see <a href="http://en.wikipedia.org/wiki/Cron">Cron</a> in Wikipedia.
    string Recurrence = 6;
    // The name of this scaling action.
    string ScheduledActionName = 7;
    // <p>The time for this action to start, in "YYYY-MM-DDThh:mm:ssZ" format in UTC/GMT only (for example, <code>2014-06-01T00:00:00Z</code>).</p> <p>If you specify <code>Recurrence</code> and <code>StartTime</code>, Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.</p> <p>If you try to schedule your action in the past, Auto Scaling returns an error message.</p>
    string StartTime = 8;
    // This parameter is deprecated.
    string Time = 9;
}

message RecordLifecycleActionHeartbeatAnswer {
}

message RecordLifecycleActionHeartbeatType {
    // The name of the Auto Scaling group for the hook.
    string AutoScalingGroupName = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // A token that uniquely identifies a specific lifecycle action associated with an instance. Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
    string LifecycleActionToken = 3;
    // The name of the lifecycle hook.
    string LifecycleHookName = 4;
}

message ResourceContentionFault {
    // <p/>
    string message = 1;
}

message ResourceInUseFault {
    // <p/>
    string message = 1;
}

message ScalingActivityInProgressFault {
    // <p/>
    string message = 1;
}

enum ScalingActivityStatusCode {
    PENDINGSPOTBIDPLACEMENT = 0;
    WAITINGFORSPOTINSTANCEREQUESTID = 1;
    WAITINGFORSPOTINSTANCEID = 2;
    WAITINGFORINSTANCEID = 3;
    PREINSERVICE = 4;
    INPROGRESS = 5;
    WAITINGFORELBCONNECTIONDRAINING = 6;
    MIDLIFECYCLEACTION = 7;
    WAITINGFORINSTANCEWARMUP = 8;
    SUCCESSFUL = 9;
    FAILED = 10;
    CANCELLED = 11;
}

repeated ScalingPolicy ScalingPolicies = 1

message ScalingPolicy {
    // The adjustment type, which specifies how <code>ScalingAdjustment</code> is interpreted. Valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.
    string AdjustmentType = 1;
    // The CloudWatch alarms related to the policy.
    array Alarms = 2;
    // The name of the Auto Scaling group associated with this scaling policy.
    string AutoScalingGroupName = 3;
    // The amount of time, in seconds, after a scaling activity completes before any further dynamic scaling activities can start.
    integer Cooldown = 4;
    // The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
    integer EstimatedInstanceWarmup = 5;
    // The aggregation type for the CloudWatch metrics. Valid values are <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code>.
    string MetricAggregationType = 6;
    // The minimum number of instances to scale. If the value of <code>AdjustmentType</code> is <code>PercentChangeInCapacity</code>, the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least this many instances. Otherwise, the error is <code>ValidationError</code>.
    integer MinAdjustmentMagnitude = 7;
    // Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.
    integer MinAdjustmentStep = 8;
    // The Amazon Resource Name (ARN) of the policy.
    string PolicyARN = 9;
    // The name of the scaling policy.
    string PolicyName = 10;
    // The policy type. Valid values are <code>SimpleScaling</code> and <code>StepScaling</code>.
    string PolicyType = 11;
    // The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity.
    integer ScalingAdjustment = 12;
    // A set of adjustments that enable you to scale based on the size of the alarm breach.
    array StepAdjustments = 13;
    // A target tracking policy.
    TargetTrackingConfiguration TargetTrackingConfiguration = 14;
}

message ScalingProcessQuery {
    // The name or Amazon Resource Name (ARN) of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // <p>One or more of the following processes. If you omit this parameter, all processes are specified.</p> <ul> <li> <p> <code>Launch</code> </p> </li> <li> <p> <code>Terminate</code> </p> </li> <li> <p> <code>HealthCheck</code> </p> </li> <li> <p> <code>ReplaceUnhealthy</code> </p> </li> <li> <p> <code>AZRebalance</code> </p> </li> <li> <p> <code>AlarmNotification</code> </p> </li> <li> <p> <code>ScheduledActions</code> </p> </li> <li> <p> <code>AddToLoadBalancer</code> </p> </li> </ul>
    array ScalingProcesses = 2;
}

repeated string ScheduledActionNames = 1

message ScheduledActionsType {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // The scheduled actions.
    array ScheduledUpdateGroupActions = 2;
}

message ScheduledUpdateGroupAction {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // The number of instances you prefer to maintain in the group.
    integer DesiredCapacity = 2;
    // The date and time that the action is scheduled to end. This date and time can be up to one month in the future.
    string EndTime = 3;
    // The maximum size of the group.
    integer MaxSize = 4;
    // The minimum size of the group.
    integer MinSize = 5;
    // The recurring schedule for the action.
    string Recurrence = 6;
    // The Amazon Resource Name (ARN) of the scheduled action.
    string ScheduledActionARN = 7;
    // The name of the scheduled action.
    string ScheduledActionName = 8;
    // <p>The date and time that the action is scheduled to begin. This date and time can be up to one month in the future.</p> <p>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>, they form the boundaries of when the recurring action will start and stop.</p>
    string StartTime = 9;
    // This parameter is deprecated.
    string Time = 10;
}

repeated ScheduledUpdateGroupAction ScheduledUpdateGroupActions = 1

repeated string SecurityGroups = 1

message SetDesiredCapacityType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // The number of EC2 instances that should be running in the Auto Scaling group.
    integer DesiredCapacity = 2;
    // By default, <code>SetDesiredCapacity</code> overrides any cooldown period associated with the Auto Scaling group. Specify <code>True</code> to make Auto Scaling to wait for the cool-down period associated with the Auto Scaling group to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity.
    boolean HonorCooldown = 3;
}

message SetInstanceHealthQuery {
    // The health status of the instance. Set to <code>Healthy</code> if you want the instance to remain in service. Set to <code>Unhealthy</code> if you want the instance to be out of service. Auto Scaling will terminate and replace the unhealthy instance.
    string HealthStatus = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call will respect the grace period. Set this to <code>False</code>, if you do not want the call to respect the grace period associated with the group.</p> <p>For more information, see the description of the health check grace period for <a>CreateAutoScalingGroup</a>.</p>
    boolean ShouldRespectGracePeriod = 3;
}

message SetInstanceProtectionAnswer {
}

message SetInstanceProtectionQuery {
    // The name of the group.
    string AutoScalingGroupName = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
    // Indicates whether the instance is protected from termination by Auto Scaling when scaling in.
    boolean ProtectedFromScaleIn = 3;
}

message StepAdjustment {
    // The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
    number MetricIntervalLowerBound = 1;
    // <p>The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.</p> <p>The upper bound must be greater than the lower bound.</p>
    number MetricIntervalUpperBound = 2;
    // The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity.
    integer ScalingAdjustment = 3;
}

repeated StepAdjustment StepAdjustments = 1

message SuspendedProcess {
    // The name of the suspended process.
    string ProcessName = 1;
    // The reason that the process was suspended.
    string SuspensionReason = 2;
}

repeated SuspendedProcess SuspendedProcesses = 1

message Tag {
    // The tag key.
    string Key = 1;
    // Determines whether the tag is added to new instances as they are launched in the group.
    boolean PropagateAtLaunch = 2;
    // The name of the group.
    string ResourceId = 3;
    // The type of resource. The only supported value is <code>auto-scaling-group</code>.
    string ResourceType = 4;
    // The tag value.
    string Value = 5;
}

message TagDescription {
    // The tag key.
    string Key = 1;
    // Determines whether the tag is added to new instances as they are launched in the group.
    boolean PropagateAtLaunch = 2;
    // The name of the group.
    string ResourceId = 3;
    // The type of resource. The only supported value is <code>auto-scaling-group</code>.
    string ResourceType = 4;
    // The tag value.
    string Value = 5;
}

repeated TagDescription TagDescriptionList = 1





repeated Tag Tags = 1

message TagsType {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // One or more tags.
    array Tags = 2;
}

repeated string TargetGroupARNs = 1

message TargetTrackingConfiguration {
    // A customized metric.
    CustomizedMetricSpecification CustomizedMetricSpecification = 1;
    // Indicates whether scale in by the target tracking policy is disabled. If the value is <code>true</code>, scale in is disabled and the target tracking policy won't remove instances from the Auto Scaling group. Otherwise, scale in is enabled and the target tracking policy can remove instances from the Auto Scaling group. The default value is <code>false</code>.
    boolean DisableScaleIn = 2;
    // A predefined metric. You can specify either a predefined metric or a customized metric.
    PredefinedMetricSpecification PredefinedMetricSpecification = 3;
    // The target value for the metric.
    number TargetValue = 4;
}

message TerminateInstanceInAutoScalingGroupType {
    // The ID of the instance.
    string InstanceId = 1;
    // If <code>true</code>, terminating the instance also decrements the size of the Auto Scaling group.
    boolean ShouldDecrementDesiredCapacity = 2;
}

repeated string TerminationPolicies = 1



message UpdateAutoScalingGroupType {
    // The name of the Auto Scaling group.
    string AutoScalingGroupName = 1;
    // One or more Availability Zones for the group.
    array AvailabilityZones = 2;
    // <p>The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/Cooldown.html">Auto Scaling Cooldowns</a> in the <i>Auto Scaling User Guide</i>.</p>
    integer DefaultCooldown = 3;
    // The number of EC2 instances that should be running in the Auto Scaling group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.
    integer DesiredCapacity = 4;
    // <p>The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default is 0.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/healthcheck.html">Health Checks</a> in the <i>Auto Scaling User Guide</i>.</p>
    integer HealthCheckGracePeriod = 5;
    // The service to use for the health checks. The valid values are <code>EC2</code> and <code>ELB</code>.
    string HealthCheckType = 6;
    // The name of the launch configuration.
    string LaunchConfigurationName = 7;
    // The maximum size of the Auto Scaling group.
    integer MaxSize = 8;
    // The minimum size of the Auto Scaling group.
    integer MinSize = 9;
    // Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.
    boolean NewInstancesProtectedFromScaleIn = 10;
    // The name of the placement group into which you'll launch your instances, if any. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string PlacementGroup = 11;
    // <p>A standalone termination policy or a list of termination policies used to select the instance to terminate. The policies are executed in the order that they are listed.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-termination.html">Controlling Which Instances Auto Scaling Terminates During Scale In</a> in the <i>Auto Scaling User Guide</i>.</p>
    array TerminationPolicies = 12;
    // <p>The ID of the subnet, if you are launching into a VPC. You can specify several subnets in a comma-separated list.</p> <p>When you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, ensure that the subnets' Availability Zones match the values you specify for <code>AvailabilityZones</code>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/asg-in-vpc.html">Launching Auto Scaling Instances in a VPC</a> in the <i>Auto Scaling User Guide</i>.</p>
    string VPCZoneIdentifier = 13;
}

repeated string Values = 1





































service AutoScalingService {
    // <p>Attaches one or more EC2 instances to the specified Auto Scaling group.</p> <p>When you attach instances, Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.</p> <p>If there is a Classic Load Balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/attach-instance-asg.html">Attach EC2 Instances to Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post(PostRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Attaches one or more target groups to the specified Auto Scaling group.</p> <p>To describe the target groups for an Auto Scaling group, use <a>DescribeLoadBalancerTargetGroups</a>. To detach the target group from the Auto Scaling group, use <a>DetachLoadBalancerTargetGroups</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/attach-load-balancer-asg.html">Attach a Load Balancer to Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#AttachLoadBalancerTargetGroups(Post#AttachLoadBalancerTargetGroupsRequest) returns (AttachLoadBalancerTargetGroupsResultType) {
      option (google.api.http) = {
        post: "//#AttachLoadBalancerTargetGroups"
        body: "body"
      };
    }
    // <p>Attaches one or more Classic Load Balancers to the specified Auto Scaling group.</p> <p>To attach an Application Load Balancer instead, see <a>AttachLoadBalancerTargetGroups</a>.</p> <p>To describe the load balancers for an Auto Scaling group, use <a>DescribeLoadBalancers</a>. To detach the load balancer from the Auto Scaling group, use <a>DetachLoadBalancers</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/attach-load-balancer-asg.html">Attach a Load Balancer to Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#AttachLoadBalancers(Post#AttachLoadBalancersRequest) returns (AttachLoadBalancersResultType) {
      option (google.api.http) = {
        post: "//#AttachLoadBalancers"
        body: "body"
      };
    }
    // <p>Completes the lifecycle action for the specified token or instance with the specified result.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p> <b>If you finish before the timeout period ends, complete the lifecycle action.</b> </p> </li> </ol> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#CompleteLifecycleAction(Post#CompleteLifecycleActionRequest) returns (CompleteLifecycleActionAnswer) {
      option (google.api.http) = {
        post: "//#CompleteLifecycleAction"
        body: "body"
      };
    }
    // <p>Creates an Auto Scaling group with the specified name and attributes.</p> <p>If you exceed your maximum limit of Auto Scaling groups, which by default is 20 per region, the call fails. For information about viewing and updating this limit, see <a>DescribeAccountLimits</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/AutoScalingGroup.html">Auto Scaling Groups</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#CreateAutoScalingGroup(Post#CreateAutoScalingGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateAutoScalingGroup"
        body: "body"
      };
    }
    // <p>Creates a launch configuration.</p> <p>If you exceed your maximum limit of launch configurations, which by default is 100 per region, the call fails. For information about viewing and updating this limit, see <a>DescribeAccountLimits</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/LaunchConfiguration.html">Launch Configurations</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#CreateLaunchConfiguration(Post#CreateLaunchConfigurationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateLaunchConfiguration"
        body: "body"
      };
    }
    // <p>Creates or updates tags for the specified Auto Scaling group.</p> <p>When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/autoscaling-tagging.html">Tagging Auto Scaling Groups and Instances</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#CreateOrUpdateTags(Post#CreateOrUpdateTagsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateOrUpdateTags"
        body: "body"
      };
    }
    // <p>Deletes the specified Auto Scaling group.</p> <p>If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.</p> <p>If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.</p> <p>To remove instances from the Auto Scaling group before deleting it, call <a>DetachInstances</a> with the list of instances and the option to decrement the desired capacity so that Auto Scaling does not launch replacement instances.</p> <p>To terminate all instances before deleting the Auto Scaling group, call <a>UpdateAutoScalingGroup</a> and set the minimum size and desired capacity of the Auto Scaling group to zero.</p>
    rpc Post#DeleteAutoScalingGroup(Post#DeleteAutoScalingGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteAutoScalingGroup"
        body: "body"
      };
    }
    // <p>Deletes the specified launch configuration.</p> <p>The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.</p>
    rpc Post#DeleteLaunchConfiguration(Post#DeleteLaunchConfigurationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteLaunchConfiguration"
        body: "body"
      };
    }
    // <p>Deletes the specified lifecycle hook.</p> <p>If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code> for launching instances, <code>CONTINUE</code> for terminating instances).</p>
    rpc Post#DeleteLifecycleHook(Post#DeleteLifecycleHookRequest) returns (DeleteLifecycleHookAnswer) {
      option (google.api.http) = {
        post: "//#DeleteLifecycleHook"
        body: "body"
      };
    }
    // Deletes the specified notification.
    rpc Post#DeleteNotificationConfiguration(Post#DeleteNotificationConfigurationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteNotificationConfiguration"
        body: "body"
      };
    }
    // <p>Deletes the specified Auto Scaling policy.</p> <p>Deleting a policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.</p>
    rpc Post#DeletePolicy(Post#DeletePolicyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeletePolicy"
        body: "body"
      };
    }
    // Deletes the specified scheduled action.
    rpc Post#DeleteScheduledAction(Post#DeleteScheduledActionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteScheduledAction"
        body: "body"
      };
    }
    // Deletes the specified tags.
    rpc Post#DeleteTags(Post#DeleteTagsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteTags"
        body: "body"
      };
    }
    // <p>Describes the current Auto Scaling resource limits for your AWS account.</p> <p>For information about requesting an increase in these limits, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">AWS Service Limits</a> in the <i>Amazon Web Services General Reference</i>.</p>
    rpc Post#DescribeAccountLimits(Post#DescribeAccountLimitsRequest) returns (DescribeAccountLimitsAnswer) {
      option (google.api.http) = {
        post: "//#DescribeAccountLimits"
      };
    }
    // Describes the policy adjustment types for use with <a>PutScalingPolicy</a>.
    rpc Post#DescribeAdjustmentTypes(Post#DescribeAdjustmentTypesRequest) returns (DescribeAdjustmentTypesAnswer) {
      option (google.api.http) = {
        post: "//#DescribeAdjustmentTypes"
      };
    }
    // Describes one or more Auto Scaling groups.
    rpc Post#DescribeAutoScalingGroups(Post#DescribeAutoScalingGroupsRequest) returns (AutoScalingGroupsType) {
      option (google.api.http) = {
        post: "//#DescribeAutoScalingGroups"
        body: "body"
      };
    }
    // Describes one or more Auto Scaling instances.
    rpc Post#DescribeAutoScalingInstances(Post#DescribeAutoScalingInstancesRequest) returns (AutoScalingInstancesType) {
      option (google.api.http) = {
        post: "//#DescribeAutoScalingInstances"
        body: "body"
      };
    }
    // Describes the notification types that are supported by Auto Scaling.
    rpc Post#DescribeAutoScalingNotificationTypes(Post#DescribeAutoScalingNotificationTypesRequest) returns (DescribeAutoScalingNotificationTypesAnswer) {
      option (google.api.http) = {
        post: "//#DescribeAutoScalingNotificationTypes"
      };
    }
    // Describes one or more launch configurations.
    rpc Post#DescribeLaunchConfigurations(Post#DescribeLaunchConfigurationsRequest) returns (LaunchConfigurationsType) {
      option (google.api.http) = {
        post: "//#DescribeLaunchConfigurations"
        body: "body"
      };
    }
    // Describes the available types of lifecycle hooks.
    rpc Post#DescribeLifecycleHookTypes(Post#DescribeLifecycleHookTypesRequest) returns (DescribeLifecycleHookTypesAnswer) {
      option (google.api.http) = {
        post: "//#DescribeLifecycleHookTypes"
      };
    }
    // Describes the lifecycle hooks for the specified Auto Scaling group.
    rpc Post#DescribeLifecycleHooks(Post#DescribeLifecycleHooksRequest) returns (DescribeLifecycleHooksAnswer) {
      option (google.api.http) = {
        post: "//#DescribeLifecycleHooks"
        body: "body"
      };
    }
    // Describes the target groups for the specified Auto Scaling group.
    rpc Post#DescribeLoadBalancerTargetGroups(Post#DescribeLoadBalancerTargetGroupsRequest) returns (DescribeLoadBalancerTargetGroupsResponse) {
      option (google.api.http) = {
        post: "//#DescribeLoadBalancerTargetGroups"
        body: "body"
      };
    }
    // <p>Describes the load balancers for the specified Auto Scaling group.</p> <p>Note that this operation describes only Classic Load Balancers. If you have Application Load Balancers, use <a>DescribeLoadBalancerTargetGroups</a> instead.</p>
    rpc Post#DescribeLoadBalancers(Post#DescribeLoadBalancersRequest) returns (DescribeLoadBalancersResponse) {
      option (google.api.http) = {
        post: "//#DescribeLoadBalancers"
        body: "body"
      };
    }
    // <p>Describes the available CloudWatch metrics for Auto Scaling.</p> <p>Note that the <code>GroupStandbyInstances</code> metric is not returned by default. You must explicitly request this metric when calling <a>EnableMetricsCollection</a>.</p>
    rpc Post#DescribeMetricCollectionTypes(Post#DescribeMetricCollectionTypesRequest) returns (DescribeMetricCollectionTypesAnswer) {
      option (google.api.http) = {
        post: "//#DescribeMetricCollectionTypes"
      };
    }
    // Describes the notification actions associated with the specified Auto Scaling group.
    rpc Post#DescribeNotificationConfigurations(Post#DescribeNotificationConfigurationsRequest) returns (DescribeNotificationConfigurationsAnswer) {
      option (google.api.http) = {
        post: "//#DescribeNotificationConfigurations"
        body: "body"
      };
    }
    // Describes the policies for the specified Auto Scaling group.
    rpc Post#DescribePolicies(Post#DescribePoliciesRequest) returns (PoliciesType) {
      option (google.api.http) = {
        post: "//#DescribePolicies"
        body: "body"
      };
    }
    // Describes one or more scaling activities for the specified Auto Scaling group.
    rpc Post#DescribeScalingActivities(Post#DescribeScalingActivitiesRequest) returns (ActivitiesType) {
      option (google.api.http) = {
        post: "//#DescribeScalingActivities"
        body: "body"
      };
    }
    // Describes the scaling process types for use with <a>ResumeProcesses</a> and <a>SuspendProcesses</a>.
    rpc Post#DescribeScalingProcessTypes(Post#DescribeScalingProcessTypesRequest) returns (ProcessesType) {
      option (google.api.http) = {
        post: "//#DescribeScalingProcessTypes"
      };
    }
    // Describes the actions scheduled for your Auto Scaling group that haven't run. To describe the actions that have already run, use <a>DescribeScalingActivities</a>.
    rpc Post#DescribeScheduledActions(Post#DescribeScheduledActionsRequest) returns (ScheduledActionsType) {
      option (google.api.http) = {
        post: "//#DescribeScheduledActions"
        body: "body"
      };
    }
    // <p>Describes the specified tags.</p> <p>You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.</p> <p>You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there's no match, no special message is returned.</p>
    rpc Post#DescribeTags(Post#DescribeTagsRequest) returns (TagsType) {
      option (google.api.http) = {
        post: "//#DescribeTags"
        body: "body"
      };
    }
    // Describes the termination policies supported by Auto Scaling.
    rpc Post#DescribeTerminationPolicyTypes(Post#DescribeTerminationPolicyTypesRequest) returns (DescribeTerminationPolicyTypesAnswer) {
      option (google.api.http) = {
        post: "//#DescribeTerminationPolicyTypes"
      };
    }
    // <p>Removes one or more instances from the specified Auto Scaling group.</p> <p>After the instances are detached, you can manage them independent of the Auto Scaling group.</p> <p>If you do not specify the option to decrement the desired capacity, Auto Scaling launches instances to replace the ones that are detached.</p> <p>If there is a Classic Load Balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/detach-instance-asg.html">Detach EC2 Instances from Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#DetachInstances(Post#DetachInstancesRequest) returns (DetachInstancesAnswer) {
      option (google.api.http) = {
        post: "//#DetachInstances"
        body: "body"
      };
    }
    // Detaches one or more target groups from the specified Auto Scaling group.
    rpc Post#DetachLoadBalancerTargetGroups(Post#DetachLoadBalancerTargetGroupsRequest) returns (DetachLoadBalancerTargetGroupsResultType) {
      option (google.api.http) = {
        post: "//#DetachLoadBalancerTargetGroups"
        body: "body"
      };
    }
    // <p>Detaches one or more Classic Load Balancers from the specified Auto Scaling group.</p> <p>Note that this operation detaches only Classic Load Balancers. If you have Application Load Balancers, use <a>DetachLoadBalancerTargetGroups</a> instead.</p> <p>When you detach a load balancer, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using <a>DescribeLoadBalancers</a>. Note that the instances remain running.</p>
    rpc Post#DetachLoadBalancers(Post#DetachLoadBalancersRequest) returns (DetachLoadBalancersResultType) {
      option (google.api.http) = {
        post: "//#DetachLoadBalancers"
        body: "body"
      };
    }
    // Disables group metrics for the specified Auto Scaling group.
    rpc Post#DisableMetricsCollection(Post#DisableMetricsCollectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DisableMetricsCollection"
        body: "body"
      };
    }
    // Enables group metrics for the specified Auto Scaling group. For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html">Monitoring Your Auto Scaling Groups and Instances</a> in the <i>Auto Scaling User Guide</i>.
    rpc Post#EnableMetricsCollection(Post#EnableMetricsCollectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#EnableMetricsCollection"
        body: "body"
      };
    }
    // <p>Moves the specified instances into the standby state.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#EnterStandby(Post#EnterStandbyRequest) returns (EnterStandbyAnswer) {
      option (google.api.http) = {
        post: "//#EnterStandby"
        body: "body"
      };
    }
    // Executes the specified policy.
    rpc Post#ExecutePolicy(Post#ExecutePolicyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ExecutePolicy"
        body: "body"
      };
    }
    // <p>Moves the specified instances out of the standby state.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-enter-exit-standby.html">Temporarily Removing Instances from Your Auto Scaling Group</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#ExitStandby(Post#ExitStandbyRequest) returns (ExitStandbyAnswer) {
      option (google.api.http) = {
        post: "//#ExitStandby"
        body: "body"
      };
    }
    // <p>Creates or updates a lifecycle hook for the specified Auto Scaling Group.</p> <p>A lifecycle hook tells Auto Scaling that you want to perform an action on an instance that is not actively in service; for example, either when the instance launches or before the instance terminates.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/lifecycle-hooks.html">Auto Scaling Lifecycle Hooks</a> in the <i>Auto Scaling User Guide</i>.</p> <p>If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto Scaling group, the call fails. For information about updating this limit, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">AWS Service Limits</a> in the <i>Amazon Web Services General Reference</i>.</p>
    rpc Post#PutLifecycleHook(Post#PutLifecycleHookRequest) returns (PutLifecycleHookAnswer) {
      option (google.api.http) = {
        post: "//#PutLifecycleHook"
        body: "body"
      };
    }
    // <p>Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.</p> <p>This configuration overwrites any existing configuration.</p> <p>For more information see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/ASGettingNotifications.html">Getting SNS Notifications When Your Auto Scaling Group Scales</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#PutNotificationConfiguration(Post#PutNotificationConfigurationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#PutNotificationConfiguration"
        body: "body"
      };
    }
    // <p>Creates or updates a policy for an Auto Scaling group. To update an existing policy, use the existing policy name and set the parameters you want to change. Any existing parameter not changed in an update to an existing policy is not changed in this update request.</p> <p>If you exceed your maximum limit of step adjustments, which by default is 20 per region, the call fails. For information about updating this limit, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">AWS Service Limits</a> in the <i>Amazon Web Services General Reference</i>.</p>
    rpc Post#PutScalingPolicy(Post#PutScalingPolicyRequest) returns (PolicyARNType) {
      option (google.api.http) = {
        post: "//#PutScalingPolicy"
        body: "body"
      };
    }
    // <p>Creates or updates a scheduled scaling action for an Auto Scaling group. When updating a scheduled scaling action, if you leave a parameter unspecified, the corresponding value remains unchanged.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/schedule_time.html">Scheduled Scaling</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#PutScheduledUpdateGroupAction(Post#PutScheduledUpdateGroupActionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#PutScheduledUpdateGroupAction"
        body: "body"
      };
    }
    // <p>Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using <a>PutLifecycleHook</a>.</p> <p>This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</p> </li> <li> <p> <b>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</b> </p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/AutoScalingGroupLifecycle.html">Auto Scaling Lifecycle</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#RecordLifecycleActionHeartbeat(Post#RecordLifecycleActionHeartbeatRequest) returns (RecordLifecycleActionHeartbeatAnswer) {
      option (google.api.http) = {
        post: "//#RecordLifecycleActionHeartbeat"
        body: "body"
      };
    }
    // <p>Resumes the specified suspended Auto Scaling processes, or all suspended process, for the specified Auto Scaling group.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-suspend-resume-processes.html">Suspending and Resuming Auto Scaling Processes</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#ResumeProcesses(Post#ResumeProcessesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResumeProcesses"
        body: "body"
      };
    }
    // <p>Sets the size of the specified Auto Scaling group.</p> <p>For more information about desired capacity, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/WhatIsAutoScaling.html">What Is Auto Scaling?</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#SetDesiredCapacity(Post#SetDesiredCapacityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#SetDesiredCapacity"
        body: "body"
      };
    }
    // <p>Sets the health status of the specified instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/healthcheck.html">Health Checks</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#SetInstanceHealth(Post#SetInstanceHealthRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#SetInstanceHealth"
        body: "body"
      };
    }
    // <p>Updates the instance protection settings of the specified instances.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-termination.html#instance-protection">Instance Protection</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#SetInstanceProtection(Post#SetInstanceProtectionRequest) returns (SetInstanceProtectionAnswer) {
      option (google.api.http) = {
        post: "//#SetInstanceProtection"
        body: "body"
      };
    }
    // <p>Suspends the specified Auto Scaling processes, or all processes, for the specified Auto Scaling group.</p> <p>Note that if you suspend either the <code>Launch</code> or <code>Terminate</code> process types, it can prevent other process types from functioning properly.</p> <p>To resume processes that have been suspended, use <a>ResumeProcesses</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/autoscaling/latest/userguide/as-suspend-resume-processes.html">Suspending and Resuming Auto Scaling Processes</a> in the <i>Auto Scaling User Guide</i>.</p>
    rpc Post#SuspendProcesses(Post#SuspendProcessesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#SuspendProcesses"
        body: "body"
      };
    }
    // <p>Terminates the specified instance and optionally adjusts the desired group size.</p> <p>This call simply makes a termination request. The instance is not terminated immediately.</p>
    rpc Post#TerminateInstanceInAutoScalingGroup(Post#TerminateInstanceInAutoScalingGroupRequest) returns (ActivityType) {
      option (google.api.http) = {
        post: "//#TerminateInstanceInAutoScalingGroup"
        body: "body"
      };
    }
    // <p>Updates the configuration for the specified Auto Scaling group.</p> <p>The new settings take effect on any scaling activities after this call returns. Scaling activities that are currently in progress aren't affected.</p> <p>To update an Auto Scaling group with a launch configuration with <code>InstanceMonitoring</code> set to <code>false</code>, you must first disable the collection of group metrics. Otherwise, you will get an error. If you have previously enabled the collection of group metrics, you can disable it using <a>DisableMetricsCollection</a>.</p> <p>Note the following:</p> <ul> <li> <p>If you specify a new value for <code>MinSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the current size of the group, we implicitly call <a>SetDesiredCapacity</a> to set the size of the group to the new value of <code>MinSize</code>.</p> </li> <li> <p>If you specify a new value for <code>MaxSize</code> without specifying a value for <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the current size of the group, we implicitly call <a>SetDesiredCapacity</a> to set the size of the group to the new value of <code>MaxSize</code>.</p> </li> <li> <p>All other optional parameters are left unchanged if not specified.</p> </li> </ul>
    rpc Post#UpdateAutoScalingGroup(Post#UpdateAutoScalingGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#UpdateAutoScalingGroup"
        body: "body"
      };
    }
}
