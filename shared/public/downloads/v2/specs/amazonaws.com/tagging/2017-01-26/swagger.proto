syntax = "proto3";

import "google/api/annotations.proto";

package awsresourcegroupstaggingapi;

message PostRequest {
    string Action = 1;
    // Pagination token
    string PaginationToken = 2;
    // Pagination limit
    string ResourcesPerPage = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    GetResourcesInput body = 12;
}

message Post#GetTagKeysRequest {
    string Action = 1;
    // Pagination token
    string PaginationToken = 2;
    string Version = 3;
    string X_Amz_Algorithm = 4;
    string X_Amz_Content_Sha256 = 5;
    string X_Amz_Credential = 6;
    string X_Amz_Date = 7;
    string X_Amz_Security_Token = 8;
    string X_Amz_Signature = 9;
    string X_Amz_SignedHeaders = 10;
    GetTagKeysInput body = 11;
}

message Post#GetTagValuesRequest {
    string Action = 1;
    // Pagination token
    string PaginationToken = 2;
    string Version = 3;
    string X_Amz_Algorithm = 4;
    string X_Amz_Content_Sha256 = 5;
    string X_Amz_Credential = 6;
    string X_Amz_Date = 7;
    string X_Amz_Security_Token = 8;
    string X_Amz_Signature = 9;
    string X_Amz_SignedHeaders = 10;
    GetTagValuesInput body = 11;
}

message Post#TagResourcesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TagResourcesInput body = 10;
}

message Post#UntagResourcesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UntagResourcesInput body = 10;
}

enum ErrorCode {
    INTERNALSERVICEEXCEPTION = 0;
    INVALIDPARAMETEREXCEPTION = 1;
}

message FailedResourcesMap {
    string key = 1;
    FailureInfo value = 2;
}
repeated FailedResourcesMap FailedResourcesMap = 1

message FailureInfo {
    // The code of the common error. Valid values include <code>InternalServiceException</code>, <code>InvalidParameterException</code>, and any valid error code returned by the AWS service that hosts the resource that you want to tag.
    ErrorCode ErrorCode = 1;
    // The message of the common error.
    string ErrorMessage = 2;
    // The HTTP status code of the common error.
    integer StatusCode = 3;
}

message GetResourcesInput {
    // A string that indicates that additional data is available. Leave this value empty for your initial request. If the response includes a <code>PaginationToken</code>, use that string for this value to request an additional page of data.
    string PaginationToken = 1;
    // <p>The constraints on the resources that you want returned. The format of each resource type is <code>service[:resourceType]</code>. For example, specifying a resource type of <code>ec2</code> returns all tagged Amazon EC2 resources (which includes tagged EC2 instances). Specifying a resource type of <code>ec2:instance</code> returns only EC2 instances. </p> <p>The string for each service name and resource type is the same as that embedded in a resource's Amazon Resource Name (ARN). Consult the <i>AWS General Reference</i> for the following:</p> <ul> <li> <p>For a list of service name strings, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">AWS Service Namespaces</a>.</p> </li> <li> <p>For resource type strings, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax">Example ARNs</a>.</p> </li> <li> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p> </li> </ul>
    array ResourceTypeFilters = 2;
    // A limit that restricts the number of resources returned by GetResources in paginated output. You can set ResourcesPerPage to a minimum of 1 item and the maximum of 50 items.
    integer ResourcesPerPage = 3;
    // <p>A list of tags (keys and values). A request can include up to 50 keys, and each key can include up to 20 values.</p> <p>If you specify multiple filters connected by an AND operator in a single request, the response returns only those resources that are associated with every specified filter.</p> <p>If you specify multiple filters connected by an OR operator in a single request, the response returns all resources that are associated with at least one or possibly more of the specified filters.</p>
    array TagFilters = 4;
    // <p>A limit that restricts the number of tags (key and value pairs) returned by GetResources in paginated output. A resource with no tags is counted as having one tag (one key and value pair).</p> <p> <code>GetResources</code> does not split a resource and its associated tags across pages. If the specified <code>TagsPerPage</code> would cause such a break, a <code>PaginationToken</code> is returned in place of the affected resource and its tags. Use that token in another request to get the remaining data. For example, if you specify a <code>TagsPerPage</code> of <code>100</code> and the account has 22 resources with 10 tags each (meaning that each resource has 10 key and value pairs), the output will consist of 3 pages, with the first page displaying the first 10 resources, each with its 10 tags, the second page displaying the next 10 resources each with its 10 tags, and the third page displaying the remaining 2 resources, each with its 10 tags.</p> <p/> <p>You can set <code>TagsPerPage</code> to a minimum of 100 items and the maximum of 500 items.</p>
    integer TagsPerPage = 5;
}

message GetResourcesOutput {
    // A string that indicates that the response contains more data than can be returned in a single response. To receive additional data, specify this string for the <code>PaginationToken</code> value in a subsequent request.
    string PaginationToken = 1;
    // A list of resource ARNs and the tags (keys and values) associated with each.
    array ResourceTagMappingList = 2;
}

message GetTagKeysInput {
    // A string that indicates that additional data is available. Leave this value empty for your initial request. If the response includes a PaginationToken, use that string for this value to request an additional page of data.
    string PaginationToken = 1;
}

message GetTagKeysOutput {
    // A string that indicates that the response contains more data than can be returned in a single response. To receive additional data, specify this string for the <code>PaginationToken</code> value in a subsequent request.
    string PaginationToken = 1;
    // A list of all tag keys in the AWS account.
    array TagKeys = 2;
}

message GetTagValuesInput {
    // The key for which you want to list all existing values in the specified region for the AWS account.
    string Key = 1;
    // A string that indicates that additional data is available. Leave this value empty for your initial request. If the response includes a PaginationToken, use that string for this value to request an additional page of data.
    string PaginationToken = 2;
}

message GetTagValuesOutput {
    // A string that indicates that the response contains more data than can be returned in a single response. To receive additional data, specify this string for the <code>PaginationToken</code> value in a subsequent request.
    string PaginationToken = 1;
    // A list of all tag values for the specified key in the AWS account.
    array TagValues = 2;
}

message InternalServiceException {
    string Message = 1;
}

message InvalidParameterException {
    string Message = 1;
}

message PaginationTokenExpiredException {
    string Message = 1;
}



repeated string ResourceARNList = 1

message ResourceTagMapping {
    // An array of resource ARN(s).
    string ResourceARN = 1;
    // The tags that have been applied to one or more AWS resources.
    array Tags = 2;
}

repeated ResourceTagMapping ResourceTagMappingList = 1

repeated string ResourceTypeFilterList = 1





message Tag {
    // One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.
    string Key = 1;
    // The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).
    string Value = 2;
}

message TagFilter {
    // One part of a key-value pair that make up a tag. A key is a general label that acts like a category for more specific tag values.
    string Key = 1;
    // The optional part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key).
    array Values = 2;
}

repeated TagFilter TagFilterList = 1



repeated string TagKeyList = 1

repeated string TagKeyListForUntag = 1

repeated Tag TagList = 1

message TagMap {
    string key = 1;
    string value = 2;
}
repeated TagMap TagMap = 1

message TagResourcesInput {
    // A list of ARNs. An ARN (Amazon Resource Name) uniquely identifies a resource. You can specify a minimum of 1 and a maximum of 20 ARNs (resources) to tag. An ARN can be set to a maximum of 1600 characters. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
    array ResourceARNList = 1;
    // The tags that you want to add to the specified resources. A tag consists of a key and a value that you define.
    array Tags = 2;
}

message TagResourcesOutput {
    // Details of resources that could not be tagged. An error code, status code, and error message are returned for each failed item.
    array FailedResourcesMap = 1;
}



repeated string TagValueList = 1

repeated string TagValuesOutputList = 1



message ThrottledException {
    string Message = 1;
}

message UntagResourcesInput {
    // A list of ARNs. An ARN (Amazon Resource Name) uniquely identifies a resource. You can specify a minimum of 1 and a maximum of 20 ARNs (resources) to untag. An ARN can be set to a maximum of 1600 characters. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
    array ResourceARNList = 1;
    // A list of the tag keys that you want to remove from the specified resources.
    array TagKeys = 2;
}

message UntagResourcesOutput {
    // Details of resources that could not be untagged. An error code, status code, and error message are returned for each failed item.
    array FailedResourcesMap = 1;
}

service AWSResourceGroupsTaggingAPIService {
    // Returns all the tagged resources that are associated with the specified tags (keys and values) located in the specified region for the AWS account. The tags and the resource types that you specify in the request are known as <i>filters</i>. The response includes all tags that are associated with the requested resources. If no filter is provided, this action returns a paginated resource list with the associated tags.
    rpc Post(PostRequest) returns (GetResourcesOutput) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Returns all tag keys in the specified region for the AWS account.
    rpc Post#GetTagKeys(Post#GetTagKeysRequest) returns (GetTagKeysOutput) {
      option (google.api.http) = {
        post: "//#GetTagKeys"
        body: "body"
      };
    }
    // Returns all tag values for the specified key in the specified region for the AWS account.
    rpc Post#GetTagValues(Post#GetTagValuesRequest) returns (GetTagValuesOutput) {
      option (google.api.http) = {
        post: "//#GetTagValues"
        body: "body"
      };
    }
    // <p>Applies one or more tags to the specified resources. Note the following:</p> <ul> <li> <p>Not all resources can have tags. For a list of resources that support tagging, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/supported-resources.html">Supported Resources</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> <li> <p>Each resource can have up to 50 tags. For other limits, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions">Tag Restrictions</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p>You can only tag resources that are located in the specified region for the AWS account.</p> </li> <li> <p>To add tags to a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for adding tags. For more information, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> </ul>
    rpc Post#TagResources(Post#TagResourcesRequest) returns (TagResourcesOutput) {
      option (google.api.http) = {
        post: "//#TagResources"
        body: "body"
      };
    }
    // <p>Removes the specified tags from the specified resources. When you specify a tag key, the action removes both that key and its associated value. The operation succeeds even if you attempt to remove tags from a resource that were already removed. Note the following:</p> <ul> <li> <p>To remove tags from a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for removing tags. For more information, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> <li> <p>You can only tag resources that are located in the specified region for the AWS account.</p> </li> </ul>
    rpc Post#UntagResources(Post#UntagResourcesRequest) returns (UntagResourcesOutput) {
      option (google.api.http) = {
        post: "//#UntagResources"
        body: "body"
      };
    }
}
