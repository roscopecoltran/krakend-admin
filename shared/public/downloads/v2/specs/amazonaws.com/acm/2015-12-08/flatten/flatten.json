{
	"basePath": "/",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AddTagsToCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.AddTagsToCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the ACM Certificate to which the tag is to be applied. This must be of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.AddTagsToCertificateRequest.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.AddTagsToCertificateRequest.properties.Tags.description": "The key-value pair that defines the tag. The tag value is optional.",
	"definitions.AddTagsToCertificateRequest.required.length": 2,
	"definitions.AddTagsToCertificateRequest.required[0]": "CertificateArn",
	"definitions.AddTagsToCertificateRequest.required[1]": "Tags",
	"definitions.AddTagsToCertificateRequest.type": "object",
	"definitions.Arn.maxLength": 2048,
	"definitions.Arn.minLength": 20,
	"definitions.Arn.pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*",
	"definitions.Arn.type": "string",
	"definitions.CertificateBody.maxLength": 32768,
	"definitions.CertificateBody.minLength": 1,
	"definitions.CertificateBody.pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
	"definitions.CertificateBody.type": "string",
	"definitions.CertificateBodyBlob.maxLength": 32768,
	"definitions.CertificateBodyBlob.minLength": 1,
	"definitions.CertificateBodyBlob.type": "string",
	"definitions.CertificateChain.maxLength": 2097152,
	"definitions.CertificateChain.minLength": 1,
	"definitions.CertificateChain.pattern": "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?",
	"definitions.CertificateChain.type": "string",
	"definitions.CertificateChainBlob.maxLength": 2097152,
	"definitions.CertificateChainBlob.minLength": 1,
	"definitions.CertificateChainBlob.type": "string",
	"definitions.CertificateDetail.description": "Contains metadata about an ACM certificate. This structure is returned in the response to a \u003ca\u003eDescribeCertificate\u003c/a\u003e request.",
	"definitions.CertificateDetail.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.CertificateDetail.properties.CertificateArn.description": "The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the \u003ci\u003eAWS General Reference\u003c/i\u003e.",
	"definitions.CertificateDetail.properties.CreatedAt.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.CreatedAt.description": "The time at which the certificate was requested. This value exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.DomainName.$ref": "#/definitions/DomainNameString",
	"definitions.CertificateDetail.properties.DomainName.description": "The fully qualified domain name for the certificate, such as www.example.com or example.com.",
	"definitions.CertificateDetail.properties.DomainValidationOptions.$ref": "#/definitions/DomainValidationList",
	"definitions.CertificateDetail.properties.DomainValidationOptions.description": "Contains information about the initial validation of each domain name that occurs as a result of the \u003ca\u003eRequestCertificate\u003c/a\u003e request. This field exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.FailureReason.$ref": "#/definitions/FailureReason",
	"definitions.CertificateDetail.properties.FailureReason.description": "The reason the certificate request failed. This value exists only when the certificate status is \u003ccode\u003eFAILED\u003c/code\u003e. For more information, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed\"\u003eCertificate Request Failed\u003c/a\u003e in the \u003ci\u003eAWS Certificate Manager User Guide\u003c/i\u003e.",
	"definitions.CertificateDetail.properties.ImportedAt.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.ImportedAt.description": "The date and time at which the certificate was imported. This value exists only when the certificate type is \u003ccode\u003eIMPORTED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.InUseBy.$ref": "#/definitions/InUseList",
	"definitions.CertificateDetail.properties.InUseBy.description": "A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources.",
	"definitions.CertificateDetail.properties.IssuedAt.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.IssuedAt.description": "The time at which the certificate was issued. This value exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.Issuer.$ref": "#/definitions/String",
	"definitions.CertificateDetail.properties.Issuer.description": "The name of the certificate authority that issued and signed the certificate.",
	"definitions.CertificateDetail.properties.KeyAlgorithm.$ref": "#/definitions/KeyAlgorithm",
	"definitions.CertificateDetail.properties.KeyAlgorithm.description": "The algorithm that was used to generate the key pair (the public and private key).",
	"definitions.CertificateDetail.properties.NotAfter.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.NotAfter.description": "The time after which the certificate is not valid.",
	"definitions.CertificateDetail.properties.NotBefore.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.NotBefore.description": "The time before which the certificate is not valid.",
	"definitions.CertificateDetail.properties.RenewalSummary.$ref": "#/definitions/RenewalSummary",
	"definitions.CertificateDetail.properties.RenewalSummary.description": "Contains information about the status of ACM's \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e for the certificate. This field exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.RevocationReason.$ref": "#/definitions/RevocationReason",
	"definitions.CertificateDetail.properties.RevocationReason.description": "The reason the certificate was revoked. This value exists only when the certificate status is \u003ccode\u003eREVOKED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.RevokedAt.$ref": "#/definitions/TStamp",
	"definitions.CertificateDetail.properties.RevokedAt.description": "The time at which the certificate was revoked. This value exists only when the certificate status is \u003ccode\u003eREVOKED\u003c/code\u003e.",
	"definitions.CertificateDetail.properties.Serial.$ref": "#/definitions/String",
	"definitions.CertificateDetail.properties.Serial.description": "The serial number of the certificate.",
	"definitions.CertificateDetail.properties.SignatureAlgorithm.$ref": "#/definitions/String",
	"definitions.CertificateDetail.properties.SignatureAlgorithm.description": "The algorithm that was used to sign the certificate.",
	"definitions.CertificateDetail.properties.Status.$ref": "#/definitions/CertificateStatus",
	"definitions.CertificateDetail.properties.Status.description": "The status of the certificate.",
	"definitions.CertificateDetail.properties.Subject.$ref": "#/definitions/String",
	"definitions.CertificateDetail.properties.Subject.description": "The name of the entity that is associated with the public key contained in the certificate.",
	"definitions.CertificateDetail.properties.SubjectAlternativeNames.$ref": "#/definitions/DomainList",
	"definitions.CertificateDetail.properties.SubjectAlternativeNames.description": "One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.",
	"definitions.CertificateDetail.properties.Type.$ref": "#/definitions/CertificateType",
	"definitions.CertificateDetail.properties.Type.description": "The source of the certificate. For certificates provided by ACM, this value is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e. For certificates that you imported with \u003ca\u003eImportCertificate\u003c/a\u003e, this value is \u003ccode\u003eIMPORTED\u003c/code\u003e. ACM does not provide \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\"\u003eImporting Certificates\u003c/a\u003e in the \u003ci\u003eAWS Certificate Manager User Guide\u003c/i\u003e.",
	"definitions.CertificateDetail.type": "object",
	"definitions.CertificateStatus.enum.length": 7,
	"definitions.CertificateStatus.enum[0]": "PENDING_VALIDATION",
	"definitions.CertificateStatus.enum[1]": "ISSUED",
	"definitions.CertificateStatus.enum[2]": "INACTIVE",
	"definitions.CertificateStatus.enum[3]": "EXPIRED",
	"definitions.CertificateStatus.enum[4]": "VALIDATION_TIMED_OUT",
	"definitions.CertificateStatus.enum[5]": "REVOKED",
	"definitions.CertificateStatus.enum[6]": "FAILED",
	"definitions.CertificateStatus.type": "string",
	"definitions.CertificateStatuses.items.$ref": "#/definitions/CertificateStatus",
	"definitions.CertificateStatuses.type": "array",
	"definitions.CertificateSummary.description": "This structure is returned in the response object of \u003ca\u003eListCertificates\u003c/a\u003e action.",
	"definitions.CertificateSummary.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.CertificateSummary.properties.CertificateArn.description": "\u003cp\u003eAmazon Resource Name (ARN) of the certificate. This is of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.CertificateSummary.properties.DomainName.$ref": "#/definitions/DomainNameString",
	"definitions.CertificateSummary.properties.DomainName.description": "Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.",
	"definitions.CertificateSummary.type": "object",
	"definitions.CertificateSummaryList.items.$ref": "#/definitions/CertificateSummary",
	"definitions.CertificateSummaryList.type": "array",
	"definitions.CertificateType.enum.length": 2,
	"definitions.CertificateType.enum[0]": "IMPORTED",
	"definitions.CertificateType.enum[1]": "AMAZON_ISSUED",
	"definitions.CertificateType.type": "string",
	"definitions.DeleteCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.DeleteCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the ACM Certificate to be deleted. This must be of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.DeleteCertificateRequest.required.length": 1,
	"definitions.DeleteCertificateRequest.required[0]": "CertificateArn",
	"definitions.DeleteCertificateRequest.type": "object",
	"definitions.DescribeCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.DescribeCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.DescribeCertificateRequest.required.length": 1,
	"definitions.DescribeCertificateRequest.required[0]": "CertificateArn",
	"definitions.DescribeCertificateRequest.type": "object",
	"definitions.DescribeCertificateResponse.properties.Certificate.$ref": "#/definitions/CertificateDetail",
	"definitions.DescribeCertificateResponse.properties.Certificate.description": "Metadata about an ACM certificate.",
	"definitions.DescribeCertificateResponse.type": "object",
	"definitions.DomainList.items.$ref": "#/definitions/DomainNameString",
	"definitions.DomainList.maxItems": 100,
	"definitions.DomainList.minItems": 1,
	"definitions.DomainList.type": "array",
	"definitions.DomainNameString.maxLength": 253,
	"definitions.DomainNameString.minLength": 1,
	"definitions.DomainNameString.pattern": "^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$",
	"definitions.DomainNameString.type": "string",
	"definitions.DomainStatus.enum.length": 3,
	"definitions.DomainStatus.enum[0]": "PENDING_VALIDATION",
	"definitions.DomainStatus.enum[1]": "SUCCESS",
	"definitions.DomainStatus.enum[2]": "FAILED",
	"definitions.DomainStatus.type": "string",
	"definitions.DomainValidation.description": "Contains information about the validation of each domain name in the certificate.",
	"definitions.DomainValidation.properties.DomainName.$ref": "#/definitions/DomainNameString",
	"definitions.DomainValidation.properties.DomainName.description": "A fully qualified domain name (FQDN) in the certificate. For example, \u003ccode\u003ewww.example.com\u003c/code\u003e or \u003ccode\u003eexample.com\u003c/code\u003e.",
	"definitions.DomainValidation.properties.ValidationDomain.$ref": "#/definitions/DomainNameString",
	"definitions.DomainValidation.properties.ValidationDomain.description": "The domain name that ACM used to send domain validation emails.",
	"definitions.DomainValidation.properties.ValidationEmails.$ref": "#/definitions/ValidationEmailList",
	"definitions.DomainValidation.properties.ValidationEmails.description": "A list of email addresses that ACM used to send domain validation emails.",
	"definitions.DomainValidation.properties.ValidationStatus.$ref": "#/definitions/DomainStatus",
	"definitions.DomainValidation.properties.ValidationStatus.description": "The validation status of the domain name.",
	"definitions.DomainValidation.required.length": 1,
	"definitions.DomainValidation.required[0]": "DomainName",
	"definitions.DomainValidation.type": "object",
	"definitions.DomainValidationList.items.$ref": "#/definitions/DomainValidation",
	"definitions.DomainValidationList.maxItems": 1000,
	"definitions.DomainValidationList.minItems": 1,
	"definitions.DomainValidationList.type": "array",
	"definitions.DomainValidationOption.description": "Contains information about the domain names that you want ACM to use to send you emails to validate your ownership of the domain.",
	"definitions.DomainValidationOption.properties.DomainName.$ref": "#/definitions/DomainNameString",
	"definitions.DomainValidationOption.properties.DomainName.description": "A fully qualified domain name (FQDN) in the certificate request.",
	"definitions.DomainValidationOption.properties.ValidationDomain.$ref": "#/definitions/DomainNameString",
	"definitions.DomainValidationOption.properties.ValidationDomain.description": "\u003cp\u003eThe domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the \u003ccode\u003eDomainName\u003c/code\u003e value or a superdomain of the \u003ccode\u003eDomainName\u003c/code\u003e value. For example, if you request a certificate for \u003ccode\u003etesting.example.com\u003c/code\u003e, you can specify \u003ccode\u003eexample.com\u003c/code\u003e for this value. In that case, ACM sends domain validation emails to the following five addresses:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eadmin@example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eadministrator@example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ehostmaster@example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003epostmaster@example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ewebmaster@example.com\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
	"definitions.DomainValidationOption.required.length": 2,
	"definitions.DomainValidationOption.required[0]": "DomainName",
	"definitions.DomainValidationOption.required[1]": "ValidationDomain",
	"definitions.DomainValidationOption.type": "object",
	"definitions.DomainValidationOptionList.items.$ref": "#/definitions/DomainValidationOption",
	"definitions.DomainValidationOptionList.maxItems": 100,
	"definitions.DomainValidationOptionList.minItems": 1,
	"definitions.DomainValidationOptionList.type": "array",
	"definitions.FailureReason.enum.length": 5,
	"definitions.FailureReason.enum[0]": "NO_AVAILABLE_CONTACTS",
	"definitions.FailureReason.enum[1]": "ADDITIONAL_VERIFICATION_REQUIRED",
	"definitions.FailureReason.enum[2]": "DOMAIN_NOT_ALLOWED",
	"definitions.FailureReason.enum[3]": "INVALID_PUBLIC_DOMAIN",
	"definitions.FailureReason.enum[4]": "OTHER",
	"definitions.FailureReason.type": "string",
	"definitions.GetCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.GetCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains a certificate ARN in the following format:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.GetCertificateRequest.required.length": 1,
	"definitions.GetCertificateRequest.required[0]": "CertificateArn",
	"definitions.GetCertificateRequest.type": "object",
	"definitions.GetCertificateResponse.properties.Certificate.$ref": "#/definitions/CertificateBody",
	"definitions.GetCertificateResponse.properties.Certificate.description": "String that contains the ACM Certificate represented by the ARN specified at input.",
	"definitions.GetCertificateResponse.properties.CertificateChain.$ref": "#/definitions/CertificateChain",
	"definitions.GetCertificateResponse.properties.CertificateChain.description": "The certificate chain that contains the root certificate issued by the certificate authority (CA).",
	"definitions.GetCertificateResponse.type": "object",
	"definitions.IdempotencyToken.maxLength": 32,
	"definitions.IdempotencyToken.minLength": 1,
	"definitions.IdempotencyToken.pattern": "\\w+",
	"definitions.IdempotencyToken.type": "string",
	"definitions.ImportCertificateRequest.properties.Certificate.$ref": "#/definitions/CertificateBodyBlob",
	"definitions.ImportCertificateRequest.properties.Certificate.description": "\u003cp\u003eThe certificate to import. It must meet the following requirements:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMust be PEM-encoded.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMust contain a 1024-bit or 2048-bit RSA public key.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMust be valid at the time of import. You cannot import a certificate before its validity period begins (the certificate's \u003ccode\u003eNotBefore\u003c/code\u003e date) or after it expires (the certificate's \u003ccode\u003eNotAfter\u003c/code\u003e date).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
	"definitions.ImportCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.ImportCertificateRequest.properties.CertificateArn.description": "The \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Name (ARN)\u003c/a\u003e of an imported certificate to replace. To import a new certificate, omit this field.",
	"definitions.ImportCertificateRequest.properties.CertificateChain.$ref": "#/definitions/CertificateChainBlob",
	"definitions.ImportCertificateRequest.properties.CertificateChain.description": "The certificate chain. It must be PEM-encoded.",
	"definitions.ImportCertificateRequest.properties.PrivateKey.$ref": "#/definitions/PrivateKeyBlob",
	"definitions.ImportCertificateRequest.properties.PrivateKey.description": "\u003cp\u003eThe private key that matches the public key in the certificate. It must meet the following requirements:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eMust be PEM-encoded.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eMust be unencrypted. You cannot import a private key that is protected by a password or passphrase.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
	"definitions.ImportCertificateRequest.required.length": 2,
	"definitions.ImportCertificateRequest.required[0]": "Certificate",
	"definitions.ImportCertificateRequest.required[1]": "PrivateKey",
	"definitions.ImportCertificateRequest.type": "object",
	"definitions.ImportCertificateResponse.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.ImportCertificateResponse.properties.CertificateArn.description": "The \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Name (ARN)\u003c/a\u003e of the imported certificate.",
	"definitions.ImportCertificateResponse.type": "object",
	"definitions.InUseList.items.$ref": "#/definitions/String",
	"definitions.InUseList.type": "array",
	"definitions.InvalidArnException.description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
	"definitions.InvalidArnException.properties.message.$ref": "#/definitions/String",
	"definitions.InvalidArnException.type": "object",
	"definitions.InvalidDomainValidationOptionsException.description": "One or more values in the \u003ca\u003eDomainValidationOption\u003c/a\u003e structure is incorrect.",
	"definitions.InvalidDomainValidationOptionsException.properties.message.$ref": "#/definitions/String",
	"definitions.InvalidDomainValidationOptionsException.type": "object",
	"definitions.InvalidStateException.description": "Processing has reached an invalid state. For example, this exception can occur if the specified domain is not using email validation, or the current certificate status does not permit the requested operation. See the exception message returned by ACM to determine which state is not valid.",
	"definitions.InvalidStateException.properties.message.$ref": "#/definitions/String",
	"definitions.InvalidStateException.type": "object",
	"definitions.InvalidTagException.description": "One or both of the values that make up the key-value pair is not valid. For example, you cannot specify a tag value that begins with \u003ccode\u003eaws:\u003c/code\u003e.",
	"definitions.InvalidTagException.properties.message.$ref": "#/definitions/String",
	"definitions.InvalidTagException.type": "object",
	"definitions.KeyAlgorithm.enum.length": 3,
	"definitions.KeyAlgorithm.enum[0]": "RSA_2048",
	"definitions.KeyAlgorithm.enum[1]": "RSA_1024",
	"definitions.KeyAlgorithm.enum[2]": "EC_prime256v1",
	"definitions.KeyAlgorithm.type": "string",
	"definitions.LimitExceededException.description": "An ACM limit has been exceeded. For example, you may have input more domains than are allowed or you've requested too many certificates for your account. See the exception message returned by ACM to determine which limit you have violated. For more information about ACM limits, see the \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\"\u003eLimits\u003c/a\u003e topic.",
	"definitions.LimitExceededException.properties.message.$ref": "#/definitions/String",
	"definitions.LimitExceededException.type": "object",
	"definitions.ListCertificatesRequest.properties.CertificateStatuses.$ref": "#/definitions/CertificateStatuses",
	"definitions.ListCertificatesRequest.properties.CertificateStatuses.description": "The status or statuses on which to filter the list of ACM Certificates.",
	"definitions.ListCertificatesRequest.properties.MaxItems.$ref": "#/definitions/MaxItems",
	"definitions.ListCertificatesRequest.properties.MaxItems.description": "Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the \u003ccode\u003eNextToken\u003c/code\u003e element is sent in the response. Use this \u003ccode\u003eNextToken\u003c/code\u003e value in a subsequent request to retrieve additional items.",
	"definitions.ListCertificatesRequest.properties.NextToken.$ref": "#/definitions/NextToken",
	"definitions.ListCertificatesRequest.properties.NextToken.description": "Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of \u003ccode\u003eNextToken\u003c/code\u003e from the response you just received.",
	"definitions.ListCertificatesRequest.type": "object",
	"definitions.ListCertificatesResponse.properties.CertificateSummaryList.$ref": "#/definitions/CertificateSummaryList",
	"definitions.ListCertificatesResponse.properties.CertificateSummaryList.description": "A list of ACM Certificates.",
	"definitions.ListCertificatesResponse.properties.NextToken.$ref": "#/definitions/NextToken",
	"definitions.ListCertificatesResponse.properties.NextToken.description": "When the list is truncated, this value is present and contains the value to use for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent pagination request.",
	"definitions.ListCertificatesResponse.type": "object",
	"definitions.ListTagsForCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.ListTagsForCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the ACM Certificate for which you want to list the tags. This has the following form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.ListTagsForCertificateRequest.required.length": 1,
	"definitions.ListTagsForCertificateRequest.required[0]": "CertificateArn",
	"definitions.ListTagsForCertificateRequest.type": "object",
	"definitions.ListTagsForCertificateResponse.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.ListTagsForCertificateResponse.properties.Tags.description": "The key-value pairs that define the applied tags.",
	"definitions.ListTagsForCertificateResponse.type": "object",
	"definitions.MaxItems.maximum": 1000,
	"definitions.MaxItems.minimum": 1,
	"definitions.MaxItems.type": "integer",
	"definitions.NextToken.maxLength": 320,
	"definitions.NextToken.minLength": 1,
	"definitions.NextToken.pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*",
	"definitions.NextToken.type": "string",
	"definitions.PrivateKeyBlob.format": "password",
	"definitions.PrivateKeyBlob.maxLength": 524288,
	"definitions.PrivateKeyBlob.minLength": 1,
	"definitions.PrivateKeyBlob.type": "string",
	"definitions.RemoveTagsFromCertificateRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.RemoveTagsFromCertificateRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information about ARNs, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e.\u003c/p\u003e",
	"definitions.RemoveTagsFromCertificateRequest.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.RemoveTagsFromCertificateRequest.properties.Tags.description": "The key-value pair that defines the tag to remove.",
	"definitions.RemoveTagsFromCertificateRequest.required.length": 2,
	"definitions.RemoveTagsFromCertificateRequest.required[0]": "CertificateArn",
	"definitions.RemoveTagsFromCertificateRequest.required[1]": "Tags",
	"definitions.RemoveTagsFromCertificateRequest.type": "object",
	"definitions.RenewalStatus.enum.length": 4,
	"definitions.RenewalStatus.enum[0]": "PENDING_AUTO_RENEWAL",
	"definitions.RenewalStatus.enum[1]": "PENDING_VALIDATION",
	"definitions.RenewalStatus.enum[2]": "SUCCESS",
	"definitions.RenewalStatus.enum[3]": "FAILED",
	"definitions.RenewalStatus.type": "string",
	"definitions.RenewalSummary.description": "Contains information about the status of ACM's \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e for the certificate. This structure exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.RenewalSummary.properties.DomainValidationOptions.$ref": "#/definitions/DomainValidationList",
	"definitions.RenewalSummary.properties.DomainValidationOptions.description": "Contains information about the validation of each domain name in the certificate, as it pertains to ACM's \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e. This is different from the initial validation that occurs as a result of the \u003ca\u003eRequestCertificate\u003c/a\u003e request. This field exists only when the certificate type is \u003ccode\u003eAMAZON_ISSUED\u003c/code\u003e.",
	"definitions.RenewalSummary.properties.RenewalStatus.$ref": "#/definitions/RenewalStatus",
	"definitions.RenewalSummary.properties.RenewalStatus.description": "The status of ACM's \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e of the certificate.",
	"definitions.RenewalSummary.required.length": 2,
	"definitions.RenewalSummary.required[0]": "RenewalStatus",
	"definitions.RenewalSummary.required[1]": "DomainValidationOptions",
	"definitions.RenewalSummary.type": "object",
	"definitions.RequestCertificateRequest.properties.DomainName.$ref": "#/definitions/DomainNameString",
	"definitions.RequestCertificateRequest.properties.DomainName.description": "\u003cp\u003e Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com. \u003c/p\u003e \u003cp\u003e The maximum length of a DNS name is 253 octets. The name is made up of multiple labels separated by periods. No label can be longer than 63 octets. Consider the following examples: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e(63 octets).(63 octets).(63 octets).(61 octets)\u003c/code\u003e is legal because the total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets. \u003c/p\u003e \u003cp\u003e \u003ccode\u003e(64 octets).(63 octets).(63 octets).(61 octets)\u003c/code\u003e is not legal because the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds 63 octets. \u003c/p\u003e \u003cp\u003e \u003ccode\u003e(63 octets).(63 octets).(63 octets).(62 octets)\u003c/code\u003e is not legal because the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets. \u003c/p\u003e",
	"definitions.RequestCertificateRequest.properties.DomainValidationOptions.$ref": "#/definitions/DomainValidationOptionList",
	"definitions.RequestCertificateRequest.properties.DomainValidationOptions.description": "The domain name that you want ACM to use to send you emails to validate your ownership of the domain.",
	"definitions.RequestCertificateRequest.properties.IdempotencyToken.$ref": "#/definitions/IdempotencyToken",
	"definitions.RequestCertificateRequest.properties.IdempotencyToken.description": "Customer chosen string that can be used to distinguish between calls to \u003ccode\u003eRequestCertificate\u003c/code\u003e. Idempotency tokens time out after one hour. Therefore, if you call \u003ccode\u003eRequestCertificate\u003c/code\u003e multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.",
	"definitions.RequestCertificateRequest.properties.SubjectAlternativeNames.$ref": "#/definitions/DomainList",
	"definitions.RequestCertificateRequest.properties.SubjectAlternativeNames.description": "Additional FQDNs to be included in the Subject Alternative Name extension of the ACM Certificate. For example, add the name www.example.net to a certificate for which the \u003ccode\u003eDomainName\u003c/code\u003e field is www.example.com if users can reach your site by using either name. The maximum number of domain names that you can add to an ACM Certificate is 100. However, the initial limit is 10 domain names. If you need more than 10 names, you must request a limit increase. For more information, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html\"\u003eLimits\u003c/a\u003e.",
	"definitions.RequestCertificateRequest.required.length": 1,
	"definitions.RequestCertificateRequest.required[0]": "DomainName",
	"definitions.RequestCertificateRequest.type": "object",
	"definitions.RequestCertificateResponse.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.RequestCertificateResponse.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the issued certificate. This must be of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e",
	"definitions.RequestCertificateResponse.type": "object",
	"definitions.RequestInProgressException.description": "The certificate request is in process and the certificate in your account has not yet been issued.",
	"definitions.RequestInProgressException.properties.message.$ref": "#/definitions/String",
	"definitions.RequestInProgressException.type": "object",
	"definitions.ResendValidationEmailRequest.properties.CertificateArn.$ref": "#/definitions/Arn",
	"definitions.ResendValidationEmailRequest.properties.CertificateArn.description": "\u003cp\u003eString that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the \u003ca\u003eRequestCertificate\u003c/a\u003e action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request.\u003c/p\u003e \u003cp\u003eThe ARN must be of the form:\u003c/p\u003e \u003cp\u003e \u003ccode\u003earn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\u003c/code\u003e \u003c/p\u003e",
	"definitions.ResendValidationEmailRequest.properties.Domain.$ref": "#/definitions/DomainNameString",
	"definitions.ResendValidationEmailRequest.properties.Domain.description": "The fully qualified domain name (FQDN) of the certificate that needs to be validated.",
	"definitions.ResendValidationEmailRequest.properties.ValidationDomain.$ref": "#/definitions/DomainNameString",
	"definitions.ResendValidationEmailRequest.properties.ValidationDomain.description": "\u003cp\u003eThe base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the \u003ccode\u003eDomain\u003c/code\u003e value or a superdomain of the \u003ccode\u003eDomain\u003c/code\u003e value. For example, if you requested a certificate for \u003ccode\u003esite.subdomain.example.com\u003c/code\u003e and specify a \u003cb\u003eValidationDomain\u003c/b\u003e of \u003ccode\u003esubdomain.example.com\u003c/code\u003e, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eadmin@subdomain.example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eadministrator@subdomain.example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ehostmaster@subdomain.example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003epostmaster@subdomain.example.com\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ewebmaster@subdomain.example.com\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
	"definitions.ResendValidationEmailRequest.required.length": 3,
	"definitions.ResendValidationEmailRequest.required[0]": "CertificateArn",
	"definitions.ResendValidationEmailRequest.required[1]": "Domain",
	"definitions.ResendValidationEmailRequest.required[2]": "ValidationDomain",
	"definitions.ResendValidationEmailRequest.type": "object",
	"definitions.ResourceInUseException.description": "The certificate is in use by another AWS service in the caller's account. Remove the association and try again.",
	"definitions.ResourceInUseException.properties.message.$ref": "#/definitions/String",
	"definitions.ResourceInUseException.type": "object",
	"definitions.ResourceNotFoundException.description": "The specified certificate cannot be found in the caller's account, or the caller's account cannot be found.",
	"definitions.ResourceNotFoundException.properties.message.$ref": "#/definitions/String",
	"definitions.ResourceNotFoundException.type": "object",
	"definitions.RevocationReason.enum.length": 10,
	"definitions.RevocationReason.enum[0]": "UNSPECIFIED",
	"definitions.RevocationReason.enum[1]": "KEY_COMPROMISE",
	"definitions.RevocationReason.enum[2]": "CA_COMPROMISE",
	"definitions.RevocationReason.enum[3]": "AFFILIATION_CHANGED",
	"definitions.RevocationReason.enum[4]": "SUPERCEDED",
	"definitions.RevocationReason.enum[5]": "CESSATION_OF_OPERATION",
	"definitions.RevocationReason.enum[6]": "CERTIFICATE_HOLD",
	"definitions.RevocationReason.enum[7]": "REMOVE_FROM_CRL",
	"definitions.RevocationReason.enum[8]": "PRIVILEGE_WITHDRAWN",
	"definitions.RevocationReason.enum[9]": "A_A_COMPROMISE",
	"definitions.RevocationReason.type": "string",
	"definitions.String.type": "string",
	"definitions.TStamp.format": "date-time",
	"definitions.TStamp.type": "string",
	"definitions.Tag.description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
	"definitions.Tag.properties.Key.$ref": "#/definitions/TagKey",
	"definitions.Tag.properties.Key.description": "The key of the tag.",
	"definitions.Tag.properties.Value.$ref": "#/definitions/TagValue",
	"definitions.Tag.properties.Value.description": "The value of the tag.",
	"definitions.Tag.required.length": 1,
	"definitions.Tag.required[0]": "Key",
	"definitions.Tag.type": "object",
	"definitions.TagKey.maxLength": 128,
	"definitions.TagKey.minLength": 1,
	"definitions.TagKey.pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
	"definitions.TagKey.type": "string",
	"definitions.TagList.items.$ref": "#/definitions/Tag",
	"definitions.TagList.maxItems": 50,
	"definitions.TagList.minItems": 1,
	"definitions.TagList.type": "array",
	"definitions.TagValue.maxLength": 256,
	"definitions.TagValue.minLength": 0,
	"definitions.TagValue.pattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*",
	"definitions.TagValue.type": "string",
	"definitions.TooManyTagsException.description": "The request contains too many tags. Try the request again with fewer tags.",
	"definitions.TooManyTagsException.properties.message.$ref": "#/definitions/String",
	"definitions.TooManyTagsException.type": "object",
	"definitions.ValidationEmailList.items.$ref": "#/definitions/String",
	"definitions.ValidationEmailList.type": "array",
	"externalDocs.description": "Amazon Web Services documentation",
	"externalDocs.url": "https://aws.amazon.com/acm/",
	"host": "acm.amazonaws.com",
	"info.contact.email": "mike.ralphson@gmail.com",
	"info.contact.name": "Mike Ralphson",
	"info.contact.url": "https://github.com/mermade/aws2openapi",
	"info.description": "\u003cfullname\u003eAWS Certificate Manager\u003c/fullname\u003e \u003cp\u003eWelcome to the AWS Certificate Manager (ACM) API documentation.\u003c/p\u003e \u003cp\u003eYou can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications. For general information about using ACM, see the \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"\u003e \u003ci\u003eAWS Certificate Manager User Guide\u003c/i\u003e \u003c/a\u003e.\u003c/p\u003e",
	"info.license.name": "Apache 2.0 License",
	"info.license.url": "http://www.apache.org/licenses/",
	"info.termsOfService": "https://aws.amazon.com/service-terms/",
	"info.title": "AWS Certificate Manager",
	"info.version": "2015-12-08",
	"info.x-apiClientRegistration.url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].contentType": "application/json",
	"info.x-origin[0].converter.url": "https://github.com/mermade/aws2openapi",
	"info.x-origin[0].converter.version": "1.0.0",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/acm-2015-12-08.normal.json",
	"info.x-origin[0].x-apisguru-direct": true,
	"info.x-preferred": true,
	"info.x-providerName": "amazonaws.com",
	"info.x-release": "v4",
	"info.x-serviceName": "acm",
	"parameters.Action.in": "header",
	"parameters.Action.name": "Action",
	"parameters.Action.required": true,
	"parameters.Action.type": "string",
	"parameters.Version.in": "header",
	"parameters.Version.name": "Version",
	"parameters.Version.required": true,
	"parameters.Version.type": "string",
	"parameters.X-Amz-Algorithm.in": "header",
	"parameters.X-Amz-Algorithm.name": "X-Amz-Algorithm",
	"parameters.X-Amz-Algorithm.required": false,
	"parameters.X-Amz-Algorithm.type": "string",
	"parameters.X-Amz-Content-Sha256.in": "header",
	"parameters.X-Amz-Content-Sha256.name": "X-Amz-Content-Sha256",
	"parameters.X-Amz-Content-Sha256.required": false,
	"parameters.X-Amz-Content-Sha256.type": "string",
	"parameters.X-Amz-Credential.in": "header",
	"parameters.X-Amz-Credential.name": "X-Amz-Credential",
	"parameters.X-Amz-Credential.required": false,
	"parameters.X-Amz-Credential.type": "string",
	"parameters.X-Amz-Date.in": "header",
	"parameters.X-Amz-Date.name": "X-Amz-Date",
	"parameters.X-Amz-Date.required": false,
	"parameters.X-Amz-Date.type": "string",
	"parameters.X-Amz-Security-Token.in": "header",
	"parameters.X-Amz-Security-Token.name": "X-Amz-Security-Token",
	"parameters.X-Amz-Security-Token.required": false,
	"parameters.X-Amz-Security-Token.type": "string",
	"parameters.X-Amz-Signature.in": "header",
	"parameters.X-Amz-Signature.name": "X-Amz-Signature",
	"parameters.X-Amz-Signature.required": false,
	"parameters.X-Amz-Signature.type": "string",
	"parameters.X-Amz-SignedHeaders.in": "header",
	"parameters.X-Amz-SignedHeaders.name": "X-Amz-SignedHeaders",
	"parameters.X-Amz-SignedHeaders.required": false,
	"parameters.X-Amz-SignedHeaders.type": "string",
	"paths./#DeleteCertificate.parameters.length": 9,
	"paths./#DeleteCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteCertificate.post.description": "\u003cp\u003eDeletes an ACM Certificate and its associated private key. If this action succeeds, the certificate no longer appears in the list of ACM Certificates that can be displayed by calling the \u003ca\u003eListCertificates\u003c/a\u003e action or be retrieved by calling the \u003ca\u003eGetCertificate\u003c/a\u003e action. The certificate will not be available for use by other AWS services.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou cannot delete an ACM Certificate that is being used by another AWS service. To delete a certificate that is in use, the certificate association must first be removed.\u003c/p\u003e \u003c/note\u003e",
	"paths./#DeleteCertificate.post.operationId": "DeleteCertificate",
	"paths./#DeleteCertificate.post.parameters.length": 1,
	"paths./#DeleteCertificate.post.parameters[0].in": "body",
	"paths./#DeleteCertificate.post.parameters[0].name": "body",
	"paths./#DeleteCertificate.post.parameters[0].required": true,
	"paths./#DeleteCertificate.post.parameters[0].schema.$ref": "#/definitions/DeleteCertificateRequest",
	"paths./#DeleteCertificate.post.responses.200.description": "Success",
	"paths./#DeleteCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#DeleteCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#DeleteCertificate.post.responses.481.description": "ResourceInUseException",
	"paths./#DeleteCertificate.post.responses.481.schema.$ref": "#/definitions/ResourceInUseException",
	"paths./#DeleteCertificate.post.responses.482.description": "InvalidArnException",
	"paths./#DeleteCertificate.post.responses.482.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#DescribeCertificate.parameters.length": 9,
	"paths./#DescribeCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeCertificate.post.description": "Returns detailed metadata about the specified ACM Certificate.",
	"paths./#DescribeCertificate.post.operationId": "DescribeCertificate",
	"paths./#DescribeCertificate.post.parameters.length": 1,
	"paths./#DescribeCertificate.post.parameters[0].in": "body",
	"paths./#DescribeCertificate.post.parameters[0].name": "body",
	"paths./#DescribeCertificate.post.parameters[0].required": true,
	"paths./#DescribeCertificate.post.parameters[0].schema.$ref": "#/definitions/DescribeCertificateRequest",
	"paths./#DescribeCertificate.post.responses.200.description": "Success",
	"paths./#DescribeCertificate.post.responses.200.schema.$ref": "#/definitions/DescribeCertificateResponse",
	"paths./#DescribeCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#DescribeCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#DescribeCertificate.post.responses.481.description": "InvalidArnException",
	"paths./#DescribeCertificate.post.responses.481.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#GetCertificate.parameters.length": 9,
	"paths./#GetCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#GetCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#GetCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#GetCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#GetCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#GetCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#GetCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#GetCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#GetCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#GetCertificate.post.description": "\u003cp\u003eRetrieves an ACM Certificate and certificate chain for the certificate specified by an ARN. The chain is an ordered list of certificates that contains the root certificate, intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate and certificate chain are base64 encoded. If you want to decode the certificate chain to see the individual certificate fields, you can use OpenSSL.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eCurrently, ACM Certificates can be used only with Elastic Load Balancing and Amazon CloudFront.\u003c/p\u003e \u003c/note\u003e",
	"paths./#GetCertificate.post.operationId": "GetCertificate",
	"paths./#GetCertificate.post.parameters.length": 1,
	"paths./#GetCertificate.post.parameters[0].in": "body",
	"paths./#GetCertificate.post.parameters[0].name": "body",
	"paths./#GetCertificate.post.parameters[0].required": true,
	"paths./#GetCertificate.post.parameters[0].schema.$ref": "#/definitions/GetCertificateRequest",
	"paths./#GetCertificate.post.responses.200.description": "Success",
	"paths./#GetCertificate.post.responses.200.schema.$ref": "#/definitions/GetCertificateResponse",
	"paths./#GetCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#GetCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#GetCertificate.post.responses.481.description": "RequestInProgressException",
	"paths./#GetCertificate.post.responses.481.schema.$ref": "#/definitions/RequestInProgressException",
	"paths./#GetCertificate.post.responses.482.description": "InvalidArnException",
	"paths./#GetCertificate.post.responses.482.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#ImportCertificate.parameters.length": 9,
	"paths./#ImportCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#ImportCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#ImportCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ImportCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ImportCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ImportCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ImportCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ImportCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ImportCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ImportCertificate.post.description": "\u003cp\u003eImports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html\"\u003eACM's integrated AWS services\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eACM does not provide \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html\"\u003emanaged renewal\u003c/a\u003e for certificates that you import.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information about importing certificates into ACM, including the differences between certificates that you import and those that ACM provides, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\"\u003eImporting Certificates\u003c/a\u003e in the \u003ci\u003eAWS Certificate Manager User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTo import a certificate, you must provide the certificate and the matching private key. When the certificate is not self-signed, you must also provide a certificate chain. You can omit the certificate chain when importing a self-signed certificate.\u003c/p\u003e \u003cp\u003eThe certificate, private key, and certificate chain must be PEM-encoded. For more information about converting these items to PEM format, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting\"\u003eImporting Certificates Troubleshooting\u003c/a\u003e in the \u003ci\u003eAWS Certificate Manager User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTo import a new certificate, omit the \u003ccode\u003eCertificateArn\u003c/code\u003e field. Include this field only when you want to replace a previously imported certificate.\u003c/p\u003e \u003cp\u003eThis operation returns the \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\u003eAmazon Resource Name (ARN)\u003c/a\u003e of the imported certificate.\u003c/p\u003e",
	"paths./#ImportCertificate.post.operationId": "ImportCertificate",
	"paths./#ImportCertificate.post.parameters.length": 1,
	"paths./#ImportCertificate.post.parameters[0].in": "body",
	"paths./#ImportCertificate.post.parameters[0].name": "body",
	"paths./#ImportCertificate.post.parameters[0].required": true,
	"paths./#ImportCertificate.post.parameters[0].schema.$ref": "#/definitions/ImportCertificateRequest",
	"paths./#ImportCertificate.post.responses.200.description": "Success",
	"paths./#ImportCertificate.post.responses.200.schema.$ref": "#/definitions/ImportCertificateResponse",
	"paths./#ImportCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#ImportCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#ImportCertificate.post.responses.481.description": "LimitExceededException",
	"paths./#ImportCertificate.post.responses.481.schema.$ref": "#/definitions/LimitExceededException",
	"paths./#ListCertificates.parameters.length": 9,
	"paths./#ListCertificates.parameters[0].$ref": "#/parameters/Action",
	"paths./#ListCertificates.parameters[1].$ref": "#/parameters/Version",
	"paths./#ListCertificates.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ListCertificates.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ListCertificates.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ListCertificates.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ListCertificates.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ListCertificates.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ListCertificates.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ListCertificates.post.description": "Retrieves a list of ACM Certificates and the domain name for each. You can optionally filter the list to return only the certificates that match the specified status.",
	"paths./#ListCertificates.post.operationId": "ListCertificates",
	"paths./#ListCertificates.post.parameters.length": 3,
	"paths./#ListCertificates.post.parameters[0].in": "body",
	"paths./#ListCertificates.post.parameters[0].name": "body",
	"paths./#ListCertificates.post.parameters[0].required": true,
	"paths./#ListCertificates.post.parameters[0].schema.$ref": "#/definitions/ListCertificatesRequest",
	"paths./#ListCertificates.post.parameters[1].description": "Pagination limit",
	"paths./#ListCertificates.post.parameters[1].in": "query",
	"paths./#ListCertificates.post.parameters[1].name": "MaxItems",
	"paths./#ListCertificates.post.parameters[1].required": false,
	"paths./#ListCertificates.post.parameters[1].type": "string",
	"paths./#ListCertificates.post.parameters[2].description": "Pagination token",
	"paths./#ListCertificates.post.parameters[2].in": "query",
	"paths./#ListCertificates.post.parameters[2].name": "NextToken",
	"paths./#ListCertificates.post.parameters[2].required": false,
	"paths./#ListCertificates.post.parameters[2].type": "string",
	"paths./#ListCertificates.post.responses.200.description": "Success",
	"paths./#ListCertificates.post.responses.200.schema.$ref": "#/definitions/ListCertificatesResponse",
	"paths./#ListTagsForCertificate.parameters.length": 9,
	"paths./#ListTagsForCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#ListTagsForCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#ListTagsForCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ListTagsForCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ListTagsForCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ListTagsForCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ListTagsForCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ListTagsForCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ListTagsForCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ListTagsForCertificate.post.description": "Lists the tags that have been applied to the ACM Certificate. Use the certificate's Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate, use the \u003ca\u003eAddTagsToCertificate\u003c/a\u003e action. To delete a tag, use the \u003ca\u003eRemoveTagsFromCertificate\u003c/a\u003e action.",
	"paths./#ListTagsForCertificate.post.operationId": "ListTagsForCertificate",
	"paths./#ListTagsForCertificate.post.parameters.length": 1,
	"paths./#ListTagsForCertificate.post.parameters[0].in": "body",
	"paths./#ListTagsForCertificate.post.parameters[0].name": "body",
	"paths./#ListTagsForCertificate.post.parameters[0].required": true,
	"paths./#ListTagsForCertificate.post.parameters[0].schema.$ref": "#/definitions/ListTagsForCertificateRequest",
	"paths./#ListTagsForCertificate.post.responses.200.description": "Success",
	"paths./#ListTagsForCertificate.post.responses.200.schema.$ref": "#/definitions/ListTagsForCertificateResponse",
	"paths./#ListTagsForCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#ListTagsForCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#ListTagsForCertificate.post.responses.481.description": "InvalidArnException",
	"paths./#ListTagsForCertificate.post.responses.481.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#RemoveTagsFromCertificate.parameters.length": 9,
	"paths./#RemoveTagsFromCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#RemoveTagsFromCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#RemoveTagsFromCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RemoveTagsFromCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RemoveTagsFromCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RemoveTagsFromCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RemoveTagsFromCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RemoveTagsFromCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RemoveTagsFromCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RemoveTagsFromCertificate.post.description": "\u003cp\u003eRemove one or more tags from an ACM Certificate. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value.\u003c/p\u003e \u003cp\u003eTo add tags to a certificate, use the \u003ca\u003eAddTagsToCertificate\u003c/a\u003e action. To view all of the tags that have been applied to a specific ACM Certificate, use the \u003ca\u003eListTagsForCertificate\u003c/a\u003e action.\u003c/p\u003e",
	"paths./#RemoveTagsFromCertificate.post.operationId": "RemoveTagsFromCertificate",
	"paths./#RemoveTagsFromCertificate.post.parameters.length": 1,
	"paths./#RemoveTagsFromCertificate.post.parameters[0].in": "body",
	"paths./#RemoveTagsFromCertificate.post.parameters[0].name": "body",
	"paths./#RemoveTagsFromCertificate.post.parameters[0].required": true,
	"paths./#RemoveTagsFromCertificate.post.parameters[0].schema.$ref": "#/definitions/RemoveTagsFromCertificateRequest",
	"paths./#RemoveTagsFromCertificate.post.responses.200.description": "Success",
	"paths./#RemoveTagsFromCertificate.post.responses.480.description": "ResourceNotFoundException",
	"paths./#RemoveTagsFromCertificate.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#RemoveTagsFromCertificate.post.responses.481.description": "InvalidArnException",
	"paths./#RemoveTagsFromCertificate.post.responses.481.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#RemoveTagsFromCertificate.post.responses.482.description": "InvalidTagException",
	"paths./#RemoveTagsFromCertificate.post.responses.482.schema.$ref": "#/definitions/InvalidTagException",
	"paths./#RequestCertificate.parameters.length": 9,
	"paths./#RequestCertificate.parameters[0].$ref": "#/parameters/Action",
	"paths./#RequestCertificate.parameters[1].$ref": "#/parameters/Version",
	"paths./#RequestCertificate.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RequestCertificate.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RequestCertificate.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RequestCertificate.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RequestCertificate.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RequestCertificate.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RequestCertificate.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RequestCertificate.post.description": "Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate, you must specify the fully qualified domain name (FQDN) for your site. You can also specify additional FQDNs if users can reach your site by using other names. For each domain name you specify, email is sent to the domain owner to request approval to issue the certificate. After receiving approval from the domain owner, the ACM Certificate is issued. For more information, see the \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/\"\u003eAWS Certificate Manager User Guide\u003c/a\u003e.",
	"paths./#RequestCertificate.post.operationId": "RequestCertificate",
	"paths./#RequestCertificate.post.parameters.length": 1,
	"paths./#RequestCertificate.post.parameters[0].in": "body",
	"paths./#RequestCertificate.post.parameters[0].name": "body",
	"paths./#RequestCertificate.post.parameters[0].required": true,
	"paths./#RequestCertificate.post.parameters[0].schema.$ref": "#/definitions/RequestCertificateRequest",
	"paths./#RequestCertificate.post.responses.200.description": "Success",
	"paths./#RequestCertificate.post.responses.200.schema.$ref": "#/definitions/RequestCertificateResponse",
	"paths./#RequestCertificate.post.responses.480.description": "LimitExceededException",
	"paths./#RequestCertificate.post.responses.480.schema.$ref": "#/definitions/LimitExceededException",
	"paths./#RequestCertificate.post.responses.481.description": "InvalidDomainValidationOptionsException",
	"paths./#RequestCertificate.post.responses.481.schema.$ref": "#/definitions/InvalidDomainValidationOptionsException",
	"paths./#ResendValidationEmail.parameters.length": 9,
	"paths./#ResendValidationEmail.parameters[0].$ref": "#/parameters/Action",
	"paths./#ResendValidationEmail.parameters[1].$ref": "#/parameters/Version",
	"paths./#ResendValidationEmail.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ResendValidationEmail.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ResendValidationEmail.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ResendValidationEmail.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ResendValidationEmail.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ResendValidationEmail.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ResendValidationEmail.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ResendValidationEmail.post.description": "Resends the email that requests domain ownership validation. The domain owner or an authorized representative must approve the ACM Certificate before it can be issued. The certificate can be approved by clicking a link in the mail to navigate to the Amazon certificate approval website and then clicking \u003cb\u003eI Approve\u003c/b\u003e. However, the validation email can be blocked by spam filters. Therefore, if you do not receive the original mail, you can request that the mail be resent within 72 hours of requesting the ACM Certificate. If more than 72 hours have elapsed since your original request or since your last attempt to resend validation mail, you must request a new certificate. For more information about setting up your contact email addresses, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/setup-email.html\"\u003eConfigure Email for your Domain\u003c/a\u003e. ",
	"paths./#ResendValidationEmail.post.operationId": "ResendValidationEmail",
	"paths./#ResendValidationEmail.post.parameters.length": 1,
	"paths./#ResendValidationEmail.post.parameters[0].in": "body",
	"paths./#ResendValidationEmail.post.parameters[0].name": "body",
	"paths./#ResendValidationEmail.post.parameters[0].required": true,
	"paths./#ResendValidationEmail.post.parameters[0].schema.$ref": "#/definitions/ResendValidationEmailRequest",
	"paths./#ResendValidationEmail.post.responses.200.description": "Success",
	"paths./#ResendValidationEmail.post.responses.480.description": "ResourceNotFoundException",
	"paths./#ResendValidationEmail.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./#ResendValidationEmail.post.responses.481.description": "InvalidStateException",
	"paths./#ResendValidationEmail.post.responses.481.schema.$ref": "#/definitions/InvalidStateException",
	"paths./#ResendValidationEmail.post.responses.482.description": "InvalidArnException",
	"paths./#ResendValidationEmail.post.responses.482.schema.$ref": "#/definitions/InvalidArnException",
	"paths./#ResendValidationEmail.post.responses.483.description": "InvalidDomainValidationOptionsException",
	"paths./#ResendValidationEmail.post.responses.483.schema.$ref": "#/definitions/InvalidDomainValidationOptionsException",
	"paths./.parameters.length": 9,
	"paths./.parameters[0].$ref": "#/parameters/Action",
	"paths./.parameters[1].$ref": "#/parameters/Version",
	"paths./.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./.post.description": "\u003cp\u003eAdds one or more tags to an ACM Certificate. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a \u003ccode\u003ekey\u003c/code\u003e and an optional \u003ccode\u003evalue\u003c/code\u003e. You specify the certificate on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair.\u003c/p\u003e \u003cp\u003eYou can apply a tag to just one certificate if you want to identify a specific characteristic of that certificate, or you can apply the same tag to multiple certificates if you want to filter for a common relationship among those certificates. Similarly, you can apply the same tag to multiple resources if you want to specify a relationship among those resources. For example, you can add the same tag to an ACM Certificate and an Elastic Load Balancing load balancer to indicate that they are both used by the same website. For more information, see \u003ca href=\"http://docs.aws.amazon.com/acm/latest/userguide/tags.html\"\u003eTagging ACM Certificates\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eTo remove one or more tags, use the \u003ca\u003eRemoveTagsFromCertificate\u003c/a\u003e action. To view all of the tags that have been applied to the certificate, use the \u003ca\u003eListTagsForCertificate\u003c/a\u003e action.\u003c/p\u003e",
	"paths./.post.operationId": "AddTagsToCertificate",
	"paths./.post.parameters.length": 1,
	"paths./.post.parameters[0].in": "body",
	"paths./.post.parameters[0].name": "body",
	"paths./.post.parameters[0].required": true,
	"paths./.post.parameters[0].schema.$ref": "#/definitions/AddTagsToCertificateRequest",
	"paths./.post.responses.200.description": "Success",
	"paths./.post.responses.480.description": "ResourceNotFoundException",
	"paths./.post.responses.480.schema.$ref": "#/definitions/ResourceNotFoundException",
	"paths./.post.responses.481.description": "InvalidArnException",
	"paths./.post.responses.481.schema.$ref": "#/definitions/InvalidArnException",
	"paths./.post.responses.482.description": "InvalidTagException",
	"paths./.post.responses.482.schema.$ref": "#/definitions/InvalidTagException",
	"paths./.post.responses.483.description": "TooManyTagsException",
	"paths./.post.responses.483.schema.$ref": "#/definitions/TooManyTagsException",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "http",
	"security.length": 1,
	"securityDefinitions.hmac.description": "Amazon Signature authorization v4",
	"securityDefinitions.hmac.in": "header",
	"securityDefinitions.hmac.name": "Authorization",
	"securityDefinitions.hmac.type": "apiKey",
	"securityDefinitions.hmac.x-amazon-apigateway-authtype": "awsSigv4",
	"security[0].hmac.length": 0,
	"swagger": "2.0",
	"x-hasEquivalentPaths": true
}