syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package awscertificatemanager;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsToCertificateRequest body = 10;
}

message Post#DeleteCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCertificateRequest body = 10;
}

message Post#DescribeCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCertificateRequest body = 10;
}

message Post#GetCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetCertificateRequest body = 10;
}

message Post#ImportCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportCertificateRequest body = 10;
}

message Post#ListCertificatesRequest {
    string Action = 1;
    // Pagination limit
    string MaxItems = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListCertificatesRequest body = 12;
}

message Post#ListTagsForCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsForCertificateRequest body = 10;
}

message Post#RemoveTagsFromCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsFromCertificateRequest body = 10;
}

message Post#RequestCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RequestCertificateRequest body = 10;
}

message Post#ResendValidationEmailRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResendValidationEmailRequest body = 10;
}

message AddTagsToCertificateRequest {
    // <p>String that contains the ARN of the ACM Certificate to which the tag is to be applied. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
    // The key-value pair that defines the tag. The tag value is optional.
    array Tags = 2;
}

message CertificateDetail {
    // The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.
    string CertificateArn = 1;
    // The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>.
    string CreatedAt = 2;
    // The fully qualified domain name for the certificate, such as www.example.com or example.com.
    string DomainName = 3;
    // Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.
    array DomainValidationOptions = 4;
    // The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>.
    FailureReason FailureReason = 5;
    // The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>.
    string ImportedAt = 6;
    // A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources.
    array InUseBy = 7;
    // The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>.
    string IssuedAt = 8;
    // The name of the certificate authority that issued and signed the certificate.
    string Issuer = 9;
    // The algorithm that was used to generate the key pair (the public and private key).
    KeyAlgorithm KeyAlgorithm = 10;
    // The time after which the certificate is not valid.
    string NotAfter = 11;
    // The time before which the certificate is not valid.
    string NotBefore = 12;
    // Contains information about the status of ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.
    RenewalSummary RenewalSummary = 13;
    // The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>.
    RevocationReason RevocationReason = 14;
    // The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>.
    string RevokedAt = 15;
    // The serial number of the certificate.
    string Serial = 16;
    // The algorithm that was used to sign the certificate.
    string SignatureAlgorithm = 17;
    // The status of the certificate.
    CertificateStatus Status = 18;
    // The name of the entity that is associated with the public key contained in the certificate.
    string Subject = 19;
    // One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.
    array SubjectAlternativeNames = 20;
    // The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.
    CertificateType Type = 21;
}

enum CertificateStatu {
    PENDING_VALIDATION = 0;
    ISSUED = 1;
    INACTIVE = 2;
    EXPIRED = 3;
    VALIDATION_TIMED_OUT = 4;
    REVOKED = 5;
    FAILED = 6;
}

repeated CertificateStatus CertificateStatuses = 1

message CertificateSummary {
    // <p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
    // Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.
    string DomainName = 2;
}

repeated CertificateSummary CertificateSummaryList = 1

enum CertificateType {
    IMPORTED = 0;
    AMAZON_ISSUED = 1;
}

message DeleteCertificateRequest {
    // <p>String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
}

message DescribeCertificateRequest {
    // <p>The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
}

message DescribeCertificateResponse {
    // Metadata about an ACM certificate.
    CertificateDetail Certificate = 1;
}

repeated string DomainList = 1



enum DomainStatu {
    PENDING_VALIDATION = 0;
    SUCCESS = 1;
    FAILED = 2;
}

message DomainValidation {
    // A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>.
    string DomainName = 1;
    // The domain name that ACM used to send domain validation emails.
    string ValidationDomain = 2;
    // A list of email addresses that ACM used to send domain validation emails.
    array ValidationEmails = 3;
    // The validation status of the domain name.
    DomainStatus ValidationStatus = 4;
}

repeated DomainValidation DomainValidationList = 1

message DomainValidationOption {
    // A fully qualified domain name (FQDN) in the certificate request.
    string DomainName = 1;
    // <p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>
    string ValidationDomain = 2;
}

repeated DomainValidationOption DomainValidationOptionList = 1

enum FailureReason {
    NO_AVAILABLE_CONTACTS = 0;
    ADDITIONAL_VERIFICATION_REQUIRED = 1;
    DOMAIN_NOT_ALLOWED = 2;
    INVALID_PUBLIC_DOMAIN = 3;
    OTHER = 4;
}

message GetCertificateRequest {
    // <p>String that contains a certificate ARN in the following format:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
}

message GetCertificateResponse {
    // String that contains the ACM Certificate represented by the ARN specified at input.
    string Certificate = 1;
    // The certificate chain that contains the root certificate issued by the certificate authority (CA).
    string CertificateChain = 2;
}

message ImportCertificateRequest {
    // <p>The certificate to import. It must meet the following requirements:</p> <ul> <li> <p>Must be PEM-encoded.</p> </li> <li> <p>Must contain a 1024-bit or 2048-bit RSA public key.</p> </li> <li> <p>Must be valid at the time of import. You cannot import a certificate before its validity period begins (the certificate's <code>NotBefore</code> date) or after it expires (the certificate's <code>NotAfter</code> date).</p> </li> </ul>
    string Certificate = 1;
    // The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate, omit this field.
    string CertificateArn = 2;
    // The certificate chain. It must be PEM-encoded.
    string CertificateChain = 3;
    // <p>The private key that matches the public key in the certificate. It must meet the following requirements:</p> <ul> <li> <p>Must be PEM-encoded.</p> </li> <li> <p>Must be unencrypted. You cannot import a private key that is protected by a password or passphrase.</p> </li> </ul>
    string PrivateKey = 4;
}

message ImportCertificateResponse {
    // The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the imported certificate.
    string CertificateArn = 1;
}

repeated string InUseList = 1

message InvalidArnException {
    string message = 1;
}

message InvalidDomainValidationOptionsException {
    string message = 1;
}

message InvalidStateException {
    string message = 1;
}

message InvalidTagException {
    string message = 1;
}

enum KeyAlgorithm {
    RSA_2048 = 0;
    RSA_1024 = 1;
    EC_PRIME256V1 = 2;
}

message LimitExceededException {
    string message = 1;
}

message ListCertificatesRequest {
    // The status or statuses on which to filter the list of ACM Certificates.
    array CertificateStatuses = 1;
    // Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.
    integer MaxItems = 2;
    // Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received.
    string NextToken = 3;
}

message ListCertificatesResponse {
    // A list of ACM Certificates.
    array CertificateSummaryList = 1;
    // When the list is truncated, this value is present and contains the value to use for the <code>NextToken</code> parameter in a subsequent pagination request.
    string NextToken = 2;
}

message ListTagsForCertificateRequest {
    // <p>String that contains the ARN of the ACM Certificate for which you want to list the tags. This has the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
}

message ListTagsForCertificateResponse {
    // The key-value pairs that define the applied tags.
    array Tags = 1;
}

message RemoveTagsFromCertificateRequest {
    // <p>String that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string CertificateArn = 1;
    // The key-value pair that defines the tag to remove.
    array Tags = 2;
}

enum RenewalStatu {
    PENDING_AUTO_RENEWAL = 0;
    PENDING_VALIDATION = 1;
    SUCCESS = 2;
    FAILED = 3;
}

message RenewalSummary {
    // Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.
    array DomainValidationOptions = 1;
    // The status of ACM's <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.
    RenewalStatus RenewalStatus = 2;
}

message RequestCertificateRequest {
    // <p> Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com. </p> <p> The maximum length of a DNS name is 253 octets. The name is made up of multiple labels separated by periods. No label can be longer than 63 octets. Consider the following examples: </p> <p> <code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets. </p> <p> <code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds 63 octets. </p> <p> <code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets. </p>
    string DomainName = 1;
    // The domain name that you want ACM to use to send you emails to validate your ownership of the domain.
    array DomainValidationOptions = 2;
    // Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code> multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.
    string IdempotencyToken = 3;
    // Additional FQDNs to be included in the Subject Alternative Name extension of the ACM Certificate. For example, add the name www.example.net to a certificate for which the <code>DomainName</code> field is www.example.com if users can reach your site by using either name. The maximum number of domain names that you can add to an ACM Certificate is 100. However, the initial limit is 10 domain names. If you need more than 10 names, you must request a limit increase. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>.
    array SubjectAlternativeNames = 4;
}

message RequestCertificateResponse {
    // <p>String that contains the ARN of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    string CertificateArn = 1;
}

message RequestInProgressException {
    string message = 1;
}

message ResendValidationEmailRequest {
    // <p>String that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the <a>RequestCertificate</a> action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request.</p> <p>The ARN must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    string CertificateArn = 1;
    // The fully qualified domain name (FQDN) of the certificate that needs to be validated.
    string Domain = 2;
    // <p>The base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the <code>Domain</code> value or a superdomain of the <code>Domain</code> value. For example, if you requested a certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b> of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses:</p> <ul> <li> <p>admin@subdomain.example.com</p> </li> <li> <p>administrator@subdomain.example.com</p> </li> <li> <p>hostmaster@subdomain.example.com</p> </li> <li> <p>postmaster@subdomain.example.com</p> </li> <li> <p>webmaster@subdomain.example.com</p> </li> </ul>
    string ValidationDomain = 3;
}

message ResourceInUseException {
    string message = 1;
}

message ResourceNotFoundException {
    string message = 1;
}

enum RevocationReason {
    UNSPECIFIED = 0;
    KEY_COMPROMISE = 1;
    CA_COMPROMISE = 2;
    AFFILIATION_CHANGED = 3;
    SUPERCEDED = 4;
    CESSATION_OF_OPERATION = 5;
    CERTIFICATE_HOLD = 6;
    REMOVE_FROM_CRL = 7;
    PRIVILEGE_WITHDRAWN = 8;
    A_A_COMPROMISE = 9;
}

message Tag {
    // The key of the tag.
    string Key = 1;
    // The value of the tag.
    string Value = 2;
}



repeated Tag TagList = 1



message TooManyTagsException {
    string message = 1;
}

repeated string ValidationEmailList = 1

















service AWSCertificateManagerService {
    // <p>Adds one or more tags to an ACM Certificate. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a <code>key</code> and an optional <code>value</code>. You specify the certificate on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair.</p> <p>You can apply a tag to just one certificate if you want to identify a specific characteristic of that certificate, or you can apply the same tag to multiple certificates if you want to filter for a common relationship among those certificates. Similarly, you can apply the same tag to multiple resources if you want to specify a relationship among those resources. For example, you can add the same tag to an ACM Certificate and an Elastic Load Balancing load balancer to indicate that they are both used by the same website. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging ACM Certificates</a>.</p> <p>To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a> action.</p>
    rpc Post(PostRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Deletes an ACM Certificate and its associated private key. If this action succeeds, the certificate no longer appears in the list of ACM Certificates that can be displayed by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a> action. The certificate will not be available for use by other AWS services.</p> <note> <p>You cannot delete an ACM Certificate that is being used by another AWS service. To delete a certificate that is in use, the certificate association must first be removed.</p> </note>
    rpc Post#DeleteCertificate(Post#DeleteCertificateRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteCertificate"
        body: "body"
      };
    }
    // Returns detailed metadata about the specified ACM Certificate.
    rpc Post#DescribeCertificate(Post#DescribeCertificateRequest) returns (DescribeCertificateResponse) {
      option (google.api.http) = {
        post: "//#DescribeCertificate"
        body: "body"
      };
    }
    // <p>Retrieves an ACM Certificate and certificate chain for the certificate specified by an ARN. The chain is an ordered list of certificates that contains the root certificate, intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate and certificate chain are base64 encoded. If you want to decode the certificate chain to see the individual certificate fields, you can use OpenSSL.</p> <note> <p>Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon CloudFront.</p> </note>
    rpc Post#GetCertificate(Post#GetCertificateRequest) returns (GetCertificateResponse) {
      option (google.api.http) = {
        post: "//#GetCertificate"
        body: "body"
      };
    }
    // <p>Imports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">ACM's integrated AWS services</a>.</p> <note> <p>ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for certificates that you import.</p> </note> <p>For more information about importing certificates into ACM, including the differences between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.</p> <p>To import a certificate, you must provide the certificate and the matching private key. When the certificate is not self-signed, you must also provide a certificate chain. You can omit the certificate chain when importing a self-signed certificate.</p> <p>The certificate, private key, and certificate chain must be PEM-encoded. For more information about converting these items to PEM format, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting">Importing Certificates Troubleshooting</a> in the <i>AWS Certificate Manager User Guide</i>.</p> <p>To import a new certificate, omit the <code>CertificateArn</code> field. Include this field only when you want to replace a previously imported certificate.</p> <p>This operation returns the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the imported certificate.</p>
    rpc Post#ImportCertificate(Post#ImportCertificateRequest) returns (ImportCertificateResponse) {
      option (google.api.http) = {
        post: "//#ImportCertificate"
        body: "body"
      };
    }
    // Retrieves a list of ACM Certificates and the domain name for each. You can optionally filter the list to return only the certificates that match the specified status.
    rpc Post#ListCertificates(Post#ListCertificatesRequest) returns (ListCertificatesResponse) {
      option (google.api.http) = {
        post: "//#ListCertificates"
        body: "body"
      };
    }
    // Lists the tags that have been applied to the ACM Certificate. Use the certificate's Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate, use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a> action.
    rpc Post#ListTagsForCertificate(Post#ListTagsForCertificateRequest) returns (ListTagsForCertificateResponse) {
      option (google.api.http) = {
        post: "//#ListTagsForCertificate"
        body: "body"
      };
    }
    // <p>Remove one or more tags from an ACM Certificate. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value.</p> <p>To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view all of the tags that have been applied to a specific ACM Certificate, use the <a>ListTagsForCertificate</a> action.</p>
    rpc Post#RemoveTagsFromCertificate(Post#RemoveTagsFromCertificateRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RemoveTagsFromCertificate"
        body: "body"
      };
    }
    // Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate, you must specify the fully qualified domain name (FQDN) for your site. You can also specify additional FQDNs if users can reach your site by using other names. For each domain name you specify, email is sent to the domain owner to request approval to issue the certificate. After receiving approval from the domain owner, the ACM Certificate is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS Certificate Manager User Guide</a>.
    rpc Post#RequestCertificate(Post#RequestCertificateRequest) returns (RequestCertificateResponse) {
      option (google.api.http) = {
        post: "//#RequestCertificate"
        body: "body"
      };
    }
    // Resends the email that requests domain ownership validation. The domain owner or an authorized representative must approve the ACM Certificate before it can be issued. The certificate can be approved by clicking a link in the mail to navigate to the Amazon certificate approval website and then clicking <b>I Approve</b>. However, the validation email can be blocked by spam filters. Therefore, if you do not receive the original mail, you can request that the mail be resent within 72 hours of requesting the ACM Certificate. If more than 72 hours have elapsed since your original request or since your last attempt to resend validation mail, you must request a new certificate. For more information about setting up your contact email addresses, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure Email for your Domain</a>.
    rpc Post#ResendValidationEmail(Post#ResendValidationEmailRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResendValidationEmail"
        body: "body"
      };
    }
}
