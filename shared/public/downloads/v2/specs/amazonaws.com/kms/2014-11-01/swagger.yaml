swagger: '2.0'
schemes:
  - http
host: kms.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>AWS Key Management Service</fullname> <p>AWS Key Management Service (AWS KMS) is an encryption and key management web service. This guide describes the AWS KMS operations that you can call programmatically. For general information about AWS KMS, see the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/">AWS Key Management Service Developer Guide</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS KMS and other AWS services. For example, the SDKs take care of tasks such as signing requests (see below), managing errors, and retrying requests automatically. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to AWS KMS.</p> <p>Clients must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.</p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed by using an access key ID and a secret access key. We strongly recommend that you <i>do not</i> use your AWS account (root) access key ID and secret key for everyday work with AWS KMS. Instead, use the access key ID and secret access key for an IAM user, or you can use the AWS Security Token Service to generate temporary security credentials that you can use to sign requests.</p> <p>All AWS KMS operations require <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> <p> <b>Logging API Requests</b> </p> <p>AWS KMS supports AWS CloudTrail, a service that logs AWS API calls and related events for your AWS account and delivers them to an Amazon S3 bucket that you specify. By using the information collected by CloudTrail, you can determine what requests were made to AWS KMS, who made the request, when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/">AWS CloudTrail User Guide</a>.</p> <p> <b>Additional Resources</b> </p> <p>For more information about credentials and request signing, see the following:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a> - This topic provides general information about the types of credentials used for accessing AWS.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html">Temporary Security Credentials</a> - This section of the <i>IAM User Guide</i> describes how to create and use temporary security credentials.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a> - This set of topics walks you through the process of signing a request using an access key ID and a secret access key.</p> </li> </ul> <p> <b>Commonly Used APIs</b> </p> <p>Of the APIs discussed in this guide, the following will prove the most useful for most applications. You will likely perform actions other than these, such as creating keys and assigning policies, by using the console.</p> <ul> <li> <p> <a>Encrypt</a> </p> </li> <li> <p> <a>Decrypt</a> </p> </li> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> </ul>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Key Management Service
  version: '2014-11-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kms-2014-11-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: kms
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/kms/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Cancels the deletion of a customer master key (CMK). When this operation is successful, the CMK is set to the <code>Disabled</code> state. To enable a CMK, use <a>EnableKey</a>.</p> <p>For more information about scheduling and canceling deletion of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      operationId: CancelKeyDeletion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CancelKeyDeletionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelKeyDeletionResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#CreateAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a display name for a customer master key. An alias can be used to identify a key and should be unique. The console enforces a one-to-one mapping between the alias and a key. An alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). An alias must start with the word "alias" followed by a forward slash (alias/). An alias that begins with "aws" after the forward slash (alias/aws...) is reserved by Amazon Web Services (AWS).</p> <p>The alias and the key it is mapped to must be in the same AWS account and the same region.</p> <p>To map an alias to a different key, call <a>UpdateAlias</a>.</p>'
      operationId: CreateAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
      responses:
        '200':
          description: Success
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InvalidAliasNameException
          schema:
            $ref: '#/definitions/InvalidAliasNameException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#CreateGrant':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds a grant to a key to specify who can use the key and under what conditions. Grants are alternate permission mechanisms to key policies.</p> <p>For more information about grants, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      operationId: CreateGrant
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateGrantRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGrantResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#CreateKey':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a customer master key (CMK).</p> <p>You can use a CMK to encrypt small amounts of data (4 KiB or less) directly, but CMKs are more commonly used to encrypt data encryption keys (DEKs), which are used to encrypt raw data. For more information about DEKs and the difference between CMKs and DEKs, see the following:</p> <ul> <li> <p>The <a>GenerateDataKey</a> operation</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html">AWS Key Management Service Concepts</a> in the <i>AWS Key Management Service Developer Guide</i> </p> </li> </ul>'
      operationId: CreateKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateKeyResponse'
        '480':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '481':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: TagException
          schema:
            $ref: '#/definitions/TagException'
  '/#Decrypt':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Decrypts ciphertext. Ciphertext is plaintext that has been previously encrypted by using any of the following functions:</p> <ul> <li> <p> <a>GenerateDataKey</a> </p> </li> <li> <p> <a>GenerateDataKeyWithoutPlaintext</a> </p> </li> <li> <p> <a>Encrypt</a> </p> </li> </ul> <p>Note that if a caller has been granted access permissions to all keys (through, for example, IAM user policies that grant <code>Decrypt</code> permission on all resources), then ciphertext encrypted by using keys in other accounts where the key grants access to the caller can be decrypted. To remedy this, we recommend that you do not grant <code>Decrypt</code> access in an IAM user policy. Instead grant <code>Decrypt</code> access only in key policies. If you must grant <code>Decrypt</code> access in an IAM user policy, you should scope the resource to specific keys or to specific trusted accounts.</p>'
      operationId: Decrypt
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DecryptRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DecryptResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: InvalidCiphertextException
          schema:
            $ref: '#/definitions/InvalidCiphertextException'
        '483':
          description: KeyUnavailableException
          schema:
            $ref: '#/definitions/KeyUnavailableException'
        '484':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '485':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '486':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#DeleteAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified alias. To map an alias to a different key, call <a>UpdateAlias</a>.'
      operationId: DeleteAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAliasRequest'
      responses:
        '200':
          description: Success
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '483':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#DeleteImportedKeyMaterial':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes key material that you previously imported and makes the specified customer master key (CMK) unusable. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>When the specified CMK is in the <code>PendingDeletion</code> state, this operation does not change the CMK''s state. Otherwise, it changes the CMK''s state to <code>PendingImport</code>.</p> <p>After you delete key material, you can use <a>ImportKeyMaterial</a> to reimport the same key material into the CMK.</p>'
      operationId: DeleteImportedKeyMaterial
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteImportedKeyMaterialRequest'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#DescribeKey':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides detailed information about the specified customer master key.
      operationId: DescribeKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeKeyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeKeyResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
  '/#DisableKey':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Sets the state of a customer master key (CMK) to disabled, thereby preventing its use for cryptographic operations. For more information about how key state affects the use of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How Key State Affects the Use of a Customer Master Key</a> in the <i>AWS Key Management Service Developer Guide</i>.'
      operationId: DisableKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#DisableKeyRotation':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disables rotation of the specified key.
      operationId: DisableKeyRotation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableKeyRotationRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#EnableKey':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Marks a key as enabled, thereby permitting its use.'
      operationId: EnableKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#EnableKeyRotation':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables rotation of the specified customer master key.
      operationId: EnableKeyRotation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableKeyRotationRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#Encrypt':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Encrypts plaintext into ciphertext by using a customer master key. The <code>Encrypt</code> function has two primary use cases:</p> <ul> <li> <p>You can encrypt up to 4 KB of arbitrary data such as an RSA key, a database password, or other sensitive customer information.</p> </li> <li> <p>If you are moving encrypted data from one region to another, you can use this API to encrypt in the new region the plaintext data key that was used to encrypt the data in the original region. This provides you with an encrypted copy of the data key that can be decrypted in the new region and used there to decrypt the encrypted data.</p> </li> </ul> <p>Unless you are moving encrypted data from one region to another, you don''t use this function to encrypt a generated data key within a region. You retrieve data keys already encrypted by calling the <a>GenerateDataKey</a> or <a>GenerateDataKeyWithoutPlaintext</a> function. Data keys don''t need to be encrypted again by calling <code>Encrypt</code>.</p> <p>If you want to encrypt data locally in your application, you can use the <code>GenerateDataKey</code> function to return a plaintext data encryption key and a copy of the key encrypted under the customer master key (CMK) of your choosing.</p>'
      operationId: Encrypt
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EncryptRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EncryptResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: KeyUnavailableException
          schema:
            $ref: '#/definitions/KeyUnavailableException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: InvalidKeyUsageException
          schema:
            $ref: '#/definitions/InvalidKeyUsageException'
        '485':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '486':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#GenerateDataKey':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a data encryption key that you can use in your application to encrypt data locally.</p> <p>You must specify the customer master key (CMK) under which to generate the data key. You must also specify the length of the data key using either the <code>KeySpec</code> or <code>NumberOfBytes</code> field. You must specify one field or the other, but not both. For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use <code>KeySpec</code>.</p> <p>This operation returns a plaintext copy of the data key in the <code>Plaintext</code> field of the response, and an encrypted copy of the data key in the <code>CiphertextBlob</code> field. The data key is encrypted under the CMK specified in the <code>KeyId</code> field of the request.</p> <p>We recommend that you use the following pattern to encrypt data locally in your application:</p> <ol> <li> <p>Use this operation (<code>GenerateDataKey</code>) to retrieve a data encryption key.</p> </li> <li> <p>Use the plaintext data encryption key (returned in the <code>Plaintext</code> field of the response) to encrypt data locally, then erase the plaintext data key from memory.</p> </li> <li> <p>Store the encrypted data key (returned in the <code>CiphertextBlob</code> field of the response) alongside the locally encrypted data.</p> </li> </ol> <p>To decrypt data locally:</p> <ol> <li> <p>Use the <a>Decrypt</a> operation to decrypt the encrypted data key into a plaintext copy of the data key.</p> </li> <li> <p>Use the plaintext data key to decrypt data locally, then erase the plaintext data key from memory.</p> </li> </ol> <p>To return only an encrypted copy of the data key, use <a>GenerateDataKeyWithoutPlaintext</a>. To return a random byte string that is cryptographically secure, use <a>GenerateRandom</a>.</p> <p>If you use the optional <code>EncryptionContext</code> field, you must store at least enough information to be able to reconstruct the full encryption context when you later send the ciphertext to the <a>Decrypt</a> operation. It is a good practice to choose an encryption context that you can reconstruct on the fly to better secure the ciphertext. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      operationId: GenerateDataKey
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GenerateDataKeyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GenerateDataKeyResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: KeyUnavailableException
          schema:
            $ref: '#/definitions/KeyUnavailableException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: InvalidKeyUsageException
          schema:
            $ref: '#/definitions/InvalidKeyUsageException'
        '485':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '486':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#GenerateDataKeyWithoutPlaintext':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a data encryption key encrypted under a customer master key (CMK). This operation is identical to <a>GenerateDataKey</a> but returns only the encrypted copy of the data key.</p> <p>This operation is useful in a system that has multiple components with different degrees of trust. For example, consider a system that stores encrypted data in containers. Each container stores the encrypted data and an encrypted copy of the data key. One component of the system, called the <i>control plane</i>, creates new containers. When it creates a new container, it uses this operation (<code>GenerateDataKeyWithoutPlaintext</code>) to get an encrypted data key and then stores it in the container. Later, a different component of the system, called the <i>data plane</i>, puts encrypted data into the containers. To do this, it passes the encrypted data key to the <a>Decrypt</a> operation, then uses the returned plaintext data key to encrypt data, and finally stores the encrypted data in the container. In this system, the control plane never sees the plaintext data key.</p>'
      operationId: GenerateDataKeyWithoutPlaintext
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GenerateDataKeyWithoutPlaintextRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GenerateDataKeyWithoutPlaintextResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: KeyUnavailableException
          schema:
            $ref: '#/definitions/KeyUnavailableException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: InvalidKeyUsageException
          schema:
            $ref: '#/definitions/InvalidKeyUsageException'
        '485':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '486':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#GenerateRandom':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a random byte string that is cryptographically secure.</p> <p>For more information about entropy and random number generation, see the <a href="https://d0.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf">AWS Key Management Service Cryptographic Details</a> whitepaper.</p>'
      operationId: GenerateRandom
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GenerateRandomRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GenerateRandomResponse'
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
  '/#GetKeyPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a policy attached to the specified key.
      operationId: GetKeyPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetKeyPolicyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetKeyPolicyResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#GetKeyRotationStatus':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a Boolean value that indicates whether key rotation is enabled for the specified key.
      operationId: GetKeyRotationStatus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetKeyRotationStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetKeyRotationStatusResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#GetParametersForImport':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns the items you need in order to import key material into AWS KMS from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>You must specify the key ID of the customer master key (CMK) into which you will import key material. This CMK''s <code>Origin</code> must be <code>EXTERNAL</code>. You must also specify the wrapping algorithm and type of wrapping key (public key) that you will use to encrypt the key material.</p> <p>This operation returns a public key and an import token. Use the public key to encrypt the key material. Store the import token to send with a subsequent <a>ImportKeyMaterial</a> request. The public key and import token from the same response must be used together. These items are valid for 24 hours, after which they cannot be used for a subsequent <a>ImportKeyMaterial</a> request. To retrieve new ones, send another <code>GetParametersForImport</code> request.</p>'
      operationId: GetParametersForImport
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersForImportRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersForImportResponse'
        '480':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#ImportKeyMaterial':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Imports key material into an AWS KMS customer master key (CMK) from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>You must specify the key ID of the CMK to import the key material into. This CMK''s <code>Origin</code> must be <code>EXTERNAL</code>. You must also send an import token and the encrypted key material. Send the import token that you received in the same <a>GetParametersForImport</a> response that contained the public key that you used to encrypt the key material. You must also specify whether the key material expires and if so, when. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. To use the CMK again, you can reimport the same key material. If you set an expiration date, you can change it only by reimporting the same key material and specifying a new expiration date.</p> <p>When this operation is successful, the specified CMK''s key state changes to <code>Enabled</code>, and you can use the CMK.</p> <p>After you successfully import key material into a CMK, you can reimport the same key material into that CMK, but you cannot import different key material.</p>'
      operationId: ImportKeyMaterial
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImportKeyMaterialRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportKeyMaterialResponse'
        '480':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '486':
          description: InvalidCiphertextException
          schema:
            $ref: '#/definitions/InvalidCiphertextException'
        '487':
          description: IncorrectKeyMaterialException
          schema:
            $ref: '#/definitions/IncorrectKeyMaterialException'
        '488':
          description: ExpiredImportTokenException
          schema:
            $ref: '#/definitions/ExpiredImportTokenException'
        '489':
          description: InvalidImportTokenException
          schema:
            $ref: '#/definitions/InvalidImportTokenException'
  '/#ListAliases':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all of the key aliases in the account.
      operationId: ListAliases
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAliasesRequest'
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesResponse'
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: InvalidMarkerException
          schema:
            $ref: '#/definitions/InvalidMarkerException'
        '482':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
  '/#ListGrants':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: List the grants for a specified key.
      operationId: ListGrants
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGrantsRequest'
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGrantsResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '482':
          description: InvalidMarkerException
          schema:
            $ref: '#/definitions/InvalidMarkerException'
        '483':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#ListKeyPolicies':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of policies attached to a key.
      operationId: ListKeyPolicies
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListKeyPoliciesRequest'
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListKeyPoliciesResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#ListKeys':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the customer master keys.
      operationId: ListKeys
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListKeysRequest'
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListKeysResponse'
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '482':
          description: InvalidMarkerException
          schema:
            $ref: '#/definitions/InvalidMarkerException'
  '/#ListResourceTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a list of all tags for the specified customer master key (CMK).
      operationId: ListResourceTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceTagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceTagsResponse'
        '480':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: InvalidMarkerException
          schema:
            $ref: '#/definitions/InvalidMarkerException'
  '/#ListRetirableGrants':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a list of all grants for which the grant''s <code>RetiringPrincipal</code> matches the one specified.</p> <p>A typical use is to list all grants that you are able to retire. To retire a grant, use <a>RetireGrant</a>.</p>'
      operationId: ListRetirableGrants
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRetirableGrantsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGrantsResponse'
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: InvalidMarkerException
          schema:
            $ref: '#/definitions/InvalidMarkerException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
  '/#PutKeyPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Attaches a key policy to the specified customer master key (CMK).</p> <p>For more information about key policies, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key Policies</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      operationId: PutKeyPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutKeyPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '487':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#ReEncrypt':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Encrypts data on the server side with a new customer master key (CMK) without exposing the plaintext of the data on the client side. The data is first decrypted and then reencrypted. You can also use this operation to change the encryption context of a ciphertext.</p> <p>Unlike other operations, <code>ReEncrypt</code> is authorized twice, once as <code>ReEncryptFrom</code> on the source CMK and once as <code>ReEncryptTo</code> on the destination CMK. We recommend that you include the <code>"kms:ReEncrypt*"</code> permission in your <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key policies</a> to permit reencryption from or to the CMK. This permission is automatically included in the key policy when you create a CMK through the console, but you must include it manually when you create a CMK programmatically or when you set a key policy with the <a>PutKeyPolicy</a> operation.</p>'
      operationId: ReEncrypt
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ReEncryptRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReEncryptResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DisabledException
          schema:
            $ref: '#/definitions/DisabledException'
        '482':
          description: InvalidCiphertextException
          schema:
            $ref: '#/definitions/InvalidCiphertextException'
        '483':
          description: KeyUnavailableException
          schema:
            $ref: '#/definitions/KeyUnavailableException'
        '484':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '485':
          description: InvalidKeyUsageException
          schema:
            $ref: '#/definitions/InvalidKeyUsageException'
        '486':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '487':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '488':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#RetireGrant':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retires a grant. To clean up, you can retire a grant when you''re done using it. You should revoke a grant when you intend to actively deny operations that depend on it. The following are permitted to call this API:</p> <ul> <li> <p>The AWS account (root user) under which the grant was created</p> </li> <li> <p>The <code>RetiringPrincipal</code>, if present in the grant</p> </li> <li> <p>The <code>GranteePrincipal</code>, if <code>RetireGrant</code> is an operation specified in the grant</p> </li> </ul> <p>You must identify the grant to retire by its grant token or by a combination of the grant ID and the Amazon Resource Name (ARN) of the customer master key (CMK). A grant token is a unique variable-length base64-encoded string. A grant ID is a 64 character unique identifier of a grant. The <a>CreateGrant</a> operation returns both.</p>'
      operationId: RetireGrant
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RetireGrantRequest'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidGrantTokenException
          schema:
            $ref: '#/definitions/InvalidGrantTokenException'
        '481':
          description: InvalidGrantIdException
          schema:
            $ref: '#/definitions/InvalidGrantIdException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#RevokeGrant':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Revokes a grant. You can revoke a grant to actively deny operations that depend on it.
      operationId: RevokeGrant
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RevokeGrantRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: InvalidGrantIdException
          schema:
            $ref: '#/definitions/InvalidGrantIdException'
        '484':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '485':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#ScheduleKeyDeletion':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Schedules the deletion of a customer master key (CMK). You may provide a waiting period, specified in days, before deletion occurs. If you do not provide a waiting period, the default period of 30 days is used. When this operation is successful, the state of the CMK changes to <code>PendingDeletion</code>. Before the waiting period ends, you can use <a>CancelKeyDeletion</a> to cancel the deletion of the CMK. After the waiting period ends, AWS KMS deletes the CMK and all AWS KMS data associated with it, including all aliases that refer to it.</p> <important> <p>Deleting a CMK is a destructive and potentially dangerous operation. When a CMK is deleted, all data that was encrypted under the CMK is rendered unrecoverable. To restrict the use of a CMK without deleting it, use <a>DisableKey</a>.</p> </important> <p>For more information about scheduling a CMK for deletion, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      operationId: ScheduleKeyDeletion
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleKeyDeletionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleKeyDeletionResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#TagResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds or overwrites one or more tags for the specified customer master key (CMK). </p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.</p> <p>You cannot use the same tag key more than once per CMK. For example, consider a CMK with one tag whose tag key is <code>Purpose</code> and tag value is <code>Test</code>. If you send a <code>TagResource</code> request for this CMK with a tag key of <code>Purpose</code> and a tag value of <code>Prod</code>, it does not create a second tag. Instead, the original tag is overwritten with the new tag value.</p>'
      operationId: TagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      responses:
        '200':
          description: Success
        '480':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: TagException
          schema:
            $ref: '#/definitions/TagException'
  '/#UntagResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified tag or tags from the specified customer master key (CMK). </p> <p>To remove a tag, you specify the tag key for each tag to remove. You do not specify the tag value. To overwrite the tag value for an existing tag, use <a>TagResource</a>.</p>'
      operationId: UntagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      responses:
        '200':
          description: Success
        '480':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '484':
          description: TagException
          schema:
            $ref: '#/definitions/TagException'
  '/#UpdateAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Updates an alias to map it to a different key.</p> <p>An alias is not a property of a key. Therefore, an alias can be mapped to and unmapped from an existing key without changing the properties of the key.</p> <p>An alias name can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). An alias must start with the word "alias" followed by a forward slash (alias/). An alias that begins with "aws" after the forward slash (alias/aws...) is reserved by Amazon Web Services (AWS).</p> <p>The alias and the key it is mapped to must be in the same AWS account and the same region.</p>'
      operationId: UpdateAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAliasRequest'
      responses:
        '200':
          description: Success
        '480':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '483':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
  '/#UpdateKeyDescription':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the description of a customer master key (CMK).
      operationId: UpdateKeyDescription
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateKeyDescriptionRequest'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: DependencyTimeoutException
          schema:
            $ref: '#/definitions/DependencyTimeoutException'
        '483':
          description: KMSInternalException
          schema:
            $ref: '#/definitions/KMSInternalException'
        '484':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
definitions:
  AWSAccountIdType:
    type: string
  AlgorithmSpec:
    enum:
      - RSAES_PKCS1_V1_5
      - RSAES_OAEP_SHA_1
      - RSAES_OAEP_SHA_256
    type: string
  AliasList:
    items:
      $ref: '#/definitions/AliasListEntry'
    type: array
  AliasListEntry:
    description: Contains information about an alias.
    properties:
      AliasArn:
        $ref: '#/definitions/ArnType'
        description: String that contains the key ARN.
      AliasName:
        $ref: '#/definitions/AliasNameType'
        description: String that contains the alias.
      TargetKeyId:
        $ref: '#/definitions/KeyIdType'
        description: String that contains the key identifier referred to by the alias.
    type: object
  AliasNameType:
    maxLength: 256
    minLength: 1
    pattern: '^[a-zA-Z0-9:/_-]+$'
    type: string
  AlreadyExistsException:
    description: The request was rejected because it attempted to create a resource that already exists.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  ArnType:
    maxLength: 2048
    minLength: 20
    type: string
  BooleanType:
    type: boolean
  CancelKeyDeletionRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The unique identifier for the customer master key (CMK) for which to cancel deletion.</p> <p>To specify this value, use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> </ul> <p>To obtain the unique key ID and key ARN for a given CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</p>'
    required:
      - KeyId
    type: object
  CancelKeyDeletionResponse:
    example:
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The unique identifier of the master key for which deletion is canceled.
    type: object
  CiphertextType:
    maxLength: 6144
    minLength: 1
    type: string
  CreateAliasRequest:
    example:
      AliasName: alias/ExampleAlias
      TargetKeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      AliasName:
        $ref: '#/definitions/AliasNameType'
        description: String that contains the display name. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/AWS" are reserved.
      TargetKeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>An identifier of the key for which you are creating the alias. This value cannot be another alias but can be a globally unique identifier or a fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - AliasName
      - TargetKeyId
    type: object
  CreateGrantRequest:
    example:
      GranteePrincipal: 'arn:aws:iam::111122223333:role/ExampleRole'
      KeyId: 'arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab'
      Operations:
        - Encrypt
        - Decrypt
    properties:
      Constraints:
        $ref: '#/definitions/GrantConstraints'
        description: 'A structure that you can use to allow certain operations in the grant only when the desired encryption context is present. For more information about encryption context, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      GranteePrincipal:
        $ref: '#/definitions/PrincipalIdType'
        description: '<p>The principal that is given permission to perform the operations that the grant permits.</p> <p>To specify the principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, IAM roles, federated users, and assumed role users. For examples of the ARN syntax to use for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS General Reference</i>.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The unique identifier for the customer master key (CMK) that the grant applies to.</p> <p>To specify this value, use the globally unique key ID or the Amazon Resource Name (ARN) of the key. Examples:</p> <ul> <li> <p>Globally unique key ID: 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Key ARN: arn:aws:kms:us-west-2:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> </ul>'
      Name:
        $ref: '#/definitions/GrantNameType'
        description: '<p>A friendly name for identifying the grant. Use this value to prevent unintended creation of duplicate grants when retrying this request.</p> <p>When this value is absent, all <code>CreateGrant</code> requests result in a new grant with a unique <code>GrantId</code> even if all the supplied parameters are identical. This can result in unintended duplicates when you retry the <code>CreateGrant</code> request.</p> <p>When this value is present, you can retry a <code>CreateGrant</code> request with identical parameters; if the grant already exists, the original <code>GrantId</code> is returned without creating a new grant. Note that the returned grant token is unique with every <code>CreateGrant</code> request, even when a duplicate <code>GrantId</code> is returned. All grant tokens obtained in this way can be used interchangeably.</p>'
      Operations:
        $ref: '#/definitions/GrantOperationList'
        description: A list of operations that the grant permits.
      RetiringPrincipal:
        $ref: '#/definitions/PrincipalIdType'
        description: '<p>The principal that is given permission to retire the grant by using <a>RetireGrant</a> operation.</p> <p>To specify the principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and assumed role users. For examples of the ARN syntax to use for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>AWS General Reference</i>.</p>'
    required:
      - KeyId
      - GranteePrincipal
    type: object
  CreateGrantResponse:
    example:
      GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
      GrantToken: AQpAM2RhZTk1MGMyNTk2ZmZmMzEyYWVhOWViN2I1MWM4Mzc0MWFiYjc0ZDE1ODkyNGFlNTIzODZhMzgyZjBlNGY3NiKIAgEBAgB4Pa6VDCWW__MSrqnre1HIN0Grt00ViSSuUjhqOC8OT3YAAADfMIHcBgkqhkiG9w0BBwaggc4wgcsCAQAwgcUGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMmqLyBTAegIn9XlK5AgEQgIGXZQjkBcl1dykDdqZBUQ6L1OfUivQy7JVYO2-ZJP7m6f1g8GzV47HX5phdtONAP7K_HQIflcgpkoCqd_fUnE114mSmiagWkbQ5sqAVV3ov-VeqgrvMe5ZFEWLMSluvBAqdjHEdMIkHMlhlj4ENZbzBfo9Wxk8b8SnwP4kc4gGivedzFXo-dwN8fxjjq_ZZ9JFOj2ijIbj5FyogDCN0drOfi8RORSEuCEmPvjFRMFAwcmwFkN2NPp89amA
    properties:
      GrantId:
        $ref: '#/definitions/GrantIdType'
        description: <p>The unique identifier for the grant.</p> <p>You can use the <code>GrantId</code> in a subsequent <a>RetireGrant</a> or <a>RevokeGrant</a> operation.</p>
      GrantToken:
        $ref: '#/definitions/GrantTokenType'
        description: '<p>The grant token.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
    type: object
  CreateKeyRequest:
    example:
      Tags:
        - TagKey: CreatedBy
          TagValue: ExampleUser
    properties:
      BypassPolicyLockoutSafetyCheck:
        $ref: '#/definitions/BooleanType'
        description: '<p>A flag to indicate whether to bypass the key policy lockout safety check.</p> <important> <p>Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.</p> <p>For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </important> <p>Use this parameter only when you include a policy in the request and you intend to prevent the principal that is making the request from making a subsequent <a>PutKeyPolicy</a> request on the CMK.</p> <p>The default value is false.</p>'
      Description:
        $ref: '#/definitions/DescriptionType'
        description: <p>A description of the CMK.</p> <p>Use a description that helps you decide whether the CMK is appropriate for a task.</p>
      KeyUsage:
        $ref: '#/definitions/KeyUsageType'
        description: <p>The intended use of the CMK.</p> <p>You can use CMKs only for symmetric encryption and decryption.</p>
      Origin:
        $ref: '#/definitions/OriginType'
        description: '<p>The source of the CMK''s key material.</p> <p>The default is <code>AWS_KMS</code>, which means AWS KMS creates the key material. When this parameter is set to <code>EXTERNAL</code>, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>The CMK''s <code>Origin</code> is immutable and is set when the CMK is created.</p>'
      Policy:
        $ref: '#/definitions/PolicyType'
        description: '<p>The key policy to attach to the CMK.</p> <p>If you specify a policy and do not set <code>BypassPolicyLockoutSafetyCheck</code> to true, the policy must meet the following criteria:</p> <ul> <li> <p>It must allow the principal that is making the <code>CreateKey</code> request to make a subsequent <a>PutKeyPolicy</a> request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </li> <li> <p>The principals that are specified in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before specifying the new principal in a key policy because the new principal might not immediately be visible to AWS KMS. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes that I make are not always immediately visible</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <p>If you do not specify a policy, AWS KMS attaches a default key policy to the CMK. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default Key Policy</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>The policy size limit is 32 KiB (32768 bytes).</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p>One or more tags. Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.</p> <p>Use this parameter to tag the CMK when it is created. Alternately, you can omit this parameter and instead tag the CMK after it is created using <a>TagResource</a>.</p>'
    type: object
  CreateKeyResponse:
    example:
      KeyMetadata:
        AWSAccountId: '111122223333'
        Arn: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
        CreationDate: '2017-01-09T12:00:07-08:00'
        Description: ''
        Enabled: true
        KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
        KeyState: Enabled
        KeyUsage: ENCRYPT_DECRYPT
        Origin: AWS_KMS
    properties:
      KeyMetadata:
        $ref: '#/definitions/KeyMetadata'
        description: Metadata associated with the CMK.
    type: object
  DataKeySpec:
    enum:
      - AES_256
      - AES_128
    type: string
  DateType:
    format: date-time
    type: string
  DecryptRequest:
    example:
      CiphertextBlob: <binary data>
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: Ciphertext to be decrypted. The blob includes metadata.
      EncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: 'The encryption context. If this was specified in the <a>Encrypt</a> function, it must be specified here or the decryption operation will fail. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a>.'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
    required:
      - CiphertextBlob
    type: object
  DecryptResponse:
    example:
      KeyId: 'arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
      Plaintext: <binary data>
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: ARN of the key used to perform the decryption. This value is returned if no errors are encountered during the operation.
      Plaintext:
        $ref: '#/definitions/PlaintextType'
        description: Decrypted plaintext data. This value may not be returned if the customer master key is not available or if you didn't have permission to use it.
    type: object
  DeleteAliasRequest:
    example:
      AliasName: alias/ExampleAlias
    properties:
      AliasName:
        $ref: '#/definitions/AliasNameType'
        description: The alias to be deleted. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/AWS" are reserved.
    required:
      - AliasName
    type: object
  DeleteImportedKeyMaterialRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The identifier of the CMK whose key material to delete. The CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p> <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
    required:
      - KeyId
    type: object
  DependencyTimeoutException:
    description: The system timed out while trying to fulfill the request. The request can be retried.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  DescribeKeyRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>'
    required:
      - KeyId
    type: object
  DescribeKeyResponse:
    example:
      KeyMetadata:
        AWSAccountId: '111122223333'
        Arn: 'arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
        CreationDate: '2015-10-12T11:45:07-07:00'
        Description: ''
        Enabled: true
        KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
        KeyState: Enabled
        KeyUsage: ENCRYPT_DECRYPT
        Origin: AWS_KMS
    properties:
      KeyMetadata:
        $ref: '#/definitions/KeyMetadata'
        description: Metadata associated with the key.
    type: object
  DescriptionType:
    maxLength: 8192
    minLength: 0
    type: string
  DisableKeyRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK.</p> <p>Use the CMK''s unique identifier or its Amazon Resource Name (ARN). For example:</p> <ul> <li> <p>Unique ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> </ul>'
    required:
      - KeyId
    type: object
  DisableKeyRotationRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
    type: object
  DisabledException:
    description: The request was rejected because the specified CMK is not enabled.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  EnableKeyRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
    type: object
  EnableKeyRotationRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
    type: object
  EncryptRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      Plaintext: <binary data>
    properties:
      EncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: 'Name-value pair that specifies the encryption context to be used for authenticated encryption. If used here, the same value must be supplied to the <code>Decrypt</code> API or decryption will fail. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a>.'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>'
      Plaintext:
        $ref: '#/definitions/PlaintextType'
        description: Data to be encrypted.
    required:
      - KeyId
      - Plaintext
    type: object
  EncryptResponse:
    example:
      CiphertextBlob: <binary data>
      KeyId: 'arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: 'The encrypted plaintext. If you are using the CLI, the value is Base64 encoded. Otherwise, it is not encoded.'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The ID of the key used during encryption.
    type: object
  EncryptionContextKey:
    type: string
  EncryptionContextType:
    items:
      properties:
        key:
          $ref: '#/definitions/EncryptionContextKey'
        value:
          $ref: '#/definitions/EncryptionContextValue'
      type: object
    type: array
  EncryptionContextValue:
    type: string
  ErrorMessageType:
    type: string
  ExpirationModelType:
    enum:
      - KEY_MATERIAL_EXPIRES
      - KEY_MATERIAL_DOES_NOT_EXPIRE
    type: string
  ExpiredImportTokenException:
    description: 'The request was rejected because the provided import token is expired. Use <a>GetParametersForImport</a> to retrieve a new import token and public key, use the new public key to encrypt the key material, and then try the request again.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  GenerateDataKeyRequest:
    example:
      KeyId: alias/ExampleAlias
      KeySpec: AES_256
    properties:
      EncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: '<p>A set of key-value pairs that represents additional authenticated data.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The identifier of the CMK under which to generate and encrypt the data encryption key.</p> <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN) of the CMK, or the alias name or ARN of an alias that refers to the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>CMK ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul>'
      KeySpec:
        $ref: '#/definitions/DataKeySpec'
        description: 'The length of the data encryption key. Use <code>AES_128</code> to generate a 128-bit symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.'
      NumberOfBytes:
        $ref: '#/definitions/NumberOfBytesType'
        description: 'The length of the data encryption key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use the <code>KeySpec</code> field instead of this one.'
    required:
      - KeyId
    type: object
  GenerateDataKeyResponse:
    example:
      CiphertextBlob: <binary data>
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
      Plaintext: <binary data>
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: The encrypted data encryption key.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The identifier of the CMK under which the data encryption key was generated and encrypted.
      Plaintext:
        $ref: '#/definitions/PlaintextType'
        description: 'The data encryption key. Use this data key for local encryption and decryption, then remove it from memory as soon as possible.'
    type: object
  GenerateDataKeyWithoutPlaintextRequest:
    example:
      KeyId: alias/ExampleAlias
      KeySpec: AES_256
    properties:
      EncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: '<p>A set of key-value pairs that represents additional authenticated data.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The identifier of the CMK under which to generate and encrypt the data encryption key.</p> <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN) of the CMK, or the alias name or ARN of an alias that refers to the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>CMK ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul>'
      KeySpec:
        $ref: '#/definitions/DataKeySpec'
        description: 'The length of the data encryption key. Use <code>AES_128</code> to generate a 128-bit symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.'
      NumberOfBytes:
        $ref: '#/definitions/NumberOfBytesType'
        description: 'The length of the data encryption key in bytes. For example, use the value 64 to generate a 512-bit data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric keys), we recommend that you use the <code>KeySpec</code> field instead of this one.'
    required:
      - KeyId
    type: object
  GenerateDataKeyWithoutPlaintextResponse:
    example:
      CiphertextBlob: <binary data>
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: The encrypted data encryption key.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The identifier of the CMK under which the data encryption key was generated and encrypted.
    type: object
  GenerateRandomRequest:
    example:
      NumberOfBytes: 32
    properties:
      NumberOfBytes:
        $ref: '#/definitions/NumberOfBytesType'
        description: The length of the byte string.
    type: object
  GenerateRandomResponse:
    example:
      Plaintext: <binary data>
    properties:
      Plaintext:
        $ref: '#/definitions/PlaintextType'
        description: The random byte string.
    type: object
  GetKeyPolicyRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      PolicyName: default
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
      PolicyName:
        $ref: '#/definitions/PolicyNameType'
        description: 'String that contains the name of the policy. Currently, this must be "default". Policy names can be discovered by calling <a>ListKeyPolicies</a>.'
    required:
      - KeyId
      - PolicyName
    type: object
  GetKeyPolicyResponse:
    example:
      Policy: |-
        {
          "Version" : "2012-10-17",
          "Id" : "key-default-1",
          "Statement" : [ {
            "Sid" : "Enable IAM User Permissions",
            "Effect" : "Allow",
            "Principal" : {
              "AWS" : "arn:aws:iam::111122223333:root"
            },
            "Action" : "kms:*",
            "Resource" : "*"
          } ]
        }
    properties:
      Policy:
        $ref: '#/definitions/PolicyType'
        description: A policy document in JSON format.
    type: object
  GetKeyRotationStatusRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
    type: object
  GetKeyRotationStatusResponse:
    example:
      KeyRotationEnabled: true
    properties:
      KeyRotationEnabled:
        $ref: '#/definitions/BooleanType'
        description: A Boolean value that specifies whether key rotation is enabled.
    type: object
  GetParametersForImportRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      WrappingAlgorithm: RSAES_OAEP_SHA_1
      WrappingKeySpec: RSA_2048
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The identifier of the CMK into which you will import key material. The CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p> <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      WrappingAlgorithm:
        $ref: '#/definitions/AlgorithmSpec'
        description: 'The algorithm you will use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html">Encrypt the Key Material</a> in the <i>AWS Key Management Service Developer Guide</i>.'
      WrappingKeySpec:
        $ref: '#/definitions/WrappingKeySpec'
        description: The type of wrapping key (public key) to return in the response. Only 2048-bit RSA public keys are supported.
    required:
      - KeyId
      - WrappingAlgorithm
      - WrappingKeySpec
    type: object
  GetParametersForImportResponse:
    example:
      ImportToken: <binary data>
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
      ParametersValidTo: '2016-12-01T14:52:17-08:00'
      PublicKey: <binary data>
    properties:
      ImportToken:
        $ref: '#/definitions/CiphertextType'
        description: The import token to send in a subsequent <a>ImportKeyMaterial</a> request.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The identifier of the CMK to use in a subsequent <a>ImportKeyMaterial</a> request. This is the same CMK specified in the <code>GetParametersForImport</code> request.
      ParametersValidTo:
        $ref: '#/definitions/DateType'
        description: 'The time at which the import token and public key are no longer valid. After this time, you cannot use them to make an <a>ImportKeyMaterial</a> request and you must send another <code>GetParametersForImport</code> request to retrieve new ones.'
      PublicKey:
        $ref: '#/definitions/PlaintextType'
        description: The public key to use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>.
    type: object
  GrantConstraints:
    description: '<p>A structure that you can use to allow certain operations in the grant only when the desired encryption context is present. For more information about encryption context, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html">Encryption Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p> <p>Grant constraints apply only to operations that accept encryption context as input. For example, the <code> <a>DescribeKey</a> </code> operation does not accept encryption context as input. A grant that allows the <code>DescribeKey</code> operation does so regardless of the grant constraints. In constrast, the <code> <a>Encrypt</a> </code> operation accepts encryption context as input. A grant that allows the <code>Encrypt</code> operation does so only when the encryption context of the <code>Encrypt</code> operation satisfies the grant constraints.</p>'
    properties:
      EncryptionContextEquals:
        $ref: '#/definitions/EncryptionContextType'
        description: 'A list of key-value pairs that must be present in the encryption context of certain subsequent operations that the grant allows. When certain subsequent operations allowed by the grant include encryption context that matches this list, the grant allows the operation. Otherwise, the grant does not allow the operation.'
      EncryptionContextSubset:
        $ref: '#/definitions/EncryptionContextType'
        description: 'A list of key-value pairs, all of which must be present in the encryption context of certain subsequent operations that the grant allows. When certain subsequent operations allowed by the grant include encryption context that matches this list or is a superset of this list, the grant allows the operation. Otherwise, the grant does not allow the operation.'
    type: object
  GrantIdType:
    maxLength: 128
    minLength: 1
    type: string
  GrantList:
    items:
      $ref: '#/definitions/GrantListEntry'
    type: array
  GrantListEntry:
    description: Contains information about an entry in a list of grants.
    properties:
      Constraints:
        $ref: '#/definitions/GrantConstraints'
        description: A list of key-value pairs that must be present in the encryption context of certain subsequent operations that the grant allows.
      CreationDate:
        $ref: '#/definitions/DateType'
        description: The date and time when the grant was created.
      GrantId:
        $ref: '#/definitions/GrantIdType'
        description: The unique identifier for the grant.
      GranteePrincipal:
        $ref: '#/definitions/PrincipalIdType'
        description: The principal that receives the grant's permissions.
      IssuingAccount:
        $ref: '#/definitions/PrincipalIdType'
        description: The AWS account under which the grant was issued.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The unique identifier for the customer master key (CMK) to which the grant applies.
      Name:
        $ref: '#/definitions/GrantNameType'
        description: 'The friendly name that identifies the grant. If a name was provided in the <a>CreateGrant</a> request, that name is returned. Otherwise this value is null.'
      Operations:
        $ref: '#/definitions/GrantOperationList'
        description: The list of operations permitted by the grant.
      RetiringPrincipal:
        $ref: '#/definitions/PrincipalIdType'
        description: The principal that can retire the grant.
    type: object
  GrantNameType:
    maxLength: 256
    minLength: 1
    pattern: '^[a-zA-Z0-9:/_-]+$'
    type: string
  GrantOperation:
    enum:
      - Decrypt
      - Encrypt
      - GenerateDataKey
      - GenerateDataKeyWithoutPlaintext
      - ReEncryptFrom
      - ReEncryptTo
      - CreateGrant
      - RetireGrant
      - DescribeKey
    type: string
  GrantOperationList:
    items:
      $ref: '#/definitions/GrantOperation'
    type: array
  GrantTokenList:
    items:
      $ref: '#/definitions/GrantTokenType'
    maxItems: 10
    minItems: 0
    type: array
  GrantTokenType:
    maxLength: 8192
    minLength: 1
    type: string
  ImportKeyMaterialRequest:
    example:
      EncryptedKeyMaterial: <binary data>
      ExpirationModel: KEY_MATERIAL_DOES_NOT_EXPIRE
      ImportToken: <binary data>
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      EncryptedKeyMaterial:
        $ref: '#/definitions/CiphertextType'
        description: 'The encrypted key material to import. It must be encrypted with the public key that you received in the response to a previous <a>GetParametersForImport</a> request, using the wrapping algorithm that you specified in that request.'
      ExpirationModel:
        $ref: '#/definitions/ExpirationModelType'
        description: 'Specifies whether the key material expires. The default is <code>KEY_MATERIAL_EXPIRES</code>, in which case you must include the <code>ValidTo</code> parameter. When this parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>, you must omit the <code>ValidTo</code> parameter.'
      ImportToken:
        $ref: '#/definitions/CiphertextType'
        description: The import token that you received in the response to a previous <a>GetParametersForImport</a> request. It must be from the same response that contained the public key that you used to encrypt the key material.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The identifier of the CMK to import the key material into. The CMK''s <code>Origin</code> must be <code>EXTERNAL</code>.</p> <p>A valid identifier is the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      ValidTo:
        $ref: '#/definitions/DateType'
        description: 'The time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. You must omit this parameter when the <code>ExpirationModel</code> parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>. Otherwise it is required.'
    required:
      - KeyId
      - ImportToken
      - EncryptedKeyMaterial
    type: object
  ImportKeyMaterialResponse:
    properties: {}
    type: object
  IncorrectKeyMaterialException:
    description: The request was rejected because the provided key material is invalid or is not the same key material that was previously imported into this customer master key (CMK).
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidAliasNameException:
    description: The request was rejected because the specified alias name is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidArnException:
    description: The request was rejected because a specified ARN was not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidCiphertextException:
    description: The request was rejected because the specified ciphertext has been corrupted or is otherwise invalid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidGrantIdException:
    description: The request was rejected because the specified <code>GrantId</code> is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidGrantTokenException:
    description: The request was rejected because the specified grant token is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidImportTokenException:
    description: The request was rejected because the provided import token is invalid or is associated with a different customer master key (CMK).
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidKeyUsageException:
    description: The request was rejected because the specified <code>KeySpec</code> value is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  InvalidMarkerException:
    description: The request was rejected because the marker that specifies where pagination should next begin is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  KMSInternalException:
    description: The request was rejected because an internal exception occurred. The request can be retried.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  KMSInvalidStateException:
    description: '<p>The request was rejected because the state of the specified resource is not valid for this request.</p> <p>For more information about how key state affects the use of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  KeyIdType:
    maxLength: 2048
    minLength: 1
    type: string
  KeyList:
    items:
      $ref: '#/definitions/KeyListEntry'
    type: array
  KeyListEntry:
    description: Contains information about each entry in the key list.
    properties:
      KeyArn:
        $ref: '#/definitions/ArnType'
        description: ARN of the key.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: Unique identifier of the key.
    type: object
  KeyManagerType:
    enum:
      - AWS
      - CUSTOMER
    type: string
  KeyMetadata:
    description: <p>Contains metadata about a customer master key (CMK).</p> <p>This data type is used as a response element for the <a>CreateKey</a> and <a>DescribeKey</a> operations.</p>
    properties:
      AWSAccountId:
        $ref: '#/definitions/AWSAccountIdType'
        description: The twelve-digit account ID of the AWS account that owns the CMK.
      Arn:
        $ref: '#/definitions/ArnType'
        description: 'The Amazon Resource Name (ARN) of the CMK. For examples, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">AWS Key Management Service (AWS KMS)</a> in the Example ARNs section of the <i>AWS General Reference</i>.'
      CreationDate:
        $ref: '#/definitions/DateType'
        description: The date and time when the CMK was created.
      DeletionDate:
        $ref: '#/definitions/DateType'
        description: 'The date and time after which AWS KMS deletes the CMK. This value is present only when <code>KeyState</code> is <code>PendingDeletion</code>, otherwise this value is omitted.'
      Description:
        $ref: '#/definitions/DescriptionType'
        description: The description of the CMK.
      Enabled:
        $ref: '#/definitions/BooleanType'
        description: 'Specifies whether the CMK is enabled. When <code>KeyState</code> is <code>Enabled</code> this value is true, otherwise it is false.'
      ExpirationModel:
        $ref: '#/definitions/ExpirationModelType'
        description: 'Specifies whether the CMK''s key material expires. This value is present only when <code>Origin</code> is <code>EXTERNAL</code>, otherwise this value is omitted.'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The globally unique identifier for the CMK.
      KeyManager:
        $ref: '#/definitions/KeyManagerType'
        description: 'The CMK''s manager. CMKs are either customer-managed or AWS-managed. For more information about the difference, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">Customer Master Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.'
      KeyState:
        $ref: '#/definitions/KeyState'
        description: '<p>The state of the CMK.</p> <p>For more information about how key state affects the use of a CMK, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How Key State Affects the Use of a Customer Master Key</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      KeyUsage:
        $ref: '#/definitions/KeyUsageType'
        description: 'The cryptographic operations for which you can use the CMK. Currently the only allowed value is <code>ENCRYPT_DECRYPT</code>, which means you can use the CMK for the <a>Encrypt</a> and <a>Decrypt</a> operations.'
      Origin:
        $ref: '#/definitions/OriginType'
        description: 'The source of the CMK''s key material. When this value is <code>AWS_KMS</code>, AWS KMS created the key material. When this value is <code>EXTERNAL</code>, the key material was imported from your existing key management infrastructure or the CMK lacks key material.'
      ValidTo:
        $ref: '#/definitions/DateType'
        description: 'The time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. This value is present only for CMKs whose <code>Origin</code> is <code>EXTERNAL</code> and whose <code>ExpirationModel</code> is <code>KEY_MATERIAL_EXPIRES</code>, otherwise this value is omitted.'
    required:
      - KeyId
    type: object
  KeyState:
    enum:
      - Enabled
      - Disabled
      - PendingDeletion
      - PendingImport
    type: string
  KeyUnavailableException:
    description: The request was rejected because the specified CMK was not available. The request can be retried.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  KeyUsageType:
    enum:
      - ENCRYPT_DECRYPT
    type: string
  LimitExceededException:
    description: 'The request was rejected because a limit was exceeded. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/limits.html">Limits</a> in the <i>AWS Key Management Service Developer Guide</i>.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  LimitType:
    maximum: 1000
    minimum: 1
    type: integer
  ListAliasesRequest:
    properties:
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.
    type: object
  ListAliasesResponse:
    example:
      Aliases:
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/aws/acm'
          AliasName: alias/aws/acm
          TargetKeyId: da03f6f7-d279-427a-9cae-de48d07e5b66
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/aws/ebs'
          AliasName: alias/aws/ebs
          TargetKeyId: 25a217e7-7170-4b8c-8bf6-045ea5f70e5b
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/aws/rds'
          AliasName: alias/aws/rds
          TargetKeyId: 7ec3104e-c3f2-4b5c-bf42-bfc4772c6685
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/aws/redshift'
          AliasName: alias/aws/redshift
          TargetKeyId: 08f7a25a-69e2-4fb5-8f10-393db27326fa
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/aws/s3'
          AliasName: alias/aws/s3
          TargetKeyId: d2b0f1a3-580d-4f79-b836-bc983be8cfa5
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/example1'
          AliasName: alias/example1
          TargetKeyId: 4da1e216-62d0-46c5-a7c0-5f3a3d2f8046
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/example2'
          AliasName: alias/example2
          TargetKeyId: f32fef59-2cc2-445b-8573-2d73328acbee
        - AliasArn: 'arn:aws:kms:us-east-2:111122223333:alias/example3'
          AliasName: alias/example3
          TargetKeyId: 1374ef38-d34e-4d5f-b2c9-4e0daee38855
      Truncated: false
    properties:
      Aliases:
        $ref: '#/definitions/AliasList'
        description: A list of key aliases in the user's account.
      NextMarker:
        $ref: '#/definitions/MarkerType'
        description: 'When <code>Truncated</code> is true, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent request.'
      Truncated:
        $ref: '#/definitions/BooleanType'
        description: 'A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this response to the <code>Marker</code> parameter in a subsequent request.'
    type: object
  ListGrantsRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.
    required:
      - KeyId
    type: object
  ListGrantsResponse:
    example:
      Grants:
        - CreationDate: '2016-12-07T11:09:35-08:00'
          GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
          GranteePrincipal: 'arn:aws:iam::111122223333:role/ExampleRole'
          IssuingAccount: 'arn:aws:iam::444455556666:root'
          KeyId: 'arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab'
          Operations:
            - Decrypt
            - Encrypt
          RetiringPrincipal: 'arn:aws:iam::111122223333:role/ExampleRole'
      Truncated: false
    properties:
      Grants:
        $ref: '#/definitions/GrantList'
        description: A list of grants.
      NextMarker:
        $ref: '#/definitions/MarkerType'
        description: 'When <code>Truncated</code> is true, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent request.'
      Truncated:
        $ref: '#/definitions/BooleanType'
        description: 'A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this response to the <code>Marker</code> parameter in a subsequent request.'
    type: object
  ListKeyPoliciesRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key (CMK). You can use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 1000, inclusive. If you do not include a value, it defaults to 100.</p> <p>Currently only 1 policy can be attached to a key.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.
    required:
      - KeyId
    type: object
  ListKeyPoliciesResponse:
    example:
      PolicyNames:
        - default
      Truncated: false
    properties:
      NextMarker:
        $ref: '#/definitions/MarkerType'
        description: 'When <code>Truncated</code> is true, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent request.'
      PolicyNames:
        $ref: '#/definitions/PolicyNameList'
        description: 'A list of policy names. Currently, there is only one policy and it is named "Default".'
      Truncated:
        $ref: '#/definitions/BooleanType'
        description: 'A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this response to the <code>Marker</code> parameter in a subsequent request.'
    type: object
  ListKeysRequest:
    properties:
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 1000, inclusive. If you do not include a value, it defaults to 100.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.
    type: object
  ListKeysResponse:
    example:
      Keys:
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/0d990263-018e-4e65-a703-eff731de951e'
          KeyId: 0d990263-018e-4e65-a703-eff731de951e
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/144be297-0ae1-44ac-9c8f-93cd8c82f841'
          KeyId: 144be297-0ae1-44ac-9c8f-93cd8c82f841
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/21184251-b765-428e-b852-2c7353e72571'
          KeyId: 21184251-b765-428e-b852-2c7353e72571
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/214fe92f-5b03-4ae1-b350-db2a45dbe10c'
          KeyId: 214fe92f-5b03-4ae1-b350-db2a45dbe10c
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/339963f2-e523-49d3-af24-a0fe752aa458'
          KeyId: 339963f2-e523-49d3-af24-a0fe752aa458
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/b776a44b-df37-4438-9be4-a27494e4271a'
          KeyId: b776a44b-df37-4438-9be4-a27494e4271a
        - KeyArn: 'arn:aws:kms:us-east-2:111122223333:key/deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb'
          KeyId: deaf6c9e-cf2c-46a6-bf6d-0b6d487cffbb
      Truncated: false
    properties:
      Keys:
        $ref: '#/definitions/KeyList'
        description: A list of keys.
      NextMarker:
        $ref: '#/definitions/MarkerType'
        description: 'When <code>Truncated</code> is true, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent request.'
      Truncated:
        $ref: '#/definitions/BooleanType'
        description: 'A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this response to the <code>Marker</code> parameter in a subsequent request.'
    type: object
  ListResourceTagsRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK whose tags you are listing. You can use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 50, inclusive. If you do not include a value, it defaults to 50.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: <p>Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.</p> <p>Do not attempt to construct this value. Use only the value of <code>NextMarker</code> from the truncated response you just received.</p>
    required:
      - KeyId
    type: object
  ListResourceTagsResponse:
    example:
      Tags:
        - TagKey: CostCenter
          TagValue: '87654'
        - TagKey: CreatedBy
          TagValue: ExampleUser
        - TagKey: Purpose
          TagValue: Test
      Truncated: false
    properties:
      NextMarker:
        $ref: '#/definitions/MarkerType'
        description: '<p>When <code>Truncated</code> is true, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent request.</p> <p>Do not assume or infer any information from this value.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags. Each tag consists of a tag key and a tag value.
      Truncated:
        $ref: '#/definitions/BooleanType'
        description: 'A flag that indicates whether there are more items in the list. When this value is true, the list in this response is truncated. To retrieve more items, pass the value of the <code>NextMarker</code> element in this response to the <code>Marker</code> parameter in a subsequent request.'
    type: object
  ListRetirableGrantsRequest:
    example:
      RetiringPrincipal: 'arn:aws:iam::111122223333:role/ExampleRole'
    properties:
      Limit:
        $ref: '#/definitions/LimitType'
        description: '<p>Use this parameter to specify the maximum number of items to return. When this value is present, AWS KMS does not return more than the specified number of items, but it might return fewer.</p> <p>This value is optional. If you include a value, it must be between 1 and 100, inclusive. If you do not include a value, it defaults to 50.</p>'
      Marker:
        $ref: '#/definitions/MarkerType'
        description: Use this parameter in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextMarker</code> from the truncated response you just received.
      RetiringPrincipal:
        $ref: '#/definitions/PrincipalIdType'
        description: '<p>The retiring principal for which to list grants.</p> <p>To specify the retiring principal, use the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and assumed role users. For examples of the ARN syntax for specifying a principal, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the <i>Amazon Web Services General Reference</i>.</p>'
    required:
      - RetiringPrincipal
    type: object
  MalformedPolicyDocumentException:
    description: The request was rejected because the specified policy is not syntactically or semantically correct.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  MarkerType:
    maxLength: 320
    minLength: 1
    pattern: '[\u0020-\u00FF]*'
    type: string
  NotFoundException:
    description: The request was rejected because the specified entity or resource could not be found.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  NumberOfBytesType:
    maximum: 1024
    minimum: 1
    type: integer
  OriginType:
    enum:
      - AWS_KMS
      - EXTERNAL
    type: string
  PendingWindowInDaysType:
    maximum: 365
    minimum: 1
    type: integer
  PlaintextType:
    format: password
    maxLength: 4096
    minLength: 1
    type: string
  PolicyNameList:
    items:
      $ref: '#/definitions/PolicyNameType'
    type: array
  PolicyNameType:
    maxLength: 128
    minLength: 1
    pattern: '[\w]+'
    type: string
  PolicyType:
    maxLength: 131072
    minLength: 1
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    type: string
  PrincipalIdType:
    maxLength: 256
    minLength: 1
    type: string
  PutKeyPolicyRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      Policy: |
        {
            "Version": "2012-10-17",
            "Id": "custom-policy-2016-12-07",
            "Statement": [
                {
                    "Sid": "Enable IAM User Permissions",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:aws:iam::111122223333:root"
                    },
                    "Action": "kms:*",
                    "Resource": "*"
                },
                {
                    "Sid": "Allow access for Key Administrators",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": [
                            "arn:aws:iam::111122223333:user/ExampleAdminUser",
                            "arn:aws:iam::111122223333:role/ExampleAdminRole"
                        ]
                    },
                    "Action": [
                        "kms:Create*",
                        "kms:Describe*",
                        "kms:Enable*",
                        "kms:List*",
                        "kms:Put*",
                        "kms:Update*",
                        "kms:Revoke*",
                        "kms:Disable*",
                        "kms:Get*",
                        "kms:Delete*",
                        "kms:ScheduleKeyDeletion",
                        "kms:CancelKeyDeletion"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "Allow use of the key",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:aws:iam::111122223333:role/ExamplePowerUserRole"
                    },
                    "Action": [
                        "kms:Encrypt",
                        "kms:Decrypt",
                        "kms:ReEncrypt*",
                        "kms:GenerateDataKey*",
                        "kms:DescribeKey"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "Allow attachment of persistent resources",
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:aws:iam::111122223333:role/ExamplePowerUserRole"
                    },
                    "Action": [
                        "kms:CreateGrant",
                        "kms:ListGrants",
                        "kms:RevokeGrant"
                    ],
                    "Resource": "*",
                    "Condition": {
                        "Bool": {
                            "kms:GrantIsForAWSResource": "true"
                        }
                    }
                }
            ]
        }
      PolicyName: default
    properties:
      BypassPolicyLockoutSafetyCheck:
        $ref: '#/definitions/BooleanType'
        description: '<p>A flag to indicate whether to bypass the key policy lockout safety check.</p> <important> <p>Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately.</p> <p>For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </important> <p>Use this parameter only when you intend to prevent the principal that is making the request from making a subsequent <code>PutKeyPolicy</code> request on the CMK.</p> <p>The default value is false.</p>'
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK.</p> <p>Use the CMK''s unique identifier or its Amazon Resource Name (ARN). For example:</p> <ul> <li> <p>Unique ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> </ul>'
      Policy:
        $ref: '#/definitions/PolicyType'
        description: '<p>The key policy to attach to the CMK.</p> <p>If you do not set <code>BypassPolicyLockoutSafetyCheck</code> to true, the policy must meet the following criteria:</p> <ul> <li> <p>It must allow the principal that is making the <code>PutKeyPolicy</code> request to make a subsequent <code>PutKeyPolicy</code> request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>AWS Key Management Service Developer Guide</i>.</p> </li> <li> <p>The principals that are specified in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before specifying the new principal in a key policy because the new principal might not immediately be visible to AWS KMS. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes that I make are not always immediately visible</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <p>The policy size limit is 32 KiB (32768 bytes).</p>'
      PolicyName:
        $ref: '#/definitions/PolicyNameType'
        description: <p>The name of the key policy.</p> <p>This value must be <code>default</code>.</p>
    required:
      - KeyId
      - PolicyName
      - Policy
    type: object
  ReEncryptRequest:
    example:
      CiphertextBlob: <binary data>
      DestinationKeyId: 0987dcba-09fe-87dc-65ba-ab0987654321
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: Ciphertext of the data to reencrypt.
      DestinationEncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: Encryption context to use when the data is reencrypted.
      DestinationKeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK to use to reencrypt the data. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias ARN Example - arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Alias Name Example - alias/MyAliasName</p> </li> </ul>'
      GrantTokens:
        $ref: '#/definitions/GrantTokenList'
        description: '<p>A list of grant tokens.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      SourceEncryptionContext:
        $ref: '#/definitions/EncryptionContextType'
        description: Encryption context used to encrypt and decrypt the data specified in the <code>CiphertextBlob</code> parameter.
    required:
      - CiphertextBlob
      - DestinationKeyId
    type: object
  ReEncryptResponse:
    example:
      CiphertextBlob: <binary data>
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/0987dcba-09fe-87dc-65ba-ab0987654321'
      SourceKeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      CiphertextBlob:
        $ref: '#/definitions/CiphertextType'
        description: The reencrypted data.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: Unique identifier of the CMK used to reencrypt the data.
      SourceKeyId:
        $ref: '#/definitions/KeyIdType'
        description: Unique identifier of the CMK used to originally encrypt the data.
    type: object
  RetireGrantRequest:
    example:
      GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
      KeyId: 'arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      GrantId:
        $ref: '#/definitions/GrantIdType'
        description: <p>Unique identifier of the grant to retire. The grant ID is returned in the response to a <code>CreateGrant</code> operation.</p> <ul> <li> <p>Grant ID Example - 0123456789012345678901234567890123456789012345678901234567890123</p> </li> </ul>
      GrantToken:
        $ref: '#/definitions/GrantTokenType'
        description: Token that identifies the grant to be retired.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The Amazon Resource Name of the CMK associated with the grant. Example:</p> <ul> <li> <p>arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> </ul>'
    type: object
  RevokeGrantRequest:
    example:
      GrantId: 0c237476b39f8bc44e45212e08498fbe3151305030726c0590dd8d3e9f3d6a60
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      GrantId:
        $ref: '#/definitions/GrantIdType'
        description: Identifier of the grant to be revoked.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the customer master key associated with the grant. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
      - GrantId
    type: object
  ScheduleKeyDeletionRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      PendingWindowInDays: 7
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>The unique identifier for the customer master key (CMK) to delete.</p> <p>To specify this value, use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: 1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> <li> <p>Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</p> </li> </ul> <p>To obtain the unique key ID and key ARN for a given CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</p>'
      PendingWindowInDays:
        $ref: '#/definitions/PendingWindowInDaysType'
        description: '<p>The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the customer master key (CMK).</p> <p>This value is optional. If you include a value, it must be between 7 and 30, inclusive. If you do not include a value, it defaults to 30.</p>'
    required:
      - KeyId
    type: object
  ScheduleKeyDeletionResponse:
    example:
      DeletionDate: '2016-12-17T16:00:00-08:00'
      KeyId: 'arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    properties:
      DeletionDate:
        $ref: '#/definitions/DateType'
        description: The date and time after which AWS KMS deletes the customer master key (CMK).
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: The unique identifier of the customer master key (CMK) for which deletion is scheduled.
    type: object
  Tag:
    description: 'A key-value pair. A tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.'
    properties:
      TagKey:
        $ref: '#/definitions/TagKeyType'
        description: The key of the tag.
      TagValue:
        $ref: '#/definitions/TagValueType'
        description: The value of the tag.
    required:
      - TagKey
      - TagValue
    type: object
  TagException:
    description: The request was rejected because one or more tags are not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  TagKeyList:
    items:
      $ref: '#/definitions/TagKeyType'
    type: array
  TagKeyType:
    maxLength: 128
    minLength: 1
    type: string
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagResourceRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      Tags:
        - TagKey: Purpose
          TagValue: Test
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK you are tagging. You can use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      Tags:
        $ref: '#/definitions/TagList'
        description: One or more tags. Each tag consists of a tag key and a tag value.
    required:
      - KeyId
      - Tags
    type: object
  TagValueType:
    maxLength: 256
    minLength: 0
    type: string
  UnsupportedOperationException:
    description: The request was rejected because a specified parameter is not supported or a specified resource is not valid for this operation.
    properties:
      message:
        $ref: '#/definitions/ErrorMessageType'
    type: object
  UntagResourceRequest:
    example:
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
      TagKeys:
        - Purpose
        - CostCenter
    properties:
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK from which you are removing tags. You can use the unique key ID or the Amazon Resource Name (ARN) of the CMK. Examples:</p> <ul> <li> <p>Unique key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> </ul>'
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: 'One or more tag keys. Specify only the tag keys, not the tag values.'
    required:
      - KeyId
      - TagKeys
    type: object
  UpdateAliasRequest:
    example:
      AliasName: alias/ExampleAlias
      TargetKeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      AliasName:
        $ref: '#/definitions/AliasNameType'
        description: String that contains the name of the alias to be modified. The name must start with the word "alias" followed by a forward slash (alias/). Aliases that begin with "alias/aws" are reserved.
      TargetKeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>Unique identifier of the customer master key to be mapped to the alias. This value can be a globally unique identifier or the fully specified ARN of a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul> <p>You can call <a>ListAliases</a> to verify that the alias is mapped to the correct <code>TargetKeyId</code>.</p>'
    required:
      - AliasName
      - TargetKeyId
    type: object
  UpdateKeyDescriptionRequest:
    example:
      Description: Example description that indicates the intended use of this CMK.
      KeyId: 1234abcd-12ab-34cd-56ef-1234567890ab
    properties:
      Description:
        $ref: '#/definitions/DescriptionType'
        description: New description for the CMK.
      KeyId:
        $ref: '#/definitions/KeyIdType'
        description: '<p>A unique identifier for the CMK. This value can be a globally unique identifier or the fully specified ARN to a key.</p> <ul> <li> <p>Key ARN Example - arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</p> </li> <li> <p>Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012</p> </li> </ul>'
    required:
      - KeyId
      - Description
    type: object
  WrappingKeySpec:
    enum:
      - RSA_2048
    type: string
