swagger: '2.0'
schemes:
  - http
host: events.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<p>Amazon CloudWatch Events helps you to respond to state changes in your AWS resources. When your resources change state, they automatically send events into an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a pre-determined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an AWS Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events">Amazon CloudWatch Events User Guide</a>.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon CloudWatch Events
  version: '2015-10-07'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/events-2015-10-07.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: events
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/events/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the specified rule.</p> <p>You must remove all targets from a rule using <a>RemoveTargets</a> before you can delete the rule.</p> <p>When you delete a rule, incoming events might continue to match to the deleted rule. Please allow a short period of time for changes to take effect.</p>'
      operationId: DeleteRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRuleRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#DescribeEventBus':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Displays the external AWS accounts that are permitted to write events to your account using your account''s event bus, and the associated policy. To enable your account to receive events from other accounts, use <a>PutPermission</a>.'
      operationId: DescribeEventBus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventBusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventBusResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#DescribeRule':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the specified rule.
      operationId: DescribeRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRuleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#DisableRule':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Disables the specified rule. A disabled rule won''t match any events, and won''t self-trigger if it has a schedule expression.</p> <p>When you disable a rule, incoming events might continue to match to the disabled rule. Please allow a short period of time for changes to take effect.</p>'
      operationId: DisableRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableRuleRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#EnableRule':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Enables the specified rule. If the rule does not exist, the operation fails.</p> <p>When you enable a rule, incoming events might not immediately start matching to a newly enabled rule. Please allow a short period of time for changes to take effect.</p>'
      operationId: EnableRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableRuleRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#ListRuleNamesByTarget':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the rules for the specified target. You can see which of the rules in Amazon CloudWatch Events can invoke a specific target in your account.
      operationId: ListRuleNamesByTarget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRuleNamesByTargetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRuleNamesByTargetResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#ListRules':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists your Amazon CloudWatch Events rules. You can either list all the rules or you can provide a prefix to match to the rule names.
      operationId: ListRules
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRulesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRulesResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#ListTargetsByRule':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the targets assigned to the specified rule.
      operationId: ListTargetsByRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTargetsByRuleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsByRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#PutEvents':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
      operationId: PutEvents
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutEventsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutEventsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#PutPermission':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Running <code>PutPermission</code> permits the specified AWS account to put events to your account''s default <i>event bus</i>. CloudWatch Events rules in your account are triggered by these events arriving to your default event bus. </p> <p>For another account to send events to your account, that external account must have a CloudWatch Events rule with your account''s default event bus as a target.</p> <p>To enable multiple AWS accounts to put events to your default event bus, run <code>PutPermission</code> once for each of these accounts.</p> <p>The permission policy on the default event bus cannot exceed 10KB in size.</p>'
      operationId: PutPermission
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutPermissionRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#PutRule':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates or updates the specified rule. Rules are enabled by default, or based on value of the state. You can disable a rule using <a>DisableRule</a>.</p> <p>When you create or update a rule, incoming events might not immediately start matching to new or updated rules. Please allow a short period of time for changes to take effect.</p> <p>A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression, in which case the rule triggers on matching events as well as on a schedule.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      operationId: PutRule
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRuleRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRuleResponse'
        '480':
          description: InvalidEventPatternException
          schema:
            $ref: '#/definitions/InvalidEventPatternException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#PutTargets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.</p> <p>Targets are the resources that are invoked when a rule is triggered.</p> <p>You can configure the following as targets for CloudWatch Events:</p> <ul> <li> <p>EC2 instances</p> </li> <li> <p>AWS Lambda functions</p> </li> <li> <p>Streams in Amazon Kinesis Streams</p> </li> <li> <p>Delivery streams in Amazon Kinesis Firehose</p> </li> <li> <p>Amazon ECS tasks</p> </li> <li> <p>AWS Step Functions state machines</p> </li> <li> <p>Pipelines in Amazon Code Pipeline</p> </li> <li> <p>Amazon Inspector assessment templates</p> </li> <li> <p>Amazon SNS topics</p> </li> <li> <p>Amazon SQS queues</p> </li> <li> <p>The default event bus of another AWS account</p> </li> </ul> <p>Note that creating rules with built-in targets is supported only in the AWS Management Console.</p> <p>For some target types, <code>PutTargets</code> provides target-specific parameters. If the target is an Amazon Kinesis stream, you can optionally specify which shard the event goes to by using the <code>KinesisParameters</code> argument. To invoke a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code> field.</p> <p>To be able to make API calls against the resources that you own, Amazon CloudWatch Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources, CloudWatch Events relies on resource-based policies. For EC2 instances, Amazon Kinesis streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles that you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p> <p>If another AWS account is in the same region and has granted you permission (using <code>PutPermission</code>), you can send events to that account by setting that account''s event bus as a target of the rules in your account. To send the matched events to the other account, specify that account''s event bus as the <code>Arn</code> when you run <code>PutTargets</code>. If your account sends events to another account, your account is charged for each sent event. Each event sent to antoher account is charged as a custom event. The account receiving the event is not charged. For more information on pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>For more information about enabling cross-account events, see <a>PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b> and <b>InputTransformer</b> are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:</p> <ul> <li> <p>If none of the following arguments are specified for a target, then the entire event is passed to the target in JSON form (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).</p> </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then the matched event is overridden with this constant.</p> </li> <li> <p>If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).</p> </li> <li> <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.</p> </li> </ul> <p>When you specify <code>Input</code>, <code>InputPath</code>, or <code>InputTransformer</code>, you must use JSON dot notation, not bracket notation.</p> <p>When you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Please allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      operationId: PutTargets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutTargetsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTargetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#RemovePermission':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Revokes the permission of another AWS account to be able to put events to your default event bus. Specify the account to revoke by the <code>StatementId</code> value that you associated with the account when you granted it permission with <code>PutPermission</code>. You can find the <code>StatementId</code> by using <a>DescribeEventBus</a>.
      operationId: RemovePermission
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemovePermissionRequest'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
  '/#RemoveTargets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified targets from the specified rule. When the rule is triggered, those targets are no longer be invoked.</p> <p>When you remove a target, when the associated rule triggers, removed targets might continue to be invoked. Please allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      operationId: RemoveTargets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTargetsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTargetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
  '/#TestEventPattern':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Tests whether the specified event pattern matches the provided event.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      operationId: TestEventPattern
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TestEventPatternRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestEventPatternResponse'
        '480':
          description: InvalidEventPatternException
          schema:
            $ref: '#/definitions/InvalidEventPatternException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
definitions:
  Action:
    maxLength: 64
    minLength: 1
    pattern: 'events:[a-zA-Z]+'
    type: string
  Arn:
    maxLength: 1600
    minLength: 1
    type: string
  Boolean:
    type: boolean
  ConcurrentModificationException:
    description: There is concurrent modification on a rule or target.
    properties: {}
    type: object
  DeleteRuleRequest:
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Name
    type: object
  DescribeEventBusRequest:
    properties: {}
    type: object
  DescribeEventBusResponse:
    properties:
      Arn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the account permitted to write events to the current account.
      Name:
        $ref: '#/definitions/String'
        description: 'The name of the event bus. Currently, this is always <code>default</code>.'
      Policy:
        $ref: '#/definitions/String'
        description: The policy that enables the external account to send events to your account.
    type: object
  DescribeRuleRequest:
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Name
    type: object
  DescribeRuleResponse:
    properties:
      Arn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Description:
        $ref: '#/definitions/RuleDescription'
        description: The description of the rule.
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role associated with the rule.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".'
      State:
        $ref: '#/definitions/RuleState'
        description: Specifies whether the rule is enabled or disabled.
    type: object
  DisableRuleRequest:
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Name
    type: object
  EcsParameters:
    description: The custom parameters to be used when the target is an Amazon ECS cluster.
    properties:
      TaskCount:
        $ref: '#/definitions/LimitMin1'
        description: The number of tasks to create based on the <code>TaskDefinition</code>. The default is one.
      TaskDefinitionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the task definition to use if the event target is an Amazon ECS cluster. '
    required:
      - TaskDefinitionArn
    type: object
  EnableRuleRequest:
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Name
    type: object
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
  EventId:
    type: string
  EventPattern:
    maxLength: 2048
    type: string
  EventResource:
    type: string
  EventResourceList:
    items:
      $ref: '#/definitions/EventResource'
    type: array
  EventTime:
    format: date-time
    type: string
  InputTransformer:
    description: Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.
    properties:
      InputPathsMap:
        $ref: '#/definitions/TransformerPaths'
        description: 'Map of JSON paths to be extracted from the event. These are key-value pairs, where each value is a JSON path. You must use JSON dot notation, not bracket notation.'
      InputTemplate:
        $ref: '#/definitions/TransformerInput'
        description: Input template where you can use the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target.
    required:
      - InputTemplate
    type: object
  InputTransformerPathKey:
    maxLength: 256
    minLength: 1
    pattern: '[A-Za-z0-9\_\-]+'
    type: string
  Integer:
    type: integer
  InternalException:
    description: This exception occurs due to unexpected causes.
    properties: {}
    type: object
  InvalidEventPatternException:
    description: The event pattern is not valid.
    properties: {}
    type: object
  KinesisParameters:
    description: 'This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.'
    properties:
      PartitionKeyPath:
        $ref: '#/definitions/TargetPartitionKeyPath'
        description: 'The JSON path to be extracted from the event and used as the partition key. For more information, see <a href="http://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.'
    required:
      - PartitionKeyPath
    type: object
  LimitExceededException:
    description: You tried to create more rules or add more targets to a rule than is allowed.
    properties: {}
    type: object
  LimitMax100:
    maximum: 100
    minimum: 1
    type: integer
  LimitMin1:
    minimum: 1
    type: integer
  ListRuleNamesByTargetRequest:
    properties:
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
      TargetArn:
        $ref: '#/definitions/TargetArn'
        description: The Amazon Resource Name (ARN) of the target resource.
    required:
      - TargetArn
    type: object
  ListRuleNamesByTargetResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
      RuleNames:
        $ref: '#/definitions/RuleNameList'
        description: The names of the rules that can invoke the given target.
    type: object
  ListRulesRequest:
    properties:
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
      NamePrefix:
        $ref: '#/definitions/RuleName'
        description: The prefix matching the rule name.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
    type: object
  ListRulesResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
      Rules:
        $ref: '#/definitions/RuleResponseList'
        description: The rules that match the specified criteria.
    type: object
  ListTargetsByRuleRequest:
    properties:
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Rule
    type: object
  ListTargetsByRuleResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
      Targets:
        $ref: '#/definitions/TargetList'
        description: The targets assigned to the rule.
    type: object
  NextToken:
    maxLength: 2048
    minLength: 1
    type: string
  PolicyLengthExceededException:
    description: 'The event bus policy is too long. For more information, see the limits.'
    properties: {}
    type: object
  Principal:
    maxLength: 12
    minLength: 1
    pattern: '(\d{12}|\*)'
    type: string
  PutEventsRequest:
    properties:
      Entries:
        $ref: '#/definitions/PutEventsRequestEntryList'
        description: 'The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on.'
    required:
      - Entries
    type: object
  PutEventsRequestEntry:
    description: Represents an event to be submitted.
    properties:
      Detail:
        $ref: '#/definitions/String'
        description: 'In the JSON sense, an object containing fields, which may also contain nested subobjects. No constraints are imposed on its contents.'
      DetailType:
        $ref: '#/definitions/String'
        description: Free-form string used to decide what fields to expect in the event detail.
      Resources:
        $ref: '#/definitions/EventResourceList'
        description: 'AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.'
      Source:
        $ref: '#/definitions/String'
        description: The source of the event.
      Time:
        $ref: '#/definitions/EventTime'
        description: 'The timestamp of the event, per <a href="https://www.rfc-editor.org/rfc/rfc3339.txt">RFC3339</a>. If no timestamp is provided, the timestamp of the <a>PutEvents</a> call is used.'
    type: object
  PutEventsRequestEntryList:
    items:
      $ref: '#/definitions/PutEventsRequestEntry'
    maxItems: 10
    minItems: 1
    type: array
  PutEventsResponse:
    properties:
      Entries:
        $ref: '#/definitions/PutEventsResultEntryList'
        description: 'The successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.'
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
    type: object
  PutEventsResultEntry:
    description: Represents an event that failed to be submitted.
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The error code that indicates why the event submission failed.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the event submission failed.
      EventId:
        $ref: '#/definitions/EventId'
        description: The ID of the event.
    type: object
  PutEventsResultEntryList:
    items:
      $ref: '#/definitions/PutEventsResultEntry'
    type: array
  PutPermissionRequest:
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that you are enabling the other account to perform. Currently, this must be <code>events:PutEvents</code>.'
      Principal:
        $ref: '#/definitions/Principal'
        description: '<p>The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify "*" to permit any account to put events to your default event bus.</p> <p>If you specify "*", avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an <code>account</code> field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.</p>'
      StatementId:
        $ref: '#/definitions/StatementId'
        description: 'An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this <code>StatementId</code> when you run <a>RemovePermission</a>.'
    required:
      - Action
      - Principal
      - StatementId
    type: object
  PutRuleRequest:
    properties:
      Description:
        $ref: '#/definitions/RuleDescription'
        description: A description of the rule.
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule that you are creating or updating.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role associated with the rule.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)" or "rate(5 minutes)".'
      State:
        $ref: '#/definitions/RuleState'
        description: Indicates whether the rule is enabled or disabled.
    required:
      - Name
    type: object
  PutRuleResponse:
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
    type: object
  PutTargetsRequest:
    properties:
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      Targets:
        $ref: '#/definitions/TargetList'
        description: The targets to update or add to the rule.
    required:
      - Rule
      - Targets
    type: object
  PutTargetsResponse:
    properties:
      FailedEntries:
        $ref: '#/definitions/PutTargetsResultEntryList'
        description: The failed target entries.
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
    type: object
  PutTargetsResultEntry:
    description: Represents a target that failed to be added to a rule.
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the target addition failed.
      TargetId:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
    type: object
  PutTargetsResultEntryList:
    items:
      $ref: '#/definitions/PutTargetsResultEntry'
    type: array
  RemovePermissionRequest:
    properties:
      StatementId:
        $ref: '#/definitions/StatementId'
        description: The statement ID corresponding to the account that is no longer allowed to put events to the default event bus.
    required:
      - StatementId
    type: object
  RemoveTargetsRequest:
    properties:
      Ids:
        $ref: '#/definitions/TargetIdList'
        description: The IDs of the targets to remove from the rule.
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
    required:
      - Rule
      - Ids
    type: object
  RemoveTargetsResponse:
    properties:
      FailedEntries:
        $ref: '#/definitions/RemoveTargetsResultEntryList'
        description: The failed target entries.
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
    type: object
  RemoveTargetsResultEntry:
    description: Represents a target that failed to be removed from a rule.
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the target removal failed.
      TargetId:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
    type: object
  RemoveTargetsResultEntryList:
    items:
      $ref: '#/definitions/RemoveTargetsResultEntry'
    type: array
  ResourceNotFoundException:
    description: An entity that you specified does not exist.
    properties: {}
    type: object
  RoleArn:
    maxLength: 1600
    minLength: 1
    type: string
  Rule:
    description: Contains information about a rule in Amazon CloudWatch Events.
    properties:
      Arn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Description:
        $ref: '#/definitions/RuleDescription'
        description: The description of the rule.
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern of the rule. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the role that is used for target invocation.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".'
      State:
        $ref: '#/definitions/RuleState'
        description: The state of the rule.
    type: object
  RuleArn:
    maxLength: 1600
    minLength: 1
    type: string
  RuleDescription:
    maxLength: 512
    type: string
  RuleName:
    maxLength: 64
    minLength: 1
    pattern: '[\.\-_A-Za-z0-9]+'
    type: string
  RuleNameList:
    items:
      $ref: '#/definitions/RuleName'
    type: array
  RuleResponseList:
    items:
      $ref: '#/definitions/Rule'
    type: array
  RuleState:
    enum:
      - ENABLED
      - DISABLED
    type: string
  RunCommandParameters:
    description: 'This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. '
    properties:
      RunCommandTargets:
        $ref: '#/definitions/RunCommandTargets'
        description: 'Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.'
    required:
      - RunCommandTargets
    type: object
  RunCommandTarget:
    description: 'Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.'
    properties:
      Key:
        $ref: '#/definitions/RunCommandTargetKey'
        description: 'Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.'
      Values:
        $ref: '#/definitions/RunCommandTargetValues'
        description: 'If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs.'
    required:
      - Key
      - Values
    type: object
  RunCommandTargetKey:
    maxLength: 128
    minLength: 1
    pattern: '^[\p{L}\p{Z}\p{N}_.:/=+\-@]*$'
    type: string
  RunCommandTargetValue:
    maxLength: 256
    minLength: 1
    type: string
  RunCommandTargetValues:
    items:
      $ref: '#/definitions/RunCommandTargetValue'
    maxItems: 50
    minItems: 1
    type: array
  RunCommandTargets:
    items:
      $ref: '#/definitions/RunCommandTarget'
    maxItems: 5
    minItems: 1
    type: array
  ScheduleExpression:
    maxLength: 256
    type: string
  StatementId:
    maxLength: 64
    minLength: 1
    pattern: '[a-zA-Z0-9-_]+'
    type: string
  String:
    type: string
  Target:
    description: 'Targets are the resources to be invoked when a rule is triggered. Target types include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks, AWS Step Functions state machines, Run Command, and built-in targets.'
    properties:
      Arn:
        $ref: '#/definitions/TargetArn'
        description: The Amazon Resource Name (ARN) of the target.
      EcsParameters:
        $ref: '#/definitions/EcsParameters'
        description: 'Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>.'
      Id:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
      Input:
        $ref: '#/definitions/TargetInput'
        description: 'Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. You must use JSON dot notation, not bracket notation. For more information, see <a href="http://www.rfc-editor.org/rfc/rfc7159.txt">The JavaScript Object Notation (JSON) Data Interchange Format</a>.'
      InputPath:
        $ref: '#/definitions/TargetInputPath'
        description: 'The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href="http://goessner.net/articles/JsonPath/">JSONPath</a>.'
      InputTransformer:
        $ref: '#/definitions/InputTransformer'
        description: Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target.
      KinesisParameters:
        $ref: '#/definitions/KinesisParameters'
        description: 'The custom parameter you can use to control shard assignment, when the target is an Amazon Kinesis stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target.'
      RunCommandParameters:
        $ref: '#/definitions/RunCommandParameters'
        description: Parameters used when you are using the rule to invoke Amazon EC2 Run Command.
    required:
      - Id
      - Arn
    type: object
  TargetArn:
    maxLength: 1600
    minLength: 1
    type: string
  TargetId:
    maxLength: 64
    minLength: 1
    pattern: '[\.\-_A-Za-z0-9]+'
    type: string
  TargetIdList:
    items:
      $ref: '#/definitions/TargetId'
    maxItems: 100
    minItems: 1
    type: array
  TargetInput:
    maxLength: 8192
    type: string
  TargetInputPath:
    maxLength: 256
    type: string
  TargetList:
    items:
      $ref: '#/definitions/Target'
    maxItems: 100
    minItems: 1
    type: array
  TargetPartitionKeyPath:
    maxLength: 256
    type: string
  TestEventPatternRequest:
    properties:
      Event:
        $ref: '#/definitions/String'
        description: 'The event, in JSON format, to test against the event pattern.'
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
    required:
      - EventPattern
      - Event
    type: object
  TestEventPatternResponse:
    properties:
      Result:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the event matches the event pattern.
    type: object
  TransformerInput:
    maxLength: 8192
    minLength: 1
    type: string
  TransformerPaths:
    items:
      properties:
        key:
          $ref: '#/definitions/InputTransformerPathKey'
        value:
          $ref: '#/definitions/TargetInputPath'
      type: object
    maxItems: 10
    type: array
