syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package amazonelasticsearchservice;

message Get20150101DomainRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post20150101EsDomainRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateElasticsearchDomainRequest body = 10;
}

message Post20150101EsDomainInfoRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeElasticsearchDomainsRequest body = 10;
}

message Get20150101EsDomainDomainNameRequest {
    string Action = 1;
    string DomainName = 2;
    string Version = 3;
    string X_Amz_Algorithm = 4;
    string X_Amz_Content_Sha256 = 5;
    string X_Amz_Credential = 6;
    string X_Amz_Date = 7;
    string X_Amz_Security_Token = 8;
    string X_Amz_Signature = 9;
    string X_Amz_SignedHeaders = 10;
    DescribeElasticsearchDomainRequest body = 11;
}

message Post20150101EsDomainDomainNameConfigRequest {
    string Action = 1;
    string DomainName = 2;
    string Version = 3;
    string X_Amz_Algorithm = 4;
    string X_Amz_Content_Sha256 = 5;
    string X_Amz_Credential = 6;
    string X_Amz_Date = 7;
    string X_Amz_Security_Token = 8;
    string X_Amz_Signature = 9;
    string X_Amz_SignedHeaders = 10;
    UpdateElasticsearchDomainConfigRequest body = 11;
}

message Get20150101EsInstanceTypeLimitsElasticsearchVersionInstanceTypeRequest {
    string Action = 1;
    string ElasticsearchVersion = 2;
    string InstanceType = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeElasticsearchInstanceTypeLimitsRequest body = 12;
}

message Get20150101EsInstanceTypesElasticsearchVersionRequest {
    string Action = 1;
    string ElasticsearchVersion = 2;
    // Pagination limit
    string MaxResults = 3;
    // Pagination token
    string NextToken = 4;
    string Version = 5;
    string X_Amz_Algorithm = 6;
    string X_Amz_Content_Sha256 = 7;
    string X_Amz_Credential = 8;
    string X_Amz_Date = 9;
    string X_Amz_Security_Token = 10;
    string X_Amz_Signature = 11;
    string X_Amz_SignedHeaders = 12;
    ListElasticsearchInstanceTypesRequest body = 13;
}

message Get20150101EsVersionsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListElasticsearchVersionsRequest body = 12;
}

message Post20150101TagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsRequest body = 10;
}

message Post20150101TagsRemovalRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsRequest body = 10;
}

message Get20150101TagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsRequest body = 10;
}

message AccessPoliciesStatus {
    // The access policy configured for the Elasticsearch domain. Access policies may be resource-based, IP-based, or IAM-based. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank"> Configuring Access Policies</a>for more information.
    string Options = 1;
    // The status of the access policy for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included.
    OptionStatus Status = 2;
}

message AddTagsRequest {
    //  Specify the <code>ARN</code> for which you want to add the tags.
    string ARN = 1;
    //  List of <code>Tag</code> that need to be added for the Elasticsearch domain.
    array TagList = 2;
}

message AdditionalLimit {
    //  Name of Additional Limit is specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> etc. <br/> Attributes and their details: <br/> <ul> <li>MaximumNumberOfDataNodesSupported</li> This attribute will be present in Master node only to specify how much data nodes upto which given <code> <a>ESPartitionInstanceType</a> </code> can support as master node. <li>MaximumNumberOfDataNodesWithoutMasterNode</li> This attribute will be present in Data node only to specify how much data nodes of given <code> <a>ESPartitionInstanceType</a> </code> upto which you don't need any master nodes to govern them. </ul>
    string LimitName = 1;
    //  Value for given <code> <a>AdditionalLimit$LimitName</a> </code> .
    array LimitValues = 2;
}

repeated AdditionalLimit AdditionalLimitList = 1

message AdvancedOption {
    string key = 1;
    string value = 2;
}
repeated AdvancedOption AdvancedOptions = 1

message AdvancedOptionsStatus {
    //  Specifies the status of advanced options for the specified Elasticsearch domain.
    array Options = 1;
    //  Specifies the status of <code>OptionStatus</code> for advanced options for the specified Elasticsearch domain.
    OptionStatus Status = 2;
}

message BaseException {
    // A description of the error.
    string message = 1;
}

message CreateElasticsearchDomainRequest {
    //  IAM access policy as a JSON-formatted string.
    string AccessPolicies = 1;
    //  Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.
    array AdvancedOptions = 2;
    // The name of the Elasticsearch domain that you are creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
    string DomainName = 3;
    // Options to enable, disable and specify the type and size of EBS storage volumes.
    EBSOptions EBSOptions = 4;
    // Configuration options for an Elasticsearch domain. Specifies the instance type and number of instances in the domain cluster.
    ElasticsearchClusterConfig ElasticsearchClusterConfig = 5;
    // String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
    string ElasticsearchVersion = 6;
    // Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours.
    SnapshotOptions SnapshotOptions = 7;
}

message CreateElasticsearchDomainResponse {
    // The status of the newly created Elasticsearch domain.
    ElasticsearchDomainStatus DomainStatus = 1;
}

message DeleteElasticsearchDomainRequest {
}

message DeleteElasticsearchDomainResponse {
    // The status of the Elasticsearch domain being deleted.
    ElasticsearchDomainStatus DomainStatus = 1;
}

message DescribeElasticsearchDomainConfigRequest {
}

message DescribeElasticsearchDomainConfigResponse {
    // The configuration information of the domain requested in the <code>DescribeElasticsearchDomainConfig</code> request.
    ElasticsearchDomainConfig DomainConfig = 1;
}

message DescribeElasticsearchDomainRequest {
}

message DescribeElasticsearchDomainResponse {
    // The current status of the Elasticsearch domain.
    ElasticsearchDomainStatus DomainStatus = 1;
}

message DescribeElasticsearchDomainsRequest {
    // The Elasticsearch domains for which you want information.
    array DomainNames = 1;
}

message DescribeElasticsearchDomainsResponse {
    // The status of the domains requested in the <code>DescribeElasticsearchDomains</code> request.
    array DomainStatusList = 1;
}

message DescribeElasticsearchInstanceTypeLimitsRequest {
}

message DescribeElasticsearchInstanceTypeLimitsResponse {
    array LimitsByRole = 1;
}

message DisabledOperationException {
}

message DomainInfo {
    //  Specifies the <code>DomainName</code>.
    string DomainName = 1;
}

repeated DomainInfo DomainInfoList = 1



repeated string DomainNameList = 1

message EBSOptions {
    // Specifies whether EBS-based storage is enabled.
    boolean EBSEnabled = 1;
    // Specifies the IOPD for a Provisioned IOPS EBS volume (SSD).
    integer Iops = 2;
    //  Integer to specify the size of an EBS volume.
    integer VolumeSize = 3;
    //  Specifies the volume type for EBS-based storage.
    VolumeType VolumeType = 4;
}

message EBSOptionsStatus {
    //  Specifies the EBS options for the specified Elasticsearch domain.
    EBSOptions Options = 1;
    //  Specifies the status of the EBS options for the specified Elasticsearch domain.
    OptionStatus Status = 2;
}

enum ESPartitionInstanceType {
    M3MEDIUMELASTICSEARCH = 0;
    M3LARGEELASTICSEARCH = 1;
    M3XLARGEELASTICSEARCH = 2;
    M32XLARGEELASTICSEARCH = 3;
    M4LARGEELASTICSEARCH = 4;
    M4XLARGEELASTICSEARCH = 5;
    M42XLARGEELASTICSEARCH = 6;
    M44XLARGEELASTICSEARCH = 7;
    M410XLARGEELASTICSEARCH = 8;
    T2MICROELASTICSEARCH = 9;
    T2SMALLELASTICSEARCH = 10;
    T2MEDIUMELASTICSEARCH = 11;
    R3LARGEELASTICSEARCH = 12;
    R3XLARGEELASTICSEARCH = 13;
    R32XLARGEELASTICSEARCH = 14;
    R34XLARGEELASTICSEARCH = 15;
    R38XLARGEELASTICSEARCH = 16;
    I2XLARGEELASTICSEARCH = 17;
    I22XLARGEELASTICSEARCH = 18;
    D2XLARGEELASTICSEARCH = 19;
    D22XLARGEELASTICSEARCH = 20;
    D24XLARGEELASTICSEARCH = 21;
    D28XLARGEELASTICSEARCH = 22;
    C4LARGEELASTICSEARCH = 23;
    C4XLARGEELASTICSEARCH = 24;
    C42XLARGEELASTICSEARCH = 25;
    C44XLARGEELASTICSEARCH = 26;
    C48XLARGEELASTICSEARCH = 27;
    R4LARGEELASTICSEARCH = 28;
    R4XLARGEELASTICSEARCH = 29;
    R42XLARGEELASTICSEARCH = 30;
    R44XLARGEELASTICSEARCH = 31;
    R48XLARGEELASTICSEARCH = 32;
    R416XLARGEELASTICSEARCH = 33;
}

message ElasticsearchClusterConfig {
    // Total number of dedicated master nodes, active and on standby, for the cluster.
    integer DedicatedMasterCount = 1;
    // A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes" target="_blank">About Dedicated Master Nodes</a> for more information.
    boolean DedicatedMasterEnabled = 2;
    // The instance type for a dedicated master node.
    ESPartitionInstanceType DedicatedMasterType = 3;
    // The number of instances in the specified domain cluster.
    integer InstanceCount = 4;
    // The instance type for an Elasticsearch cluster.
    ESPartitionInstanceType InstanceType = 5;
    // A boolean value to indicate whether zone awareness is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness" target="_blank">About Zone Awareness</a> for more information.
    boolean ZoneAwarenessEnabled = 6;
}

message ElasticsearchClusterConfigStatus {
    //  Specifies the cluster configuration for the specified Elasticsearch domain.
    ElasticsearchClusterConfig Options = 1;
    //  Specifies the status of the configuration for the specified Elasticsearch domain.
    OptionStatus Status = 2;
}

message ElasticsearchDomainConfig {
    // IAM access policy as a JSON-formatted string.
    AccessPoliciesStatus AccessPolicies = 1;
    // Specifies the <code>AdvancedOptions</code> for the domain. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuring Advanced Options</a> for more information.
    AdvancedOptionsStatus AdvancedOptions = 2;
    // Specifies the <code>EBSOptions</code> for the Elasticsearch domain.
    EBSOptionsStatus EBSOptions = 3;
    // Specifies the <code>ElasticsearchClusterConfig</code> for the Elasticsearch domain.
    ElasticsearchClusterConfigStatus ElasticsearchClusterConfig = 4;
    // String of format X.Y to specify version for the Elasticsearch domain.
    ElasticsearchVersionStatus ElasticsearchVersion = 5;
    // Specifies the <code>SnapshotOptions</code> for the Elasticsearch domain.
    SnapshotOptionsStatus SnapshotOptions = 6;
}

message ElasticsearchDomainStatus {
    // The Amazon resource name (ARN) of an Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.
    string ARN = 1;
    //  IAM access policy as a JSON-formatted string.
    string AccessPolicies = 2;
    // Specifies the status of the <code>AdvancedOptions</code>
    array AdvancedOptions = 3;
    // The domain creation status. <code>True</code> if the creation of an Elasticsearch domain is complete. <code>False</code> if domain creation is still in progress.
    boolean Created = 4;
    // The domain deletion status. <code>True</code> if a delete request has been received for the domain but resource cleanup is still in progress. <code>False</code> if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned.
    boolean Deleted = 5;
    // The unique identifier for the specified Elasticsearch domain.
    string DomainId = 6;
    // The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).
    string DomainName = 7;
    // The <code>EBSOptions</code> for the specified domain. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a> for more information.
    EBSOptions EBSOptions = 8;
    // The type and number of instances in the domain cluster.
    ElasticsearchClusterConfig ElasticsearchClusterConfig = 9;
    string ElasticsearchVersion = 10;
    // The Elasticsearch domain endpoint that you use to submit index and search requests.
    string Endpoint = 11;
    // The status of the Elasticsearch domain configuration. <code>True</code> if Amazon Elasticsearch Service is processing configuration changes. <code>False</code> if the configuration is active.
    boolean Processing = 12;
    // Specifies the status of the <code>SnapshotOptions</code>
    SnapshotOptions SnapshotOptions = 13;
}

repeated ElasticsearchDomainStatus ElasticsearchDomainStatusList = 1

repeated ESPartitionInstanceType ElasticsearchInstanceTypeList = 1

repeated string ElasticsearchVersionList = 1

message ElasticsearchVersionStatus {
    //  Specifies the Elasticsearch version for the specified Elasticsearch domain.
    string Options = 1;
    //  Specifies the status of the Elasticsearch version options for the specified Elasticsearch domain.
    OptionStatus Status = 2;
}

message InstanceCountLimits {
    integer MaximumInstanceCount = 1;
    integer MinimumInstanceCount = 2;
}

message InstanceLimits {
    InstanceCountLimits InstanceCountLimits = 1;
}

message InternalException {
}

message InvalidTypeException {
}

message LimitExceededException {
}





repeated string LimitValueList = 1

message Limits {
    //  List of additional limits that are specific to a given InstanceType and for each of it's <code> <a>InstanceRole</a> </code> .
    array AdditionalLimits = 1;
    InstanceLimits InstanceLimits = 2;
    // StorageType represents the list of storage related types and attributes that are available for given InstanceType.
    array StorageTypes = 3;
}

message LimitsByRole {
    string key = 1;
    Limits value = 2;
}
repeated LimitsByRole LimitsByRole = 1

message ListDomainNamesResponse {
    // List of Elasticsearch domain names.
    array DomainNames = 1;
}

message ListElasticsearchInstanceTypesRequest {
}

message ListElasticsearchInstanceTypesResponse {
    //  List of instance types supported by Amazon Elasticsearch service for given <code> <a>ElasticsearchVersion</a> </code>
    array ElasticsearchInstanceTypes = 1;
    // In case if there are more results available NextToken would be present, make further request to the same API with received NextToken to paginate remaining results.
    string NextToken = 2;
}

message ListElasticsearchVersionsRequest {
}

message ListElasticsearchVersionsResponse {
    array ElasticsearchVersions = 1;
    string NextToken = 2;
}

message ListTagsRequest {
}

message ListTagsResponse {
    //  List of <code>Tag</code> for the requested Elasticsearch domain.
    array TagList = 1;
}

enum OptionState {
    REQUIRESINDEXDOCUMENTS = 0;
    PROCESSING = 1;
    ACTIVE = 2;
}

message OptionStatus {
    // Timestamp which tells the creation date for the entity.
    string CreationDate = 1;
    // Indicates whether the Elasticsearch domain is being deleted.
    boolean PendingDeletion = 2;
    // Provides the <code>OptionState</code> for the Elasticsearch domain.
    OptionState State = 3;
    // Timestamp which tells the last updated time for the entity.
    string UpdateDate = 4;
    // Specifies the latest version for the entity.
    integer UpdateVersion = 5;
}

message RemoveTagsRequest {
    // Specifies the <code>ARN</code> for the Elasticsearch domain from which you want to delete the specified tags.
    string ARN = 1;
    // Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.
    array TagKeys = 2;
}

message ResourceAlreadyExistsException {
}

message ResourceNotFoundException {
}

message SnapshotOptions {
    // Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.
    integer AutomatedSnapshotStartHour = 1;
}

message SnapshotOptionsStatus {
    // Specifies the daily snapshot options specified for the Elasticsearch domain.
    SnapshotOptions Options = 1;
    // Specifies the status of a daily automated snapshot.
    OptionStatus Status = 2;
}

message StorageType {
    string StorageSubTypeName = 1;
    // List of limits that are applicable for given storage type.
    array StorageTypeLimits = 2;
    string StorageTypeName = 3;
}

message StorageTypeLimit {
    //  Name of storage limits that are applicable for given storage type. If <code> <a>StorageType</a> </code> is ebs, following storage options are applicable <ol> <li>MinimumVolumeSize</li> Minimum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumVolumeSize</li> Maximum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumIops</li> Maximum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. <li>MinimumIops</li> Minimum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. </ol>
    string LimitName = 1;
    //  Values for the <code> <a>StorageTypeLimit$LimitName</a> </code> .
    array LimitValues = 2;
}

repeated StorageTypeLimit StorageTypeLimitList = 1

repeated StorageType StorageTypeList = 1





repeated string StringList = 1

message Tag {
    // Specifies the <code>TagKey</code>, the name of the tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.
    string Key = 1;
    // Specifies the <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and do not have to be unique in a tag set. For example, you can have a key value pair in a tag set of <code>project : Trinity</code> and <code>cost-center : Trinity</code>
    string Value = 2;
}



repeated Tag TagList = 1





message UpdateElasticsearchDomainConfigRequest {
    // IAM access policy as a JSON-formatted string.
    string AccessPolicies = 1;
    // Modifies the advanced option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.
    array AdvancedOptions = 2;
    // Specify the type and size of the EBS volume that you want to use.
    EBSOptions EBSOptions = 3;
    // The type and number of instances to instantiate for the domain cluster.
    ElasticsearchClusterConfig ElasticsearchClusterConfig = 4;
    // Option to set the time, in UTC format, for the daily automated snapshot. Default value is <code>0</code> hours.
    SnapshotOptions SnapshotOptions = 5;
}

message UpdateElasticsearchDomainConfigResponse {
    // The status of the updated Elasticsearch domain.
    ElasticsearchDomainConfig DomainConfig = 1;
}

message ValidationException {
}

enum VolumeType {
    STANDARD = 0;
    GP2 = 1;
    IO1 = 2;
}

service AmazonElasticsearchServiceService {
    // Returns the name of all Elasticsearch domains owned by the current user's account.
    rpc Get20150101Domain(Get20150101DomainRequest) returns (ListDomainNamesResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/domain"
      };
    }
    // Creates a new Elasticsearch domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.
    rpc Post20150101EsDomain(Post20150101EsDomainRequest) returns (CreateElasticsearchDomainResponse) {
      option (google.api.http) = {
        post: "//2015-01-01/es/domain"
        body: "body"
      };
    }
    // Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN.
    rpc Post20150101EsDomainInfo(Post20150101EsDomainInfoRequest) returns (DescribeElasticsearchDomainsResponse) {
      option (google.api.http) = {
        post: "//2015-01-01/es/domain-info"
        body: "body"
      };
    }
    // Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN.
    rpc Get20150101EsDomainDomainName(Get20150101EsDomainDomainNameRequest) returns (DescribeElasticsearchDomainResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/es/domain/{DomainName}"
        body: "body"
      };
    }
    // Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances.
    rpc Post20150101EsDomainDomainNameConfig(Post20150101EsDomainDomainNameConfigRequest) returns (UpdateElasticsearchDomainConfigResponse) {
      option (google.api.http) = {
        post: "//2015-01-01/es/domain/{DomainName}/config"
        body: "body"
      };
    }
    //  Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion. When modifying existing Domain, specify the <code> <a>DomainName</a> </code> to know what Limits are supported for modifying.
    rpc Get20150101EsInstanceTypeLimitsElasticsearchVersionInstanceType(Get20150101EsInstanceTypeLimitsElasticsearchVersionInstanceTypeRequest) returns (DescribeElasticsearchInstanceTypeLimitsResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}"
        body: "body"
      };
    }
    // List all Elasticsearch instance types that are supported for given ElasticsearchVersion
    rpc Get20150101EsInstanceTypesElasticsearchVersion(Get20150101EsInstanceTypesElasticsearchVersionRequest) returns (ListElasticsearchInstanceTypesResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/es/instanceTypes/{ElasticsearchVersion}"
        body: "body"
      };
    }
    // List all supported Elasticsearch versions
    rpc Get20150101EsVersions(Get20150101EsVersionsRequest) returns (ListElasticsearchVersionsResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/es/versions"
        body: "body"
      };
    }
    // Attaches tags to an existing Elasticsearch domain. Tags are a set of case-sensitive key value pairs. An Elasticsearch domain may have up to 10 tags. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-awsresorcetagging" target="_blank"> Tagging Amazon Elasticsearch Service Domains for more information.</a>
    rpc Post20150101Tags(Post20150101TagsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//2015-01-01/tags"
        body: "body"
      };
    }
    // Removes the specified set of tags from the specified Elasticsearch domain.
    rpc Post20150101TagsRemoval(Post20150101TagsRemovalRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//2015-01-01/tags-removal"
        body: "body"
      };
    }
    // Returns all tags for the given Elasticsearch domain.
    rpc Get20150101Tags(Get20150101TagsRequest) returns (ListTagsResponse) {
      option (google.api.http) = {
        get: "//2015-01-01/tags/"
        body: "body"
      };
    }
}
