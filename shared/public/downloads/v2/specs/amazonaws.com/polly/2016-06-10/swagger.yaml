swagger: '2.0'
schemes:
  - http
host: polly.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Polly
  version: '2016-06-10'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/polly-2016-06-10.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: polly
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/polly/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /v1/lexicons:
    get:
      description: 'Returns a list of pronunciation lexicons stored in an AWS Region. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
      operationId: ListLexicons
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListLexiconsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLexiconsOutput'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/lexicons/{LexiconName}':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Stores a pronunciation lexicon in an AWS Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.</p>'
      operationId: PutLexicon
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutLexiconInput'
        - in: path
          name: LexiconName
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutLexiconOutput'
        '480':
          description: InvalidLexiconException
          schema:
            $ref: '#/definitions/InvalidLexiconException'
        '481':
          description: UnsupportedPlsAlphabetException
          schema:
            $ref: '#/definitions/UnsupportedPlsAlphabetException'
        '482':
          description: UnsupportedPlsLanguageException
          schema:
            $ref: '#/definitions/UnsupportedPlsLanguageException'
        '483':
          description: LexiconSizeExceededException
          schema:
            $ref: '#/definitions/LexiconSizeExceededException'
        '484':
          description: MaxLexemeLengthExceededException
          schema:
            $ref: '#/definitions/MaxLexemeLengthExceededException'
        '485':
          description: MaxLexiconsNumberExceededException
          schema:
            $ref: '#/definitions/MaxLexiconsNumberExceededException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
  /v1/speech:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/how-text-to-speech-works.html">How it Works</a>.'
      operationId: SynthesizeSpeech
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SynthesizeSpeechInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SynthesizeSpeechOutput'
        '480':
          description: TextLengthExceededException
          schema:
            $ref: '#/definitions/TextLengthExceededException'
        '481':
          description: InvalidSampleRateException
          schema:
            $ref: '#/definitions/InvalidSampleRateException'
        '482':
          description: InvalidSsmlException
          schema:
            $ref: '#/definitions/InvalidSsmlException'
        '483':
          description: LexiconNotFoundException
          schema:
            $ref: '#/definitions/LexiconNotFoundException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
        '485':
          description: MarksNotSupportedForFormatException
          schema:
            $ref: '#/definitions/MarksNotSupportedForFormatException'
        '486':
          description: SsmlMarksNotSupportedForTextTypeException
          schema:
            $ref: '#/definitions/SsmlMarksNotSupportedForTextTypeException'
  /v1/voices:
    get:
      description: '<p>Returns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name. </p> <p>When synthesizing speech ( <code>SynthesizeSpeech</code> ), you provide the voice ID for the voice you want from the list of voices returned by <code>DescribeVoices</code>.</p> <p>For example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the <code>DescribeVoices</code> operation you can provide the user with a list of available voices to select from.</p> <p> You can optionally specify a language code to filter the available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permissions to perform the <code>polly:DescribeVoices</code> action.</p>'
      operationId: DescribeVoices
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVoicesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeVoicesOutput'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  Alphabet:
    type: string
  AudioStream:
    type: string
  ContentType:
    type: string
  DeleteLexiconInput:
    example:
      Name: example
    properties: {}
    type: object
  DeleteLexiconOutput:
    example: {}
    properties: {}
    type: object
  DescribeVoicesInput:
    example:
      LanguageCode: en-GB
    properties: {}
    type: object
  DescribeVoicesOutput:
    example:
      Voices:
        - Gender: Female
          Id: Emma
          LanguageCode: en-GB
          LanguageName: British English
          Name: Emma
        - Gender: Male
          Id: Brian
          LanguageCode: en-GB
          LanguageName: British English
          Name: Brian
        - Gender: Female
          Id: Amy
          LanguageCode: en-GB
          LanguageName: British English
          Name: Amy
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token to use in the next request to continue the listing of voices. <code>NextToken</code> is returned only if the response is truncated.
      Voices:
        $ref: '#/definitions/VoiceList'
        description: A list of voices with their properties.
    type: object
  ErrorMessage:
    type: string
  Gender:
    enum:
      - Female
      - Male
    type: string
  GetLexiconInput:
    example:
      Name: ''
    properties: {}
    type: object
  GetLexiconOutput:
    example:
      Lexicon:
        Content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<lexicon version=\"1.0\" \r\n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"\r\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n      xsi:schemaLocation=\"http://www.w3.org/2005/01/pronunciation-lexicon \r\n        http://www.w3.org/TR/2007/CR-pronunciation-lexicon-20071212/pls.xsd\"\r\n      alphabet=\"ipa\" \r\n      xml:lang=\"en-US\">\r\n  <lexeme>\r\n    <grapheme>W3C</grapheme>\r\n    <alias>World Wide Web Consortium</alias>\r\n  </lexeme>\r\n</lexicon>"
        Name: example
      LexiconAttributes:
        Alphabet: ipa
        LanguageCode: en-US
        LastModified: 1478542980.117
        LexemesCount: 1
        LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
        Size: 503
    properties:
      Lexicon:
        $ref: '#/definitions/Lexicon'
        description: 'Lexicon object that provides name and the string content of the lexicon. '
      LexiconAttributes:
        $ref: '#/definitions/LexiconAttributes'
        description: 'Metadata of the lexicon, including phonetic alphabetic used, language code, lexicon ARN, number of lexemes defined in the lexicon, and size of lexicon in bytes.'
    type: object
  InvalidLexiconException:
    description: 'Amazon Polly can''t find the specified lexicon. Verify that the lexicon''s name is spelled correctly, and then try again.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  InvalidNextTokenException:
    description: 'The NextToken is invalid. Verify that it''s spelled correctly, and then try again.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  InvalidSampleRateException:
    description: The specified sample rate is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  InvalidSsmlException:
    description: 'The SSML you provided is invalid. Verify the SSML syntax, spelling of tags and values, and then try again.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  LanguageCode:
    enum:
      - cy-GB
      - da-DK
      - de-DE
      - en-AU
      - en-GB
      - en-GB-WLS
      - en-IN
      - en-US
      - es-ES
      - es-US
      - fr-CA
      - fr-FR
      - is-IS
      - it-IT
      - ja-JP
      - nb-NO
      - nl-NL
      - pl-PL
      - pt-BR
      - pt-PT
      - ro-RO
      - ru-RU
      - sv-SE
      - tr-TR
    type: string
  LanguageName:
    type: string
  LastModified:
    format: date-time
    type: string
  LexemesCount:
    type: integer
  Lexicon:
    description: 'Provides lexicon name and lexicon content in string format. For more information, see <a href="https://www.w3.org/TR/pronunciation-lexicon/">Pronunciation Lexicon Specification (PLS) Version 1.0</a>.'
    properties:
      Content:
        $ref: '#/definitions/LexiconContent'
        description: Lexicon content in string format. The content of a lexicon must be in PLS format.
      Name:
        $ref: '#/definitions/LexiconName'
        description: Name of the lexicon.
    type: object
  LexiconArn:
    type: string
  LexiconAttributes:
    description: 'Contains metadata describing the lexicon such as the number of lexemes, language code, and so on. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
    properties:
      Alphabet:
        $ref: '#/definitions/Alphabet'
        description: Phonetic alphabet used in the lexicon. Valid values are <code>ipa</code> and <code>x-sampa</code>.
      LanguageCode:
        $ref: '#/definitions/LanguageCode'
        description: 'Language code that the lexicon applies to. A lexicon with a language code such as "en" would be applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so on.'
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date lexicon was last modified (a timestamp value).
      LexemesCount:
        $ref: '#/definitions/LexemesCount'
        description: Number of lexemes in the lexicon.
      LexiconArn:
        $ref: '#/definitions/LexiconArn'
        description: Amazon Resource Name (ARN) of the lexicon.
      Size:
        $ref: '#/definitions/Size'
        description: 'Total size of the lexicon, in characters.'
    type: object
  LexiconContent:
    type: string
  LexiconDescription:
    description: Describes the content of the lexicon.
    properties:
      Attributes:
        $ref: '#/definitions/LexiconAttributes'
        description: Provides lexicon metadata.
      Name:
        $ref: '#/definitions/LexiconName'
        description: Name of the lexicon.
    type: object
  LexiconDescriptionList:
    items:
      $ref: '#/definitions/LexiconDescription'
    type: array
  LexiconName:
    format: password
    pattern: '[0-9A-Za-z]{1,20}'
    type: string
  LexiconNameList:
    items:
      $ref: '#/definitions/LexiconName'
    maxItems: 5
    type: array
  LexiconNotFoundException:
    description: '<p>Amazon Polly can''t find the specified lexicon. This could be caused by a lexicon that is missing, its name is misspelled or specifying a lexicon that is in a different region.</p> <p>Verify that the lexicon exists, is in the region (see <a>ListLexicons</a>) and that you spelled its name is spelled correctly. Then try again.</p>'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  LexiconSizeExceededException:
    description: The maximum size of the specified lexicon would be exceeded by this operation.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  ListLexiconsInput:
    example: {}
    properties: {}
    type: object
  ListLexiconsOutput:
    example:
      Lexicons:
        - Attributes:
            Alphabet: ipa
            LanguageCode: en-US
            LastModified: 1478542980.117
            LexemesCount: 1
            LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
            Size: 503
          Name: example
    properties:
      Lexicons:
        $ref: '#/definitions/LexiconDescriptionList'
        description: A list of lexicon names and attributes.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token to use in the next request to continue the listing of lexicons. <code>NextToken</code> is returned only if the response is truncated.
    type: object
  MarksNotSupportedForFormatException:
    description: Speech marks are not supported for the <code>OutputFormat</code> selected. Speech marks are only available for content in <code>json</code> format.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  MaxLexemeLengthExceededException:
    description: The maximum size of the lexeme would be exceeded by this operation.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  MaxLexiconsNumberExceededException:
    description: The maximum number of lexicons would be exceeded by this operation.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  NextToken:
    type: string
  OutputFormat:
    enum:
      - json
      - mp3
      - ogg_vorbis
      - pcm
    type: string
  PutLexiconInput:
    example:
      Content: 'file://example.pls'
      Name: W3C
    properties:
      Content:
        $ref: '#/definitions/LexiconContent'
        description: Content of the PLS lexicon as string data.
    required:
      - Content
    type: object
  PutLexiconOutput:
    example: {}
    properties: {}
    type: object
  RequestCharacters:
    type: integer
  SampleRate:
    type: string
  ServiceFailureException:
    description: An unknown condition has caused a service failure.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  Size:
    type: integer
  SpeechMarkType:
    enum:
      - sentence
      - ssml
      - viseme
      - word
    type: string
  SpeechMarkTypeList:
    items:
      $ref: '#/definitions/SpeechMarkType'
    maxItems: 4
    type: array
  SsmlMarksNotSupportedForTextTypeException:
    description: SSML speech marks are not supported for plain text-type input.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  SynthesizeSpeechInput:
    example:
      LexiconNames:
        - example
      OutputFormat: mp3
      SampleRate: '8000'
      Text: All Gaul is divided into three parts
      TextType: text
      VoiceId: Joanna
    properties:
      LexiconNames:
        $ref: '#/definitions/LexiconNameList'
        description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. For information about storing lexicons, see <a href="http://docs.aws.amazon.com/polly/latest/dg/API_PutLexicon.html">PutLexicon</a>.'
      OutputFormat:
        $ref: '#/definitions/OutputFormat'
        description: ' The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. '
      SampleRate:
        $ref: '#/definitions/SampleRate'
        description: '<p> The audio frequency specified in Hz. </p> <p>The valid values for <code>mp3</code> and <code>ogg_vorbis</code> are "8000", "16000", and "22050". The default value is "22050". </p> <p> Valid values for <code>pcm</code> are "8000" and "16000" The default value is "16000". </p>'
      SpeechMarkTypes:
        $ref: '#/definitions/SpeechMarkTypeList'
        description: The type of speech marks returned for the input text.
      Text:
        $ref: '#/definitions/Text'
        description: ' Input text to synthesize. If you specify <code>ssml</code> as the <code>TextType</code>, follow the SSML format for the input text. '
      TextType:
        $ref: '#/definitions/TextType'
        description: ' Specifies whether the input text is plain text or SSML. The default value is plain text. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/ssml.html">Using SSML</a>.'
      VoiceId:
        $ref: '#/definitions/VoiceId'
        description: ' Voice ID to use for the synthesis. You can get a list of available voice IDs by calling the <a href="http://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation. '
    required:
      - OutputFormat
      - Text
      - VoiceId
    type: object
  SynthesizeSpeechOutput:
    example:
      AudioStream: TEXT
      ContentType: audio/mpeg
      RequestCharacters: 37
    properties:
      AudioStream:
        $ref: '#/definitions/AudioStream'
        description: ' Stream containing the synthesized speech. '
    type: object
  Text:
    type: string
  TextLengthExceededException:
    description: 'The value of the "Text" parameter is longer than the accepted limits. The limit for input text is a maximum of 3000 characters total, of which no more than 1500 can be billed characters. SSML tags are not counted as billed characters.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  TextType:
    enum:
      - ssml
      - text
    type: string
  UnsupportedPlsAlphabetException:
    description: The alphabet specified by the lexicon is not a supported alphabet. Valid values are <code>x-sampa</code> and <code>ipa</code>.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  UnsupportedPlsLanguageException:
    description: 'The language specified in the lexicon is unsupported. For a list of supported languages, see <a href="http://docs.aws.amazon.com/polly/latest/dg/API_LexiconAttributes.html">Lexicon Attributes</a>.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    type: object
  Voice:
    description: Description of the voice.
    properties:
      Gender:
        $ref: '#/definitions/Gender'
        description: Gender of the voice.
      Id:
        $ref: '#/definitions/VoiceId'
        description: Amazon Polly assigned voice ID. This is the ID that you specify when calling the <code>SynthesizeSpeech</code> operation.
      LanguageCode:
        $ref: '#/definitions/LanguageCode'
        description: Language code of the voice.
      LanguageName:
        $ref: '#/definitions/LanguageName'
        description: Human readable name of the language in English.
      Name:
        $ref: '#/definitions/VoiceName'
        description: 'Name of the voice (for example, Salli, Kendra, etc.). This provides a human readable voice name that you might display in your application.'
    type: object
  VoiceId:
    enum:
      - Geraint
      - Gwyneth
      - Mads
      - Naja
      - Hans
      - Marlene
      - Nicole
      - Russell
      - Amy
      - Brian
      - Emma
      - Raveena
      - Ivy
      - Joanna
      - Joey
      - Justin
      - Kendra
      - Kimberly
      - Salli
      - Conchita
      - Enrique
      - Miguel
      - Penelope
      - Chantal
      - Celine
      - Mathieu
      - Dora
      - Karl
      - Carla
      - Giorgio
      - Mizuki
      - Liv
      - Lotte
      - Ruben
      - Ewa
      - Jacek
      - Jan
      - Maja
      - Ricardo
      - Vitoria
      - Cristiano
      - Ines
      - Carmen
      - Maxim
      - Tatyana
      - Astrid
      - Filiz
      - Vicki
    type: string
  VoiceList:
    items:
      $ref: '#/definitions/Voice'
    type: array
  VoiceName:
    type: string
