basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.AbortDocumentVersionUploadRequest.type" = "object"
"definitions.ActivateUserRequest.type" = "object"
"definitions.ActivateUserResponse.properties.User.$ref" = "#/definitions/User"
"definitions.ActivateUserResponse.properties.User.description" = "The user information."
"definitions.ActivateUserResponse.type" = "object"
"definitions.Activity.description" = "Describes the activity information."
"definitions.Activity.properties.CommentMetadata.$ref" = "#/definitions/CommentMetadata"
"definitions.Activity.properties.CommentMetadata.description" = "Metadata of the commenting activity. This is an optional field and is filled for commenting activities."
"definitions.Activity.properties.Initiator.$ref" = "#/definitions/UserMetadata"
"definitions.Activity.properties.Initiator.description" = "The user who performed the action."
"definitions.Activity.properties.OrganizationId.$ref" = "#/definitions/IdType"
"definitions.Activity.properties.OrganizationId.description" = "The ID of the organization."
"definitions.Activity.properties.OriginalParent.$ref" = "#/definitions/ResourceMetadata"
"definitions.Activity.properties.OriginalParent.description" = "The original parent of the resource. This is an optional field and is filled for move activities."
"definitions.Activity.properties.Participants.$ref" = "#/definitions/Participants"
"definitions.Activity.properties.Participants.description" = "The list of users or groups impacted by this action. This is an optional field and is filled for the following sharing activities: DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED."
"definitions.Activity.properties.ResourceMetadata.$ref" = "#/definitions/ResourceMetadata"
"definitions.Activity.properties.ResourceMetadata.description" = "The metadata of the resource involved in the user action."
"definitions.Activity.properties.TimeStamp.$ref" = "#/definitions/TimestampType"
"definitions.Activity.properties.TimeStamp.description" = "The timestamp when the action was performed."
"definitions.Activity.properties.Type.$ref" = "#/definitions/ActivityType"
"definitions.Activity.properties.Type.description" = "The activity type."
"definitions.Activity.type" = "object"
"definitions.ActivityType.enum.length" = 31
"definitions.ActivityType.enum[0]" = "DOCUMENT_CHECKED_IN"
"definitions.ActivityType.enum[10]" = "DOCUMENT_SHARE_PERMISSION_CHANGED"
"definitions.ActivityType.enum[11]" = "DOCUMENT_SHAREABLE_LINK_CREATED"
"definitions.ActivityType.enum[12]" = "DOCUMENT_SHAREABLE_LINK_REMOVED"
"definitions.ActivityType.enum[13]" = "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED"
"definitions.ActivityType.enum[14]" = "DOCUMENT_MOVED"
"definitions.ActivityType.enum[15]" = "DOCUMENT_COMMENT_ADDED"
"definitions.ActivityType.enum[16]" = "DOCUMENT_COMMENT_DELETED"
"definitions.ActivityType.enum[17]" = "DOCUMENT_ANNOTATION_ADDED"
"definitions.ActivityType.enum[18]" = "DOCUMENT_ANNOTATION_DELETED"
"definitions.ActivityType.enum[19]" = "FOLDER_CREATED"
"definitions.ActivityType.enum[1]" = "DOCUMENT_CHECKED_OUT"
"definitions.ActivityType.enum[20]" = "FOLDER_DELETED"
"definitions.ActivityType.enum[21]" = "FOLDER_RENAMED"
"definitions.ActivityType.enum[22]" = "FOLDER_RECYCLED"
"definitions.ActivityType.enum[23]" = "FOLDER_RESTORED"
"definitions.ActivityType.enum[24]" = "FOLDER_SHARED"
"definitions.ActivityType.enum[25]" = "FOLDER_UNSHARED"
"definitions.ActivityType.enum[26]" = "FOLDER_SHARE_PERMISSION_CHANGED"
"definitions.ActivityType.enum[27]" = "FOLDER_SHAREABLE_LINK_CREATED"
"definitions.ActivityType.enum[28]" = "FOLDER_SHAREABLE_LINK_REMOVED"
"definitions.ActivityType.enum[29]" = "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED"
"definitions.ActivityType.enum[2]" = "DOCUMENT_RENAMED"
"definitions.ActivityType.enum[30]" = "FOLDER_MOVED"
"definitions.ActivityType.enum[3]" = "DOCUMENT_VERSION_UPLOADED"
"definitions.ActivityType.enum[4]" = "DOCUMENT_VERSION_DELETED"
"definitions.ActivityType.enum[5]" = "DOCUMENT_RECYCLED"
"definitions.ActivityType.enum[6]" = "DOCUMENT_RESTORED"
"definitions.ActivityType.enum[7]" = "DOCUMENT_REVERTED"
"definitions.ActivityType.enum[8]" = "DOCUMENT_SHARED"
"definitions.ActivityType.enum[9]" = "DOCUMENT_UNSHARED"
"definitions.ActivityType.type" = "string"
"definitions.AddResourcePermissionsRequest.properties.Principals.$ref" = "#/definitions/SharePrincipalList"
"definitions.AddResourcePermissionsRequest.properties.Principals.description" = "The users, groups, or organization being granted permission."
"definitions.AddResourcePermissionsRequest.required.length" = 1
"definitions.AddResourcePermissionsRequest.required[0]" = "Principals"
"definitions.AddResourcePermissionsRequest.type" = "object"
"definitions.AddResourcePermissionsResponse.properties.ShareResults.$ref" = "#/definitions/ShareResultsList"
"definitions.AddResourcePermissionsResponse.properties.ShareResults.description" = "The share results."
"definitions.AddResourcePermissionsResponse.type" = "object"
"definitions.AuthenticationHeaderType.format" = "password"
"definitions.AuthenticationHeaderType.maxLength" = 8199.0
"definitions.AuthenticationHeaderType.minLength" = 1.0
"definitions.AuthenticationHeaderType.type" = "string"
"definitions.BooleanType.type" = "boolean"
"definitions.Comment.description" = "Describes a comment."
"definitions.Comment.properties.CommentId.$ref" = "#/definitions/CommentIdType"
"definitions.Comment.properties.CommentId.description" = "The ID of the comment."
"definitions.Comment.properties.Contributor.$ref" = "#/definitions/User"
"definitions.Comment.properties.Contributor.description" = "The details of the user who made the comment."
"definitions.Comment.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.Comment.properties.CreatedTimestamp.description" = "The time that the comment was created."
"definitions.Comment.properties.ParentId.$ref" = "#/definitions/CommentIdType"
"definitions.Comment.properties.ParentId.description" = "The ID of the parent comment."
"definitions.Comment.properties.RecipientId.$ref" = "#/definitions/IdType"
"definitions.Comment.properties.RecipientId.description" = "If the comment is a reply to another user's comment, this field contains the user ID of the user being replied to."
"definitions.Comment.properties.Status.$ref" = "#/definitions/CommentStatusType"
"definitions.Comment.properties.Status.description" = "The status of the comment."
"definitions.Comment.properties.Text.$ref" = "#/definitions/CommentTextType"
"definitions.Comment.properties.Text.description" = "The text of the comment."
"definitions.Comment.properties.ThreadId.$ref" = "#/definitions/CommentIdType"
"definitions.Comment.properties.ThreadId.description" = "The ID of the root comment in the thread."
"definitions.Comment.properties.Visibility.$ref" = "#/definitions/CommentVisibilityType"
"definitions.Comment.properties.Visibility.description" = "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors."
"definitions.Comment.required.length" = 1
"definitions.Comment.required[0]" = "CommentId"
"definitions.Comment.type" = "object"
"definitions.CommentIdType.maxLength" = 128.0
"definitions.CommentIdType.minLength" = 1.0
"definitions.CommentIdType.pattern" = "[\\w+-.@]+"
"definitions.CommentIdType.type" = "string"
"definitions.CommentList.items.$ref" = "#/definitions/Comment"
"definitions.CommentList.type" = "array"
"definitions.CommentMetadata.description" = "Describes the metadata of a comment."
"definitions.CommentMetadata.properties.CommentId.$ref" = "#/definitions/CommentIdType"
"definitions.CommentMetadata.properties.CommentId.description" = "The ID of the comment."
"definitions.CommentMetadata.properties.CommentStatus.$ref" = "#/definitions/CommentStatusType"
"definitions.CommentMetadata.properties.Contributor.$ref" = "#/definitions/User"
"definitions.CommentMetadata.properties.Contributor.description" = "The user who made the comment."
"definitions.CommentMetadata.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.CommentMetadata.properties.RecipientId.$ref" = "#/definitions/IdType"
"definitions.CommentMetadata.properties.RecipientId.description" = "The ID of the user being replied to."
"definitions.CommentMetadata.type" = "object"
"definitions.CommentStatusType.enum.length" = 3
"definitions.CommentStatusType.enum[0]" = "DRAFT"
"definitions.CommentStatusType.enum[1]" = "PUBLISHED"
"definitions.CommentStatusType.enum[2]" = "DELETED"
"definitions.CommentStatusType.type" = "string"
"definitions.CommentTextType.format" = "password"
"definitions.CommentTextType.maxLength" = 2048.0
"definitions.CommentTextType.minLength" = 1.0
"definitions.CommentTextType.type" = "string"
"definitions.CommentVisibilityType.enum.length" = 2
"definitions.CommentVisibilityType.enum[0]" = "PUBLIC"
"definitions.CommentVisibilityType.enum[1]" = "PRIVATE"
"definitions.CommentVisibilityType.type" = "string"
"definitions.ConcurrentModificationException.description" = "The resource hierarchy is changing."
"definitions.ConcurrentModificationException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.ConcurrentModificationException.type" = "object"
"definitions.CreateCommentRequest.properties.NotifyCollaborators.$ref" = "#/definitions/BooleanType"
"definitions.CreateCommentRequest.properties.NotifyCollaborators.description" = "Set this parameter to TRUE to send an email out to the document collaborators after the comment is created."
"definitions.CreateCommentRequest.properties.ParentId.$ref" = "#/definitions/CommentIdType"
"definitions.CreateCommentRequest.properties.ParentId.description" = "The ID of the parent comment."
"definitions.CreateCommentRequest.properties.Text.$ref" = "#/definitions/CommentTextType"
"definitions.CreateCommentRequest.properties.Text.description" = "The text of the comment."
"definitions.CreateCommentRequest.properties.ThreadId.$ref" = "#/definitions/CommentIdType"
"definitions.CreateCommentRequest.properties.ThreadId.description" = "The ID of the root comment in the thread."
"definitions.CreateCommentRequest.properties.Visibility.$ref" = "#/definitions/CommentVisibilityType"
"definitions.CreateCommentRequest.properties.Visibility.description" = "The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors."
"definitions.CreateCommentRequest.required.length" = 1
"definitions.CreateCommentRequest.required[0]" = "Text"
"definitions.CreateCommentRequest.type" = "object"
"definitions.CreateCommentResponse.properties.Comment.$ref" = "#/definitions/Comment"
"definitions.CreateCommentResponse.properties.Comment.description" = "The comment that has been created."
"definitions.CreateCommentResponse.type" = "object"
"definitions.CreateCustomMetadataRequest.properties.CustomMetadata.$ref" = "#/definitions/CustomMetadataMap"
"definitions.CreateCustomMetadataRequest.properties.CustomMetadata.description" = "Custom metadata in the form of name-value pairs."
"definitions.CreateCustomMetadataRequest.required.length" = 1
"definitions.CreateCustomMetadataRequest.required[0]" = "CustomMetadata"
"definitions.CreateCustomMetadataRequest.type" = "object"
"definitions.CreateCustomMetadataResponse.type" = "object"
"definitions.CreateFolderRequest.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.CreateFolderRequest.properties.Name.description" = "The name of the new folder."
"definitions.CreateFolderRequest.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.CreateFolderRequest.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.CreateFolderRequest.required.length" = 1
"definitions.CreateFolderRequest.required[0]" = "ParentFolderId"
"definitions.CreateFolderRequest.type" = "object"
"definitions.CreateFolderResponse.properties.Metadata.$ref" = "#/definitions/FolderMetadata"
"definitions.CreateFolderResponse.properties.Metadata.description" = "The metadata of the folder."
"definitions.CreateFolderResponse.type" = "object"
"definitions.CreateLabelsRequest.properties.Labels.$ref" = "#/definitions/Labels"
"definitions.CreateLabelsRequest.properties.Labels.description" = "List of labels to add to the resource."
"definitions.CreateLabelsRequest.required.length" = 1
"definitions.CreateLabelsRequest.required[0]" = "Labels"
"definitions.CreateLabelsRequest.type" = "object"
"definitions.CreateLabelsResponse.type" = "object"
"definitions.CreateNotificationSubscriptionRequest.properties.Endpoint.$ref" = "#/definitions/SubscriptionEndPointType"
"definitions.CreateNotificationSubscriptionRequest.properties.Endpoint.description" = "The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint is a URL that begins with \"https://\"."
"definitions.CreateNotificationSubscriptionRequest.properties.Protocol.$ref" = "#/definitions/SubscriptionProtocolType"
"definitions.CreateNotificationSubscriptionRequest.properties.Protocol.description" = "The protocol to use. The supported value is https, which delivers JSON-encoded messasges using HTTPS POST."
"definitions.CreateNotificationSubscriptionRequest.properties.SubscriptionType.$ref" = "#/definitions/SubscriptionType"
"definitions.CreateNotificationSubscriptionRequest.properties.SubscriptionType.description" = "The notification type."
"definitions.CreateNotificationSubscriptionRequest.required.length" = 3
"definitions.CreateNotificationSubscriptionRequest.required[0]" = "Endpoint"
"definitions.CreateNotificationSubscriptionRequest.required[1]" = "Protocol"
"definitions.CreateNotificationSubscriptionRequest.required[2]" = "SubscriptionType"
"definitions.CreateNotificationSubscriptionRequest.type" = "object"
"definitions.CreateNotificationSubscriptionResponse.properties.Subscription.$ref" = "#/definitions/Subscription"
"definitions.CreateNotificationSubscriptionResponse.properties.Subscription.description" = "The subscription."
"definitions.CreateNotificationSubscriptionResponse.type" = "object"
"definitions.CreateUserRequest.properties.EmailAddress.$ref" = "#/definitions/EmailAddressType"
"definitions.CreateUserRequest.properties.EmailAddress.description" = "The email address of the user."
"definitions.CreateUserRequest.properties.GivenName.$ref" = "#/definitions/UserAttributeValueType"
"definitions.CreateUserRequest.properties.GivenName.description" = "The given name of the user."
"definitions.CreateUserRequest.properties.OrganizationId.$ref" = "#/definitions/IdType"
"definitions.CreateUserRequest.properties.OrganizationId.description" = "The ID of the organization."
"definitions.CreateUserRequest.properties.Password.$ref" = "#/definitions/PasswordType"
"definitions.CreateUserRequest.properties.Password.description" = "The password of the user."
"definitions.CreateUserRequest.properties.StorageRule.$ref" = "#/definitions/StorageRuleType"
"definitions.CreateUserRequest.properties.StorageRule.description" = "The amount of storage for the user."
"definitions.CreateUserRequest.properties.Surname.$ref" = "#/definitions/UserAttributeValueType"
"definitions.CreateUserRequest.properties.Surname.description" = "The surname of the user."
"definitions.CreateUserRequest.properties.TimeZoneId.$ref" = "#/definitions/TimeZoneIdType"
"definitions.CreateUserRequest.properties.TimeZoneId.description" = "The time zone ID of the user."
"definitions.CreateUserRequest.properties.Username.$ref" = "#/definitions/UsernameType"
"definitions.CreateUserRequest.properties.Username.description" = "The login name of the user."
"definitions.CreateUserRequest.required.length" = 4
"definitions.CreateUserRequest.required[0]" = "Username"
"definitions.CreateUserRequest.required[1]" = "GivenName"
"definitions.CreateUserRequest.required[2]" = "Surname"
"definitions.CreateUserRequest.required[3]" = "Password"
"definitions.CreateUserRequest.type" = "object"
"definitions.CreateUserResponse.properties.User.$ref" = "#/definitions/User"
"definitions.CreateUserResponse.properties.User.description" = "The user information."
"definitions.CreateUserResponse.type" = "object"
"definitions.CustomMetadataKeyList.items.$ref" = "#/definitions/CustomMetadataKeyType"
"definitions.CustomMetadataKeyList.maxItems" = 8.0
"definitions.CustomMetadataKeyList.type" = "array"
"definitions.CustomMetadataKeyType.maxLength" = 56.0
"definitions.CustomMetadataKeyType.minLength" = 1.0
"definitions.CustomMetadataKeyType.pattern" = "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*"
"definitions.CustomMetadataKeyType.type" = "string"
"definitions.CustomMetadataLimitExceededException.description" = "The limit has been reached on the number of custom properties for the specified resource."
"definitions.CustomMetadataLimitExceededException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.CustomMetadataLimitExceededException.type" = "object"
"definitions.CustomMetadataMap.items.properties.key.$ref" = "#/definitions/CustomMetadataKeyType"
"definitions.CustomMetadataMap.items.properties.value.$ref" = "#/definitions/CustomMetadataValueType"
"definitions.CustomMetadataMap.items.type" = "object"
"definitions.CustomMetadataMap.maxItems" = 8.0
"definitions.CustomMetadataMap.minItems" = 1.0
"definitions.CustomMetadataMap.type" = "array"
"definitions.CustomMetadataValueType.maxLength" = 256.0
"definitions.CustomMetadataValueType.minLength" = 1.0
"definitions.CustomMetadataValueType.pattern" = "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*"
"definitions.CustomMetadataValueType.type" = "string"
"definitions.DeactivateUserRequest.type" = "object"
"definitions.DeactivatingLastSystemUserException.description" = "The last user in the organization is being deactivated."
"definitions.DeactivatingLastSystemUserException.type" = "object"
"definitions.DeleteCommentRequest.type" = "object"
"definitions.DeleteCustomMetadataRequest.type" = "object"
"definitions.DeleteCustomMetadataResponse.type" = "object"
"definitions.DeleteDocumentRequest.type" = "object"
"definitions.DeleteFolderContentsRequest.type" = "object"
"definitions.DeleteFolderRequest.type" = "object"
"definitions.DeleteLabelsRequest.type" = "object"
"definitions.DeleteLabelsResponse.type" = "object"
"definitions.DeleteNotificationSubscriptionRequest.type" = "object"
"definitions.DeleteUserRequest.type" = "object"
"definitions.DescribeActivitiesRequest.type" = "object"
"definitions.DescribeActivitiesResponse.properties.Marker.$ref" = "#/definitions/MarkerType"
"definitions.DescribeActivitiesResponse.properties.Marker.description" = "The marker for the next set of results."
"definitions.DescribeActivitiesResponse.properties.UserActivities.$ref" = "#/definitions/UserActivities"
"definitions.DescribeActivitiesResponse.properties.UserActivities.description" = "The list of activities for the specified user and time period."
"definitions.DescribeActivitiesResponse.type" = "object"
"definitions.DescribeCommentsRequest.type" = "object"
"definitions.DescribeCommentsResponse.properties.Comments.$ref" = "#/definitions/CommentList"
"definitions.DescribeCommentsResponse.properties.Comments.description" = "The list of comments for the specified document version."
"definitions.DescribeCommentsResponse.properties.Marker.$ref" = "#/definitions/MarkerType"
"definitions.DescribeCommentsResponse.properties.Marker.description" = "The marker for the next set of results. This marker was received from a previous call."
"definitions.DescribeCommentsResponse.type" = "object"
"definitions.DescribeDocumentVersionsRequest.type" = "object"
"definitions.DescribeDocumentVersionsResponse.properties.DocumentVersions.$ref" = "#/definitions/DocumentVersionMetadataList"
"definitions.DescribeDocumentVersionsResponse.properties.DocumentVersions.description" = "The document versions."
"definitions.DescribeDocumentVersionsResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeDocumentVersionsResponse.properties.Marker.description" = "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
"definitions.DescribeDocumentVersionsResponse.type" = "object"
"definitions.DescribeFolderContentsRequest.type" = "object"
"definitions.DescribeFolderContentsResponse.properties.Documents.$ref" = "#/definitions/DocumentMetadataList"
"definitions.DescribeFolderContentsResponse.properties.Documents.description" = "The documents in the specified folder."
"definitions.DescribeFolderContentsResponse.properties.Folders.$ref" = "#/definitions/FolderMetadataList"
"definitions.DescribeFolderContentsResponse.properties.Folders.description" = "The subfolders in the specified folder."
"definitions.DescribeFolderContentsResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeFolderContentsResponse.properties.Marker.description" = "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
"definitions.DescribeFolderContentsResponse.type" = "object"
"definitions.DescribeNotificationSubscriptionsRequest.type" = "object"
"definitions.DescribeNotificationSubscriptionsResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeNotificationSubscriptionsResponse.properties.Marker.description" = "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
"definitions.DescribeNotificationSubscriptionsResponse.properties.Subscriptions.$ref" = "#/definitions/SubscriptionList"
"definitions.DescribeNotificationSubscriptionsResponse.properties.Subscriptions.description" = "The subscriptions."
"definitions.DescribeNotificationSubscriptionsResponse.type" = "object"
"definitions.DescribeResourcePermissionsRequest.type" = "object"
"definitions.DescribeResourcePermissionsResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeResourcePermissionsResponse.properties.Marker.description" = "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
"definitions.DescribeResourcePermissionsResponse.properties.Principals.$ref" = "#/definitions/PrincipalList"
"definitions.DescribeResourcePermissionsResponse.properties.Principals.description" = "The principals."
"definitions.DescribeResourcePermissionsResponse.type" = "object"
"definitions.DescribeRootFoldersRequest.type" = "object"
"definitions.DescribeRootFoldersResponse.properties.Folders.$ref" = "#/definitions/FolderMetadataList"
"definitions.DescribeRootFoldersResponse.properties.Folders.description" = "The user's special folders."
"definitions.DescribeRootFoldersResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeRootFoldersResponse.properties.Marker.description" = "The marker for the next set of results."
"definitions.DescribeRootFoldersResponse.type" = "object"
"definitions.DescribeUsersRequest.type" = "object"
"definitions.DescribeUsersResponse.properties.Marker.$ref" = "#/definitions/PageMarkerType"
"definitions.DescribeUsersResponse.properties.Marker.description" = "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
"definitions.DescribeUsersResponse.properties.TotalNumberOfUsers.$ref" = "#/definitions/SizeType"
"definitions.DescribeUsersResponse.properties.TotalNumberOfUsers.description" = "The total number of users included in the results."
"definitions.DescribeUsersResponse.properties.Users.$ref" = "#/definitions/OrganizationUserList"
"definitions.DescribeUsersResponse.properties.Users.description" = "The users."
"definitions.DescribeUsersResponse.type" = "object"
"definitions.DocumentContentType.maxLength" = 128.0
"definitions.DocumentContentType.minLength" = 1.0
"definitions.DocumentContentType.type" = "string"
"definitions.DocumentLockedForCommentsException.description" = "This exception is thrown when the document is locked for comments and user tries to create or delete a comment on that document."
"definitions.DocumentLockedForCommentsException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.DocumentLockedForCommentsException.type" = "object"
"definitions.DocumentMetadata.description" = "Describes the document."
"definitions.DocumentMetadata.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentMetadata.properties.CreatedTimestamp.description" = "The time when the document was created."
"definitions.DocumentMetadata.properties.CreatorId.$ref" = "#/definitions/IdType"
"definitions.DocumentMetadata.properties.CreatorId.description" = "The ID of the creator."
"definitions.DocumentMetadata.properties.Id.$ref" = "#/definitions/ResourceIdType"
"definitions.DocumentMetadata.properties.Id.description" = "The ID of the document."
"definitions.DocumentMetadata.properties.Labels.$ref" = "#/definitions/Labels"
"definitions.DocumentMetadata.properties.Labels.description" = "List of labels on the document."
"definitions.DocumentMetadata.properties.LatestVersionMetadata.$ref" = "#/definitions/DocumentVersionMetadata"
"definitions.DocumentMetadata.properties.LatestVersionMetadata.description" = "The latest version of the document."
"definitions.DocumentMetadata.properties.ModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentMetadata.properties.ModifiedTimestamp.description" = "The time when the document was updated."
"definitions.DocumentMetadata.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.DocumentMetadata.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.DocumentMetadata.properties.ResourceState.$ref" = "#/definitions/ResourceStateType"
"definitions.DocumentMetadata.properties.ResourceState.description" = "The resource state."
"definitions.DocumentMetadata.type" = "object"
"definitions.DocumentMetadataList.items.$ref" = "#/definitions/DocumentMetadata"
"definitions.DocumentMetadataList.type" = "array"
"definitions.DocumentSourceType.enum.length" = 2
"definitions.DocumentSourceType.enum[0]" = "ORIGINAL"
"definitions.DocumentSourceType.enum[1]" = "WITH_COMMENTS"
"definitions.DocumentSourceType.type" = "string"
"definitions.DocumentSourceUrlMap.items.properties.key.$ref" = "#/definitions/DocumentSourceType"
"definitions.DocumentSourceUrlMap.items.properties.value.$ref" = "#/definitions/UrlType"
"definitions.DocumentSourceUrlMap.items.type" = "object"
"definitions.DocumentSourceUrlMap.type" = "array"
"definitions.DocumentStatusType.enum.length" = 2
"definitions.DocumentStatusType.enum[0]" = "INITIALIZED"
"definitions.DocumentStatusType.enum[1]" = "ACTIVE"
"definitions.DocumentStatusType.type" = "string"
"definitions.DocumentThumbnailType.enum.length" = 3
"definitions.DocumentThumbnailType.enum[0]" = "SMALL"
"definitions.DocumentThumbnailType.enum[1]" = "SMALL_HQ"
"definitions.DocumentThumbnailType.enum[2]" = "LARGE"
"definitions.DocumentThumbnailType.type" = "string"
"definitions.DocumentThumbnailUrlMap.items.properties.key.$ref" = "#/definitions/DocumentThumbnailType"
"definitions.DocumentThumbnailUrlMap.items.properties.value.$ref" = "#/definitions/UrlType"
"definitions.DocumentThumbnailUrlMap.items.type" = "object"
"definitions.DocumentThumbnailUrlMap.type" = "array"
"definitions.DocumentVersionIdType.maxLength" = 128.0
"definitions.DocumentVersionIdType.minLength" = 1.0
"definitions.DocumentVersionIdType.pattern" = "[\\w+-.@]+"
"definitions.DocumentVersionIdType.type" = "string"
"definitions.DocumentVersionMetadata.description" = "Describes a version of a document."
"definitions.DocumentVersionMetadata.properties.ContentCreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentVersionMetadata.properties.ContentCreatedTimestamp.description" = "The time stamp when the content of the document was originally created."
"definitions.DocumentVersionMetadata.properties.ContentModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentVersionMetadata.properties.ContentModifiedTimestamp.description" = "The time stamp when the content of the document was modified."
"definitions.DocumentVersionMetadata.properties.ContentType.$ref" = "#/definitions/DocumentContentType"
"definitions.DocumentVersionMetadata.properties.ContentType.description" = "The content type of the document."
"definitions.DocumentVersionMetadata.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentVersionMetadata.properties.CreatedTimestamp.description" = "The time stamp when the document was first uploaded."
"definitions.DocumentVersionMetadata.properties.CreatorId.$ref" = "#/definitions/IdType"
"definitions.DocumentVersionMetadata.properties.CreatorId.description" = "The ID of the creator."
"definitions.DocumentVersionMetadata.properties.Id.$ref" = "#/definitions/DocumentVersionIdType"
"definitions.DocumentVersionMetadata.properties.Id.description" = "The ID of the version."
"definitions.DocumentVersionMetadata.properties.ModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.DocumentVersionMetadata.properties.ModifiedTimestamp.description" = "The time stamp when the document was last uploaded."
"definitions.DocumentVersionMetadata.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.DocumentVersionMetadata.properties.Name.description" = "The name of the version."
"definitions.DocumentVersionMetadata.properties.Signature.$ref" = "#/definitions/HashType"
"definitions.DocumentVersionMetadata.properties.Signature.description" = "The signature of the document."
"definitions.DocumentVersionMetadata.properties.Size.$ref" = "#/definitions/SizeType"
"definitions.DocumentVersionMetadata.properties.Size.description" = "The size of the document, in bytes."
"definitions.DocumentVersionMetadata.properties.Source.$ref" = "#/definitions/DocumentSourceUrlMap"
"definitions.DocumentVersionMetadata.properties.Source.description" = "The source of the document."
"definitions.DocumentVersionMetadata.properties.Status.$ref" = "#/definitions/DocumentStatusType"
"definitions.DocumentVersionMetadata.properties.Status.description" = "The status of the document."
"definitions.DocumentVersionMetadata.properties.Thumbnail.$ref" = "#/definitions/DocumentThumbnailUrlMap"
"definitions.DocumentVersionMetadata.properties.Thumbnail.description" = "The thumbnail of the document."
"definitions.DocumentVersionMetadata.type" = "object"
"definitions.DocumentVersionMetadataList.items.$ref" = "#/definitions/DocumentVersionMetadata"
"definitions.DocumentVersionMetadataList.type" = "array"
"definitions.DocumentVersionStatus.enum.length" = 1
"definitions.DocumentVersionStatus.enum[0]" = "ACTIVE"
"definitions.DocumentVersionStatus.type" = "string"
"definitions.DraftUploadOutOfSyncException.description" = "This exception is thrown when a valid checkout ID is not presented on document version upload calls for a document that has been checked out from Web client."
"definitions.DraftUploadOutOfSyncException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.DraftUploadOutOfSyncException.type" = "object"
"definitions.EmailAddressType.maxLength" = 256.0
"definitions.EmailAddressType.minLength" = 1.0
"definitions.EmailAddressType.pattern" = "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
"definitions.EmailAddressType.type" = "string"
"definitions.EntityAlreadyExistsException.description" = "The resource already exists."
"definitions.EntityAlreadyExistsException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.EntityAlreadyExistsException.type" = "object"
"definitions.EntityIdList.items.$ref" = "#/definitions/IdType"
"definitions.EntityIdList.type" = "array"
"definitions.EntityNotExistsException.description" = "The resource does not exist."
"definitions.EntityNotExistsException.properties.EntityIds.$ref" = "#/definitions/EntityIdList"
"definitions.EntityNotExistsException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.EntityNotExistsException.type" = "object"
"definitions.ErrorMessageType.type" = "string"
"definitions.FailedDependencyException.description" = "The AWS Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected active directory."
"definitions.FailedDependencyException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.FailedDependencyException.type" = "object"
"definitions.FieldNamesType.maxLength" = 256.0
"definitions.FieldNamesType.minLength" = 1.0
"definitions.FieldNamesType.pattern" = "[\\w,]+"
"definitions.FieldNamesType.type" = "string"
"definitions.FolderContentType.enum.length" = 3
"definitions.FolderContentType.enum[0]" = "ALL"
"definitions.FolderContentType.enum[1]" = "DOCUMENT"
"definitions.FolderContentType.enum[2]" = "FOLDER"
"definitions.FolderContentType.type" = "string"
"definitions.FolderMetadata.description" = "Describes a folder."
"definitions.FolderMetadata.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.FolderMetadata.properties.CreatedTimestamp.description" = "The time when the folder was created."
"definitions.FolderMetadata.properties.CreatorId.$ref" = "#/definitions/IdType"
"definitions.FolderMetadata.properties.CreatorId.description" = "The ID of the creator."
"definitions.FolderMetadata.properties.Id.$ref" = "#/definitions/ResourceIdType"
"definitions.FolderMetadata.properties.Id.description" = "The ID of the folder."
"definitions.FolderMetadata.properties.Labels.$ref" = "#/definitions/Labels"
"definitions.FolderMetadata.properties.Labels.description" = "List of labels on the folder."
"definitions.FolderMetadata.properties.LatestVersionSize.$ref" = "#/definitions/SizeType"
"definitions.FolderMetadata.properties.LatestVersionSize.description" = "The size of the latest version of the folder metadata."
"definitions.FolderMetadata.properties.ModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.FolderMetadata.properties.ModifiedTimestamp.description" = "The time when the folder was updated."
"definitions.FolderMetadata.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.FolderMetadata.properties.Name.description" = "The name of the folder."
"definitions.FolderMetadata.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.FolderMetadata.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.FolderMetadata.properties.ResourceState.$ref" = "#/definitions/ResourceStateType"
"definitions.FolderMetadata.properties.ResourceState.description" = "The resource state of the folder."
"definitions.FolderMetadata.properties.Signature.$ref" = "#/definitions/HashType"
"definitions.FolderMetadata.properties.Signature.description" = "The unique identifier created from the subfolders and documents of the folder."
"definitions.FolderMetadata.properties.Size.$ref" = "#/definitions/SizeType"
"definitions.FolderMetadata.properties.Size.description" = "The size of the folder metadata."
"definitions.FolderMetadata.type" = "object"
"definitions.FolderMetadataList.items.$ref" = "#/definitions/FolderMetadata"
"definitions.FolderMetadataList.type" = "array"
"definitions.GetCurrentUserRequest.type" = "object"
"definitions.GetCurrentUserResponse.properties.User.$ref" = "#/definitions/User"
"definitions.GetCurrentUserResponse.properties.User.description" = "Metadata of the user."
"definitions.GetCurrentUserResponse.type" = "object"
"definitions.GetDocumentPathRequest.type" = "object"
"definitions.GetDocumentPathResponse.properties.Path.$ref" = "#/definitions/ResourcePath"
"definitions.GetDocumentPathResponse.properties.Path.description" = "The path information."
"definitions.GetDocumentPathResponse.type" = "object"
"definitions.GetDocumentRequest.type" = "object"
"definitions.GetDocumentResponse.properties.CustomMetadata.$ref" = "#/definitions/CustomMetadataMap"
"definitions.GetDocumentResponse.properties.CustomMetadata.description" = "The custom metadata on the document."
"definitions.GetDocumentResponse.properties.Metadata.$ref" = "#/definitions/DocumentMetadata"
"definitions.GetDocumentResponse.properties.Metadata.description" = "The metadata details of the document."
"definitions.GetDocumentResponse.type" = "object"
"definitions.GetDocumentVersionRequest.type" = "object"
"definitions.GetDocumentVersionResponse.properties.CustomMetadata.$ref" = "#/definitions/CustomMetadataMap"
"definitions.GetDocumentVersionResponse.properties.CustomMetadata.description" = "The custom metadata on the document version."
"definitions.GetDocumentVersionResponse.properties.Metadata.$ref" = "#/definitions/DocumentVersionMetadata"
"definitions.GetDocumentVersionResponse.properties.Metadata.description" = "The version metadata."
"definitions.GetDocumentVersionResponse.type" = "object"
"definitions.GetFolderPathRequest.type" = "object"
"definitions.GetFolderPathResponse.properties.Path.$ref" = "#/definitions/ResourcePath"
"definitions.GetFolderPathResponse.properties.Path.description" = "The path information."
"definitions.GetFolderPathResponse.type" = "object"
"definitions.GetFolderRequest.type" = "object"
"definitions.GetFolderResponse.properties.CustomMetadata.$ref" = "#/definitions/CustomMetadataMap"
"definitions.GetFolderResponse.properties.CustomMetadata.description" = "The custom metadata on the folder."
"definitions.GetFolderResponse.properties.Metadata.$ref" = "#/definitions/FolderMetadata"
"definitions.GetFolderResponse.properties.Metadata.description" = "The metadata of the folder."
"definitions.GetFolderResponse.type" = "object"
"definitions.GroupMetadata.description" = "Describes the metadata of a user group."
"definitions.GroupMetadata.properties.Id.$ref" = "#/definitions/IdType"
"definitions.GroupMetadata.properties.Id.description" = "The ID of the user group."
"definitions.GroupMetadata.properties.Name.$ref" = "#/definitions/GroupNameType"
"definitions.GroupMetadata.properties.Name.description" = "The name of the group."
"definitions.GroupMetadata.type" = "object"
"definitions.GroupMetadataList.items.$ref" = "#/definitions/GroupMetadata"
"definitions.GroupMetadataList.type" = "array"
"definitions.GroupNameType.type" = "string"
"definitions.HashType.maxLength" = 128.0
"definitions.HashType.minLength" = 0.0
"definitions.HashType.pattern" = "[&\\w+-.@]+"
"definitions.HashType.type" = "string"
"definitions.HeaderNameType.maxLength" = 256.0
"definitions.HeaderNameType.minLength" = 1.0
"definitions.HeaderNameType.pattern" = "[\\w-]+"
"definitions.HeaderNameType.type" = "string"
"definitions.HeaderValueType.maxLength" = 1024.0
"definitions.HeaderValueType.minLength" = 1.0
"definitions.HeaderValueType.type" = "string"
"definitions.IdType.maxLength" = 256.0
"definitions.IdType.minLength" = 1.0
"definitions.IdType.pattern" = "[&\\w+-.@]+"
"definitions.IdType.type" = "string"
"definitions.IllegalUserStateException.description" = "The user is undergoing transfer of ownership."
"definitions.IllegalUserStateException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.IllegalUserStateException.type" = "object"
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentCreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentCreatedTimestamp.description" = "The time stamp when the content of the document was originally created."
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentModifiedTimestamp.description" = "The time stamp when the content of the document was modified."
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentType.$ref" = "#/definitions/DocumentContentType"
"definitions.InitiateDocumentVersionUploadRequest.properties.ContentType.description" = "The content type of the document."
"definitions.InitiateDocumentVersionUploadRequest.properties.DocumentSizeInBytes.$ref" = "#/definitions/SizeType"
"definitions.InitiateDocumentVersionUploadRequest.properties.DocumentSizeInBytes.description" = "The size of the document, in bytes."
"definitions.InitiateDocumentVersionUploadRequest.properties.Id.$ref" = "#/definitions/ResourceIdType"
"definitions.InitiateDocumentVersionUploadRequest.properties.Id.description" = "The ID of the document."
"definitions.InitiateDocumentVersionUploadRequest.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.InitiateDocumentVersionUploadRequest.properties.Name.description" = "The name of the document."
"definitions.InitiateDocumentVersionUploadRequest.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.InitiateDocumentVersionUploadRequest.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.InitiateDocumentVersionUploadRequest.required.length" = 1
"definitions.InitiateDocumentVersionUploadRequest.required[0]" = "ParentFolderId"
"definitions.InitiateDocumentVersionUploadRequest.type" = "object"
"definitions.InitiateDocumentVersionUploadResponse.properties.Metadata.$ref" = "#/definitions/DocumentMetadata"
"definitions.InitiateDocumentVersionUploadResponse.properties.Metadata.description" = "The document metadata."
"definitions.InitiateDocumentVersionUploadResponse.properties.UploadMetadata.$ref" = "#/definitions/UploadMetadata"
"definitions.InitiateDocumentVersionUploadResponse.properties.UploadMetadata.description" = "The upload metadata."
"definitions.InitiateDocumentVersionUploadResponse.type" = "object"
"definitions.InvalidArgumentException.description" = "The pagination marker and/or limit fields are not valid."
"definitions.InvalidArgumentException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.InvalidArgumentException.type" = "object"
"definitions.InvalidOperationException.description" = "The operation is invalid."
"definitions.InvalidOperationException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.InvalidOperationException.type" = "object"
"definitions.Label.maxLength" = 32.0
"definitions.Label.minLength" = 1.0
"definitions.Label.pattern" = "[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*"
"definitions.Label.type" = "string"
"definitions.Labels.items.$ref" = "#/definitions/Label"
"definitions.Labels.maxItems" = 20.0
"definitions.Labels.type" = "array"
"definitions.LimitExceededException.description" = "The maximum of 100,000 folders under the parent folder has been exceeded."
"definitions.LimitExceededException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.LimitExceededException.type" = "object"
"definitions.LimitType.maximum" = 999.0
"definitions.LimitType.minimum" = 1.0
"definitions.LimitType.type" = "integer"
"definitions.LocaleType.enum.length" = 11
"definitions.LocaleType.enum[0]" = "en"
"definitions.LocaleType.enum[10]" = "default"
"definitions.LocaleType.enum[1]" = "fr"
"definitions.LocaleType.enum[2]" = "ko"
"definitions.LocaleType.enum[3]" = "de"
"definitions.LocaleType.enum[4]" = "es"
"definitions.LocaleType.enum[5]" = "ja"
"definitions.LocaleType.enum[6]" = "ru"
"definitions.LocaleType.enum[7]" = "zh_CN"
"definitions.LocaleType.enum[8]" = "zh_TW"
"definitions.LocaleType.enum[9]" = "pt_BR"
"definitions.LocaleType.type" = "string"
"definitions.MarkerType.maxLength" = 2048.0
"definitions.MarkerType.minLength" = 1.0
"definitions.MarkerType.pattern" = "[\\u0000-\\u00FF]+"
"definitions.MarkerType.type" = "string"
"definitions.MessageType.format" = "password"
"definitions.MessageType.maxLength" = 2048.0
"definitions.MessageType.minLength" = 0.0
"definitions.MessageType.type" = "string"
"definitions.OrderType.enum.length" = 2
"definitions.OrderType.enum[0]" = "ASCENDING"
"definitions.OrderType.enum[1]" = "DESCENDING"
"definitions.OrderType.type" = "string"
"definitions.OrganizationUserList.items.$ref" = "#/definitions/User"
"definitions.OrganizationUserList.type" = "array"
"definitions.PageMarkerType.maxLength" = 2048.0
"definitions.PageMarkerType.minLength" = 1.0
"definitions.PageMarkerType.type" = "string"
"definitions.Participants.description" = "Describes the users and/or user groups."
"definitions.Participants.properties.Groups.$ref" = "#/definitions/GroupMetadataList"
"definitions.Participants.properties.Groups.description" = "The list of user groups."
"definitions.Participants.properties.Users.$ref" = "#/definitions/UserMetadataList"
"definitions.Participants.properties.Users.description" = "The list of users."
"definitions.Participants.type" = "object"
"definitions.PasswordType.format" = "password"
"definitions.PasswordType.maxLength" = 32.0
"definitions.PasswordType.minLength" = 4.0
"definitions.PasswordType.pattern" = "[\\u0020-\\u00FF]+"
"definitions.PasswordType.type" = "string"
"definitions.PermissionInfo.description" = "Describes the permissions."
"definitions.PermissionInfo.properties.Role.$ref" = "#/definitions/RoleType"
"definitions.PermissionInfo.properties.Role.description" = "The role of the user."
"definitions.PermissionInfo.properties.Type.$ref" = "#/definitions/RolePermissionType"
"definitions.PermissionInfo.properties.Type.description" = "The type of permissions."
"definitions.PermissionInfo.type" = "object"
"definitions.PermissionInfoList.items.$ref" = "#/definitions/PermissionInfo"
"definitions.PermissionInfoList.type" = "array"
"definitions.PositiveSizeType.minimum" = 0.0
"definitions.PositiveSizeType.type" = "integer"
"definitions.Principal.description" = "Describes a resource."
"definitions.Principal.properties.Id.$ref" = "#/definitions/IdType"
"definitions.Principal.properties.Id.description" = "The ID of the resource."
"definitions.Principal.properties.Roles.$ref" = "#/definitions/PermissionInfoList"
"definitions.Principal.properties.Roles.description" = "The permission information for the resource."
"definitions.Principal.properties.Type.$ref" = "#/definitions/PrincipalType"
"definitions.Principal.properties.Type.description" = "The type of resource."
"definitions.Principal.type" = "object"
"definitions.PrincipalList.items.$ref" = "#/definitions/Principal"
"definitions.PrincipalList.type" = "array"
"definitions.PrincipalType.enum.length" = 5
"definitions.PrincipalType.enum[0]" = "USER"
"definitions.PrincipalType.enum[1]" = "GROUP"
"definitions.PrincipalType.enum[2]" = "INVITE"
"definitions.PrincipalType.enum[3]" = "ANONYMOUS"
"definitions.PrincipalType.enum[4]" = "ORGANIZATION"
"definitions.PrincipalType.type" = "string"
"definitions.ProhibitedStateException.description" = "The specified document version is not in the INITIALIZED state."
"definitions.ProhibitedStateException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.ProhibitedStateException.type" = "object"
"definitions.RemoveAllResourcePermissionsRequest.type" = "object"
"definitions.RemoveResourcePermissionRequest.type" = "object"
"definitions.ResourceAlreadyCheckedOutException.description" = "The resource is already checked out."
"definitions.ResourceAlreadyCheckedOutException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.ResourceAlreadyCheckedOutException.type" = "object"
"definitions.ResourceIdType.maxLength" = 128.0
"definitions.ResourceIdType.minLength" = 1.0
"definitions.ResourceIdType.pattern" = "[\\w+-.@]+"
"definitions.ResourceIdType.type" = "string"
"definitions.ResourceMetadata.description" = "Describes the metadata of a resource."
"definitions.ResourceMetadata.properties.Id.$ref" = "#/definitions/ResourceIdType"
"definitions.ResourceMetadata.properties.Id.description" = "The ID of the resource."
"definitions.ResourceMetadata.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.ResourceMetadata.properties.Name.description" = "The name of the resource."
"definitions.ResourceMetadata.properties.OriginalName.$ref" = "#/definitions/ResourceNameType"
"definitions.ResourceMetadata.properties.OriginalName.description" = "The original name of the resource prior to a rename operation."
"definitions.ResourceMetadata.properties.Owner.$ref" = "#/definitions/UserMetadata"
"definitions.ResourceMetadata.properties.Owner.description" = "The owner of the resource."
"definitions.ResourceMetadata.properties.ParentId.$ref" = "#/definitions/ResourceIdType"
"definitions.ResourceMetadata.properties.ParentId.description" = "The parent ID of the resource before a rename operation."
"definitions.ResourceMetadata.properties.Type.$ref" = "#/definitions/ResourceType"
"definitions.ResourceMetadata.properties.Type.description" = "The type of resource."
"definitions.ResourceMetadata.properties.VersionId.$ref" = "#/definitions/DocumentVersionIdType"
"definitions.ResourceMetadata.properties.VersionId.description" = "The version ID of the resource. This is an optional field and is filled for action on document version."
"definitions.ResourceMetadata.type" = "object"
"definitions.ResourceNameType.maxLength" = 255.0
"definitions.ResourceNameType.minLength" = 1.0
"definitions.ResourceNameType.pattern" = "[\\u0020-\\u202D\\u202F-\\uFFFF]+"
"definitions.ResourceNameType.type" = "string"
"definitions.ResourcePath.description" = "Describes the path information of a resource."
"definitions.ResourcePath.properties.Components.$ref" = "#/definitions/ResourcePathComponentList"
"definitions.ResourcePath.properties.Components.description" = "The components of the resource path."
"definitions.ResourcePath.type" = "object"
"definitions.ResourcePathComponent.description" = "Describes the resource path."
"definitions.ResourcePathComponent.properties.Id.$ref" = "#/definitions/IdType"
"definitions.ResourcePathComponent.properties.Id.description" = "The ID of the resource path."
"definitions.ResourcePathComponent.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.ResourcePathComponent.properties.Name.description" = "The name of the resource path."
"definitions.ResourcePathComponent.type" = "object"
"definitions.ResourcePathComponentList.items.$ref" = "#/definitions/ResourcePathComponent"
"definitions.ResourcePathComponentList.type" = "array"
"definitions.ResourceSortType.enum.length" = 2
"definitions.ResourceSortType.enum[0]" = "DATE"
"definitions.ResourceSortType.enum[1]" = "NAME"
"definitions.ResourceSortType.type" = "string"
"definitions.ResourceStateType.enum.length" = 4
"definitions.ResourceStateType.enum[0]" = "ACTIVE"
"definitions.ResourceStateType.enum[1]" = "RESTORING"
"definitions.ResourceStateType.enum[2]" = "RECYCLING"
"definitions.ResourceStateType.enum[3]" = "RECYCLED"
"definitions.ResourceStateType.type" = "string"
"definitions.ResourceType.enum.length" = 2
"definitions.ResourceType.enum[0]" = "FOLDER"
"definitions.ResourceType.enum[1]" = "DOCUMENT"
"definitions.ResourceType.type" = "string"
"definitions.RolePermissionType.enum.length" = 2
"definitions.RolePermissionType.enum[0]" = "DIRECT"
"definitions.RolePermissionType.enum[1]" = "INHERITED"
"definitions.RolePermissionType.type" = "string"
"definitions.RoleType.enum.length" = 4
"definitions.RoleType.enum[0]" = "VIEWER"
"definitions.RoleType.enum[1]" = "CONTRIBUTOR"
"definitions.RoleType.enum[2]" = "OWNER"
"definitions.RoleType.enum[3]" = "COOWNER"
"definitions.RoleType.type" = "string"
"definitions.SearchQueryType.format" = "password"
"definitions.SearchQueryType.maxLength" = 512.0
"definitions.SearchQueryType.minLength" = 1.0
"definitions.SearchQueryType.pattern" = "[\\u0020-\\uFFFF]+"
"definitions.SearchQueryType.type" = "string"
"definitions.ServiceUnavailableException.description" = "One or more of the dependencies is unavailable."
"definitions.ServiceUnavailableException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.ServiceUnavailableException.type" = "object"
"definitions.SharePrincipal.description" = "Describes the recipient type and ID, if available."
"definitions.SharePrincipal.properties.Id.$ref" = "#/definitions/IdType"
"definitions.SharePrincipal.properties.Id.description" = "The ID of the recipient."
"definitions.SharePrincipal.properties.Role.$ref" = "#/definitions/RoleType"
"definitions.SharePrincipal.properties.Role.description" = "The role of the recipient."
"definitions.SharePrincipal.properties.Type.$ref" = "#/definitions/PrincipalType"
"definitions.SharePrincipal.properties.Type.description" = "The type of the recipient."
"definitions.SharePrincipal.required.length" = 3
"definitions.SharePrincipal.required[0]" = "Id"
"definitions.SharePrincipal.required[1]" = "Type"
"definitions.SharePrincipal.required[2]" = "Role"
"definitions.SharePrincipal.type" = "object"
"definitions.SharePrincipalList.items.$ref" = "#/definitions/SharePrincipal"
"definitions.SharePrincipalList.type" = "array"
"definitions.ShareResult.description" = "Describes the share results of a resource."
"definitions.ShareResult.properties.PrincipalId.$ref" = "#/definitions/IdType"
"definitions.ShareResult.properties.PrincipalId.description" = "The ID of the principal."
"definitions.ShareResult.properties.Role.$ref" = "#/definitions/RoleType"
"definitions.ShareResult.properties.Role.description" = "The role."
"definitions.ShareResult.properties.ShareId.$ref" = "#/definitions/ResourceIdType"
"definitions.ShareResult.properties.ShareId.description" = "The ID of the resource that was shared."
"definitions.ShareResult.properties.Status.$ref" = "#/definitions/ShareStatusType"
"definitions.ShareResult.properties.Status.description" = "The status."
"definitions.ShareResult.properties.StatusMessage.$ref" = "#/definitions/MessageType"
"definitions.ShareResult.properties.StatusMessage.description" = "The status message."
"definitions.ShareResult.type" = "object"
"definitions.ShareResultsList.items.$ref" = "#/definitions/ShareResult"
"definitions.ShareResultsList.type" = "array"
"definitions.ShareStatusType.enum.length" = 2
"definitions.ShareStatusType.enum[0]" = "SUCCESS"
"definitions.ShareStatusType.enum[1]" = "FAILURE"
"definitions.ShareStatusType.type" = "string"
"definitions.SignedHeaderMap.items.properties.key.$ref" = "#/definitions/HeaderNameType"
"definitions.SignedHeaderMap.items.properties.value.$ref" = "#/definitions/HeaderValueType"
"definitions.SignedHeaderMap.items.type" = "object"
"definitions.SignedHeaderMap.type" = "array"
"definitions.SizeType.type" = "integer"
"definitions.StorageLimitExceededException.description" = "The storage limit has been exceeded."
"definitions.StorageLimitExceededException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.StorageLimitExceededException.type" = "object"
"definitions.StorageLimitWillExceedException.description" = "The storage limit will be exceeded."
"definitions.StorageLimitWillExceedException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.StorageLimitWillExceedException.type" = "object"
"definitions.StorageRuleType.description" = "Describes the storage for a user."
"definitions.StorageRuleType.properties.StorageAllocatedInBytes.$ref" = "#/definitions/PositiveSizeType"
"definitions.StorageRuleType.properties.StorageAllocatedInBytes.description" = "The amount of storage allocated, in bytes."
"definitions.StorageRuleType.properties.StorageType.$ref" = "#/definitions/StorageType"
"definitions.StorageRuleType.properties.StorageType.description" = "The type of storage."
"definitions.StorageRuleType.type" = "object"
"definitions.StorageType.enum.length" = 2
"definitions.StorageType.enum[0]" = "UNLIMITED"
"definitions.StorageType.enum[1]" = "QUOTA"
"definitions.StorageType.type" = "string"
"definitions.Subscription.description" = "Describes a subscription."
"definitions.Subscription.properties.EndPoint.$ref" = "#/definitions/SubscriptionEndPointType"
"definitions.Subscription.properties.EndPoint.description" = "The endpoint of the subscription."
"definitions.Subscription.properties.Protocol.$ref" = "#/definitions/SubscriptionProtocolType"
"definitions.Subscription.properties.Protocol.description" = "The protocol of the subscription."
"definitions.Subscription.properties.SubscriptionId.$ref" = "#/definitions/IdType"
"definitions.Subscription.properties.SubscriptionId.description" = "The ID of the subscription."
"definitions.Subscription.type" = "object"
"definitions.SubscriptionEndPointType.maxLength" = 256.0
"definitions.SubscriptionEndPointType.minLength" = 1.0
"definitions.SubscriptionEndPointType.type" = "string"
"definitions.SubscriptionList.items.$ref" = "#/definitions/Subscription"
"definitions.SubscriptionList.maxItems" = 256.0
"definitions.SubscriptionList.type" = "array"
"definitions.SubscriptionProtocolType.enum.length" = 1
"definitions.SubscriptionProtocolType.enum[0]" = "HTTPS"
"definitions.SubscriptionProtocolType.type" = "string"
"definitions.SubscriptionType.enum.length" = 1
"definitions.SubscriptionType.enum[0]" = "ALL"
"definitions.SubscriptionType.type" = "string"
"definitions.TimeZoneIdType.maxLength" = 256.0
"definitions.TimeZoneIdType.minLength" = 1.0
"definitions.TimeZoneIdType.type" = "string"
"definitions.TimestampType.format" = "date-time"
"definitions.TimestampType.type" = "string"
"definitions.TooManyLabelsException.description" = "The limit has been reached on the number of labels for the specified resource."
"definitions.TooManyLabelsException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.TooManyLabelsException.type" = "object"
"definitions.TooManySubscriptionsException.description" = "You've reached the limit on the number of subscriptions for the WorkDocs instance."
"definitions.TooManySubscriptionsException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.TooManySubscriptionsException.type" = "object"
"definitions.UnauthorizedOperationException.description" = "The operation is not permitted."
"definitions.UnauthorizedOperationException.type" = "object"
"definitions.UnauthorizedResourceAccessException.description" = "The caller does not have access to perform the action on the resource."
"definitions.UnauthorizedResourceAccessException.properties.Message.$ref" = "#/definitions/ErrorMessageType"
"definitions.UnauthorizedResourceAccessException.type" = "object"
"definitions.UpdateDocumentRequest.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.UpdateDocumentRequest.properties.Name.description" = "The name of the document."
"definitions.UpdateDocumentRequest.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.UpdateDocumentRequest.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.UpdateDocumentRequest.properties.ResourceState.$ref" = "#/definitions/ResourceStateType"
"definitions.UpdateDocumentRequest.properties.ResourceState.description" = "The resource state of the document. Note that only ACTIVE and RECYCLED are supported."
"definitions.UpdateDocumentRequest.type" = "object"
"definitions.UpdateDocumentVersionRequest.properties.VersionStatus.$ref" = "#/definitions/DocumentVersionStatus"
"definitions.UpdateDocumentVersionRequest.properties.VersionStatus.description" = "The status of the version."
"definitions.UpdateDocumentVersionRequest.type" = "object"
"definitions.UpdateFolderRequest.properties.Name.$ref" = "#/definitions/ResourceNameType"
"definitions.UpdateFolderRequest.properties.Name.description" = "The name of the folder."
"definitions.UpdateFolderRequest.properties.ParentFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.UpdateFolderRequest.properties.ParentFolderId.description" = "The ID of the parent folder."
"definitions.UpdateFolderRequest.properties.ResourceState.$ref" = "#/definitions/ResourceStateType"
"definitions.UpdateFolderRequest.properties.ResourceState.description" = "The resource state of the folder. Note that only ACTIVE and RECYCLED are accepted values from the API."
"definitions.UpdateFolderRequest.type" = "object"
"definitions.UpdateUserRequest.properties.GivenName.$ref" = "#/definitions/UserAttributeValueType"
"definitions.UpdateUserRequest.properties.GivenName.description" = "The given name of the user."
"definitions.UpdateUserRequest.properties.Locale.$ref" = "#/definitions/LocaleType"
"definitions.UpdateUserRequest.properties.Locale.description" = "The locale of the user."
"definitions.UpdateUserRequest.properties.StorageRule.$ref" = "#/definitions/StorageRuleType"
"definitions.UpdateUserRequest.properties.StorageRule.description" = "The amount of storage for the user."
"definitions.UpdateUserRequest.properties.Surname.$ref" = "#/definitions/UserAttributeValueType"
"definitions.UpdateUserRequest.properties.Surname.description" = "The surname of the user."
"definitions.UpdateUserRequest.properties.TimeZoneId.$ref" = "#/definitions/TimeZoneIdType"
"definitions.UpdateUserRequest.properties.TimeZoneId.description" = "The time zone ID of the user."
"definitions.UpdateUserRequest.properties.Type.$ref" = "#/definitions/UserType"
"definitions.UpdateUserRequest.properties.Type.description" = "The type of the user."
"definitions.UpdateUserRequest.type" = "object"
"definitions.UpdateUserResponse.properties.User.$ref" = "#/definitions/User"
"definitions.UpdateUserResponse.properties.User.description" = "The user information."
"definitions.UpdateUserResponse.type" = "object"
"definitions.UploadMetadata.description" = "Describes the upload."
"definitions.UploadMetadata.properties.SignedHeaders.$ref" = "#/definitions/SignedHeaderMap"
"definitions.UploadMetadata.properties.SignedHeaders.description" = "The signed headers."
"definitions.UploadMetadata.properties.UploadUrl.$ref" = "#/definitions/UrlType"
"definitions.UploadMetadata.properties.UploadUrl.description" = "The URL of the upload."
"definitions.UploadMetadata.type" = "object"
"definitions.UrlType.format" = "password"
"definitions.UrlType.maxLength" = 1024.0
"definitions.UrlType.minLength" = 1.0
"definitions.UrlType.type" = "string"
"definitions.User.description" = "Describes a user."
"definitions.User.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.User.properties.CreatedTimestamp.description" = "The time when the user was created."
"definitions.User.properties.EmailAddress.$ref" = "#/definitions/EmailAddressType"
"definitions.User.properties.EmailAddress.description" = "The email address of the user."
"definitions.User.properties.GivenName.$ref" = "#/definitions/UserAttributeValueType"
"definitions.User.properties.GivenName.description" = "The given name of the user."
"definitions.User.properties.Id.$ref" = "#/definitions/IdType"
"definitions.User.properties.Id.description" = "The ID of the user."
"definitions.User.properties.Locale.$ref" = "#/definitions/LocaleType"
"definitions.User.properties.Locale.description" = "The locale of the user."
"definitions.User.properties.ModifiedTimestamp.$ref" = "#/definitions/TimestampType"
"definitions.User.properties.ModifiedTimestamp.description" = "The time when the user was modified."
"definitions.User.properties.OrganizationId.$ref" = "#/definitions/IdType"
"definitions.User.properties.OrganizationId.description" = "The ID of the organization."
"definitions.User.properties.RecycleBinFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.User.properties.RecycleBinFolderId.description" = "The ID of the recycle bin folder."
"definitions.User.properties.RootFolderId.$ref" = "#/definitions/ResourceIdType"
"definitions.User.properties.RootFolderId.description" = "The ID of the root folder."
"definitions.User.properties.Status.$ref" = "#/definitions/UserStatusType"
"definitions.User.properties.Status.description" = "The status of the user."
"definitions.User.properties.Storage.$ref" = "#/definitions/UserStorageMetadata"
"definitions.User.properties.Storage.description" = "The storage for the user."
"definitions.User.properties.Surname.$ref" = "#/definitions/UserAttributeValueType"
"definitions.User.properties.Surname.description" = "The surname of the user."
"definitions.User.properties.TimeZoneId.$ref" = "#/definitions/TimeZoneIdType"
"definitions.User.properties.TimeZoneId.description" = "The time zone ID of the user."
"definitions.User.properties.Type.$ref" = "#/definitions/UserType"
"definitions.User.properties.Type.description" = "The type of user."
"definitions.User.properties.Username.$ref" = "#/definitions/UsernameType"
"definitions.User.properties.Username.description" = "The login name of the user."
"definitions.User.type" = "object"
"definitions.UserActivities.items.$ref" = "#/definitions/Activity"
"definitions.UserActivities.type" = "array"
"definitions.UserAttributeValueType.maxLength" = 64.0
"definitions.UserAttributeValueType.minLength" = 1.0
"definitions.UserAttributeValueType.type" = "string"
"definitions.UserFilterType.enum.length" = 2
"definitions.UserFilterType.enum[0]" = "ALL"
"definitions.UserFilterType.enum[1]" = "ACTIVE_PENDING"
"definitions.UserFilterType.type" = "string"
"definitions.UserIdsType.maxLength" = 2000.0
"definitions.UserIdsType.minLength" = 1.0
"definitions.UserIdsType.pattern" = "[&\\w+-.@, ]+"
"definitions.UserIdsType.type" = "string"
"definitions.UserMetadata.description" = "Describes the metadata of the user."
"definitions.UserMetadata.properties.EmailAddress.$ref" = "#/definitions/EmailAddressType"
"definitions.UserMetadata.properties.EmailAddress.description" = "The email address of the user."
"definitions.UserMetadata.properties.GivenName.$ref" = "#/definitions/UserAttributeValueType"
"definitions.UserMetadata.properties.GivenName.description" = "The given name of the user before a rename operation."
"definitions.UserMetadata.properties.Id.$ref" = "#/definitions/IdType"
"definitions.UserMetadata.properties.Id.description" = "The ID of the user."
"definitions.UserMetadata.properties.Surname.$ref" = "#/definitions/UserAttributeValueType"
"definitions.UserMetadata.properties.Surname.description" = "The surname of the user."
"definitions.UserMetadata.properties.Username.$ref" = "#/definitions/UsernameType"
"definitions.UserMetadata.properties.Username.description" = "The username of the user."
"definitions.UserMetadata.type" = "object"
"definitions.UserMetadataList.items.$ref" = "#/definitions/UserMetadata"
"definitions.UserMetadataList.type" = "array"
"definitions.UserSortType.enum.length" = 5
"definitions.UserSortType.enum[0]" = "USER_NAME"
"definitions.UserSortType.enum[1]" = "FULL_NAME"
"definitions.UserSortType.enum[2]" = "STORAGE_LIMIT"
"definitions.UserSortType.enum[3]" = "USER_STATUS"
"definitions.UserSortType.enum[4]" = "STORAGE_USED"
"definitions.UserSortType.type" = "string"
"definitions.UserStatusType.enum.length" = 3
"definitions.UserStatusType.enum[0]" = "ACTIVE"
"definitions.UserStatusType.enum[1]" = "INACTIVE"
"definitions.UserStatusType.enum[2]" = "PENDING"
"definitions.UserStatusType.type" = "string"
"definitions.UserStorageMetadata.description" = "Describes the storage for a user."
"definitions.UserStorageMetadata.properties.StorageRule.$ref" = "#/definitions/StorageRuleType"
"definitions.UserStorageMetadata.properties.StorageRule.description" = "The storage for a user."
"definitions.UserStorageMetadata.properties.StorageUtilizedInBytes.$ref" = "#/definitions/SizeType"
"definitions.UserStorageMetadata.properties.StorageUtilizedInBytes.description" = "The amount of storage utilized, in bytes."
"definitions.UserStorageMetadata.type" = "object"
"definitions.UserType.enum.length" = 2
"definitions.UserType.enum[0]" = "USER"
"definitions.UserType.enum[1]" = "ADMIN"
"definitions.UserType.type" = "string"
"definitions.UsernameType.maxLength" = 256.0
"definitions.UsernameType.minLength" = 1.0
"definitions.UsernameType.pattern" = "[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?"
"definitions.UsernameType.type" = "string"
"externalDocs.description" = "Amazon Web Services documentation"
"externalDocs.url" = "https://aws.amazon.com/workdocs/"
host = "workdocs.amazonaws.com"
"info.contact.email" = "mike.ralphson@gmail.com"
"info.contact.name" = "Mike Ralphson"
"info.contact.url" = "https://github.com/mermade/aws2openapi"
"info.description" = "<p>The WorkDocs API is designed for the following use cases:</p> <ul> <li> <p>File Migration: File migration applications are supported for users who want to migrate their files from an on-premise or off-premise file system or service. Users can insert files into a user directory structure, as well as allow for basic metadata changes, such as modifications to the permissions of files.</p> </li> <li> <p>Security: Support security applications are supported for users who have additional security needs, such as anti-virus or data loss prevention. The APIs, in conjunction with Amazon CloudTrail, allow these applications to detect when changes occur in Amazon WorkDocs, so the application can take the necessary actions and replace the target file. The application can also choose to email the user if the target file violates the policy.</p> </li> <li> <p>eDiscovery/Analytics: General administrative applications are supported, such as eDiscovery and analytics. These applications can choose to mimic and/or record the actions in an Amazon WorkDocs site, in conjunction with Amazon CloudTrails, to replicate data for eDiscovery, backup, or analytical applications.</p> </li> </ul> <p>All Amazon WorkDocs APIs are Amazon authenticated, certificate-signed APIs. They not only require the use of the AWS SDK, but also allow for the exclusive use of IAM users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the Amazon WorkDocs site, the IAM user gains full administrative visibility into the entire Amazon WorkDocs site (or as set in the IAM policy). This includes, but is not limited to, the ability to modify file permissions and upload any file to any user. This allows developers to perform the three use cases above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>"
"info.license.name" = "Apache 2.0 License"
"info.license.url" = "http://www.apache.org/licenses/"
"info.termsOfService" = "https://aws.amazon.com/service-terms/"
"info.title" = "Amazon WorkDocs"
"info.version" = "2016-05-01"
"info.x-apiClientRegistration.url" = "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
"info.x-origin.length" = 1
"info.x-origin[0].contentType" = "application/json"
"info.x-origin[0].converter.url" = "https://github.com/mermade/aws2openapi"
"info.x-origin[0].converter.version" = "1.0.0"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workdocs-2016-05-01.normal.json"
"info.x-origin[0].x-apisguru-direct" = true
"info.x-preferred" = true
"info.x-providerName" = "amazonaws.com"
"info.x-release" = "v4"
"info.x-serviceName" = "workdocs"
"parameters.Action.in" = "header"
"parameters.Action.name" = "Action"
"parameters.Action.required" = true
"parameters.Action.type" = "string"
"parameters.Version.in" = "header"
"parameters.Version.name" = "Version"
"parameters.Version.required" = true
"parameters.Version.type" = "string"
"parameters.X-Amz-Algorithm.in" = "header"
"parameters.X-Amz-Algorithm.name" = "X-Amz-Algorithm"
"parameters.X-Amz-Algorithm.required" = false
"parameters.X-Amz-Algorithm.type" = "string"
"parameters.X-Amz-Content-Sha256.in" = "header"
"parameters.X-Amz-Content-Sha256.name" = "X-Amz-Content-Sha256"
"parameters.X-Amz-Content-Sha256.required" = false
"parameters.X-Amz-Content-Sha256.type" = "string"
"parameters.X-Amz-Credential.in" = "header"
"parameters.X-Amz-Credential.name" = "X-Amz-Credential"
"parameters.X-Amz-Credential.required" = false
"parameters.X-Amz-Credential.type" = "string"
"parameters.X-Amz-Date.in" = "header"
"parameters.X-Amz-Date.name" = "X-Amz-Date"
"parameters.X-Amz-Date.required" = false
"parameters.X-Amz-Date.type" = "string"
"parameters.X-Amz-Security-Token.in" = "header"
"parameters.X-Amz-Security-Token.name" = "X-Amz-Security-Token"
"parameters.X-Amz-Security-Token.required" = false
"parameters.X-Amz-Security-Token.type" = "string"
"parameters.X-Amz-Signature.in" = "header"
"parameters.X-Amz-Signature.name" = "X-Amz-Signature"
"parameters.X-Amz-Signature.required" = false
"parameters.X-Amz-Signature.type" = "string"
"parameters.X-Amz-SignedHeaders.in" = "header"
"parameters.X-Amz-SignedHeaders.name" = "X-Amz-SignedHeaders"
"parameters.X-Amz-SignedHeaders.required" = false
"parameters.X-Amz-SignedHeaders.type" = "string"
"paths./api/v1/activities.get.description" = "Describes the user activities in a specified time period."
"paths./api/v1/activities.get.operationId" = "DescribeActivities"
"paths./api/v1/activities.get.parameters.length" = 1
"paths./api/v1/activities.get.parameters[0].in" = "body"
"paths./api/v1/activities.get.parameters[0].name" = "body"
"paths./api/v1/activities.get.parameters[0].required" = true
"paths./api/v1/activities.get.parameters[0].schema.$ref" = "#/definitions/DescribeActivitiesRequest"
"paths./api/v1/activities.get.responses.200.description" = "Success"
"paths./api/v1/activities.get.responses.200.schema.$ref" = "#/definitions/DescribeActivitiesResponse"
"paths./api/v1/activities.get.responses.480.description" = "UnauthorizedOperationException"
"paths./api/v1/activities.get.responses.480.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/activities.get.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/activities.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/activities.get.responses.482.description" = "InvalidArgumentException"
"paths./api/v1/activities.get.responses.482.schema.$ref" = "#/definitions/InvalidArgumentException"
"paths./api/v1/activities.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/activities.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/activities.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/activities.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/activities.parameters.length" = 9
"paths./api/v1/activities.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/activities.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/activities.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/activities.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/activities.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/activities.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/activities.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/activities.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/activities.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents.parameters.length" = 9
"paths./api/v1/documents.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents.post.description" = "<p>Creates a new document object and version object.</p> <p>The client specifies the parent folder ID and name of the document to upload. The ID is optionally specified when creating a new version of an existing document. This is the first step to upload a document. Next, upload the document to the URL returned from the call, and then call <a>UpdateDocumentVersion</a>.</p> <p>To cancel the document upload, call <a>AbortDocumentVersionUpload</a>.</p>"
"paths./api/v1/documents.post.operationId" = "InitiateDocumentVersionUpload"
"paths./api/v1/documents.post.parameters.length" = 1
"paths./api/v1/documents.post.parameters[0].in" = "body"
"paths./api/v1/documents.post.parameters[0].name" = "body"
"paths./api/v1/documents.post.parameters[0].required" = true
"paths./api/v1/documents.post.parameters[0].schema.$ref" = "#/definitions/InitiateDocumentVersionUploadRequest"
"paths./api/v1/documents.post.responses.201.description" = "Success"
"paths./api/v1/documents.post.responses.201.schema.$ref" = "#/definitions/InitiateDocumentVersionUploadResponse"
"paths./api/v1/documents.post.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents.post.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents.post.responses.481.description" = "EntityAlreadyExistsException"
"paths./api/v1/documents.post.responses.481.schema.$ref" = "#/definitions/EntityAlreadyExistsException"
"paths./api/v1/documents.post.responses.482.description" = "StorageLimitExceededException"
"paths./api/v1/documents.post.responses.482.schema.$ref" = "#/definitions/StorageLimitExceededException"
"paths./api/v1/documents.post.responses.483.description" = "StorageLimitWillExceedException"
"paths./api/v1/documents.post.responses.483.schema.$ref" = "#/definitions/StorageLimitWillExceedException"
"paths./api/v1/documents.post.responses.484.description" = "ProhibitedStateException"
"paths./api/v1/documents.post.responses.484.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents.post.responses.485.description" = "UnauthorizedOperationException"
"paths./api/v1/documents.post.responses.485.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents.post.responses.486.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents.post.responses.486.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents.post.responses.487.description" = "FailedDependencyException"
"paths./api/v1/documents.post.responses.487.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents.post.responses.488.description" = "ServiceUnavailableException"
"paths./api/v1/documents.post.responses.488.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents.post.responses.489.description" = "DraftUploadOutOfSyncException"
"paths./api/v1/documents.post.responses.489.schema.$ref" = "#/definitions/DraftUploadOutOfSyncException"
"paths./api/v1/documents.post.responses.490.description" = "ResourceAlreadyCheckedOutException"
"paths./api/v1/documents.post.responses.490.schema.$ref" = "#/definitions/ResourceAlreadyCheckedOutException"
"paths./api/v1/documents/{DocumentId}.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}.patch.description" = "Updates the specified attributes of a document. The user must have access to both the document and its parent folder, if applicable."
"paths./api/v1/documents/{DocumentId}.patch.operationId" = "UpdateDocument"
"paths./api/v1/documents/{DocumentId}.patch.parameters.length" = 2
"paths./api/v1/documents/{DocumentId}.patch.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}.patch.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}.patch.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}.patch.parameters[0].schema.$ref" = "#/definitions/UpdateDocumentRequest"
"paths./api/v1/documents/{DocumentId}.patch.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}.patch.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}.patch.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}.patch.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}.patch.responses.200.description" = "Success"
"paths./api/v1/documents/{DocumentId}.patch.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}.patch.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}.patch.responses.481.description" = "EntityAlreadyExistsException"
"paths./api/v1/documents/{DocumentId}.patch.responses.481.schema.$ref" = "#/definitions/EntityAlreadyExistsException"
"paths./api/v1/documents/{DocumentId}.patch.responses.482.description" = "LimitExceededException"
"paths./api/v1/documents/{DocumentId}.patch.responses.482.schema.$ref" = "#/definitions/LimitExceededException"
"paths./api/v1/documents/{DocumentId}.patch.responses.483.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}.patch.responses.483.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}.patch.responses.484.description" = "ConcurrentModificationException"
"paths./api/v1/documents/{DocumentId}.patch.responses.484.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./api/v1/documents/{DocumentId}.patch.responses.485.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}.patch.responses.485.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}.patch.responses.486.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}.patch.responses.486.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}.patch.responses.487.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}.patch.responses.487.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}.patch.responses.488.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}.patch.responses.488.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/path.get.description" = "<p>Retrieves the path information (the hierarchy from the root folder) for the requested document.</p> <p>By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested document and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the names of the parent folders.</p>"
"paths./api/v1/documents/{DocumentId}/path.get.operationId" = "GetDocumentPath"
"paths./api/v1/documents/{DocumentId}/path.get.parameters.length" = 2
"paths./api/v1/documents/{DocumentId}/path.get.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/path.get.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/path.get.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/path.get.parameters[0].schema.$ref" = "#/definitions/GetDocumentPathRequest"
"paths./api/v1/documents/{DocumentId}/path.get.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}/path.get.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/path.get.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}/path.get.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/path.get.responses.200.description" = "Success"
"paths./api/v1/documents/{DocumentId}/path.get.responses.200.schema.$ref" = "#/definitions/GetDocumentPathResponse"
"paths./api/v1/documents/{DocumentId}/path.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/path.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/path.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/path.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/path.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/path.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/path.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/path.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/path.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/path.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/path.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/path.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}/versions.get.description" = "<p>Retrieves the document versions for the specified document.</p> <p>By default, only active versions are returned.</p>"
"paths./api/v1/documents/{DocumentId}/versions.get.operationId" = "DescribeDocumentVersions"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters.length" = 4
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[0].schema.$ref" = "#/definitions/DescribeDocumentVersionsRequest"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[1].description" = "Pagination limit"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[1].in" = "query"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[1].name" = "Limit"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[1].required" = false
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[2].description" = "Pagination token"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[2].in" = "query"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[2].name" = "Marker"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[2].required" = false
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[2].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[3].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[3].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[3].required" = true
"paths./api/v1/documents/{DocumentId}/versions.get.parameters[3].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.200.description" = "Success"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.200.schema.$ref" = "#/definitions/DescribeDocumentVersionsResponse"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.483.description" = "InvalidArgumentException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.483.schema.$ref" = "#/definitions/InvalidArgumentException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.484.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.486.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions.get.responses.486.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/versions.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/versions.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/versions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/versions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/versions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/versions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/versions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/versions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/versions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.description" = "<p>Changes the status of the document version to ACTIVE. </p> <p>Amazon WorkDocs also sets its document container to ACTIVE. This is the last step in a document upload, after the client uploads the document to an S3-presigned URL returned by <a>InitiateDocumentVersionUpload</a>. </p>"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.operationId" = "UpdateDocumentVersion"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters.length" = 3
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[0].schema.$ref" = "#/definitions/UpdateDocumentVersionRequest"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[2].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[2].name" = "VersionId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[2].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.parameters[2].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.200.description" = "Success"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.481.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.481.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.482.description" = "ConcurrentModificationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.483.description" = "InvalidOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.483.schema.$ref" = "#/definitions/InvalidOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.484.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.484.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.485.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.485.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.486.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.486.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.487.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}.patch.responses.487.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.description" = "Adds a new comment to the specified document version."
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.operationId" = "CreateComment"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters.length" = 3
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[0].schema.$ref" = "#/definitions/CreateCommentRequest"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[2].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[2].name" = "VersionId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[2].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.parameters[2].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.201.description" = "Success"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.201.schema.$ref" = "#/definitions/CreateCommentResponse"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.481.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.481.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.482.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.482.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.483.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.483.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.484.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.486.description" = "DocumentLockedForCommentsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment.post.responses.486.schema.$ref" = "#/definitions/DocumentLockedForCommentsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.description" = "Deletes the specified comment from the document version."
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.operationId" = "DeleteComment"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters.length" = 4
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[0].schema.$ref" = "#/definitions/DeleteCommentRequest"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[2].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[2].name" = "VersionId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[2].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[2].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[3].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[3].name" = "CommentId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[3].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.parameters[3].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.204.description" = "Success"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.481.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.481.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.482.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.482.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.483.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.483.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.484.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.486.description" = "DocumentLockedForCommentsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.delete.responses.486.schema.$ref" = "#/definitions/DocumentLockedForCommentsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.description" = "List all the comments for the specified document version."
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.operationId" = "DescribeComments"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters.length" = 3
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[0].in" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[0].name" = "body"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[0].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[0].schema.$ref" = "#/definitions/DescribeCommentsRequest"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[1].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[1].name" = "DocumentId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[1].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[1].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[2].in" = "path"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[2].name" = "VersionId"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[2].required" = true
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.parameters[2].type" = "string"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.200.description" = "Success"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.200.schema.$ref" = "#/definitions/DescribeCommentsResponse"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.481.description" = "ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.481.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.482.description" = "UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.482.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.483.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.483.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.484.description" = "FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.get.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters.length" = 9
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/documents/{DocumentId}/versions/{VersionId}/comments.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/folders.parameters.length" = 9
"paths./api/v1/folders.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/folders.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/folders.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/folders.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/folders.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/folders.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/folders.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/folders.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/folders.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/folders.post.description" = "Creates a folder with the specified name and parent folder."
"paths./api/v1/folders.post.operationId" = "CreateFolder"
"paths./api/v1/folders.post.parameters.length" = 1
"paths./api/v1/folders.post.parameters[0].in" = "body"
"paths./api/v1/folders.post.parameters[0].name" = "body"
"paths./api/v1/folders.post.parameters[0].required" = true
"paths./api/v1/folders.post.parameters[0].schema.$ref" = "#/definitions/CreateFolderRequest"
"paths./api/v1/folders.post.responses.201.description" = "Success"
"paths./api/v1/folders.post.responses.201.schema.$ref" = "#/definitions/CreateFolderResponse"
"paths./api/v1/folders.post.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/folders.post.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/folders.post.responses.481.description" = "EntityAlreadyExistsException"
"paths./api/v1/folders.post.responses.481.schema.$ref" = "#/definitions/EntityAlreadyExistsException"
"paths./api/v1/folders.post.responses.482.description" = "ProhibitedStateException"
"paths./api/v1/folders.post.responses.482.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/folders.post.responses.483.description" = "LimitExceededException"
"paths./api/v1/folders.post.responses.483.schema.$ref" = "#/definitions/LimitExceededException"
"paths./api/v1/folders.post.responses.484.description" = "UnauthorizedOperationException"
"paths./api/v1/folders.post.responses.484.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/folders.post.responses.485.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/folders.post.responses.485.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/folders.post.responses.486.description" = "FailedDependencyException"
"paths./api/v1/folders.post.responses.486.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/folders.post.responses.487.description" = "ServiceUnavailableException"
"paths./api/v1/folders.post.responses.487.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}.parameters.length" = 9
"paths./api/v1/folders/{FolderId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/folders/{FolderId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/folders/{FolderId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/folders/{FolderId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/folders/{FolderId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/folders/{FolderId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/folders/{FolderId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/folders/{FolderId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/folders/{FolderId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/folders/{FolderId}.patch.description" = "Updates the specified attributes of the specified folder. The user must have access to both the folder and its parent folder, if applicable."
"paths./api/v1/folders/{FolderId}.patch.operationId" = "UpdateFolder"
"paths./api/v1/folders/{FolderId}.patch.parameters.length" = 2
"paths./api/v1/folders/{FolderId}.patch.parameters[0].in" = "body"
"paths./api/v1/folders/{FolderId}.patch.parameters[0].name" = "body"
"paths./api/v1/folders/{FolderId}.patch.parameters[0].required" = true
"paths./api/v1/folders/{FolderId}.patch.parameters[0].schema.$ref" = "#/definitions/UpdateFolderRequest"
"paths./api/v1/folders/{FolderId}.patch.parameters[1].in" = "path"
"paths./api/v1/folders/{FolderId}.patch.parameters[1].name" = "FolderId"
"paths./api/v1/folders/{FolderId}.patch.parameters[1].required" = true
"paths./api/v1/folders/{FolderId}.patch.parameters[1].type" = "string"
"paths./api/v1/folders/{FolderId}.patch.responses.200.description" = "Success"
"paths./api/v1/folders/{FolderId}.patch.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/folders/{FolderId}.patch.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/folders/{FolderId}.patch.responses.481.description" = "EntityAlreadyExistsException"
"paths./api/v1/folders/{FolderId}.patch.responses.481.schema.$ref" = "#/definitions/EntityAlreadyExistsException"
"paths./api/v1/folders/{FolderId}.patch.responses.482.description" = "ProhibitedStateException"
"paths./api/v1/folders/{FolderId}.patch.responses.482.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/folders/{FolderId}.patch.responses.483.description" = "ConcurrentModificationException"
"paths./api/v1/folders/{FolderId}.patch.responses.483.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./api/v1/folders/{FolderId}.patch.responses.484.description" = "LimitExceededException"
"paths./api/v1/folders/{FolderId}.patch.responses.484.schema.$ref" = "#/definitions/LimitExceededException"
"paths./api/v1/folders/{FolderId}.patch.responses.485.description" = "UnauthorizedOperationException"
"paths./api/v1/folders/{FolderId}.patch.responses.485.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/folders/{FolderId}.patch.responses.486.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}.patch.responses.486.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}.patch.responses.487.description" = "FailedDependencyException"
"paths./api/v1/folders/{FolderId}.patch.responses.487.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/folders/{FolderId}.patch.responses.488.description" = "ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}.patch.responses.488.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}/contents.get.description" = "<p>Describes the contents of the specified folder, including its documents and subfolders.</p> <p>By default, Amazon WorkDocs returns the first 100 active document and folder metadata items. If there are more results, the response includes a marker that you can use to request the next set of results. You can also request initialized documents.</p>"
"paths./api/v1/folders/{FolderId}/contents.get.operationId" = "DescribeFolderContents"
"paths./api/v1/folders/{FolderId}/contents.get.parameters.length" = 4
"paths./api/v1/folders/{FolderId}/contents.get.parameters[0].in" = "body"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[0].name" = "body"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[0].required" = true
"paths./api/v1/folders/{FolderId}/contents.get.parameters[0].schema.$ref" = "#/definitions/DescribeFolderContentsRequest"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[1].description" = "Pagination limit"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[1].in" = "query"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[1].name" = "Limit"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[1].required" = false
"paths./api/v1/folders/{FolderId}/contents.get.parameters[1].type" = "string"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[2].description" = "Pagination token"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[2].in" = "query"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[2].name" = "Marker"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[2].required" = false
"paths./api/v1/folders/{FolderId}/contents.get.parameters[2].type" = "string"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[3].in" = "path"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[3].name" = "FolderId"
"paths./api/v1/folders/{FolderId}/contents.get.parameters[3].required" = true
"paths./api/v1/folders/{FolderId}/contents.get.parameters[3].type" = "string"
"paths./api/v1/folders/{FolderId}/contents.get.responses.200.description" = "Success"
"paths./api/v1/folders/{FolderId}/contents.get.responses.200.schema.$ref" = "#/definitions/DescribeFolderContentsResponse"
"paths./api/v1/folders/{FolderId}/contents.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.482.description" = "InvalidArgumentException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.482.schema.$ref" = "#/definitions/InvalidArgumentException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.485.description" = "ProhibitedStateException"
"paths./api/v1/folders/{FolderId}/contents.get.responses.485.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/folders/{FolderId}/contents.parameters.length" = 9
"paths./api/v1/folders/{FolderId}/contents.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/folders/{FolderId}/contents.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/folders/{FolderId}/contents.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/folders/{FolderId}/contents.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/folders/{FolderId}/contents.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/folders/{FolderId}/contents.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/folders/{FolderId}/contents.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/folders/{FolderId}/contents.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/folders/{FolderId}/contents.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/folders/{FolderId}/path.get.description" = "<p>Retrieves the path information (the hierarchy from the root folder) for the specified folder.</p> <p>By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested folder and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the parent folder names.</p>"
"paths./api/v1/folders/{FolderId}/path.get.operationId" = "GetFolderPath"
"paths./api/v1/folders/{FolderId}/path.get.parameters.length" = 2
"paths./api/v1/folders/{FolderId}/path.get.parameters[0].in" = "body"
"paths./api/v1/folders/{FolderId}/path.get.parameters[0].name" = "body"
"paths./api/v1/folders/{FolderId}/path.get.parameters[0].required" = true
"paths./api/v1/folders/{FolderId}/path.get.parameters[0].schema.$ref" = "#/definitions/GetFolderPathRequest"
"paths./api/v1/folders/{FolderId}/path.get.parameters[1].in" = "path"
"paths./api/v1/folders/{FolderId}/path.get.parameters[1].name" = "FolderId"
"paths./api/v1/folders/{FolderId}/path.get.parameters[1].required" = true
"paths./api/v1/folders/{FolderId}/path.get.parameters[1].type" = "string"
"paths./api/v1/folders/{FolderId}/path.get.responses.200.description" = "Success"
"paths./api/v1/folders/{FolderId}/path.get.responses.200.schema.$ref" = "#/definitions/GetFolderPathResponse"
"paths./api/v1/folders/{FolderId}/path.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/folders/{FolderId}/path.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/folders/{FolderId}/path.get.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/folders/{FolderId}/path.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/folders/{FolderId}/path.get.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}/path.get.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/folders/{FolderId}/path.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/folders/{FolderId}/path.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/folders/{FolderId}/path.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}/path.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/folders/{FolderId}/path.parameters.length" = 9
"paths./api/v1/folders/{FolderId}/path.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/folders/{FolderId}/path.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/folders/{FolderId}/path.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/folders/{FolderId}/path.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/folders/{FolderId}/path.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/folders/{FolderId}/path.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/folders/{FolderId}/path.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/folders/{FolderId}/path.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/folders/{FolderId}/path.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/me.get.description" = "Retrieves details of the current user for whom the authentication token was generated. This is not a valid action for SigV4 (administrative API) clients."
"paths./api/v1/me.get.operationId" = "GetCurrentUser"
"paths./api/v1/me.get.parameters.length" = 1
"paths./api/v1/me.get.parameters[0].in" = "body"
"paths./api/v1/me.get.parameters[0].name" = "body"
"paths./api/v1/me.get.parameters[0].required" = true
"paths./api/v1/me.get.parameters[0].schema.$ref" = "#/definitions/GetCurrentUserRequest"
"paths./api/v1/me.get.responses.200.description" = "Success"
"paths./api/v1/me.get.responses.200.schema.$ref" = "#/definitions/GetCurrentUserResponse"
"paths./api/v1/me.get.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/me.get.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/me.get.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/me.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/me.get.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/me.get.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/me.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/me.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/me.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/me.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/me.parameters.length" = 9
"paths./api/v1/me.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/me.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/me.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/me.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/me.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/me.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/me.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/me.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/me.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/me/root.get.description" = "Describes the current user's special folders; the <code>RootFolder</code> and the <code>RecyleBin</code>. <code>RootFolder</code> is the root of user's files and folders and <code>RecyleBin</code> is the root of recycled items. This is not a valid action for SigV4 (administrative API) clients."
"paths./api/v1/me/root.get.operationId" = "DescribeRootFolders"
"paths./api/v1/me/root.get.parameters.length" = 1
"paths./api/v1/me/root.get.parameters[0].in" = "body"
"paths./api/v1/me/root.get.parameters[0].name" = "body"
"paths./api/v1/me/root.get.parameters[0].required" = true
"paths./api/v1/me/root.get.parameters[0].schema.$ref" = "#/definitions/DescribeRootFoldersRequest"
"paths./api/v1/me/root.get.responses.200.description" = "Success"
"paths./api/v1/me/root.get.responses.200.schema.$ref" = "#/definitions/DescribeRootFoldersResponse"
"paths./api/v1/me/root.get.responses.480.description" = "UnauthorizedOperationException"
"paths./api/v1/me/root.get.responses.480.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/me/root.get.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/me/root.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/me/root.get.responses.482.description" = "InvalidArgumentException"
"paths./api/v1/me/root.get.responses.482.schema.$ref" = "#/definitions/InvalidArgumentException"
"paths./api/v1/me/root.get.responses.483.description" = "FailedDependencyException"
"paths./api/v1/me/root.get.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/me/root.get.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/me/root.get.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/me/root.parameters.length" = 9
"paths./api/v1/me/root.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/me/root.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/me/root.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/me/root.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/me/root.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/me/root.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/me/root.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/me/root.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/me/root.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.description" = "Lists the specified notification subscriptions."
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.operationId" = "DescribeNotificationSubscriptions"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters.length" = 2
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[0].in" = "body"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[0].name" = "body"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[0].required" = true
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[0].schema.$ref" = "#/definitions/DescribeNotificationSubscriptionsRequest"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[1].in" = "path"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[1].name" = "OrganizationId"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[1].required" = true
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.parameters[1].type" = "string"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.200.description" = "Success"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.200.schema.$ref" = "#/definitions/DescribeNotificationSubscriptionsResponse"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.480.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.480.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.481.description" = "EntityNotExistsException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.481.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.482.description" = "ServiceUnavailableException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.get.responses.482.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters.length" = 9
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/organizations/{OrganizationId}/subscriptions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.description" = "Deletes the specified subscription from the specified organization."
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.operationId" = "DeleteNotificationSubscription"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters.length" = 3
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[0].in" = "body"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[0].name" = "body"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[0].required" = true
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[0].schema.$ref" = "#/definitions/DeleteNotificationSubscriptionRequest"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[1].in" = "path"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[1].name" = "OrganizationId"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[1].required" = true
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[1].type" = "string"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[2].in" = "path"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[2].name" = "SubscriptionId"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[2].required" = true
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.parameters[2].type" = "string"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.200.description" = "Success"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.480.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.480.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.481.description" = "EntityNotExistsException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.481.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.482.description" = "ServiceUnavailableException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.482.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.483.description" = "ProhibitedStateException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.delete.responses.483.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters.length" = 9
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.description" = "Deletes custom metadata from the specified resource."
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.operationId" = "DeleteCustomMetadata"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters.length" = 2
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[0].in" = "body"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[0].name" = "body"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[0].required" = true
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[0].schema.$ref" = "#/definitions/DeleteCustomMetadataRequest"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[1].in" = "path"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[1].name" = "ResourceId"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[1].required" = true
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.parameters[1].type" = "string"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.200.description" = "Success"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.200.schema.$ref" = "#/definitions/DeleteCustomMetadataResponse"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.483.description" = "ProhibitedStateException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.483.schema.$ref" = "#/definitions/ProhibitedStateException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.484.description" = "FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/customMetadata.delete.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters.length" = 9
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/resources/{ResourceId}/customMetadata.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/resources/{ResourceId}/labels.delete.description" = "Deletes the specified list of labels from a resource."
"paths./api/v1/resources/{ResourceId}/labels.delete.operationId" = "DeleteLabels"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters.length" = 2
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[0].in" = "body"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[0].name" = "body"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[0].required" = true
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[0].schema.$ref" = "#/definitions/DeleteLabelsRequest"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[1].in" = "path"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[1].name" = "ResourceId"
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[1].required" = true
"paths./api/v1/resources/{ResourceId}/labels.delete.parameters[1].type" = "string"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.200.description" = "Success"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.200.schema.$ref" = "#/definitions/DeleteLabelsResponse"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.483.description" = "FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/labels.delete.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/labels.parameters.length" = 9
"paths./api/v1/resources/{ResourceId}/labels.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/resources/{ResourceId}/labels.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/resources/{ResourceId}/labels.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/resources/{ResourceId}/labels.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/resources/{ResourceId}/labels.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/resources/{ResourceId}/labels.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/resources/{ResourceId}/labels.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/resources/{ResourceId}/labels.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/resources/{ResourceId}/labels.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/resources/{ResourceId}/permissions.delete.description" = "Removes all the permissions from the specified resource."
"paths./api/v1/resources/{ResourceId}/permissions.delete.operationId" = "RemoveAllResourcePermissions"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters.length" = 2
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[0].in" = "body"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[0].name" = "body"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[0].required" = true
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[0].schema.$ref" = "#/definitions/RemoveAllResourcePermissionsRequest"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[1].in" = "path"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[1].name" = "ResourceId"
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[1].required" = true
"paths./api/v1/resources/{ResourceId}/permissions.delete.parameters[1].type" = "string"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.204.description" = "Success"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.480.description" = "UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.480.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.482.description" = "FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.482.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.483.description" = "ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/permissions.delete.responses.483.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/permissions.parameters.length" = 9
"paths./api/v1/resources/{ResourceId}/permissions.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/resources/{ResourceId}/permissions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.description" = "Removes the permission for the specified principal from the specified resource."
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.operationId" = "RemoveResourcePermission"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters.length" = 3
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[0].in" = "body"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[0].name" = "body"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[0].required" = true
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[0].schema.$ref" = "#/definitions/RemoveResourcePermissionRequest"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[1].in" = "path"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[1].name" = "ResourceId"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[1].required" = true
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[1].type" = "string"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[2].in" = "path"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[2].name" = "PrincipalId"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[2].required" = true
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.parameters[2].type" = "string"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.204.description" = "Success"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.480.description" = "UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.480.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.482.description" = "FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.482.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.483.description" = "ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.delete.responses.483.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters.length" = 9
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/resources/{ResourceId}/permissions/{PrincipalId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/users.get.description" = "<p>Describes the specified users. You can describe all users or filter the results (for example, by status or organization).</p> <p>By default, Amazon WorkDocs returns the first 24 active or pending users. If there are more results, the response includes a marker that you can use to request the next set of results.</p>"
"paths./api/v1/users.get.operationId" = "DescribeUsers"
"paths./api/v1/users.get.parameters.length" = 3
"paths./api/v1/users.get.parameters[0].in" = "body"
"paths./api/v1/users.get.parameters[0].name" = "body"
"paths./api/v1/users.get.parameters[0].required" = true
"paths./api/v1/users.get.parameters[0].schema.$ref" = "#/definitions/DescribeUsersRequest"
"paths./api/v1/users.get.parameters[1].description" = "Pagination limit"
"paths./api/v1/users.get.parameters[1].in" = "query"
"paths./api/v1/users.get.parameters[1].name" = "Limit"
"paths./api/v1/users.get.parameters[1].required" = false
"paths./api/v1/users.get.parameters[1].type" = "string"
"paths./api/v1/users.get.parameters[2].description" = "Pagination token"
"paths./api/v1/users.get.parameters[2].in" = "query"
"paths./api/v1/users.get.parameters[2].name" = "Marker"
"paths./api/v1/users.get.parameters[2].required" = false
"paths./api/v1/users.get.parameters[2].type" = "string"
"paths./api/v1/users.get.responses.200.description" = "Success"
"paths./api/v1/users.get.responses.200.schema.$ref" = "#/definitions/DescribeUsersResponse"
"paths./api/v1/users.get.responses.480.description" = "UnauthorizedOperationException"
"paths./api/v1/users.get.responses.480.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/users.get.responses.481.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/users.get.responses.481.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/users.get.responses.482.description" = "FailedDependencyException"
"paths./api/v1/users.get.responses.482.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/users.get.responses.483.description" = "ServiceUnavailableException"
"paths./api/v1/users.get.responses.483.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/users.get.responses.484.description" = "InvalidArgumentException"
"paths./api/v1/users.get.responses.484.schema.$ref" = "#/definitions/InvalidArgumentException"
"paths./api/v1/users.parameters.length" = 9
"paths./api/v1/users.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/users.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/users.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/users.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/users.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/users.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/users.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/users.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/users.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/users/{UserId}.parameters.length" = 9
"paths./api/v1/users/{UserId}.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/users/{UserId}.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/users/{UserId}.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/users/{UserId}.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/users/{UserId}.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/users/{UserId}.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/users/{UserId}.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/users/{UserId}.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/users/{UserId}.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./api/v1/users/{UserId}.patch.description" = "Updates the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site."
"paths./api/v1/users/{UserId}.patch.operationId" = "UpdateUser"
"paths./api/v1/users/{UserId}.patch.parameters.length" = 2
"paths./api/v1/users/{UserId}.patch.parameters[0].in" = "body"
"paths./api/v1/users/{UserId}.patch.parameters[0].name" = "body"
"paths./api/v1/users/{UserId}.patch.parameters[0].required" = true
"paths./api/v1/users/{UserId}.patch.parameters[0].schema.$ref" = "#/definitions/UpdateUserRequest"
"paths./api/v1/users/{UserId}.patch.parameters[1].in" = "path"
"paths./api/v1/users/{UserId}.patch.parameters[1].name" = "UserId"
"paths./api/v1/users/{UserId}.patch.parameters[1].required" = true
"paths./api/v1/users/{UserId}.patch.parameters[1].type" = "string"
"paths./api/v1/users/{UserId}.patch.responses.200.description" = "Success"
"paths./api/v1/users/{UserId}.patch.responses.200.schema.$ref" = "#/definitions/UpdateUserResponse"
"paths./api/v1/users/{UserId}.patch.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/users/{UserId}.patch.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/users/{UserId}.patch.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/users/{UserId}.patch.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/users/{UserId}.patch.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/users/{UserId}.patch.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/users/{UserId}.patch.responses.483.description" = "IllegalUserStateException"
"paths./api/v1/users/{UserId}.patch.responses.483.schema.$ref" = "#/definitions/IllegalUserStateException"
"paths./api/v1/users/{UserId}.patch.responses.484.description" = "FailedDependencyException"
"paths./api/v1/users/{UserId}.patch.responses.484.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/users/{UserId}.patch.responses.485.description" = "ServiceUnavailableException"
"paths./api/v1/users/{UserId}.patch.responses.485.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/users/{UserId}.patch.responses.486.description" = "DeactivatingLastSystemUserException"
"paths./api/v1/users/{UserId}.patch.responses.486.schema.$ref" = "#/definitions/DeactivatingLastSystemUserException"
"paths./api/v1/users/{UserId}/activation.delete.description" = "Deactivates the specified user, which revokes the user's access to Amazon WorkDocs."
"paths./api/v1/users/{UserId}/activation.delete.operationId" = "DeactivateUser"
"paths./api/v1/users/{UserId}/activation.delete.parameters.length" = 2
"paths./api/v1/users/{UserId}/activation.delete.parameters[0].in" = "body"
"paths./api/v1/users/{UserId}/activation.delete.parameters[0].name" = "body"
"paths./api/v1/users/{UserId}/activation.delete.parameters[0].required" = true
"paths./api/v1/users/{UserId}/activation.delete.parameters[0].schema.$ref" = "#/definitions/DeactivateUserRequest"
"paths./api/v1/users/{UserId}/activation.delete.parameters[1].in" = "path"
"paths./api/v1/users/{UserId}/activation.delete.parameters[1].name" = "UserId"
"paths./api/v1/users/{UserId}/activation.delete.parameters[1].required" = true
"paths./api/v1/users/{UserId}/activation.delete.parameters[1].type" = "string"
"paths./api/v1/users/{UserId}/activation.delete.responses.204.description" = "Success"
"paths./api/v1/users/{UserId}/activation.delete.responses.480.description" = "EntityNotExistsException"
"paths./api/v1/users/{UserId}/activation.delete.responses.480.schema.$ref" = "#/definitions/EntityNotExistsException"
"paths./api/v1/users/{UserId}/activation.delete.responses.481.description" = "UnauthorizedOperationException"
"paths./api/v1/users/{UserId}/activation.delete.responses.481.schema.$ref" = "#/definitions/UnauthorizedOperationException"
"paths./api/v1/users/{UserId}/activation.delete.responses.482.description" = "UnauthorizedResourceAccessException"
"paths./api/v1/users/{UserId}/activation.delete.responses.482.schema.$ref" = "#/definitions/UnauthorizedResourceAccessException"
"paths./api/v1/users/{UserId}/activation.delete.responses.483.description" = "FailedDependencyException"
"paths./api/v1/users/{UserId}/activation.delete.responses.483.schema.$ref" = "#/definitions/FailedDependencyException"
"paths./api/v1/users/{UserId}/activation.delete.responses.484.description" = "ServiceUnavailableException"
"paths./api/v1/users/{UserId}/activation.delete.responses.484.schema.$ref" = "#/definitions/ServiceUnavailableException"
"paths./api/v1/users/{UserId}/activation.parameters.length" = 9
"paths./api/v1/users/{UserId}/activation.parameters[0].$ref" = "#/parameters/Action"
"paths./api/v1/users/{UserId}/activation.parameters[1].$ref" = "#/parameters/Version"
"paths./api/v1/users/{UserId}/activation.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./api/v1/users/{UserId}/activation.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./api/v1/users/{UserId}/activation.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./api/v1/users/{UserId}/activation.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./api/v1/users/{UserId}/activation.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./api/v1/users/{UserId}/activation.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./api/v1/users/{UserId}/activation.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "http"
"security.length" = 1
"securityDefinitions.hmac.description" = "Amazon Signature authorization v4"
"securityDefinitions.hmac.in" = "header"
"securityDefinitions.hmac.name" = "Authorization"
"securityDefinitions.hmac.type" = "apiKey"
"securityDefinitions.hmac.x-amazon-apigateway-authtype" = "awsSigv4"
"security[0].hmac.length" = 0
swagger = "2.0"
x-hasEquivalentPaths = true
