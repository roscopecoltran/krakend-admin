swagger: '2.0'
schemes:
  - http
host: discovery.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>AWS Application Discovery Service</fullname> <p>AWS Application Discovery Service helps you plan application migration projects by automatically identifying servers, virtual machines (VMs), software, and software dependencies running in your on-premises data centers. Application Discovery Service also collects application performance data, which can help you assess the outcome of your migration. The data collected by Application Discovery Service is securely retained in an Amazon-hosted and managed database in the cloud. You can export the data as a CSV or XML file into your preferred visualization tool or cloud-migration solution to plan your migration. For more information, see the Application Discovery Service <a href="http://aws.amazon.com/application-discovery/faqs/">FAQ</a>.</p> <p>Application Discovery Service offers two modes of operation.</p> <ul> <li> <p> <b>Agentless discovery</b> mode is recommended for environments that use VMware vCenter Server. This mode doesn''t require you to install an agent on each host. Agentless discovery gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment. Agentless discovery doesn''t collect information about software and software dependencies. It also doesn''t work in non-VMware environments. We recommend that you use agent-based discovery for non-VMware environments and if you want to collect information about software and software dependencies. You can also run agent-based and agentless discovery simultaneously. Use agentless discovery to quickly complete the initial infrastructure assessment and then install agents on select hosts to gather information about software and software dependencies.</p> </li> <li> <p> <b>Agent-based discovery</b> mode collects a richer set of data than agentless discovery by using Amazon software, the AWS Application Discovery Agent, which you install on one or more hosts in your data center. The agent captures infrastructure and application information, including an inventory of installed software applications, system and process performance, resource utilization, and network dependencies between workloads. The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the cloud. </p> </li> </ul> <p>Application Discovery Service integrates with application discovery solutions from AWS Partner Network (APN) partners. Third-party application discovery tools can query Application Discovery Service and write to the Application Discovery Service database using a public API. You can then import the data into either a visualization tool or cloud-migration solution.</p> <important> <p>Application Discovery Service doesn''t gather sensitive information. All data is handled according to the <a href="http://aws.amazon.com/privacy/">AWS Privacy Policy</a>. You can operate Application Discovery Service using offline mode to inspect collected data before it is shared with the service.</p> </important> <p>Your AWS account must be granted access to Application Discovery Service, a process called <i>whitelisting</i>. This is true for AWS partners and customers alike. To request access, sign up for AWS Application Discovery Service <a href="http://aws.amazon.com/application-discovery/preview/">here</a>. We send you information about how to get started.</p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you''re using. For more information, see <a href="http://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.</p> <p>This guide is intended for use with the <a href="http://docs.aws.amazon.com/application-discovery/latest/userguide/"> <i>AWS Application Discovery Service User Guide</i> </a>.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Application Discovery Service
  version: '2015-11-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/discovery-2015-11-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: discovery
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/discovery/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associates one or more configuration items with an application.
      operationId: AssociateConfigurationItemsToApplication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateConfigurationItemsToApplicationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateConfigurationItemsToApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#CreateApplication':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates an application with the given name and description.
      operationId: CreateApplication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateApplicationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#CreateTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.
      operationId: CreateTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DeleteApplications':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a list of applications and their associations with configuration items.
      operationId: DeleteApplications
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApplicationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApplicationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DeleteTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.
      operationId: DeleteTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DescribeAgents':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an ID.
      operationId: DescribeAgents
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAgentsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAgentsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DescribeConfigurations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves attributes for a list of configuration item IDs. All of the supplied IDs must be for the same asset type (server, application, process, or connection). Output fields are specific to the asset type selected. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, such as host name, operating system, and number of network cards.</p> <p>For a complete list of outputs for each asset type, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#DescribeConfigurations">Using the DescribeConfigurations Action</a>.</p>'
      operationId: DescribeConfigurations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DescribeExportConfigurations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deprecated. Use <code>DescribeExportTasks</code> instead.</p> <p>Retrieves the status of a given export process. You can retrieve status from a maximum of 100 processes.</p>
      operationId: DescribeExportConfigurations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeExportConfigurationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExportConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DescribeExportTasks':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.
      operationId: DescribeExportTasks
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeExportTasksRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExportTasksResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DescribeTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of configuration items that are tagged with a specific tag. Or retrieves a list of all tags assigned to a specific configuration item.
      operationId: DescribeTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#DisassociateConfigurationItemsFromApplication':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates one or more configuration items from an application.
      operationId: DisassociateConfigurationItemsFromApplication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateConfigurationItemsFromApplicationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateConfigurationItemsFromApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#ExportConfigurations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance. This API returns an export ID that you can query using the <i>DescribeExportConfigurations</i> API. The system imposes a limit of two configuration exports in six hours.</p>'
      operationId: ExportConfigurations
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
  '/#GetDiscoverySummary':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a short summary of discovered assets.
      operationId: GetDiscoverySummary
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDiscoverySummaryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiscoverySummaryResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#ListConfigurations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of configuration items according to criteria that you specify in a filter. The filter criteria identifies the relationship requirements.
      operationId: ListConfigurations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListConfigurationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#ListServerNeighbors':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves a list of servers that are one network hop away from a specified server.
      operationId: ListServerNeighbors
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListServerNeighborsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServerNeighborsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#StartDataCollectionByAgentIds':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Instructs the specified agents or connectors to start collecting data.
      operationId: StartDataCollectionByAgentIds
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartDataCollectionByAgentIdsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartDataCollectionByAgentIdsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#StartExportTask':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p> Begins the export of discovered data to an S3 bucket.</p> <p> If you specify <code>agentId</code> in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed agent data is limited to five concurrently running exports. </p> <p> If you do not include an <code>agentId</code> filter, summary data is exported that includes both AWS Agentless Discovery Connector data and summary data from AWS Discovery Agents. Export of summary data is limited to two exports per day. </p>'
      operationId: StartExportTask
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartExportTaskRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartExportTaskResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
  '/#StopDataCollectionByAgentIds':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Instructs the specified agents or connectors to stop collecting data.
      operationId: StopDataCollectionByAgentIds
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopDataCollectionByAgentIdsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopDataCollectionByAgentIdsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
  '/#UpdateApplication':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates metadata about an application.
      operationId: UpdateApplication
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApplicationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
definitions:
  AgentConfigurationStatus:
    description: 'Information about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.'
    properties:
      agentId:
        $ref: '#/definitions/String'
        description: The agent/connector ID.
      description:
        $ref: '#/definitions/String'
        description: A description of the operation performed.
      operationSucceeded:
        $ref: '#/definitions/Boolean'
        description: 'Information about the status of the <code>StartDataCollection</code> and <code>StopDataCollection</code> operations. The system has recorded the data collection operation. The agent/connector receives this command the next time it polls for a new command. '
    type: object
  AgentConfigurationStatusList:
    items:
      $ref: '#/definitions/AgentConfigurationStatus'
    type: array
  AgentId:
    type: string
  AgentIds:
    items:
      $ref: '#/definitions/AgentId'
    type: array
  AgentInfo:
    description: 'Information about agents or connectors associated with the user’s AWS account. Information includes agent or connector IDs, IP addresses, media access control (MAC) addresses, agent or connector health, hostname where the agent or connector resides, and agent version for each agent.'
    properties:
      agentId:
        $ref: '#/definitions/AgentId'
        description: The agent or connector ID.
      agentNetworkInfoList:
        $ref: '#/definitions/AgentNetworkInfoList'
        description: Network details about the host where the agent or connector resides.
      agentType:
        $ref: '#/definitions/String'
        description: Type of agent.
      collectionStatus:
        $ref: '#/definitions/String'
        description: Status of the collection process for an agent or connector.
      connectorId:
        $ref: '#/definitions/String'
        description: The ID of the connector.
      health:
        $ref: '#/definitions/AgentStatus'
        description: The health of the agent or connector.
      hostName:
        $ref: '#/definitions/String'
        description: The name of the host where the agent or connector resides. The host can be a server or virtual machine.
      lastHealthPingTime:
        $ref: '#/definitions/String'
        description: Time since agent or connector health was reported.
      registeredTime:
        $ref: '#/definitions/String'
        description: Agent's first registration timestamp in UTC.
      version:
        $ref: '#/definitions/String'
        description: The agent or connector version.
    type: object
  AgentNetworkInfo:
    description: Network details about the host where the agent/connector resides.
    properties:
      ipAddress:
        $ref: '#/definitions/String'
        description: The IP address for the host where the agent/connector resides.
      macAddress:
        $ref: '#/definitions/String'
        description: The MAC address for the host where the agent/connector resides.
    type: object
  AgentNetworkInfoList:
    items:
      $ref: '#/definitions/AgentNetworkInfo'
    type: array
  AgentStatus:
    enum:
      - HEALTHY
      - UNHEALTHY
      - RUNNING
      - UNKNOWN
      - BLACKLISTED
      - SHUTDOWN
    type: string
  AgentsInfo:
    items:
      $ref: '#/definitions/AgentInfo'
    type: array
  ApplicationId:
    type: string
  ApplicationIdsList:
    items:
      $ref: '#/definitions/ApplicationId'
    type: array
  AssociateConfigurationItemsToApplicationRequest:
    properties:
      applicationConfigurationId:
        $ref: '#/definitions/ApplicationId'
        description: The configuration ID of an application with which items are to be associated.
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: The ID of each configuration item to be associated with an application.
    required:
      - applicationConfigurationId
      - configurationIds
    type: object
  AssociateConfigurationItemsToApplicationResponse:
    properties: {}
    type: object
  AuthorizationErrorException:
    description: The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  Boolean:
    type: boolean
  BoxedInteger:
    type: integer
  Condition:
    type: string
  Configuration:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  ConfigurationId:
    type: string
  ConfigurationIdList:
    items:
      $ref: '#/definitions/ConfigurationId'
    type: array
  ConfigurationItemType:
    enum:
      - SERVER
      - PROCESS
      - CONNECTION
      - APPLICATION
    type: string
  ConfigurationTag:
    description: Tags for a configuration item. Tags are metadata that help you categorize IT assets.
    properties:
      configurationId:
        $ref: '#/definitions/ConfigurationId'
        description: The configuration ID for the item to tag. You can specify a list of keys and values.
      configurationType:
        $ref: '#/definitions/ConfigurationItemType'
        description: A type of IT asset to tag.
      key:
        $ref: '#/definitions/TagKey'
        description: 'A type of tag on which to filter. For example, <i>serverType</i>.'
      timeOfCreation:
        $ref: '#/definitions/TimeStamp'
        description: The time the configuration tag was created in Coordinated Universal Time (UTC).
      value:
        $ref: '#/definitions/TagValue'
        description: A value on which to filter. For example <i>key = serverType</i> and <i>value = web server</i>.
    type: object
  ConfigurationTagSet:
    items:
      $ref: '#/definitions/ConfigurationTag'
    type: array
  Configurations:
    items:
      $ref: '#/definitions/Configuration'
    type: array
  ConfigurationsDownloadUrl:
    type: string
  ConfigurationsExportId:
    type: string
  CreateApplicationRequest:
    properties:
      description:
        $ref: '#/definitions/String'
        description: Description of the application to be created.
      name:
        $ref: '#/definitions/String'
        description: Name of the application to be created.
    required:
      - name
    type: object
  CreateApplicationResponse:
    properties:
      configurationId:
        $ref: '#/definitions/String'
        description: Configuration ID of an application to be created.
    type: object
  CreateTagsRequest:
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: A list of configuration items that you want to tag.
      tags:
        $ref: '#/definitions/TagSet'
        description: '<p>Tags that you want to associate with one or more configuration items. Specify the tags that you want to create in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p>'
    required:
      - configurationIds
      - tags
    type: object
  CreateTagsResponse:
    properties: {}
    type: object
  CustomerAgentInfo:
    description: Inventory data for installed discovery agents.
    properties:
      activeAgents:
        $ref: '#/definitions/Integer'
        description: Number of active discovery agents.
      blackListedAgents:
        $ref: '#/definitions/Integer'
        description: Number of blacklisted discovery agents.
      healthyAgents:
        $ref: '#/definitions/Integer'
        description: Number of healthy discovery agents
      shutdownAgents:
        $ref: '#/definitions/Integer'
        description: Number of discovery agents with status SHUTDOWN.
      totalAgents:
        $ref: '#/definitions/Integer'
        description: Total number of discovery agents.
      unhealthyAgents:
        $ref: '#/definitions/Integer'
        description: Number of unhealthy discovery agents.
      unknownAgents:
        $ref: '#/definitions/Integer'
        description: Number of unknown discovery agents.
    required:
      - activeAgents
      - healthyAgents
      - blackListedAgents
      - shutdownAgents
      - unhealthyAgents
      - totalAgents
      - unknownAgents
    type: object
  CustomerConnectorInfo:
    description: Inventory data for installed discovery connectors.
    properties:
      activeConnectors:
        $ref: '#/definitions/Integer'
        description: Number of active discovery connectors.
      blackListedConnectors:
        $ref: '#/definitions/Integer'
        description: Number of blacklisted discovery connectors.
      healthyConnectors:
        $ref: '#/definitions/Integer'
        description: Number of healthy discovery connectors.
      shutdownConnectors:
        $ref: '#/definitions/Integer'
        description: 'Number of discovery connectors with status SHUTDOWN,'
      totalConnectors:
        $ref: '#/definitions/Integer'
        description: Total number of discovery connectors.
      unhealthyConnectors:
        $ref: '#/definitions/Integer'
        description: Number of unhealthy discovery connectors.
      unknownConnectors:
        $ref: '#/definitions/Integer'
        description: Number of unknown discovery connectors.
    required:
      - activeConnectors
      - healthyConnectors
      - blackListedConnectors
      - shutdownConnectors
      - unhealthyConnectors
      - totalConnectors
      - unknownConnectors
    type: object
  DeleteApplicationsRequest:
    properties:
      configurationIds:
        $ref: '#/definitions/ApplicationIdsList'
        description: Configuration ID of an application to be deleted.
    required:
      - configurationIds
    type: object
  DeleteApplicationsResponse:
    properties: {}
    type: object
  DeleteTagsRequest:
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: A list of configuration items with tags that you want to delete.
      tags:
        $ref: '#/definitions/TagSet'
        description: '<p>Tags that you want to delete from one or more configuration items. Specify the tags that you want to delete in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p>'
    required:
      - configurationIds
    type: object
  DeleteTagsResponse:
    properties: {}
    type: object
  DescribeAgentsRequest:
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: 'The agent or the Connector IDs for which you want information. If you specify no IDs, the system returns information about all agents/Connectors associated with your AWS user account.'
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{"key": "collectionStatus", "value": "STARTED"}</code> </p>'
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of agents/Connectors to return in a single page of output. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
    type: object
  DescribeAgentsResponse:
    properties:
      agentsInfo:
        $ref: '#/definitions/AgentsInfo'
        description: 'Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an agent/Connector ID. The output includes agent/Connector IDs, IP addresses, media access control (MAC) addresses, agent/Connector health, host name where the agent/Connector resides, and the version number of each agent/Connector.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
    type: object
  DescribeConfigurationsAttribute:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  DescribeConfigurationsAttributes:
    items:
      $ref: '#/definitions/DescribeConfigurationsAttribute'
    type: array
  DescribeConfigurationsRequest:
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: One or more configuration IDs.
    required:
      - configurationIds
    type: object
  DescribeConfigurationsResponse:
    properties:
      configurations:
        $ref: '#/definitions/DescribeConfigurationsAttributes'
        description: A key in the response map. The value is an array of data.
    type: object
  DescribeExportConfigurationsRequest:
    properties:
      exportIds:
        $ref: '#/definitions/ExportIds'
        description: A unique identifier that you can use to query the export status.
      maxResults:
        $ref: '#/definitions/Integer'
        description: The maximum number of results that you want to display as a part of the query.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to get the next set of results. For example, if you specify 100 IDs for <code>DescribeExportConfigurationsRequest$exportIds</code> but set <code>DescribeExportConfigurationsRequest$maxResults</code> to 10, you get results in a set of 10. Use the token in the query to get the next set of 10.'
    type: object
  DescribeExportConfigurationsResponse:
    properties:
      exportsInfo:
        $ref: '#/definitions/ExportsInfo'
        description: 'Returns export details. When the status is complete, the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to get the next set of results. For example, if you specify 100 IDs for <code>DescribeExportConfigurationsRequest$exportIds</code> but set <code>DescribeExportConfigurationsRequest$maxResults</code> to 10, you get results in a set of 10. Use the token in the query to get the next set of 10.'
    type: object
  DescribeExportTasksRequest:
    properties:
      exportIds:
        $ref: '#/definitions/ExportIds'
        description: One or more unique identifiers used to query the status of an export request.
      filters:
        $ref: '#/definitions/ExportFilters'
        description: <p>One or more filters.</p> <ul> <li> <p> <code>AgentId</code> - ID of the agent whose collected data will be exported</p> </li> </ul>
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of volume results returned by <code>DescribeExportTasks</code> in paginated output. When this parameter is used, <code>DescribeExportTasks</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The <code>nextToken</code> value returned from a previous paginated <code>DescribeExportTasks</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is null when there are no more results to return.
    type: object
  DescribeExportTasksResponse:
    properties:
      exportsInfo:
        $ref: '#/definitions/ExportsInfo'
        description: 'Contains one or more sets of export request details. When the status of a request is <code>SUCCEEDED</code>, the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <code>nextToken</code> value to include in a future <code>DescribeExportTasks</code> request. When the results of a <code>DescribeExportTasks</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.'
    type: object
  DescribeTagsRequest:
    properties:
      filters:
        $ref: '#/definitions/TagFilters'
        description: 'You can filter the list using a <i>key</i>-<i>value</i> format. You can separate these items by using logical operators. Allowed filters include <code>tagKey</code>, <code>tagValue</code>, and <code>configurationId</code>. '
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of items to return in a single page of output. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to start the list. Use this token to get the next set of results.
    type: object
  DescribeTagsResponse:
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The call returns a token. Use this token to get the next set of results.
      tags:
        $ref: '#/definitions/ConfigurationTagSet'
        description: 'Depending on the input, this is a list of configuration items tagged with a specific tag, or a list of tags for a specific configuration item.'
    type: object
  DisassociateConfigurationItemsFromApplicationRequest:
    properties:
      applicationConfigurationId:
        $ref: '#/definitions/ApplicationId'
        description: Configuration ID of an application from which each item is disassociated.
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: Configuration ID of each item to be disassociated from an application.
    required:
      - applicationConfigurationId
      - configurationIds
    type: object
  DisassociateConfigurationItemsFromApplicationResponse:
    properties: {}
    type: object
  ExportConfigurationsResponse:
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier that you can use to query the export status.
    type: object
  ExportDataFormat:
    enum:
      - CSV
      - GRAPHML
    type: string
  ExportDataFormats:
    items:
      $ref: '#/definitions/ExportDataFormat'
    type: array
  ExportFilter:
    description: 'Used to select which agent''s data is to be exported. A single agent ID may be selected for export using the <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_StartExportTask.html">StartExportTask</a> action.'
    properties:
      condition:
        $ref: '#/definitions/Condition'
        description: 'Supported condition: <code>EQUALS</code> '
      name:
        $ref: '#/definitions/FilterName'
        description: 'A single <code>ExportFilter</code> name. Supported filters: <code>agentId</code>.'
      values:
        $ref: '#/definitions/FilterValues'
        description: 'A single <code>agentId</code> for a Discovery Agent. An <code>agentId</code> can be found using the <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html">DescribeAgents</a> action. Typically an ADS <code>agentId</code> is in the form <code>o-0123456789abcdef0</code>.'
    required:
      - name
      - values
      - condition
    type: object
  ExportFilters:
    items:
      $ref: '#/definitions/ExportFilter'
    type: array
  ExportIds:
    items:
      $ref: '#/definitions/ConfigurationsExportId'
    type: array
  ExportInfo:
    description: Information regarding the export status of discovered data. The value is an array of objects.
    properties:
      configurationsDownloadUrl:
        $ref: '#/definitions/ConfigurationsDownloadUrl'
        description: A URL for an Amazon S3 bucket where you can review the exported data. The URL is displayed only if the export succeeded.
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier used to query an export.
      exportRequestTime:
        $ref: '#/definitions/ExportRequestTime'
        description: The time that the data export was initiated.
      exportStatus:
        $ref: '#/definitions/ExportStatus'
        description: The status of the data export job.
      isTruncated:
        $ref: '#/definitions/Boolean'
        description: 'If true, the export of agent information exceeded the size limit for a single export and the exported data is incomplete for the requested time range. To address this, select a smaller time range for the export by using <code>startDate</code> and <code>endDate</code>.'
      requestedEndTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The <code>endTime</code> used in the <code>StartExportTask</code> request. If no <code>endTime</code> was requested, this result does not appear in <code>ExportInfo</code>.'
      requestedStartTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The value of <code>startTime</code> parameter in the <code>StartExportTask</code> request. If no <code>startTime</code> was requested, this result does not appear in <code>ExportInfo</code>.'
      statusMessage:
        $ref: '#/definitions/ExportStatusMessage'
        description: A status message provided for API callers.
    required:
      - exportId
      - exportStatus
      - statusMessage
      - exportRequestTime
    type: object
  ExportRequestTime:
    format: date-time
    type: string
  ExportStatus:
    enum:
      - FAILED
      - SUCCEEDED
      - IN_PROGRESS
    type: string
  ExportStatusMessage:
    type: string
  ExportsInfo:
    items:
      $ref: '#/definitions/ExportInfo'
    type: array
  Filter:
    description: '<p>A filter that can use conditional operators.</p> <p>For more information about filters, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html">Querying Discovered Configuration Items</a>. </p>'
    properties:
      condition:
        $ref: '#/definitions/Condition'
        description: 'A conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by <i>AND</i>. If you specify multiple values for a particular filter, the system differentiates the values using <i>OR</i>. Calling either <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns attributes of matching configuration items.'
      name:
        $ref: '#/definitions/String'
        description: The name of the filter.
      values:
        $ref: '#/definitions/FilterValues'
        description: 'A string value on which to filter. For example, if you choose the <code>destinationServer.osVersion</code> filter name, you could specify <code>Ubuntu</code> for the value.'
    required:
      - name
      - values
      - condition
    type: object
  FilterName:
    type: string
  FilterValue:
    type: string
  FilterValues:
    items:
      $ref: '#/definitions/FilterValue'
    type: array
  Filters:
    items:
      $ref: '#/definitions/Filter'
    type: array
  GetDiscoverySummaryRequest:
    properties: {}
    type: object
  GetDiscoverySummaryResponse:
    properties:
      agentSummary:
        $ref: '#/definitions/CustomerAgentInfo'
        description: 'Details about discovered agents, including agent status and health.'
      applications:
        $ref: '#/definitions/Long'
        description: The number of applications discovered.
      connectorSummary:
        $ref: '#/definitions/CustomerConnectorInfo'
        description: 'Details about discovered connectors, including connector status and health.'
      servers:
        $ref: '#/definitions/Long'
        description: The number of servers discovered.
      serversMappedToApplications:
        $ref: '#/definitions/Long'
        description: The number of servers mapped to applications.
      serversMappedtoTags:
        $ref: '#/definitions/Long'
        description: The number of servers mapped to tags.
    type: object
  Integer:
    type: integer
  InvalidParameterException:
    description: One or more parameters are not valid. Verify the parameters and try again.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  InvalidParameterValueException:
    description: The value of one or more parameters are either invalid or out of range. Verify the parameter values and try again.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  ListConfigurationsRequest:
    properties:
      configurationType:
        $ref: '#/definitions/ConfigurationItemType'
        description: 'A valid configuration identified by Application Discovery Service. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p> <p>For a complete list of filter options and guidance about using them with this action, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#ListConfigurations">Querying Discovered Configuration Items</a>. </p>'
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of items to return. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if a previous call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
      orderBy:
        $ref: '#/definitions/OrderByList'
        description: 'Certain filter criteria return output that can be sorted in ascending or descending order. For a list of output characteristics for each filter, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#ListConfigurations">Using the ListConfigurations Action</a>.'
    required:
      - configurationType
    type: object
  ListConfigurationsResponse:
    properties:
      configurations:
        $ref: '#/definitions/Configurations'
        description: 'Returns configuration details, including the configuration ID, attribute names, and attribute values.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if your call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
    type: object
  ListServerNeighborsRequest:
    properties:
      configurationId:
        $ref: '#/definitions/ConfigurationId'
        description: Configuration ID of the server for which neighbors are being listed.
      maxResults:
        $ref: '#/definitions/Integer'
        description: Maximum number of results to return in a single page of output.
      neighborConfigurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: List of configuration IDs to test for one-hop-away.
      nextToken:
        $ref: '#/definitions/String'
        description: 'Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
      portInformationNeeded:
        $ref: '#/definitions/Boolean'
        description: Flag to indicate if port and protocol information is needed as part of the response.
    required:
      - configurationId
    type: object
  ListServerNeighborsResponse:
    properties:
      knownDependencyCount:
        $ref: '#/definitions/Long'
        description: Count of distinct servers that are one hop away from the given server.
      neighbors:
        $ref: '#/definitions/NeighborDetailsList'
        description: List of distinct servers that are one hop away from the given server.
      nextToken:
        $ref: '#/definitions/String'
        description: 'Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
    required:
      - neighbors
    type: object
  Long:
    type: integer
  Message:
    type: string
  NeighborConnectionDetail:
    description: Details about neighboring servers.
    properties:
      connectionsCount:
        $ref: '#/definitions/Long'
        description: The number of open network connections with the neighboring server.
      destinationPort:
        $ref: '#/definitions/BoxedInteger'
        description: The destination network port for the connection.
      destinationServerId:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the server that accepted the network connection.
      sourceServerId:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the server that opened the network connection.
      transportProtocol:
        $ref: '#/definitions/String'
        description: The network protocol used for the connection.
    required:
      - sourceServerId
      - destinationServerId
      - connectionsCount
    type: object
  NeighborDetailsList:
    items:
      $ref: '#/definitions/NeighborConnectionDetail'
    type: array
  NextToken:
    type: string
  OperationNotPermittedException:
    description: This operation is not permitted.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  OrderByElement:
    description: A field and direction for ordered output.
    properties:
      fieldName:
        $ref: '#/definitions/String'
        description: The field on which to order.
      sortOrder:
        $ref: '#/definitions/orderString'
        description: Ordering direction.
    required:
      - fieldName
    type: object
  OrderByList:
    items:
      $ref: '#/definitions/OrderByElement'
    type: array
  ResourceNotFoundException:
    description: The specified configuration ID was not located. Verify the configuration ID and try again.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  ServerInternalErrorException:
    description: The server experienced an internal error. Try again.
    properties:
      message:
        $ref: '#/definitions/Message'
    type: object
  StartDataCollectionByAgentIdsRequest:
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: 'The IDs of the agents or connectors from which to start collecting data. If you send a request to an agent/connector ID that you do not have permission to contact, according to your AWS account, the service does not throw an exception. Instead, it returns the error in the <i>Description</i> field. If you send a request to multiple agents/connectors and you do not have permission to contact some of those agents/connectors, the system does not throw an exception. Instead, the system shows <code>Failed</code> in the <i>Description</i> field.'
    required:
      - agentIds
    type: object
  StartDataCollectionByAgentIdsResponse:
    properties:
      agentsConfigurationStatus:
        $ref: '#/definitions/AgentConfigurationStatusList'
        description: 'Information about agents or the connector that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.'
    type: object
  StartExportTaskRequest:
    properties:
      endTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The end timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, exported data includes the most recent data collected by the agent.'
      exportDataFormat:
        $ref: '#/definitions/ExportDataFormats'
        description: The file format for the returned export data. Default value is <code>CSV</code>.
      filters:
        $ref: '#/definitions/ExportFilters'
        description: 'If a filter is present, it selects the single <code>agentId</code> of the Application Discovery Agent for which data is exported. The <code>agentId</code> can be found in the results of the <code>DescribeAgents</code> API or CLI. If no filter is present, <code>startTime</code> and <code>endTime</code> are ignored and exported data includes both Agentless Discovery Connector data and summary data from Application Discovery agents. '
      startTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The start timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, data is exported starting from the first data collected by the agent.'
    type: object
  StartExportTaskResponse:
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier used to query the status of an export request.
    type: object
  StopDataCollectionByAgentIdsRequest:
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: The IDs of the agents or connectors from which to stop collecting data.
    required:
      - agentIds
    type: object
  StopDataCollectionByAgentIdsResponse:
    properties:
      agentsConfigurationStatus:
        $ref: '#/definitions/AgentConfigurationStatusList'
        description: 'Information about the agents or connector that were instructed to stop collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.'
    type: object
  String:
    type: string
  Tag:
    description: Metadata that help you categorize IT assets.
    properties:
      key:
        $ref: '#/definitions/TagKey'
        description: The type of tag on which to filter.
      value:
        $ref: '#/definitions/TagValue'
        description: A value for a tag key on which to filter.
    required:
      - key
      - value
    type: object
  TagFilter:
    description: 'The tag filter. Valid names are: <code>tagKey</code>, <code>tagValue</code>, <code>configurationId</code>.'
    properties:
      name:
        $ref: '#/definitions/FilterName'
        description: A name of the tag filter.
      values:
        $ref: '#/definitions/FilterValues'
        description: Values for the tag filter.
    required:
      - name
      - values
    type: object
  TagFilters:
    items:
      $ref: '#/definitions/TagFilter'
    type: array
  TagKey:
    type: string
  TagSet:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagValue:
    type: string
  TimeStamp:
    format: date-time
    type: string
  UpdateApplicationRequest:
    properties:
      configurationId:
        $ref: '#/definitions/ApplicationId'
        description: Configuration ID of the application to be updated.
      description:
        $ref: '#/definitions/String'
        description: New description of the application to be updated.
      name:
        $ref: '#/definitions/String'
        description: New name of the application to be updated.
    required:
      - configurationId
    type: object
  UpdateApplicationResponse:
    properties: {}
    type: object
  orderString:
    enum:
      - ASC
      - DESC
    type: string
