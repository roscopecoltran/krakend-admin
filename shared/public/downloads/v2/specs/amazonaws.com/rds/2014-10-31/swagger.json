{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "rds.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "description": "<fullname>Amazon Relational Database Service</fullname> <p> </p> <p>Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks, freeing up developers to focus on what makes their applications and businesses unique.</p> <p>Amazon RDS gives you access to the capabilities of a MySQL, MariaDB, PostgreSQL, Microsoft SQL Server, Oracle, or Amazon Aurora database server. These capabilities mean that the code, applications, and tools you already use today with your existing databases work with Amazon RDS without modification. Amazon RDS automatically backs up your database and maintains the database software that powers your DB instance. Amazon RDS is flexible: you can scale your database instance's compute resources and storage capacity to meet your application's demand. As with all Amazon Web Services, there are no up-front investments, and you pay only for the resources you use.</p> <p>This interface reference for Amazon RDS contains documentation for a programming or command line interface you can use to manage Amazon RDS. Note that Amazon RDS is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p> <p> <b>Amazon RDS API Reference</b> </p> <ul> <li> <p>For the alphabetical list of API actions, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html\">API Actions</a>.</p> </li> <li> <p>For the alphabetical list of data types, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Types.html\">Data Types</a>.</p> </li> <li> <p>For a list of common query parameters, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonParameters.html\">Common Parameters</a>.</p> </li> <li> <p>For descriptions of the error codes, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonErrors.html\">Common Errors</a>.</p> </li> </ul> <p> <b>Amazon RDS User Guide</b> </p> <ul> <li> <p>For a summary of the Amazon RDS interfaces, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html#Welcome.Interfaces\">Available RDS Interfaces</a>.</p> </li> <li> <p>For more information about how to use the Query API, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Using_the_Query_API.html\">Using the Query API</a>.</p> </li> </ul>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon Relational Database Service",
    "version": "2014-10-31",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2014-10-31.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "rds"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/rds/"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Associates an Identity and Access Management (IAM) role from an Aurora DB cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Authorizing.AWSServices.html\">Authorizing Amazon Aurora to Access Other AWS Services On Your Behalf</a>.",
        "operationId": "AddRoleToDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRoleToDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "DBClusterRoleAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterRoleAlreadyExistsFault"
            }
          },
          "482": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "483": {
            "description": "DBClusterRoleQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBClusterRoleQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#AddSourceIdentifierToSubscription": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Adds a source identifier to an existing RDS event notification subscription.",
        "operationId": "AddSourceIdentifierToSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddSourceIdentifierToSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddSourceIdentifierToSubscriptionResult"
            }
          },
          "480": {
            "description": "SubscriptionNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionNotFoundFault"
            }
          },
          "481": {
            "description": "SourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SourceNotFoundFault"
            }
          }
        }
      }
    },
    "/#AddTagsToResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
        "operationId": "AddTagsToResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagsToResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          }
        }
      }
    },
    "/#ApplyPendingMaintenanceAction": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
        "operationId": "ApplyPendingMaintenanceAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyPendingMaintenanceActionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplyPendingMaintenanceActionResult"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        }
      }
    },
    "/#AuthorizeDBSecurityGroupIngress": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You cannot authorize ingress from an EC2 security group in one AWS Region to an Amazon RDS DB instance in another. You cannot authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
        "operationId": "AuthorizeDBSecurityGroupIngress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizeDBSecurityGroupIngressMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthorizeDBSecurityGroupIngressResult"
            }
          },
          "480": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSecurityGroupStateFault"
            }
          },
          "482": {
            "description": "AuthorizationAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationAlreadyExistsFault"
            }
          },
          "483": {
            "description": "AuthorizationQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#CopyDBClusterParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Copies the specified DB cluster parameter group.",
        "operationId": "CopyDBClusterParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDBClusterParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyDBClusterParameterGroupResult"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "DBParameterGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupQuotaExceededFault"
            }
          },
          "482": {
            "description": "DBParameterGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupAlreadyExistsFault"
            }
          }
        }
      }
    },
    "/#CopyDBClusterSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another AWS Region. In that case, the AWS Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination AWS Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another AWS Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS Key Management System (KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source AWS Region where the DB cluster snapshot will be copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination AWS Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source AWS Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one AWS Region to another, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBClusterSnapshot.CrossRegion\"> Copying a DB Cluster Snapshot in the Same Account, Either in the Same Region or Across Regions</a> in the Amazon RDS User Guide.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "CopyDBClusterSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDBClusterSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyDBClusterSnapshotResult"
            }
          },
          "480": {
            "description": "DBClusterSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "483": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          },
          "484": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "485": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        }
      }
    },
    "/#CopyDBParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Copies the specified DB parameter group.",
        "operationId": "CopyDBParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDBParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyDBParameterGroupResult"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "DBParameterGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupAlreadyExistsFault"
            }
          },
          "482": {
            "description": "DBParameterGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#CopyDBSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Copies the specified DB snapshot. The source DB snapshot must be in the \"available\" state.</p> <p>You can copy a snapshot from one AWS Region to another. In that case, the AWS Region where you call the <code>CopyDBSnapshot</code> action is the destination AWS Region for the DB snapshot copy. </p> <p>You cannot copy an encrypted, shared DB snapshot from one AWS Region to another.</p> <p>For more information about copying snapshots, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopyDBSnapshot.html\">Copying a DB Snapshot</a> in the Amazon RDS User Guide. </p>",
        "operationId": "CopyDBSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDBSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyDBSnapshotResult"
            }
          },
          "480": {
            "description": "DBSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "484": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        }
      }
    },
    "/#CopyOptionGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Copies the specified option group.",
        "operationId": "CopyOptionGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyOptionGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopyOptionGroupResult"
            }
          },
          "480": {
            "description": "OptionGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "482": {
            "description": "OptionGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#CreateDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a Read Replica of another DB cluster or Amazon RDS MySQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "CreateDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBClusterResult"
            }
          },
          "480": {
            "description": "DBClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InsufficientStorageClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientStorageClusterCapacityFault"
            }
          },
          "482": {
            "description": "DBClusterQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBClusterQuotaExceededFault"
            }
          },
          "483": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "484": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "485": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "486": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "487": {
            "description": "InvalidDBSubnetGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetGroupStateFault"
            }
          },
          "488": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "489": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "490": {
            "description": "DBClusterParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupNotFoundFault"
            }
          },
          "491": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "492": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "493": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "494": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          }
        }
      }
    },
    "/#CreateDBClusterParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "CreateDBClusterParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBClusterParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBClusterParameterGroupResult"
            }
          },
          "480": {
            "description": "DBParameterGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupQuotaExceededFault"
            }
          },
          "481": {
            "description": "DBParameterGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupAlreadyExistsFault"
            }
          }
        }
      }
    },
    "/#CreateDBClusterSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> ",
        "operationId": "CreateDBClusterSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBClusterSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBClusterSnapshotResult"
            }
          },
          "480": {
            "description": "DBClusterSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "482": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "484": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          }
        }
      }
    },
    "/#CreateDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a new DB instance.",
        "operationId": "CreateDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBInstanceResult"
            }
          },
          "480": {
            "description": "DBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "482": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "483": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "484": {
            "description": "InstanceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/InstanceQuotaExceededFault"
            }
          },
          "485": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "486": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "487": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "488": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "489": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "490": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "491": {
            "description": "ProvisionedIopsNotAvailableInAZFault",
            "schema": {
              "$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault"
            }
          },
          "492": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "493": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "494": {
            "description": "StorageTypeNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/StorageTypeNotSupportedFault"
            }
          },
          "495": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "496": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "497": {
            "description": "DomainNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DomainNotFoundFault"
            }
          }
        }
      }
    },
    "/#CreateDBInstanceReadReplica": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new DB instance that acts as a Read Replica for an existing source DB instance. You can create a Read Replica for a DB instance running MySQL, MariaDB, or PostgreSQL. </p> <note> <p>Amazon Aurora does not support this action. You must call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster. </p> </note> <p>All Read Replica DB instances are created as Single-AZ deployments with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified below. </p> <important> <p>The source DB instance must have backup retention enabled. </p> </important> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html\">Working with PostgreSQL, MySQL, and MariaDB Read Replicas</a>. </p>",
        "operationId": "CreateDBInstanceReadReplica",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBInstanceReadReplicaMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBInstanceReadReplicaResult"
            }
          },
          "480": {
            "description": "DBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "482": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "483": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "484": {
            "description": "InstanceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/InstanceQuotaExceededFault"
            }
          },
          "485": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "486": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "487": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "488": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "489": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "490": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "491": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "492": {
            "description": "ProvisionedIopsNotAvailableInAZFault",
            "schema": {
              "$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault"
            }
          },
          "493": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "494": {
            "description": "DBSubnetGroupNotAllowedFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotAllowedFault"
            }
          },
          "495": {
            "description": "InvalidDBSubnetGroupFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetGroupFault"
            }
          },
          "496": {
            "description": "StorageTypeNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/StorageTypeNotSupportedFault"
            }
          },
          "497": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        }
      }
    },
    "/#CreateDBParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
        "operationId": "CreateDBParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBParameterGroupResult"
            }
          },
          "480": {
            "description": "DBParameterGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupQuotaExceededFault"
            }
          },
          "481": {
            "description": "DBParameterGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupAlreadyExistsFault"
            }
          }
        }
      }
    },
    "/#CreateDBSecurityGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a new DB security group. DB security groups control access to a DB instance.",
        "operationId": "CreateDBSecurityGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBSecurityGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBSecurityGroupResult"
            }
          },
          "480": {
            "description": "DBSecurityGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBSecurityGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupQuotaExceededFault"
            }
          },
          "482": {
            "description": "DBSecurityGroupNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotSupportedFault"
            }
          }
        }
      }
    },
    "/#CreateDBSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a DBSnapshot. The source DBInstance must be in \"available\" state.",
        "operationId": "CreateDBSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBSnapshotResult"
            }
          },
          "480": {
            "description": "DBSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "482": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#CreateDBSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
        "operationId": "CreateDBSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDBSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDBSubnetGroupResult"
            }
          },
          "480": {
            "description": "DBSubnetGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBSubnetGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupQuotaExceededFault"
            }
          },
          "482": {
            "description": "DBSubnetQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetQuotaExceededFault"
            }
          },
          "483": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "484": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        }
      }
    },
    "/#CreateEventSubscription": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates an RDS event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you will be notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you will receive notice of the events for that source type for all your RDS sources. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all RDS sources belonging to your customer account.</p>",
        "operationId": "CreateEventSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateEventSubscriptionResult"
            }
          },
          "480": {
            "description": "EventSubscriptionQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionQuotaExceededFault"
            }
          },
          "481": {
            "description": "SubscriptionAlreadyExistFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionAlreadyExistFault"
            }
          },
          "482": {
            "description": "SNSInvalidTopicFault",
            "schema": {
              "$ref": "#/definitions/SNSInvalidTopicFault"
            }
          },
          "483": {
            "description": "SNSNoAuthorizationFault",
            "schema": {
              "$ref": "#/definitions/SNSNoAuthorizationFault"
            }
          },
          "484": {
            "description": "SNSTopicArnNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SNSTopicArnNotFoundFault"
            }
          },
          "485": {
            "description": "SubscriptionCategoryNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionCategoryNotFoundFault"
            }
          },
          "486": {
            "description": "SourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SourceNotFoundFault"
            }
          }
        }
      }
    },
    "/#CreateOptionGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates a new option group. You can create up to 20 option groups.",
        "operationId": "CreateOptionGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOptionGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateOptionGroupResult"
            }
          },
          "480": {
            "description": "OptionGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "OptionGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#DeleteDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and cannot be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DeleteDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDBClusterResult"
            }
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "482": {
            "description": "DBClusterSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "484": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          }
        }
      }
    },
    "/#DeleteDBClusterParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted cannot be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DeleteDBClusterParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBClusterParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          },
          "481": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteDBClusterSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DeleteDBClusterSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBClusterSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDBClusterSnapshotResult"
            }
          },
          "480": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          },
          "481": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and cannot be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action cannot be canceled or reverted once submitted. </p> <p>Note that when a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you cannot delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a Read Replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <a>PromoteReadReplicaDBCluster</a> API action to promote the DB cluster so it's no longer a Read Replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
        "operationId": "DeleteDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDBInstanceResult"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "482": {
            "description": "DBSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "484": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          }
        }
      }
    },
    "/#DeleteDBParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted cannot be associated with any DB instances.",
        "operationId": "DeleteDBParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          },
          "481": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteDBSecurityGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>",
        "operationId": "DeleteDBSecurityGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBSecurityGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidDBSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSecurityGroupStateFault"
            }
          },
          "481": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteDBSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a DBSnapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DBSnapshot must be in the <code>available</code> state to be deleted.</p> </note>",
        "operationId": "DeleteDBSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteDBSnapshotResult"
            }
          },
          "480": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteDBSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
        "operationId": "DeleteDBSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDBSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidDBSubnetGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetGroupStateFault"
            }
          },
          "481": {
            "description": "InvalidDBSubnetStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetStateFault"
            }
          },
          "482": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteEventSubscription": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes an RDS event notification subscription.",
        "operationId": "DeleteEventSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteEventSubscriptionResult"
            }
          },
          "480": {
            "description": "SubscriptionNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidEventSubscriptionStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidEventSubscriptionStateFault"
            }
          }
        }
      }
    },
    "/#DeleteOptionGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes an existing option group.",
        "operationId": "DeleteOptionGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteOptionGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidOptionGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidOptionGroupStateFault"
            }
          }
        }
      }
    },
    "/#DescribeAccountAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command does not take any parameters.</p>",
        "operationId": "DescribeAccountAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAccountAttributesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountAttributesMessage"
            }
          }
        }
      }
    },
    "/#DescribeCertificates": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists the set of CA certificates provided by Amazon RDS for this AWS account.",
        "operationId": "DescribeCertificates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCertificatesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CertificateMessage"
            }
          },
          "480": {
            "description": "CertificateNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CertificateNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBClusterParameterGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DescribeDBClusterParameterGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBClusterParameterGroupsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupsMessage"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBClusterParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DescribeDBClusterParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBClusterParametersMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupDetails"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBClusterSnapshotAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
        "operationId": "DescribeDBClusterSnapshotAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBClusterSnapshotAttributesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeDBClusterSnapshotAttributesResult"
            }
          },
          "480": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBClusterSnapshots": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DescribeDBClusterSnapshots",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBClusterSnapshotsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotMessage"
            }
          },
          "480": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBClusters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DescribeDBClusters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBClustersMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterMessage"
            }
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBEngineVersions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of the available DB engines.",
        "operationId": "DescribeDBEngineVersions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBEngineVersionsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBEngineVersionMessage"
            }
          }
        }
      }
    },
    "/#DescribeDBInstances": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns information about provisioned RDS instances. This API supports pagination.",
        "operationId": "DescribeDBInstances",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBInstancesMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBInstanceMessage"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          }
        },
        "x-waiters": [
          {
            "acceptors": [
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "available",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "deleted",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "deleting",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "failed",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "incompatible-restore",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "incompatible-parameters",
                "matcher": "pathAny",
                "state": "failure"
              }
            ],
            "delay": 30,
            "maxAttempts": 60,
            "operation": "DescribeDBInstances"
          },
          {
            "acceptors": [
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "deleted",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "expected": "DBInstanceNotFound",
                "matcher": "error",
                "state": "success"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "creating",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "modifying",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "rebooting",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "DBInstances[].DBInstanceStatus",
                "expected": "resetting-master-credentials",
                "matcher": "pathAny",
                "state": "failure"
              }
            ],
            "delay": 30,
            "maxAttempts": 60,
            "operation": "DescribeDBInstances"
          }
        ]
      }
    },
    "/#DescribeDBLogFiles": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of DB log files for the DB instance.",
        "operationId": "DescribeDBLogFiles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBLogFilesMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeDBLogFilesResponse"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBParameterGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
        "operationId": "DescribeDBParameterGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBParameterGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupsMessage"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns the detailed parameter list for a particular DB parameter group.",
        "operationId": "DescribeDBParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBParametersMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupDetails"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBSecurityGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. ",
        "operationId": "DescribeDBSecurityGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBSecurityGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupMessage"
            }
          },
          "480": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBSnapshotAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <a>ModifyDBSnapshotAttribute</a> API action.</p>",
        "operationId": "DescribeDBSnapshotAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBSnapshotAttributesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeDBSnapshotAttributesResult"
            }
          },
          "480": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBSnapshots": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns information about DB snapshots. This API action supports pagination.",
        "operationId": "DescribeDBSnapshots",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBSnapshotsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBSnapshotMessage"
            }
          },
          "480": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeDBSubnetGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
        "operationId": "DescribeDBSubnetGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeDBSubnetGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupMessage"
            }
          },
          "480": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeEngineDefaultClusterParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "DescribeEngineDefaultClusterParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultClusterParametersMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultClusterParametersResult"
            }
          }
        }
      }
    },
    "/#DescribeEngineDefaultParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns the default engine and system parameter information for the specified database engine.",
        "operationId": "DescribeEngineDefaultParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultParametersMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultParametersResult"
            }
          }
        }
      }
    },
    "/#DescribeEventCategories": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> topic in the <i>Amazon RDS User Guide.</i> ",
        "operationId": "DescribeEventCategories",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventCategoriesMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EventCategoriesMessage"
            }
          }
        }
      }
    },
    "/#DescribeEventSubscriptions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>",
        "operationId": "DescribeEventSubscriptions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventSubscriptionsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsMessage"
            }
          },
          "480": {
            "description": "SubscriptionNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeEvents": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.",
        "operationId": "DescribeEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EventsMessage"
            }
          }
        }
      }
    },
    "/#DescribeOptionGroupOptions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes all available options.",
        "operationId": "DescribeOptionGroupOptions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeOptionGroupOptionsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OptionGroupOptionsMessage"
            }
          }
        }
      }
    },
    "/#DescribeOptionGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the available option groups.",
        "operationId": "DescribeOptionGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeOptionGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OptionGroups"
            }
          },
          "480": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeOrderableDBInstanceOptions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of orderable DB instance options for the specified engine.",
        "operationId": "DescribeOrderableDBInstanceOptions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeOrderableDBInstanceOptionsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderableDBInstanceOptionsMessage"
            }
          }
        }
      }
    },
    "/#DescribePendingMaintenanceActions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
        "operationId": "DescribePendingMaintenanceActions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribePendingMaintenanceActionsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PendingMaintenanceActionsMessage"
            }
          },
          "480": {
            "description": "ResourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ResourceNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeReservedDBInstances": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
        "operationId": "DescribeReservedDBInstances",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReservedDBInstancesMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstanceMessage"
            }
          },
          "480": {
            "description": "ReservedDBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstanceNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeReservedDBInstancesOfferings": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists available reserved DB instance offerings.",
        "operationId": "DescribeReservedDBInstancesOfferings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReservedDBInstancesOfferingsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstancesOfferingMessage"
            }
          },
          "480": {
            "description": "ReservedDBInstancesOfferingNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstancesOfferingNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeSourceRegions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of the source AWS regions where the current AWS Region can create a Read Replica or copy a DB snapshot from. This API action supports pagination.",
        "operationId": "DescribeSourceRegions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeSourceRegionsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SourceRegionMessage"
            }
          }
        }
      }
    },
    "/#DownloadDBLogFilePortion": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
        "operationId": "DownloadDBLogFilePortion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DownloadDBLogFilePortionMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "NumberOfLines",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DownloadDBLogFilePortionDetails"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "DBLogFileNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBLogFileNotFoundFault"
            }
          }
        }
      }
    },
    "/#FailoverDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "FailoverDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FailoverDBClusterResult"
            }
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "482": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          }
        }
      }
    },
    "/#ListTagsForResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagListMessage"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          }
        }
      }
    },
    "/#ModifyDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> ",
        "operationId": "ModifyDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBClusterResult"
            }
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "482": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "483": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "484": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "485": {
            "description": "InvalidDBSubnetGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetGroupStateFault"
            }
          },
          "486": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "487": {
            "description": "DBClusterParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupNotFoundFault"
            }
          },
          "488": {
            "description": "InvalidDBSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSecurityGroupStateFault"
            }
          },
          "489": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "490": {
            "description": "DBClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterAlreadyExistsFault"
            }
          }
        }
      }
    },
    "/#ModifyDBClusterParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>",
        "operationId": "ModifyDBClusterParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBClusterParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          }
        }
      }
    },
    "/#ModifyDBClusterSnapshotAttribute": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>",
        "operationId": "ModifyDBClusterSnapshotAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBClusterSnapshotAttributeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBClusterSnapshotAttributeResult"
            }
          },
          "480": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          },
          "482": {
            "description": "SharedSnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SharedSnapshotQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#ModifyDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.",
        "operationId": "ModifyDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBInstanceResult"
            }
          },
          "480": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "481": {
            "description": "InvalidDBSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSecurityGroupStateFault"
            }
          },
          "482": {
            "description": "DBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceAlreadyExistsFault"
            }
          },
          "483": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "484": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "485": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "486": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "487": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "488": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "489": {
            "description": "ProvisionedIopsNotAvailableInAZFault",
            "schema": {
              "$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault"
            }
          },
          "490": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "491": {
            "description": "DBUpgradeDependencyFailureFault",
            "schema": {
              "$ref": "#/definitions/DBUpgradeDependencyFailureFault"
            }
          },
          "492": {
            "description": "StorageTypeNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/StorageTypeNotSupportedFault"
            }
          },
          "493": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "494": {
            "description": "CertificateNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CertificateNotFoundFault"
            }
          },
          "495": {
            "description": "DomainNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DomainNotFoundFault"
            }
          }
        }
      }
    },
    "/#ModifyDBParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
        "operationId": "ModifyDBParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          }
        }
      }
    },
    "/#ModifyDBSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Updates a manual DB snapshot, which can be encrypted or not encrypted, with a new engine version. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL and Oracle. </p>",
        "operationId": "ModifyDBSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBSnapshotResult"
            }
          },
          "480": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          }
        }
      }
    },
    "/#ModifyDBSnapshotAttribute": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all AWS accounts. If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action.</p>",
        "operationId": "ModifyDBSnapshotAttribute",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBSnapshotAttributeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBSnapshotAttributeResult"
            }
          },
          "480": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "482": {
            "description": "SharedSnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SharedSnapshotQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#ModifyDBSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the AWS Region.",
        "operationId": "ModifyDBSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyDBSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyDBSubnetGroupResult"
            }
          },
          "480": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "481": {
            "description": "DBSubnetQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetQuotaExceededFault"
            }
          },
          "482": {
            "description": "SubnetAlreadyInUse",
            "schema": {
              "$ref": "#/definitions/SubnetAlreadyInUse"
            }
          },
          "483": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "484": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        }
      }
    },
    "/#ModifyEventSubscription": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies an existing RDS event notification subscription. Note that you cannot modify the source identifiers using this call; to change source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see a list of the event categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action.</p>",
        "operationId": "ModifyEventSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyEventSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyEventSubscriptionResult"
            }
          },
          "480": {
            "description": "EventSubscriptionQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionQuotaExceededFault"
            }
          },
          "481": {
            "description": "SubscriptionNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionNotFoundFault"
            }
          },
          "482": {
            "description": "SNSInvalidTopicFault",
            "schema": {
              "$ref": "#/definitions/SNSInvalidTopicFault"
            }
          },
          "483": {
            "description": "SNSNoAuthorizationFault",
            "schema": {
              "$ref": "#/definitions/SNSNoAuthorizationFault"
            }
          },
          "484": {
            "description": "SNSTopicArnNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SNSTopicArnNotFoundFault"
            }
          },
          "485": {
            "description": "SubscriptionCategoryNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionCategoryNotFoundFault"
            }
          }
        }
      }
    },
    "/#ModifyOptionGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies an existing option group.",
        "operationId": "ModifyOptionGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyOptionGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyOptionGroupResult"
            }
          },
          "480": {
            "description": "InvalidOptionGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidOptionGroupStateFault"
            }
          },
          "481": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#PromoteReadReplica": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Promotes a Read Replica DB instance to a standalone DB instance.</p> <note> <p>We recommend that you enable automated backups on your Read Replica before promoting the Read Replica. This ensures that no backup is taken during the promotion process. Once the instance is promoted to a primary instance, backups are taken based on your backup settings.</p> </note>",
        "operationId": "PromoteReadReplica",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromoteReadReplicaMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PromoteReadReplicaResult"
            }
          },
          "480": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "481": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          }
        }
      }
    },
    "/#PromoteReadReplicaDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Promotes a Read Replica DB cluster to a standalone DB cluster.",
        "operationId": "PromoteReadReplicaDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromoteReadReplicaDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PromoteReadReplicaDBClusterResult"
            }
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          }
        }
      }
    },
    "/#PurchaseReservedDBInstancesOffering": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Purchases a reserved DB instance offering.",
        "operationId": "PurchaseReservedDBInstancesOffering",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseReservedDBInstancesOfferingMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PurchaseReservedDBInstancesOfferingResult"
            }
          },
          "480": {
            "description": "ReservedDBInstancesOfferingNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstancesOfferingNotFoundFault"
            }
          },
          "481": {
            "description": "ReservedDBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstanceAlreadyExistsFault"
            }
          },
          "482": {
            "description": "ReservedDBInstanceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ReservedDBInstanceQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#RebootDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Rebooting a DB instance restarts the database engine service. A reboot also applies to the DB instance any modifications to the associated DB parameter group that were pending. Rebooting a DB instance results in a momentary outage of the instance, during which the DB instance status is set to rebooting. If the RDS instance is configured for MultiAZ, it is possible that the reboot will be conducted through a failover. An Amazon RDS event is created when the reboot is completed.</p> <p>If your DB instance is deployed in multiple Availability Zones, you can force a failover from one AZ to the other during the reboot. You might force a failover to test the availability of your DB instance deployment or to restore operations to the original AZ after a failover occurs.</p> <p>The time required to reboot is a function of the specific database engine's crash recovery process. To improve the reboot time, we recommend that you reduce database activities as much as possible during the reboot process to reduce rollback activity for in-transit transactions.</p>",
        "operationId": "RebootDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebootDBInstanceResult"
            }
          },
          "480": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "481": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          }
        }
      }
    },
    "/#RemoveRoleFromDBCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Disassociates an Identity and Access Management (IAM) role from an Aurora DB cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Authorizing.AWSServices.html\">Authorizing Amazon Aurora to Access Other AWS Services On Your Behalf</a>.",
        "operationId": "RemoveRoleFromDBCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveRoleFromDBClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "481": {
            "description": "DBClusterRoleNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterRoleNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          }
        }
      }
    },
    "/#RemoveSourceIdentifierFromSubscription": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Removes a source identifier from an existing RDS event notification subscription.",
        "operationId": "RemoveSourceIdentifierFromSubscription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveSourceIdentifierFromSubscriptionMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveSourceIdentifierFromSubscriptionResult"
            }
          },
          "480": {
            "description": "SubscriptionNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SubscriptionNotFoundFault"
            }
          },
          "481": {
            "description": "SourceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SourceNotFoundFault"
            }
          }
        }
      }
    },
    "/#RemoveTagsFromResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
        "operationId": "RemoveTagsFromResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveTagsFromResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          }
        }
      }
    },
    "/#ResetDBClusterParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "ResetDBClusterParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetDBClusterParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          },
          "481": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#ResetDBParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
        "operationId": "ResetDBParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetDBParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "InvalidDBParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBParameterGroupStateFault"
            }
          },
          "481": {
            "description": "DBParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBParameterGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#RestoreDBClusterFromS3": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Migrate.MySQL.html#Aurora.Migrate.MySQL.S3\">Migrating Data from MySQL by Using an Amazon S3 Bucket</a>.",
        "operationId": "RestoreDBClusterFromS3",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterFromS3Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterFromS3Result"
            }
          },
          "480": {
            "description": "DBClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBClusterQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBClusterQuotaExceededFault"
            }
          },
          "482": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "483": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "484": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "485": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "486": {
            "description": "InvalidDBSubnetGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSubnetGroupStateFault"
            }
          },
          "487": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "488": {
            "description": "InvalidS3BucketFault",
            "schema": {
              "$ref": "#/definitions/InvalidS3BucketFault"
            }
          },
          "489": {
            "description": "DBClusterParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterParameterGroupNotFoundFault"
            }
          },
          "490": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "491": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "492": {
            "description": "InsufficientStorageClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientStorageClusterCapacityFault"
            }
          }
        }
      }
    },
    "/#RestoreDBClusterFromSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.</p> <p>If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.</p> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "RestoreDBClusterFromSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterFromSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterFromSnapshotResult"
            }
          },
          "480": {
            "description": "DBClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBClusterQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBClusterQuotaExceededFault"
            }
          },
          "482": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "483": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "484": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "485": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          },
          "486": {
            "description": "InsufficientDBClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBClusterCapacityFault"
            }
          },
          "487": {
            "description": "InsufficientStorageClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientStorageClusterCapacityFault"
            }
          },
          "488": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "489": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          },
          "490": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "491": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "492": {
            "description": "InvalidRestoreFault",
            "schema": {
              "$ref": "#/definitions/InvalidRestoreFault"
            }
          },
          "493": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "494": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "495": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "496": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        }
      }
    },
    "/#RestoreDBClusterToPointInTime": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <a>CreateDBInstance</a> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>",
        "operationId": "RestoreDBClusterToPointInTime",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterToPointInTimeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreDBClusterToPointInTimeResult"
            }
          },
          "480": {
            "description": "DBClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBClusterAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "482": {
            "description": "DBClusterQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/DBClusterQuotaExceededFault"
            }
          },
          "483": {
            "description": "DBClusterSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterSnapshotNotFoundFault"
            }
          },
          "484": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "485": {
            "description": "InsufficientDBClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBClusterCapacityFault"
            }
          },
          "486": {
            "description": "InsufficientStorageClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientStorageClusterCapacityFault"
            }
          },
          "487": {
            "description": "InvalidDBClusterSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterSnapshotStateFault"
            }
          },
          "488": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "489": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "490": {
            "description": "InvalidRestoreFault",
            "schema": {
              "$ref": "#/definitions/InvalidRestoreFault"
            }
          },
          "491": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "492": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "493": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "494": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "495": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          }
        }
      }
    },
    "/#RestoreDBInstanceFromDBSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with the most of original configuration with the default security group and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored AZ deployment and not a single-AZ deployment.</p> <p>If your intent is to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS does not allow two DB instances with the same name. Once you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you will replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p>",
        "operationId": "RestoreDBInstanceFromDBSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDBInstanceFromDBSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreDBInstanceFromDBSnapshotResult"
            }
          },
          "480": {
            "description": "DBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBSnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InstanceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/InstanceQuotaExceededFault"
            }
          },
          "483": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "484": {
            "description": "InvalidDBSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSnapshotStateFault"
            }
          },
          "485": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "486": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "487": {
            "description": "InvalidRestoreFault",
            "schema": {
              "$ref": "#/definitions/InvalidRestoreFault"
            }
          },
          "488": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "489": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "490": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "491": {
            "description": "ProvisionedIopsNotAvailableInAZFault",
            "schema": {
              "$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault"
            }
          },
          "492": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "493": {
            "description": "StorageTypeNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/StorageTypeNotSupportedFault"
            }
          },
          "494": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "495": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "496": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "497": {
            "description": "DomainNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DomainNotFoundFault"
            }
          }
        }
      }
    },
    "/#RestoreDBInstanceToPointInTime": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected availability zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p>",
        "operationId": "RestoreDBInstanceToPointInTime",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreDBInstanceToPointInTimeMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RestoreDBInstanceToPointInTimeResult"
            }
          },
          "480": {
            "description": "DBInstanceAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceAlreadyExistsFault"
            }
          },
          "481": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "482": {
            "description": "InstanceQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/InstanceQuotaExceededFault"
            }
          },
          "483": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "484": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "485": {
            "description": "PointInTimeRestoreNotEnabledFault",
            "schema": {
              "$ref": "#/definitions/PointInTimeRestoreNotEnabledFault"
            }
          },
          "486": {
            "description": "StorageQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/StorageQuotaExceededFault"
            }
          },
          "487": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "488": {
            "description": "InvalidRestoreFault",
            "schema": {
              "$ref": "#/definitions/InvalidRestoreFault"
            }
          },
          "489": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "490": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "491": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "492": {
            "description": "ProvisionedIopsNotAvailableInAZFault",
            "schema": {
              "$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault"
            }
          },
          "493": {
            "description": "OptionGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/OptionGroupNotFoundFault"
            }
          },
          "494": {
            "description": "StorageTypeNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/StorageTypeNotSupportedFault"
            }
          },
          "495": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "496": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          },
          "497": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "498": {
            "description": "DomainNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DomainNotFoundFault"
            }
          }
        }
      }
    },
    "/#RevokeDBSecurityGroupIngress": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).",
        "operationId": "RevokeDBSecurityGroupIngress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RevokeDBSecurityGroupIngressMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeDBSecurityGroupIngressResult"
            }
          },
          "480": {
            "description": "DBSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSecurityGroupNotFoundFault"
            }
          },
          "481": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidDBSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBSecurityGroupStateFault"
            }
          }
        }
      }
    },
    "/#StartDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Starts a DB instance that was stopped using the AWS console, the stop-db-instance AWS CLI command, or the StopDBInstance action. For more information, see Stopping and Starting a DB instance in the AWS RDS user guide. ",
        "operationId": "StartDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartDBInstanceResult"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "482": {
            "description": "InsufficientDBInstanceCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientDBInstanceCapacityFault"
            }
          },
          "483": {
            "description": "DBSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupNotFoundFault"
            }
          },
          "484": {
            "description": "DBSubnetGroupDoesNotCoverEnoughAZs",
            "schema": {
              "$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs"
            }
          },
          "485": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          },
          "486": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          },
          "487": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "488": {
            "description": "DBClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBClusterNotFoundFault"
            }
          },
          "489": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "490": {
            "description": "KMSKeyNotAccessibleFault",
            "schema": {
              "$ref": "#/definitions/KMSKeyNotAccessibleFault"
            }
          }
        }
      }
    },
    "/#StopDBInstance": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": " Stops a DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. For more information, see Stopping and Starting a DB instance in the AWS RDS user guide. ",
        "operationId": "StopDBInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopDBInstanceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopDBInstanceResult"
            }
          },
          "480": {
            "description": "DBInstanceNotFoundFault",
            "schema": {
              "$ref": "#/definitions/DBInstanceNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidDBInstanceStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBInstanceStateFault"
            }
          },
          "482": {
            "description": "DBSnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/DBSnapshotAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "484": {
            "description": "InvalidDBClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidDBClusterStateFault"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountAttributesMessage": {
      "description": "Data returned by the <b>DescribeAccountAttributes</b> action.",
      "properties": {
        "AccountQuotas": {
          "$ref": "#/definitions/AccountQuotaList",
          "description": "A list of <a>AccountQuota</a> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota."
        }
      },
      "type": "object"
    },
    "AccountQuota": {
      "description": "Describes a quota for an AWS account, for example, the number of DB instances allowed.",
      "properties": {
        "AccountQuotaName": {
          "$ref": "#/definitions/String",
          "description": "The name of the Amazon RDS quota for this AWS account."
        },
        "Max": {
          "$ref": "#/definitions/Long",
          "description": "The maximum allowed value for the quota."
        },
        "Used": {
          "$ref": "#/definitions/Long",
          "description": "The amount currently used toward the quota maximum."
        }
      },
      "type": "object"
    },
    "AccountQuotaList": {
      "items": {
        "$ref": "#/definitions/AccountQuota"
      },
      "type": "array"
    },
    "AddRoleToDBClusterMessage": {
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster to associate the IAM role with."
        },
        "RoleArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "RoleArn"
      ],
      "type": "object"
    },
    "AddSourceIdentifierToSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the event source to be added. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the RDS event notification subscription you want to add a source identifier to."
        }
      },
      "required": [
        "SubscriptionName",
        "SourceIdentifier"
      ],
      "type": "object"
    },
    "AddSourceIdentifierToSubscriptionResult": {
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription"
        }
      },
      "type": "object"
    },
    "AddTagsToResourceMessage": {
      "description": "<p/>",
      "properties": {
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "The Amazon RDS resource the tags will be added to. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags to be assigned to the Amazon RDS resource."
        }
      },
      "required": [
        "ResourceName",
        "Tags"
      ],
      "type": "object"
    },
    "ApplyMethod": {
      "enum": [
        "immediate",
        "pending-reboot"
      ],
      "type": "string"
    },
    "ApplyPendingMaintenanceActionMessage": {
      "description": "<p/>",
      "properties": {
        "ApplyAction": {
          "$ref": "#/definitions/String",
          "description": "<p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code> </p>"
        },
        "OptInType": {
          "$ref": "#/definitions/String",
          "description": "<p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> cannot be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>"
        },
        "ResourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>."
        }
      },
      "required": [
        "ResourceIdentifier",
        "ApplyAction",
        "OptInType"
      ],
      "type": "object"
    },
    "ApplyPendingMaintenanceActionResult": {
      "properties": {
        "ResourcePendingMaintenanceActions": {
          "$ref": "#/definitions/ResourcePendingMaintenanceActions"
        }
      },
      "type": "object"
    },
    "AttributeValueList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "AuthorizationAlreadyExistsFault": {
      "description": "The specified CIDRIP or EC2 security group is already authorized for the specified DB security group.",
      "properties": {},
      "type": "object"
    },
    "AuthorizationNotFoundFault": {
      "description": "<p>Specified CIDRIP or EC2 security group is not authorized for the specified DB security group.</p> <p>RDS may not also be authorized via IAM to perform necessary actions on your behalf.</p>",
      "properties": {},
      "type": "object"
    },
    "AuthorizationQuotaExceededFault": {
      "description": "DB security group authorization quota has been reached.",
      "properties": {},
      "type": "object"
    },
    "AuthorizeDBSecurityGroupIngressMessage": {
      "description": "<p/>",
      "properties": {
        "CIDRIP": {
          "$ref": "#/definitions/String",
          "description": "The IP range to authorize."
        },
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB security group to add authorization to."
        },
        "EC2SecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": " Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": " Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": " AWS account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The AWS Access Key ID is not an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        }
      },
      "required": [
        "DBSecurityGroupName"
      ],
      "type": "object"
    },
    "AuthorizeDBSecurityGroupIngressResult": {
      "properties": {
        "DBSecurityGroup": {
          "$ref": "#/definitions/DBSecurityGroup"
        }
      },
      "type": "object"
    },
    "AvailabilityZone": {
      "description": "<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the availability zone."
        }
      },
      "type": "object"
    },
    "AvailabilityZoneList": {
      "items": {
        "$ref": "#/definitions/AvailabilityZone"
      },
      "type": "array"
    },
    "AvailabilityZones": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BooleanOptional": {
      "type": "boolean"
    },
    "Certificate": {
      "description": "A CA certificate for an AWS account.",
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the certificate."
        },
        "CertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The unique key that identifies a certificate."
        },
        "CertificateType": {
          "$ref": "#/definitions/String",
          "description": "The type of the certificate."
        },
        "Thumbprint": {
          "$ref": "#/definitions/String",
          "description": "The thumbprint of the certificate."
        },
        "ValidFrom": {
          "$ref": "#/definitions/TStamp",
          "description": "The starting date from which the certificate is valid."
        },
        "ValidTill": {
          "$ref": "#/definitions/TStamp",
          "description": "The final date that the certificate continues to be valid."
        }
      },
      "type": "object"
    },
    "CertificateList": {
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "type": "array"
    },
    "CertificateMessage": {
      "description": "Data returned by the <b>DescribeCertificates</b> action.",
      "properties": {
        "Certificates": {
          "$ref": "#/definitions/CertificateList",
          "description": "The list of <a>Certificate</a> objects for the AWS account."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <a>DescribeCertificates</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        }
      },
      "type": "object"
    },
    "CertificateNotFoundFault": {
      "description": " <i>CertificateIdentifier</i> does not refer to an existing certificate. ",
      "properties": {},
      "type": "object"
    },
    "CharacterSet": {
      "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
      "properties": {
        "CharacterSetDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the character set."
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "The name of the character set."
        }
      },
      "type": "object"
    },
    "CopyDBClusterParameterGroupMessage": {
      "properties": {
        "SourceDBClusterParameterGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster parameter group.</p> </li> <li> <p>If the source DB cluster parameter group is in the same AWS Region as the copy, specify a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li> <li> <p>If the source DB parameter group is in a different AWS Region than the copy, specify a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p> </li> </ul>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetDBClusterParameterGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description for the copied DB cluster parameter group."
        },
        "TargetDBClusterParameterGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the copied DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code> </p>"
        }
      },
      "required": [
        "SourceDBClusterParameterGroupIdentifier",
        "TargetDBClusterParameterGroupIdentifier",
        "TargetDBClusterParameterGroupDescription"
      ],
      "type": "object"
    },
    "CopyDBClusterParameterGroupResult": {
      "properties": {
        "DBClusterParameterGroup": {
          "$ref": "#/definitions/DBClusterParameterGroup"
        }
      },
      "type": "object"
    },
    "CopyDBClusterSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "CopyTags": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the source DB cluster snapshot to the target DB cluster snapshot; otherwise false. The default is false."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The AWS KMS key ID for an encrypted DB cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an unencrypted DB cluster snapshot and specify a value for the <code>KmsKeyId</code> parameter, Amazon RDS encrypts the target DB cluster snapshot using the specified KMS encryption key. </p> <p>If you copy an encrypted DB cluster snapshot from your AWS account, you can specify a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster snapshot is encrypted with the same KMS key as the source DB cluster snapshot. </p> <p>If you copy an encrypted DB cluster snapshot that is shared from another AWS account, then you must specify a value for <code>KmsKeyId</code>. </p> <p>To copy an encrypted DB cluster snapshot to another AWS Region, you must set <code>KmsKeyId</code> to the KMS key ID you want to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you cannot use encryption keys from one AWS Region in another AWS Region.</p>"
        },
        "PreSignedUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> API action in the AWS Region that contains the source DB cluster snapshot to copy. The <code>PreSignedUrl</code> parameter must be used when copying an encrypted DB cluster snapshot from another AWS Region.</p> <p>The pre-signed URL must be a valid request for the <code>CopyDBSClusterSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster snapshot to be copied. The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>"
        },
        "SourceDBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.</p> <p>You cannot copy an encrypted, shared DB cluster snapshot from one AWS Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must specify a valid system snapshot in the \"available\" state.</p> </li> <li> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier.</p> </li> <li> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB cluster snapshot ARN. For more information, go to <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html\"> Copying a DB Snapshot or DB Cluster Snapshot</a>.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>"
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The ID of the region that contains the snapshot to be copied."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetDBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>"
        }
      },
      "required": [
        "SourceDBClusterSnapshotIdentifier",
        "TargetDBClusterSnapshotIdentifier"
      ],
      "type": "object"
    },
    "CopyDBClusterSnapshotResult": {
      "properties": {
        "DBClusterSnapshot": {
          "$ref": "#/definitions/DBClusterSnapshot"
        }
      },
      "type": "object"
    },
    "CopyDBParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "SourceDBParameterGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter group.</p> </li> <li> <p> Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>, or a valid ARN.</p> </li> </ul>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetDBParameterGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description for the copied DB parameter group."
        },
        "TargetDBParameterGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the copied DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-parameter-group</code> </p>"
        }
      },
      "required": [
        "SourceDBParameterGroupIdentifier",
        "TargetDBParameterGroupIdentifier",
        "TargetDBParameterGroupDescription"
      ],
      "type": "object"
    },
    "CopyDBParameterGroupResult": {
      "properties": {
        "DBParameterGroup": {
          "$ref": "#/definitions/DBParameterGroup"
        }
      },
      "type": "object"
    },
    "CopyDBSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "CopyTags": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the source DB snapshot to the target DB snapshot; otherwise false. The default is false."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The AWS KMS key ID for an encrypted DB snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you copy an encrypted DB snapshot from your AWS account, you can specify a value for this parameter to encrypt the copy with a new KMS encryption key. If you don't specify a value for this parameter, then the copy of the DB snapshot is encrypted with the same KMS key as the source DB snapshot. </p> <p>If you copy an encrypted DB snapshot that is shared from another AWS account, then you must specify a value for this parameter. </p> <p>If you specify this parameter when you copy an unencrypted snapshot, the copy is encrypted. </p> <p>If you copy an encrypted snapshot to a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you cannot use encryption keys from one AWS Region in another AWS Region. </p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of an option group to associate with the copy of the snapshot.</p> <p>Specify this option if you are copying a snapshot from one AWS Region to another, and your DB instance uses a nondefault option group. If your source DB instance uses Transparent Data Encryption for Oracle or Microsoft SQL Server, you must specify this option when copying across regions. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopySnapshot.Options\">Option Group Considerations</a>. </p>"
        },
        "PreSignedUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>The URL that contains a Signature Version 4 signed request for the <code>CopyDBSnapshot</code> API action in the source AWS Region that contains the source DB snapshot to copy. </p> <p>You must specify this parameter when you copy an encrypted DB snapshot from another AWS Region by using the Amazon RDS API. You can specify the source region option instead of this parameter when you copy an encrypted DB snapshot from another AWS Region by using the AWS CLI. </p> <p>The presigned URL must be a valid request for the <code>CopyDBSnapshot</code> API action that can be executed in the source AWS Region that contains the encrypted DB snapshot to be copied. The presigned URL request must contain the following parameter values: </p> <ul> <li> <p> <code>DestinationRegion</code> - The AWS Region that the encrypted DB snapshot will be copied to. This AWS Region is the same one where the <code>CopyDBSnapshot</code> action is called that contains this presigned URL. </p> <p>For example, if you copy an encrypted DB snapshot from the us-west-2 region to the us-east-1 region, then you call the <code>CopyDBSnapshot</code> action in the us-east-1 region and provide a presigned URL that contains a call to the <code>CopyDBSnapshot</code> action in the us-west-2 region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 region. </p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB snapshot in the destination AWS Region. This is the same identifier for both the <code>CopyDBSnapshot</code> action that is called in the destination AWS Region, and the action contained in the presigned URL. </p> </li> <li> <p> <code>SourceDBSnapshotIdentifier</code> - The DB snapshot identifier for the encrypted snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB snapshot from the us-west-2 region, then your <code>SourceDBSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20161115</code>. </p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\">Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>. </p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>"
        },
        "SourceDBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the source DB snapshot.</p> <p>If the source snapshot is in the same AWS Region as the copy, specify a valid DB snapshot identifier. For example, you might specify <code>rds:mysql-instance1-snapshot-20130805</code>. </p> <p>If the source snapshot is in a different AWS Region than the copy, specify a valid DB snapshot ARN. For example, you might specify <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code>. </p> <p>If you are copying from a shared manual DB snapshot, this parameter must be the Amazon Resource Name (ARN) of the shared DB snapshot. </p> <p>If you are copying an encrypted snapshot this parameter must be in the ARN format for the source AWS Region, and must match the <code>SourceDBSnapshotIdentifier</code> in the <code>PreSignedUrl</code> parameter. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid system snapshot in the \"available\" state.</p> </li> </ul> <p>Example: <code>rds:mydb-2012-04-02-00-01</code> </p> <p>Example: <code>arn:aws:rds:us-west-2:123456789012:snapshot:mysql-instance1-snapshot-20130805</code> </p>"
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The ID of the region that contains the snapshot to be copied."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetDBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the copy of the snapshot. </p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-db-snapshot</code> </p>"
        }
      },
      "required": [
        "SourceDBSnapshotIdentifier",
        "TargetDBSnapshotIdentifier"
      ],
      "type": "object"
    },
    "CopyDBSnapshotResult": {
      "properties": {
        "DBSnapshot": {
          "$ref": "#/definitions/DBSnapshot"
        }
      },
      "type": "object"
    },
    "CopyOptionGroupMessage": {
      "description": "<p/>",
      "properties": {
        "SourceOptionGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier or ARN for the source option group. For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid option group.</p> </li> <li> <p>If the source option group is in the same AWS Region as the copy, specify a valid option group identifier, for example <code>my-option-group</code>, or a valid ARN.</p> </li> <li> <p>If the source option group is in a different AWS Region than the copy, specify a valid option group ARN, for example <code>arn:aws:rds:us-west-2:123456789012:og:special-options</code>.</p> </li> </ul>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetOptionGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description for the copied option group."
        },
        "TargetOptionGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the copied option group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-option-group</code> </p>"
        }
      },
      "required": [
        "SourceOptionGroupIdentifier",
        "TargetOptionGroupIdentifier",
        "TargetOptionGroupDescription"
      ],
      "type": "object"
    },
    "CopyOptionGroupResult": {
      "properties": {
        "OptionGroup": {
          "$ref": "#/definitions/OptionGroup"
        }
      },
      "type": "object"
    },
    "CreateDBClusterMessage": {
      "description": "<p/>",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "A list of EC2 Availability Zones that instances in the DB cluster can be created in. For information on regions and Availability Zones, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html\">Regions and Availability Zones</a>. "
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "A value that indicates that the DB cluster should be associated with the specified CharacterSet."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>"
        },
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p> The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, <code>default.aurora5.6</code> will be used. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A DB subnet group to associate with this DB cluster.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon RDS will not create a database in the DB cluster you are creating."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A Boolean value that is true to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the database engine to be used for this DB cluster.</p> <p>Valid Values: <code>aurora</code> </p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version number of the database engine to use.</p> <p> <b>Aurora</b> </p> <p>Example: <code>5.6.10a</code> </p>"
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon RDS will use the encryption key used to encrypt the source. Otherwise, Amazon RDS will use your default encryption key. </p> </li> <li> <p>If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code> is not specified, then Amazon RDS will use your default encryption key.</p> </li> </ul> <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p> <p>If you create a Read Replica of an encrypted DB cluster in another AWS Region, you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination AWS Region. This key is used to encrypt the Read Replica in that AWS Region.</p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "<p>The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>"
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the master user for the DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group.</p> <p>Permanent options cannot be removed from an option group. The option group cannot be removed from a DB cluster once it is associated with a DB cluster.</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the instances in the DB cluster accept connections.</p> <p> Default: <code>3306</code> </p>"
        },
        "PreSignedUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>A URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> action to be called in the source AWS Region where the DB cluster will be replicated from. You only need to specify <code>PreSignedUrl</code> when you are performing cross-region replication from an encrypted DB cluster.</p> <p>The pre-signed URL must be a valid request for the <code>CreateDBCluster</code> API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> action that is called in the destination AWS Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the AWS Region that Aurora Read Replica will be created in.</p> </li> <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Times should be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        },
        "ReplicationSourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica."
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The ID of the region that contains the source for the read replica."
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Specifies whether the DB cluster is encrypted."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of EC2 VPC security groups to associate with this DB cluster."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "Engine"
      ],
      "type": "object"
    },
    "CreateDBClusterParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>"
        },
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description for the DB cluster parameter group."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBClusterParameterGroupName",
        "DBParameterGroupFamily",
        "Description"
      ],
      "type": "object"
    },
    "CreateDBClusterParameterGroupResult": {
      "properties": {
        "DBClusterParameterGroup": {
          "$ref": "#/definitions/DBClusterParameterGroup"
        }
      },
      "type": "object"
    },
    "CreateDBClusterResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "CreateDBClusterSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>"
        },
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags to be assigned to the DB cluster snapshot."
        }
      },
      "required": [
        "DBClusterSnapshotIdentifier",
        "DBClusterIdentifier"
      ],
      "type": "object"
    },
    "CreateDBClusterSnapshotResult": {
      "properties": {
        "DBClusterSnapshot": {
          "$ref": "#/definitions/DBClusterSnapshot"
        }
      },
      "type": "object"
    },
    "CreateDBInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The amount of storage (in gigabytes) to be initially allocated for the database instance.</p> <p>Type: Integer</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume.</p> <p> <b>MySQL</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 5 to 6144.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 6144.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 5 to 6144.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 6144.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 5 to 6144.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 6144.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 5 to 3072.</p> </li> </ul> <p> <b>Oracle</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2): Must be an integer from 10 to 6144.</p> </li> <li> <p>Provisioned IOPS storage (io1): Must be an integer from 100 to 6144.</p> </li> <li> <p>Magnetic storage (standard): Must be an integer from 10 to 3072.</p> </li> </ul> <p> <b>SQL Server</b> </p> <p>Constraints to the amount of storage for each storage type are the following: </p> <ul> <li> <p>General Purpose (SSD) storage (gp2):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 16384.</p> </li> </ul> </li> <li> <p>Provisioned IOPS storage (io1):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 16384.</p> </li> <li> <p>Web and Express editions: Must be an integer from 100 to 16384.</p> </li> </ul> </li> <li> <p>Magnetic storage (standard):</p> <ul> <li> <p>Enterprise and Standard editions: Must be an integer from 200 to 1024.</p> </li> <li> <p>Web and Express editions: Must be an integer from 20 to 1024.</p> </li> </ul> </li> </ul>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window.</p> <p>Default: <code>true</code> </p>"
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p> The EC2 Availability Zone that the database instance will be created in. For information on regions and Availability Zones, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html\">Regions and Availability Zones</a>. </p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p> <p> Constraint: The AvailabilityZone parameter cannot be specified if the MultiAZ parameter is set to <code>true</code>. The specified Availability Zone must be in the same AWS Region as the current endpoint. </p>"
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB instance is a source to Read Replicas</p> </li> </ul>"
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "<p>For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The character set is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>"
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the DB instance to snapshots of the DB instance; otherwise false. The default is false."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster that the instance will belong to.</p> <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p> <p>Type: String</p>"
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the DB instance. Note that not all instance classes are available in all regions for all DB engines.</p> <p> Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge |db.m2.2xlarge | db.m2.4xlarge | db.m3.medium | db.m3.large | db.m3.xlarge | db.m3.2xlarge | db.m4.large | db.m4.xlarge | db.m4.2xlarge | db.m4.4xlarge | db.m4.10xlarge | db.r3.large | db.r3.xlarge | db.r3.2xlarge | db.r3.4xlarge | db.r3.8xlarge | db.t2.micro | db.t2.small | db.t2.medium | db.t2.large</code> </p>"
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
        },
        "DBName": {
          "$ref": "#/definitions/String",
          "description": "<p>The meaning of this parameter differs according to the database engine you use.</p> <p>Type: String</p> <p> <b>MySQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 alphanumeric characters</p> </li> <li> <p>Cannot be a word reserved by the specified database engine</p> </li> </ul> <p> <b>MariaDB</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 alphanumeric characters</p> </li> <li> <p>Cannot be a word reserved by the specified database engine</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>The name of the database to create when the DB instance is created. If this parameter is not specified, the default \"postgres\" database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 63 alphanumeric characters</p> </li> <li> <p>Must begin with a letter or an underscore. Subsequent characters can be letters, underscores, or digits (0-9).</p> </li> <li> <p>Cannot be a word reserved by the specified database engine</p> </li> </ul> <p> <b>Oracle</b> </p> <p>The Oracle System ID (SID) of the created DB instance. If you specify <code>null</code>, the default value <code>ORCL</code> is used. You can't specify the string NULL, or any other reserved word, for <code>DBName</code>. </p> <p>Default: <code>ORCL</code> </p> <p>Constraints:</p> <ul> <li> <p>Cannot be longer than 8 characters</p> </li> </ul> <p> <b>SQL Server</b> </p> <p>Not applicable. Must be null.</p> <p> <b>Amazon Aurora</b> </p> <p>The name of the database to create when the primary instance of the DB cluster is created. If this parameter is not specified, no database is created in the DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64 alphanumeric characters</p> </li> <li> <p>Cannot be a word reserved by the specified database engine</p> </li> </ul>"
        },
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine will be used.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSecurityGroups": {
          "$ref": "#/definitions/DBSecurityGroupNameList",
          "description": "<p>A list of DB security groups to associate with this DB instance.</p> <p>Default: The default DB security group for the database engine.</p>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A DB subnet group to associate with this DB instance.</p> <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>"
        },
        "Domain": {
          "$ref": "#/definitions/String",
          "description": "Specify the Active Directory Domain to create the instance in."
        },
        "DomainIAMRoleName": {
          "$ref": "#/definitions/String",
          "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts; otherwise false. </p> <p> You can enable IAM database authentication for the following database engines:</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> <b>MySQL</b> </p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> </ul> <p>Default: <code>false</code> </p>"
        },
        "EnablePerformanceInsights": {
          "$ref": "#/definitions/BooleanOptional"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the database engine to be used for this instance. </p> <p>Not every database engine is available for every AWS Region. </p> <p>Valid Values: </p> <ul> <li> <p> <code>aurora</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>oracle-se1</code> </p> </li> <li> <p> <code>oracle-se</code> </p> </li> <li> <p> <code>postgres</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version number of the database engine to use.</p> <p>The following are the database engines and major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> <b>MariaDB</b> </p> <ul> <li> <p> <code>10.1.23</code> (supported in all AWS regions)</p> </li> <li> <p> <code>10.1.19</code> (supported in all AWS regions)</p> </li> <li> <p> <code>10.1.14</code> (supported in all regions except us-east-2)</p> </li> </ul> <p/> <ul> <li> <p> <code>10.0.31</code> (supported in all AWS regions)</p> </li> <li> <p> <code>10.0.28</code> (supported in all AWS regions)</p> </li> <li> <p> <code>10.0.24</code> (supported in all AWS regions)</p> </li> <li> <p> <code>10.0.17</code> (supported in all regions except us-east-2, ca-central-1, eu-west-2)</p> </li> </ul> <p> <b>Microsoft SQL Server 2016</b> </p> <ul> <li> <p> <code>13.00.4422.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> <li> <p> <code>13.00.2164.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> </ul> <p> <b>Microsoft SQL Server 2014</b> </p> <ul> <li> <p> <code>12.00.5546.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> <li> <p> <code>12.00.5000.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> <li> <p> <code>12.00.4422.0.v1</code> (supported for all editions except Enterprise Edition, and all AWS regions except ca-central-1 and eu-west-2)</p> </li> </ul> <p> <b>Microsoft SQL Server 2012</b> </p> <ul> <li> <p> <code>11.00.6594.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> <li> <p> <code>11.00.6020.0.v1</code> (supported for all editions, and all AWS regions)</p> </li> <li> <p> <code>11.00.5058.0.v1</code> (supported for all editions, and all AWS regions except us-east-2, ca-central-1, and eu-west-2)</p> </li> <li> <p> <code>11.00.2100.60.v1</code> (supported for all editions, and all AWS regions except us-east-2, ca-central-1, and eu-west-2)</p> </li> </ul> <p> <b>Microsoft SQL Server 2008 R2</b> </p> <ul> <li> <p> <code>10.50.6529.0.v1</code> (supported for all editions, and all AWS regions except us-east-2, ca-central-1, and eu-west-2)</p> </li> <li> <p> <code>10.50.6000.34.v1</code> (supported for all editions, and all AWS regions except us-east-2, ca-central-1, and eu-west-2)</p> </li> <li> <p> <code>10.50.2789.0.v1</code> (supported for all editions, and all AWS regions except us-east-2, ca-central-1, and eu-west-2)</p> </li> </ul> <p> <b>MySQL</b> </p> <ul> <li> <p> <code>5.7.17</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.7.16</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.7.11</code> (supported in all AWS regions)</p> </li> </ul> <p/> <ul> <li> <p> <code>5.6.35</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.6.34</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.6.29</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.6.27</code> (supported in all regions except us-east-2, ca-central-1, eu-west-2)</p> </li> </ul> <p/> <ul> <li> <p> <code>5.5.54</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.5.53</code> (supported in all AWS regions)</p> </li> <li> <p> <code>5.5.46</code> (supported in all AWS regions)</p> </li> </ul> <p> <b>Oracle 12c</b> </p> <ul> <li> <p> <code>12.1.0.2.v8</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v7</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v6</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v5</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v4</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v3</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v2</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> <li> <p> <code>12.1.0.2.v1</code> (supported for EE in all AWS regions, and SE2 in all AWS regions except us-gov-west-1)</p> </li> </ul> <p> <b>Oracle 11g</b> </p> <ul> <li> <p> <code>11.2.0.4.v12</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v11</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v10</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v9</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v8</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v7</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v6</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v5</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v4</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v3</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> <li> <p> <code>11.2.0.4.v1</code> (supported for EE, SE1, and SE, in all AWS regions)</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <ul> <li> <p> <b>Version 9.6.x:</b> <code> 9.6.1 | 9.6.2 | 9.6.3</code> </p> </li> <li> <p> <b>Version 9.5.x:</b> <code>9.5.6 | 9.5.4 | 9.5.2</code> </p> </li> <li> <p> <b>Version 9.4.x:</b> <code>9.4.11 | 9.4.9 | 9.4.7</code> </p> </li> <li> <p> <b>Version 9.3.x:</b> <code>9.3.16 | 9.3.14 | 9.3.12</code> </p> </li> </ul>"
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</p> <p>Constraints: Must be a multiple between 3 and 10 of the storage amount for the DB instance. Must also be an integer multiple of 1000. For example, if the size of your DB instance is 500 GB, then your <code>Iops</code> value can be 2000, 3000, 4000, or 5000. </p>"
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The KMS key identifier for an encrypted DB instance.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB instance with the same AWS account that owns the KMS encryption key used to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The KMS key identifier is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "<p>License model information for this DB instance.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "<p>The password for the master user. Can be any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The password for the master user is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> <b>MariaDB</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p> <p> <b>MySQL</b> </p> <p>Constraints: Must contain from 8 to 41 characters.</p> <p> <b>Oracle</b> </p> <p>Constraints: Must contain from 8 to 30 characters.</p> <p> <b>PostgreSQL</b> </p> <p>Constraints: Must contain from 8 to 128 characters.</p>"
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the master user.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The name for the master user is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> <b>MariaDB</b> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 alphanumeric characters.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>Microsoft SQL Server</b> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 128 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>MySQL</b> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>Oracle</b> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 30 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul> <p> <b>PostgreSQL</b> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 63 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul>"
        },
        "MonitoringInterval": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
        },
        "MonitoringRoleArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling\">Setting Up and Enabling Enhanced Monitoring</a>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Specifies if the DB instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true."
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>Indicates that the DB instance should be associated with the specified option group.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance</p>"
        },
        "PerformanceInsightsKMSKeyId": {
          "$ref": "#/definitions/String"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the database accepts connections.</p> <p> <b>MySQL</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>MariaDB</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>PostgreSQL</b> </p> <p> Default: <code>5432</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>Oracle</b> </p> <p> Default: <code>1521</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p> <b>SQL Server</b> </p> <p> Default: <code>1433</code> </p> <p> Valid Values: <code>1150-65535</code> except for <code>1434</code>, <code>3389</code>, <code>47001</code>, <code>49152</code>, and <code>49152</code> through <code>49156</code>. </p> <p> <b>Amazon Aurora</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer</p>"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.BackingUpAndRestoringAmazonRDSInstances.html\">DB Instance Backups</a>. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow\"> Adjusting the Preferred DB Instance Maintenance Window</a>. </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Times should be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p> The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBMaintenance.html\">DB Instance Maintenance</a>. </p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        },
        "PromotionTier": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html#Aurora.Managing.FaultTolerance\"> Fault Tolerance for an Aurora DB Cluster</a>. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case.</p> <ul> <li> <p> <b>Default VPC:</b> true</p> </li> <li> <p> <b>VPC:</b> false</p> </li> </ul> <p>If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private.</p>"
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies whether the DB instance is encrypted.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The encryption for DB instances is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: false</p>"
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>standard</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the Key Store with which to associate the instance for TDE encryption."
        },
        "TdeCredentialPassword": {
          "$ref": "#/definitions/String",
          "description": "The password for the given ARN from the Key Store in order to access the device."
        },
        "Timezone": {
          "$ref": "#/definitions/String",
          "description": "The time zone of the DB instance. The time zone parameter is currently supported only by <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone\">Microsoft SQL Server</a>. "
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "<p>A list of EC2 VPC security groups to associate with this DB instance.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p> <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>"
        }
      },
      "required": [
        "DBInstanceIdentifier",
        "DBInstanceClass",
        "Engine"
      ],
      "type": "object"
    },
    "CreateDBInstanceReadReplicaMessage": {
      "properties": {
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Indicates that minor engine upgrades will be applied automatically to the Read Replica during the maintenance window.</p> <p>Default: Inherits from the source DB instance</p>"
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon EC2 Availability Zone that the Read Replica will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p>"
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the Read Replica to snapshots of the Read Replica; otherwise false. The default is false."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the Read Replica. Note that not all instance classes are available in all regions for all DB engines.</p> <p> Valid Values: <code>db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge |db.m2.2xlarge | db.m2.4xlarge | db.m3.medium | db.m3.large | db.m3.xlarge | db.m3.2xlarge | db.m4.large | db.m4.xlarge | db.m4.2xlarge | db.m4.4xlarge | db.m4.10xlarge | db.r3.large | db.r3.xlarge | db.r3.2xlarge | db.r3.4xlarge | db.r3.8xlarge | db.t2.micro | db.t2.small | db.t2.medium | db.t2.large</code> </p> <p>Default: Inherits from the source DB instance.</p>"
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The DB instance identifier of the Read Replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string."
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies a DB subnet group for the DB instance. The new DB instance will be created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance is not created in a VPC.</p> <p>Constraints:</p> <ul> <li> <p>Can only be specified if the source DB instance identifier specifies a DB instance in another AWS Region.</p> </li> <li> <p>The specified DB subnet group must be in the same AWS Region in which the operation is running.</p> </li> <li> <p>All Read Replicas in one AWS Region that are created from the same source DB instance must either:&gt;</p> <ul> <li> <p>Specify DB subnet groups from the same VPC. All these Read Replicas will be created in the same VPC.</p> </li> <li> <p>Not specify a DB subnet group. All these Read Replicas will be created outside of any VPC.</p> </li> </ul> </li> </ul> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts; otherwise false.</p> <p>You can enable IAM database authentication for the following database engines</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher.</p> </li> </ul> <p>Default: <code>false</code> </p>"
        },
        "EnablePerformanceInsights": {
          "$ref": "#/definitions/BooleanOptional"
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The AWS KMS key ID for an encrypted Read Replica. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. </p> <p>If you specify this parameter when you create a Read Replica from an unencrypted DB instance, the Read Replica is encrypted. </p> <p>If you create an encrypted Read Replica in the same AWS Region as the source DB instance, then you do not have to specify a value for this parameter. The Read Replica is encrypted with the same KMS key as the source DB instance. </p> <p>If you create an encrypted Read Replica in a different AWS Region, then you must specify a KMS key for the destination AWS Region. KMS encryption keys are specific to the AWS Region that they are created in, and you cannot use encryption keys from one AWS Region in another AWS Region. </p>"
        },
        "MonitoringInterval": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the Read Replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
        },
        "MonitoringRoleArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole\">To create an IAM role for Amazon RDS Enhanced Monitoring</a>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "The option group the DB instance will be associated with. If omitted, the default option group for the engine specified will be used."
        },
        "PerformanceInsightsKMSKeyId": {
          "$ref": "#/definitions/String"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number that the DB instance uses for connections.</p> <p>Default: Inherits from the source DB instance</p> <p>Valid Values: <code>1150-65535</code> </p>"
        },
        "PreSignedUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>The URL that contains a Signature Version 4 signed request for the <code>CreateDBInstanceReadReplica</code> API action in the source AWS Region that contains the source DB instance. </p> <p>You must specify this parameter when you create an encrypted Read Replica from another AWS Region by using the Amazon RDS API. You can specify the source region option instead of this parameter when you create an encrypted Read Replica from another AWS Region by using the AWS CLI. </p> <p>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code> API action that can be executed in the source AWS Region that contains the encrypted source DB instance. The presigned URL request must contain the following parameter values: </p> <ul> <li> <p> <code>DestinationRegion</code> - The AWS Region that the encrypted Read Replica will be created in. This AWS Region is the same one where the <code>CreateDBInstanceReadReplica</code> action is called that contains this presigned URL. </p> <p>For example, if you create an encrypted DB instance in the us-west-1 region, from a source DB instance in the us-east-2 region, then you call the <code>CreateDBInstanceReadReplica</code> action in the us-east-1 region and provide a presigned URL that contains a call to the <code>CreateDBInstanceReadReplica</code> action in the us-west-2 region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 region. </p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the Read Replica in the destination AWS Region. This is the same identifier for both the <code>CreateDBInstanceReadReplica</code> action that is called in the destination AWS Region, and the action contained in the presigned URL. </p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted DB instance to be replicated. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are creating an encrypted Read Replica from a DB instance in the us-west-2 region, then your <code>SourceDBInstanceIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115</code>. </p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\">Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>. </p><note><p>If you supply a value for this operation's <code>SourceRegion</code> parameter, a pre-signed URL will be calculated on your behalf.</p></note>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case.</p> <ul> <li> <p> <b>Default VPC:</b>true</p> </li> <li> <p> <b>VPC:</b>false</p> </li> </ul> <p>If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private.</p>"
        },
        "SourceDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB instance that will act as the source for the Read Replica. Each DB instance can have up to five Read Replicas.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing MySQL, MariaDB, or PostgreSQL DB instance.</p> </li> <li> <p>Can specify a DB instance that is a MySQL Read Replica only if the source is running MySQL 5.6.</p> </li> <li> <p>Can specify a DB instance that is a PostgreSQL DB instance only if the source is running PostgreSQL 9.3.5 or later (9.4.7 and higher for cross region replication).</p> </li> <li> <p>The specified DB instance must have automatic backups enabled, its backup retention period must be greater than 0.</p> </li> <li> <p>If the source DB instance is in the same AWS Region as the Read Replica, specify a valid DB instance identifier.</p> </li> <li> <p>If the source DB instance is in a different AWS Region than the Read Replica, specify a valid DB instance ARN. For more information, go to <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing a Amazon RDS Amazon Resource Name (ARN)</a>.</p> </li> </ul>"
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The ID of the region that contains the source for the read replica."
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the storage type to be associated with the Read Replica.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>standard</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBInstanceIdentifier",
        "SourceDBInstanceIdentifier"
      ],
      "type": "object"
    },
    "CreateDBInstanceReadReplicaResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "CreateDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "CreateDBParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family."
        },
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description for the DB parameter group."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBParameterGroupName",
        "DBParameterGroupFamily",
        "Description"
      ],
      "type": "object"
    },
    "CreateDBParameterGroupResult": {
      "properties": {
        "DBParameterGroup": {
          "$ref": "#/definitions/DBParameterGroup"
        }
      },
      "type": "object"
    },
    "CreateDBSecurityGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBSecurityGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description for the DB security group."
        },
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the DB security group. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be \"Default\"</p> </li> </ul> <p>Example: <code>mysecuritygroup</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBSecurityGroupName",
        "DBSecurityGroupDescription"
      ],
      "type": "object"
    },
    "CreateDBSecurityGroupResult": {
      "properties": {
        "DBSecurityGroup": {
          "$ref": "#/definitions/DBSecurityGroup"
        }
      },
      "type": "object"
    },
    "CreateDBSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier. This is the unique key that identifies a DB instance.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBSnapshotIdentifier",
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "CreateDBSnapshotResult": {
      "properties": {
        "DBSnapshot": {
          "$ref": "#/definitions/DBSnapshot"
        }
      },
      "type": "object"
    },
    "CreateDBSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description for the DB subnet group."
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "The EC2 Subnet IDs for the DB subnet group."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "DBSubnetGroupName",
        "DBSubnetGroupDescription",
        "SubnetIds"
      ],
      "type": "object"
    },
    "CreateDBSubnetGroupResult": {
      "properties": {
        "DBSubnetGroup": {
          "$ref": "#/definitions/DBSubnetGroup"
        }
      },
      "type": "object"
    },
    "CreateEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b> to create the subscription but not active it. "
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action. "
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it."
        },
        "SourceIds": {
          "$ref": "#/definitions/SourceIdsList",
          "description": "<p>The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIds are supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is a DB security group, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>"
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the subscription.</p> <p>Constraints: The name must be less than 255 characters.</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "SubscriptionName",
        "SnsTopicArn"
      ],
      "type": "object"
    },
    "CreateEventSubscriptionResult": {
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription"
        }
      },
      "type": "object"
    },
    "CreateOptionGroupMessage": {
      "description": "<p/>",
      "properties": {
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the engine that this option group should be associated with."
        },
        "MajorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Specifies the major version of the engine that this option group should be associated with."
        },
        "OptionGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the option group."
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the name of the option group to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>myoptiongroup</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "OptionGroupName",
        "EngineName",
        "MajorEngineVersion",
        "OptionGroupDescription"
      ],
      "type": "object"
    },
    "CreateOptionGroupResult": {
      "properties": {
        "OptionGroup": {
          "$ref": "#/definitions/OptionGroup"
        }
      },
      "type": "object"
    },
    "DBCluster": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBCluster</a> </p> </li> <li> <p> <a>DeleteDBCluster</a> </p> </li> <li> <p> <a>FailoverDBCluster</a> </p> </li> <li> <p> <a>ModifyDBCluster</a> </p> </li> <li> <p> <a>RestoreDBClusterFromSnapshot</a> </p> </li> <li> <p> <a>RestoreDBClusterToPointInTime</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action.</p>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "For all database engines except Amazon Aurora, <code>AllocatedStorage</code> specifies the allocated storage size in gigabytes (GB). For Aurora, <code>AllocatedStorage</code> always returns 1, because Aurora DB cluster storage size is not fixed, but instead automatically adjusts as needed."
        },
        "AssociatedRoles": {
          "$ref": "#/definitions/DBClusterRoles",
          "description": "Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf."
        },
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in."
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the number of days for which automatic DB snapshots are retained."
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "If present, specifies the name of the character set that this cluster is associated with."
        },
        "CloneGroupId": {
          "$ref": "#/definitions/String",
          "description": "Identifies the clone group to which the DB cluster is associated."
        },
        "ClusterCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC)."
        },
        "DBClusterArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB cluster."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster."
        },
        "DBClusterMembers": {
          "$ref": "#/definitions/DBClusterMemberList",
          "description": "Provides the list of instances that make up the DB cluster."
        },
        "DBClusterOptionGroupMemberships": {
          "$ref": "#/definitions/DBClusterOptionGroupMemberships",
          "description": "Provides the list of option group memberships for this DB cluster."
        },
        "DBClusterParameterGroup": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the DB cluster parameter group for the DB cluster."
        },
        "DBSubnetGroup": {
          "$ref": "#/definitions/String",
          "description": "Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group."
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "Contains the name of the initial database of this DB cluster that was provided at create time, if one was specified when the DB cluster was created. This same name is returned for the life of the DB cluster."
        },
        "DbClusterResourceId": {
          "$ref": "#/definitions/String",
          "description": "The region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the KMS key for the DB cluster is accessed."
        },
        "EarliestRestorableTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the earliest time to which a database can be restored with point-in-time restore."
        },
        "Endpoint": {
          "$ref": "#/definitions/String",
          "description": "Specifies the connection endpoint for the primary instance of the DB cluster."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the database engine to be used for this DB cluster."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Indicates the database engine version."
        },
        "HostedZoneId": {
          "$ref": "#/definitions/String",
          "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone."
        },
        "IAMDatabaseAuthenticationEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled; otherwise false."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "If <code>StorageEncrypted</code> is true, the KMS key identifier for the encrypted DB cluster."
        },
        "LatestRestorableTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the latest time to which a database can be restored with point-in-time restore."
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "Contains the master username for the DB cluster."
        },
        "MultiAZ": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the DB cluster has instances in multiple Availability Zones."
        },
        "PercentProgress": {
          "$ref": "#/definitions/String",
          "description": "Specifies the progress of the operation as a percentage."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the port that the database engine is listening on."
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. "
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC)."
        },
        "ReadReplicaIdentifiers": {
          "$ref": "#/definitions/ReadReplicaIdentifierList",
          "description": "Contains one or more identifiers of the Read Replicas associated with this DB cluster."
        },
        "ReaderEndpoint": {
          "$ref": "#/definitions/String",
          "description": "<p>The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances connections across the Aurora Replicas that are available in a DB cluster. As clients request new connections to the reader endpoint, Aurora distributes the connection requests among the Aurora Replicas in the DB cluster. This functionality can help balance your read workload across multiple Aurora Replicas in your DB cluster. </p> <p>If a failover occurs, and the Aurora Replica that you are connected to is promoted to be the primary instance, your connection will be dropped. To continue sending your read workload to other Aurora Replicas in the cluster, you can then reconnect to the reader endpoint.</p>"
        },
        "ReplicationSourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Contains the identifier of the source DB cluster if this DB cluster is a Read Replica."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Specifies the current state of this DB cluster."
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the DB cluster is encrypted."
        },
        "VpcSecurityGroups": {
          "$ref": "#/definitions/VpcSecurityGroupMembershipList",
          "description": "Provides a list of VPC security groups that the DB cluster belongs to."
        }
      },
      "type": "object"
    },
    "DBClusterAlreadyExistsFault": {
      "description": "User already has a DB cluster with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "DBClusterList": {
      "items": {
        "$ref": "#/definitions/DBCluster"
      },
      "type": "array"
    },
    "DBClusterMember": {
      "description": "Contains information about an instance that is part of a DB cluster.",
      "properties": {
        "DBClusterParameterGroupStatus": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of the DB cluster parameter group for this member of the DB cluster."
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the instance identifier for this member of the DB cluster."
        },
        "IsClusterWriter": {
          "$ref": "#/definitions/Boolean",
          "description": "Value that is <code>true</code> if the cluster member is the primary instance for the DB cluster and <code>false</code> otherwise."
        },
        "PromotionTier": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html#Aurora.Managing.FaultTolerance\"> Fault Tolerance for an Aurora DB Cluster</a>. "
        }
      },
      "type": "object"
    },
    "DBClusterMemberList": {
      "items": {
        "$ref": "#/definitions/DBClusterMember"
      },
      "type": "array"
    },
    "DBClusterMessage": {
      "description": "Contains the result of a successful invocation of the <a>DescribeDBClusters</a> action.",
      "properties": {
        "DBClusters": {
          "$ref": "#/definitions/DBClusterList",
          "description": "Contains a list of DB clusters for the user."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent DescribeDBClusters request."
        }
      },
      "type": "object"
    },
    "DBClusterNotFoundFault": {
      "description": " <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. ",
      "properties": {},
      "type": "object"
    },
    "DBClusterOptionGroupMemberships": {
      "items": {
        "$ref": "#/definitions/DBClusterOptionGroupStatus"
      },
      "type": "array"
    },
    "DBClusterOptionGroupStatus": {
      "description": "Contains status information for a DB cluster option group.",
      "properties": {
        "DBClusterOptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the DB cluster option group."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of the DB cluster option group."
        }
      },
      "type": "object"
    },
    "DBClusterParameterGroup": {
      "description": "<p>Contains the result of a successful invocation of the <a>CreateDBClusterParameterGroup</a> or <a>CopyDBClusterParameterGroup</a> action. </p> <p>This data type is used as a request parameter in the <a>DeleteDBClusterParameterGroup</a> action, and as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>",
      "properties": {
        "DBClusterParameterGroupArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB cluster parameter group."
        },
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the DB cluster parameter group."
        },
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the DB parameter group family that this DB cluster parameter group is compatible with."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "Provides the customer-specified description for this DB cluster parameter group."
        }
      },
      "type": "object"
    },
    "DBClusterParameterGroupDetails": {
      "description": "Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeDBClusterParameters request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "Provides a list of parameters for the DB cluster parameter group."
        }
      },
      "type": "object"
    },
    "DBClusterParameterGroupList": {
      "items": {
        "$ref": "#/definitions/DBClusterParameterGroup"
      },
      "type": "array"
    },
    "DBClusterParameterGroupNameMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>"
        }
      },
      "type": "object"
    },
    "DBClusterParameterGroupNotFoundFault": {
      "description": " <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter group. ",
      "properties": {},
      "type": "object"
    },
    "DBClusterParameterGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroups": {
          "$ref": "#/definitions/DBClusterParameterGroupList",
          "description": "A list of DB cluster parameter groups."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBClusterQuotaExceededFault": {
      "description": "User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.",
      "properties": {},
      "type": "object"
    },
    "DBClusterRole": {
      "description": "Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "<p>Describes the state of association between the IAM role and the DB cluster. The Status property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can be used to access other AWS services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.</p> </li> <li> <p> <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the DB cluster is unable to assume the IAM role in order to access other AWS services on your behalf.</p> </li> </ul>"
        }
      },
      "type": "object"
    },
    "DBClusterRoleAlreadyExistsFault": {
      "description": "The specified IAM role Amazon Resource Name (ARN) is already associated with the specified DB cluster.",
      "properties": {},
      "type": "object"
    },
    "DBClusterRoleNotFoundFault": {
      "description": "The specified IAM role Amazon Resource Name (ARN) is not associated with the specified DB cluster.",
      "properties": {},
      "type": "object"
    },
    "DBClusterRoleQuotaExceededFault": {
      "description": "You have exceeded the maximum number of IAM roles that can be associated with the specified DB cluster.",
      "properties": {},
      "type": "object"
    },
    "DBClusterRoles": {
      "items": {
        "$ref": "#/definitions/DBClusterRole"
      },
      "type": "array"
    },
    "DBClusterSnapshot": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBClusterSnapshot</a> </p> </li> <li> <p> <a>DeleteDBClusterSnapshot</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action.</p>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the allocated storage size in gigabytes (GB)."
        },
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in."
        },
        "ClusterCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC)."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from."
        },
        "DBClusterSnapshotArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB cluster snapshot."
        },
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the identifier for the DB cluster snapshot."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the database engine."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Provides the version of the database engine for this DB cluster snapshot."
        },
        "IAMDatabaseAuthenticationEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled; otherwise false."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "If <code>StorageEncrypted</code> is true, the KMS key identifier for the encrypted DB cluster snapshot."
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "Provides the license model information for this DB cluster snapshot."
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "Provides the master username for the DB cluster snapshot."
        },
        "PercentProgress": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the percentage of the estimated data that has been transferred."
        },
        "Port": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the port that the DB cluster was listening on at the time of the snapshot."
        },
        "SnapshotCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC)."
        },
        "SnapshotType": {
          "$ref": "#/definitions/String",
          "description": "Provides the type of the DB cluster snapshot."
        },
        "SourceDBClusterSnapshotArn": {
          "$ref": "#/definitions/String",
          "description": "If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon Resource Name (ARN) for the source DB cluster snapshot; otherwise, a null value."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of this DB cluster snapshot."
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the DB cluster snapshot is encrypted."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "Provides the VPC ID associated with the DB cluster snapshot."
        }
      },
      "type": "object"
    },
    "DBClusterSnapshotAlreadyExistsFault": {
      "description": "User already has a DB cluster snapshot with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "DBClusterSnapshotAttribute": {
      "description": "<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the manual DB cluster snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
        },
        "AttributeValues": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>The value(s) for the manual DB cluster snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list, then the manual DB cluster snapshot is public and available for any AWS account to copy or restore.</p>"
        }
      },
      "type": "object"
    },
    "DBClusterSnapshotAttributeList": {
      "items": {
        "$ref": "#/definitions/DBClusterSnapshotAttribute"
      },
      "type": "array"
    },
    "DBClusterSnapshotAttributesResult": {
      "description": "<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>",
      "properties": {
        "DBClusterSnapshotAttributes": {
          "$ref": "#/definitions/DBClusterSnapshotAttributeList",
          "description": "The list of attributes and values for the manual DB cluster snapshot."
        },
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the manual DB cluster snapshot that the attributes apply to."
        }
      },
      "type": "object"
    },
    "DBClusterSnapshotList": {
      "items": {
        "$ref": "#/definitions/DBClusterSnapshot"
      },
      "type": "array"
    },
    "DBClusterSnapshotMessage": {
      "description": " Provides a list of DB cluster snapshots for the user as the result of a call to the <a>DescribeDBClusterSnapshots</a> action. ",
      "properties": {
        "DBClusterSnapshots": {
          "$ref": "#/definitions/DBClusterSnapshotList",
          "description": "Provides a list of DB cluster snapshots for the user."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <a>DescribeDBClusterSnapshots</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBClusterSnapshotNotFoundFault": {
      "description": " <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. ",
      "properties": {},
      "type": "object"
    },
    "DBEngineVersion": {
      "description": " This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. ",
      "properties": {
        "DBEngineDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the database engine."
        },
        "DBEngineVersionDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the database engine version."
        },
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB parameter group family for the database engine."
        },
        "DefaultCharacterSet": {
          "$ref": "#/definitions/CharacterSet",
          "description": " The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API is not specified. "
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the database engine."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version number of the database engine."
        },
        "SupportedCharacterSets": {
          "$ref": "#/definitions/SupportedCharacterSetsList",
          "description": " A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> action. "
        },
        "SupportedTimezones": {
          "$ref": "#/definitions/SupportedTimezonesList",
          "description": "A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action. "
        },
        "ValidUpgradeTarget": {
          "$ref": "#/definitions/ValidUpgradeTargetList",
          "description": "A list of engine versions that this database engine version can be upgraded to."
        }
      },
      "type": "object"
    },
    "DBEngineVersionList": {
      "items": {
        "$ref": "#/definitions/DBEngineVersion"
      },
      "type": "array"
    },
    "DBEngineVersionMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBEngineVersions</a> action. ",
      "properties": {
        "DBEngineVersions": {
          "$ref": "#/definitions/DBEngineVersionList",
          "description": " A list of <code>DBEngineVersion</code> elements. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBInstance": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>StopDBInstance</a> </p> </li> <li> <p> <a>StartDBInstance</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action.</p>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the allocated storage size specified in gigabytes."
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates that minor version patches are applied automatically."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the Availability Zone the DB instance is located in."
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the number of days for which automatic DB snapshots are retained."
        },
        "CACertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the CA certificate for this DB instance."
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "If present, specifies the name of the character set that this instance is associated with."
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether tags are copied from the DB instance to snapshots of the DB instance."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of."
        },
        "DBInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB instance."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "Contains the name of the compute and memory capacity class of the DB instance."
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance."
        },
        "DBInstanceStatus": {
          "$ref": "#/definitions/String",
          "description": "Specifies the current state of this database."
        },
        "DBName": {
          "$ref": "#/definitions/String",
          "description": "<p>The meaning of this parameter differs according to the database engine you use. For example, this value returns MySQL, MariaDB, or PostgreSQL information when returning values from CreateDBInstanceReadReplica since Read Replicas are only supported for these engines.</p> <p> <b>MySQL, MariaDB, SQL Server, PostgreSQL</b> </p> <p>Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.</p> <p>Type: String</p> <p> <b>Oracle</b> </p> <p>Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance.</p>"
        },
        "DBParameterGroups": {
          "$ref": "#/definitions/DBParameterGroupStatusList",
          "description": "Provides the list of DB parameter groups applied to this DB instance."
        },
        "DBSecurityGroups": {
          "$ref": "#/definitions/DBSecurityGroupMembershipList",
          "description": " Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code> and <code>DBSecurityGroup.Status</code> subelements. "
        },
        "DBSubnetGroup": {
          "$ref": "#/definitions/DBSubnetGroup",
          "description": "Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group."
        },
        "DbInstancePort": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port."
        },
        "DbiResourceId": {
          "$ref": "#/definitions/String",
          "description": "The region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the KMS key for the DB instance is accessed."
        },
        "DomainMemberships": {
          "$ref": "#/definitions/DomainMembershipList",
          "description": "The Active Directory Domain membership records associated with the DB instance."
        },
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "Specifies the connection endpoint."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the database engine to be used for this DB instance."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Indicates the database engine version."
        },
        "EnhancedMonitoringResourceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance."
        },
        "IAMDatabaseAuthenticationEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled; otherwise false.</p> <p>IAM database authentication can be enabled for the following database engines</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type.</p> </li> </ul>"
        },
        "InstanceCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Provides the date and time the DB instance was created."
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the Provisioned IOPS (I/O operations per second) value."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": " If <code>StorageEncrypted</code> is true, the KMS key identifier for the encrypted DB instance. "
        },
        "LatestRestorableTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the latest time to which a database can be restored with point-in-time restore."
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "License model information for this DB instance."
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "Contains the master username for the DB instance."
        },
        "MonitoringInterval": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance."
        },
        "MonitoringRoleArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to CloudWatch Logs."
        },
        "MultiAZ": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies if the DB instance is a Multi-AZ deployment."
        },
        "OptionGroupMemberships": {
          "$ref": "#/definitions/OptionGroupMembershipList",
          "description": "Provides the list of option group memberships for this DB instance."
        },
        "PendingModifiedValues": {
          "$ref": "#/definitions/PendingModifiedValues",
          "description": "Specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements."
        },
        "PerformanceInsightsEnabled": {
          "$ref": "#/definitions/BooleanOptional"
        },
        "PerformanceInsightsKMSKeyId": {
          "$ref": "#/definitions/String"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": " Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. "
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC)."
        },
        "PromotionTier": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html#Aurora.Managing.FaultTolerance\"> Fault Tolerance for an Aurora DB Cluster</a>. "
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case.</p> <ul> <li> <p> <b>Default VPC:</b>true</p> </li> <li> <p> <b>VPC:</b>false</p> </li> </ul> <p>If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private.</p>"
        },
        "ReadReplicaDBClusterIdentifiers": {
          "$ref": "#/definitions/ReadReplicaDBClusterIdentifierList",
          "description": "Contains one or more identifiers of Aurora DB clusters that are Read Replicas of this DB instance."
        },
        "ReadReplicaDBInstanceIdentifiers": {
          "$ref": "#/definitions/ReadReplicaDBInstanceIdentifierList",
          "description": "Contains one or more identifiers of the Read Replicas associated with this DB instance."
        },
        "ReadReplicaSourceDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Contains the identifier of the source DB instance if this DB instance is a Read Replica."
        },
        "SecondaryAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support."
        },
        "StatusInfos": {
          "$ref": "#/definitions/DBInstanceStatusInfoList",
          "description": "The status of a Read Replica. If the instance is not a Read Replica, this will be blank."
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the DB instance is encrypted."
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "Specifies the storage type associated with DB instance."
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the key store with which the instance is associated for TDE encryption."
        },
        "Timezone": {
          "$ref": "#/definitions/String",
          "description": "The time zone of the DB instance. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code> content appears only for Microsoft SQL Server DB instances that were created with a time zone specified. "
        },
        "VpcSecurityGroups": {
          "$ref": "#/definitions/VpcSecurityGroupMembershipList",
          "description": "Provides a list of VPC security group elements that the DB instance belongs to."
        }
      },
      "type": "object"
    },
    "DBInstanceAlreadyExistsFault": {
      "description": "User already has a DB instance with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "DBInstanceList": {
      "items": {
        "$ref": "#/definitions/DBInstance"
      },
      "type": "array"
    },
    "DBInstanceMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBInstances</a> action. ",
      "properties": {
        "DBInstances": {
          "$ref": "#/definitions/DBInstanceList",
          "description": " A list of <a>DBInstance</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        }
      },
      "type": "object"
    },
    "DBInstanceNotFoundFault": {
      "description": " <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. ",
      "properties": {},
      "type": "object"
    },
    "DBInstanceStatusInfo": {
      "description": "Provides a list of status information for a DB instance.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/String",
          "description": "Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank."
        },
        "Normal": {
          "$ref": "#/definitions/Boolean",
          "description": "Boolean value that is true if the instance is operating normally, or false if the instance is in an error state."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Status of the DB instance. For a StatusType of read replica, the values can be replicating, error, stopped, or terminated."
        },
        "StatusType": {
          "$ref": "#/definitions/String",
          "description": "This value is currently \"read replication.\""
        }
      },
      "type": "object"
    },
    "DBInstanceStatusInfoList": {
      "items": {
        "$ref": "#/definitions/DBInstanceStatusInfo"
      },
      "type": "array"
    },
    "DBLogFileNotFoundFault": {
      "description": " <i>LogFileName</i> does not refer to an existing DB log file.",
      "properties": {},
      "type": "object"
    },
    "DBParameterGroup": {
      "description": "<p>Contains the result of a successful invocation of the <a>CreateDBParameterGroup</a> action. </p> <p>This data type is used as a request parameter in the <a>DeleteDBParameterGroup</a> action, and as a response element in the <a>DescribeDBParameterGroups</a> action. </p>",
      "properties": {
        "DBParameterGroupArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB parameter group."
        },
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the DB parameter group family that this DB parameter group is compatible with."
        },
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the DB parameter group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "Provides the customer-specified description for this DB parameter group."
        }
      },
      "type": "object"
    },
    "DBParameterGroupAlreadyExistsFault": {
      "description": "A DB parameter group with the same name exists.",
      "properties": {},
      "type": "object"
    },
    "DBParameterGroupDetails": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBParameters</a> action. ",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": " A list of <a>Parameter</a> values. "
        }
      },
      "type": "object"
    },
    "DBParameterGroupList": {
      "items": {
        "$ref": "#/definitions/DBParameterGroup"
      },
      "type": "array"
    },
    "DBParameterGroupNameMessage": {
      "description": " Contains the result of a successful invocation of the <a>ModifyDBParameterGroup</a> or <a>ResetDBParameterGroup</a> action. ",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "Provides the name of the DB parameter group."
        }
      },
      "type": "object"
    },
    "DBParameterGroupNotFoundFault": {
      "description": " <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. ",
      "properties": {},
      "type": "object"
    },
    "DBParameterGroupQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of DB parameter groups.",
      "properties": {},
      "type": "object"
    },
    "DBParameterGroupStatus": {
      "description": "<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>CreateDBInstanceReadReplica</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> <li> <p> <a>RestoreDBInstanceFromDBSnapshot</a> </p> </li> </ul>",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DP parameter group."
        },
        "ParameterApplyStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of parameter updates."
        }
      },
      "type": "object"
    },
    "DBParameterGroupStatusList": {
      "items": {
        "$ref": "#/definitions/DBParameterGroupStatus"
      },
      "type": "array"
    },
    "DBParameterGroupsMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBParameterGroups</a> action. ",
      "properties": {
        "DBParameterGroups": {
          "$ref": "#/definitions/DBParameterGroupList",
          "description": " A list of <a>DBParameterGroup</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBSecurityGroup": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>DescribeDBSecurityGroups</a> </p> </li> <li> <p> <a>AuthorizeDBSecurityGroupIngress</a> </p> </li> <li> <p> <a>CreateDBSecurityGroup</a> </p> </li> <li> <p> <a>RevokeDBSecurityGroupIngress</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSecurityGroups</a> action.</p>",
      "properties": {
        "DBSecurityGroupArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB security group."
        },
        "DBSecurityGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "Provides the description of the DB security group."
        },
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the DB security group."
        },
        "EC2SecurityGroups": {
          "$ref": "#/definitions/EC2SecurityGroupList",
          "description": " Contains a list of <a>EC2SecurityGroup</a> elements. "
        },
        "IPRanges": {
          "$ref": "#/definitions/IPRangeList",
          "description": " Contains a list of <a>IPRange</a> elements. "
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "Provides the AWS ID of the owner of a specific DB security group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "Provides the VpcId of the DB security group."
        }
      },
      "type": "object"
    },
    "DBSecurityGroupAlreadyExistsFault": {
      "description": " A DB security group with the name specified in <i>DBSecurityGroupName</i> already exists. ",
      "properties": {},
      "type": "object"
    },
    "DBSecurityGroupMembership": {
      "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> <li> <p> <a>RestoreDBInstanceFromDBSnapshot</a> </p> </li> <li> <p> <a>RestoreDBInstanceToPointInTime</a> </p> </li> </ul>",
      "properties": {
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB security group."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the DB security group."
        }
      },
      "type": "object"
    },
    "DBSecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/DBSecurityGroupMembership"
      },
      "type": "array"
    },
    "DBSecurityGroupMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBSecurityGroups</a> action. ",
      "properties": {
        "DBSecurityGroups": {
          "$ref": "#/definitions/DBSecurityGroups",
          "description": " A list of <a>DBSecurityGroup</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBSecurityGroupNameList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "DBSecurityGroupNotFoundFault": {
      "description": " <i>DBSecurityGroupName</i> does not refer to an existing DB security group. ",
      "properties": {},
      "type": "object"
    },
    "DBSecurityGroupNotSupportedFault": {
      "description": "A DB security group is not allowed for this action.",
      "properties": {},
      "type": "object"
    },
    "DBSecurityGroupQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of DB security groups.",
      "properties": {},
      "type": "object"
    },
    "DBSecurityGroups": {
      "items": {
        "$ref": "#/definitions/DBSecurityGroup"
      },
      "type": "array"
    },
    "DBSnapshot": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBSnapshot</a> </p> </li> <li> <p> <a>DeleteDBSnapshot</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSnapshots</a> action.</p>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the allocated storage size in gigabytes (GB)."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot."
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the DB instance identifier of the DB instance this DB snapshot was created from."
        },
        "DBSnapshotArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB snapshot."
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the identifier for the DB snapshot."
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the DB snapshot is encrypted."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the database engine."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Specifies the version of the database engine."
        },
        "IAMDatabaseAuthenticationEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled; otherwise false."
        },
        "InstanceCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the time when the snapshot was taken, in Universal Coordinated Time (UTC)."
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": " If <code>Encrypted</code> is true, the KMS key identifier for the encrypted DB snapshot. "
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "License model information for the restored DB instance."
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "Provides the master username for the DB snapshot."
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "Provides the option group name for the DB snapshot."
        },
        "PercentProgress": {
          "$ref": "#/definitions/Integer",
          "description": "The percentage of the estimated data that has been transferred."
        },
        "Port": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the port that the database engine was listening on at the time of the snapshot."
        },
        "SnapshotCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC)."
        },
        "SnapshotType": {
          "$ref": "#/definitions/String",
          "description": "Provides the type of the DB snapshot."
        },
        "SourceDBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied from. It only has value in case of cross-customer or cross-region copy."
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The AWS Region that the DB snapshot was created in or copied from."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of this DB snapshot."
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "Specifies the storage type associated with DB snapshot."
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the key store with which to associate the instance for TDE encryption."
        },
        "Timezone": {
          "$ref": "#/definitions/String",
          "description": "The time zone of the DB snapshot. In most cases, the <code>Timezone</code> element is empty. <code>Timezone</code> content appears only for snapshots taken from Microsoft SQL Server DB instances that were created with a time zone specified. "
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "Provides the VPC ID associated with the DB snapshot."
        }
      },
      "type": "object"
    },
    "DBSnapshotAlreadyExistsFault": {
      "description": " <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. ",
      "properties": {},
      "type": "object"
    },
    "DBSnapshotAttribute": {
      "description": "<p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to restore a manual DB snapshot. For more information, see the <a>ModifyDBSnapshotAttribute</a> API.</p>",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the manual DB snapshot attribute.</p> <p>The attribute named <code>restore</code> refers to the list of AWS accounts that have permission to copy or restore the manual DB cluster snapshot. For more information, see the <a>ModifyDBSnapshotAttribute</a> API action.</p>"
        },
        "AttributeValues": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>The value or values for the manual DB snapshot attribute.</p> <p>If the <code>AttributeName</code> field is set to <code>restore</code>, then this element returns a list of IDs of the AWS accounts that are authorized to copy or restore the manual DB snapshot. If a value of <code>all</code> is in the list, then the manual DB snapshot is public and available for any AWS account to copy or restore.</p>"
        }
      },
      "type": "object"
    },
    "DBSnapshotAttributeList": {
      "items": {
        "$ref": "#/definitions/DBSnapshotAttribute"
      },
      "type": "array"
    },
    "DBSnapshotAttributesResult": {
      "description": "<p>Contains the results of a successful call to the <a>DescribeDBSnapshotAttributes</a> API action.</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the <a>ModifyDBSnapshotAttribute</a> API action.</p>",
      "properties": {
        "DBSnapshotAttributes": {
          "$ref": "#/definitions/DBSnapshotAttributeList",
          "description": "The list of attributes and values for the manual DB snapshot."
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the manual DB snapshot that the attributes apply to."
        }
      },
      "type": "object"
    },
    "DBSnapshotList": {
      "items": {
        "$ref": "#/definitions/DBSnapshot"
      },
      "type": "array"
    },
    "DBSnapshotMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBSnapshots</a> action. ",
      "properties": {
        "DBSnapshots": {
          "$ref": "#/definitions/DBSnapshotList",
          "description": " A list of <a>DBSnapshot</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBSnapshotNotFoundFault": {
      "description": " <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. ",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroup": {
      "description": "<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBSubnetGroup</a> </p> </li> <li> <p> <a>ModifyDBSubnetGroup</a> </p> </li> <li> <p> <a>DescribeDBSubnetGroups</a> </p> </li> <li> <p> <a>DeleteDBSubnetGroup</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action.</p>",
      "properties": {
        "DBSubnetGroupArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the DB subnet group."
        },
        "DBSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "Provides the description of the DB subnet group."
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB subnet group."
        },
        "SubnetGroupStatus": {
          "$ref": "#/definitions/String",
          "description": "Provides the status of the DB subnet group."
        },
        "Subnets": {
          "$ref": "#/definitions/SubnetList",
          "description": " Contains a list of <a>Subnet</a> elements. "
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "Provides the VpcId of the DB subnet group."
        }
      },
      "type": "object"
    },
    "DBSubnetGroupAlreadyExistsFault": {
      "description": " <i>DBSubnetGroupName</i> is already used by an existing DB subnet group. ",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroupDoesNotCoverEnoughAZs": {
      "description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroupMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeDBSubnetGroups</a> action. ",
      "properties": {
        "DBSubnetGroups": {
          "$ref": "#/definitions/DBSubnetGroups",
          "description": " A list of <a>DBSubnetGroup</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "DBSubnetGroupNotAllowedFault": {
      "description": "Indicates that the DBSubnetGroup should not be specified while creating read replicas that lie in the same region as the source instance.",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroupNotFoundFault": {
      "description": " <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. ",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroupQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of DB subnet groups.",
      "properties": {},
      "type": "object"
    },
    "DBSubnetGroups": {
      "items": {
        "$ref": "#/definitions/DBSubnetGroup"
      },
      "type": "array"
    },
    "DBSubnetQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of subnets in a DB subnet groups.",
      "properties": {},
      "type": "object"
    },
    "DBUpgradeDependencyFailureFault": {
      "description": "The DB upgrade failed because a resource the DB depends on could not be modified.",
      "properties": {},
      "type": "object"
    },
    "DeleteDBClusterMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "FinalDBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>. </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter to true results in an error. </p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "SkipFinalSnapshot": {
          "$ref": "#/definitions/Boolean",
          "description": "<p> Determines whether a final DB cluster snapshot is created before the DB cluster is deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster is deleted. </p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>"
        }
      },
      "required": [
        "DBClusterIdentifier"
      ],
      "type": "object"
    },
    "DeleteDBClusterParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB cluster parameter group.</p> </li> <li> <p>You cannot delete a default DB cluster parameter group.</p> </li> <li> <p>Cannot be associated with any DB clusters.</p> </li> </ul>"
        }
      },
      "required": [
        "DBClusterParameterGroupName"
      ],
      "type": "object"
    },
    "DeleteDBClusterResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "DeleteDBClusterSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code> state.</p>"
        }
      },
      "required": [
        "DBClusterSnapshotIdentifier"
      ],
      "type": "object"
    },
    "DeleteDBClusterSnapshotResult": {
      "properties": {
        "DBClusterSnapshot": {
          "$ref": "#/definitions/DBClusterSnapshot"
        }
      },
      "type": "object"
    },
    "DeleteDBInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "FinalDBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is set to <code>false</code>. </p> <note> <p>Specifying this parameter and also setting the SkipFinalShapshot parameter to true results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Cannot be specified when deleting a Read Replica.</p> </li> </ul>"
        },
        "SkipFinalSnapshot": {
          "$ref": "#/definitions/Boolean",
          "description": "<p> Determines whether a final DB snapshot is created before the DB instance is deleted. If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code> is specified, a DB snapshot is created before the DB instance is deleted. </p> <p>Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore', or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter is set to \"true\".</p> <p>Specify <code>true</code> when deleting a Read Replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>"
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "DeleteDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "DeleteDBParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>You cannot delete a default DB parameter group</p> </li> <li> <p>Cannot be associated with any DB instances</p> </li> </ul>"
        }
      },
      "required": [
        "DBParameterGroupName"
      ],
      "type": "object"
    },
    "DeleteDBSecurityGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB security group to delete.</p> <note> <p>You cannot delete the default DB security group.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>Must not be \"Default\"</p> </li> </ul>"
        }
      },
      "required": [
        "DBSecurityGroupName"
      ],
      "type": "object"
    },
    "DeleteDBSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DBSnapshot identifier.</p> <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>"
        }
      },
      "required": [
        "DBSnapshotIdentifier"
      ],
      "type": "object"
    },
    "DeleteDBSnapshotResult": {
      "properties": {
        "DBSnapshot": {
          "$ref": "#/definitions/DBSnapshot"
        }
      },
      "type": "object"
    },
    "DeleteDBSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the database subnet group to delete.</p> <note> <p>You cannot delete the default subnet group.</p> </note> <p>Constraints:</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        }
      },
      "required": [
        "DBSubnetGroupName"
      ],
      "type": "object"
    },
    "DeleteEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the RDS event notification subscription you want to delete."
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "type": "object"
    },
    "DeleteEventSubscriptionResult": {
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription"
        }
      },
      "type": "object"
    },
    "DeleteOptionGroupMessage": {
      "description": "<p/>",
      "properties": {
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the option group to be deleted.</p> <note> <p>You cannot delete default option groups.</p> </note>"
        }
      },
      "required": [
        "OptionGroupName"
      ],
      "type": "object"
    },
    "DescribeAccountAttributesMessage": {
      "description": "<p/>",
      "properties": {},
      "type": "object"
    },
    "DescribeCertificatesMessage": {
      "description": "<p/>",
      "properties": {
        "CertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <a>DescribeCertificates</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBClusterParameterGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific DB cluster parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBClusterParametersMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific DB cluster parameter group to return parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": " A value that indicates to return only parameters for a specific source. Parameter sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>. "
        }
      },
      "required": [
        "DBClusterParameterGroupName"
      ],
      "type": "object"
    },
    "DescribeDBClusterSnapshotAttributesMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the DB cluster snapshot to describe the attributes for."
        }
      },
      "required": [
        "DBClusterSnapshotIdentifier"
      ],
      "type": "object"
    },
    "DescribeDBClusterSnapshotAttributesResult": {
      "properties": {
        "DBClusterSnapshotAttributesResult": {
          "$ref": "#/definitions/DBClusterSnapshotAttributesResult"
        }
      },
      "type": "object"
    },
    "DescribeDBClusterSnapshotsMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter cannot be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>A specific DB cluster snapshot identifier to describe. This parameter cannot be used in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "IncludePublic": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Set this value to <code>true</code> to include manual DB cluster snapshots that are public and can be copied or restored by any AWS account, otherwise set this value to <code>false</code>. The default is <code>false</code>. The default is false.</p> <p>You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
        },
        "IncludeShared": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Set this value to <code>true</code> to include shared manual DB cluster snapshots from other AWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to <code>false</code>. The default is <code>false</code>.</p> <p>You can give an AWS account permission to restore a manual DB cluster snapshot from another AWS account by the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SnapshotType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of DB cluster snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB cluster snapshots that have been automatically taken by Amazon RDS for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB cluster snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB cluster snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual DB cluster snapshots are returned. You can include shared DB cluster snapshots with these results by setting the <code>IncludeShared</code> parameter to <code>true</code>. You can include public DB cluster snapshots with these results by setting the <code>IncludePublic</code> parameter to <code>true</code>.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBClustersMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>A filter that specifies one or more DB clusters to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB clusters identified by these ARNs.</p> </li> </ul>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <a>DescribeDBClusters</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBEngineVersionsMessage": {
      "properties": {
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific DB parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DefaultOnly": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates that only the default version of the specified engine or engine and major version combination is returned."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The database engine to return."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The database engine version to return.</p> <p>Example: <code>5.1.49</code> </p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Not currently supported."
        },
        "ListSupportedCharacterSets": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "If this parameter is specified and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version. "
        },
        "ListSupportedTimezones": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "If this parameter is specified and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBInstancesMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>A filter that specifies one or more DB instances to describe.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include information about the DB instances associated with the DB Clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs). The results list will only include information about the DB instances identified by these ARNs.</p> </li> </ul>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBInstances</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBLogFilesDetails": {
      "description": "This data type is used as a response element to <a>DescribeDBLogFiles</a>.",
      "properties": {
        "LastWritten": {
          "$ref": "#/definitions/Long",
          "description": "A POSIX timestamp when the last log entry was written."
        },
        "LogFileName": {
          "$ref": "#/definitions/String",
          "description": "The name of the log file for the specified DB instance."
        },
        "Size": {
          "$ref": "#/definitions/Long",
          "description": "The size, in bytes, of the log file for the specified DB instance."
        }
      },
      "type": "object"
    },
    "DescribeDBLogFilesList": {
      "items": {
        "$ref": "#/definitions/DescribeDBLogFilesDetails"
      },
      "type": "array"
    },
    "DescribeDBLogFilesMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "FileLastWritten": {
          "$ref": "#/definitions/Long",
          "description": "Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds."
        },
        "FileSize": {
          "$ref": "#/definitions/Long",
          "description": "Filters the available log files for files larger than the specified size."
        },
        "FilenameContains": {
          "$ref": "#/definitions/String",
          "description": "Filters the available log files for log file names that contain the specified string."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved."
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "DescribeDBLogFilesResponse": {
      "description": " The response from a call to <a>DescribeDBLogFiles</a>. ",
      "properties": {
        "DescribeDBLogFiles": {
          "$ref": "#/definitions/DescribeDBLogFilesList",
          "description": "The DB log files returned."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent DescribeDBLogFiles request."
        }
      },
      "type": "object"
    },
    "DescribeDBParameterGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBParametersMessage": {
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific DB parameter group to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "<p>The parameter types to return.</p> <p>Default: All parameter types returned</p> <p>Valid Values: <code>user | system | engine-default</code> </p>"
        }
      },
      "required": [
        "DBParameterGroupName"
      ],
      "type": "object"
    },
    "DescribeDBSecurityGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB security group to return details for."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBSecurityGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBSnapshotAttributesMessage": {
      "description": "<p/>",
      "properties": {
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the DB snapshot to describe the attributes for."
        }
      },
      "required": [
        "DBSnapshotIdentifier"
      ],
      "type": "object"
    },
    "DescribeDBSnapshotAttributesResult": {
      "properties": {
        "DBSnapshotAttributesResult": {
          "$ref": "#/definitions/DBSnapshotAttributesResult"
        }
      },
      "type": "object"
    },
    "DescribeDBSnapshotsMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter cannot be used in conjunction with <code>DBSnapshotIdentifier</code>. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> A specific DB snapshot identifier to describe. This parameter cannot be used in conjunction with <code>DBInstanceIdentifier</code>. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li> </ul>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "IncludePublic": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Set this value to <code>true</code> to include manual DB snapshots that are public and can be copied or restored by any AWS account, otherwise set this value to <code>false</code>. The default is <code>false</code>.</p> <p>You can share a manual DB snapshot as public by using the <a>ModifyDBSnapshotAttribute</a> API.</p>"
        },
        "IncludeShared": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Set this value to <code>true</code> to include shared manual DB snapshots from other AWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to <code>false</code>. The default is <code>false</code>.</p> <p>You can give an AWS account permission to restore a manual DB snapshot from another AWS account by using the <a>ModifyDBSnapshotAttribute</a> API action.</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeDBSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SnapshotType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of snapshots to be returned. You can specify one of the following values:</p> <ul> <li> <p> <code>automated</code> - Return all DB snapshots that have been automatically taken by Amazon RDS for my AWS account.</p> </li> <li> <p> <code>manual</code> - Return all DB snapshots that have been taken by my AWS account.</p> </li> <li> <p> <code>shared</code> - Return all manual DB snapshots that have been shared to my AWS account.</p> </li> <li> <p> <code>public</code> - Return all DB snapshots that have been marked as public.</p> </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by setting the <code>IncludeShared</code> parameter to <code>true</code>. You can include public snapshots with these results by setting the <code>IncludePublic</code> parameter to <code>true</code>.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p>"
        }
      },
      "type": "object"
    },
    "DescribeDBSubnetGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB subnet group to return details for."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeDBSubnetGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeEngineDefaultClusterParametersMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster parameter group family to return engine parameter information for."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "required": [
        "DBParameterGroupFamily"
      ],
      "type": "object"
    },
    "DescribeEngineDefaultClusterParametersResult": {
      "properties": {
        "EngineDefaults": {
          "$ref": "#/definitions/EngineDefaults"
        }
      },
      "type": "object"
    },
    "DescribeEngineDefaultParametersMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB parameter group family."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "required": [
        "DBParameterGroupFamily"
      ],
      "type": "object"
    },
    "DescribeEngineDefaultParametersResult": {
      "properties": {
        "EngineDefaults": {
          "$ref": "#/definitions/EngineDefaults"
        }
      },
      "type": "object"
    },
    "DescribeEventCategoriesMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of source that will be generating the events.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>"
        }
      },
      "type": "object"
    },
    "DescribeEventSubscriptionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the RDS event notification subscription you want to describe."
        }
      },
      "type": "object"
    },
    "DescribeEventsMessage": {
      "description": "<p/>",
      "properties": {
        "Duration": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of minutes to retrieve events for.</p> <p>Default: 60</p>"
        },
        "EndTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p> The end of the time interval for which to retrieve events, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "A list of event categories that trigger notifications for a event notification subscription."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeEvents request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.</p> <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied, SourceType must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code> must be supplied.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "The event source to retrieve events for. If no value is specified, all events are returned."
        },
        "StartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. For more information about ISO 8601, go to the <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO8601 Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>"
        }
      },
      "type": "object"
    },
    "DescribeOptionGroupOptionsMessage": {
      "description": "<p/>",
      "properties": {
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "A required parameter. Options available for the given engine name will be described."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "MajorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "If specified, filters the results to include only options for the specified major engine version."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "required": [
        "EngineName"
      ],
      "type": "object"
    },
    "DescribeOptionGroupsMessage": {
      "description": "<p/>",
      "properties": {
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "Filters the list of option groups to only include groups associated with a specific database engine."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "MajorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeOptionGroups request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option group to describe. Cannot be supplied together with EngineName or MajorEngineVersion."
        }
      },
      "type": "object"
    },
    "DescribeOrderableDBInstanceOptionsMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the engine to retrieve DB instance options for."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "The license model filter value. Specify this parameter to show only the available offerings matching the specified license model."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "Vpc": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings."
        }
      },
      "required": [
        "Engine"
      ],
      "type": "object"
    },
    "DescribePendingMaintenanceActionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>A filter that specifies one or more resources to return pending maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance actions for the DB clusters identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs. The results list will only include pending maintenance actions for the DB instances identified by these ARNs.</p> </li> </ul>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "ResourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The ARN of a resource to return pending maintenance actions for."
        }
      },
      "type": "object"
    },
    "DescribeReservedDBInstancesMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class."
        },
        "Duration": {
          "$ref": "#/definitions/String",
          "description": "<p>The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "The Multi-AZ filter value. Specify this parameter to show only those reservations matching the specified Multi-AZ parameter."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>\"Partial Upfront\" | \"All Upfront\" | \"No Upfront\" </code> </p>"
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The product description filter value. Specify this parameter to show only those reservations matching the specified product description."
        },
        "ReservedDBInstanceId": {
          "$ref": "#/definitions/String",
          "description": "The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID."
        },
        "ReservedDBInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier."
        }
      },
      "type": "object"
    },
    "DescribeReservedDBInstancesOfferingsMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class."
        },
        "Duration": {
          "$ref": "#/definitions/String",
          "description": "<p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "The Multi-AZ filter value. Specify this parameter to show only the available offerings matching the specified Multi-AZ parameter."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>\"Partial Upfront\" | \"All Upfront\" | \"No Upfront\" </code> </p>"
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "Product description filter value. Specify this parameter to show only the available offerings matching the specified product description."
        },
        "ReservedDBInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
        }
      },
      "type": "object"
    },
    "DescribeSourceRegionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <a>DescribeSourceRegions</a> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "RegionName": {
          "$ref": "#/definitions/String",
          "description": "<p>The source AWS Region name. For example, <code>us-east-1</code>.</p> <p>Constraints:</p> <ul> <li> <p>Must specify a valid AWS Region name.</p> </li> </ul>"
        }
      },
      "type": "object"
    },
    "DomainMembership": {
      "description": "An Active Directory Domain membership record associated with the DB instance.",
      "properties": {
        "Domain": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the Active Directory Domain."
        },
        "FQDN": {
          "$ref": "#/definitions/String",
          "description": "The fully qualified domain name of the Active Directory Domain."
        },
        "IAMRoleName": {
          "$ref": "#/definitions/String",
          "description": "The name of the IAM role to be used when making API calls to the Directory Service."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the DB instance's Active Directory Domain membership, such as joined, pending-join, failed etc)."
        }
      },
      "type": "object"
    },
    "DomainMembershipList": {
      "description": "List of Active Directory Domain membership records associated with a DB instance.",
      "items": {
        "$ref": "#/definitions/DomainMembership"
      },
      "type": "array"
    },
    "DomainNotFoundFault": {
      "description": " <i>Domain</i> does not refer to an existing Active Directory Domain. ",
      "properties": {},
      "type": "object"
    },
    "Double": {
      "format": "double",
      "type": "number"
    },
    "DownloadDBLogFilePortionDetails": {
      "description": "This data type is used as a response element to <a>DownloadDBLogFilePortion</a>.",
      "properties": {
        "AdditionalDataPending": {
          "$ref": "#/definitions/Boolean",
          "description": "Boolean value that if true, indicates there is more data to be downloaded."
        },
        "LogFileData": {
          "$ref": "#/definitions/String",
          "description": "Entries from the specified log file."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "A pagination token that can be used in a subsequent DownloadDBLogFilePortion request."
        }
      },
      "type": "object"
    },
    "DownloadDBLogFilePortionMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The customer-assigned name of the DB instance that contains the log files you want to list.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "LogFileName": {
          "$ref": "#/definitions/String",
          "description": "The name of the log file to be downloaded."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "The pagination token provided in the previous request or \"0\". If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines."
        },
        "NumberOfLines": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file will be truncated at 1 MB in size.</p> <p>If the NumberOfLines parameter is specified, then the block of lines returned can be from the beginning or the end of the log file, depending on the value of the Marker parameter.</p> <ul> <li> <p>If neither Marker or NumberOfLines are specified, the entire log file is returned up to a maximum of 10000 lines, starting with the most recent log entries first.</p> </li> <li> <p>If NumberOfLines is specified and Marker is not specified, then the most recent lines from the end of the log file are returned.</p> </li> <li> <p>If Marker is specified as \"0\", then the specified number of lines from the beginning of the log file are returned.</p> </li> <li> <p>You can download the log file in blocks of lines by specifying the size of the block using the NumberOfLines parameter, and by specifying a value of \"0\" for the Marker parameter in your first request. Include the Marker value returned in the response as the Marker value for the next request, continuing until the AdditionalDataPending response element returns false.</p> </li> </ul>"
        }
      },
      "required": [
        "DBInstanceIdentifier",
        "LogFileName"
      ],
      "type": "object"
    },
    "EC2SecurityGroup": {
      "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>AuthorizeDBSecurityGroupIngress</a> </p> </li> <li> <p> <a>DescribeDBSecurityGroups</a> </p> </li> <li> <p> <a>RevokeDBSecurityGroupIngress</a> </p> </li> </ul>",
      "properties": {
        "EC2SecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": "Specifies the id of the EC2 security group."
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the EC2 security group."
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": " Specifies the AWS ID of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> field. "
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Provides the status of the EC2 security group. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\"."
        }
      },
      "type": "object"
    },
    "EC2SecurityGroupList": {
      "items": {
        "$ref": "#/definitions/EC2SecurityGroup"
      },
      "type": "array"
    },
    "Endpoint": {
      "description": "<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DescribeDBInstances</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> </ul>",
      "properties": {
        "Address": {
          "$ref": "#/definitions/String",
          "description": "Specifies the DNS address of the DB instance."
        },
        "HostedZoneId": {
          "$ref": "#/definitions/String",
          "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone."
        },
        "Port": {
          "$ref": "#/definitions/Integer",
          "description": "Specifies the port that the database engine is listening on."
        }
      },
      "type": "object"
    },
    "EngineDefaults": {
      "description": " Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. ",
      "properties": {
        "DBParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the DB parameter group family that the engine default parameters apply to."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous EngineDefaults request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "Contains a list of engine default parameters."
        }
      },
      "type": "object"
    },
    "Event": {
      "description": " This data type is used as a response element in the <a>DescribeEvents</a> action. ",
      "properties": {
        "Date": {
          "$ref": "#/definitions/TStamp",
          "description": "Specifies the date and time of the event."
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "Specifies the category for the event."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "Provides the text of this event."
        },
        "SourceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the event."
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Provides the identifier for the source of the event."
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "Specifies the source type for this event."
        }
      },
      "type": "object"
    },
    "EventCategoriesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "EventCategoriesMap": {
      "description": "Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.",
      "properties": {
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "The event categories for the specified source type"
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "The source type that the returned categories belong to"
        }
      },
      "type": "object"
    },
    "EventCategoriesMapList": {
      "items": {
        "$ref": "#/definitions/EventCategoriesMap"
      },
      "type": "array"
    },
    "EventCategoriesMessage": {
      "description": "Data returned from the <b>DescribeEventCategories</b> action.",
      "properties": {
        "EventCategoriesMapList": {
          "$ref": "#/definitions/EventCategoriesMapList",
          "description": "A list of EventCategoriesMap data types."
        }
      },
      "type": "object"
    },
    "EventList": {
      "items": {
        "$ref": "#/definitions/Event"
      },
      "type": "array"
    },
    "EventSubscription": {
      "description": "Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.",
      "properties": {
        "CustSubscriptionId": {
          "$ref": "#/definitions/String",
          "description": "The RDS event notification subscription Id."
        },
        "CustomerAwsId": {
          "$ref": "#/definitions/String",
          "description": "The AWS customer account associated with the RDS event notification subscription."
        },
        "Enabled": {
          "$ref": "#/definitions/Boolean",
          "description": "A Boolean value indicating if the subscription is enabled. True indicates the subscription is enabled."
        },
        "EventCategoriesList": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "A list of event categories for the RDS event notification subscription."
        },
        "EventSubscriptionArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the event subscription."
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": "The topic ARN of the RDS event notification subscription."
        },
        "SourceIdsList": {
          "$ref": "#/definitions/SourceIdsList",
          "description": "A list of source IDs for the RDS event notification subscription."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "The source type for the RDS event notification subscription."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "<p>The status of the RDS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that RDS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>"
        },
        "SubscriptionCreationTime": {
          "$ref": "#/definitions/String",
          "description": "The time the RDS event notification subscription was created."
        }
      },
      "type": "object"
    },
    "EventSubscriptionQuotaExceededFault": {
      "description": "You have reached the maximum number of event subscriptions.",
      "properties": {},
      "type": "object"
    },
    "EventSubscriptionsList": {
      "items": {
        "$ref": "#/definitions/EventSubscription"
      },
      "type": "array"
    },
    "EventSubscriptionsMessage": {
      "description": "Data returned by the <b>DescribeEventSubscriptions</b> action.",
      "properties": {
        "EventSubscriptionsList": {
          "$ref": "#/definitions/EventSubscriptionsList",
          "description": "A list of EventSubscriptions data types."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object"
    },
    "EventsMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeEvents</a> action. ",
      "properties": {
        "Events": {
          "$ref": "#/definitions/EventList",
          "description": " A list of <a>Event</a> instances. "
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous Events request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        }
      },
      "type": "object"
    },
    "FailoverDBClusterMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>A DB cluster identifier to force a failover for. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "TargetDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the instance to promote to the primary instance.</p> <p>You must specify the instance identifier for an Aurora Replica in the DB cluster. For example, <code>mydbcluster-replica1</code>.</p>"
        }
      },
      "type": "object"
    },
    "FailoverDBClusterResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "Filter": {
      "description": "This type is not currently supported.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "This parameter is not currently supported."
        },
        "Values": {
          "$ref": "#/definitions/FilterValueList",
          "description": "This parameter is not currently supported."
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "object"
    },
    "FilterList": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "type": "array"
    },
    "FilterValueList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "IPRange": {
      "description": " This data type is used as a response element in the <a>DescribeDBSecurityGroups</a> action. ",
      "properties": {
        "CIDRIP": {
          "$ref": "#/definitions/String",
          "description": "Specifies the IP range."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of the IP range. Status can be \"authorizing\", \"authorized\", \"revoking\", and \"revoked\"."
        }
      },
      "type": "object"
    },
    "IPRangeList": {
      "items": {
        "$ref": "#/definitions/IPRange"
      },
      "type": "array"
    },
    "InstanceQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of DB instances.",
      "properties": {},
      "type": "object"
    },
    "InsufficientDBClusterCapacityFault": {
      "description": "The DB cluster does not have enough capacity for the current operation.",
      "properties": {},
      "type": "object"
    },
    "InsufficientDBInstanceCapacityFault": {
      "description": "Specified DB instance class is not available in the specified Availability Zone.",
      "properties": {},
      "type": "object"
    },
    "InsufficientStorageClusterCapacityFault": {
      "description": "There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.",
      "properties": {},
      "type": "object"
    },
    "Integer": {
      "type": "integer"
    },
    "IntegerOptional": {
      "type": "integer"
    },
    "InvalidDBClusterSnapshotStateFault": {
      "description": "The supplied value is not a valid DB cluster snapshot state.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBClusterStateFault": {
      "description": "The DB cluster is not in a valid state.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBInstanceStateFault": {
      "description": " The specified DB instance is not in the <i>available</i> state. ",
      "properties": {},
      "type": "object"
    },
    "InvalidDBParameterGroupStateFault": {
      "description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBSecurityGroupStateFault": {
      "description": "The state of the DB security group does not allow deletion.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBSnapshotStateFault": {
      "description": "The state of the DB snapshot does not allow deletion.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBSubnetGroupFault": {
      "description": "Indicates the DBSubnetGroup does not belong to the same VPC as that of an existing cross region read replica of the same source instance.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBSubnetGroupStateFault": {
      "description": "The DB subnet group cannot be deleted because it is in use.",
      "properties": {},
      "type": "object"
    },
    "InvalidDBSubnetStateFault": {
      "description": " The DB subnet is not in the <i>available</i> state. ",
      "properties": {},
      "type": "object"
    },
    "InvalidEventSubscriptionStateFault": {
      "description": "This error can occur if someone else is modifying a subscription. You should retry the action.",
      "properties": {},
      "type": "object"
    },
    "InvalidOptionGroupStateFault": {
      "description": " The option group is not in the <i>available</i> state. ",
      "properties": {},
      "type": "object"
    },
    "InvalidRestoreFault": {
      "description": "Cannot restore from vpc backup to non-vpc DB instance.",
      "properties": {},
      "type": "object"
    },
    "InvalidS3BucketFault": {
      "description": "The specified Amazon S3 bucket name could not be found or Amazon RDS is not authorized to access the specified Amazon S3 bucket. Verify the <b>SourceS3BucketName</b> and <b>S3IngestionRoleArn</b> values and try again.",
      "properties": {},
      "type": "object"
    },
    "InvalidSubnet": {
      "description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
      "properties": {},
      "type": "object"
    },
    "InvalidVPCNetworkStateFault": {
      "description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
      "properties": {},
      "type": "object"
    },
    "KMSKeyNotAccessibleFault": {
      "description": "Error accessing KMS key.",
      "properties": {},
      "type": "object"
    },
    "KeyList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ListTagsForResourceMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "This parameter is not currently supported."
        },
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>."
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "object"
    },
    "Long": {
      "type": "integer"
    },
    "ModifyDBClusterMessage": {
      "description": "<p/>",
      "properties": {
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>A value that specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is set to <code>false</code>, changes to the DB cluster are applied during the next maintenance window.</p> <p>The <code>ApplyImmediately</code> parameter only affects the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values. If you set the <code>ApplyImmediately</code> parameter value to false, then changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default: <code>false</code> </p>"
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for an existing DB cluster.</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster parameter group to use for the DB cluster."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A Boolean value that is true to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "<p>The new password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>"
        },
        "NewDBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code> </p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A value that indicates that the DB cluster should be associated with the specified option group. Changing this parameter does not result in an outage except in the following case, and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options cannot be removed from an option group. The option group cannot be removed from a DB cluster once it is associated with a DB cluster.</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Times should be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of VPC security groups that the DB cluster will belong to."
        }
      },
      "required": [
        "DBClusterIdentifier"
      ],
      "type": "object"
    },
    "ModifyDBClusterParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster parameter group to modify."
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "A list of parameters in the DB cluster parameter group to modify."
        }
      },
      "required": [
        "DBClusterParameterGroupName",
        "Parameters"
      ],
      "type": "object"
    },
    "ModifyDBClusterResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "ModifyDBClusterSnapshotAttributeMessage": {
      "description": "<p/>",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this value to <code>restore</code>.</p>"
        },
        "DBClusterSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the DB cluster snapshot to modify the attributes for."
        },
        "ValuesToAdd": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB cluster snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all AWS accounts.</p>"
        },
        "ValuesToRemove": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>A list of DB cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual DB cluster snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB cluster snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore a manual DB cluster snapshot.</p>"
        }
      },
      "required": [
        "DBClusterSnapshotIdentifier",
        "AttributeName"
      ],
      "type": "object"
    },
    "ModifyDBClusterSnapshotAttributeResult": {
      "properties": {
        "DBClusterSnapshotAttributesResult": {
          "$ref": "#/definitions/DBClusterSnapshotAttributesResult"
        }
      },
      "type": "object"
    },
    "ModifyDBInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The new storage capacity of the RDS instance. Changing this setting does not result in an outage and the change is applied during the next maintenance window unless <code>ApplyImmediately</code> is set to <code>true</code> for this request. </p> <p> <b>MySQL</b> </p> <p>Default: Uses existing setting</p> <p>Valid Values: 5-6144</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>Type: Integer</p> <p> <b>MariaDB</b> </p> <p>Default: Uses existing setting</p> <p>Valid Values: 5-6144</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>Type: Integer</p> <p> <b>PostgreSQL</b> </p> <p>Default: Uses existing setting</p> <p>Valid Values: 5-6144</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p>Type: Integer</p> <p> <b>Oracle</b> </p> <p>Default: Uses existing setting</p> <p>Valid Values: 10-6144</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value.</p> <p> <b>SQL Server</b> </p> <p>Cannot be modified.</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance will be available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance will be suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a Read Replica for the instance, and creating a DB snapshot of the instance.</p>"
        },
        "AllowMajorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the EngineVersion parameter that is a different major version than the DB instance's current version.</p>"
        },
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the DB instance. </p> <p> If this parameter is set to <code>false</code>, changes to the DB instance are applied during the next maintenance window. Some parameter changes can cause an outage and will be applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot. Review the table of parameters in <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html\">Modifying a DB Instance and Using the Apply Immediately Parameter</a> to see the impact that setting <code>ApplyImmediately</code> to <code>true</code> or <code>false</code> has for each modified parameter and to determine when the changes will be applied. </p> <p>Default: <code>false</code> </p>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Indicates that minor version upgrades will be applied automatically to the DB instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and RDS has enabled auto patching for that engine version. "
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Changing this parameter can result in an outage if you change from 0 to a non-zero value or from a non-zero value to 0. These changes are applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If you change the parameter from one non-zero value to another non-zero value, the change is asynchronously applied as soon as possible.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The retention period for automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing setting</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Can be specified for a MySQL Read Replica only if the source is running MySQL 5.6</p> </li> <li> <p>Can be specified for a PostgreSQL Read Replica only if the source is running PostgreSQL 9.3.5</p> </li> <li> <p>Cannot be set to 0 if the DB instance is a source to Read Replicas</p> </li> </ul>"
        },
        "CACertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Indicates the certificate that needs to be associated with the instance."
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the DB instance to snapshots of the DB instance; otherwise false. The default is false."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p> The new compute and memory capacity of the DB instance. To determine the instance classes that are available for a particular DB engine, use the <a>DescribeOrderableDBInstanceOptions</a> action. Note that not all instance classes are available in all regions for all DB engines. </p> <p> Passing a value for this setting causes an outage during the change and is applied during the next maintenance window, unless <code>ApplyImmediately</code> is specified as <code>true</code> for this request. </p> <p>Default: Uses existing setting</p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.xlarge | db.m2.2xlarge | db.m2.4xlarge | db.m3.medium | db.m3.large | db.m3.xlarge | db.m3.2xlarge | db.m4.large | db.m4.xlarge | db.m4.2xlarge | db.m4.4xlarge | db.m4.10xlarge | db.r3.large | db.r3.xlarge | db.r3.2xlarge | db.r3.4xlarge | db.r3.8xlarge | db.t2.micro | db.t2.small | db.t2.medium | db.t2.large</code> </p>"
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for an existing DB instance</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group to apply to the DB instance. Changing this setting does not result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. The db instance will NOT be rebooted automatically and the parameter changes will NOT be applied during the next maintenance window.</p> <p>Default: Uses existing setting</p> <p>Constraints: The DB parameter group must be in the same DB parameter group family as this DB instance.</p>"
        },
        "DBPortNumber": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the database accepts connections.</p> <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values specified for options in the option group for the DB instance.</p> <p>Your database will restart when you change the <code>DBPortNumber</code> value regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p> <b>MySQL</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p> <b>MariaDB</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p> <b>PostgreSQL</b> </p> <p> Default: <code>5432</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p>Type: Integer</p> <p> <b>Oracle</b> </p> <p> Default: <code>1521</code> </p> <p> Valid Values: <code>1150-65535</code> </p> <p> <b>SQL Server</b> </p> <p> Default: <code>1433</code> </p> <p> Valid Values: <code>1150-65535</code> except for <code>1434</code>, <code>3389</code>, <code>47001</code>, <code>49152</code>, and <code>49152</code> through <code>49156</code>. </p> <p> <b>Amazon Aurora</b> </p> <p> Default: <code>3306</code> </p> <p> Valid Values: <code>1150-65535</code> </p>"
        },
        "DBSecurityGroups": {
          "$ref": "#/definitions/DBSecurityGroupNameList",
          "description": "<p>A list of DB security groups to authorize on this DB instance. Changing this setting does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The new DB subnet group for the DB instance. You can use this parameter to move your DB instance to a different VPC. If your DB instance is not in a VPC, you can also use this parameter to move your DB instance into a VPC. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Non-VPC2VPC\">Updating the VPC for a DB Instance</a>. </p> <p>Changing the subnet group causes an outage during the change. The change is applied during the next maintenance window, unless you specify <code>true</code> for the <code>ApplyImmediately</code> parameter. </p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens.</p> <p>Example: <code>mySubnetGroup</code> </p>"
        },
        "Domain": {
          "$ref": "#/definitions/String",
          "description": "The Active Directory Domain to move the instance to. Specify <code>none</code> to remove the instance from its current domain. The domain must be created prior to this operation. Currently only a Microsoft SQL Server instance can be created in a Active Directory Domain. "
        },
        "DomainIAMRoleName": {
          "$ref": "#/definitions/String",
          "description": "The name of the IAM role to use when making API calls to the Directory Service."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts; otherwise false.</p> <p> You can enable IAM database authentication for the following database engines</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p> <b>MySQL</b> </p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> </ul> <p>Default: <code>false</code> </p>"
        },
        "EnablePerformanceInsights": {
          "$ref": "#/definitions/BooleanOptional"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p> The version number of the database engine to upgrade to. Changing this parameter results in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>For major version upgrades, if a nondefault DB parameter group is currently in use, a new DB parameter group in the DB parameter group family for the new engine version must be specified. The new DB parameter group can be the default for that DB parameter group family.</p> <p>For a list of valid engine versions, see <a>CreateDBInstance</a>.</p>"
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The new Provisioned IOPS (I/O operations per second) value for the RDS instance. Changing this setting does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>Default: Uses existing setting</p> <p>Constraints: Value supplied must be at least 10% greater than the current value. Values that are not at least 10% greater than the existing value are rounded up so that they are 10% greater than the current value. If you are migrating from Provisioned IOPS to standard storage, set this value to 0. The DB instance will require a reboot for the change in storage type to take effect.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine is not supported.</p> <p>Type: Integer</p> <p>If you choose to migrate your DB instance from using standard storage to using Provisioned IOPS, or from using Provisioned IOPS to using standard storage, the process can take time. The duration of the migration depends on several factors such as database load, storage size, storage type (standard or Provisioned IOPS), amount of IOPS provisioned (if any), and the number of prior scale storage operations. Typical migration times are under 24 hours, but the process can take up to several days in some cases. During the migration, the DB instance will be available for use, but might experience performance degradation. While the migration takes place, nightly backups for the instance will be suspended. No other Amazon RDS operations can take place for the instance, including modifying the instance, rebooting the instance, deleting the instance, creating a Read Replica for the instance, and creating a DB snapshot of the instance.</p>"
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "<p>The new password for the master user. Can be any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p> Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. Between the time of the request and the completion of the request, the <code>MasterUserPassword</code> element exists in the <code>PendingModifiedValues</code> element of the operation response. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The password for the master user is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing setting</p> <p>Constraints: Must be 8 to 41 alphanumeric characters (MySQL, MariaDB, and Amazon Aurora), 8 to 30 alphanumeric characters (Oracle), or 8 to 128 alphanumeric characters (SQL Server).</p> <note> <p>Amazon RDS API actions never return the password, so this action provides a way to regain access to a primary instance user if the password is lost. This includes restoring privileges that might have been accidentally revoked.</p> </note>"
        },
        "MonitoringInterval": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
        },
        "MonitoringRoleArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, go to <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html#USER_Monitoring.OS.IAMRole\">To create an IAM role for Amazon RDS Enhanced Monitoring</a>.</p> <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p> Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter does not result in an outage and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. </p> <p>Constraints: Cannot be specified if the DB instance is a Read Replica.</p>"
        },
        "NewDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> The new DB instance identifier for the DB instance when renaming a DB instance. When you change the DB instance identifier, an instance reboot will occur immediately if you set <code>Apply Immediately</code> to true, or will occur during the next maintenance window if <code>Apply Immediately</code> to false. This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p> Indicates that the DB instance should be associated with the specified option group. Changing this parameter does not result in an outage except in the following case and the change is applied during the next maintenance window unless the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request. If the parameter change results in an option group that enables OEM, this change can cause a brief (sub-second) period during which new connections are rejected but existing connections are not interrupted. </p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance</p>"
        },
        "PerformanceInsightsKMSKeyId": {
          "$ref": "#/definitions/String"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p> The daily time range during which automated backups are created if automated backups are enabled, as determined by the <code>BackupRetentionPeriod</code> parameter. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible. </p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The daily time range for creating automated backups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li> <p>Times should be in Universal Time Coordinated (UTC)</p> </li> <li> <p>Must not conflict with the preferred maintenance window</p> </li> <li> <p>Must be at least 30 minutes</p> </li> </ul>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>"
        },
        "PromotionTier": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html#Aurora.Managing.FaultTolerance\"> Fault Tolerance for an Aurora DB Cluster</a>. </p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Boolean value that indicates if the DB instance has a publicly resolvable DNS name. Set to <code>True</code> to make the DB instance Internet-facing with a publicly resolvable DNS name, which resolves to a public IP address. Set to <code>False</code> to make the DB instance internal with a DNS name that resolves to a private IP address. </p> <p> <code>PubliclyAccessible</code> only applies to DB instances in a VPC. The DB instance must be part of a public subnet and <code>PubliclyAccessible</code> must be true in order for it to be publicly accessible. </p> <p>Changes to the <code>PubliclyAccessible</code> parameter are applied immediately regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default: false</p>"
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>standard</code> </p>"
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the Key Store with which to associate the instance for TDE encryption."
        },
        "TdeCredentialPassword": {
          "$ref": "#/definitions/String",
          "description": "The password for the given ARN from the Key Store in order to access the device."
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "<p>A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.</p> <p> <b>Amazon Aurora</b> </p> <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. For more information, see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "ModifyDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "ModifyDBParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB parameter group</p> </li> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "<p>An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters can be modified in a single request.</p> <p>Valid Values (for the application method): <code>immediate | pending-reboot</code> </p> <note> <p>You can use the immediate value with dynamic parameters only. You can use the pending-reboot value for both dynamic and static parameters, and changes are applied when you reboot the DB instance without failover.</p> </note>"
        }
      },
      "required": [
        "DBParameterGroupName",
        "Parameters"
      ],
      "type": "object"
    },
    "ModifyDBSnapshotAttributeMessage": {
      "description": "<p/>",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB snapshot attribute to modify.</p> <p>To manage authorization for other AWS accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p>"
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the DB snapshot to modify the attributes for."
        },
        "ValuesToAdd": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account IDs, or <code>all</code> to make the manual DB snapshot restorable by any AWS account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all AWS accounts.</p>"
        },
        "ValuesToRemove": {
          "$ref": "#/definitions/AttributeValueList",
          "description": "<p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other AWS accounts to copy or restore a manual snapshot, set this list to include one or more AWS account identifiers, or <code>all</code> to remove authorization for any AWS account to copy or restore the DB snapshot. If you specify <code>all</code>, an AWS account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>"
        }
      },
      "required": [
        "DBSnapshotIdentifier",
        "AttributeName"
      ],
      "type": "object"
    },
    "ModifyDBSnapshotAttributeResult": {
      "properties": {
        "DBSnapshotAttributesResult": {
          "$ref": "#/definitions/DBSnapshotAttributesResult"
        }
      },
      "type": "object"
    },
    "ModifyDBSnapshotMessage": {
      "properties": {
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the DB snapshot to modify."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The engine version to upgrade the DB snapshot to. </p> <p>The following are the database engines and engine versions that are available when you upgrade a DB snapshot. </p> <p> <b>MySQL</b> </p> <ul> <li> <p> <code>5.5.46</code> (supported for 5.1 DB snapshots)</p> </li> </ul> <p> <b>Oracle</b> </p> <ul> <li> <p> <code>12.1.0.2.v8</code> (supported for 12.1.0.1 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v12</code> (supported for 11.2.0.2 DB snapshots)</p> </li> <li> <p> <code>11.2.0.4.v11</code> (supported for 11.2.0.3 DB snapshots)</p> </li> </ul>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The option group to identify with the upgraded DB snapshot. </p> <p>You can specify this parameter when you upgrade an Oracle DB snapshot. The same option group considerations apply when upgrading a DB snapshot as when upgrading a DB instance. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Oracle.html#USER_UpgradeDBInstance.Oracle.OGPG.OG\">Option Group Considerations</a>. </p>"
        }
      },
      "required": [
        "DBSnapshotIdentifier"
      ],
      "type": "object"
    },
    "ModifyDBSnapshotResult": {
      "properties": {
        "DBSnapshot": {
          "$ref": "#/definitions/DBSnapshot"
        }
      },
      "type": "object"
    },
    "ModifyDBSubnetGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description for the DB subnet group."
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the DB subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "The EC2 subnet IDs for the DB subnet group."
        }
      },
      "required": [
        "DBSubnetGroupName",
        "SubnetIds"
      ],
      "type": "object"
    },
    "ModifyDBSubnetGroupResult": {
      "properties": {
        "DBSubnetGroup": {
          "$ref": "#/definitions/DBSubnetGroup"
        }
      },
      "type": "object"
    },
    "ModifyEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " A Boolean value; set to <b>true</b> to activate the subscription. "
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": " A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType in the <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action. "
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the RDS event notification subscription."
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "type": "object"
    },
    "ModifyEventSubscriptionResult": {
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription"
        }
      },
      "type": "object"
    },
    "ModifyOptionGroupMessage": {
      "description": "<p/>",
      "properties": {
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the changes should be applied immediately, or during the next maintenance window for each instance associated with the option group."
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the option group to be modified.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance</p>"
        },
        "OptionsToInclude": {
          "$ref": "#/definitions/OptionConfigurationList",
          "description": "Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration."
        },
        "OptionsToRemove": {
          "$ref": "#/definitions/OptionNamesList",
          "description": "Options in this list are removed from the option group."
        }
      },
      "required": [
        "OptionGroupName"
      ],
      "type": "object"
    },
    "ModifyOptionGroupResult": {
      "properties": {
        "OptionGroup": {
          "$ref": "#/definitions/OptionGroup"
        }
      },
      "type": "object"
    },
    "Option": {
      "description": "Option details.",
      "properties": {
        "DBSecurityGroupMemberships": {
          "$ref": "#/definitions/DBSecurityGroupMembershipList",
          "description": "If the option requires access to a port, then this DB security group allows access to the port."
        },
        "OptionDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the option."
        },
        "OptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option."
        },
        "OptionSettings": {
          "$ref": "#/definitions/OptionSettingConfigurationList",
          "description": "The option settings for this option."
        },
        "OptionVersion": {
          "$ref": "#/definitions/String",
          "description": "The version of the option."
        },
        "Permanent": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicate if this option is permanent."
        },
        "Persistent": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicate if this option is persistent."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "If required, the port configured for this option to use."
        },
        "VpcSecurityGroupMemberships": {
          "$ref": "#/definitions/VpcSecurityGroupMembershipList",
          "description": "If the option requires access to a port, then this VPC security group allows access to the port."
        }
      },
      "type": "object"
    },
    "OptionConfiguration": {
      "description": "A list of all available options",
      "properties": {
        "DBSecurityGroupMemberships": {
          "$ref": "#/definitions/DBSecurityGroupNameList",
          "description": "A list of DBSecurityGroupMemebrship name strings used for this option."
        },
        "OptionName": {
          "$ref": "#/definitions/String",
          "description": "The configuration of options to include in a group."
        },
        "OptionSettings": {
          "$ref": "#/definitions/OptionSettingsList",
          "description": "The option settings to include in an option group."
        },
        "OptionVersion": {
          "$ref": "#/definitions/String",
          "description": "The version for the option."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The optional port for the option."
        },
        "VpcSecurityGroupMemberships": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of VpcSecurityGroupMemebrship name strings used for this option."
        }
      },
      "required": [
        "OptionName"
      ],
      "type": "object"
    },
    "OptionConfigurationList": {
      "items": {
        "$ref": "#/definitions/OptionConfiguration"
      },
      "type": "array"
    },
    "OptionGroup": {
      "description": "<p/>",
      "properties": {
        "AllowsVpcAndNonVpcInstanceMemberships": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this option group can be applied to both VPC and non-VPC instances. The value <code>true</code> indicates the option group can be applied to both VPC and non-VPC instances. "
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "Indicates the name of the engine that this option group can be applied to."
        },
        "MajorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Indicates the major engine version associated with this option group."
        },
        "OptionGroupArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the option group."
        },
        "OptionGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "Provides a description of the option group."
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the option group."
        },
        "Options": {
          "$ref": "#/definitions/OptionsList",
          "description": "Indicates what options are available in the option group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "If <b>AllowsVpcAndNonVpcInstanceMemberships</b> is <code>false</code>, this field is blank. If <b>AllowsVpcAndNonVpcInstanceMemberships</b> is <code>true</code> and this field is blank, then this option group can be applied to both VPC and non-VPC instances. If this field contains a value, then this option group can only be applied to instances that are in the VPC indicated by this field. "
        }
      },
      "type": "object"
    },
    "OptionGroupAlreadyExistsFault": {
      "description": "The option group you are trying to create already exists.",
      "properties": {},
      "type": "object"
    },
    "OptionGroupMembership": {
      "description": "Provides information on the option groups the DB instance is a member of.",
      "properties": {
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option group that the instance belongs to."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the DB instance's option group membership. Valid values are: <code>in-sync</code>, <code>pending-apply</code>, <code>pending-removal</code>, <code>pending-maintenance-apply</code>, <code>pending-maintenance-removal</code>, <code>applying</code>, <code>removing</code>, and <code>failed</code>. "
        }
      },
      "type": "object"
    },
    "OptionGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/OptionGroupMembership"
      },
      "type": "array"
    },
    "OptionGroupNotFoundFault": {
      "description": "The specified option group could not be found.",
      "properties": {},
      "type": "object"
    },
    "OptionGroupOption": {
      "description": "Available option.",
      "properties": {
        "DefaultPort": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "If the option requires a port, specifies the default port for the option."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the option."
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "The name of the engine that this option can be applied to."
        },
        "MajorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Indicates the major engine version that the option is available for."
        },
        "MinimumRequiredMinorEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The minimum required engine version for the option to be applied."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the option."
        },
        "OptionGroupOptionSettings": {
          "$ref": "#/definitions/OptionGroupOptionSettingsList",
          "description": "The option settings that are available (and the default value) for each option in an option group."
        },
        "OptionGroupOptionVersions": {
          "$ref": "#/definitions/OptionGroupOptionVersionsList",
          "description": "The versions that are available for the option."
        },
        "OptionsConflictsWith": {
          "$ref": "#/definitions/OptionsConflictsWith",
          "description": "The options that conflict with this option."
        },
        "OptionsDependedOn": {
          "$ref": "#/definitions/OptionsDependedOn",
          "description": "The options that are prerequisites for this option."
        },
        "Permanent": {
          "$ref": "#/definitions/Boolean",
          "description": "Permanent options can never be removed from an option group. An option group containing a permanent option can't be removed from a DB instance."
        },
        "Persistent": {
          "$ref": "#/definitions/Boolean",
          "description": "Persistent options can't be removed from an option group while DB instances are associated with the option group. If you disassociate all DB instances from the option group, your can remove the persistent option from the option group."
        },
        "PortRequired": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the option requires a port."
        },
        "RequiresAutoMinorEngineVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, you must enable the Auto Minor Version Upgrade setting for your DB instance before you can use this option. You can enable Auto Minor Version Upgrade when you first create your DB instance, or by modifying your DB instance later. "
        },
        "SupportsOptionVersionDowngrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "If true, you can change the option to an earlier version of the option. This only applies to options that have different versions available. "
        },
        "VpcOnly": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, you can only use this option with a DB instance that is in a VPC. "
        }
      },
      "type": "object"
    },
    "OptionGroupOptionSetting": {
      "description": "Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.",
      "properties": {
        "AllowedValues": {
          "$ref": "#/definitions/String",
          "description": "Indicates the acceptable values for the option group option."
        },
        "ApplyType": {
          "$ref": "#/definitions/String",
          "description": "The DB engine specific parameter type for the option group option."
        },
        "DefaultValue": {
          "$ref": "#/definitions/String",
          "description": "The default value for the option group option."
        },
        "IsModifiable": {
          "$ref": "#/definitions/Boolean",
          "description": "Boolean value where true indicates that this option group option can be changed from the default value."
        },
        "SettingDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the option group option."
        },
        "SettingName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option group option."
        }
      },
      "type": "object"
    },
    "OptionGroupOptionSettingsList": {
      "items": {
        "$ref": "#/definitions/OptionGroupOptionSetting"
      },
      "type": "array"
    },
    "OptionGroupOptionVersionsList": {
      "items": {
        "$ref": "#/definitions/OptionVersion"
      },
      "type": "array"
    },
    "OptionGroupOptionsList": {
      "description": "List of available option group options.",
      "items": {
        "$ref": "#/definitions/OptionGroupOption"
      },
      "type": "array"
    },
    "OptionGroupOptionsMessage": {
      "description": "<p/>",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "OptionGroupOptions": {
          "$ref": "#/definitions/OptionGroupOptionsList"
        }
      },
      "type": "object"
    },
    "OptionGroupQuotaExceededFault": {
      "description": "The quota of 20 option groups was exceeded for this AWS account.",
      "properties": {},
      "type": "object"
    },
    "OptionGroups": {
      "description": "List of option groups.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "OptionGroupsList": {
          "$ref": "#/definitions/OptionGroupsList",
          "description": "List of option groups."
        }
      },
      "type": "object"
    },
    "OptionGroupsList": {
      "items": {
        "$ref": "#/definitions/OptionGroup"
      },
      "type": "array"
    },
    "OptionNamesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "OptionSetting": {
      "description": "Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.",
      "properties": {
        "AllowedValues": {
          "$ref": "#/definitions/String",
          "description": "The allowed values of the option setting."
        },
        "ApplyType": {
          "$ref": "#/definitions/String",
          "description": "The DB engine specific parameter type."
        },
        "DataType": {
          "$ref": "#/definitions/String",
          "description": "The data type of the option setting."
        },
        "DefaultValue": {
          "$ref": "#/definitions/String",
          "description": "The default value of the option setting."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the option setting."
        },
        "IsCollection": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates if the option setting is part of a collection."
        },
        "IsModifiable": {
          "$ref": "#/definitions/Boolean",
          "description": "A Boolean value that, when true, indicates the option setting can be modified from the default."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the option that has settings that you can set."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The current value of the option setting."
        }
      },
      "type": "object"
    },
    "OptionSettingConfigurationList": {
      "items": {
        "$ref": "#/definitions/OptionSetting"
      },
      "type": "array"
    },
    "OptionSettingsList": {
      "items": {
        "$ref": "#/definitions/OptionSetting"
      },
      "type": "array"
    },
    "OptionVersion": {
      "description": "The version for an option. Option group option versions are returned by the <a>DescribeOptionGroupOptions</a> action.",
      "properties": {
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "True if the version is the default version of the option; otherwise, false."
        },
        "Version": {
          "$ref": "#/definitions/String",
          "description": "The version of the option."
        }
      },
      "type": "object"
    },
    "OptionsConflictsWith": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "OptionsDependedOn": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "OptionsList": {
      "items": {
        "$ref": "#/definitions/Option"
      },
      "type": "array"
    },
    "OrderableDBInstanceOption": {
      "description": "<p>Contains a list of available options for a DB instance</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZoneList",
          "description": "A list of Availability Zones for the orderable DB instance."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class for the orderable DB instance."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The engine type of the orderable DB instance."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version of the orderable DB instance."
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "The license model for the orderable DB instance."
        },
        "MultiAZCapable": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this orderable DB instance is multi-AZ capable."
        },
        "ReadReplicaCapable": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this orderable DB instance can have a Read Replica."
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "Indicates the storage type for this orderable DB instance."
        },
        "SupportsEnhancedMonitoring": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the DB instance supports enhanced monitoring at intervals from 1 to 60 seconds."
        },
        "SupportsIAMDatabaseAuthentication": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this orderable DB instance supports IAM database authentication."
        },
        "SupportsIops": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this orderable DB instance supports provisioned IOPS."
        },
        "SupportsPerformanceInsights": {
          "$ref": "#/definitions/Boolean"
        },
        "SupportsStorageEncryption": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this orderable DB instance supports encrypted storage."
        },
        "Vpc": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is a VPC orderable DB instance."
        }
      },
      "type": "object"
    },
    "OrderableDBInstanceOptionsList": {
      "items": {
        "$ref": "#/definitions/OrderableDBInstanceOption"
      },
      "type": "array"
    },
    "OrderableDBInstanceOptionsMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeOrderableDBInstanceOptions</a> action. ",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> . "
        },
        "OrderableDBInstanceOptions": {
          "$ref": "#/definitions/OrderableDBInstanceOptionsList",
          "description": "An <a>OrderableDBInstanceOption</a> structure containing information about orderable options for the DB instance."
        }
      },
      "type": "object"
    },
    "Parameter": {
      "description": "<p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>",
      "properties": {
        "AllowedValues": {
          "$ref": "#/definitions/String",
          "description": "Specifies the valid range of values for the parameter."
        },
        "ApplyMethod": {
          "$ref": "#/definitions/ApplyMethod",
          "description": "Indicates when to apply parameter updates."
        },
        "ApplyType": {
          "$ref": "#/definitions/String",
          "description": "Specifies the engine specific parameters type."
        },
        "DataType": {
          "$ref": "#/definitions/String",
          "description": "Specifies the valid data type for the parameter."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "Provides a description of the parameter."
        },
        "IsModifiable": {
          "$ref": "#/definitions/Boolean",
          "description": " Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. "
        },
        "MinimumEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The earliest engine version to which the parameter can apply."
        },
        "ParameterName": {
          "$ref": "#/definitions/String",
          "description": "Specifies the name of the parameter."
        },
        "ParameterValue": {
          "$ref": "#/definitions/String",
          "description": "Specifies the value of the parameter."
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "Indicates the source of the parameter value."
        }
      },
      "type": "object"
    },
    "ParametersList": {
      "items": {
        "$ref": "#/definitions/Parameter"
      },
      "type": "array"
    },
    "PendingMaintenanceAction": {
      "description": "Provides information about a pending maintenance action for a resource.",
      "properties": {
        "Action": {
          "$ref": "#/definitions/String",
          "description": "The type of pending maintenance action that is available for the resource."
        },
        "AutoAppliedAfterDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date of the maintenance window when the action will be applied. The maintenance action will be applied to the resource during its first maintenance window after this date. If this date is specified, any <code>next-maintenance</code> opt-in requests are ignored."
        },
        "CurrentApplyDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The effective date when the pending maintenance action will be applied to the resource. This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a> API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>. This value is blank if an opt-in request has not been received and nothing has been specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description providing more detail about the maintenance action."
        },
        "ForcedApplyDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date when the maintenance action will be automatically applied. The maintenance action will be applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any <code>immediate</code> opt-in requests are ignored."
        },
        "OptInStatus": {
          "$ref": "#/definitions/String",
          "description": "Indicates the type of opt-in request that has been received for the resource."
        }
      },
      "type": "object"
    },
    "PendingMaintenanceActionDetails": {
      "items": {
        "$ref": "#/definitions/PendingMaintenanceAction"
      },
      "type": "array"
    },
    "PendingMaintenanceActions": {
      "items": {
        "$ref": "#/definitions/ResourcePendingMaintenanceActions"
      },
      "type": "array"
    },
    "PendingMaintenanceActionsMessage": {
      "description": "Data returned from the <b>DescribePendingMaintenanceActions</b> action.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to a number of records specified by <code>MaxRecords</code>. "
        },
        "PendingMaintenanceActions": {
          "$ref": "#/definitions/PendingMaintenanceActions",
          "description": "A list of the pending maintenance actions for the resource."
        }
      },
      "type": "object"
    },
    "PendingModifiedValues": {
      "description": " This data type is used as a response element in the <a>ModifyDBInstance</a> action. ",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": " Contains the new <code>AllocatedStorage</code> size for the DB instance that will be applied or is in progress. "
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the pending number of days for which automated backups are retained."
        },
        "CACertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the identifier of the CA certificate for the DB instance."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": " Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied or is in progress. "
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": " Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will be applied or is in progress. "
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The new DB subnet group for the DB instance. "
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "Indicates the database engine version."
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the new Provisioned IOPS value for the DB instance that will be applied or is being applied."
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "<p>The license model for the DB instance.</p> <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "Contains the pending or in-progress change of the master credentials for the DB instance."
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "Specifies the pending port for the DB instance."
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "Specifies the storage type to be associated with the DB instance."
        }
      },
      "type": "object"
    },
    "PointInTimeRestoreNotEnabledFault": {
      "description": " <i>SourceDBInstanceIdentifier</i> refers to a DB instance with <i>BackupRetentionPeriod</i> equal to 0. ",
      "properties": {},
      "type": "object"
    },
    "PromoteReadReplicaDBClusterMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the DB cluster Read Replica to promote. This parameter is not case-sensitive. </p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p>"
        }
      },
      "required": [
        "DBClusterIdentifier"
      ],
      "type": "object"
    },
    "PromoteReadReplicaDBClusterResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "PromoteReadReplicaMessage": {
      "description": "<p/>",
      "properties": {
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 0 to 8</p> </li> </ul>"
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for an existing Read Replica DB instance</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p> The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter. </p> <p> Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Times should be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "PromoteReadReplicaResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "ProvisionedIopsNotAvailableInAZFault": {
      "description": "Provisioned IOPS not available in the specified Availability Zone.",
      "properties": {},
      "type": "object"
    },
    "PurchaseReservedDBInstancesOfferingMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceCount": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of instances to reserve.</p> <p>Default: <code>1</code> </p>"
        },
        "ReservedDBInstanceId": {
          "$ref": "#/definitions/String",
          "description": "<p>Customer-specified identifier to track this reservation.</p> <p>Example: myreservationID</p>"
        },
        "ReservedDBInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the Reserved DB instance offering to purchase.</p> <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        }
      },
      "required": [
        "ReservedDBInstancesOfferingId"
      ],
      "type": "object"
    },
    "PurchaseReservedDBInstancesOfferingResult": {
      "properties": {
        "ReservedDBInstance": {
          "$ref": "#/definitions/ReservedDBInstance"
        }
      },
      "type": "object"
    },
    "ReadReplicaDBClusterIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ReadReplicaDBInstanceIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ReadReplicaIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "RebootDBInstanceMessage": {
      "description": "<p/>",
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "ForceFailover": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p> When <code>true</code>, the reboot will be conducted through a MultiAZ failover. </p> <p>Constraint: You cannot specify <code>true</code> if the instance is not configured for MultiAZ.</p>"
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "RebootDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "RecurringCharge": {
      "description": " This data type is used as a response element in the <a>DescribeReservedDBInstances</a> and <a>DescribeReservedDBInstancesOfferings</a> actions. ",
      "properties": {
        "RecurringChargeAmount": {
          "$ref": "#/definitions/Double",
          "description": "The amount of the recurring charge."
        },
        "RecurringChargeFrequency": {
          "$ref": "#/definitions/String",
          "description": "The frequency of the recurring charge."
        }
      },
      "type": "object"
    },
    "RecurringChargeList": {
      "items": {
        "$ref": "#/definitions/RecurringCharge"
      },
      "type": "array"
    },
    "RemoveRoleFromDBClusterMessage": {
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster to disassociate the IAM role from."
        },
        "RoleArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example <code>arn:aws:iam::123456789012:role/AuroraAccessRole</code>."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "RoleArn"
      ],
      "type": "object"
    },
    "RemoveSourceIdentifierFromSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": " The source identifier to be removed from the subscription, such as the <b>DB instance identifier</b> for a DB instance or the name of a security group. "
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the RDS event notification subscription you want to remove a source identifier from."
        }
      },
      "required": [
        "SubscriptionName",
        "SourceIdentifier"
      ],
      "type": "object"
    },
    "RemoveSourceIdentifierFromSubscriptionResult": {
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription"
        }
      },
      "type": "object"
    },
    "RemoveTagsFromResourceMessage": {
      "description": "<p/>",
      "properties": {
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "The Amazon RDS resource the tags will be removed from. This value is an Amazon Resource Name (ARN). For information about creating an ARN, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing\"> Constructing an RDS Amazon Resource Name (ARN)</a>."
        },
        "TagKeys": {
          "$ref": "#/definitions/KeyList",
          "description": "The tag key (name) of the tag to be removed."
        }
      },
      "required": [
        "ResourceName",
        "TagKeys"
      ],
      "type": "object"
    },
    "ReservedDBInstance": {
      "description": " This data type is used as a response element in the <a>DescribeReservedDBInstances</a> and <a>PurchaseReservedDBInstancesOffering</a> actions. ",
      "properties": {
        "CurrencyCode": {
          "$ref": "#/definitions/String",
          "description": "The currency code for the reserved DB instance."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class for the reserved DB instance."
        },
        "DBInstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of reserved DB instances."
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the reservation in seconds."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price charged for this reserved DB instance."
        },
        "MultiAZ": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates if the reservation applies to Multi-AZ deployments."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "The offering type of this reserved DB instance."
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the reserved DB instance."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargeList",
          "description": "The recurring price charged to run this reserved DB instance."
        },
        "ReservedDBInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the reserved DB instance."
        },
        "ReservedDBInstanceId": {
          "$ref": "#/definitions/String",
          "description": "The unique identifier for the reservation."
        },
        "ReservedDBInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering identifier."
        },
        "StartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The time the reservation started."
        },
        "State": {
          "$ref": "#/definitions/String",
          "description": "The state of the reserved DB instance."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Double",
          "description": "The hourly price charged for this reserved DB instance."
        }
      },
      "type": "object"
    },
    "ReservedDBInstanceAlreadyExistsFault": {
      "description": "User already has a reservation with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "ReservedDBInstanceList": {
      "items": {
        "$ref": "#/definitions/ReservedDBInstance"
      },
      "type": "array"
    },
    "ReservedDBInstanceMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeReservedDBInstances</a> action. ",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReservedDBInstances": {
          "$ref": "#/definitions/ReservedDBInstanceList",
          "description": "A list of reserved DB instances."
        }
      },
      "type": "object"
    },
    "ReservedDBInstanceNotFoundFault": {
      "description": "The specified reserved DB Instance not found.",
      "properties": {},
      "type": "object"
    },
    "ReservedDBInstanceQuotaExceededFault": {
      "description": "Request would exceed the user's DB Instance quota.",
      "properties": {},
      "type": "object"
    },
    "ReservedDBInstancesOffering": {
      "description": " This data type is used as a response element in the <a>DescribeReservedDBInstancesOfferings</a> action. ",
      "properties": {
        "CurrencyCode": {
          "$ref": "#/definitions/String",
          "description": "The currency code for the reserved DB instance offering."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "The DB instance class for the reserved DB instance."
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the offering in seconds."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price charged for this offering."
        },
        "MultiAZ": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates if the offering applies to Multi-AZ deployments."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "The offering type."
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The database engine used by the offering."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargeList",
          "description": "The recurring price charged to run this reserved DB instance."
        },
        "ReservedDBInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering identifier."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Double",
          "description": "The hourly price charged for this offering."
        }
      },
      "type": "object"
    },
    "ReservedDBInstancesOfferingList": {
      "items": {
        "$ref": "#/definitions/ReservedDBInstancesOffering"
      },
      "type": "array"
    },
    "ReservedDBInstancesOfferingMessage": {
      "description": " Contains the result of a successful invocation of the <a>DescribeReservedDBInstancesOfferings</a> action. ",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReservedDBInstancesOfferings": {
          "$ref": "#/definitions/ReservedDBInstancesOfferingList",
          "description": "A list of reserved DB instance offerings."
        }
      },
      "type": "object"
    },
    "ReservedDBInstancesOfferingNotFoundFault": {
      "description": "Specified offering does not exist.",
      "properties": {},
      "type": "object"
    },
    "ResetDBClusterParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB cluster parameter group to reset."
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "A list of parameter names in the DB cluster parameter group to reset to the default values. You cannot use this parameter if the <code>ResetAllParameters</code> parameter is set to <code>true</code>."
        },
        "ResetAllParameters": {
          "$ref": "#/definitions/Boolean",
          "description": "A value that is set to <code>true</code> to reset all parameters in the DB cluster parameter group to their default values, and <code>false</code> otherwise. You cannot use this parameter if there is a list of parameter names specified for the <code>Parameters</code> parameter."
        }
      },
      "required": [
        "DBClusterParameterGroupName"
      ],
      "type": "object"
    },
    "ResetDBParameterGroupMessage": {
      "description": "<p/>",
      "properties": {
        "DBParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "<p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request.</p> <p> <b>MySQL</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>MariaDB</b> </p> <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code> </p> <p>You can use the immediate value with dynamic parameters only. You can use the <code>pending-reboot</code> value for both dynamic and static parameters, and changes are applied when DB instance reboots.</p> <p> <b>Oracle</b> </p> <p>Valid Values (for Apply method): <code>pending-reboot</code> </p>"
        },
        "ResetAllParameters": {
          "$ref": "#/definitions/Boolean",
          "description": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters in the DB parameter group to default values. </p> <p>Default: <code>true</code> </p>"
        }
      },
      "required": [
        "DBParameterGroupName"
      ],
      "type": "object"
    },
    "ResourceNotFoundFault": {
      "description": "The specified resource ID was not found.",
      "properties": {},
      "type": "object"
    },
    "ResourcePendingMaintenanceActions": {
      "description": "Describes the pending maintenance actions for a resource.",
      "properties": {
        "PendingMaintenanceActionDetails": {
          "$ref": "#/definitions/PendingMaintenanceActionDetails",
          "description": "A list that provides details about the pending maintenance actions for the resource."
        },
        "ResourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The ARN of the resource that has pending maintenance actions."
        }
      },
      "type": "object"
    },
    "RestoreDBClusterFromS3Message": {
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "A list of EC2 Availability Zones that instances in the restored DB cluster can be created in."
        },
        "BackupRetentionPeriod": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p> </li> </ul>"
        },
        "CharacterSetName": {
          "$ref": "#/definitions/String",
          "description": "A value that indicates that the restored DB cluster should be associated with the specified CharacterSet."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster to create from the source data in the S3 bucket. This parameter is isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>my-cluster1</code> </p>"
        },
        "DBClusterParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster parameter group to associate with the restored DB cluster. If this argument is omitted, <code>default.aurora5.6</code> will be used. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A DB subnet group to associate with the restored DB cluster.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The database name for the restored DB cluster."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A Boolean value that is true to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the database engine to be used for the restored DB cluster.</p> <p>Valid Values: <code>aurora</code> </p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version number of the database engine to use.</p> <p> <b>Aurora</b> </p> <p>Example: <code>5.6.10a</code> </p>"
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The KMS key identifier for an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KM encryption key.</p> <p>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS Region.</p>"
        },
        "MasterUserPassword": {
          "$ref": "#/definitions/String",
          "description": "<p>The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\".</p> <p>Constraints: Must contain from 8 to 41 characters.</p>"
        },
        "MasterUsername": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the master user for the restored DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 alphanumeric characters.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the chosen database engine.</p> </li> </ul>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A value that indicates that the restored DB cluster should be associated with the specified option group.</p> <p>Permanent options cannot be removed from an option group. An option group cannot be removed from a DB cluster once it is associated with a DB cluster.</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the instances in the restored DB cluster accept connections.</p> <p> Default: <code>3306</code> </p>"
        },
        "PreferredBackupWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Times should be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region, occurring on a random day of the week. To see the time blocks available, see <a href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html\"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        },
        "S3BucketName": {
          "$ref": "#/definitions/String",
          "description": "The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster."
        },
        "S3IngestionRoleArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon RDS to access the Amazon S3 bucket on your behalf."
        },
        "S3Prefix": {
          "$ref": "#/definitions/String",
          "description": "The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster. If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon Aurora DB cluster is created by using all of the files in the Amazon S3 bucket."
        },
        "SourceEngine": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the database engine that was backed up to create the files stored in the Amazon S3 bucket. </p> <p>Valid values: <code>mysql</code> </p>"
        },
        "SourceEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version of the database that the backup files were created from.</p> <p>MySQL version 5.5 and 5.6 are supported. </p> <p>Example: <code>5.6.22</code> </p>"
        },
        "StorageEncrypted": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Specifies whether the restored DB cluster is encrypted."
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of EC2 VPC security groups to associate with the restored DB cluster."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "Engine",
        "MasterUsername",
        "MasterUserPassword",
        "SourceEngine",
        "SourceEngineVersion",
        "S3BucketName",
        "S3IngestionRoleArn"
      ],
      "type": "object"
    },
    "RestoreDBClusterFromS3Result": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "RestoreDBClusterFromSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "Provides the list of EC2 Availability Zones that instances in the restored DB cluster can be created in."
        },
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The database name for the restored DB cluster."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A Boolean value that is true to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version of the database engine to use for the new DB cluster."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option group to use for the restored DB cluster."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>"
        },
        "SnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags to be assigned to the restored DB cluster."
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of VPC security groups that the new DB cluster will belong to."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "SnapshotIdentifier",
        "Engine"
      ],
      "type": "object"
    },
    "RestoreDBClusterFromSnapshotResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "RestoreDBClusterToPointInTimeMessage": {
      "description": "<p/>",
      "properties": {
        "DBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the new DB cluster to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB subnet group name to use for the new DB cluster.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A Boolean value that is true to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p> <p>Default: <code>false</code> </p>"
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "<p>The KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same AWS account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key that is different than the KMS key used to encrypt the source DB cluster. The new DB cluster will be encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.</p> <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p> <ul> <li> <p>If the DB cluster is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the source DB cluster.</p> </li> <li> <p>If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.</p> </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted, then the restore request is rejected.</p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the option group for the new DB cluster."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB cluster.</p>"
        },
        "RestoreToTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p>The date and time to restore the DB cluster to.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided</p> </li> <li> <p>Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true</p> </li> <li> <p>Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code> </p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code> </p>"
        },
        "RestoreType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of restore to be performed. You can specify one of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The new DB cluster is restored as a full copy of the source DB cluster.</p> </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints: You cannot specify <code>copy-on-write</code> if the engine version of the source DB cluster is earlier than 1.11.</p> <p>If you don't specify a <code>RestoreType</code> value, then the new DB cluster is restored as a full copy of the source DB cluster.</p>"
        },
        "SourceDBClusterIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the source DB cluster from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing database instance</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "UseLatestRestorableTime": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>A value that is set to <code>true</code> to restore the DB cluster to the latest restorable backup time, and <code>false</code> otherwise. </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.</p>"
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": "A list of VPC security groups that the new DB cluster belongs to."
        }
      },
      "required": [
        "DBClusterIdentifier",
        "SourceDBClusterIdentifier"
      ],
      "type": "object"
    },
    "RestoreDBClusterToPointInTimeResult": {
      "properties": {
        "DBCluster": {
          "$ref": "#/definitions/DBCluster"
        }
      },
      "type": "object"
    },
    "RestoreDBInstanceFromDBSnapshotMessage": {
      "description": "<p/>",
      "properties": {
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Indicates that minor version upgrades will be applied automatically to the DB instance during the maintenance window."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The EC2 Availability Zone that the database instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p> <p>Example: <code>us-east-1a</code> </p>"
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the restored DB instance to snapshots of the DB instance; otherwise false. The default is false."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the Amazon RDS DB instance.</p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge | db.m3.medium | db.m3.large | db.m3.xlarge | db.m3.2xlarge | db.m4.large | db.m4.xlarge | db.m4.2xlarge | db.m4.4xlarge | db.m4.10xlarge | db.r3.large | db.r3.xlarge | db.r3.2xlarge | db.r3.4xlarge | db.r3.8xlarge | db.t2.micro | db.t2.small | db.t2.medium | db.t2.large</code> </p>"
        },
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>"
        },
        "DBName": {
          "$ref": "#/definitions/String",
          "description": "<p>The database name for the restored DB instance.</p> <note> <p>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines.</p> </note>"
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the DB snapshot to restore from.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB subnet group name to use for the new instance.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "Domain": {
          "$ref": "#/definitions/String",
          "description": "Specify the Active Directory Domain to restore the instance in."
        },
        "DomainIAMRoleName": {
          "$ref": "#/definitions/String",
          "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts; otherwise false.</p> <p>You can enable IAM database authentication for the following database engines</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher.</p> </li> </ul> <p>Default: <code>false</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The database engine to use for the new instance.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source. You can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</p> <p> Valid Values: <code>MySQL</code> | <code>mariadb</code> | <code>oracle-se1</code> | <code>oracle-se</code> | <code>oracle-ee</code> | <code>sqlserver-ee</code> | <code>sqlserver-se</code> | <code>sqlserver-ex</code> | <code>sqlserver-web</code> | <code>postgres</code> | <code>aurora</code> </p>"
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter is not specified, the IOPS value will be taken from the backup. If this parameter is set to 0, the new instance will be converted to a non-PIOPS instance, which will take additional time, though your DB instance will be available for connections before the conversion starts.</p> <p>Constraints: Must be an integer greater than 1000.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine is not supported.</p>"
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "<p>License model information for the restored DB instance.</p> <p>Default: Same as source.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies if the DB instance is a Multi-AZ deployment.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the database accepts connections.</p> <p>Default: The same port as the original DB instance</p> <p>Constraints: Value must be <code>1150-65535</code> </p>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case.</p> <ul> <li> <p> <b>Default VPC:</b> true</p> </li> <li> <p> <b>VPC:</b> false</p> </li> </ul> <p>If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private.</p>"
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>standard</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the Key Store with which to associate the instance for TDE encryption."
        },
        "TdeCredentialPassword": {
          "$ref": "#/definitions/String",
          "description": "The password for the given ARN from the Key Store in order to access the device."
        }
      },
      "required": [
        "DBInstanceIdentifier",
        "DBSnapshotIdentifier"
      ],
      "type": "object"
    },
    "RestoreDBInstanceFromDBSnapshotResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "RestoreDBInstanceToPointInTimeMessage": {
      "description": "<p/>",
      "properties": {
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "Indicates that minor version upgrades will be applied automatically to the DB instance during the maintenance window."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The EC2 Availability Zone that the database instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to true.</p> <p>Example: <code>us-east-1a</code> </p>"
        },
        "CopyTagsToSnapshot": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "True to copy all tags from the restored DB instance to snapshots of the DB instance; otherwise false. The default is false."
        },
        "DBInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the Amazon RDS DB instance.</p> <p>Valid Values: <code>db.t1.micro | db.m1.small | db.m1.medium | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge | db.m3.medium | db.m3.large | db.m3.xlarge | db.m3.2xlarge | db.m4.large | db.m4.xlarge | db.m4.2xlarge | db.m4.4xlarge | db.m4.10xlarge | db.r3.large | db.r3.xlarge | db.r3.2xlarge | db.r3.4xlarge | db.r3.8xlarge | db.t2.micro | db.t2.small | db.t2.medium | db.t2.large</code> </p> <p>Default: The same DBInstanceClass as the original DB instance.</p>"
        },
        "DBName": {
          "$ref": "#/definitions/String",
          "description": "<p>The database name for the restored DB instance.</p> <note> <p>This parameter is not used for the MySQL or MariaDB engines.</p> </note>"
        },
        "DBSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The DB subnet group name to use for the new instance.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, underscores, spaces, or hyphens. Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "Domain": {
          "$ref": "#/definitions/String",
          "description": "Specify the Active Directory Domain to restore the instance in."
        },
        "DomainIAMRoleName": {
          "$ref": "#/definitions/String",
          "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service."
        },
        "EnableIAMDatabaseAuthentication": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>True to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts; otherwise false.</p> <p> You can enable IAM database authentication for the following database engines</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher.</p> </li> </ul> <p>Default: <code>false</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The database engine to use for the new instance.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p> Valid Values: <code>MySQL</code> | <code>mariadb</code> | <code>oracle-se1</code> | <code>oracle-se</code> | <code>oracle-ee</code> | <code>sqlserver-ee</code> | <code>sqlserver-se</code> | <code>sqlserver-ex</code> | <code>sqlserver-web</code> | <code>postgres</code> | <code>aurora</code> </p>"
        },
        "Iops": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.</p> <p>Constraints: Must be an integer greater than 1000.</p> <p> <b>SQL Server</b> </p> <p>Setting the IOPS value for the SQL Server database engine is not supported.</p>"
        },
        "LicenseModel": {
          "$ref": "#/definitions/String",
          "description": "<p>License model information for the restored DB instance.</p> <p>Default: Same as source.</p> <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code> </p>"
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies if the DB instance is a Multi-AZ deployment.</p> <p>Constraint: You cannot specify the AvailabilityZone parameter if the MultiAZ parameter is set to <code>true</code>.</p>"
        },
        "OptionGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the option group to be used for the restored DB instance.</p> <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, cannot be removed from an option group, and that option group cannot be removed from a DB instance once it is associated with a DB instance</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The port number on which the database accepts connections.</p> <p>Constraints: Value must be <code>1150-65535</code> </p> <p>Default: The same port as the original DB instance.</p>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether a VPC has been requested or not. The following list shows the default behavior in each case.</p> <ul> <li> <p> <b>Default VPC:</b>true</p> </li> <li> <p> <b>VPC:</b>false</p> </li> </ul> <p>If no DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be publicly accessible. If a specific DB subnet group has been specified as part of the request and the PubliclyAccessible value has not been set, the DB instance will be private.</p>"
        },
        "RestoreTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p>The date and time to restore from.</p> <p>Valid Values: Value must be a time in Universal Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the DB instance</p> </li> <li> <p>Cannot be specified if UseLatestRestorableTime parameter is true</p> </li> </ul> <p>Example: <code>2009-09-07T23:45:00Z</code> </p>"
        },
        "SourceDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the source DB instance from which to restore.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier of an existing database instance</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the storage type to be associated with the DB instance.</p> <p> Valid values: <code>standard | gp2 | io1</code> </p> <p> If you specify <code>io1</code>, you must also include a value for the <code>Iops</code> parameter. </p> <p> Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>standard</code> </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList"
        },
        "TargetDBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the new database instance to be created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "TdeCredentialArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN from the Key Store with which to associate the instance for TDE encryption."
        },
        "TdeCredentialPassword": {
          "$ref": "#/definitions/String",
          "description": "The password for the given ARN from the Key Store in order to access the device."
        },
        "UseLatestRestorableTime": {
          "$ref": "#/definitions/Boolean",
          "description": "<p> Specifies whether (<code>true</code>) or not (<code>false</code>) the DB instance is restored from the latest backup time. </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if RestoreTime parameter is provided.</p>"
        }
      },
      "required": [
        "SourceDBInstanceIdentifier",
        "TargetDBInstanceIdentifier"
      ],
      "type": "object"
    },
    "RestoreDBInstanceToPointInTimeResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "RevokeDBSecurityGroupIngressMessage": {
      "description": "<p/>",
      "properties": {
        "CIDRIP": {
          "$ref": "#/definitions/String",
          "description": " The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. "
        },
        "DBSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DB security group to revoke ingress from."
        },
        "EC2SecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": " The id of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": " The name of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": " The AWS Account Number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The AWS Access Key ID is not an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided. "
        }
      },
      "required": [
        "DBSecurityGroupName"
      ],
      "type": "object"
    },
    "RevokeDBSecurityGroupIngressResult": {
      "properties": {
        "DBSecurityGroup": {
          "$ref": "#/definitions/DBSecurityGroup"
        }
      },
      "type": "object"
    },
    "SNSInvalidTopicFault": {
      "description": "SNS has responded that there is a problem with the SND topic specified.",
      "properties": {},
      "type": "object"
    },
    "SNSNoAuthorizationFault": {
      "description": "You do not have permission to publish to the SNS topic ARN.",
      "properties": {},
      "type": "object"
    },
    "SNSTopicArnNotFoundFault": {
      "description": "The SNS topic ARN does not exist.",
      "properties": {},
      "type": "object"
    },
    "SharedSnapshotQuotaExceededFault": {
      "description": "You have exceeded the maximum number of accounts that you can share a manual DB snapshot with.",
      "properties": {},
      "type": "object"
    },
    "SnapshotQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed number of DB snapshots.",
      "properties": {},
      "type": "object"
    },
    "SourceIdsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SourceNotFoundFault": {
      "description": "The requested source could not be found.",
      "properties": {},
      "type": "object"
    },
    "SourceRegion": {
      "description": "Contains an AWS Region name as the result of a successful call to the <a>DescribeSourceRegions</a> action.",
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/String",
          "description": "The endpoint for the source AWS Region endpoint."
        },
        "RegionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the source AWS Region."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the source AWS Region."
        }
      },
      "type": "object"
    },
    "SourceRegionList": {
      "items": {
        "$ref": "#/definitions/SourceRegion"
      },
      "type": "array"
    },
    "SourceRegionMessage": {
      "description": "Contains the result of a successful invocation of the <a>DescribeSourceRegions</a> action.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "SourceRegions": {
          "$ref": "#/definitions/SourceRegionList",
          "description": "A list of SourceRegion instances that contains each source AWS Region that the current AWS Region can get a Read Replica or a DB snapshot from."
        }
      },
      "type": "object"
    },
    "SourceType": {
      "enum": [
        "db-instance",
        "db-parameter-group",
        "db-security-group",
        "db-snapshot",
        "db-cluster",
        "db-cluster-snapshot"
      ],
      "type": "string"
    },
    "StartDBInstanceMessage": {
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": " The user-supplied instance identifier. "
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "StartDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "StopDBInstanceMessage": {
      "properties": {
        "DBInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": " The user-supplied instance identifier. "
        },
        "DBSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": " The user-supplied instance identifier of the DB Snapshot created immediately before the DB instance is stopped. "
        }
      },
      "required": [
        "DBInstanceIdentifier"
      ],
      "type": "object"
    },
    "StopDBInstanceResult": {
      "properties": {
        "DBInstance": {
          "$ref": "#/definitions/DBInstance"
        }
      },
      "type": "object"
    },
    "StorageQuotaExceededFault": {
      "description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
      "properties": {},
      "type": "object"
    },
    "StorageTypeNotSupportedFault": {
      "description": " <i>StorageType</i> specified cannot be associated with the DB Instance. ",
      "properties": {},
      "type": "object"
    },
    "String": {
      "type": "string"
    },
    "Subnet": {
      "description": " This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. ",
      "properties": {
        "SubnetAvailabilityZone": {
          "$ref": "#/definitions/AvailabilityZone"
        },
        "SubnetIdentifier": {
          "$ref": "#/definitions/String",
          "description": "Specifies the identifier of the subnet."
        },
        "SubnetStatus": {
          "$ref": "#/definitions/String",
          "description": "Specifies the status of the subnet."
        }
      },
      "type": "object"
    },
    "SubnetAlreadyInUse": {
      "description": "The DB subnet is already in use in the Availability Zone.",
      "properties": {},
      "type": "object"
    },
    "SubnetIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SubnetList": {
      "items": {
        "$ref": "#/definitions/Subnet"
      },
      "type": "array"
    },
    "SubscriptionAlreadyExistFault": {
      "description": "The supplied subscription name already exists.",
      "properties": {},
      "type": "object"
    },
    "SubscriptionCategoryNotFoundFault": {
      "description": "The supplied category does not exist.",
      "properties": {},
      "type": "object"
    },
    "SubscriptionNotFoundFault": {
      "description": "The subscription name does not exist.",
      "properties": {},
      "type": "object"
    },
    "SupportedCharacterSetsList": {
      "items": {
        "$ref": "#/definitions/CharacterSet"
      },
      "type": "array"
    },
    "SupportedTimezonesList": {
      "items": {
        "$ref": "#/definitions/Timezone"
      },
      "type": "array"
    },
    "TStamp": {
      "format": "date-time",
      "type": "string"
    },
    "Tag": {
      "description": "Metadata assigned to an Amazon RDS resource consisting of a key-value pair.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String",
          "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"rds:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        }
      },
      "type": "object"
    },
    "TagList": {
      "description": "A list of tags.",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagListMessage": {
      "description": "<p/>",
      "properties": {
        "TagList": {
          "$ref": "#/definitions/TagList",
          "description": "List of tags returned by the ListTagsForResource operation."
        }
      },
      "type": "object"
    },
    "Timezone": {
      "description": "A time zone associated with a <a>DBInstance</a> or a <a>DBSnapshot</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, the <a>DescribeDBSnapshots</a>, and the <a>DescribeDBEngineVersions</a> actions. ",
      "properties": {
        "TimezoneName": {
          "$ref": "#/definitions/String",
          "description": "The name of the time zone."
        }
      },
      "type": "object"
    },
    "UpgradeTarget": {
      "description": "The version of the database engine that a DB instance can be upgraded to.",
      "properties": {
        "AutoUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "A value that indicates whether the target version will be applied to any source DB instances that have AutoMinorVersionUpgrade set to true."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The version of the database engine that a DB instance can be upgraded to."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the upgrade target database engine."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version number of the upgrade target database engine."
        },
        "IsMajorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "A value that indicates whether a database engine will be upgraded to a major version."
        }
      },
      "type": "object"
    },
    "ValidUpgradeTargetList": {
      "items": {
        "$ref": "#/definitions/UpgradeTarget"
      },
      "type": "array"
    },
    "VpcSecurityGroupIdList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "VpcSecurityGroupMembership": {
      "description": "This data type is used as a response element for queries on VPC security group membership.",
      "properties": {
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the VPC security group."
        },
        "VpcSecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": "The name of the VPC security group."
        }
      },
      "type": "object"
    },
    "VpcSecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/VpcSecurityGroupMembership"
      },
      "type": "array"
    }
  }
}
