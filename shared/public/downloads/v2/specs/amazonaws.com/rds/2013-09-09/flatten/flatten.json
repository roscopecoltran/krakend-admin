{
	"basePath": "/",
	"consumes.length": 0,
	"definitions.AddSourceIdentifierToSubscriptionMessage.properties.SourceIdentifier.$ref": "#/definitions/String",
	"definitions.AddSourceIdentifierToSubscriptionMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.AddSourceIdentifierToSubscriptionMessage.required.length": 2,
	"definitions.AddSourceIdentifierToSubscriptionMessage.required[0]": "SubscriptionName",
	"definitions.AddSourceIdentifierToSubscriptionMessage.required[1]": "SourceIdentifier",
	"definitions.AddSourceIdentifierToSubscriptionMessage.type": "object",
	"definitions.AddSourceIdentifierToSubscriptionResult.properties.EventSubscription.$ref": "#/definitions/EventSubscription",
	"definitions.AddSourceIdentifierToSubscriptionResult.type": "object",
	"definitions.AddTagsToResourceMessage.properties.ResourceName.$ref": "#/definitions/String",
	"definitions.AddTagsToResourceMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.AddTagsToResourceMessage.required.length": 2,
	"definitions.AddTagsToResourceMessage.required[0]": "ResourceName",
	"definitions.AddTagsToResourceMessage.required[1]": "Tags",
	"definitions.AddTagsToResourceMessage.type": "object",
	"definitions.ApplyMethod.enum.length": 2,
	"definitions.ApplyMethod.enum[0]": "immediate",
	"definitions.ApplyMethod.enum[1]": "pending-reboot",
	"definitions.ApplyMethod.type": "string",
	"definitions.AuthorizationAlreadyExistsFault.description": "The specified CIDRIP or EC2 security group is already authorized for the specified DB security group.",
	"definitions.AuthorizationAlreadyExistsFault.type": "object",
	"definitions.AuthorizationNotFoundFault.description": "\u003cp\u003eSpecified CIDRIP or EC2 security group is not authorized for the specified DB security group.\u003c/p\u003e \u003cp\u003eRDS may not also be authorized via IAM to perform necessary actions on your behalf.\u003c/p\u003e",
	"definitions.AuthorizationNotFoundFault.type": "object",
	"definitions.AuthorizationQuotaExceededFault.description": "DB security group authorization quota has been reached.",
	"definitions.AuthorizationQuotaExceededFault.type": "object",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.properties.CIDRIP.$ref": "#/definitions/String",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupId.$ref": "#/definitions/String",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupName.$ref": "#/definitions/String",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupOwnerId.$ref": "#/definitions/String",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.required.length": 1,
	"definitions.AuthorizeDBSecurityGroupIngressMessage.required[0]": "DBSecurityGroupName",
	"definitions.AuthorizeDBSecurityGroupIngressMessage.type": "object",
	"definitions.AuthorizeDBSecurityGroupIngressResult.properties.DBSecurityGroup.$ref": "#/definitions/DBSecurityGroup",
	"definitions.AuthorizeDBSecurityGroupIngressResult.type": "object",
	"definitions.AvailabilityZone.properties.Name.$ref": "#/definitions/String",
	"definitions.AvailabilityZone.properties.ProvisionedIopsCapable.$ref": "#/definitions/Boolean",
	"definitions.AvailabilityZone.type": "object",
	"definitions.AvailabilityZoneList.items.$ref": "#/definitions/AvailabilityZone",
	"definitions.AvailabilityZoneList.type": "array",
	"definitions.Boolean.type": "boolean",
	"definitions.BooleanOptional.type": "boolean",
	"definitions.CharacterSet.properties.CharacterSetDescription.$ref": "#/definitions/String",
	"definitions.CharacterSet.properties.CharacterSetName.$ref": "#/definitions/String",
	"definitions.CharacterSet.type": "object",
	"definitions.CopyDBSnapshotMessage.properties.SourceDBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.CopyDBSnapshotMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CopyDBSnapshotMessage.properties.TargetDBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.CopyDBSnapshotMessage.required.length": 2,
	"definitions.CopyDBSnapshotMessage.required[0]": "SourceDBSnapshotIdentifier",
	"definitions.CopyDBSnapshotMessage.required[1]": "TargetDBSnapshotIdentifier",
	"definitions.CopyDBSnapshotMessage.type": "object",
	"definitions.CopyDBSnapshotResult.properties.DBSnapshot.$ref": "#/definitions/DBSnapshot",
	"definitions.CopyDBSnapshotResult.type": "object",
	"definitions.CreateDBInstanceMessage.properties.AllocatedStorage.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceMessage.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateDBInstanceMessage.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.BackupRetentionPeriod.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceMessage.properties.CharacterSetName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.DBName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.DBSecurityGroups.$ref": "#/definitions/DBSecurityGroupNameList",
	"definitions.CreateDBInstanceMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.Engine.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceMessage.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.MasterUserPassword.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.MasterUsername.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateDBInstanceMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceMessage.properties.PreferredBackupWindow.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.PreferredMaintenanceWindow.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceMessage.properties.PubliclyAccessible.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateDBInstanceMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBInstanceMessage.properties.VpcSecurityGroupIds.$ref": "#/definitions/VpcSecurityGroupIdList",
	"definitions.CreateDBInstanceMessage.required.length": 6,
	"definitions.CreateDBInstanceMessage.required[0]": "DBInstanceIdentifier",
	"definitions.CreateDBInstanceMessage.required[1]": "AllocatedStorage",
	"definitions.CreateDBInstanceMessage.required[2]": "DBInstanceClass",
	"definitions.CreateDBInstanceMessage.required[3]": "Engine",
	"definitions.CreateDBInstanceMessage.required[4]": "MasterUsername",
	"definitions.CreateDBInstanceMessage.required[5]": "MasterUserPassword",
	"definitions.CreateDBInstanceMessage.type": "object",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.PubliclyAccessible.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.SourceDBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.CreateDBInstanceReadReplicaMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBInstanceReadReplicaMessage.required.length": 2,
	"definitions.CreateDBInstanceReadReplicaMessage.required[0]": "DBInstanceIdentifier",
	"definitions.CreateDBInstanceReadReplicaMessage.required[1]": "SourceDBInstanceIdentifier",
	"definitions.CreateDBInstanceReadReplicaMessage.type": "object",
	"definitions.CreateDBInstanceReadReplicaResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.CreateDBInstanceReadReplicaResult.type": "object",
	"definitions.CreateDBInstanceResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.CreateDBInstanceResult.type": "object",
	"definitions.CreateDBParameterGroupMessage.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.CreateDBParameterGroupMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBParameterGroupMessage.properties.Description.$ref": "#/definitions/String",
	"definitions.CreateDBParameterGroupMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBParameterGroupMessage.required.length": 3,
	"definitions.CreateDBParameterGroupMessage.required[0]": "DBParameterGroupName",
	"definitions.CreateDBParameterGroupMessage.required[1]": "DBParameterGroupFamily",
	"definitions.CreateDBParameterGroupMessage.required[2]": "Description",
	"definitions.CreateDBParameterGroupMessage.type": "object",
	"definitions.CreateDBParameterGroupResult.properties.DBParameterGroup.$ref": "#/definitions/DBParameterGroup",
	"definitions.CreateDBParameterGroupResult.type": "object",
	"definitions.CreateDBSecurityGroupMessage.properties.DBSecurityGroupDescription.$ref": "#/definitions/String",
	"definitions.CreateDBSecurityGroupMessage.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBSecurityGroupMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBSecurityGroupMessage.required.length": 2,
	"definitions.CreateDBSecurityGroupMessage.required[0]": "DBSecurityGroupName",
	"definitions.CreateDBSecurityGroupMessage.required[1]": "DBSecurityGroupDescription",
	"definitions.CreateDBSecurityGroupMessage.type": "object",
	"definitions.CreateDBSecurityGroupResult.properties.DBSecurityGroup.$ref": "#/definitions/DBSecurityGroup",
	"definitions.CreateDBSecurityGroupResult.type": "object",
	"definitions.CreateDBSnapshotMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.CreateDBSnapshotMessage.properties.DBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.CreateDBSnapshotMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBSnapshotMessage.required.length": 2,
	"definitions.CreateDBSnapshotMessage.required[0]": "DBSnapshotIdentifier",
	"definitions.CreateDBSnapshotMessage.required[1]": "DBInstanceIdentifier",
	"definitions.CreateDBSnapshotMessage.type": "object",
	"definitions.CreateDBSnapshotResult.properties.DBSnapshot.$ref": "#/definitions/DBSnapshot",
	"definitions.CreateDBSnapshotResult.type": "object",
	"definitions.CreateDBSubnetGroupMessage.properties.DBSubnetGroupDescription.$ref": "#/definitions/String",
	"definitions.CreateDBSubnetGroupMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.CreateDBSubnetGroupMessage.properties.SubnetIds.$ref": "#/definitions/SubnetIdentifierList",
	"definitions.CreateDBSubnetGroupMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateDBSubnetGroupMessage.required.length": 3,
	"definitions.CreateDBSubnetGroupMessage.required[0]": "DBSubnetGroupName",
	"definitions.CreateDBSubnetGroupMessage.required[1]": "DBSubnetGroupDescription",
	"definitions.CreateDBSubnetGroupMessage.required[2]": "SubnetIds",
	"definitions.CreateDBSubnetGroupMessage.type": "object",
	"definitions.CreateDBSubnetGroupResult.properties.DBSubnetGroup.$ref": "#/definitions/DBSubnetGroup",
	"definitions.CreateDBSubnetGroupResult.type": "object",
	"definitions.CreateEventSubscriptionMessage.properties.Enabled.$ref": "#/definitions/BooleanOptional",
	"definitions.CreateEventSubscriptionMessage.properties.EventCategories.$ref": "#/definitions/EventCategoriesList",
	"definitions.CreateEventSubscriptionMessage.properties.SnsTopicArn.$ref": "#/definitions/String",
	"definitions.CreateEventSubscriptionMessage.properties.SourceIds.$ref": "#/definitions/SourceIdsList",
	"definitions.CreateEventSubscriptionMessage.properties.SourceType.$ref": "#/definitions/String",
	"definitions.CreateEventSubscriptionMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.CreateEventSubscriptionMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateEventSubscriptionMessage.required.length": 2,
	"definitions.CreateEventSubscriptionMessage.required[0]": "SubscriptionName",
	"definitions.CreateEventSubscriptionMessage.required[1]": "SnsTopicArn",
	"definitions.CreateEventSubscriptionMessage.type": "object",
	"definitions.CreateEventSubscriptionResult.properties.EventSubscription.$ref": "#/definitions/EventSubscription",
	"definitions.CreateEventSubscriptionResult.type": "object",
	"definitions.CreateOptionGroupMessage.properties.EngineName.$ref": "#/definitions/String",
	"definitions.CreateOptionGroupMessage.properties.MajorEngineVersion.$ref": "#/definitions/String",
	"definitions.CreateOptionGroupMessage.properties.OptionGroupDescription.$ref": "#/definitions/String",
	"definitions.CreateOptionGroupMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.CreateOptionGroupMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.CreateOptionGroupMessage.required.length": 4,
	"definitions.CreateOptionGroupMessage.required[0]": "OptionGroupName",
	"definitions.CreateOptionGroupMessage.required[1]": "EngineName",
	"definitions.CreateOptionGroupMessage.required[2]": "MajorEngineVersion",
	"definitions.CreateOptionGroupMessage.required[3]": "OptionGroupDescription",
	"definitions.CreateOptionGroupMessage.type": "object",
	"definitions.CreateOptionGroupResult.properties.OptionGroup.$ref": "#/definitions/OptionGroup",
	"definitions.CreateOptionGroupResult.type": "object",
	"definitions.DBEngineVersion.properties.DBEngineDescription.$ref": "#/definitions/String",
	"definitions.DBEngineVersion.properties.DBEngineVersionDescription.$ref": "#/definitions/String",
	"definitions.DBEngineVersion.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.DBEngineVersion.properties.DefaultCharacterSet.$ref": "#/definitions/CharacterSet",
	"definitions.DBEngineVersion.properties.Engine.$ref": "#/definitions/String",
	"definitions.DBEngineVersion.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.DBEngineVersion.properties.SupportedCharacterSets.$ref": "#/definitions/SupportedCharacterSetsList",
	"definitions.DBEngineVersion.type": "object",
	"definitions.DBEngineVersionList.items.$ref": "#/definitions/DBEngineVersion",
	"definitions.DBEngineVersionList.type": "array",
	"definitions.DBEngineVersionMessage.properties.DBEngineVersions.$ref": "#/definitions/DBEngineVersionList",
	"definitions.DBEngineVersionMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBEngineVersionMessage.type": "object",
	"definitions.DBInstance.properties.AllocatedStorage.$ref": "#/definitions/Integer",
	"definitions.DBInstance.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/Boolean",
	"definitions.DBInstance.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.BackupRetentionPeriod.$ref": "#/definitions/Integer",
	"definitions.DBInstance.properties.CharacterSetName.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.DBInstanceStatus.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.DBName.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.DBParameterGroups.$ref": "#/definitions/DBParameterGroupStatusList",
	"definitions.DBInstance.properties.DBSecurityGroups.$ref": "#/definitions/DBSecurityGroupMembershipList",
	"definitions.DBInstance.properties.DBSubnetGroup.$ref": "#/definitions/DBSubnetGroup",
	"definitions.DBInstance.properties.Endpoint.$ref": "#/definitions/Endpoint",
	"definitions.DBInstance.properties.Engine.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.InstanceCreateTime.$ref": "#/definitions/TStamp",
	"definitions.DBInstance.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.DBInstance.properties.LatestRestorableTime.$ref": "#/definitions/TStamp",
	"definitions.DBInstance.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.MasterUsername.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.MultiAZ.$ref": "#/definitions/Boolean",
	"definitions.DBInstance.properties.OptionGroupMemberships.$ref": "#/definitions/OptionGroupMembershipList",
	"definitions.DBInstance.properties.PendingModifiedValues.$ref": "#/definitions/PendingModifiedValues",
	"definitions.DBInstance.properties.PreferredBackupWindow.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.PreferredMaintenanceWindow.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.PubliclyAccessible.$ref": "#/definitions/Boolean",
	"definitions.DBInstance.properties.ReadReplicaDBInstanceIdentifiers.$ref": "#/definitions/ReadReplicaDBInstanceIdentifierList",
	"definitions.DBInstance.properties.ReadReplicaSourceDBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.SecondaryAvailabilityZone.$ref": "#/definitions/String",
	"definitions.DBInstance.properties.StatusInfos.$ref": "#/definitions/DBInstanceStatusInfoList",
	"definitions.DBInstance.properties.VpcSecurityGroups.$ref": "#/definitions/VpcSecurityGroupMembershipList",
	"definitions.DBInstance.type": "object",
	"definitions.DBInstanceAlreadyExistsFault.description": "User already has a DB instance with the given identifier.",
	"definitions.DBInstanceAlreadyExistsFault.type": "object",
	"definitions.DBInstanceList.items.$ref": "#/definitions/DBInstance",
	"definitions.DBInstanceList.type": "array",
	"definitions.DBInstanceMessage.properties.DBInstances.$ref": "#/definitions/DBInstanceList",
	"definitions.DBInstanceMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBInstanceMessage.type": "object",
	"definitions.DBInstanceNotFoundFault.description": " \u003ci\u003eDBInstanceIdentifier\u003c/i\u003e does not refer to an existing DB instance. ",
	"definitions.DBInstanceNotFoundFault.type": "object",
	"definitions.DBInstanceStatusInfo.properties.Message.$ref": "#/definitions/String",
	"definitions.DBInstanceStatusInfo.properties.Normal.$ref": "#/definitions/Boolean",
	"definitions.DBInstanceStatusInfo.properties.Status.$ref": "#/definitions/String",
	"definitions.DBInstanceStatusInfo.properties.StatusType.$ref": "#/definitions/String",
	"definitions.DBInstanceStatusInfo.type": "object",
	"definitions.DBInstanceStatusInfoList.items.$ref": "#/definitions/DBInstanceStatusInfo",
	"definitions.DBInstanceStatusInfoList.type": "array",
	"definitions.DBLogFileNotFoundFault.description": " \u003ci\u003eLogFileName\u003c/i\u003e does not refer to an existing DB log file.",
	"definitions.DBLogFileNotFoundFault.type": "object",
	"definitions.DBParameterGroup.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.DBParameterGroup.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DBParameterGroup.properties.Description.$ref": "#/definitions/String",
	"definitions.DBParameterGroup.type": "object",
	"definitions.DBParameterGroupAlreadyExistsFault.description": "A DB parameter group with the same name exists.",
	"definitions.DBParameterGroupAlreadyExistsFault.type": "object",
	"definitions.DBParameterGroupDetails.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBParameterGroupDetails.properties.Parameters.$ref": "#/definitions/ParametersList",
	"definitions.DBParameterGroupDetails.type": "object",
	"definitions.DBParameterGroupList.items.$ref": "#/definitions/DBParameterGroup",
	"definitions.DBParameterGroupList.type": "array",
	"definitions.DBParameterGroupNameMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DBParameterGroupNameMessage.type": "object",
	"definitions.DBParameterGroupNotFoundFault.description": " \u003ci\u003eDBParameterGroupName\u003c/i\u003e does not refer to an existing DB parameter group. ",
	"definitions.DBParameterGroupNotFoundFault.type": "object",
	"definitions.DBParameterGroupQuotaExceededFault.description": "Request would result in user exceeding the allowed number of DB parameter groups.",
	"definitions.DBParameterGroupQuotaExceededFault.type": "object",
	"definitions.DBParameterGroupStatus.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DBParameterGroupStatus.properties.ParameterApplyStatus.$ref": "#/definitions/String",
	"definitions.DBParameterGroupStatus.type": "object",
	"definitions.DBParameterGroupStatusList.items.$ref": "#/definitions/DBParameterGroupStatus",
	"definitions.DBParameterGroupStatusList.type": "array",
	"definitions.DBParameterGroupsMessage.properties.DBParameterGroups.$ref": "#/definitions/DBParameterGroupList",
	"definitions.DBParameterGroupsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBParameterGroupsMessage.type": "object",
	"definitions.DBSecurityGroup.properties.DBSecurityGroupDescription.$ref": "#/definitions/String",
	"definitions.DBSecurityGroup.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.DBSecurityGroup.properties.EC2SecurityGroups.$ref": "#/definitions/EC2SecurityGroupList",
	"definitions.DBSecurityGroup.properties.IPRanges.$ref": "#/definitions/IPRangeList",
	"definitions.DBSecurityGroup.properties.OwnerId.$ref": "#/definitions/String",
	"definitions.DBSecurityGroup.properties.VpcId.$ref": "#/definitions/String",
	"definitions.DBSecurityGroup.type": "object",
	"definitions.DBSecurityGroupAlreadyExistsFault.description": " A DB security group with the name specified in \u003ci\u003eDBSecurityGroupName\u003c/i\u003e already exists. ",
	"definitions.DBSecurityGroupAlreadyExistsFault.type": "object",
	"definitions.DBSecurityGroupMembership.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.DBSecurityGroupMembership.properties.Status.$ref": "#/definitions/String",
	"definitions.DBSecurityGroupMembership.type": "object",
	"definitions.DBSecurityGroupMembershipList.items.$ref": "#/definitions/DBSecurityGroupMembership",
	"definitions.DBSecurityGroupMembershipList.type": "array",
	"definitions.DBSecurityGroupMessage.properties.DBSecurityGroups.$ref": "#/definitions/DBSecurityGroups",
	"definitions.DBSecurityGroupMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBSecurityGroupMessage.type": "object",
	"definitions.DBSecurityGroupNameList.items.$ref": "#/definitions/String",
	"definitions.DBSecurityGroupNameList.type": "array",
	"definitions.DBSecurityGroupNotFoundFault.description": " \u003ci\u003eDBSecurityGroupName\u003c/i\u003e does not refer to an existing DB security group. ",
	"definitions.DBSecurityGroupNotFoundFault.type": "object",
	"definitions.DBSecurityGroupNotSupportedFault.description": "A DB security group is not allowed for this action.",
	"definitions.DBSecurityGroupNotSupportedFault.type": "object",
	"definitions.DBSecurityGroupQuotaExceededFault.description": "Request would result in user exceeding the allowed number of DB security groups.",
	"definitions.DBSecurityGroupQuotaExceededFault.type": "object",
	"definitions.DBSecurityGroups.items.$ref": "#/definitions/DBSecurityGroup",
	"definitions.DBSecurityGroups.type": "array",
	"definitions.DBSnapshot.properties.AllocatedStorage.$ref": "#/definitions/Integer",
	"definitions.DBSnapshot.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.DBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.Engine.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.InstanceCreateTime.$ref": "#/definitions/TStamp",
	"definitions.DBSnapshot.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.DBSnapshot.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.MasterUsername.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.PercentProgress.$ref": "#/definitions/Integer",
	"definitions.DBSnapshot.properties.Port.$ref": "#/definitions/Integer",
	"definitions.DBSnapshot.properties.SnapshotCreateTime.$ref": "#/definitions/TStamp",
	"definitions.DBSnapshot.properties.SnapshotType.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.SourceRegion.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.Status.$ref": "#/definitions/String",
	"definitions.DBSnapshot.properties.VpcId.$ref": "#/definitions/String",
	"definitions.DBSnapshot.type": "object",
	"definitions.DBSnapshotAlreadyExistsFault.description": " \u003ci\u003eDBSnapshotIdentifier\u003c/i\u003e is already used by an existing snapshot. ",
	"definitions.DBSnapshotAlreadyExistsFault.type": "object",
	"definitions.DBSnapshotList.items.$ref": "#/definitions/DBSnapshot",
	"definitions.DBSnapshotList.type": "array",
	"definitions.DBSnapshotMessage.properties.DBSnapshots.$ref": "#/definitions/DBSnapshotList",
	"definitions.DBSnapshotMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBSnapshotMessage.type": "object",
	"definitions.DBSnapshotNotFoundFault.description": " \u003ci\u003eDBSnapshotIdentifier\u003c/i\u003e does not refer to an existing DB snapshot. ",
	"definitions.DBSnapshotNotFoundFault.type": "object",
	"definitions.DBSubnetGroup.properties.DBSubnetGroupDescription.$ref": "#/definitions/String",
	"definitions.DBSubnetGroup.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.DBSubnetGroup.properties.SubnetGroupStatus.$ref": "#/definitions/String",
	"definitions.DBSubnetGroup.properties.Subnets.$ref": "#/definitions/SubnetList",
	"definitions.DBSubnetGroup.properties.VpcId.$ref": "#/definitions/String",
	"definitions.DBSubnetGroup.type": "object",
	"definitions.DBSubnetGroupAlreadyExistsFault.description": " \u003ci\u003eDBSubnetGroupName\u003c/i\u003e is already used by an existing DB subnet group. ",
	"definitions.DBSubnetGroupAlreadyExistsFault.type": "object",
	"definitions.DBSubnetGroupDoesNotCoverEnoughAZs.description": "Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.",
	"definitions.DBSubnetGroupDoesNotCoverEnoughAZs.type": "object",
	"definitions.DBSubnetGroupMessage.properties.DBSubnetGroups.$ref": "#/definitions/DBSubnetGroups",
	"definitions.DBSubnetGroupMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DBSubnetGroupMessage.type": "object",
	"definitions.DBSubnetGroupNotAllowedFault.description": "Indicates that the DBSubnetGroup should not be specified while creating read replicas that lie in the same region as the source instance.",
	"definitions.DBSubnetGroupNotAllowedFault.type": "object",
	"definitions.DBSubnetGroupNotFoundFault.description": " \u003ci\u003eDBSubnetGroupName\u003c/i\u003e does not refer to an existing DB subnet group. ",
	"definitions.DBSubnetGroupNotFoundFault.type": "object",
	"definitions.DBSubnetGroupQuotaExceededFault.description": "Request would result in user exceeding the allowed number of DB subnet groups.",
	"definitions.DBSubnetGroupQuotaExceededFault.type": "object",
	"definitions.DBSubnetGroups.items.$ref": "#/definitions/DBSubnetGroup",
	"definitions.DBSubnetGroups.type": "array",
	"definitions.DBSubnetQuotaExceededFault.description": "Request would result in user exceeding the allowed number of subnets in a DB subnet groups.",
	"definitions.DBSubnetQuotaExceededFault.type": "object",
	"definitions.DBUpgradeDependencyFailureFault.description": "The DB upgrade failed because a resource the DB depends on could not be modified.",
	"definitions.DBUpgradeDependencyFailureFault.type": "object",
	"definitions.DeleteDBInstanceMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DeleteDBInstanceMessage.properties.FinalDBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.DeleteDBInstanceMessage.properties.SkipFinalSnapshot.$ref": "#/definitions/Boolean",
	"definitions.DeleteDBInstanceMessage.required.length": 1,
	"definitions.DeleteDBInstanceMessage.required[0]": "DBInstanceIdentifier",
	"definitions.DeleteDBInstanceMessage.type": "object",
	"definitions.DeleteDBInstanceResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.DeleteDBInstanceResult.type": "object",
	"definitions.DeleteDBParameterGroupMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DeleteDBParameterGroupMessage.required.length": 1,
	"definitions.DeleteDBParameterGroupMessage.required[0]": "DBParameterGroupName",
	"definitions.DeleteDBParameterGroupMessage.type": "object",
	"definitions.DeleteDBSecurityGroupMessage.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.DeleteDBSecurityGroupMessage.required.length": 1,
	"definitions.DeleteDBSecurityGroupMessage.required[0]": "DBSecurityGroupName",
	"definitions.DeleteDBSecurityGroupMessage.type": "object",
	"definitions.DeleteDBSnapshotMessage.properties.DBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.DeleteDBSnapshotMessage.required.length": 1,
	"definitions.DeleteDBSnapshotMessage.required[0]": "DBSnapshotIdentifier",
	"definitions.DeleteDBSnapshotMessage.type": "object",
	"definitions.DeleteDBSnapshotResult.properties.DBSnapshot.$ref": "#/definitions/DBSnapshot",
	"definitions.DeleteDBSnapshotResult.type": "object",
	"definitions.DeleteDBSubnetGroupMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.DeleteDBSubnetGroupMessage.required.length": 1,
	"definitions.DeleteDBSubnetGroupMessage.required[0]": "DBSubnetGroupName",
	"definitions.DeleteDBSubnetGroupMessage.type": "object",
	"definitions.DeleteEventSubscriptionMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.DeleteEventSubscriptionMessage.required.length": 1,
	"definitions.DeleteEventSubscriptionMessage.required[0]": "SubscriptionName",
	"definitions.DeleteEventSubscriptionMessage.type": "object",
	"definitions.DeleteEventSubscriptionResult.properties.EventSubscription.$ref": "#/definitions/EventSubscription",
	"definitions.DeleteEventSubscriptionResult.type": "object",
	"definitions.DeleteOptionGroupMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.DeleteOptionGroupMessage.required.length": 1,
	"definitions.DeleteOptionGroupMessage.required[0]": "OptionGroupName",
	"definitions.DeleteOptionGroupMessage.type": "object",
	"definitions.DescribeDBEngineVersionsMessage.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.DescribeDBEngineVersionsMessage.properties.DefaultOnly.$ref": "#/definitions/Boolean",
	"definitions.DescribeDBEngineVersionsMessage.properties.Engine.$ref": "#/definitions/String",
	"definitions.DescribeDBEngineVersionsMessage.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.DescribeDBEngineVersionsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBEngineVersionsMessage.properties.ListSupportedCharacterSets.$ref": "#/definitions/BooleanOptional",
	"definitions.DescribeDBEngineVersionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBEngineVersionsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBEngineVersionsMessage.type": "object",
	"definitions.DescribeDBInstancesMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DescribeDBInstancesMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBInstancesMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBInstancesMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBInstancesMessage.type": "object",
	"definitions.DescribeDBLogFilesDetails.properties.LastWritten.$ref": "#/definitions/Long",
	"definitions.DescribeDBLogFilesDetails.properties.LogFileName.$ref": "#/definitions/String",
	"definitions.DescribeDBLogFilesDetails.properties.Size.$ref": "#/definitions/Long",
	"definitions.DescribeDBLogFilesDetails.type": "object",
	"definitions.DescribeDBLogFilesList.items.$ref": "#/definitions/DescribeDBLogFilesDetails",
	"definitions.DescribeDBLogFilesList.type": "array",
	"definitions.DescribeDBLogFilesMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DescribeDBLogFilesMessage.properties.FileLastWritten.$ref": "#/definitions/Long",
	"definitions.DescribeDBLogFilesMessage.properties.FileSize.$ref": "#/definitions/Long",
	"definitions.DescribeDBLogFilesMessage.properties.FilenameContains.$ref": "#/definitions/String",
	"definitions.DescribeDBLogFilesMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBLogFilesMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBLogFilesMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBLogFilesMessage.required.length": 1,
	"definitions.DescribeDBLogFilesMessage.required[0]": "DBInstanceIdentifier",
	"definitions.DescribeDBLogFilesMessage.type": "object",
	"definitions.DescribeDBLogFilesResponse.properties.DescribeDBLogFiles.$ref": "#/definitions/DescribeDBLogFilesList",
	"definitions.DescribeDBLogFilesResponse.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBLogFilesResponse.type": "object",
	"definitions.DescribeDBParameterGroupsMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DescribeDBParameterGroupsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBParameterGroupsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBParameterGroupsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBParameterGroupsMessage.type": "object",
	"definitions.DescribeDBParametersMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.DescribeDBParametersMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBParametersMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBParametersMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBParametersMessage.properties.Source.$ref": "#/definitions/String",
	"definitions.DescribeDBParametersMessage.required.length": 1,
	"definitions.DescribeDBParametersMessage.required[0]": "DBParameterGroupName",
	"definitions.DescribeDBParametersMessage.type": "object",
	"definitions.DescribeDBSecurityGroupsMessage.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.DescribeDBSecurityGroupsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBSecurityGroupsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBSecurityGroupsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBSecurityGroupsMessage.type": "object",
	"definitions.DescribeDBSnapshotsMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DescribeDBSnapshotsMessage.properties.DBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.DescribeDBSnapshotsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBSnapshotsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBSnapshotsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBSnapshotsMessage.properties.SnapshotType.$ref": "#/definitions/String",
	"definitions.DescribeDBSnapshotsMessage.type": "object",
	"definitions.DescribeDBSubnetGroupsMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.DescribeDBSubnetGroupsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeDBSubnetGroupsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeDBSubnetGroupsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeDBSubnetGroupsMessage.type": "object",
	"definitions.DescribeEngineDefaultParametersMessage.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.DescribeEngineDefaultParametersMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeEngineDefaultParametersMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeEngineDefaultParametersMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeEngineDefaultParametersMessage.required.length": 1,
	"definitions.DescribeEngineDefaultParametersMessage.required[0]": "DBParameterGroupFamily",
	"definitions.DescribeEngineDefaultParametersMessage.type": "object",
	"definitions.DescribeEngineDefaultParametersResult.properties.EngineDefaults.$ref": "#/definitions/EngineDefaults",
	"definitions.DescribeEngineDefaultParametersResult.type": "object",
	"definitions.DescribeEventCategoriesMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeEventCategoriesMessage.properties.SourceType.$ref": "#/definitions/String",
	"definitions.DescribeEventCategoriesMessage.type": "object",
	"definitions.DescribeEventSubscriptionsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeEventSubscriptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeEventSubscriptionsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeEventSubscriptionsMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.DescribeEventSubscriptionsMessage.type": "object",
	"definitions.DescribeEventsMessage.properties.Duration.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeEventsMessage.properties.EndTime.$ref": "#/definitions/TStamp",
	"definitions.DescribeEventsMessage.properties.EventCategories.$ref": "#/definitions/EventCategoriesList",
	"definitions.DescribeEventsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeEventsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeEventsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeEventsMessage.properties.SourceIdentifier.$ref": "#/definitions/String",
	"definitions.DescribeEventsMessage.properties.SourceType.$ref": "#/definitions/SourceType",
	"definitions.DescribeEventsMessage.properties.StartTime.$ref": "#/definitions/TStamp",
	"definitions.DescribeEventsMessage.type": "object",
	"definitions.DescribeOptionGroupOptionsMessage.properties.EngineName.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupOptionsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeOptionGroupOptionsMessage.properties.MajorEngineVersion.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupOptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupOptionsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeOptionGroupOptionsMessage.required.length": 1,
	"definitions.DescribeOptionGroupOptionsMessage.required[0]": "EngineName",
	"definitions.DescribeOptionGroupOptionsMessage.type": "object",
	"definitions.DescribeOptionGroupsMessage.properties.EngineName.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeOptionGroupsMessage.properties.MajorEngineVersion.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeOptionGroupsMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.DescribeOptionGroupsMessage.type": "object",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.Engine.$ref": "#/definitions/String",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.properties.Vpc.$ref": "#/definitions/BooleanOptional",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.required.length": 1,
	"definitions.DescribeOrderableDBInstanceOptionsMessage.required[0]": "Engine",
	"definitions.DescribeOrderableDBInstanceOptionsMessage.type": "object",
	"definitions.DescribeReservedDBInstancesMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.Duration.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeReservedDBInstancesMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeReservedDBInstancesMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.DescribeReservedDBInstancesMessage.properties.OfferingType.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.ProductDescription.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.ReservedDBInstanceId.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.properties.ReservedDBInstancesOfferingId.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesMessage.type": "object",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.Duration.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.MaxRecords.$ref": "#/definitions/IntegerOptional",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.OfferingType.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.ProductDescription.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.properties.ReservedDBInstancesOfferingId.$ref": "#/definitions/String",
	"definitions.DescribeReservedDBInstancesOfferingsMessage.type": "object",
	"definitions.Double.format": "double",
	"definitions.Double.type": "number",
	"definitions.DownloadDBLogFilePortionDetails.properties.AdditionalDataPending.$ref": "#/definitions/Boolean",
	"definitions.DownloadDBLogFilePortionDetails.properties.LogFileData.$ref": "#/definitions/String",
	"definitions.DownloadDBLogFilePortionDetails.properties.Marker.$ref": "#/definitions/String",
	"definitions.DownloadDBLogFilePortionDetails.type": "object",
	"definitions.DownloadDBLogFilePortionMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.DownloadDBLogFilePortionMessage.properties.LogFileName.$ref": "#/definitions/String",
	"definitions.DownloadDBLogFilePortionMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.DownloadDBLogFilePortionMessage.properties.NumberOfLines.$ref": "#/definitions/Integer",
	"definitions.DownloadDBLogFilePortionMessage.required.length": 2,
	"definitions.DownloadDBLogFilePortionMessage.required[0]": "DBInstanceIdentifier",
	"definitions.DownloadDBLogFilePortionMessage.required[1]": "LogFileName",
	"definitions.DownloadDBLogFilePortionMessage.type": "object",
	"definitions.EC2SecurityGroup.properties.EC2SecurityGroupId.$ref": "#/definitions/String",
	"definitions.EC2SecurityGroup.properties.EC2SecurityGroupName.$ref": "#/definitions/String",
	"definitions.EC2SecurityGroup.properties.EC2SecurityGroupOwnerId.$ref": "#/definitions/String",
	"definitions.EC2SecurityGroup.properties.Status.$ref": "#/definitions/String",
	"definitions.EC2SecurityGroup.type": "object",
	"definitions.EC2SecurityGroupList.items.$ref": "#/definitions/EC2SecurityGroup",
	"definitions.EC2SecurityGroupList.type": "array",
	"definitions.Endpoint.properties.Address.$ref": "#/definitions/String",
	"definitions.Endpoint.properties.Port.$ref": "#/definitions/Integer",
	"definitions.Endpoint.type": "object",
	"definitions.EngineDefaults.properties.DBParameterGroupFamily.$ref": "#/definitions/String",
	"definitions.EngineDefaults.properties.Marker.$ref": "#/definitions/String",
	"definitions.EngineDefaults.properties.Parameters.$ref": "#/definitions/ParametersList",
	"definitions.EngineDefaults.type": "object",
	"definitions.Event.properties.Date.$ref": "#/definitions/TStamp",
	"definitions.Event.properties.EventCategories.$ref": "#/definitions/EventCategoriesList",
	"definitions.Event.properties.Message.$ref": "#/definitions/String",
	"definitions.Event.properties.SourceIdentifier.$ref": "#/definitions/String",
	"definitions.Event.properties.SourceType.$ref": "#/definitions/SourceType",
	"definitions.Event.type": "object",
	"definitions.EventCategoriesList.items.$ref": "#/definitions/String",
	"definitions.EventCategoriesList.type": "array",
	"definitions.EventCategoriesMap.properties.EventCategories.$ref": "#/definitions/EventCategoriesList",
	"definitions.EventCategoriesMap.properties.SourceType.$ref": "#/definitions/String",
	"definitions.EventCategoriesMap.type": "object",
	"definitions.EventCategoriesMapList.items.$ref": "#/definitions/EventCategoriesMap",
	"definitions.EventCategoriesMapList.type": "array",
	"definitions.EventCategoriesMessage.properties.EventCategoriesMapList.$ref": "#/definitions/EventCategoriesMapList",
	"definitions.EventCategoriesMessage.type": "object",
	"definitions.EventList.items.$ref": "#/definitions/Event",
	"definitions.EventList.type": "array",
	"definitions.EventSubscription.properties.CustSubscriptionId.$ref": "#/definitions/String",
	"definitions.EventSubscription.properties.CustomerAwsId.$ref": "#/definitions/String",
	"definitions.EventSubscription.properties.Enabled.$ref": "#/definitions/Boolean",
	"definitions.EventSubscription.properties.EventCategoriesList.$ref": "#/definitions/EventCategoriesList",
	"definitions.EventSubscription.properties.SnsTopicArn.$ref": "#/definitions/String",
	"definitions.EventSubscription.properties.SourceIdsList.$ref": "#/definitions/SourceIdsList",
	"definitions.EventSubscription.properties.SourceType.$ref": "#/definitions/String",
	"definitions.EventSubscription.properties.Status.$ref": "#/definitions/String",
	"definitions.EventSubscription.properties.SubscriptionCreationTime.$ref": "#/definitions/String",
	"definitions.EventSubscription.type": "object",
	"definitions.EventSubscriptionQuotaExceededFault.description": "You have reached the maximum number of event subscriptions.",
	"definitions.EventSubscriptionQuotaExceededFault.type": "object",
	"definitions.EventSubscriptionsList.items.$ref": "#/definitions/EventSubscription",
	"definitions.EventSubscriptionsList.type": "array",
	"definitions.EventSubscriptionsMessage.properties.EventSubscriptionsList.$ref": "#/definitions/EventSubscriptionsList",
	"definitions.EventSubscriptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.EventSubscriptionsMessage.type": "object",
	"definitions.EventsMessage.properties.Events.$ref": "#/definitions/EventList",
	"definitions.EventsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.EventsMessage.type": "object",
	"definitions.Filter.properties.Name.$ref": "#/definitions/String",
	"definitions.Filter.properties.Values.$ref": "#/definitions/FilterValueList",
	"definitions.Filter.required.length": 2,
	"definitions.Filter.required[0]": "Name",
	"definitions.Filter.required[1]": "Values",
	"definitions.Filter.type": "object",
	"definitions.FilterList.items.$ref": "#/definitions/Filter",
	"definitions.FilterList.type": "array",
	"definitions.FilterValueList.items.$ref": "#/definitions/String",
	"definitions.FilterValueList.type": "array",
	"definitions.IPRange.properties.CIDRIP.$ref": "#/definitions/String",
	"definitions.IPRange.properties.Status.$ref": "#/definitions/String",
	"definitions.IPRange.type": "object",
	"definitions.IPRangeList.items.$ref": "#/definitions/IPRange",
	"definitions.IPRangeList.type": "array",
	"definitions.InstanceQuotaExceededFault.description": "Request would result in user exceeding the allowed number of DB instances.",
	"definitions.InstanceQuotaExceededFault.type": "object",
	"definitions.InsufficientDBInstanceCapacityFault.description": "Specified DB instance class is not available in the specified Availability Zone.",
	"definitions.InsufficientDBInstanceCapacityFault.type": "object",
	"definitions.Integer.type": "integer",
	"definitions.IntegerOptional.type": "integer",
	"definitions.InvalidDBInstanceStateFault.description": " The specified DB instance is not in the \u003ci\u003eavailable\u003c/i\u003e state. ",
	"definitions.InvalidDBInstanceStateFault.type": "object",
	"definitions.InvalidDBParameterGroupStateFault.description": "The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.",
	"definitions.InvalidDBParameterGroupStateFault.type": "object",
	"definitions.InvalidDBSecurityGroupStateFault.description": "The state of the DB security group does not allow deletion.",
	"definitions.InvalidDBSecurityGroupStateFault.type": "object",
	"definitions.InvalidDBSnapshotStateFault.description": "The state of the DB snapshot does not allow deletion.",
	"definitions.InvalidDBSnapshotStateFault.type": "object",
	"definitions.InvalidDBSubnetGroupFault.description": "Indicates the DBSubnetGroup does not belong to the same VPC as that of an existing cross region read replica of the same source instance.",
	"definitions.InvalidDBSubnetGroupFault.type": "object",
	"definitions.InvalidDBSubnetGroupStateFault.description": "The DB subnet group cannot be deleted because it is in use.",
	"definitions.InvalidDBSubnetGroupStateFault.type": "object",
	"definitions.InvalidDBSubnetStateFault.description": " The DB subnet is not in the \u003ci\u003eavailable\u003c/i\u003e state. ",
	"definitions.InvalidDBSubnetStateFault.type": "object",
	"definitions.InvalidEventSubscriptionStateFault.description": "This error can occur if someone else is modifying a subscription. You should retry the action.",
	"definitions.InvalidEventSubscriptionStateFault.type": "object",
	"definitions.InvalidOptionGroupStateFault.description": " The option group is not in the \u003ci\u003eavailable\u003c/i\u003e state. ",
	"definitions.InvalidOptionGroupStateFault.type": "object",
	"definitions.InvalidRestoreFault.description": "Cannot restore from vpc backup to non-vpc DB instance.",
	"definitions.InvalidRestoreFault.type": "object",
	"definitions.InvalidSubnet.description": "The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.",
	"definitions.InvalidSubnet.type": "object",
	"definitions.InvalidVPCNetworkStateFault.description": "DB subnet group does not cover all Availability Zones after it is created because users' change.",
	"definitions.InvalidVPCNetworkStateFault.type": "object",
	"definitions.KeyList.items.$ref": "#/definitions/String",
	"definitions.KeyList.type": "array",
	"definitions.ListTagsForResourceMessage.properties.Filters.$ref": "#/definitions/FilterList",
	"definitions.ListTagsForResourceMessage.properties.ResourceName.$ref": "#/definitions/String",
	"definitions.ListTagsForResourceMessage.required.length": 1,
	"definitions.ListTagsForResourceMessage.required[0]": "ResourceName",
	"definitions.ListTagsForResourceMessage.type": "object",
	"definitions.Long.type": "integer",
	"definitions.ModifyDBInstanceMessage.properties.AllocatedStorage.$ref": "#/definitions/IntegerOptional",
	"definitions.ModifyDBInstanceMessage.properties.AllowMajorVersionUpgrade.$ref": "#/definitions/Boolean",
	"definitions.ModifyDBInstanceMessage.properties.ApplyImmediately.$ref": "#/definitions/Boolean",
	"definitions.ModifyDBInstanceMessage.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/BooleanOptional",
	"definitions.ModifyDBInstanceMessage.properties.BackupRetentionPeriod.$ref": "#/definitions/IntegerOptional",
	"definitions.ModifyDBInstanceMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.DBSecurityGroups.$ref": "#/definitions/DBSecurityGroupNameList",
	"definitions.ModifyDBInstanceMessage.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.ModifyDBInstanceMessage.properties.MasterUserPassword.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.ModifyDBInstanceMessage.properties.NewDBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.PreferredBackupWindow.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.PreferredMaintenanceWindow.$ref": "#/definitions/String",
	"definitions.ModifyDBInstanceMessage.properties.VpcSecurityGroupIds.$ref": "#/definitions/VpcSecurityGroupIdList",
	"definitions.ModifyDBInstanceMessage.required.length": 1,
	"definitions.ModifyDBInstanceMessage.required[0]": "DBInstanceIdentifier",
	"definitions.ModifyDBInstanceMessage.type": "object",
	"definitions.ModifyDBInstanceResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.ModifyDBInstanceResult.type": "object",
	"definitions.ModifyDBParameterGroupMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.ModifyDBParameterGroupMessage.properties.Parameters.$ref": "#/definitions/ParametersList",
	"definitions.ModifyDBParameterGroupMessage.required.length": 2,
	"definitions.ModifyDBParameterGroupMessage.required[0]": "DBParameterGroupName",
	"definitions.ModifyDBParameterGroupMessage.required[1]": "Parameters",
	"definitions.ModifyDBParameterGroupMessage.type": "object",
	"definitions.ModifyDBSubnetGroupMessage.properties.DBSubnetGroupDescription.$ref": "#/definitions/String",
	"definitions.ModifyDBSubnetGroupMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.ModifyDBSubnetGroupMessage.properties.SubnetIds.$ref": "#/definitions/SubnetIdentifierList",
	"definitions.ModifyDBSubnetGroupMessage.required.length": 2,
	"definitions.ModifyDBSubnetGroupMessage.required[0]": "DBSubnetGroupName",
	"definitions.ModifyDBSubnetGroupMessage.required[1]": "SubnetIds",
	"definitions.ModifyDBSubnetGroupMessage.type": "object",
	"definitions.ModifyDBSubnetGroupResult.properties.DBSubnetGroup.$ref": "#/definitions/DBSubnetGroup",
	"definitions.ModifyDBSubnetGroupResult.type": "object",
	"definitions.ModifyEventSubscriptionMessage.properties.Enabled.$ref": "#/definitions/BooleanOptional",
	"definitions.ModifyEventSubscriptionMessage.properties.EventCategories.$ref": "#/definitions/EventCategoriesList",
	"definitions.ModifyEventSubscriptionMessage.properties.SnsTopicArn.$ref": "#/definitions/String",
	"definitions.ModifyEventSubscriptionMessage.properties.SourceType.$ref": "#/definitions/String",
	"definitions.ModifyEventSubscriptionMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.ModifyEventSubscriptionMessage.required.length": 1,
	"definitions.ModifyEventSubscriptionMessage.required[0]": "SubscriptionName",
	"definitions.ModifyEventSubscriptionMessage.type": "object",
	"definitions.ModifyEventSubscriptionResult.properties.EventSubscription.$ref": "#/definitions/EventSubscription",
	"definitions.ModifyEventSubscriptionResult.type": "object",
	"definitions.ModifyOptionGroupMessage.properties.ApplyImmediately.$ref": "#/definitions/Boolean",
	"definitions.ModifyOptionGroupMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.ModifyOptionGroupMessage.properties.OptionsToInclude.$ref": "#/definitions/OptionConfigurationList",
	"definitions.ModifyOptionGroupMessage.properties.OptionsToRemove.$ref": "#/definitions/OptionNamesList",
	"definitions.ModifyOptionGroupMessage.required.length": 1,
	"definitions.ModifyOptionGroupMessage.required[0]": "OptionGroupName",
	"definitions.ModifyOptionGroupMessage.type": "object",
	"definitions.ModifyOptionGroupResult.properties.OptionGroup.$ref": "#/definitions/OptionGroup",
	"definitions.ModifyOptionGroupResult.type": "object",
	"definitions.Option.properties.DBSecurityGroupMemberships.$ref": "#/definitions/DBSecurityGroupMembershipList",
	"definitions.Option.properties.OptionDescription.$ref": "#/definitions/String",
	"definitions.Option.properties.OptionName.$ref": "#/definitions/String",
	"definitions.Option.properties.OptionSettings.$ref": "#/definitions/OptionSettingConfigurationList",
	"definitions.Option.properties.Permanent.$ref": "#/definitions/Boolean",
	"definitions.Option.properties.Persistent.$ref": "#/definitions/Boolean",
	"definitions.Option.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.Option.properties.VpcSecurityGroupMemberships.$ref": "#/definitions/VpcSecurityGroupMembershipList",
	"definitions.Option.type": "object",
	"definitions.OptionConfiguration.properties.DBSecurityGroupMemberships.$ref": "#/definitions/DBSecurityGroupNameList",
	"definitions.OptionConfiguration.properties.OptionName.$ref": "#/definitions/String",
	"definitions.OptionConfiguration.properties.OptionSettings.$ref": "#/definitions/OptionSettingsList",
	"definitions.OptionConfiguration.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.OptionConfiguration.properties.VpcSecurityGroupMemberships.$ref": "#/definitions/VpcSecurityGroupIdList",
	"definitions.OptionConfiguration.required.length": 1,
	"definitions.OptionConfiguration.required[0]": "OptionName",
	"definitions.OptionConfiguration.type": "object",
	"definitions.OptionConfigurationList.items.$ref": "#/definitions/OptionConfiguration",
	"definitions.OptionConfigurationList.type": "array",
	"definitions.OptionGroup.properties.AllowsVpcAndNonVpcInstanceMemberships.$ref": "#/definitions/Boolean",
	"definitions.OptionGroup.properties.EngineName.$ref": "#/definitions/String",
	"definitions.OptionGroup.properties.MajorEngineVersion.$ref": "#/definitions/String",
	"definitions.OptionGroup.properties.OptionGroupDescription.$ref": "#/definitions/String",
	"definitions.OptionGroup.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.OptionGroup.properties.Options.$ref": "#/definitions/OptionsList",
	"definitions.OptionGroup.properties.VpcId.$ref": "#/definitions/String",
	"definitions.OptionGroup.type": "object",
	"definitions.OptionGroupAlreadyExistsFault.description": "The option group you are trying to create already exists.",
	"definitions.OptionGroupAlreadyExistsFault.type": "object",
	"definitions.OptionGroupMembership.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.OptionGroupMembership.properties.Status.$ref": "#/definitions/String",
	"definitions.OptionGroupMembership.type": "object",
	"definitions.OptionGroupMembershipList.items.$ref": "#/definitions/OptionGroupMembership",
	"definitions.OptionGroupMembershipList.type": "array",
	"definitions.OptionGroupNotFoundFault.description": "The specified option group could not be found.",
	"definitions.OptionGroupNotFoundFault.type": "object",
	"definitions.OptionGroupOption.properties.DefaultPort.$ref": "#/definitions/IntegerOptional",
	"definitions.OptionGroupOption.properties.Description.$ref": "#/definitions/String",
	"definitions.OptionGroupOption.properties.EngineName.$ref": "#/definitions/String",
	"definitions.OptionGroupOption.properties.MajorEngineVersion.$ref": "#/definitions/String",
	"definitions.OptionGroupOption.properties.MinimumRequiredMinorEngineVersion.$ref": "#/definitions/String",
	"definitions.OptionGroupOption.properties.Name.$ref": "#/definitions/String",
	"definitions.OptionGroupOption.properties.OptionGroupOptionSettings.$ref": "#/definitions/OptionGroupOptionSettingsList",
	"definitions.OptionGroupOption.properties.OptionsDependedOn.$ref": "#/definitions/OptionsDependedOn",
	"definitions.OptionGroupOption.properties.Permanent.$ref": "#/definitions/Boolean",
	"definitions.OptionGroupOption.properties.Persistent.$ref": "#/definitions/Boolean",
	"definitions.OptionGroupOption.properties.PortRequired.$ref": "#/definitions/Boolean",
	"definitions.OptionGroupOption.type": "object",
	"definitions.OptionGroupOptionSetting.properties.AllowedValues.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionSetting.properties.ApplyType.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionSetting.properties.DefaultValue.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionSetting.properties.IsModifiable.$ref": "#/definitions/Boolean",
	"definitions.OptionGroupOptionSetting.properties.SettingDescription.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionSetting.properties.SettingName.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionSetting.type": "object",
	"definitions.OptionGroupOptionSettingsList.items.$ref": "#/definitions/OptionGroupOptionSetting",
	"definitions.OptionGroupOptionSettingsList.type": "array",
	"definitions.OptionGroupOptionsList.items.$ref": "#/definitions/OptionGroupOption",
	"definitions.OptionGroupOptionsList.type": "array",
	"definitions.OptionGroupOptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.OptionGroupOptionsMessage.properties.OptionGroupOptions.$ref": "#/definitions/OptionGroupOptionsList",
	"definitions.OptionGroupOptionsMessage.type": "object",
	"definitions.OptionGroupQuotaExceededFault.description": "The quota of 20 option groups was exceeded for this AWS account.",
	"definitions.OptionGroupQuotaExceededFault.type": "object",
	"definitions.OptionGroups.properties.Marker.$ref": "#/definitions/String",
	"definitions.OptionGroups.properties.OptionGroupsList.$ref": "#/definitions/OptionGroupsList",
	"definitions.OptionGroups.type": "object",
	"definitions.OptionGroupsList.items.$ref": "#/definitions/OptionGroup",
	"definitions.OptionGroupsList.type": "array",
	"definitions.OptionNamesList.items.$ref": "#/definitions/String",
	"definitions.OptionNamesList.type": "array",
	"definitions.OptionSetting.properties.AllowedValues.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.ApplyType.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.DataType.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.DefaultValue.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.Description.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.IsCollection.$ref": "#/definitions/Boolean",
	"definitions.OptionSetting.properties.IsModifiable.$ref": "#/definitions/Boolean",
	"definitions.OptionSetting.properties.Name.$ref": "#/definitions/String",
	"definitions.OptionSetting.properties.Value.$ref": "#/definitions/String",
	"definitions.OptionSetting.type": "object",
	"definitions.OptionSettingConfigurationList.items.$ref": "#/definitions/OptionSetting",
	"definitions.OptionSettingConfigurationList.type": "array",
	"definitions.OptionSettingsList.items.$ref": "#/definitions/OptionSetting",
	"definitions.OptionSettingsList.type": "array",
	"definitions.OptionsDependedOn.items.$ref": "#/definitions/String",
	"definitions.OptionsDependedOn.type": "array",
	"definitions.OptionsList.items.$ref": "#/definitions/Option",
	"definitions.OptionsList.type": "array",
	"definitions.OrderableDBInstanceOption.properties.AvailabilityZones.$ref": "#/definitions/AvailabilityZoneList",
	"definitions.OrderableDBInstanceOption.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.OrderableDBInstanceOption.properties.Engine.$ref": "#/definitions/String",
	"definitions.OrderableDBInstanceOption.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.OrderableDBInstanceOption.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.OrderableDBInstanceOption.properties.MultiAZCapable.$ref": "#/definitions/Boolean",
	"definitions.OrderableDBInstanceOption.properties.ReadReplicaCapable.$ref": "#/definitions/Boolean",
	"definitions.OrderableDBInstanceOption.properties.Vpc.$ref": "#/definitions/Boolean",
	"definitions.OrderableDBInstanceOption.type": "object",
	"definitions.OrderableDBInstanceOptionsList.items.$ref": "#/definitions/OrderableDBInstanceOption",
	"definitions.OrderableDBInstanceOptionsList.type": "array",
	"definitions.OrderableDBInstanceOptionsMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.OrderableDBInstanceOptionsMessage.properties.OrderableDBInstanceOptions.$ref": "#/definitions/OrderableDBInstanceOptionsList",
	"definitions.OrderableDBInstanceOptionsMessage.type": "object",
	"definitions.Parameter.properties.AllowedValues.$ref": "#/definitions/String",
	"definitions.Parameter.properties.ApplyMethod.$ref": "#/definitions/ApplyMethod",
	"definitions.Parameter.properties.ApplyType.$ref": "#/definitions/String",
	"definitions.Parameter.properties.DataType.$ref": "#/definitions/String",
	"definitions.Parameter.properties.Description.$ref": "#/definitions/String",
	"definitions.Parameter.properties.IsModifiable.$ref": "#/definitions/Boolean",
	"definitions.Parameter.properties.MinimumEngineVersion.$ref": "#/definitions/String",
	"definitions.Parameter.properties.ParameterName.$ref": "#/definitions/String",
	"definitions.Parameter.properties.ParameterValue.$ref": "#/definitions/String",
	"definitions.Parameter.properties.Source.$ref": "#/definitions/String",
	"definitions.Parameter.type": "object",
	"definitions.ParametersList.items.$ref": "#/definitions/Parameter",
	"definitions.ParametersList.type": "array",
	"definitions.PendingModifiedValues.properties.AllocatedStorage.$ref": "#/definitions/IntegerOptional",
	"definitions.PendingModifiedValues.properties.BackupRetentionPeriod.$ref": "#/definitions/IntegerOptional",
	"definitions.PendingModifiedValues.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.PendingModifiedValues.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.PendingModifiedValues.properties.EngineVersion.$ref": "#/definitions/String",
	"definitions.PendingModifiedValues.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.PendingModifiedValues.properties.MasterUserPassword.$ref": "#/definitions/String",
	"definitions.PendingModifiedValues.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.PendingModifiedValues.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.PendingModifiedValues.type": "object",
	"definitions.PointInTimeRestoreNotEnabledFault.description": " \u003ci\u003eSourceDBInstanceIdentifier\u003c/i\u003e refers to a DB instance with \u003ci\u003eBackupRetentionPeriod\u003c/i\u003e equal to 0. ",
	"definitions.PointInTimeRestoreNotEnabledFault.type": "object",
	"definitions.PromoteReadReplicaMessage.properties.BackupRetentionPeriod.$ref": "#/definitions/IntegerOptional",
	"definitions.PromoteReadReplicaMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.PromoteReadReplicaMessage.properties.PreferredBackupWindow.$ref": "#/definitions/String",
	"definitions.PromoteReadReplicaMessage.required.length": 1,
	"definitions.PromoteReadReplicaMessage.required[0]": "DBInstanceIdentifier",
	"definitions.PromoteReadReplicaMessage.type": "object",
	"definitions.PromoteReadReplicaResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.PromoteReadReplicaResult.type": "object",
	"definitions.ProvisionedIopsNotAvailableInAZFault.description": "Provisioned IOPS not available in the specified Availability Zone.",
	"definitions.ProvisionedIopsNotAvailableInAZFault.type": "object",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.properties.DBInstanceCount.$ref": "#/definitions/IntegerOptional",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.properties.ReservedDBInstanceId.$ref": "#/definitions/String",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.properties.ReservedDBInstancesOfferingId.$ref": "#/definitions/String",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.required.length": 1,
	"definitions.PurchaseReservedDBInstancesOfferingMessage.required[0]": "ReservedDBInstancesOfferingId",
	"definitions.PurchaseReservedDBInstancesOfferingMessage.type": "object",
	"definitions.PurchaseReservedDBInstancesOfferingResult.properties.ReservedDBInstance.$ref": "#/definitions/ReservedDBInstance",
	"definitions.PurchaseReservedDBInstancesOfferingResult.type": "object",
	"definitions.ReadReplicaDBInstanceIdentifierList.items.$ref": "#/definitions/String",
	"definitions.ReadReplicaDBInstanceIdentifierList.type": "array",
	"definitions.RebootDBInstanceMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.RebootDBInstanceMessage.properties.ForceFailover.$ref": "#/definitions/BooleanOptional",
	"definitions.RebootDBInstanceMessage.required.length": 1,
	"definitions.RebootDBInstanceMessage.required[0]": "DBInstanceIdentifier",
	"definitions.RebootDBInstanceMessage.type": "object",
	"definitions.RebootDBInstanceResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.RebootDBInstanceResult.type": "object",
	"definitions.RecurringCharge.properties.RecurringChargeAmount.$ref": "#/definitions/Double",
	"definitions.RecurringCharge.properties.RecurringChargeFrequency.$ref": "#/definitions/String",
	"definitions.RecurringCharge.type": "object",
	"definitions.RecurringChargeList.items.$ref": "#/definitions/RecurringCharge",
	"definitions.RecurringChargeList.type": "array",
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.properties.SourceIdentifier.$ref": "#/definitions/String",
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.properties.SubscriptionName.$ref": "#/definitions/String",
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.required.length": 2,
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.required[0]": "SubscriptionName",
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.required[1]": "SourceIdentifier",
	"definitions.RemoveSourceIdentifierFromSubscriptionMessage.type": "object",
	"definitions.RemoveSourceIdentifierFromSubscriptionResult.properties.EventSubscription.$ref": "#/definitions/EventSubscription",
	"definitions.RemoveSourceIdentifierFromSubscriptionResult.type": "object",
	"definitions.RemoveTagsFromResourceMessage.properties.ResourceName.$ref": "#/definitions/String",
	"definitions.RemoveTagsFromResourceMessage.properties.TagKeys.$ref": "#/definitions/KeyList",
	"definitions.RemoveTagsFromResourceMessage.required.length": 2,
	"definitions.RemoveTagsFromResourceMessage.required[0]": "ResourceName",
	"definitions.RemoveTagsFromResourceMessage.required[1]": "TagKeys",
	"definitions.RemoveTagsFromResourceMessage.type": "object",
	"definitions.ReservedDBInstance.properties.CurrencyCode.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.DBInstanceCount.$ref": "#/definitions/Integer",
	"definitions.ReservedDBInstance.properties.Duration.$ref": "#/definitions/Integer",
	"definitions.ReservedDBInstance.properties.FixedPrice.$ref": "#/definitions/Double",
	"definitions.ReservedDBInstance.properties.MultiAZ.$ref": "#/definitions/Boolean",
	"definitions.ReservedDBInstance.properties.OfferingType.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.ProductDescription.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.RecurringCharges.$ref": "#/definitions/RecurringChargeList",
	"definitions.ReservedDBInstance.properties.ReservedDBInstanceId.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.ReservedDBInstancesOfferingId.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.StartTime.$ref": "#/definitions/TStamp",
	"definitions.ReservedDBInstance.properties.State.$ref": "#/definitions/String",
	"definitions.ReservedDBInstance.properties.UsagePrice.$ref": "#/definitions/Double",
	"definitions.ReservedDBInstance.type": "object",
	"definitions.ReservedDBInstanceAlreadyExistsFault.description": "User already has a reservation with the given identifier.",
	"definitions.ReservedDBInstanceAlreadyExistsFault.type": "object",
	"definitions.ReservedDBInstanceList.items.$ref": "#/definitions/ReservedDBInstance",
	"definitions.ReservedDBInstanceList.type": "array",
	"definitions.ReservedDBInstanceMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.ReservedDBInstanceMessage.properties.ReservedDBInstances.$ref": "#/definitions/ReservedDBInstanceList",
	"definitions.ReservedDBInstanceMessage.type": "object",
	"definitions.ReservedDBInstanceNotFoundFault.description": "The specified reserved DB Instance not found.",
	"definitions.ReservedDBInstanceNotFoundFault.type": "object",
	"definitions.ReservedDBInstanceQuotaExceededFault.description": "Request would exceed the user's DB Instance quota.",
	"definitions.ReservedDBInstanceQuotaExceededFault.type": "object",
	"definitions.ReservedDBInstancesOffering.properties.CurrencyCode.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOffering.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOffering.properties.Duration.$ref": "#/definitions/Integer",
	"definitions.ReservedDBInstancesOffering.properties.FixedPrice.$ref": "#/definitions/Double",
	"definitions.ReservedDBInstancesOffering.properties.MultiAZ.$ref": "#/definitions/Boolean",
	"definitions.ReservedDBInstancesOffering.properties.OfferingType.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOffering.properties.ProductDescription.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOffering.properties.RecurringCharges.$ref": "#/definitions/RecurringChargeList",
	"definitions.ReservedDBInstancesOffering.properties.ReservedDBInstancesOfferingId.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOffering.properties.UsagePrice.$ref": "#/definitions/Double",
	"definitions.ReservedDBInstancesOffering.type": "object",
	"definitions.ReservedDBInstancesOfferingList.items.$ref": "#/definitions/ReservedDBInstancesOffering",
	"definitions.ReservedDBInstancesOfferingList.type": "array",
	"definitions.ReservedDBInstancesOfferingMessage.properties.Marker.$ref": "#/definitions/String",
	"definitions.ReservedDBInstancesOfferingMessage.properties.ReservedDBInstancesOfferings.$ref": "#/definitions/ReservedDBInstancesOfferingList",
	"definitions.ReservedDBInstancesOfferingMessage.type": "object",
	"definitions.ReservedDBInstancesOfferingNotFoundFault.description": "Specified offering does not exist.",
	"definitions.ReservedDBInstancesOfferingNotFoundFault.type": "object",
	"definitions.ResetDBParameterGroupMessage.properties.DBParameterGroupName.$ref": "#/definitions/String",
	"definitions.ResetDBParameterGroupMessage.properties.Parameters.$ref": "#/definitions/ParametersList",
	"definitions.ResetDBParameterGroupMessage.properties.ResetAllParameters.$ref": "#/definitions/Boolean",
	"definitions.ResetDBParameterGroupMessage.required.length": 1,
	"definitions.ResetDBParameterGroupMessage.required[0]": "DBParameterGroupName",
	"definitions.ResetDBParameterGroupMessage.type": "object",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.DBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.DBName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.DBSnapshotIdentifier.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.Engine.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.PubliclyAccessible.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.required.length": 2,
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.required[0]": "DBInstanceIdentifier",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.required[1]": "DBSnapshotIdentifier",
	"definitions.RestoreDBInstanceFromDBSnapshotMessage.type": "object",
	"definitions.RestoreDBInstanceFromDBSnapshotResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.RestoreDBInstanceFromDBSnapshotResult.type": "object",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.AutoMinorVersionUpgrade.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.AvailabilityZone.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.DBInstanceClass.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.DBName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.DBSubnetGroupName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.Engine.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.Iops.$ref": "#/definitions/IntegerOptional",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.LicenseModel.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.MultiAZ.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.OptionGroupName.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.Port.$ref": "#/definitions/IntegerOptional",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.PubliclyAccessible.$ref": "#/definitions/BooleanOptional",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.RestoreTime.$ref": "#/definitions/TStamp",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.SourceDBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.Tags.$ref": "#/definitions/TagList",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.TargetDBInstanceIdentifier.$ref": "#/definitions/String",
	"definitions.RestoreDBInstanceToPointInTimeMessage.properties.UseLatestRestorableTime.$ref": "#/definitions/Boolean",
	"definitions.RestoreDBInstanceToPointInTimeMessage.required.length": 2,
	"definitions.RestoreDBInstanceToPointInTimeMessage.required[0]": "SourceDBInstanceIdentifier",
	"definitions.RestoreDBInstanceToPointInTimeMessage.required[1]": "TargetDBInstanceIdentifier",
	"definitions.RestoreDBInstanceToPointInTimeMessage.type": "object",
	"definitions.RestoreDBInstanceToPointInTimeResult.properties.DBInstance.$ref": "#/definitions/DBInstance",
	"definitions.RestoreDBInstanceToPointInTimeResult.type": "object",
	"definitions.RevokeDBSecurityGroupIngressMessage.properties.CIDRIP.$ref": "#/definitions/String",
	"definitions.RevokeDBSecurityGroupIngressMessage.properties.DBSecurityGroupName.$ref": "#/definitions/String",
	"definitions.RevokeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupId.$ref": "#/definitions/String",
	"definitions.RevokeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupName.$ref": "#/definitions/String",
	"definitions.RevokeDBSecurityGroupIngressMessage.properties.EC2SecurityGroupOwnerId.$ref": "#/definitions/String",
	"definitions.RevokeDBSecurityGroupIngressMessage.required.length": 1,
	"definitions.RevokeDBSecurityGroupIngressMessage.required[0]": "DBSecurityGroupName",
	"definitions.RevokeDBSecurityGroupIngressMessage.type": "object",
	"definitions.RevokeDBSecurityGroupIngressResult.properties.DBSecurityGroup.$ref": "#/definitions/DBSecurityGroup",
	"definitions.RevokeDBSecurityGroupIngressResult.type": "object",
	"definitions.SNSInvalidTopicFault.description": "SNS has responded that there is a problem with the SND topic specified.",
	"definitions.SNSInvalidTopicFault.type": "object",
	"definitions.SNSNoAuthorizationFault.description": "You do not have permission to publish to the SNS topic ARN.",
	"definitions.SNSNoAuthorizationFault.type": "object",
	"definitions.SNSTopicArnNotFoundFault.description": "The SNS topic ARN does not exist.",
	"definitions.SNSTopicArnNotFoundFault.type": "object",
	"definitions.SnapshotQuotaExceededFault.description": "Request would result in user exceeding the allowed number of DB snapshots.",
	"definitions.SnapshotQuotaExceededFault.type": "object",
	"definitions.SourceIdsList.items.$ref": "#/definitions/String",
	"definitions.SourceIdsList.type": "array",
	"definitions.SourceNotFoundFault.description": "The requested source could not be found.",
	"definitions.SourceNotFoundFault.type": "object",
	"definitions.SourceType.enum.length": 4,
	"definitions.SourceType.enum[0]": "db-instance",
	"definitions.SourceType.enum[1]": "db-parameter-group",
	"definitions.SourceType.enum[2]": "db-security-group",
	"definitions.SourceType.enum[3]": "db-snapshot",
	"definitions.SourceType.type": "string",
	"definitions.StorageQuotaExceededFault.description": "Request would result in user exceeding the allowed amount of storage available across all DB instances.",
	"definitions.StorageQuotaExceededFault.type": "object",
	"definitions.String.type": "string",
	"definitions.Subnet.properties.SubnetAvailabilityZone.$ref": "#/definitions/AvailabilityZone",
	"definitions.Subnet.properties.SubnetIdentifier.$ref": "#/definitions/String",
	"definitions.Subnet.properties.SubnetStatus.$ref": "#/definitions/String",
	"definitions.Subnet.type": "object",
	"definitions.SubnetAlreadyInUse.description": "The DB subnet is already in use in the Availability Zone.",
	"definitions.SubnetAlreadyInUse.type": "object",
	"definitions.SubnetIdentifierList.items.$ref": "#/definitions/String",
	"definitions.SubnetIdentifierList.type": "array",
	"definitions.SubnetList.items.$ref": "#/definitions/Subnet",
	"definitions.SubnetList.type": "array",
	"definitions.SubscriptionAlreadyExistFault.description": "The supplied subscription name already exists.",
	"definitions.SubscriptionAlreadyExistFault.type": "object",
	"definitions.SubscriptionCategoryNotFoundFault.description": "The supplied category does not exist.",
	"definitions.SubscriptionCategoryNotFoundFault.type": "object",
	"definitions.SubscriptionNotFoundFault.description": "The subscription name does not exist.",
	"definitions.SubscriptionNotFoundFault.type": "object",
	"definitions.SupportedCharacterSetsList.items.$ref": "#/definitions/CharacterSet",
	"definitions.SupportedCharacterSetsList.type": "array",
	"definitions.TStamp.format": "date-time",
	"definitions.TStamp.type": "string",
	"definitions.Tag.properties.Key.$ref": "#/definitions/String",
	"definitions.Tag.properties.Value.$ref": "#/definitions/String",
	"definitions.Tag.type": "object",
	"definitions.TagList.items.$ref": "#/definitions/Tag",
	"definitions.TagList.type": "array",
	"definitions.TagListMessage.properties.TagList.$ref": "#/definitions/TagList",
	"definitions.TagListMessage.type": "object",
	"definitions.VpcSecurityGroupIdList.items.$ref": "#/definitions/String",
	"definitions.VpcSecurityGroupIdList.type": "array",
	"definitions.VpcSecurityGroupMembership.properties.Status.$ref": "#/definitions/String",
	"definitions.VpcSecurityGroupMembership.properties.VpcSecurityGroupId.$ref": "#/definitions/String",
	"definitions.VpcSecurityGroupMembership.type": "object",
	"definitions.VpcSecurityGroupMembershipList.items.$ref": "#/definitions/VpcSecurityGroupMembership",
	"definitions.VpcSecurityGroupMembershipList.type": "array",
	"externalDocs.description": "Amazon Web Services documentation",
	"externalDocs.url": "https://aws.amazon.com/rds/",
	"host": "rds.amazonaws.com",
	"info.contact.email": "mike.ralphson@gmail.com",
	"info.contact.name": "Mike Ralphson",
	"info.contact.url": "https://github.com/mermade/aws2openapi",
	"info.license.name": "Apache 2.0 License",
	"info.license.url": "http://www.apache.org/licenses/",
	"info.termsOfService": "https://aws.amazon.com/service-terms/",
	"info.title": "Amazon Relational Database Service",
	"info.version": "2013-09-09",
	"info.x-apiClientRegistration.url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].contentType": "application/json",
	"info.x-origin[0].converter.url": "https://github.com/mermade/aws2openapi",
	"info.x-origin[0].converter.version": "1.0.0",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-09-09.normal.json",
	"info.x-origin[0].x-apisguru-direct": true,
	"info.x-preferred": false,
	"info.x-providerName": "amazonaws.com",
	"info.x-release": "v4",
	"info.x-serviceName": "rds",
	"parameters.Action.in": "header",
	"parameters.Action.name": "Action",
	"parameters.Action.required": true,
	"parameters.Action.type": "string",
	"parameters.Version.in": "header",
	"parameters.Version.name": "Version",
	"parameters.Version.required": true,
	"parameters.Version.type": "string",
	"parameters.X-Amz-Algorithm.in": "header",
	"parameters.X-Amz-Algorithm.name": "X-Amz-Algorithm",
	"parameters.X-Amz-Algorithm.required": false,
	"parameters.X-Amz-Algorithm.type": "string",
	"parameters.X-Amz-Content-Sha256.in": "header",
	"parameters.X-Amz-Content-Sha256.name": "X-Amz-Content-Sha256",
	"parameters.X-Amz-Content-Sha256.required": false,
	"parameters.X-Amz-Content-Sha256.type": "string",
	"parameters.X-Amz-Credential.in": "header",
	"parameters.X-Amz-Credential.name": "X-Amz-Credential",
	"parameters.X-Amz-Credential.required": false,
	"parameters.X-Amz-Credential.type": "string",
	"parameters.X-Amz-Date.in": "header",
	"parameters.X-Amz-Date.name": "X-Amz-Date",
	"parameters.X-Amz-Date.required": false,
	"parameters.X-Amz-Date.type": "string",
	"parameters.X-Amz-Security-Token.in": "header",
	"parameters.X-Amz-Security-Token.name": "X-Amz-Security-Token",
	"parameters.X-Amz-Security-Token.required": false,
	"parameters.X-Amz-Security-Token.type": "string",
	"parameters.X-Amz-Signature.in": "header",
	"parameters.X-Amz-Signature.name": "X-Amz-Signature",
	"parameters.X-Amz-Signature.required": false,
	"parameters.X-Amz-Signature.type": "string",
	"parameters.X-Amz-SignedHeaders.in": "header",
	"parameters.X-Amz-SignedHeaders.name": "X-Amz-SignedHeaders",
	"parameters.X-Amz-SignedHeaders.required": false,
	"parameters.X-Amz-SignedHeaders.type": "string",
	"paths./#AddTagsToResource.parameters.length": 9,
	"paths./#AddTagsToResource.parameters[0].$ref": "#/parameters/Action",
	"paths./#AddTagsToResource.parameters[1].$ref": "#/parameters/Version",
	"paths./#AddTagsToResource.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#AddTagsToResource.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#AddTagsToResource.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#AddTagsToResource.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#AddTagsToResource.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#AddTagsToResource.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#AddTagsToResource.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#AddTagsToResource.post.description": "",
	"paths./#AddTagsToResource.post.operationId": "AddTagsToResource",
	"paths./#AddTagsToResource.post.parameters.length": 1,
	"paths./#AddTagsToResource.post.parameters[0].in": "body",
	"paths./#AddTagsToResource.post.parameters[0].name": "body",
	"paths./#AddTagsToResource.post.parameters[0].required": true,
	"paths./#AddTagsToResource.post.parameters[0].schema.$ref": "#/definitions/AddTagsToResourceMessage",
	"paths./#AddTagsToResource.post.responses.200.description": "Success",
	"paths./#AddTagsToResource.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#AddTagsToResource.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#AddTagsToResource.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#AddTagsToResource.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters.length": 9,
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[0].$ref": "#/parameters/Action",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[1].$ref": "#/parameters/Version",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#AuthorizeDBSecurityGroupIngress.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#AuthorizeDBSecurityGroupIngress.post.description": "",
	"paths./#AuthorizeDBSecurityGroupIngress.post.operationId": "AuthorizeDBSecurityGroupIngress",
	"paths./#AuthorizeDBSecurityGroupIngress.post.parameters.length": 1,
	"paths./#AuthorizeDBSecurityGroupIngress.post.parameters[0].in": "body",
	"paths./#AuthorizeDBSecurityGroupIngress.post.parameters[0].name": "body",
	"paths./#AuthorizeDBSecurityGroupIngress.post.parameters[0].required": true,
	"paths./#AuthorizeDBSecurityGroupIngress.post.parameters[0].schema.$ref": "#/definitions/AuthorizeDBSecurityGroupIngressMessage",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.200.description": "Success",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.200.schema.$ref": "#/definitions/AuthorizeDBSecurityGroupIngressResult",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.480.description": "DBSecurityGroupNotFoundFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.480.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.481.description": "InvalidDBSecurityGroupStateFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.481.schema.$ref": "#/definitions/InvalidDBSecurityGroupStateFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.482.description": "AuthorizationAlreadyExistsFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.482.schema.$ref": "#/definitions/AuthorizationAlreadyExistsFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.483.description": "AuthorizationQuotaExceededFault",
	"paths./#AuthorizeDBSecurityGroupIngress.post.responses.483.schema.$ref": "#/definitions/AuthorizationQuotaExceededFault",
	"paths./#CopyDBSnapshot.parameters.length": 9,
	"paths./#CopyDBSnapshot.parameters[0].$ref": "#/parameters/Action",
	"paths./#CopyDBSnapshot.parameters[1].$ref": "#/parameters/Version",
	"paths./#CopyDBSnapshot.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CopyDBSnapshot.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CopyDBSnapshot.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CopyDBSnapshot.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CopyDBSnapshot.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CopyDBSnapshot.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CopyDBSnapshot.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CopyDBSnapshot.post.description": "",
	"paths./#CopyDBSnapshot.post.operationId": "CopyDBSnapshot",
	"paths./#CopyDBSnapshot.post.parameters.length": 1,
	"paths./#CopyDBSnapshot.post.parameters[0].in": "body",
	"paths./#CopyDBSnapshot.post.parameters[0].name": "body",
	"paths./#CopyDBSnapshot.post.parameters[0].required": true,
	"paths./#CopyDBSnapshot.post.parameters[0].schema.$ref": "#/definitions/CopyDBSnapshotMessage",
	"paths./#CopyDBSnapshot.post.responses.200.description": "Success",
	"paths./#CopyDBSnapshot.post.responses.200.schema.$ref": "#/definitions/CopyDBSnapshotResult",
	"paths./#CopyDBSnapshot.post.responses.480.description": "DBSnapshotAlreadyExistsFault",
	"paths./#CopyDBSnapshot.post.responses.480.schema.$ref": "#/definitions/DBSnapshotAlreadyExistsFault",
	"paths./#CopyDBSnapshot.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#CopyDBSnapshot.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#CopyDBSnapshot.post.responses.482.description": "InvalidDBSnapshotStateFault",
	"paths./#CopyDBSnapshot.post.responses.482.schema.$ref": "#/definitions/InvalidDBSnapshotStateFault",
	"paths./#CopyDBSnapshot.post.responses.483.description": "SnapshotQuotaExceededFault",
	"paths./#CopyDBSnapshot.post.responses.483.schema.$ref": "#/definitions/SnapshotQuotaExceededFault",
	"paths./#CreateDBInstance.parameters.length": 9,
	"paths./#CreateDBInstance.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBInstance.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBInstance.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBInstance.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBInstance.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBInstance.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBInstance.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBInstance.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBInstance.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBInstance.post.description": "",
	"paths./#CreateDBInstance.post.operationId": "CreateDBInstance",
	"paths./#CreateDBInstance.post.parameters.length": 1,
	"paths./#CreateDBInstance.post.parameters[0].in": "body",
	"paths./#CreateDBInstance.post.parameters[0].name": "body",
	"paths./#CreateDBInstance.post.parameters[0].required": true,
	"paths./#CreateDBInstance.post.parameters[0].schema.$ref": "#/definitions/CreateDBInstanceMessage",
	"paths./#CreateDBInstance.post.responses.200.description": "Success",
	"paths./#CreateDBInstance.post.responses.200.schema.$ref": "#/definitions/CreateDBInstanceResult",
	"paths./#CreateDBInstance.post.responses.480.description": "DBInstanceAlreadyExistsFault",
	"paths./#CreateDBInstance.post.responses.480.schema.$ref": "#/definitions/DBInstanceAlreadyExistsFault",
	"paths./#CreateDBInstance.post.responses.481.description": "InsufficientDBInstanceCapacityFault",
	"paths./#CreateDBInstance.post.responses.481.schema.$ref": "#/definitions/InsufficientDBInstanceCapacityFault",
	"paths./#CreateDBInstance.post.responses.482.description": "DBParameterGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.482.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.483.description": "DBSecurityGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.483.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.484.description": "InstanceQuotaExceededFault",
	"paths./#CreateDBInstance.post.responses.484.schema.$ref": "#/definitions/InstanceQuotaExceededFault",
	"paths./#CreateDBInstance.post.responses.485.description": "StorageQuotaExceededFault",
	"paths./#CreateDBInstance.post.responses.485.schema.$ref": "#/definitions/StorageQuotaExceededFault",
	"paths./#CreateDBInstance.post.responses.486.description": "DBSubnetGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.486.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.487.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBInstance.post.responses.487.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBInstance.post.responses.488.description": "InvalidSubnet",
	"paths./#CreateDBInstance.post.responses.488.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#CreateDBInstance.post.responses.489.description": "InvalidVPCNetworkStateFault",
	"paths./#CreateDBInstance.post.responses.489.schema.$ref": "#/definitions/InvalidVPCNetworkStateFault",
	"paths./#CreateDBInstance.post.responses.490.description": "ProvisionedIopsNotAvailableInAZFault",
	"paths./#CreateDBInstance.post.responses.490.schema.$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault",
	"paths./#CreateDBInstance.post.responses.491.description": "OptionGroupNotFoundFault",
	"paths./#CreateDBInstance.post.responses.491.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.parameters.length": 9,
	"paths./#CreateDBInstanceReadReplica.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBInstanceReadReplica.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBInstanceReadReplica.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBInstanceReadReplica.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBInstanceReadReplica.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBInstanceReadReplica.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBInstanceReadReplica.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBInstanceReadReplica.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBInstanceReadReplica.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBInstanceReadReplica.post.description": "",
	"paths./#CreateDBInstanceReadReplica.post.operationId": "CreateDBInstanceReadReplica",
	"paths./#CreateDBInstanceReadReplica.post.parameters.length": 1,
	"paths./#CreateDBInstanceReadReplica.post.parameters[0].in": "body",
	"paths./#CreateDBInstanceReadReplica.post.parameters[0].name": "body",
	"paths./#CreateDBInstanceReadReplica.post.parameters[0].required": true,
	"paths./#CreateDBInstanceReadReplica.post.parameters[0].schema.$ref": "#/definitions/CreateDBInstanceReadReplicaMessage",
	"paths./#CreateDBInstanceReadReplica.post.responses.200.description": "Success",
	"paths./#CreateDBInstanceReadReplica.post.responses.200.schema.$ref": "#/definitions/CreateDBInstanceReadReplicaResult",
	"paths./#CreateDBInstanceReadReplica.post.responses.480.description": "DBInstanceAlreadyExistsFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.480.schema.$ref": "#/definitions/DBInstanceAlreadyExistsFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.481.description": "InsufficientDBInstanceCapacityFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.481.schema.$ref": "#/definitions/InsufficientDBInstanceCapacityFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.482.description": "DBParameterGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.482.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.483.description": "DBSecurityGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.483.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.484.description": "InstanceQuotaExceededFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.484.schema.$ref": "#/definitions/InstanceQuotaExceededFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.485.description": "StorageQuotaExceededFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.485.schema.$ref": "#/definitions/StorageQuotaExceededFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.486.description": "DBInstanceNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.486.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.487.description": "InvalidDBInstanceStateFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.487.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.488.description": "DBSubnetGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.488.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.489.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBInstanceReadReplica.post.responses.489.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBInstanceReadReplica.post.responses.490.description": "InvalidSubnet",
	"paths./#CreateDBInstanceReadReplica.post.responses.490.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#CreateDBInstanceReadReplica.post.responses.491.description": "InvalidVPCNetworkStateFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.491.schema.$ref": "#/definitions/InvalidVPCNetworkStateFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.492.description": "ProvisionedIopsNotAvailableInAZFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.492.schema.$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.493.description": "OptionGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.493.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.494.description": "DBSubnetGroupNotAllowedFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.494.schema.$ref": "#/definitions/DBSubnetGroupNotAllowedFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.495.description": "InvalidDBSubnetGroupFault",
	"paths./#CreateDBInstanceReadReplica.post.responses.495.schema.$ref": "#/definitions/InvalidDBSubnetGroupFault",
	"paths./#CreateDBParameterGroup.parameters.length": 9,
	"paths./#CreateDBParameterGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBParameterGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBParameterGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBParameterGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBParameterGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBParameterGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBParameterGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBParameterGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBParameterGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBParameterGroup.post.description": "",
	"paths./#CreateDBParameterGroup.post.operationId": "CreateDBParameterGroup",
	"paths./#CreateDBParameterGroup.post.parameters.length": 1,
	"paths./#CreateDBParameterGroup.post.parameters[0].in": "body",
	"paths./#CreateDBParameterGroup.post.parameters[0].name": "body",
	"paths./#CreateDBParameterGroup.post.parameters[0].required": true,
	"paths./#CreateDBParameterGroup.post.parameters[0].schema.$ref": "#/definitions/CreateDBParameterGroupMessage",
	"paths./#CreateDBParameterGroup.post.responses.200.description": "Success",
	"paths./#CreateDBParameterGroup.post.responses.200.schema.$ref": "#/definitions/CreateDBParameterGroupResult",
	"paths./#CreateDBParameterGroup.post.responses.480.description": "DBParameterGroupQuotaExceededFault",
	"paths./#CreateDBParameterGroup.post.responses.480.schema.$ref": "#/definitions/DBParameterGroupQuotaExceededFault",
	"paths./#CreateDBParameterGroup.post.responses.481.description": "DBParameterGroupAlreadyExistsFault",
	"paths./#CreateDBParameterGroup.post.responses.481.schema.$ref": "#/definitions/DBParameterGroupAlreadyExistsFault",
	"paths./#CreateDBSecurityGroup.parameters.length": 9,
	"paths./#CreateDBSecurityGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBSecurityGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBSecurityGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBSecurityGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBSecurityGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBSecurityGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBSecurityGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBSecurityGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBSecurityGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBSecurityGroup.post.description": "",
	"paths./#CreateDBSecurityGroup.post.operationId": "CreateDBSecurityGroup",
	"paths./#CreateDBSecurityGroup.post.parameters.length": 1,
	"paths./#CreateDBSecurityGroup.post.parameters[0].in": "body",
	"paths./#CreateDBSecurityGroup.post.parameters[0].name": "body",
	"paths./#CreateDBSecurityGroup.post.parameters[0].required": true,
	"paths./#CreateDBSecurityGroup.post.parameters[0].schema.$ref": "#/definitions/CreateDBSecurityGroupMessage",
	"paths./#CreateDBSecurityGroup.post.responses.200.description": "Success",
	"paths./#CreateDBSecurityGroup.post.responses.200.schema.$ref": "#/definitions/CreateDBSecurityGroupResult",
	"paths./#CreateDBSecurityGroup.post.responses.480.description": "DBSecurityGroupAlreadyExistsFault",
	"paths./#CreateDBSecurityGroup.post.responses.480.schema.$ref": "#/definitions/DBSecurityGroupAlreadyExistsFault",
	"paths./#CreateDBSecurityGroup.post.responses.481.description": "DBSecurityGroupQuotaExceededFault",
	"paths./#CreateDBSecurityGroup.post.responses.481.schema.$ref": "#/definitions/DBSecurityGroupQuotaExceededFault",
	"paths./#CreateDBSecurityGroup.post.responses.482.description": "DBSecurityGroupNotSupportedFault",
	"paths./#CreateDBSecurityGroup.post.responses.482.schema.$ref": "#/definitions/DBSecurityGroupNotSupportedFault",
	"paths./#CreateDBSnapshot.parameters.length": 9,
	"paths./#CreateDBSnapshot.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBSnapshot.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBSnapshot.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBSnapshot.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBSnapshot.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBSnapshot.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBSnapshot.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBSnapshot.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBSnapshot.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBSnapshot.post.description": "",
	"paths./#CreateDBSnapshot.post.operationId": "CreateDBSnapshot",
	"paths./#CreateDBSnapshot.post.parameters.length": 1,
	"paths./#CreateDBSnapshot.post.parameters[0].in": "body",
	"paths./#CreateDBSnapshot.post.parameters[0].name": "body",
	"paths./#CreateDBSnapshot.post.parameters[0].required": true,
	"paths./#CreateDBSnapshot.post.parameters[0].schema.$ref": "#/definitions/CreateDBSnapshotMessage",
	"paths./#CreateDBSnapshot.post.responses.200.description": "Success",
	"paths./#CreateDBSnapshot.post.responses.200.schema.$ref": "#/definitions/CreateDBSnapshotResult",
	"paths./#CreateDBSnapshot.post.responses.480.description": "DBSnapshotAlreadyExistsFault",
	"paths./#CreateDBSnapshot.post.responses.480.schema.$ref": "#/definitions/DBSnapshotAlreadyExistsFault",
	"paths./#CreateDBSnapshot.post.responses.481.description": "InvalidDBInstanceStateFault",
	"paths./#CreateDBSnapshot.post.responses.481.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#CreateDBSnapshot.post.responses.482.description": "DBInstanceNotFoundFault",
	"paths./#CreateDBSnapshot.post.responses.482.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#CreateDBSnapshot.post.responses.483.description": "SnapshotQuotaExceededFault",
	"paths./#CreateDBSnapshot.post.responses.483.schema.$ref": "#/definitions/SnapshotQuotaExceededFault",
	"paths./#CreateDBSubnetGroup.parameters.length": 9,
	"paths./#CreateDBSubnetGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateDBSubnetGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateDBSubnetGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateDBSubnetGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateDBSubnetGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateDBSubnetGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateDBSubnetGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateDBSubnetGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateDBSubnetGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateDBSubnetGroup.post.description": "",
	"paths./#CreateDBSubnetGroup.post.operationId": "CreateDBSubnetGroup",
	"paths./#CreateDBSubnetGroup.post.parameters.length": 1,
	"paths./#CreateDBSubnetGroup.post.parameters[0].in": "body",
	"paths./#CreateDBSubnetGroup.post.parameters[0].name": "body",
	"paths./#CreateDBSubnetGroup.post.parameters[0].required": true,
	"paths./#CreateDBSubnetGroup.post.parameters[0].schema.$ref": "#/definitions/CreateDBSubnetGroupMessage",
	"paths./#CreateDBSubnetGroup.post.responses.200.description": "Success",
	"paths./#CreateDBSubnetGroup.post.responses.200.schema.$ref": "#/definitions/CreateDBSubnetGroupResult",
	"paths./#CreateDBSubnetGroup.post.responses.480.description": "DBSubnetGroupAlreadyExistsFault",
	"paths./#CreateDBSubnetGroup.post.responses.480.schema.$ref": "#/definitions/DBSubnetGroupAlreadyExistsFault",
	"paths./#CreateDBSubnetGroup.post.responses.481.description": "DBSubnetGroupQuotaExceededFault",
	"paths./#CreateDBSubnetGroup.post.responses.481.schema.$ref": "#/definitions/DBSubnetGroupQuotaExceededFault",
	"paths./#CreateDBSubnetGroup.post.responses.482.description": "DBSubnetQuotaExceededFault",
	"paths./#CreateDBSubnetGroup.post.responses.482.schema.$ref": "#/definitions/DBSubnetQuotaExceededFault",
	"paths./#CreateDBSubnetGroup.post.responses.483.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBSubnetGroup.post.responses.483.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#CreateDBSubnetGroup.post.responses.484.description": "InvalidSubnet",
	"paths./#CreateDBSubnetGroup.post.responses.484.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#CreateEventSubscription.parameters.length": 9,
	"paths./#CreateEventSubscription.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateEventSubscription.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateEventSubscription.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateEventSubscription.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateEventSubscription.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateEventSubscription.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateEventSubscription.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateEventSubscription.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateEventSubscription.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateEventSubscription.post.description": "",
	"paths./#CreateEventSubscription.post.operationId": "CreateEventSubscription",
	"paths./#CreateEventSubscription.post.parameters.length": 1,
	"paths./#CreateEventSubscription.post.parameters[0].in": "body",
	"paths./#CreateEventSubscription.post.parameters[0].name": "body",
	"paths./#CreateEventSubscription.post.parameters[0].required": true,
	"paths./#CreateEventSubscription.post.parameters[0].schema.$ref": "#/definitions/CreateEventSubscriptionMessage",
	"paths./#CreateEventSubscription.post.responses.200.description": "Success",
	"paths./#CreateEventSubscription.post.responses.200.schema.$ref": "#/definitions/CreateEventSubscriptionResult",
	"paths./#CreateEventSubscription.post.responses.480.description": "EventSubscriptionQuotaExceededFault",
	"paths./#CreateEventSubscription.post.responses.480.schema.$ref": "#/definitions/EventSubscriptionQuotaExceededFault",
	"paths./#CreateEventSubscription.post.responses.481.description": "SubscriptionAlreadyExistFault",
	"paths./#CreateEventSubscription.post.responses.481.schema.$ref": "#/definitions/SubscriptionAlreadyExistFault",
	"paths./#CreateEventSubscription.post.responses.482.description": "SNSInvalidTopicFault",
	"paths./#CreateEventSubscription.post.responses.482.schema.$ref": "#/definitions/SNSInvalidTopicFault",
	"paths./#CreateEventSubscription.post.responses.483.description": "SNSNoAuthorizationFault",
	"paths./#CreateEventSubscription.post.responses.483.schema.$ref": "#/definitions/SNSNoAuthorizationFault",
	"paths./#CreateEventSubscription.post.responses.484.description": "SNSTopicArnNotFoundFault",
	"paths./#CreateEventSubscription.post.responses.484.schema.$ref": "#/definitions/SNSTopicArnNotFoundFault",
	"paths./#CreateEventSubscription.post.responses.485.description": "SubscriptionCategoryNotFoundFault",
	"paths./#CreateEventSubscription.post.responses.485.schema.$ref": "#/definitions/SubscriptionCategoryNotFoundFault",
	"paths./#CreateEventSubscription.post.responses.486.description": "SourceNotFoundFault",
	"paths./#CreateEventSubscription.post.responses.486.schema.$ref": "#/definitions/SourceNotFoundFault",
	"paths./#CreateOptionGroup.parameters.length": 9,
	"paths./#CreateOptionGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateOptionGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateOptionGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateOptionGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateOptionGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateOptionGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateOptionGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateOptionGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateOptionGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateOptionGroup.post.description": "",
	"paths./#CreateOptionGroup.post.operationId": "CreateOptionGroup",
	"paths./#CreateOptionGroup.post.parameters.length": 1,
	"paths./#CreateOptionGroup.post.parameters[0].in": "body",
	"paths./#CreateOptionGroup.post.parameters[0].name": "body",
	"paths./#CreateOptionGroup.post.parameters[0].required": true,
	"paths./#CreateOptionGroup.post.parameters[0].schema.$ref": "#/definitions/CreateOptionGroupMessage",
	"paths./#CreateOptionGroup.post.responses.200.description": "Success",
	"paths./#CreateOptionGroup.post.responses.200.schema.$ref": "#/definitions/CreateOptionGroupResult",
	"paths./#CreateOptionGroup.post.responses.480.description": "OptionGroupAlreadyExistsFault",
	"paths./#CreateOptionGroup.post.responses.480.schema.$ref": "#/definitions/OptionGroupAlreadyExistsFault",
	"paths./#CreateOptionGroup.post.responses.481.description": "OptionGroupQuotaExceededFault",
	"paths./#CreateOptionGroup.post.responses.481.schema.$ref": "#/definitions/OptionGroupQuotaExceededFault",
	"paths./#DeleteDBInstance.parameters.length": 9,
	"paths./#DeleteDBInstance.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteDBInstance.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteDBInstance.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteDBInstance.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteDBInstance.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteDBInstance.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteDBInstance.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteDBInstance.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteDBInstance.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteDBInstance.post.description": "",
	"paths./#DeleteDBInstance.post.operationId": "DeleteDBInstance",
	"paths./#DeleteDBInstance.post.parameters.length": 1,
	"paths./#DeleteDBInstance.post.parameters[0].in": "body",
	"paths./#DeleteDBInstance.post.parameters[0].name": "body",
	"paths./#DeleteDBInstance.post.parameters[0].required": true,
	"paths./#DeleteDBInstance.post.parameters[0].schema.$ref": "#/definitions/DeleteDBInstanceMessage",
	"paths./#DeleteDBInstance.post.responses.200.description": "Success",
	"paths./#DeleteDBInstance.post.responses.200.schema.$ref": "#/definitions/DeleteDBInstanceResult",
	"paths./#DeleteDBInstance.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#DeleteDBInstance.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#DeleteDBInstance.post.responses.481.description": "InvalidDBInstanceStateFault",
	"paths./#DeleteDBInstance.post.responses.481.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#DeleteDBInstance.post.responses.482.description": "DBSnapshotAlreadyExistsFault",
	"paths./#DeleteDBInstance.post.responses.482.schema.$ref": "#/definitions/DBSnapshotAlreadyExistsFault",
	"paths./#DeleteDBInstance.post.responses.483.description": "SnapshotQuotaExceededFault",
	"paths./#DeleteDBInstance.post.responses.483.schema.$ref": "#/definitions/SnapshotQuotaExceededFault",
	"paths./#DeleteDBParameterGroup.parameters.length": 9,
	"paths./#DeleteDBParameterGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteDBParameterGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteDBParameterGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteDBParameterGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteDBParameterGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteDBParameterGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteDBParameterGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteDBParameterGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteDBParameterGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteDBParameterGroup.post.description": "",
	"paths./#DeleteDBParameterGroup.post.operationId": "DeleteDBParameterGroup",
	"paths./#DeleteDBParameterGroup.post.parameters.length": 1,
	"paths./#DeleteDBParameterGroup.post.parameters[0].in": "body",
	"paths./#DeleteDBParameterGroup.post.parameters[0].name": "body",
	"paths./#DeleteDBParameterGroup.post.parameters[0].required": true,
	"paths./#DeleteDBParameterGroup.post.parameters[0].schema.$ref": "#/definitions/DeleteDBParameterGroupMessage",
	"paths./#DeleteDBParameterGroup.post.responses.200.description": "Success",
	"paths./#DeleteDBParameterGroup.post.responses.480.description": "InvalidDBParameterGroupStateFault",
	"paths./#DeleteDBParameterGroup.post.responses.480.schema.$ref": "#/definitions/InvalidDBParameterGroupStateFault",
	"paths./#DeleteDBParameterGroup.post.responses.481.description": "DBParameterGroupNotFoundFault",
	"paths./#DeleteDBParameterGroup.post.responses.481.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#DeleteDBSecurityGroup.parameters.length": 9,
	"paths./#DeleteDBSecurityGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteDBSecurityGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteDBSecurityGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteDBSecurityGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteDBSecurityGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteDBSecurityGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteDBSecurityGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteDBSecurityGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteDBSecurityGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteDBSecurityGroup.post.description": "",
	"paths./#DeleteDBSecurityGroup.post.operationId": "DeleteDBSecurityGroup",
	"paths./#DeleteDBSecurityGroup.post.parameters.length": 1,
	"paths./#DeleteDBSecurityGroup.post.parameters[0].in": "body",
	"paths./#DeleteDBSecurityGroup.post.parameters[0].name": "body",
	"paths./#DeleteDBSecurityGroup.post.parameters[0].required": true,
	"paths./#DeleteDBSecurityGroup.post.parameters[0].schema.$ref": "#/definitions/DeleteDBSecurityGroupMessage",
	"paths./#DeleteDBSecurityGroup.post.responses.200.description": "Success",
	"paths./#DeleteDBSecurityGroup.post.responses.480.description": "InvalidDBSecurityGroupStateFault",
	"paths./#DeleteDBSecurityGroup.post.responses.480.schema.$ref": "#/definitions/InvalidDBSecurityGroupStateFault",
	"paths./#DeleteDBSecurityGroup.post.responses.481.description": "DBSecurityGroupNotFoundFault",
	"paths./#DeleteDBSecurityGroup.post.responses.481.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#DeleteDBSnapshot.parameters.length": 9,
	"paths./#DeleteDBSnapshot.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteDBSnapshot.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteDBSnapshot.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteDBSnapshot.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteDBSnapshot.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteDBSnapshot.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteDBSnapshot.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteDBSnapshot.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteDBSnapshot.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteDBSnapshot.post.description": "",
	"paths./#DeleteDBSnapshot.post.operationId": "DeleteDBSnapshot",
	"paths./#DeleteDBSnapshot.post.parameters.length": 1,
	"paths./#DeleteDBSnapshot.post.parameters[0].in": "body",
	"paths./#DeleteDBSnapshot.post.parameters[0].name": "body",
	"paths./#DeleteDBSnapshot.post.parameters[0].required": true,
	"paths./#DeleteDBSnapshot.post.parameters[0].schema.$ref": "#/definitions/DeleteDBSnapshotMessage",
	"paths./#DeleteDBSnapshot.post.responses.200.description": "Success",
	"paths./#DeleteDBSnapshot.post.responses.200.schema.$ref": "#/definitions/DeleteDBSnapshotResult",
	"paths./#DeleteDBSnapshot.post.responses.480.description": "InvalidDBSnapshotStateFault",
	"paths./#DeleteDBSnapshot.post.responses.480.schema.$ref": "#/definitions/InvalidDBSnapshotStateFault",
	"paths./#DeleteDBSnapshot.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#DeleteDBSnapshot.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#DeleteDBSubnetGroup.parameters.length": 9,
	"paths./#DeleteDBSubnetGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteDBSubnetGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteDBSubnetGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteDBSubnetGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteDBSubnetGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteDBSubnetGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteDBSubnetGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteDBSubnetGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteDBSubnetGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteDBSubnetGroup.post.description": "",
	"paths./#DeleteDBSubnetGroup.post.operationId": "DeleteDBSubnetGroup",
	"paths./#DeleteDBSubnetGroup.post.parameters.length": 1,
	"paths./#DeleteDBSubnetGroup.post.parameters[0].in": "body",
	"paths./#DeleteDBSubnetGroup.post.parameters[0].name": "body",
	"paths./#DeleteDBSubnetGroup.post.parameters[0].required": true,
	"paths./#DeleteDBSubnetGroup.post.parameters[0].schema.$ref": "#/definitions/DeleteDBSubnetGroupMessage",
	"paths./#DeleteDBSubnetGroup.post.responses.200.description": "Success",
	"paths./#DeleteDBSubnetGroup.post.responses.480.description": "InvalidDBSubnetGroupStateFault",
	"paths./#DeleteDBSubnetGroup.post.responses.480.schema.$ref": "#/definitions/InvalidDBSubnetGroupStateFault",
	"paths./#DeleteDBSubnetGroup.post.responses.481.description": "InvalidDBSubnetStateFault",
	"paths./#DeleteDBSubnetGroup.post.responses.481.schema.$ref": "#/definitions/InvalidDBSubnetStateFault",
	"paths./#DeleteDBSubnetGroup.post.responses.482.description": "DBSubnetGroupNotFoundFault",
	"paths./#DeleteDBSubnetGroup.post.responses.482.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#DeleteEventSubscription.parameters.length": 9,
	"paths./#DeleteEventSubscription.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteEventSubscription.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteEventSubscription.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteEventSubscription.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteEventSubscription.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteEventSubscription.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteEventSubscription.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteEventSubscription.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteEventSubscription.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteEventSubscription.post.description": "",
	"paths./#DeleteEventSubscription.post.operationId": "DeleteEventSubscription",
	"paths./#DeleteEventSubscription.post.parameters.length": 1,
	"paths./#DeleteEventSubscription.post.parameters[0].in": "body",
	"paths./#DeleteEventSubscription.post.parameters[0].name": "body",
	"paths./#DeleteEventSubscription.post.parameters[0].required": true,
	"paths./#DeleteEventSubscription.post.parameters[0].schema.$ref": "#/definitions/DeleteEventSubscriptionMessage",
	"paths./#DeleteEventSubscription.post.responses.200.description": "Success",
	"paths./#DeleteEventSubscription.post.responses.200.schema.$ref": "#/definitions/DeleteEventSubscriptionResult",
	"paths./#DeleteEventSubscription.post.responses.480.description": "SubscriptionNotFoundFault",
	"paths./#DeleteEventSubscription.post.responses.480.schema.$ref": "#/definitions/SubscriptionNotFoundFault",
	"paths./#DeleteEventSubscription.post.responses.481.description": "InvalidEventSubscriptionStateFault",
	"paths./#DeleteEventSubscription.post.responses.481.schema.$ref": "#/definitions/InvalidEventSubscriptionStateFault",
	"paths./#DeleteOptionGroup.parameters.length": 9,
	"paths./#DeleteOptionGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteOptionGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteOptionGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteOptionGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteOptionGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteOptionGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteOptionGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteOptionGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteOptionGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteOptionGroup.post.description": "",
	"paths./#DeleteOptionGroup.post.operationId": "DeleteOptionGroup",
	"paths./#DeleteOptionGroup.post.parameters.length": 1,
	"paths./#DeleteOptionGroup.post.parameters[0].in": "body",
	"paths./#DeleteOptionGroup.post.parameters[0].name": "body",
	"paths./#DeleteOptionGroup.post.parameters[0].required": true,
	"paths./#DeleteOptionGroup.post.parameters[0].schema.$ref": "#/definitions/DeleteOptionGroupMessage",
	"paths./#DeleteOptionGroup.post.responses.200.description": "Success",
	"paths./#DeleteOptionGroup.post.responses.480.description": "OptionGroupNotFoundFault",
	"paths./#DeleteOptionGroup.post.responses.480.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#DeleteOptionGroup.post.responses.481.description": "InvalidOptionGroupStateFault",
	"paths./#DeleteOptionGroup.post.responses.481.schema.$ref": "#/definitions/InvalidOptionGroupStateFault",
	"paths./#DescribeDBEngineVersions.parameters.length": 9,
	"paths./#DescribeDBEngineVersions.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBEngineVersions.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBEngineVersions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBEngineVersions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBEngineVersions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBEngineVersions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBEngineVersions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBEngineVersions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBEngineVersions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBEngineVersions.post.description": "",
	"paths./#DescribeDBEngineVersions.post.operationId": "DescribeDBEngineVersions",
	"paths./#DescribeDBEngineVersions.post.parameters.length": 3,
	"paths./#DescribeDBEngineVersions.post.parameters[0].in": "body",
	"paths./#DescribeDBEngineVersions.post.parameters[0].name": "body",
	"paths./#DescribeDBEngineVersions.post.parameters[0].required": true,
	"paths./#DescribeDBEngineVersions.post.parameters[0].schema.$ref": "#/definitions/DescribeDBEngineVersionsMessage",
	"paths./#DescribeDBEngineVersions.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBEngineVersions.post.parameters[1].in": "query",
	"paths./#DescribeDBEngineVersions.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBEngineVersions.post.parameters[1].required": false,
	"paths./#DescribeDBEngineVersions.post.parameters[1].type": "string",
	"paths./#DescribeDBEngineVersions.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBEngineVersions.post.parameters[2].in": "query",
	"paths./#DescribeDBEngineVersions.post.parameters[2].name": "Marker",
	"paths./#DescribeDBEngineVersions.post.parameters[2].required": false,
	"paths./#DescribeDBEngineVersions.post.parameters[2].type": "string",
	"paths./#DescribeDBEngineVersions.post.responses.200.description": "Success",
	"paths./#DescribeDBEngineVersions.post.responses.200.schema.$ref": "#/definitions/DBEngineVersionMessage",
	"paths./#DescribeDBInstances.parameters.length": 9,
	"paths./#DescribeDBInstances.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBInstances.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBInstances.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBInstances.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBInstances.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBInstances.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBInstances.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBInstances.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBInstances.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBInstances.post.description": "",
	"paths./#DescribeDBInstances.post.operationId": "DescribeDBInstances",
	"paths./#DescribeDBInstances.post.parameters.length": 3,
	"paths./#DescribeDBInstances.post.parameters[0].in": "body",
	"paths./#DescribeDBInstances.post.parameters[0].name": "body",
	"paths./#DescribeDBInstances.post.parameters[0].required": true,
	"paths./#DescribeDBInstances.post.parameters[0].schema.$ref": "#/definitions/DescribeDBInstancesMessage",
	"paths./#DescribeDBInstances.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBInstances.post.parameters[1].in": "query",
	"paths./#DescribeDBInstances.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBInstances.post.parameters[1].required": false,
	"paths./#DescribeDBInstances.post.parameters[1].type": "string",
	"paths./#DescribeDBInstances.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBInstances.post.parameters[2].in": "query",
	"paths./#DescribeDBInstances.post.parameters[2].name": "Marker",
	"paths./#DescribeDBInstances.post.parameters[2].required": false,
	"paths./#DescribeDBInstances.post.parameters[2].type": "string",
	"paths./#DescribeDBInstances.post.responses.200.description": "Success",
	"paths./#DescribeDBInstances.post.responses.200.schema.$ref": "#/definitions/DBInstanceMessage",
	"paths./#DescribeDBInstances.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#DescribeDBInstances.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#DescribeDBInstances.post.x-waiters.length": 2,
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors.length": 8,
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[0].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[0].expected": "available",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[0].matcher": "pathAll",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[0].state": "success",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[1].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[1].expected": "deleted",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[1].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[1].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[2].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[2].expected": "deleting",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[2].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[2].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[3].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[3].expected": "failed",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[3].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[3].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[4].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[4].expected": "incompatible-restore",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[4].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[4].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[5].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[5].expected": "incompatible-parameters",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[5].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[5].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[6].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[6].expected": "incompatible-parameters",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[6].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[6].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[7].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[7].expected": "incompatible-restore",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[7].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[0].acceptors[7].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[0].delay": 30,
	"paths./#DescribeDBInstances.post.x-waiters[0].maxAttempts": 60,
	"paths./#DescribeDBInstances.post.x-waiters[0].operation": "DescribeDBInstances",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors.length": 5,
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[0].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[0].expected": "deleted",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[0].matcher": "pathAll",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[0].state": "success",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[1].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[1].expected": "creating",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[1].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[1].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[2].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[2].expected": "modifying",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[2].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[2].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[3].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[3].expected": "rebooting",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[3].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[3].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[4].argument": "DBInstances[].DBInstanceStatus",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[4].expected": "resetting-master-credentials",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[4].matcher": "pathAny",
	"paths./#DescribeDBInstances.post.x-waiters[1].acceptors[4].state": "failure",
	"paths./#DescribeDBInstances.post.x-waiters[1].delay": 30,
	"paths./#DescribeDBInstances.post.x-waiters[1].maxAttempts": 60,
	"paths./#DescribeDBInstances.post.x-waiters[1].operation": "DescribeDBInstances",
	"paths./#DescribeDBLogFiles.parameters.length": 9,
	"paths./#DescribeDBLogFiles.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBLogFiles.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBLogFiles.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBLogFiles.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBLogFiles.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBLogFiles.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBLogFiles.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBLogFiles.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBLogFiles.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBLogFiles.post.description": "",
	"paths./#DescribeDBLogFiles.post.operationId": "DescribeDBLogFiles",
	"paths./#DescribeDBLogFiles.post.parameters.length": 3,
	"paths./#DescribeDBLogFiles.post.parameters[0].in": "body",
	"paths./#DescribeDBLogFiles.post.parameters[0].name": "body",
	"paths./#DescribeDBLogFiles.post.parameters[0].required": true,
	"paths./#DescribeDBLogFiles.post.parameters[0].schema.$ref": "#/definitions/DescribeDBLogFilesMessage",
	"paths./#DescribeDBLogFiles.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBLogFiles.post.parameters[1].in": "query",
	"paths./#DescribeDBLogFiles.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBLogFiles.post.parameters[1].required": false,
	"paths./#DescribeDBLogFiles.post.parameters[1].type": "string",
	"paths./#DescribeDBLogFiles.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBLogFiles.post.parameters[2].in": "query",
	"paths./#DescribeDBLogFiles.post.parameters[2].name": "Marker",
	"paths./#DescribeDBLogFiles.post.parameters[2].required": false,
	"paths./#DescribeDBLogFiles.post.parameters[2].type": "string",
	"paths./#DescribeDBLogFiles.post.responses.200.description": "Success",
	"paths./#DescribeDBLogFiles.post.responses.200.schema.$ref": "#/definitions/DescribeDBLogFilesResponse",
	"paths./#DescribeDBLogFiles.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#DescribeDBLogFiles.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#DescribeDBParameterGroups.parameters.length": 9,
	"paths./#DescribeDBParameterGroups.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBParameterGroups.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBParameterGroups.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBParameterGroups.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBParameterGroups.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBParameterGroups.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBParameterGroups.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBParameterGroups.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBParameterGroups.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBParameterGroups.post.description": "",
	"paths./#DescribeDBParameterGroups.post.operationId": "DescribeDBParameterGroups",
	"paths./#DescribeDBParameterGroups.post.parameters.length": 3,
	"paths./#DescribeDBParameterGroups.post.parameters[0].in": "body",
	"paths./#DescribeDBParameterGroups.post.parameters[0].name": "body",
	"paths./#DescribeDBParameterGroups.post.parameters[0].required": true,
	"paths./#DescribeDBParameterGroups.post.parameters[0].schema.$ref": "#/definitions/DescribeDBParameterGroupsMessage",
	"paths./#DescribeDBParameterGroups.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBParameterGroups.post.parameters[1].in": "query",
	"paths./#DescribeDBParameterGroups.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBParameterGroups.post.parameters[1].required": false,
	"paths./#DescribeDBParameterGroups.post.parameters[1].type": "string",
	"paths./#DescribeDBParameterGroups.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBParameterGroups.post.parameters[2].in": "query",
	"paths./#DescribeDBParameterGroups.post.parameters[2].name": "Marker",
	"paths./#DescribeDBParameterGroups.post.parameters[2].required": false,
	"paths./#DescribeDBParameterGroups.post.parameters[2].type": "string",
	"paths./#DescribeDBParameterGroups.post.responses.200.description": "Success",
	"paths./#DescribeDBParameterGroups.post.responses.200.schema.$ref": "#/definitions/DBParameterGroupsMessage",
	"paths./#DescribeDBParameterGroups.post.responses.480.description": "DBParameterGroupNotFoundFault",
	"paths./#DescribeDBParameterGroups.post.responses.480.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#DescribeDBParameters.parameters.length": 9,
	"paths./#DescribeDBParameters.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBParameters.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBParameters.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBParameters.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBParameters.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBParameters.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBParameters.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBParameters.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBParameters.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBParameters.post.description": "",
	"paths./#DescribeDBParameters.post.operationId": "DescribeDBParameters",
	"paths./#DescribeDBParameters.post.parameters.length": 3,
	"paths./#DescribeDBParameters.post.parameters[0].in": "body",
	"paths./#DescribeDBParameters.post.parameters[0].name": "body",
	"paths./#DescribeDBParameters.post.parameters[0].required": true,
	"paths./#DescribeDBParameters.post.parameters[0].schema.$ref": "#/definitions/DescribeDBParametersMessage",
	"paths./#DescribeDBParameters.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBParameters.post.parameters[1].in": "query",
	"paths./#DescribeDBParameters.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBParameters.post.parameters[1].required": false,
	"paths./#DescribeDBParameters.post.parameters[1].type": "string",
	"paths./#DescribeDBParameters.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBParameters.post.parameters[2].in": "query",
	"paths./#DescribeDBParameters.post.parameters[2].name": "Marker",
	"paths./#DescribeDBParameters.post.parameters[2].required": false,
	"paths./#DescribeDBParameters.post.parameters[2].type": "string",
	"paths./#DescribeDBParameters.post.responses.200.description": "Success",
	"paths./#DescribeDBParameters.post.responses.200.schema.$ref": "#/definitions/DBParameterGroupDetails",
	"paths./#DescribeDBParameters.post.responses.480.description": "DBParameterGroupNotFoundFault",
	"paths./#DescribeDBParameters.post.responses.480.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#DescribeDBSecurityGroups.parameters.length": 9,
	"paths./#DescribeDBSecurityGroups.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBSecurityGroups.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBSecurityGroups.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBSecurityGroups.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBSecurityGroups.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBSecurityGroups.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBSecurityGroups.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBSecurityGroups.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBSecurityGroups.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBSecurityGroups.post.description": "",
	"paths./#DescribeDBSecurityGroups.post.operationId": "DescribeDBSecurityGroups",
	"paths./#DescribeDBSecurityGroups.post.parameters.length": 3,
	"paths./#DescribeDBSecurityGroups.post.parameters[0].in": "body",
	"paths./#DescribeDBSecurityGroups.post.parameters[0].name": "body",
	"paths./#DescribeDBSecurityGroups.post.parameters[0].required": true,
	"paths./#DescribeDBSecurityGroups.post.parameters[0].schema.$ref": "#/definitions/DescribeDBSecurityGroupsMessage",
	"paths./#DescribeDBSecurityGroups.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBSecurityGroups.post.parameters[1].in": "query",
	"paths./#DescribeDBSecurityGroups.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBSecurityGroups.post.parameters[1].required": false,
	"paths./#DescribeDBSecurityGroups.post.parameters[1].type": "string",
	"paths./#DescribeDBSecurityGroups.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBSecurityGroups.post.parameters[2].in": "query",
	"paths./#DescribeDBSecurityGroups.post.parameters[2].name": "Marker",
	"paths./#DescribeDBSecurityGroups.post.parameters[2].required": false,
	"paths./#DescribeDBSecurityGroups.post.parameters[2].type": "string",
	"paths./#DescribeDBSecurityGroups.post.responses.200.description": "Success",
	"paths./#DescribeDBSecurityGroups.post.responses.200.schema.$ref": "#/definitions/DBSecurityGroupMessage",
	"paths./#DescribeDBSecurityGroups.post.responses.480.description": "DBSecurityGroupNotFoundFault",
	"paths./#DescribeDBSecurityGroups.post.responses.480.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#DescribeDBSnapshots.parameters.length": 9,
	"paths./#DescribeDBSnapshots.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBSnapshots.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBSnapshots.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBSnapshots.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBSnapshots.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBSnapshots.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBSnapshots.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBSnapshots.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBSnapshots.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBSnapshots.post.description": "",
	"paths./#DescribeDBSnapshots.post.operationId": "DescribeDBSnapshots",
	"paths./#DescribeDBSnapshots.post.parameters.length": 3,
	"paths./#DescribeDBSnapshots.post.parameters[0].in": "body",
	"paths./#DescribeDBSnapshots.post.parameters[0].name": "body",
	"paths./#DescribeDBSnapshots.post.parameters[0].required": true,
	"paths./#DescribeDBSnapshots.post.parameters[0].schema.$ref": "#/definitions/DescribeDBSnapshotsMessage",
	"paths./#DescribeDBSnapshots.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBSnapshots.post.parameters[1].in": "query",
	"paths./#DescribeDBSnapshots.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBSnapshots.post.parameters[1].required": false,
	"paths./#DescribeDBSnapshots.post.parameters[1].type": "string",
	"paths./#DescribeDBSnapshots.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBSnapshots.post.parameters[2].in": "query",
	"paths./#DescribeDBSnapshots.post.parameters[2].name": "Marker",
	"paths./#DescribeDBSnapshots.post.parameters[2].required": false,
	"paths./#DescribeDBSnapshots.post.parameters[2].type": "string",
	"paths./#DescribeDBSnapshots.post.responses.200.description": "Success",
	"paths./#DescribeDBSnapshots.post.responses.200.schema.$ref": "#/definitions/DBSnapshotMessage",
	"paths./#DescribeDBSnapshots.post.responses.480.description": "DBSnapshotNotFoundFault",
	"paths./#DescribeDBSnapshots.post.responses.480.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#DescribeDBSubnetGroups.parameters.length": 9,
	"paths./#DescribeDBSubnetGroups.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeDBSubnetGroups.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeDBSubnetGroups.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeDBSubnetGroups.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeDBSubnetGroups.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeDBSubnetGroups.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeDBSubnetGroups.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeDBSubnetGroups.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeDBSubnetGroups.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeDBSubnetGroups.post.description": "",
	"paths./#DescribeDBSubnetGroups.post.operationId": "DescribeDBSubnetGroups",
	"paths./#DescribeDBSubnetGroups.post.parameters.length": 3,
	"paths./#DescribeDBSubnetGroups.post.parameters[0].in": "body",
	"paths./#DescribeDBSubnetGroups.post.parameters[0].name": "body",
	"paths./#DescribeDBSubnetGroups.post.parameters[0].required": true,
	"paths./#DescribeDBSubnetGroups.post.parameters[0].schema.$ref": "#/definitions/DescribeDBSubnetGroupsMessage",
	"paths./#DescribeDBSubnetGroups.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeDBSubnetGroups.post.parameters[1].in": "query",
	"paths./#DescribeDBSubnetGroups.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeDBSubnetGroups.post.parameters[1].required": false,
	"paths./#DescribeDBSubnetGroups.post.parameters[1].type": "string",
	"paths./#DescribeDBSubnetGroups.post.parameters[2].description": "Pagination token",
	"paths./#DescribeDBSubnetGroups.post.parameters[2].in": "query",
	"paths./#DescribeDBSubnetGroups.post.parameters[2].name": "Marker",
	"paths./#DescribeDBSubnetGroups.post.parameters[2].required": false,
	"paths./#DescribeDBSubnetGroups.post.parameters[2].type": "string",
	"paths./#DescribeDBSubnetGroups.post.responses.200.description": "Success",
	"paths./#DescribeDBSubnetGroups.post.responses.200.schema.$ref": "#/definitions/DBSubnetGroupMessage",
	"paths./#DescribeDBSubnetGroups.post.responses.480.description": "DBSubnetGroupNotFoundFault",
	"paths./#DescribeDBSubnetGroups.post.responses.480.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#DescribeEngineDefaultParameters.parameters.length": 9,
	"paths./#DescribeEngineDefaultParameters.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeEngineDefaultParameters.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeEngineDefaultParameters.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeEngineDefaultParameters.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeEngineDefaultParameters.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeEngineDefaultParameters.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeEngineDefaultParameters.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeEngineDefaultParameters.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeEngineDefaultParameters.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeEngineDefaultParameters.post.description": "",
	"paths./#DescribeEngineDefaultParameters.post.operationId": "DescribeEngineDefaultParameters",
	"paths./#DescribeEngineDefaultParameters.post.parameters.length": 3,
	"paths./#DescribeEngineDefaultParameters.post.parameters[0].in": "body",
	"paths./#DescribeEngineDefaultParameters.post.parameters[0].name": "body",
	"paths./#DescribeEngineDefaultParameters.post.parameters[0].required": true,
	"paths./#DescribeEngineDefaultParameters.post.parameters[0].schema.$ref": "#/definitions/DescribeEngineDefaultParametersMessage",
	"paths./#DescribeEngineDefaultParameters.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeEngineDefaultParameters.post.parameters[1].in": "query",
	"paths./#DescribeEngineDefaultParameters.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeEngineDefaultParameters.post.parameters[1].required": false,
	"paths./#DescribeEngineDefaultParameters.post.parameters[1].type": "string",
	"paths./#DescribeEngineDefaultParameters.post.parameters[2].description": "Pagination token",
	"paths./#DescribeEngineDefaultParameters.post.parameters[2].in": "query",
	"paths./#DescribeEngineDefaultParameters.post.parameters[2].name": "Marker",
	"paths./#DescribeEngineDefaultParameters.post.parameters[2].required": false,
	"paths./#DescribeEngineDefaultParameters.post.parameters[2].type": "string",
	"paths./#DescribeEngineDefaultParameters.post.responses.200.description": "Success",
	"paths./#DescribeEngineDefaultParameters.post.responses.200.schema.$ref": "#/definitions/DescribeEngineDefaultParametersResult",
	"paths./#DescribeEventCategories.parameters.length": 9,
	"paths./#DescribeEventCategories.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeEventCategories.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeEventCategories.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeEventCategories.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeEventCategories.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeEventCategories.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeEventCategories.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeEventCategories.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeEventCategories.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeEventCategories.post.description": "",
	"paths./#DescribeEventCategories.post.operationId": "DescribeEventCategories",
	"paths./#DescribeEventCategories.post.parameters.length": 1,
	"paths./#DescribeEventCategories.post.parameters[0].in": "body",
	"paths./#DescribeEventCategories.post.parameters[0].name": "body",
	"paths./#DescribeEventCategories.post.parameters[0].required": true,
	"paths./#DescribeEventCategories.post.parameters[0].schema.$ref": "#/definitions/DescribeEventCategoriesMessage",
	"paths./#DescribeEventCategories.post.responses.200.description": "Success",
	"paths./#DescribeEventCategories.post.responses.200.schema.$ref": "#/definitions/EventCategoriesMessage",
	"paths./#DescribeEventSubscriptions.parameters.length": 9,
	"paths./#DescribeEventSubscriptions.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeEventSubscriptions.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeEventSubscriptions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeEventSubscriptions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeEventSubscriptions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeEventSubscriptions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeEventSubscriptions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeEventSubscriptions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeEventSubscriptions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeEventSubscriptions.post.description": "",
	"paths./#DescribeEventSubscriptions.post.operationId": "DescribeEventSubscriptions",
	"paths./#DescribeEventSubscriptions.post.parameters.length": 3,
	"paths./#DescribeEventSubscriptions.post.parameters[0].in": "body",
	"paths./#DescribeEventSubscriptions.post.parameters[0].name": "body",
	"paths./#DescribeEventSubscriptions.post.parameters[0].required": true,
	"paths./#DescribeEventSubscriptions.post.parameters[0].schema.$ref": "#/definitions/DescribeEventSubscriptionsMessage",
	"paths./#DescribeEventSubscriptions.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeEventSubscriptions.post.parameters[1].in": "query",
	"paths./#DescribeEventSubscriptions.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeEventSubscriptions.post.parameters[1].required": false,
	"paths./#DescribeEventSubscriptions.post.parameters[1].type": "string",
	"paths./#DescribeEventSubscriptions.post.parameters[2].description": "Pagination token",
	"paths./#DescribeEventSubscriptions.post.parameters[2].in": "query",
	"paths./#DescribeEventSubscriptions.post.parameters[2].name": "Marker",
	"paths./#DescribeEventSubscriptions.post.parameters[2].required": false,
	"paths./#DescribeEventSubscriptions.post.parameters[2].type": "string",
	"paths./#DescribeEventSubscriptions.post.responses.200.description": "Success",
	"paths./#DescribeEventSubscriptions.post.responses.200.schema.$ref": "#/definitions/EventSubscriptionsMessage",
	"paths./#DescribeEventSubscriptions.post.responses.480.description": "SubscriptionNotFoundFault",
	"paths./#DescribeEventSubscriptions.post.responses.480.schema.$ref": "#/definitions/SubscriptionNotFoundFault",
	"paths./#DescribeEvents.parameters.length": 9,
	"paths./#DescribeEvents.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeEvents.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeEvents.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeEvents.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeEvents.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeEvents.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeEvents.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeEvents.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeEvents.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeEvents.post.description": "",
	"paths./#DescribeEvents.post.operationId": "DescribeEvents",
	"paths./#DescribeEvents.post.parameters.length": 3,
	"paths./#DescribeEvents.post.parameters[0].in": "body",
	"paths./#DescribeEvents.post.parameters[0].name": "body",
	"paths./#DescribeEvents.post.parameters[0].required": true,
	"paths./#DescribeEvents.post.parameters[0].schema.$ref": "#/definitions/DescribeEventsMessage",
	"paths./#DescribeEvents.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeEvents.post.parameters[1].in": "query",
	"paths./#DescribeEvents.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeEvents.post.parameters[1].required": false,
	"paths./#DescribeEvents.post.parameters[1].type": "string",
	"paths./#DescribeEvents.post.parameters[2].description": "Pagination token",
	"paths./#DescribeEvents.post.parameters[2].in": "query",
	"paths./#DescribeEvents.post.parameters[2].name": "Marker",
	"paths./#DescribeEvents.post.parameters[2].required": false,
	"paths./#DescribeEvents.post.parameters[2].type": "string",
	"paths./#DescribeEvents.post.responses.200.description": "Success",
	"paths./#DescribeEvents.post.responses.200.schema.$ref": "#/definitions/EventsMessage",
	"paths./#DescribeOptionGroupOptions.parameters.length": 9,
	"paths./#DescribeOptionGroupOptions.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeOptionGroupOptions.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeOptionGroupOptions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeOptionGroupOptions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeOptionGroupOptions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeOptionGroupOptions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeOptionGroupOptions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeOptionGroupOptions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeOptionGroupOptions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeOptionGroupOptions.post.description": "",
	"paths./#DescribeOptionGroupOptions.post.operationId": "DescribeOptionGroupOptions",
	"paths./#DescribeOptionGroupOptions.post.parameters.length": 3,
	"paths./#DescribeOptionGroupOptions.post.parameters[0].in": "body",
	"paths./#DescribeOptionGroupOptions.post.parameters[0].name": "body",
	"paths./#DescribeOptionGroupOptions.post.parameters[0].required": true,
	"paths./#DescribeOptionGroupOptions.post.parameters[0].schema.$ref": "#/definitions/DescribeOptionGroupOptionsMessage",
	"paths./#DescribeOptionGroupOptions.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeOptionGroupOptions.post.parameters[1].in": "query",
	"paths./#DescribeOptionGroupOptions.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeOptionGroupOptions.post.parameters[1].required": false,
	"paths./#DescribeOptionGroupOptions.post.parameters[1].type": "string",
	"paths./#DescribeOptionGroupOptions.post.parameters[2].description": "Pagination token",
	"paths./#DescribeOptionGroupOptions.post.parameters[2].in": "query",
	"paths./#DescribeOptionGroupOptions.post.parameters[2].name": "Marker",
	"paths./#DescribeOptionGroupOptions.post.parameters[2].required": false,
	"paths./#DescribeOptionGroupOptions.post.parameters[2].type": "string",
	"paths./#DescribeOptionGroupOptions.post.responses.200.description": "Success",
	"paths./#DescribeOptionGroupOptions.post.responses.200.schema.$ref": "#/definitions/OptionGroupOptionsMessage",
	"paths./#DescribeOptionGroups.parameters.length": 9,
	"paths./#DescribeOptionGroups.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeOptionGroups.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeOptionGroups.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeOptionGroups.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeOptionGroups.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeOptionGroups.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeOptionGroups.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeOptionGroups.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeOptionGroups.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeOptionGroups.post.description": "",
	"paths./#DescribeOptionGroups.post.operationId": "DescribeOptionGroups",
	"paths./#DescribeOptionGroups.post.parameters.length": 3,
	"paths./#DescribeOptionGroups.post.parameters[0].in": "body",
	"paths./#DescribeOptionGroups.post.parameters[0].name": "body",
	"paths./#DescribeOptionGroups.post.parameters[0].required": true,
	"paths./#DescribeOptionGroups.post.parameters[0].schema.$ref": "#/definitions/DescribeOptionGroupsMessage",
	"paths./#DescribeOptionGroups.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeOptionGroups.post.parameters[1].in": "query",
	"paths./#DescribeOptionGroups.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeOptionGroups.post.parameters[1].required": false,
	"paths./#DescribeOptionGroups.post.parameters[1].type": "string",
	"paths./#DescribeOptionGroups.post.parameters[2].description": "Pagination token",
	"paths./#DescribeOptionGroups.post.parameters[2].in": "query",
	"paths./#DescribeOptionGroups.post.parameters[2].name": "Marker",
	"paths./#DescribeOptionGroups.post.parameters[2].required": false,
	"paths./#DescribeOptionGroups.post.parameters[2].type": "string",
	"paths./#DescribeOptionGroups.post.responses.200.description": "Success",
	"paths./#DescribeOptionGroups.post.responses.200.schema.$ref": "#/definitions/OptionGroups",
	"paths./#DescribeOptionGroups.post.responses.480.description": "OptionGroupNotFoundFault",
	"paths./#DescribeOptionGroups.post.responses.480.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#DescribeOrderableDBInstanceOptions.parameters.length": 9,
	"paths./#DescribeOrderableDBInstanceOptions.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeOrderableDBInstanceOptions.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeOrderableDBInstanceOptions.post.description": "",
	"paths./#DescribeOrderableDBInstanceOptions.post.operationId": "DescribeOrderableDBInstanceOptions",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters.length": 3,
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[0].in": "body",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[0].name": "body",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[0].required": true,
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[0].schema.$ref": "#/definitions/DescribeOrderableDBInstanceOptionsMessage",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[1].in": "query",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[1].required": false,
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[1].type": "string",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[2].description": "Pagination token",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[2].in": "query",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[2].name": "Marker",
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[2].required": false,
	"paths./#DescribeOrderableDBInstanceOptions.post.parameters[2].type": "string",
	"paths./#DescribeOrderableDBInstanceOptions.post.responses.200.description": "Success",
	"paths./#DescribeOrderableDBInstanceOptions.post.responses.200.schema.$ref": "#/definitions/OrderableDBInstanceOptionsMessage",
	"paths./#DescribeReservedDBInstances.parameters.length": 9,
	"paths./#DescribeReservedDBInstances.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeReservedDBInstances.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeReservedDBInstances.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeReservedDBInstances.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeReservedDBInstances.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeReservedDBInstances.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeReservedDBInstances.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeReservedDBInstances.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeReservedDBInstances.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeReservedDBInstances.post.description": "",
	"paths./#DescribeReservedDBInstances.post.operationId": "DescribeReservedDBInstances",
	"paths./#DescribeReservedDBInstances.post.parameters.length": 3,
	"paths./#DescribeReservedDBInstances.post.parameters[0].in": "body",
	"paths./#DescribeReservedDBInstances.post.parameters[0].name": "body",
	"paths./#DescribeReservedDBInstances.post.parameters[0].required": true,
	"paths./#DescribeReservedDBInstances.post.parameters[0].schema.$ref": "#/definitions/DescribeReservedDBInstancesMessage",
	"paths./#DescribeReservedDBInstances.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeReservedDBInstances.post.parameters[1].in": "query",
	"paths./#DescribeReservedDBInstances.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeReservedDBInstances.post.parameters[1].required": false,
	"paths./#DescribeReservedDBInstances.post.parameters[1].type": "string",
	"paths./#DescribeReservedDBInstances.post.parameters[2].description": "Pagination token",
	"paths./#DescribeReservedDBInstances.post.parameters[2].in": "query",
	"paths./#DescribeReservedDBInstances.post.parameters[2].name": "Marker",
	"paths./#DescribeReservedDBInstances.post.parameters[2].required": false,
	"paths./#DescribeReservedDBInstances.post.parameters[2].type": "string",
	"paths./#DescribeReservedDBInstances.post.responses.200.description": "Success",
	"paths./#DescribeReservedDBInstances.post.responses.200.schema.$ref": "#/definitions/ReservedDBInstanceMessage",
	"paths./#DescribeReservedDBInstances.post.responses.480.description": "ReservedDBInstanceNotFoundFault",
	"paths./#DescribeReservedDBInstances.post.responses.480.schema.$ref": "#/definitions/ReservedDBInstanceNotFoundFault",
	"paths./#DescribeReservedDBInstancesOfferings.parameters.length": 9,
	"paths./#DescribeReservedDBInstancesOfferings.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeReservedDBInstancesOfferings.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeReservedDBInstancesOfferings.post.description": "",
	"paths./#DescribeReservedDBInstancesOfferings.post.operationId": "DescribeReservedDBInstancesOfferings",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters.length": 3,
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[0].in": "body",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[0].name": "body",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[0].required": true,
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[0].schema.$ref": "#/definitions/DescribeReservedDBInstancesOfferingsMessage",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[1].description": "Pagination limit",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[1].in": "query",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[1].name": "MaxRecords",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[1].required": false,
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[1].type": "string",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[2].description": "Pagination token",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[2].in": "query",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[2].name": "Marker",
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[2].required": false,
	"paths./#DescribeReservedDBInstancesOfferings.post.parameters[2].type": "string",
	"paths./#DescribeReservedDBInstancesOfferings.post.responses.200.description": "Success",
	"paths./#DescribeReservedDBInstancesOfferings.post.responses.200.schema.$ref": "#/definitions/ReservedDBInstancesOfferingMessage",
	"paths./#DescribeReservedDBInstancesOfferings.post.responses.480.description": "ReservedDBInstancesOfferingNotFoundFault",
	"paths./#DescribeReservedDBInstancesOfferings.post.responses.480.schema.$ref": "#/definitions/ReservedDBInstancesOfferingNotFoundFault",
	"paths./#DownloadDBLogFilePortion.parameters.length": 9,
	"paths./#DownloadDBLogFilePortion.parameters[0].$ref": "#/parameters/Action",
	"paths./#DownloadDBLogFilePortion.parameters[1].$ref": "#/parameters/Version",
	"paths./#DownloadDBLogFilePortion.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DownloadDBLogFilePortion.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DownloadDBLogFilePortion.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DownloadDBLogFilePortion.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DownloadDBLogFilePortion.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DownloadDBLogFilePortion.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DownloadDBLogFilePortion.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DownloadDBLogFilePortion.post.description": "",
	"paths./#DownloadDBLogFilePortion.post.operationId": "DownloadDBLogFilePortion",
	"paths./#DownloadDBLogFilePortion.post.parameters.length": 3,
	"paths./#DownloadDBLogFilePortion.post.parameters[0].in": "body",
	"paths./#DownloadDBLogFilePortion.post.parameters[0].name": "body",
	"paths./#DownloadDBLogFilePortion.post.parameters[0].required": true,
	"paths./#DownloadDBLogFilePortion.post.parameters[0].schema.$ref": "#/definitions/DownloadDBLogFilePortionMessage",
	"paths./#DownloadDBLogFilePortion.post.parameters[1].description": "Pagination limit",
	"paths./#DownloadDBLogFilePortion.post.parameters[1].in": "query",
	"paths./#DownloadDBLogFilePortion.post.parameters[1].name": "NumberOfLines",
	"paths./#DownloadDBLogFilePortion.post.parameters[1].required": false,
	"paths./#DownloadDBLogFilePortion.post.parameters[1].type": "string",
	"paths./#DownloadDBLogFilePortion.post.parameters[2].description": "Pagination token",
	"paths./#DownloadDBLogFilePortion.post.parameters[2].in": "query",
	"paths./#DownloadDBLogFilePortion.post.parameters[2].name": "Marker",
	"paths./#DownloadDBLogFilePortion.post.parameters[2].required": false,
	"paths./#DownloadDBLogFilePortion.post.parameters[2].type": "string",
	"paths./#DownloadDBLogFilePortion.post.responses.200.description": "Success",
	"paths./#DownloadDBLogFilePortion.post.responses.200.schema.$ref": "#/definitions/DownloadDBLogFilePortionDetails",
	"paths./#DownloadDBLogFilePortion.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#DownloadDBLogFilePortion.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#DownloadDBLogFilePortion.post.responses.481.description": "DBLogFileNotFoundFault",
	"paths./#DownloadDBLogFilePortion.post.responses.481.schema.$ref": "#/definitions/DBLogFileNotFoundFault",
	"paths./#ListTagsForResource.parameters.length": 9,
	"paths./#ListTagsForResource.parameters[0].$ref": "#/parameters/Action",
	"paths./#ListTagsForResource.parameters[1].$ref": "#/parameters/Version",
	"paths./#ListTagsForResource.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ListTagsForResource.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ListTagsForResource.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ListTagsForResource.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ListTagsForResource.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ListTagsForResource.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ListTagsForResource.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ListTagsForResource.post.description": "",
	"paths./#ListTagsForResource.post.operationId": "ListTagsForResource",
	"paths./#ListTagsForResource.post.parameters.length": 1,
	"paths./#ListTagsForResource.post.parameters[0].in": "body",
	"paths./#ListTagsForResource.post.parameters[0].name": "body",
	"paths./#ListTagsForResource.post.parameters[0].required": true,
	"paths./#ListTagsForResource.post.parameters[0].schema.$ref": "#/definitions/ListTagsForResourceMessage",
	"paths./#ListTagsForResource.post.responses.200.description": "Success",
	"paths./#ListTagsForResource.post.responses.200.schema.$ref": "#/definitions/TagListMessage",
	"paths./#ListTagsForResource.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#ListTagsForResource.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#ListTagsForResource.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#ListTagsForResource.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#ModifyDBInstance.parameters.length": 9,
	"paths./#ModifyDBInstance.parameters[0].$ref": "#/parameters/Action",
	"paths./#ModifyDBInstance.parameters[1].$ref": "#/parameters/Version",
	"paths./#ModifyDBInstance.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ModifyDBInstance.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ModifyDBInstance.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ModifyDBInstance.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ModifyDBInstance.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ModifyDBInstance.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ModifyDBInstance.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ModifyDBInstance.post.description": "",
	"paths./#ModifyDBInstance.post.operationId": "ModifyDBInstance",
	"paths./#ModifyDBInstance.post.parameters.length": 1,
	"paths./#ModifyDBInstance.post.parameters[0].in": "body",
	"paths./#ModifyDBInstance.post.parameters[0].name": "body",
	"paths./#ModifyDBInstance.post.parameters[0].required": true,
	"paths./#ModifyDBInstance.post.parameters[0].schema.$ref": "#/definitions/ModifyDBInstanceMessage",
	"paths./#ModifyDBInstance.post.responses.200.description": "Success",
	"paths./#ModifyDBInstance.post.responses.200.schema.$ref": "#/definitions/ModifyDBInstanceResult",
	"paths./#ModifyDBInstance.post.responses.480.description": "InvalidDBInstanceStateFault",
	"paths./#ModifyDBInstance.post.responses.480.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#ModifyDBInstance.post.responses.481.description": "InvalidDBSecurityGroupStateFault",
	"paths./#ModifyDBInstance.post.responses.481.schema.$ref": "#/definitions/InvalidDBSecurityGroupStateFault",
	"paths./#ModifyDBInstance.post.responses.482.description": "DBInstanceAlreadyExistsFault",
	"paths./#ModifyDBInstance.post.responses.482.schema.$ref": "#/definitions/DBInstanceAlreadyExistsFault",
	"paths./#ModifyDBInstance.post.responses.483.description": "DBInstanceNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.483.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.484.description": "DBSecurityGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.484.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.485.description": "DBParameterGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.485.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.486.description": "InsufficientDBInstanceCapacityFault",
	"paths./#ModifyDBInstance.post.responses.486.schema.$ref": "#/definitions/InsufficientDBInstanceCapacityFault",
	"paths./#ModifyDBInstance.post.responses.487.description": "StorageQuotaExceededFault",
	"paths./#ModifyDBInstance.post.responses.487.schema.$ref": "#/definitions/StorageQuotaExceededFault",
	"paths./#ModifyDBInstance.post.responses.488.description": "InvalidVPCNetworkStateFault",
	"paths./#ModifyDBInstance.post.responses.488.schema.$ref": "#/definitions/InvalidVPCNetworkStateFault",
	"paths./#ModifyDBInstance.post.responses.489.description": "ProvisionedIopsNotAvailableInAZFault",
	"paths./#ModifyDBInstance.post.responses.489.schema.$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault",
	"paths./#ModifyDBInstance.post.responses.490.description": "OptionGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.490.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#ModifyDBInstance.post.responses.491.description": "DBUpgradeDependencyFailureFault",
	"paths./#ModifyDBInstance.post.responses.491.schema.$ref": "#/definitions/DBUpgradeDependencyFailureFault",
	"paths./#ModifyDBParameterGroup.parameters.length": 9,
	"paths./#ModifyDBParameterGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#ModifyDBParameterGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#ModifyDBParameterGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ModifyDBParameterGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ModifyDBParameterGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ModifyDBParameterGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ModifyDBParameterGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ModifyDBParameterGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ModifyDBParameterGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ModifyDBParameterGroup.post.description": "",
	"paths./#ModifyDBParameterGroup.post.operationId": "ModifyDBParameterGroup",
	"paths./#ModifyDBParameterGroup.post.parameters.length": 1,
	"paths./#ModifyDBParameterGroup.post.parameters[0].in": "body",
	"paths./#ModifyDBParameterGroup.post.parameters[0].name": "body",
	"paths./#ModifyDBParameterGroup.post.parameters[0].required": true,
	"paths./#ModifyDBParameterGroup.post.parameters[0].schema.$ref": "#/definitions/ModifyDBParameterGroupMessage",
	"paths./#ModifyDBParameterGroup.post.responses.200.description": "Success",
	"paths./#ModifyDBParameterGroup.post.responses.200.schema.$ref": "#/definitions/DBParameterGroupNameMessage",
	"paths./#ModifyDBParameterGroup.post.responses.480.description": "DBParameterGroupNotFoundFault",
	"paths./#ModifyDBParameterGroup.post.responses.480.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#ModifyDBParameterGroup.post.responses.481.description": "InvalidDBParameterGroupStateFault",
	"paths./#ModifyDBParameterGroup.post.responses.481.schema.$ref": "#/definitions/InvalidDBParameterGroupStateFault",
	"paths./#ModifyDBSubnetGroup.parameters.length": 9,
	"paths./#ModifyDBSubnetGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#ModifyDBSubnetGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#ModifyDBSubnetGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ModifyDBSubnetGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ModifyDBSubnetGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ModifyDBSubnetGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ModifyDBSubnetGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ModifyDBSubnetGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ModifyDBSubnetGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ModifyDBSubnetGroup.post.description": "",
	"paths./#ModifyDBSubnetGroup.post.operationId": "ModifyDBSubnetGroup",
	"paths./#ModifyDBSubnetGroup.post.parameters.length": 1,
	"paths./#ModifyDBSubnetGroup.post.parameters[0].in": "body",
	"paths./#ModifyDBSubnetGroup.post.parameters[0].name": "body",
	"paths./#ModifyDBSubnetGroup.post.parameters[0].required": true,
	"paths./#ModifyDBSubnetGroup.post.parameters[0].schema.$ref": "#/definitions/ModifyDBSubnetGroupMessage",
	"paths./#ModifyDBSubnetGroup.post.responses.200.description": "Success",
	"paths./#ModifyDBSubnetGroup.post.responses.200.schema.$ref": "#/definitions/ModifyDBSubnetGroupResult",
	"paths./#ModifyDBSubnetGroup.post.responses.480.description": "DBSubnetGroupNotFoundFault",
	"paths./#ModifyDBSubnetGroup.post.responses.480.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#ModifyDBSubnetGroup.post.responses.481.description": "DBSubnetQuotaExceededFault",
	"paths./#ModifyDBSubnetGroup.post.responses.481.schema.$ref": "#/definitions/DBSubnetQuotaExceededFault",
	"paths./#ModifyDBSubnetGroup.post.responses.482.description": "SubnetAlreadyInUse",
	"paths./#ModifyDBSubnetGroup.post.responses.482.schema.$ref": "#/definitions/SubnetAlreadyInUse",
	"paths./#ModifyDBSubnetGroup.post.responses.483.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#ModifyDBSubnetGroup.post.responses.483.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#ModifyDBSubnetGroup.post.responses.484.description": "InvalidSubnet",
	"paths./#ModifyDBSubnetGroup.post.responses.484.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#ModifyEventSubscription.parameters.length": 9,
	"paths./#ModifyEventSubscription.parameters[0].$ref": "#/parameters/Action",
	"paths./#ModifyEventSubscription.parameters[1].$ref": "#/parameters/Version",
	"paths./#ModifyEventSubscription.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ModifyEventSubscription.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ModifyEventSubscription.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ModifyEventSubscription.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ModifyEventSubscription.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ModifyEventSubscription.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ModifyEventSubscription.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ModifyEventSubscription.post.description": "",
	"paths./#ModifyEventSubscription.post.operationId": "ModifyEventSubscription",
	"paths./#ModifyEventSubscription.post.parameters.length": 1,
	"paths./#ModifyEventSubscription.post.parameters[0].in": "body",
	"paths./#ModifyEventSubscription.post.parameters[0].name": "body",
	"paths./#ModifyEventSubscription.post.parameters[0].required": true,
	"paths./#ModifyEventSubscription.post.parameters[0].schema.$ref": "#/definitions/ModifyEventSubscriptionMessage",
	"paths./#ModifyEventSubscription.post.responses.200.description": "Success",
	"paths./#ModifyEventSubscription.post.responses.200.schema.$ref": "#/definitions/ModifyEventSubscriptionResult",
	"paths./#ModifyEventSubscription.post.responses.480.description": "EventSubscriptionQuotaExceededFault",
	"paths./#ModifyEventSubscription.post.responses.480.schema.$ref": "#/definitions/EventSubscriptionQuotaExceededFault",
	"paths./#ModifyEventSubscription.post.responses.481.description": "SubscriptionNotFoundFault",
	"paths./#ModifyEventSubscription.post.responses.481.schema.$ref": "#/definitions/SubscriptionNotFoundFault",
	"paths./#ModifyEventSubscription.post.responses.482.description": "SNSInvalidTopicFault",
	"paths./#ModifyEventSubscription.post.responses.482.schema.$ref": "#/definitions/SNSInvalidTopicFault",
	"paths./#ModifyEventSubscription.post.responses.483.description": "SNSNoAuthorizationFault",
	"paths./#ModifyEventSubscription.post.responses.483.schema.$ref": "#/definitions/SNSNoAuthorizationFault",
	"paths./#ModifyEventSubscription.post.responses.484.description": "SNSTopicArnNotFoundFault",
	"paths./#ModifyEventSubscription.post.responses.484.schema.$ref": "#/definitions/SNSTopicArnNotFoundFault",
	"paths./#ModifyEventSubscription.post.responses.485.description": "SubscriptionCategoryNotFoundFault",
	"paths./#ModifyEventSubscription.post.responses.485.schema.$ref": "#/definitions/SubscriptionCategoryNotFoundFault",
	"paths./#ModifyOptionGroup.parameters.length": 9,
	"paths./#ModifyOptionGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#ModifyOptionGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#ModifyOptionGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ModifyOptionGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ModifyOptionGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ModifyOptionGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ModifyOptionGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ModifyOptionGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ModifyOptionGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ModifyOptionGroup.post.description": "",
	"paths./#ModifyOptionGroup.post.operationId": "ModifyOptionGroup",
	"paths./#ModifyOptionGroup.post.parameters.length": 1,
	"paths./#ModifyOptionGroup.post.parameters[0].in": "body",
	"paths./#ModifyOptionGroup.post.parameters[0].name": "body",
	"paths./#ModifyOptionGroup.post.parameters[0].required": true,
	"paths./#ModifyOptionGroup.post.parameters[0].schema.$ref": "#/definitions/ModifyOptionGroupMessage",
	"paths./#ModifyOptionGroup.post.responses.200.description": "Success",
	"paths./#ModifyOptionGroup.post.responses.200.schema.$ref": "#/definitions/ModifyOptionGroupResult",
	"paths./#ModifyOptionGroup.post.responses.480.description": "InvalidOptionGroupStateFault",
	"paths./#ModifyOptionGroup.post.responses.480.schema.$ref": "#/definitions/InvalidOptionGroupStateFault",
	"paths./#ModifyOptionGroup.post.responses.481.description": "OptionGroupNotFoundFault",
	"paths./#ModifyOptionGroup.post.responses.481.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#PromoteReadReplica.parameters.length": 9,
	"paths./#PromoteReadReplica.parameters[0].$ref": "#/parameters/Action",
	"paths./#PromoteReadReplica.parameters[1].$ref": "#/parameters/Version",
	"paths./#PromoteReadReplica.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#PromoteReadReplica.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#PromoteReadReplica.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#PromoteReadReplica.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#PromoteReadReplica.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#PromoteReadReplica.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#PromoteReadReplica.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#PromoteReadReplica.post.description": "",
	"paths./#PromoteReadReplica.post.operationId": "PromoteReadReplica",
	"paths./#PromoteReadReplica.post.parameters.length": 1,
	"paths./#PromoteReadReplica.post.parameters[0].in": "body",
	"paths./#PromoteReadReplica.post.parameters[0].name": "body",
	"paths./#PromoteReadReplica.post.parameters[0].required": true,
	"paths./#PromoteReadReplica.post.parameters[0].schema.$ref": "#/definitions/PromoteReadReplicaMessage",
	"paths./#PromoteReadReplica.post.responses.200.description": "Success",
	"paths./#PromoteReadReplica.post.responses.200.schema.$ref": "#/definitions/PromoteReadReplicaResult",
	"paths./#PromoteReadReplica.post.responses.480.description": "InvalidDBInstanceStateFault",
	"paths./#PromoteReadReplica.post.responses.480.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#PromoteReadReplica.post.responses.481.description": "DBInstanceNotFoundFault",
	"paths./#PromoteReadReplica.post.responses.481.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#PurchaseReservedDBInstancesOffering.parameters.length": 9,
	"paths./#PurchaseReservedDBInstancesOffering.parameters[0].$ref": "#/parameters/Action",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[1].$ref": "#/parameters/Version",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#PurchaseReservedDBInstancesOffering.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#PurchaseReservedDBInstancesOffering.post.description": "",
	"paths./#PurchaseReservedDBInstancesOffering.post.operationId": "PurchaseReservedDBInstancesOffering",
	"paths./#PurchaseReservedDBInstancesOffering.post.parameters.length": 1,
	"paths./#PurchaseReservedDBInstancesOffering.post.parameters[0].in": "body",
	"paths./#PurchaseReservedDBInstancesOffering.post.parameters[0].name": "body",
	"paths./#PurchaseReservedDBInstancesOffering.post.parameters[0].required": true,
	"paths./#PurchaseReservedDBInstancesOffering.post.parameters[0].schema.$ref": "#/definitions/PurchaseReservedDBInstancesOfferingMessage",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.200.description": "Success",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.200.schema.$ref": "#/definitions/PurchaseReservedDBInstancesOfferingResult",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.480.description": "ReservedDBInstancesOfferingNotFoundFault",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.480.schema.$ref": "#/definitions/ReservedDBInstancesOfferingNotFoundFault",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.481.description": "ReservedDBInstanceAlreadyExistsFault",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.481.schema.$ref": "#/definitions/ReservedDBInstanceAlreadyExistsFault",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.482.description": "ReservedDBInstanceQuotaExceededFault",
	"paths./#PurchaseReservedDBInstancesOffering.post.responses.482.schema.$ref": "#/definitions/ReservedDBInstanceQuotaExceededFault",
	"paths./#RebootDBInstance.parameters.length": 9,
	"paths./#RebootDBInstance.parameters[0].$ref": "#/parameters/Action",
	"paths./#RebootDBInstance.parameters[1].$ref": "#/parameters/Version",
	"paths./#RebootDBInstance.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RebootDBInstance.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RebootDBInstance.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RebootDBInstance.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RebootDBInstance.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RebootDBInstance.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RebootDBInstance.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RebootDBInstance.post.description": "",
	"paths./#RebootDBInstance.post.operationId": "RebootDBInstance",
	"paths./#RebootDBInstance.post.parameters.length": 1,
	"paths./#RebootDBInstance.post.parameters[0].in": "body",
	"paths./#RebootDBInstance.post.parameters[0].name": "body",
	"paths./#RebootDBInstance.post.parameters[0].required": true,
	"paths./#RebootDBInstance.post.parameters[0].schema.$ref": "#/definitions/RebootDBInstanceMessage",
	"paths./#RebootDBInstance.post.responses.200.description": "Success",
	"paths./#RebootDBInstance.post.responses.200.schema.$ref": "#/definitions/RebootDBInstanceResult",
	"paths./#RebootDBInstance.post.responses.480.description": "InvalidDBInstanceStateFault",
	"paths./#RebootDBInstance.post.responses.480.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#RebootDBInstance.post.responses.481.description": "DBInstanceNotFoundFault",
	"paths./#RebootDBInstance.post.responses.481.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters.length": 9,
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[0].$ref": "#/parameters/Action",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[1].$ref": "#/parameters/Version",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RemoveSourceIdentifierFromSubscription.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RemoveSourceIdentifierFromSubscription.post.description": "",
	"paths./#RemoveSourceIdentifierFromSubscription.post.operationId": "RemoveSourceIdentifierFromSubscription",
	"paths./#RemoveSourceIdentifierFromSubscription.post.parameters.length": 1,
	"paths./#RemoveSourceIdentifierFromSubscription.post.parameters[0].in": "body",
	"paths./#RemoveSourceIdentifierFromSubscription.post.parameters[0].name": "body",
	"paths./#RemoveSourceIdentifierFromSubscription.post.parameters[0].required": true,
	"paths./#RemoveSourceIdentifierFromSubscription.post.parameters[0].schema.$ref": "#/definitions/RemoveSourceIdentifierFromSubscriptionMessage",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.200.description": "Success",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.200.schema.$ref": "#/definitions/RemoveSourceIdentifierFromSubscriptionResult",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.480.description": "SubscriptionNotFoundFault",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.480.schema.$ref": "#/definitions/SubscriptionNotFoundFault",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.481.description": "SourceNotFoundFault",
	"paths./#RemoveSourceIdentifierFromSubscription.post.responses.481.schema.$ref": "#/definitions/SourceNotFoundFault",
	"paths./#RemoveTagsFromResource.parameters.length": 9,
	"paths./#RemoveTagsFromResource.parameters[0].$ref": "#/parameters/Action",
	"paths./#RemoveTagsFromResource.parameters[1].$ref": "#/parameters/Version",
	"paths./#RemoveTagsFromResource.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RemoveTagsFromResource.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RemoveTagsFromResource.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RemoveTagsFromResource.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RemoveTagsFromResource.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RemoveTagsFromResource.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RemoveTagsFromResource.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RemoveTagsFromResource.post.description": "",
	"paths./#RemoveTagsFromResource.post.operationId": "RemoveTagsFromResource",
	"paths./#RemoveTagsFromResource.post.parameters.length": 1,
	"paths./#RemoveTagsFromResource.post.parameters[0].in": "body",
	"paths./#RemoveTagsFromResource.post.parameters[0].name": "body",
	"paths./#RemoveTagsFromResource.post.parameters[0].required": true,
	"paths./#RemoveTagsFromResource.post.parameters[0].schema.$ref": "#/definitions/RemoveTagsFromResourceMessage",
	"paths./#RemoveTagsFromResource.post.responses.200.description": "Success",
	"paths./#RemoveTagsFromResource.post.responses.480.description": "DBInstanceNotFoundFault",
	"paths./#RemoveTagsFromResource.post.responses.480.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#RemoveTagsFromResource.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#RemoveTagsFromResource.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#ResetDBParameterGroup.parameters.length": 9,
	"paths./#ResetDBParameterGroup.parameters[0].$ref": "#/parameters/Action",
	"paths./#ResetDBParameterGroup.parameters[1].$ref": "#/parameters/Version",
	"paths./#ResetDBParameterGroup.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#ResetDBParameterGroup.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#ResetDBParameterGroup.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#ResetDBParameterGroup.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#ResetDBParameterGroup.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#ResetDBParameterGroup.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#ResetDBParameterGroup.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#ResetDBParameterGroup.post.description": "",
	"paths./#ResetDBParameterGroup.post.operationId": "ResetDBParameterGroup",
	"paths./#ResetDBParameterGroup.post.parameters.length": 1,
	"paths./#ResetDBParameterGroup.post.parameters[0].in": "body",
	"paths./#ResetDBParameterGroup.post.parameters[0].name": "body",
	"paths./#ResetDBParameterGroup.post.parameters[0].required": true,
	"paths./#ResetDBParameterGroup.post.parameters[0].schema.$ref": "#/definitions/ResetDBParameterGroupMessage",
	"paths./#ResetDBParameterGroup.post.responses.200.description": "Success",
	"paths./#ResetDBParameterGroup.post.responses.200.schema.$ref": "#/definitions/DBParameterGroupNameMessage",
	"paths./#ResetDBParameterGroup.post.responses.480.description": "InvalidDBParameterGroupStateFault",
	"paths./#ResetDBParameterGroup.post.responses.480.schema.$ref": "#/definitions/InvalidDBParameterGroupStateFault",
	"paths./#ResetDBParameterGroup.post.responses.481.description": "DBParameterGroupNotFoundFault",
	"paths./#ResetDBParameterGroup.post.responses.481.schema.$ref": "#/definitions/DBParameterGroupNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters.length": 9,
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[0].$ref": "#/parameters/Action",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[1].$ref": "#/parameters/Version",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RestoreDBInstanceFromDBSnapshot.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.description": "",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.operationId": "RestoreDBInstanceFromDBSnapshot",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.parameters.length": 1,
	"paths./#RestoreDBInstanceFromDBSnapshot.post.parameters[0].in": "body",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.parameters[0].name": "body",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.parameters[0].required": true,
	"paths./#RestoreDBInstanceFromDBSnapshot.post.parameters[0].schema.$ref": "#/definitions/RestoreDBInstanceFromDBSnapshotMessage",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.200.description": "Success",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.200.schema.$ref": "#/definitions/RestoreDBInstanceFromDBSnapshotResult",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.480.description": "DBInstanceAlreadyExistsFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.480.schema.$ref": "#/definitions/DBInstanceAlreadyExistsFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.481.description": "DBSnapshotNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.481.schema.$ref": "#/definitions/DBSnapshotNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.482.description": "InstanceQuotaExceededFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.482.schema.$ref": "#/definitions/InstanceQuotaExceededFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.483.description": "InsufficientDBInstanceCapacityFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.483.schema.$ref": "#/definitions/InsufficientDBInstanceCapacityFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.484.description": "InvalidDBSnapshotStateFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.484.schema.$ref": "#/definitions/InvalidDBSnapshotStateFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.485.description": "StorageQuotaExceededFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.485.schema.$ref": "#/definitions/StorageQuotaExceededFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.486.description": "InvalidVPCNetworkStateFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.486.schema.$ref": "#/definitions/InvalidVPCNetworkStateFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.487.description": "InvalidRestoreFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.487.schema.$ref": "#/definitions/InvalidRestoreFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.488.description": "DBSubnetGroupNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.488.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.489.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.489.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.490.description": "InvalidSubnet",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.490.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.491.description": "ProvisionedIopsNotAvailableInAZFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.491.schema.$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.492.description": "OptionGroupNotFoundFault",
	"paths./#RestoreDBInstanceFromDBSnapshot.post.responses.492.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.parameters.length": 9,
	"paths./#RestoreDBInstanceToPointInTime.parameters[0].$ref": "#/parameters/Action",
	"paths./#RestoreDBInstanceToPointInTime.parameters[1].$ref": "#/parameters/Version",
	"paths./#RestoreDBInstanceToPointInTime.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RestoreDBInstanceToPointInTime.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RestoreDBInstanceToPointInTime.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RestoreDBInstanceToPointInTime.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RestoreDBInstanceToPointInTime.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RestoreDBInstanceToPointInTime.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RestoreDBInstanceToPointInTime.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RestoreDBInstanceToPointInTime.post.description": "",
	"paths./#RestoreDBInstanceToPointInTime.post.operationId": "RestoreDBInstanceToPointInTime",
	"paths./#RestoreDBInstanceToPointInTime.post.parameters.length": 1,
	"paths./#RestoreDBInstanceToPointInTime.post.parameters[0].in": "body",
	"paths./#RestoreDBInstanceToPointInTime.post.parameters[0].name": "body",
	"paths./#RestoreDBInstanceToPointInTime.post.parameters[0].required": true,
	"paths./#RestoreDBInstanceToPointInTime.post.parameters[0].schema.$ref": "#/definitions/RestoreDBInstanceToPointInTimeMessage",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.200.description": "Success",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.200.schema.$ref": "#/definitions/RestoreDBInstanceToPointInTimeResult",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.480.description": "DBInstanceAlreadyExistsFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.480.schema.$ref": "#/definitions/DBInstanceAlreadyExistsFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.481.description": "DBInstanceNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.481.schema.$ref": "#/definitions/DBInstanceNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.482.description": "InstanceQuotaExceededFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.482.schema.$ref": "#/definitions/InstanceQuotaExceededFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.483.description": "InsufficientDBInstanceCapacityFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.483.schema.$ref": "#/definitions/InsufficientDBInstanceCapacityFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.484.description": "InvalidDBInstanceStateFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.484.schema.$ref": "#/definitions/InvalidDBInstanceStateFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.485.description": "PointInTimeRestoreNotEnabledFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.485.schema.$ref": "#/definitions/PointInTimeRestoreNotEnabledFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.486.description": "StorageQuotaExceededFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.486.schema.$ref": "#/definitions/StorageQuotaExceededFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.487.description": "InvalidVPCNetworkStateFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.487.schema.$ref": "#/definitions/InvalidVPCNetworkStateFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.488.description": "InvalidRestoreFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.488.schema.$ref": "#/definitions/InvalidRestoreFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.489.description": "DBSubnetGroupNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.489.schema.$ref": "#/definitions/DBSubnetGroupNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.490.description": "DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.490.schema.$ref": "#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.491.description": "InvalidSubnet",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.491.schema.$ref": "#/definitions/InvalidSubnet",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.492.description": "ProvisionedIopsNotAvailableInAZFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.492.schema.$ref": "#/definitions/ProvisionedIopsNotAvailableInAZFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.493.description": "OptionGroupNotFoundFault",
	"paths./#RestoreDBInstanceToPointInTime.post.responses.493.schema.$ref": "#/definitions/OptionGroupNotFoundFault",
	"paths./#RevokeDBSecurityGroupIngress.parameters.length": 9,
	"paths./#RevokeDBSecurityGroupIngress.parameters[0].$ref": "#/parameters/Action",
	"paths./#RevokeDBSecurityGroupIngress.parameters[1].$ref": "#/parameters/Version",
	"paths./#RevokeDBSecurityGroupIngress.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#RevokeDBSecurityGroupIngress.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#RevokeDBSecurityGroupIngress.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#RevokeDBSecurityGroupIngress.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#RevokeDBSecurityGroupIngress.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#RevokeDBSecurityGroupIngress.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#RevokeDBSecurityGroupIngress.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#RevokeDBSecurityGroupIngress.post.description": "",
	"paths./#RevokeDBSecurityGroupIngress.post.operationId": "RevokeDBSecurityGroupIngress",
	"paths./#RevokeDBSecurityGroupIngress.post.parameters.length": 1,
	"paths./#RevokeDBSecurityGroupIngress.post.parameters[0].in": "body",
	"paths./#RevokeDBSecurityGroupIngress.post.parameters[0].name": "body",
	"paths./#RevokeDBSecurityGroupIngress.post.parameters[0].required": true,
	"paths./#RevokeDBSecurityGroupIngress.post.parameters[0].schema.$ref": "#/definitions/RevokeDBSecurityGroupIngressMessage",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.200.description": "Success",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.200.schema.$ref": "#/definitions/RevokeDBSecurityGroupIngressResult",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.480.description": "DBSecurityGroupNotFoundFault",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.480.schema.$ref": "#/definitions/DBSecurityGroupNotFoundFault",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.481.description": "AuthorizationNotFoundFault",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.481.schema.$ref": "#/definitions/AuthorizationNotFoundFault",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.482.description": "InvalidDBSecurityGroupStateFault",
	"paths./#RevokeDBSecurityGroupIngress.post.responses.482.schema.$ref": "#/definitions/InvalidDBSecurityGroupStateFault",
	"paths./.parameters.length": 9,
	"paths./.parameters[0].$ref": "#/parameters/Action",
	"paths./.parameters[1].$ref": "#/parameters/Version",
	"paths./.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./.post.description": "",
	"paths./.post.operationId": "AddSourceIdentifierToSubscription",
	"paths./.post.parameters.length": 1,
	"paths./.post.parameters[0].in": "body",
	"paths./.post.parameters[0].name": "body",
	"paths./.post.parameters[0].required": true,
	"paths./.post.parameters[0].schema.$ref": "#/definitions/AddSourceIdentifierToSubscriptionMessage",
	"paths./.post.responses.200.description": "Success",
	"paths./.post.responses.200.schema.$ref": "#/definitions/AddSourceIdentifierToSubscriptionResult",
	"paths./.post.responses.480.description": "SubscriptionNotFoundFault",
	"paths./.post.responses.480.schema.$ref": "#/definitions/SubscriptionNotFoundFault",
	"paths./.post.responses.481.description": "SourceNotFoundFault",
	"paths./.post.responses.481.schema.$ref": "#/definitions/SourceNotFoundFault",
	"produces.length": 0,
	"schemes.length": 1,
	"schemes[0]": "http",
	"security.length": 1,
	"securityDefinitions.hmac.description": "Amazon Signature authorization v4",
	"securityDefinitions.hmac.in": "header",
	"securityDefinitions.hmac.name": "Authorization",
	"securityDefinitions.hmac.type": "apiKey",
	"securityDefinitions.hmac.x-amazon-apigateway-authtype": "awsSigv4",
	"security[0].hmac.length": 0,
	"swagger": "2.0",
	"x-hasEquivalentPaths": true
}