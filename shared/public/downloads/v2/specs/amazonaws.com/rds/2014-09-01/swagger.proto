syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package amazonrelationaldatabaseservice;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddSourceIdentifierToSubscriptionMessage body = 10;
}

message Post#AddTagsToResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsToResourceMessage body = 10;
}

message Post#AuthorizeDBSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AuthorizeDBSecurityGroupIngressMessage body = 10;
}

message Post#CopyDBParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyDBParameterGroupMessage body = 10;
}

message Post#CopyDBSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyDBSnapshotMessage body = 10;
}

message Post#CopyOptionGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyOptionGroupMessage body = 10;
}

message Post#CreateDBInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBInstanceMessage body = 10;
}

message Post#CreateDBInstanceReadReplicaRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBInstanceReadReplicaMessage body = 10;
}

message Post#CreateDBParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBParameterGroupMessage body = 10;
}

message Post#CreateDBSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBSecurityGroupMessage body = 10;
}

message Post#CreateDBSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBSnapshotMessage body = 10;
}

message Post#CreateDBSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDBSubnetGroupMessage body = 10;
}

message Post#CreateEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateEventSubscriptionMessage body = 10;
}

message Post#CreateOptionGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateOptionGroupMessage body = 10;
}

message Post#DeleteDBInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDBInstanceMessage body = 10;
}

message Post#DeleteDBParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDBParameterGroupMessage body = 10;
}

message Post#DeleteDBSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDBSecurityGroupMessage body = 10;
}

message Post#DeleteDBSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDBSnapshotMessage body = 10;
}

message Post#DeleteDBSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDBSubnetGroupMessage body = 10;
}

message Post#DeleteEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteEventSubscriptionMessage body = 10;
}

message Post#DeleteOptionGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteOptionGroupMessage body = 10;
}

message Post#DescribeDBEngineVersionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBEngineVersionsMessage body = 10;
}

message Post#DescribeDBInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBInstancesMessage body = 10;
}

message Post#DescribeDBLogFilesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBLogFilesMessage body = 10;
}

message Post#DescribeDBParameterGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBParameterGroupsMessage body = 10;
}

message Post#DescribeDBParametersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBParametersMessage body = 10;
}

message Post#DescribeDBSecurityGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBSecurityGroupsMessage body = 10;
}

message Post#DescribeDBSnapshotsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBSnapshotsMessage body = 10;
}

message Post#DescribeDBSubnetGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDBSubnetGroupsMessage body = 10;
}

message Post#DescribeEngineDefaultParametersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEngineDefaultParametersMessage body = 10;
}

message Post#DescribeEventCategoriesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEventCategoriesMessage body = 10;
}

message Post#DescribeEventSubscriptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEventSubscriptionsMessage body = 10;
}

message Post#DescribeEventsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEventsMessage body = 10;
}

message Post#DescribeOptionGroupOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeOptionGroupOptionsMessage body = 10;
}

message Post#DescribeOptionGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeOptionGroupsMessage body = 10;
}

message Post#DescribeOrderableDBInstanceOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeOrderableDBInstanceOptionsMessage body = 10;
}

message Post#DescribeReservedDBInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeReservedDBInstancesMessage body = 10;
}

message Post#DescribeReservedDBInstancesOfferingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeReservedDBInstancesOfferingsMessage body = 10;
}

message Post#DownloadDBLogFilePortionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DownloadDBLogFilePortionMessage body = 10;
}

message Post#ListTagsForResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsForResourceMessage body = 10;
}

message Post#ModifyDBInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyDBInstanceMessage body = 10;
}

message Post#ModifyDBParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyDBParameterGroupMessage body = 10;
}

message Post#ModifyDBSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyDBSubnetGroupMessage body = 10;
}

message Post#ModifyEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyEventSubscriptionMessage body = 10;
}

message Post#ModifyOptionGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyOptionGroupMessage body = 10;
}

message Post#PromoteReadReplicaRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PromoteReadReplicaMessage body = 10;
}

message Post#PurchaseReservedDBInstancesOfferingRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PurchaseReservedDBInstancesOfferingMessage body = 10;
}

message Post#RebootDBInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RebootDBInstanceMessage body = 10;
}

message Post#RemoveSourceIdentifierFromSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveSourceIdentifierFromSubscriptionMessage body = 10;
}

message Post#RemoveTagsFromResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsFromResourceMessage body = 10;
}

message Post#ResetDBParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetDBParameterGroupMessage body = 10;
}

message Post#RestoreDBInstanceFromDBSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RestoreDBInstanceFromDBSnapshotMessage body = 10;
}

message Post#RestoreDBInstanceToPointInTimeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RestoreDBInstanceToPointInTimeMessage body = 10;
}

message Post#RevokeDBSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RevokeDBSecurityGroupIngressMessage body = 10;
}

message AddSourceIdentifierToSubscriptionMessage {
    string SourceIdentifier = 1;
    string SubscriptionName = 2;
}

message AddSourceIdentifierToSubscriptionResult {
    EventSubscription EventSubscription = 1;
}

message AddTagsToResourceMessage {
    string ResourceName = 1;
    array Tags = 2;
}

enum ApplyMethod {
    IMMEDIATE = 0;
    PENDINGREBOOT = 1;
}

message AuthorizationAlreadyExistsFault {
}

message AuthorizationNotFoundFault {
}

message AuthorizationQuotaExceededFault {
}

message AuthorizeDBSecurityGroupIngressMessage {
    string CIDRIP = 1;
    string DBSecurityGroupName = 2;
    string EC2SecurityGroupId = 3;
    string EC2SecurityGroupName = 4;
    string EC2SecurityGroupOwnerId = 5;
}

message AuthorizeDBSecurityGroupIngressResult {
    DBSecurityGroup DBSecurityGroup = 1;
}

message AvailabilityZone {
    string Name = 1;
}

repeated AvailabilityZone AvailabilityZoneList = 1





message CharacterSet {
    string CharacterSetDescription = 1;
    string CharacterSetName = 2;
}

message CopyDBParameterGroupMessage {
    string SourceDBParameterGroupIdentifier = 1;
    array Tags = 2;
    string TargetDBParameterGroupDescription = 3;
    string TargetDBParameterGroupIdentifier = 4;
}

message CopyDBParameterGroupResult {
    DBParameterGroup DBParameterGroup = 1;
}

message CopyDBSnapshotMessage {
    string SourceDBSnapshotIdentifier = 1;
    array Tags = 2;
    string TargetDBSnapshotIdentifier = 3;
}

message CopyDBSnapshotResult {
    DBSnapshot DBSnapshot = 1;
}

message CopyOptionGroupMessage {
    string SourceOptionGroupIdentifier = 1;
    array Tags = 2;
    string TargetOptionGroupDescription = 3;
    string TargetOptionGroupIdentifier = 4;
}

message CopyOptionGroupResult {
    OptionGroup OptionGroup = 1;
}

message CreateDBInstanceMessage {
    integer AllocatedStorage = 1;
    boolean AutoMinorVersionUpgrade = 2;
    string AvailabilityZone = 3;
    integer BackupRetentionPeriod = 4;
    string CharacterSetName = 5;
    string DBInstanceClass = 6;
    string DBInstanceIdentifier = 7;
    string DBName = 8;
    string DBParameterGroupName = 9;
    array DBSecurityGroups = 10;
    string DBSubnetGroupName = 11;
    string Engine = 12;
    string EngineVersion = 13;
    integer Iops = 14;
    string LicenseModel = 15;
    string MasterUserPassword = 16;
    string MasterUsername = 17;
    boolean MultiAZ = 18;
    string OptionGroupName = 19;
    integer Port = 20;
    string PreferredBackupWindow = 21;
    string PreferredMaintenanceWindow = 22;
    boolean PubliclyAccessible = 23;
    string StorageType = 24;
    array Tags = 25;
    string TdeCredentialArn = 26;
    string TdeCredentialPassword = 27;
    array VpcSecurityGroupIds = 28;
}

message CreateDBInstanceReadReplicaMessage {
    boolean AutoMinorVersionUpgrade = 1;
    string AvailabilityZone = 2;
    string DBInstanceClass = 3;
    string DBInstanceIdentifier = 4;
    string DBSubnetGroupName = 5;
    integer Iops = 6;
    string OptionGroupName = 7;
    integer Port = 8;
    boolean PubliclyAccessible = 9;
    string SourceDBInstanceIdentifier = 10;
    string StorageType = 11;
    array Tags = 12;
}

message CreateDBInstanceReadReplicaResult {
    DBInstance DBInstance = 1;
}

message CreateDBInstanceResult {
    DBInstance DBInstance = 1;
}

message CreateDBParameterGroupMessage {
    string DBParameterGroupFamily = 1;
    string DBParameterGroupName = 2;
    string Description = 3;
    array Tags = 4;
}

message CreateDBParameterGroupResult {
    DBParameterGroup DBParameterGroup = 1;
}

message CreateDBSecurityGroupMessage {
    string DBSecurityGroupDescription = 1;
    string DBSecurityGroupName = 2;
    array Tags = 3;
}

message CreateDBSecurityGroupResult {
    DBSecurityGroup DBSecurityGroup = 1;
}

message CreateDBSnapshotMessage {
    string DBInstanceIdentifier = 1;
    string DBSnapshotIdentifier = 2;
    array Tags = 3;
}

message CreateDBSnapshotResult {
    DBSnapshot DBSnapshot = 1;
}

message CreateDBSubnetGroupMessage {
    string DBSubnetGroupDescription = 1;
    string DBSubnetGroupName = 2;
    array SubnetIds = 3;
    array Tags = 4;
}

message CreateDBSubnetGroupResult {
    DBSubnetGroup DBSubnetGroup = 1;
}

message CreateEventSubscriptionMessage {
    boolean Enabled = 1;
    array EventCategories = 2;
    string SnsTopicArn = 3;
    array SourceIds = 4;
    string SourceType = 5;
    string SubscriptionName = 6;
    array Tags = 7;
}

message CreateEventSubscriptionResult {
    EventSubscription EventSubscription = 1;
}

message CreateOptionGroupMessage {
    string EngineName = 1;
    string MajorEngineVersion = 2;
    string OptionGroupDescription = 3;
    string OptionGroupName = 4;
    array Tags = 5;
}

message CreateOptionGroupResult {
    OptionGroup OptionGroup = 1;
}

message DBEngineVersion {
    string DBEngineDescription = 1;
    string DBEngineVersionDescription = 2;
    string DBParameterGroupFamily = 3;
    CharacterSet DefaultCharacterSet = 4;
    string Engine = 5;
    string EngineVersion = 6;
    array SupportedCharacterSets = 7;
}

repeated DBEngineVersion DBEngineVersionList = 1

message DBEngineVersionMessage {
    array DBEngineVersions = 1;
    string Marker = 2;
}

message DBInstance {
    integer AllocatedStorage = 1;
    boolean AutoMinorVersionUpgrade = 2;
    string AvailabilityZone = 3;
    integer BackupRetentionPeriod = 4;
    string CharacterSetName = 5;
    string DBInstanceClass = 6;
    string DBInstanceIdentifier = 7;
    string DBInstanceStatus = 8;
    string DBName = 9;
    array DBParameterGroups = 10;
    array DBSecurityGroups = 11;
    DBSubnetGroup DBSubnetGroup = 12;
    Endpoint Endpoint = 13;
    string Engine = 14;
    string EngineVersion = 15;
    string InstanceCreateTime = 16;
    integer Iops = 17;
    string LatestRestorableTime = 18;
    string LicenseModel = 19;
    string MasterUsername = 20;
    boolean MultiAZ = 21;
    array OptionGroupMemberships = 22;
    PendingModifiedValues PendingModifiedValues = 23;
    string PreferredBackupWindow = 24;
    string PreferredMaintenanceWindow = 25;
    boolean PubliclyAccessible = 26;
    array ReadReplicaDBInstanceIdentifiers = 27;
    string ReadReplicaSourceDBInstanceIdentifier = 28;
    string SecondaryAvailabilityZone = 29;
    array StatusInfos = 30;
    string StorageType = 31;
    string TdeCredentialArn = 32;
    array VpcSecurityGroups = 33;
}

message DBInstanceAlreadyExistsFault {
}

repeated DBInstance DBInstanceList = 1

message DBInstanceMessage {
    array DBInstances = 1;
    string Marker = 2;
}

message DBInstanceNotFoundFault {
}

message DBInstanceStatusInfo {
    string Message = 1;
    boolean Normal = 2;
    string Status = 3;
    string StatusType = 4;
}

repeated DBInstanceStatusInfo DBInstanceStatusInfoList = 1

message DBLogFileNotFoundFault {
}

message DBParameterGroup {
    string DBParameterGroupFamily = 1;
    string DBParameterGroupName = 2;
    string Description = 3;
}

message DBParameterGroupAlreadyExistsFault {
}

message DBParameterGroupDetails {
    string Marker = 1;
    array Parameters = 2;
}

repeated DBParameterGroup DBParameterGroupList = 1

message DBParameterGroupNameMessage {
    string DBParameterGroupName = 1;
}

message DBParameterGroupNotFoundFault {
}

message DBParameterGroupQuotaExceededFault {
}

message DBParameterGroupStatus {
    string DBParameterGroupName = 1;
    string ParameterApplyStatus = 2;
}

repeated DBParameterGroupStatus DBParameterGroupStatusList = 1

message DBParameterGroupsMessage {
    array DBParameterGroups = 1;
    string Marker = 2;
}

message DBSecurityGroup {
    string DBSecurityGroupDescription = 1;
    string DBSecurityGroupName = 2;
    array EC2SecurityGroups = 3;
    array IPRanges = 4;
    string OwnerId = 5;
    string VpcId = 6;
}

message DBSecurityGroupAlreadyExistsFault {
}

message DBSecurityGroupMembership {
    string DBSecurityGroupName = 1;
    string Status = 2;
}

repeated DBSecurityGroupMembership DBSecurityGroupMembershipList = 1

message DBSecurityGroupMessage {
    array DBSecurityGroups = 1;
    string Marker = 2;
}

repeated string DBSecurityGroupNameList = 1

message DBSecurityGroupNotFoundFault {
}

message DBSecurityGroupNotSupportedFault {
}

message DBSecurityGroupQuotaExceededFault {
}

repeated DBSecurityGroup DBSecurityGroups = 1

message DBSnapshot {
    integer AllocatedStorage = 1;
    string AvailabilityZone = 2;
    string DBInstanceIdentifier = 3;
    string DBSnapshotIdentifier = 4;
    string Engine = 5;
    string EngineVersion = 6;
    string InstanceCreateTime = 7;
    integer Iops = 8;
    string LicenseModel = 9;
    string MasterUsername = 10;
    string OptionGroupName = 11;
    integer PercentProgress = 12;
    integer Port = 13;
    string SnapshotCreateTime = 14;
    string SnapshotType = 15;
    string SourceRegion = 16;
    string Status = 17;
    string StorageType = 18;
    string TdeCredentialArn = 19;
    string VpcId = 20;
}

message DBSnapshotAlreadyExistsFault {
}

repeated DBSnapshot DBSnapshotList = 1

message DBSnapshotMessage {
    array DBSnapshots = 1;
    string Marker = 2;
}

message DBSnapshotNotFoundFault {
}

message DBSubnetGroup {
    string DBSubnetGroupDescription = 1;
    string DBSubnetGroupName = 2;
    string SubnetGroupStatus = 3;
    array Subnets = 4;
    string VpcId = 5;
}

message DBSubnetGroupAlreadyExistsFault {
}

message DBSubnetGroupDoesNotCoverEnoughAZs {
}

message DBSubnetGroupMessage {
    array DBSubnetGroups = 1;
    string Marker = 2;
}

message DBSubnetGroupNotAllowedFault {
}

message DBSubnetGroupNotFoundFault {
}

message DBSubnetGroupQuotaExceededFault {
}

repeated DBSubnetGroup DBSubnetGroups = 1

message DBSubnetQuotaExceededFault {
}

message DBUpgradeDependencyFailureFault {
}

message DeleteDBInstanceMessage {
    string DBInstanceIdentifier = 1;
    string FinalDBSnapshotIdentifier = 2;
    boolean SkipFinalSnapshot = 3;
}

message DeleteDBInstanceResult {
    DBInstance DBInstance = 1;
}

message DeleteDBParameterGroupMessage {
    string DBParameterGroupName = 1;
}

message DeleteDBSecurityGroupMessage {
    string DBSecurityGroupName = 1;
}

message DeleteDBSnapshotMessage {
    string DBSnapshotIdentifier = 1;
}

message DeleteDBSnapshotResult {
    DBSnapshot DBSnapshot = 1;
}

message DeleteDBSubnetGroupMessage {
    string DBSubnetGroupName = 1;
}

message DeleteEventSubscriptionMessage {
    string SubscriptionName = 1;
}

message DeleteEventSubscriptionResult {
    EventSubscription EventSubscription = 1;
}

message DeleteOptionGroupMessage {
    string OptionGroupName = 1;
}

message DescribeDBEngineVersionsMessage {
    string DBParameterGroupFamily = 1;
    boolean DefaultOnly = 2;
    string Engine = 3;
    string EngineVersion = 4;
    array Filters = 5;
    boolean ListSupportedCharacterSets = 6;
    string Marker = 7;
    integer MaxRecords = 8;
}

message DescribeDBInstancesMessage {
    string DBInstanceIdentifier = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
}

message DescribeDBLogFilesDetails {
    integer LastWritten = 1;
    string LogFileName = 2;
    integer Size = 3;
}

repeated DescribeDBLogFilesDetails DescribeDBLogFilesList = 1

message DescribeDBLogFilesMessage {
    string DBInstanceIdentifier = 1;
    integer FileLastWritten = 2;
    integer FileSize = 3;
    string FilenameContains = 4;
    array Filters = 5;
    string Marker = 6;
    integer MaxRecords = 7;
}

message DescribeDBLogFilesResponse {
    array DescribeDBLogFiles = 1;
    string Marker = 2;
}

message DescribeDBParameterGroupsMessage {
    string DBParameterGroupName = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
}

message DescribeDBParametersMessage {
    string DBParameterGroupName = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
    string Source = 5;
}

message DescribeDBSecurityGroupsMessage {
    string DBSecurityGroupName = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
}

message DescribeDBSnapshotsMessage {
    string DBInstanceIdentifier = 1;
    string DBSnapshotIdentifier = 2;
    array Filters = 3;
    string Marker = 4;
    integer MaxRecords = 5;
    string SnapshotType = 6;
}

message DescribeDBSubnetGroupsMessage {
    string DBSubnetGroupName = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
}

message DescribeEngineDefaultParametersMessage {
    string DBParameterGroupFamily = 1;
    array Filters = 2;
    string Marker = 3;
    integer MaxRecords = 4;
}

message DescribeEngineDefaultParametersResult {
    EngineDefaults EngineDefaults = 1;
}

message DescribeEventCategoriesMessage {
    array Filters = 1;
    string SourceType = 2;
}

message DescribeEventSubscriptionsMessage {
    array Filters = 1;
    string Marker = 2;
    integer MaxRecords = 3;
    string SubscriptionName = 4;
}

message DescribeEventsMessage {
    integer Duration = 1;
    string EndTime = 2;
    array EventCategories = 3;
    array Filters = 4;
    string Marker = 5;
    integer MaxRecords = 6;
    string SourceIdentifier = 7;
    SourceType SourceType = 8;
    string StartTime = 9;
}

message DescribeOptionGroupOptionsMessage {
    string EngineName = 1;
    array Filters = 2;
    string MajorEngineVersion = 3;
    string Marker = 4;
    integer MaxRecords = 5;
}

message DescribeOptionGroupsMessage {
    string EngineName = 1;
    array Filters = 2;
    string MajorEngineVersion = 3;
    string Marker = 4;
    integer MaxRecords = 5;
    string OptionGroupName = 6;
}

message DescribeOrderableDBInstanceOptionsMessage {
    string DBInstanceClass = 1;
    string Engine = 2;
    string EngineVersion = 3;
    array Filters = 4;
    string LicenseModel = 5;
    string Marker = 6;
    integer MaxRecords = 7;
    boolean Vpc = 8;
}

message DescribeReservedDBInstancesMessage {
    string DBInstanceClass = 1;
    string Duration = 2;
    array Filters = 3;
    string Marker = 4;
    integer MaxRecords = 5;
    boolean MultiAZ = 6;
    string OfferingType = 7;
    string ProductDescription = 8;
    string ReservedDBInstanceId = 9;
    string ReservedDBInstancesOfferingId = 10;
}

message DescribeReservedDBInstancesOfferingsMessage {
    string DBInstanceClass = 1;
    string Duration = 2;
    array Filters = 3;
    string Marker = 4;
    integer MaxRecords = 5;
    boolean MultiAZ = 6;
    string OfferingType = 7;
    string ProductDescription = 8;
    string ReservedDBInstancesOfferingId = 9;
}

message DownloadDBLogFilePortionDetails {
    boolean AdditionalDataPending = 1;
    string LogFileData = 2;
    string Marker = 3;
}

message DownloadDBLogFilePortionMessage {
    string DBInstanceIdentifier = 1;
    string LogFileName = 2;
    string Marker = 3;
    integer NumberOfLines = 4;
}

message EC2SecurityGroup {
    string EC2SecurityGroupId = 1;
    string EC2SecurityGroupName = 2;
    string EC2SecurityGroupOwnerId = 3;
    string Status = 4;
}

repeated EC2SecurityGroup EC2SecurityGroupList = 1

message Endpoint {
    string Address = 1;
    integer Port = 2;
}

message EngineDefaults {
    string DBParameterGroupFamily = 1;
    string Marker = 2;
    array Parameters = 3;
}

message Event {
    string Date = 1;
    array EventCategories = 2;
    string Message = 3;
    string SourceIdentifier = 4;
    SourceType SourceType = 5;
}

repeated string EventCategoriesList = 1

message EventCategoriesMap {
    array EventCategories = 1;
    string SourceType = 2;
}

repeated EventCategoriesMap EventCategoriesMapList = 1

message EventCategoriesMessage {
    array EventCategoriesMapList = 1;
}

repeated Event EventList = 1

message EventSubscription {
    string CustSubscriptionId = 1;
    string CustomerAwsId = 2;
    boolean Enabled = 3;
    array EventCategoriesList = 4;
    string SnsTopicArn = 5;
    array SourceIdsList = 6;
    string SourceType = 7;
    string Status = 8;
    string SubscriptionCreationTime = 9;
}

message EventSubscriptionQuotaExceededFault {
}

repeated EventSubscription EventSubscriptionsList = 1

message EventSubscriptionsMessage {
    array EventSubscriptionsList = 1;
    string Marker = 2;
}

message EventsMessage {
    array Events = 1;
    string Marker = 2;
}

message Filter {
    string Name = 1;
    array Values = 2;
}

repeated Filter FilterList = 1

repeated string FilterValueList = 1

message IPRange {
    string CIDRIP = 1;
    string Status = 2;
}

repeated IPRange IPRangeList = 1

message InstanceQuotaExceededFault {
}

message InsufficientDBInstanceCapacityFault {
}

message InvalidDBInstanceStateFault {
}

message InvalidDBParameterGroupStateFault {
}

message InvalidDBSecurityGroupStateFault {
}

message InvalidDBSnapshotStateFault {
}

message InvalidDBSubnetGroupFault {
}

message InvalidDBSubnetGroupStateFault {
}

message InvalidDBSubnetStateFault {
}

message InvalidEventSubscriptionStateFault {
}

message InvalidOptionGroupStateFault {
}

message InvalidRestoreFault {
}

message InvalidSubnet {
}

message InvalidVPCNetworkStateFault {
}

repeated string KeyList = 1

message ListTagsForResourceMessage {
    array Filters = 1;
    string ResourceName = 2;
}

message ModifyDBInstanceMessage {
    integer AllocatedStorage = 1;
    boolean AllowMajorVersionUpgrade = 2;
    boolean ApplyImmediately = 3;
    boolean AutoMinorVersionUpgrade = 4;
    integer BackupRetentionPeriod = 5;
    string DBInstanceClass = 6;
    string DBInstanceIdentifier = 7;
    string DBParameterGroupName = 8;
    array DBSecurityGroups = 9;
    string EngineVersion = 10;
    integer Iops = 11;
    string MasterUserPassword = 12;
    boolean MultiAZ = 13;
    string NewDBInstanceIdentifier = 14;
    string OptionGroupName = 15;
    string PreferredBackupWindow = 16;
    string PreferredMaintenanceWindow = 17;
    string StorageType = 18;
    string TdeCredentialArn = 19;
    string TdeCredentialPassword = 20;
    array VpcSecurityGroupIds = 21;
}

message ModifyDBInstanceResult {
    DBInstance DBInstance = 1;
}

message ModifyDBParameterGroupMessage {
    string DBParameterGroupName = 1;
    array Parameters = 2;
}

message ModifyDBSubnetGroupMessage {
    string DBSubnetGroupDescription = 1;
    string DBSubnetGroupName = 2;
    array SubnetIds = 3;
}

message ModifyDBSubnetGroupResult {
    DBSubnetGroup DBSubnetGroup = 1;
}

message ModifyEventSubscriptionMessage {
    boolean Enabled = 1;
    array EventCategories = 2;
    string SnsTopicArn = 3;
    string SourceType = 4;
    string SubscriptionName = 5;
}

message ModifyEventSubscriptionResult {
    EventSubscription EventSubscription = 1;
}

message ModifyOptionGroupMessage {
    boolean ApplyImmediately = 1;
    string OptionGroupName = 2;
    array OptionsToInclude = 3;
    array OptionsToRemove = 4;
}

message ModifyOptionGroupResult {
    OptionGroup OptionGroup = 1;
}

message Option {
    array DBSecurityGroupMemberships = 1;
    string OptionDescription = 2;
    string OptionName = 3;
    array OptionSettings = 4;
    boolean Permanent = 5;
    boolean Persistent = 6;
    integer Port = 7;
    array VpcSecurityGroupMemberships = 8;
}

message OptionConfiguration {
    array DBSecurityGroupMemberships = 1;
    string OptionName = 2;
    array OptionSettings = 3;
    integer Port = 4;
    array VpcSecurityGroupMemberships = 5;
}

repeated OptionConfiguration OptionConfigurationList = 1

message OptionGroup {
    boolean AllowsVpcAndNonVpcInstanceMemberships = 1;
    string EngineName = 2;
    string MajorEngineVersion = 3;
    string OptionGroupDescription = 4;
    string OptionGroupName = 5;
    array Options = 6;
    string VpcId = 7;
}

message OptionGroupAlreadyExistsFault {
}

message OptionGroupMembership {
    string OptionGroupName = 1;
    string Status = 2;
}

repeated OptionGroupMembership OptionGroupMembershipList = 1

message OptionGroupNotFoundFault {
}

message OptionGroupOption {
    integer DefaultPort = 1;
    string Description = 2;
    string EngineName = 3;
    string MajorEngineVersion = 4;
    string MinimumRequiredMinorEngineVersion = 5;
    string Name = 6;
    array OptionGroupOptionSettings = 7;
    array OptionsDependedOn = 8;
    boolean Permanent = 9;
    boolean Persistent = 10;
    boolean PortRequired = 11;
}

message OptionGroupOptionSetting {
    string AllowedValues = 1;
    string ApplyType = 2;
    string DefaultValue = 3;
    boolean IsModifiable = 4;
    string SettingDescription = 5;
    string SettingName = 6;
}

repeated OptionGroupOptionSetting OptionGroupOptionSettingsList = 1

repeated OptionGroupOption OptionGroupOptionsList = 1

message OptionGroupOptionsMessage {
    string Marker = 1;
    array OptionGroupOptions = 2;
}

message OptionGroupQuotaExceededFault {
}

message OptionGroups {
    string Marker = 1;
    array OptionGroupsList = 2;
}

repeated OptionGroup OptionGroupsList = 1

repeated string OptionNamesList = 1

message OptionSetting {
    string AllowedValues = 1;
    string ApplyType = 2;
    string DataType = 3;
    string DefaultValue = 4;
    string Description = 5;
    boolean IsCollection = 6;
    boolean IsModifiable = 7;
    string Name = 8;
    string Value = 9;
}

repeated OptionSetting OptionSettingConfigurationList = 1

repeated OptionSetting OptionSettingsList = 1

repeated string OptionsDependedOn = 1

repeated Option OptionsList = 1

message OrderableDBInstanceOption {
    array AvailabilityZones = 1;
    string DBInstanceClass = 2;
    string Engine = 3;
    string EngineVersion = 4;
    string LicenseModel = 5;
    boolean MultiAZCapable = 6;
    boolean ReadReplicaCapable = 7;
    string StorageType = 8;
    boolean SupportsIops = 9;
    boolean Vpc = 10;
}

repeated OrderableDBInstanceOption OrderableDBInstanceOptionsList = 1

message OrderableDBInstanceOptionsMessage {
    string Marker = 1;
    array OrderableDBInstanceOptions = 2;
}

message Parameter {
    string AllowedValues = 1;
    ApplyMethod ApplyMethod = 2;
    string ApplyType = 3;
    string DataType = 4;
    string Description = 5;
    boolean IsModifiable = 6;
    string MinimumEngineVersion = 7;
    string ParameterName = 8;
    string ParameterValue = 9;
    string Source = 10;
}

repeated Parameter ParametersList = 1

message PendingModifiedValues {
    integer AllocatedStorage = 1;
    integer BackupRetentionPeriod = 2;
    string DBInstanceClass = 3;
    string DBInstanceIdentifier = 4;
    string EngineVersion = 5;
    integer Iops = 6;
    string MasterUserPassword = 7;
    boolean MultiAZ = 8;
    integer Port = 9;
    string StorageType = 10;
}

message PointInTimeRestoreNotEnabledFault {
}

message PromoteReadReplicaMessage {
    integer BackupRetentionPeriod = 1;
    string DBInstanceIdentifier = 2;
    string PreferredBackupWindow = 3;
}

message PromoteReadReplicaResult {
    DBInstance DBInstance = 1;
}

message ProvisionedIopsNotAvailableInAZFault {
}

message PurchaseReservedDBInstancesOfferingMessage {
    integer DBInstanceCount = 1;
    string ReservedDBInstanceId = 2;
    string ReservedDBInstancesOfferingId = 3;
    array Tags = 4;
}

message PurchaseReservedDBInstancesOfferingResult {
    ReservedDBInstance ReservedDBInstance = 1;
}

repeated string ReadReplicaDBInstanceIdentifierList = 1

message RebootDBInstanceMessage {
    string DBInstanceIdentifier = 1;
    boolean ForceFailover = 2;
}

message RebootDBInstanceResult {
    DBInstance DBInstance = 1;
}

message RecurringCharge {
    number RecurringChargeAmount = 1;
    string RecurringChargeFrequency = 2;
}

repeated RecurringCharge RecurringChargeList = 1

message RemoveSourceIdentifierFromSubscriptionMessage {
    string SourceIdentifier = 1;
    string SubscriptionName = 2;
}

message RemoveSourceIdentifierFromSubscriptionResult {
    EventSubscription EventSubscription = 1;
}

message RemoveTagsFromResourceMessage {
    string ResourceName = 1;
    array TagKeys = 2;
}

message ReservedDBInstance {
    string CurrencyCode = 1;
    string DBInstanceClass = 2;
    integer DBInstanceCount = 3;
    integer Duration = 4;
    number FixedPrice = 5;
    boolean MultiAZ = 6;
    string OfferingType = 7;
    string ProductDescription = 8;
    array RecurringCharges = 9;
    string ReservedDBInstanceId = 10;
    string ReservedDBInstancesOfferingId = 11;
    string StartTime = 12;
    string State = 13;
    number UsagePrice = 14;
}

message ReservedDBInstanceAlreadyExistsFault {
}

repeated ReservedDBInstance ReservedDBInstanceList = 1

message ReservedDBInstanceMessage {
    string Marker = 1;
    array ReservedDBInstances = 2;
}

message ReservedDBInstanceNotFoundFault {
}

message ReservedDBInstanceQuotaExceededFault {
}

message ReservedDBInstancesOffering {
    string CurrencyCode = 1;
    string DBInstanceClass = 2;
    integer Duration = 3;
    number FixedPrice = 4;
    boolean MultiAZ = 5;
    string OfferingType = 6;
    string ProductDescription = 7;
    array RecurringCharges = 8;
    string ReservedDBInstancesOfferingId = 9;
    number UsagePrice = 10;
}

repeated ReservedDBInstancesOffering ReservedDBInstancesOfferingList = 1

message ReservedDBInstancesOfferingMessage {
    string Marker = 1;
    array ReservedDBInstancesOfferings = 2;
}

message ReservedDBInstancesOfferingNotFoundFault {
}

message ResetDBParameterGroupMessage {
    string DBParameterGroupName = 1;
    array Parameters = 2;
    boolean ResetAllParameters = 3;
}

message RestoreDBInstanceFromDBSnapshotMessage {
    boolean AutoMinorVersionUpgrade = 1;
    string AvailabilityZone = 2;
    string DBInstanceClass = 3;
    string DBInstanceIdentifier = 4;
    string DBName = 5;
    string DBSnapshotIdentifier = 6;
    string DBSubnetGroupName = 7;
    string Engine = 8;
    integer Iops = 9;
    string LicenseModel = 10;
    boolean MultiAZ = 11;
    string OptionGroupName = 12;
    integer Port = 13;
    boolean PubliclyAccessible = 14;
    string StorageType = 15;
    array Tags = 16;
    string TdeCredentialArn = 17;
    string TdeCredentialPassword = 18;
}

message RestoreDBInstanceFromDBSnapshotResult {
    DBInstance DBInstance = 1;
}

message RestoreDBInstanceToPointInTimeMessage {
    boolean AutoMinorVersionUpgrade = 1;
    string AvailabilityZone = 2;
    string DBInstanceClass = 3;
    string DBName = 4;
    string DBSubnetGroupName = 5;
    string Engine = 6;
    integer Iops = 7;
    string LicenseModel = 8;
    boolean MultiAZ = 9;
    string OptionGroupName = 10;
    integer Port = 11;
    boolean PubliclyAccessible = 12;
    string RestoreTime = 13;
    string SourceDBInstanceIdentifier = 14;
    string StorageType = 15;
    array Tags = 16;
    string TargetDBInstanceIdentifier = 17;
    string TdeCredentialArn = 18;
    string TdeCredentialPassword = 19;
    boolean UseLatestRestorableTime = 20;
}

message RestoreDBInstanceToPointInTimeResult {
    DBInstance DBInstance = 1;
}

message RevokeDBSecurityGroupIngressMessage {
    string CIDRIP = 1;
    string DBSecurityGroupName = 2;
    string EC2SecurityGroupId = 3;
    string EC2SecurityGroupName = 4;
    string EC2SecurityGroupOwnerId = 5;
}

message RevokeDBSecurityGroupIngressResult {
    DBSecurityGroup DBSecurityGroup = 1;
}

message SNSInvalidTopicFault {
}

message SNSNoAuthorizationFault {
}

message SNSTopicArnNotFoundFault {
}

message SnapshotQuotaExceededFault {
}

repeated string SourceIdsList = 1

message SourceNotFoundFault {
}

enum SourceType {
    DBINSTANCE = 0;
    DBPARAMETERGROUP = 1;
    DBSECURITYGROUP = 2;
    DBSNAPSHOT = 3;
}

message StorageQuotaExceededFault {
}

message StorageTypeNotSupportedFault {
}

message Subnet {
    AvailabilityZone SubnetAvailabilityZone = 1;
    string SubnetIdentifier = 2;
    string SubnetStatus = 3;
}

message SubnetAlreadyInUse {
}

repeated string SubnetIdentifierList = 1

repeated Subnet SubnetList = 1

message SubscriptionAlreadyExistFault {
}

message SubscriptionCategoryNotFoundFault {
}

message SubscriptionNotFoundFault {
}

repeated CharacterSet SupportedCharacterSetsList = 1



message Tag {
    string Key = 1;
    string Value = 2;
}

repeated Tag TagList = 1

message TagListMessage {
    array TagList = 1;
}



repeated string VpcSecurityGroupIdList = 1

message VpcSecurityGroupMembership {
    string Status = 1;
    string VpcSecurityGroupId = 2;
}

repeated VpcSecurityGroupMembership VpcSecurityGroupMembershipList = 1















service AmazonRelationalDatabaseServiceService {
    rpc Post(PostRequest) returns (AddSourceIdentifierToSubscriptionResult) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    rpc Post#AddTagsToResource(Post#AddTagsToResourceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AddTagsToResource"
        body: "body"
      };
    }
    rpc Post#AuthorizeDBSecurityGroupIngress(Post#AuthorizeDBSecurityGroupIngressRequest) returns (AuthorizeDBSecurityGroupIngressResult) {
      option (google.api.http) = {
        post: "//#AuthorizeDBSecurityGroupIngress"
        body: "body"
      };
    }
    rpc Post#CopyDBParameterGroup(Post#CopyDBParameterGroupRequest) returns (CopyDBParameterGroupResult) {
      option (google.api.http) = {
        post: "//#CopyDBParameterGroup"
        body: "body"
      };
    }
    rpc Post#CopyDBSnapshot(Post#CopyDBSnapshotRequest) returns (CopyDBSnapshotResult) {
      option (google.api.http) = {
        post: "//#CopyDBSnapshot"
        body: "body"
      };
    }
    rpc Post#CopyOptionGroup(Post#CopyOptionGroupRequest) returns (CopyOptionGroupResult) {
      option (google.api.http) = {
        post: "//#CopyOptionGroup"
        body: "body"
      };
    }
    rpc Post#CreateDBInstance(Post#CreateDBInstanceRequest) returns (CreateDBInstanceResult) {
      option (google.api.http) = {
        post: "//#CreateDBInstance"
        body: "body"
      };
    }
    rpc Post#CreateDBInstanceReadReplica(Post#CreateDBInstanceReadReplicaRequest) returns (CreateDBInstanceReadReplicaResult) {
      option (google.api.http) = {
        post: "//#CreateDBInstanceReadReplica"
        body: "body"
      };
    }
    rpc Post#CreateDBParameterGroup(Post#CreateDBParameterGroupRequest) returns (CreateDBParameterGroupResult) {
      option (google.api.http) = {
        post: "//#CreateDBParameterGroup"
        body: "body"
      };
    }
    rpc Post#CreateDBSecurityGroup(Post#CreateDBSecurityGroupRequest) returns (CreateDBSecurityGroupResult) {
      option (google.api.http) = {
        post: "//#CreateDBSecurityGroup"
        body: "body"
      };
    }
    rpc Post#CreateDBSnapshot(Post#CreateDBSnapshotRequest) returns (CreateDBSnapshotResult) {
      option (google.api.http) = {
        post: "//#CreateDBSnapshot"
        body: "body"
      };
    }
    rpc Post#CreateDBSubnetGroup(Post#CreateDBSubnetGroupRequest) returns (CreateDBSubnetGroupResult) {
      option (google.api.http) = {
        post: "//#CreateDBSubnetGroup"
        body: "body"
      };
    }
    rpc Post#CreateEventSubscription(Post#CreateEventSubscriptionRequest) returns (CreateEventSubscriptionResult) {
      option (google.api.http) = {
        post: "//#CreateEventSubscription"
        body: "body"
      };
    }
    rpc Post#CreateOptionGroup(Post#CreateOptionGroupRequest) returns (CreateOptionGroupResult) {
      option (google.api.http) = {
        post: "//#CreateOptionGroup"
        body: "body"
      };
    }
    rpc Post#DeleteDBInstance(Post#DeleteDBInstanceRequest) returns (DeleteDBInstanceResult) {
      option (google.api.http) = {
        post: "//#DeleteDBInstance"
        body: "body"
      };
    }
    rpc Post#DeleteDBParameterGroup(Post#DeleteDBParameterGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteDBParameterGroup"
        body: "body"
      };
    }
    rpc Post#DeleteDBSecurityGroup(Post#DeleteDBSecurityGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteDBSecurityGroup"
        body: "body"
      };
    }
    rpc Post#DeleteDBSnapshot(Post#DeleteDBSnapshotRequest) returns (DeleteDBSnapshotResult) {
      option (google.api.http) = {
        post: "//#DeleteDBSnapshot"
        body: "body"
      };
    }
    rpc Post#DeleteDBSubnetGroup(Post#DeleteDBSubnetGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteDBSubnetGroup"
        body: "body"
      };
    }
    rpc Post#DeleteEventSubscription(Post#DeleteEventSubscriptionRequest) returns (DeleteEventSubscriptionResult) {
      option (google.api.http) = {
        post: "//#DeleteEventSubscription"
        body: "body"
      };
    }
    rpc Post#DeleteOptionGroup(Post#DeleteOptionGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteOptionGroup"
        body: "body"
      };
    }
    rpc Post#DescribeDBEngineVersions(Post#DescribeDBEngineVersionsRequest) returns (DBEngineVersionMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBEngineVersions"
        body: "body"
      };
    }
    rpc Post#DescribeDBInstances(Post#DescribeDBInstancesRequest) returns (DBInstanceMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBInstances"
        body: "body"
      };
    }
    rpc Post#DescribeDBLogFiles(Post#DescribeDBLogFilesRequest) returns (DescribeDBLogFilesResponse) {
      option (google.api.http) = {
        post: "//#DescribeDBLogFiles"
        body: "body"
      };
    }
    rpc Post#DescribeDBParameterGroups(Post#DescribeDBParameterGroupsRequest) returns (DBParameterGroupsMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBParameterGroups"
        body: "body"
      };
    }
    rpc Post#DescribeDBParameters(Post#DescribeDBParametersRequest) returns (DBParameterGroupDetails) {
      option (google.api.http) = {
        post: "//#DescribeDBParameters"
        body: "body"
      };
    }
    rpc Post#DescribeDBSecurityGroups(Post#DescribeDBSecurityGroupsRequest) returns (DBSecurityGroupMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBSecurityGroups"
        body: "body"
      };
    }
    rpc Post#DescribeDBSnapshots(Post#DescribeDBSnapshotsRequest) returns (DBSnapshotMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBSnapshots"
        body: "body"
      };
    }
    rpc Post#DescribeDBSubnetGroups(Post#DescribeDBSubnetGroupsRequest) returns (DBSubnetGroupMessage) {
      option (google.api.http) = {
        post: "//#DescribeDBSubnetGroups"
        body: "body"
      };
    }
    rpc Post#DescribeEngineDefaultParameters(Post#DescribeEngineDefaultParametersRequest) returns (DescribeEngineDefaultParametersResult) {
      option (google.api.http) = {
        post: "//#DescribeEngineDefaultParameters"
        body: "body"
      };
    }
    rpc Post#DescribeEventCategories(Post#DescribeEventCategoriesRequest) returns (EventCategoriesMessage) {
      option (google.api.http) = {
        post: "//#DescribeEventCategories"
        body: "body"
      };
    }
    rpc Post#DescribeEventSubscriptions(Post#DescribeEventSubscriptionsRequest) returns (EventSubscriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEventSubscriptions"
        body: "body"
      };
    }
    rpc Post#DescribeEvents(Post#DescribeEventsRequest) returns (EventsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEvents"
        body: "body"
      };
    }
    rpc Post#DescribeOptionGroupOptions(Post#DescribeOptionGroupOptionsRequest) returns (OptionGroupOptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeOptionGroupOptions"
        body: "body"
      };
    }
    rpc Post#DescribeOptionGroups(Post#DescribeOptionGroupsRequest) returns (OptionGroups) {
      option (google.api.http) = {
        post: "//#DescribeOptionGroups"
        body: "body"
      };
    }
    rpc Post#DescribeOrderableDBInstanceOptions(Post#DescribeOrderableDBInstanceOptionsRequest) returns (OrderableDBInstanceOptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeOrderableDBInstanceOptions"
        body: "body"
      };
    }
    rpc Post#DescribeReservedDBInstances(Post#DescribeReservedDBInstancesRequest) returns (ReservedDBInstanceMessage) {
      option (google.api.http) = {
        post: "//#DescribeReservedDBInstances"
        body: "body"
      };
    }
    rpc Post#DescribeReservedDBInstancesOfferings(Post#DescribeReservedDBInstancesOfferingsRequest) returns (ReservedDBInstancesOfferingMessage) {
      option (google.api.http) = {
        post: "//#DescribeReservedDBInstancesOfferings"
        body: "body"
      };
    }
    rpc Post#DownloadDBLogFilePortion(Post#DownloadDBLogFilePortionRequest) returns (DownloadDBLogFilePortionDetails) {
      option (google.api.http) = {
        post: "//#DownloadDBLogFilePortion"
        body: "body"
      };
    }
    rpc Post#ListTagsForResource(Post#ListTagsForResourceRequest) returns (TagListMessage) {
      option (google.api.http) = {
        post: "//#ListTagsForResource"
        body: "body"
      };
    }
    rpc Post#ModifyDBInstance(Post#ModifyDBInstanceRequest) returns (ModifyDBInstanceResult) {
      option (google.api.http) = {
        post: "//#ModifyDBInstance"
        body: "body"
      };
    }
    rpc Post#ModifyDBParameterGroup(Post#ModifyDBParameterGroupRequest) returns (DBParameterGroupNameMessage) {
      option (google.api.http) = {
        post: "//#ModifyDBParameterGroup"
        body: "body"
      };
    }
    rpc Post#ModifyDBSubnetGroup(Post#ModifyDBSubnetGroupRequest) returns (ModifyDBSubnetGroupResult) {
      option (google.api.http) = {
        post: "//#ModifyDBSubnetGroup"
        body: "body"
      };
    }
    rpc Post#ModifyEventSubscription(Post#ModifyEventSubscriptionRequest) returns (ModifyEventSubscriptionResult) {
      option (google.api.http) = {
        post: "//#ModifyEventSubscription"
        body: "body"
      };
    }
    rpc Post#ModifyOptionGroup(Post#ModifyOptionGroupRequest) returns (ModifyOptionGroupResult) {
      option (google.api.http) = {
        post: "//#ModifyOptionGroup"
        body: "body"
      };
    }
    rpc Post#PromoteReadReplica(Post#PromoteReadReplicaRequest) returns (PromoteReadReplicaResult) {
      option (google.api.http) = {
        post: "//#PromoteReadReplica"
        body: "body"
      };
    }
    rpc Post#PurchaseReservedDBInstancesOffering(Post#PurchaseReservedDBInstancesOfferingRequest) returns (PurchaseReservedDBInstancesOfferingResult) {
      option (google.api.http) = {
        post: "//#PurchaseReservedDBInstancesOffering"
        body: "body"
      };
    }
    rpc Post#RebootDBInstance(Post#RebootDBInstanceRequest) returns (RebootDBInstanceResult) {
      option (google.api.http) = {
        post: "//#RebootDBInstance"
        body: "body"
      };
    }
    rpc Post#RemoveSourceIdentifierFromSubscription(Post#RemoveSourceIdentifierFromSubscriptionRequest) returns (RemoveSourceIdentifierFromSubscriptionResult) {
      option (google.api.http) = {
        post: "//#RemoveSourceIdentifierFromSubscription"
        body: "body"
      };
    }
    rpc Post#RemoveTagsFromResource(Post#RemoveTagsFromResourceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RemoveTagsFromResource"
        body: "body"
      };
    }
    rpc Post#ResetDBParameterGroup(Post#ResetDBParameterGroupRequest) returns (DBParameterGroupNameMessage) {
      option (google.api.http) = {
        post: "//#ResetDBParameterGroup"
        body: "body"
      };
    }
    rpc Post#RestoreDBInstanceFromDBSnapshot(Post#RestoreDBInstanceFromDBSnapshotRequest) returns (RestoreDBInstanceFromDBSnapshotResult) {
      option (google.api.http) = {
        post: "//#RestoreDBInstanceFromDBSnapshot"
        body: "body"
      };
    }
    rpc Post#RestoreDBInstanceToPointInTime(Post#RestoreDBInstanceToPointInTimeRequest) returns (RestoreDBInstanceToPointInTimeResult) {
      option (google.api.http) = {
        post: "//#RestoreDBInstanceToPointInTime"
        body: "body"
      };
    }
    rpc Post#RevokeDBSecurityGroupIngress(Post#RevokeDBSecurityGroupIngressRequest) returns (RevokeDBSecurityGroupIngressResult) {
      option (google.api.http) = {
        post: "//#RevokeDBSecurityGroupIngress"
        body: "body"
      };
    }
}
