syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package amazonelasticcomputecloud;

message Post#AcceptReservedInstancesExchangeQuoteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AcceptReservedInstancesExchangeQuoteRequest body = 10;
}

message Post#AcceptVpcPeeringConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AcceptVpcPeeringConnectionRequest body = 10;
}

message Post#AllocateAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AllocateAddressRequest body = 10;
}

message Post#AllocateHostsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AllocateHostsRequest body = 10;
}

message Post#AssignIpv6AddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssignIpv6AddressesRequest body = 10;
}

message Post#AssignPrivateIpAddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssignPrivateIpAddressesRequest body = 10;
}

message Post#AssociateAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateAddressRequest body = 10;
}

message Post#AssociateDhcpOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateDhcpOptionsRequest body = 10;
}

message Post#AssociateIamInstanceProfileRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateIamInstanceProfileRequest body = 10;
}

message Post#AssociateRouteTableRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateRouteTableRequest body = 10;
}

message Post#AssociateSubnetCidrBlockRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateSubnetCidrBlockRequest body = 10;
}

message Post#AssociateVpcCidrBlockRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateVpcCidrBlockRequest body = 10;
}

message Post#AttachClassicLinkVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachClassicLinkVpcRequest body = 10;
}

message Post#AttachInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachInternetGatewayRequest body = 10;
}

message Post#AttachNetworkInterfaceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachNetworkInterfaceRequest body = 10;
}

message Post#AttachVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachVolumeRequest body = 10;
}

message Post#AttachVpnGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachVpnGatewayRequest body = 10;
}

message Post#AuthorizeSecurityGroupEgressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AuthorizeSecurityGroupEgressRequest body = 10;
}

message Post#AuthorizeSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AuthorizeSecurityGroupIngressRequest body = 10;
}

message Post#BundleInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    BundleInstanceRequest body = 10;
}

message Post#CancelBundleTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelBundleTaskRequest body = 10;
}

message Post#CancelConversionTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelConversionRequest body = 10;
}

message Post#CancelExportTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelExportTaskRequest body = 10;
}

message Post#CancelImportTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelImportTaskRequest body = 10;
}

message Post#CancelReservedInstancesListingRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelReservedInstancesListingRequest body = 10;
}

message Post#CancelSpotFleetRequestsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelSpotFleetRequestsRequest body = 10;
}

message Post#CancelSpotInstanceRequestsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelSpotInstanceRequestsRequest body = 10;
}

message Post#ConfirmProductInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ConfirmProductInstanceRequest body = 10;
}

message Post#CopyFpgaImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyFpgaImageRequest body = 10;
}

message Post#CopyImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyImageRequest body = 10;
}

message Post#CopySnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopySnapshotRequest body = 10;
}

message Post#CreateCustomerGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCustomerGatewayRequest body = 10;
}

message Post#CreateDefaultVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDefaultVpcRequest body = 10;
}

message Post#CreateDhcpOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateDhcpOptionsRequest body = 10;
}

message Post#CreateEgressOnlyInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateEgressOnlyInternetGatewayRequest body = 10;
}

message Post#CreateFlowLogsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateFlowLogsRequest body = 10;
}

message Post#CreateFpgaImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateFpgaImageRequest body = 10;
}

message Post#CreateImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateImageRequest body = 10;
}

message Post#CreateInstanceExportTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateInstanceExportTaskRequest body = 10;
}

message Post#CreateInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateInternetGatewayRequest body = 10;
}

message Post#CreateKeyPairRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateKeyPairRequest body = 10;
}

message Post#CreateNatGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNatGatewayRequest body = 10;
}

message Post#CreateNetworkAclRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNetworkAclRequest body = 10;
}

message Post#CreateNetworkAclEntryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNetworkAclEntryRequest body = 10;
}

message Post#CreateNetworkInterfaceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNetworkInterfaceRequest body = 10;
}

message Post#CreateNetworkInterfacePermissionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNetworkInterfacePermissionRequest body = 10;
}

message Post#CreatePlacementGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreatePlacementGroupRequest body = 10;
}

message Post#CreateReservedInstancesListingRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateReservedInstancesListingRequest body = 10;
}

message Post#CreateRouteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateRouteRequest body = 10;
}

message Post#CreateRouteTableRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateRouteTableRequest body = 10;
}

message Post#CreateSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSecurityGroupRequest body = 10;
}

message Post#CreateSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSnapshotRequest body = 10;
}

message Post#CreateSpotDatafeedSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSpotDatafeedSubscriptionRequest body = 10;
}

message Post#CreateSubnetRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSubnetRequest body = 10;
}

message Post#CreateTagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateTagsRequest body = 10;
}

message Post#CreateVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVolumeRequest body = 10;
}

message Post#CreateVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpcRequest body = 10;
}

message Post#CreateVpcEndpointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpcEndpointRequest body = 10;
}

message Post#CreateVpcPeeringConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpcPeeringConnectionRequest body = 10;
}

message Post#CreateVpnConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpnConnectionRequest body = 10;
}

message Post#CreateVpnConnectionRouteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpnConnectionRouteRequest body = 10;
}

message Post#CreateVpnGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateVpnGatewayRequest body = 10;
}

message Post#DeleteCustomerGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCustomerGatewayRequest body = 10;
}

message Post#DeleteDhcpOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteDhcpOptionsRequest body = 10;
}

message Post#DeleteEgressOnlyInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteEgressOnlyInternetGatewayRequest body = 10;
}

message Post#DeleteFlowLogsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteFlowLogsRequest body = 10;
}

message Post#DeleteFpgaImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteFpgaImageRequest body = 10;
}

message Post#DeleteInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteInternetGatewayRequest body = 10;
}

message Post#DeleteKeyPairRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteKeyPairRequest body = 10;
}

message Post#DeleteNatGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNatGatewayRequest body = 10;
}

message Post#DeleteNetworkAclRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNetworkAclRequest body = 10;
}

message Post#DeleteNetworkAclEntryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNetworkAclEntryRequest body = 10;
}

message Post#DeleteNetworkInterfaceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNetworkInterfaceRequest body = 10;
}

message Post#DeleteNetworkInterfacePermissionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteNetworkInterfacePermissionRequest body = 10;
}

message Post#DeletePlacementGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePlacementGroupRequest body = 10;
}

message Post#DeleteRouteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteRouteRequest body = 10;
}

message Post#DeleteRouteTableRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteRouteTableRequest body = 10;
}

message Post#DeleteSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSecurityGroupRequest body = 10;
}

message Post#DeleteSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSnapshotRequest body = 10;
}

message Post#DeleteSpotDatafeedSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSpotDatafeedSubscriptionRequest body = 10;
}

message Post#DeleteSubnetRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSubnetRequest body = 10;
}

message Post#DeleteTagsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteTagsRequest body = 10;
}

message Post#DeleteVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVolumeRequest body = 10;
}

message Post#DeleteVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpcRequest body = 10;
}

message Post#DeleteVpcEndpointsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpcEndpointsRequest body = 10;
}

message Post#DeleteVpcPeeringConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpcPeeringConnectionRequest body = 10;
}

message Post#DeleteVpnConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpnConnectionRequest body = 10;
}

message Post#DeleteVpnConnectionRouteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpnConnectionRouteRequest body = 10;
}

message Post#DeleteVpnGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVpnGatewayRequest body = 10;
}

message Post#DeregisterImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeregisterImageRequest body = 10;
}

message Post#DescribeAccountAttributesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAccountAttributesRequest body = 10;
}

message Post#DescribeAddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAddressesRequest body = 10;
}

message Post#DescribeAvailabilityZonesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAvailabilityZonesRequest body = 10;
}

message Post#DescribeBundleTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeBundleTasksRequest body = 10;
}

message Post#DescribeClassicLinkInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeClassicLinkInstancesRequest body = 10;
}

message Post#DescribeConversionTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeConversionTasksRequest body = 10;
}

message Post#DescribeCustomerGatewaysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCustomerGatewaysRequest body = 10;
}

message Post#DescribeDhcpOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeDhcpOptionsRequest body = 10;
}

message Post#DescribeEgressOnlyInternetGatewaysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEgressOnlyInternetGatewaysRequest body = 10;
}

message Post#DescribeElasticGpusRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeElasticGpusRequest body = 10;
}

message Post#DescribeExportTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeExportTasksRequest body = 10;
}

message Post#DescribeFlowLogsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeFlowLogsRequest body = 10;
}

message Post#DescribeFpgaImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeFpgaImageAttributeRequest body = 10;
}

message Post#DescribeFpgaImagesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeFpgaImagesRequest body = 10;
}

message Post#DescribeHostReservationOfferingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeHostReservationOfferingsRequest body = 10;
}

message Post#DescribeHostReservationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeHostReservationsRequest body = 10;
}

message Post#DescribeHostsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeHostsRequest body = 10;
}

message Post#DescribeIamInstanceProfileAssociationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeIamInstanceProfileAssociationsRequest body = 10;
}

message Post#DescribeIdFormatRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeIdFormatRequest body = 10;
}

message Post#DescribeIdentityIdFormatRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeIdentityIdFormatRequest body = 10;
}

message Post#DescribeImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeImageAttributeRequest body = 10;
}

message Post#DescribeImagesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeImagesRequest body = 10;
}

message Post#DescribeImportImageTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeImportImageTasksRequest body = 10;
}

message Post#DescribeImportSnapshotTasksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeImportSnapshotTasksRequest body = 10;
}

message Post#DescribeInstanceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeInstanceAttributeRequest body = 10;
}

message Post#DescribeInstanceStatusRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeInstanceStatusRequest body = 12;
}

message Post#DescribeInstancesRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeInstancesRequest body = 12;
}

message Post#DescribeInternetGatewaysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeInternetGatewaysRequest body = 10;
}

message Post#DescribeKeyPairsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeKeyPairsRequest body = 10;
}

message Post#DescribeMovingAddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeMovingAddressesRequest body = 10;
}

message Post#DescribeNatGatewaysRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeNatGatewaysRequest body = 12;
}

message Post#DescribeNetworkAclsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeNetworkAclsRequest body = 10;
}

message Post#DescribeNetworkInterfaceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeNetworkInterfaceAttributeRequest body = 10;
}

message Post#DescribeNetworkInterfacePermissionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeNetworkInterfacePermissionsRequest body = 10;
}

message Post#DescribeNetworkInterfacesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeNetworkInterfacesRequest body = 10;
}

message Post#DescribePlacementGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribePlacementGroupsRequest body = 10;
}

message Post#DescribePrefixListsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribePrefixListsRequest body = 10;
}

message Post#DescribeRegionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeRegionsRequest body = 10;
}

message Post#DescribeReservedInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeReservedInstancesRequest body = 10;
}

message Post#DescribeReservedInstancesListingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeReservedInstancesListingsRequest body = 10;
}

message Post#DescribeReservedInstancesModificationsRequest {
    string Action = 1;
    // Pagination token
    string NextToken = 2;
    string Version = 3;
    string X_Amz_Algorithm = 4;
    string X_Amz_Content_Sha256 = 5;
    string X_Amz_Credential = 6;
    string X_Amz_Date = 7;
    string X_Amz_Security_Token = 8;
    string X_Amz_Signature = 9;
    string X_Amz_SignedHeaders = 10;
    DescribeReservedInstancesModificationsRequest body = 11;
}

message Post#DescribeReservedInstancesOfferingsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReservedInstancesOfferingsRequest body = 12;
}

message Post#DescribeRouteTablesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeRouteTablesRequest body = 10;
}

message Post#DescribeScheduledInstanceAvailabilityRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeScheduledInstanceAvailabilityRequest body = 10;
}

message Post#DescribeScheduledInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeScheduledInstancesRequest body = 10;
}

message Post#DescribeSecurityGroupReferencesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSecurityGroupReferencesRequest body = 10;
}

message Post#DescribeSecurityGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSecurityGroupsRequest body = 10;
}

message Post#DescribeSnapshotAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSnapshotAttributeRequest body = 10;
}

message Post#DescribeSnapshotsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeSnapshotsRequest body = 12;
}

message Post#DescribeSpotDatafeedSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSpotDatafeedSubscriptionRequest body = 10;
}

message Post#DescribeSpotFleetInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSpotFleetInstancesRequest body = 10;
}

message Post#DescribeSpotFleetRequestHistoryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSpotFleetRequestHistoryRequest body = 10;
}

message Post#DescribeSpotFleetRequestsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeSpotFleetRequestsRequest body = 12;
}

message Post#DescribeSpotInstanceRequestsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSpotInstanceRequestsRequest body = 10;
}

message Post#DescribeSpotPriceHistoryRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeSpotPriceHistoryRequest body = 12;
}

message Post#DescribeStaleSecurityGroupsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeStaleSecurityGroupsRequest body = 10;
}

message Post#DescribeSubnetsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSubnetsRequest body = 10;
}

message Post#DescribeTagsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTagsRequest body = 12;
}

message Post#DescribeVolumeAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVolumeAttributeRequest body = 10;
}

message Post#DescribeVolumeStatusRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeVolumeStatusRequest body = 12;
}

message Post#DescribeVolumesRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeVolumesRequest body = 12;
}

message Post#DescribeVolumesModificationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVolumesModificationsRequest body = 10;
}

message Post#DescribeVpcAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcAttributeRequest body = 10;
}

message Post#DescribeVpcClassicLinkRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcClassicLinkRequest body = 10;
}

message Post#DescribeVpcClassicLinkDnsSupportRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcClassicLinkDnsSupportRequest body = 10;
}

message Post#DescribeVpcEndpointServicesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcEndpointServicesRequest body = 10;
}

message Post#DescribeVpcEndpointsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcEndpointsRequest body = 10;
}

message Post#DescribeVpcPeeringConnectionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcPeeringConnectionsRequest body = 10;
}

message Post#DescribeVpcsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpcsRequest body = 10;
}

message Post#DescribeVpnConnectionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpnConnectionsRequest body = 10;
}

message Post#DescribeVpnGatewaysRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeVpnGatewaysRequest body = 10;
}

message Post#DetachClassicLinkVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachClassicLinkVpcRequest body = 10;
}

message Post#DetachInternetGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachInternetGatewayRequest body = 10;
}

message Post#DetachNetworkInterfaceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachNetworkInterfaceRequest body = 10;
}

message Post#DetachVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachVolumeRequest body = 10;
}

message Post#DetachVpnGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachVpnGatewayRequest body = 10;
}

message Post#DisableVgwRoutePropagationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisableVgwRoutePropagationRequest body = 10;
}

message Post#DisableVpcClassicLinkRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisableVpcClassicLinkRequest body = 10;
}

message Post#DisableVpcClassicLinkDnsSupportRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisableVpcClassicLinkDnsSupportRequest body = 10;
}

message Post#DisassociateAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateAddressRequest body = 10;
}

message Post#DisassociateIamInstanceProfileRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateIamInstanceProfileRequest body = 10;
}

message Post#DisassociateRouteTableRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateRouteTableRequest body = 10;
}

message Post#DisassociateSubnetCidrBlockRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateSubnetCidrBlockRequest body = 10;
}

message Post#DisassociateVpcCidrBlockRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateVpcCidrBlockRequest body = 10;
}

message Post#EnableVgwRoutePropagationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableVgwRoutePropagationRequest body = 10;
}

message Post#EnableVolumeIORequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableVolumeIORequest body = 10;
}

message Post#EnableVpcClassicLinkRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableVpcClassicLinkRequest body = 10;
}

message Post#EnableVpcClassicLinkDnsSupportRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableVpcClassicLinkDnsSupportRequest body = 10;
}

message Post#GetConsoleOutputRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetConsoleOutputRequest body = 10;
}

message Post#GetConsoleScreenshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetConsoleScreenshotRequest body = 10;
}

message Post#GetHostReservationPurchasePreviewRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetHostReservationPurchasePreviewRequest body = 10;
}

message Post#GetPasswordDataRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetPasswordDataRequest body = 10;
}

message Post#GetReservedInstancesExchangeQuoteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    GetReservedInstancesExchangeQuoteRequest body = 10;
}

message Post#ImportImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportImageRequest body = 10;
}

message Post#ImportInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportInstanceRequest body = 10;
}

message Post#ImportKeyPairRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportKeyPairRequest body = 10;
}

message Post#ImportSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportSnapshotRequest body = 10;
}

message Post#ImportVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportVolumeRequest body = 10;
}

message Post#ModifyFpgaImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyFpgaImageAttributeRequest body = 10;
}

message Post#ModifyHostsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyHostsRequest body = 10;
}

message Post#ModifyIdFormatRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyIdFormatRequest body = 10;
}

message Post#ModifyIdentityIdFormatRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyIdentityIdFormatRequest body = 10;
}

message Post#ModifyImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyImageAttributeRequest body = 10;
}

message Post#ModifyInstanceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyInstanceAttributeRequest body = 10;
}

message Post#ModifyInstancePlacementRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyInstancePlacementRequest body = 10;
}

message Post#ModifyNetworkInterfaceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyNetworkInterfaceAttributeRequest body = 10;
}

message Post#ModifyReservedInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyReservedInstancesRequest body = 10;
}

message Post#ModifySnapshotAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifySnapshotAttributeRequest body = 10;
}

message Post#ModifySpotFleetRequestRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifySpotFleetRequestRequest body = 10;
}

message Post#ModifySubnetAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifySubnetAttributeRequest body = 10;
}

message Post#ModifyVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyVolumeRequest body = 10;
}

message Post#ModifyVolumeAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyVolumeAttributeRequest body = 10;
}

message Post#ModifyVpcAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyVpcAttributeRequest body = 10;
}

message Post#ModifyVpcEndpointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyVpcEndpointRequest body = 10;
}

message Post#ModifyVpcPeeringConnectionOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyVpcPeeringConnectionOptionsRequest body = 10;
}

message Post#MonitorInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    MonitorInstancesRequest body = 10;
}

message Post#MoveAddressToVpcRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    MoveAddressToVpcRequest body = 10;
}

message Post#PurchaseHostReservationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PurchaseHostReservationRequest body = 10;
}

message Post#PurchaseReservedInstancesOfferingRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PurchaseReservedInstancesOfferingRequest body = 10;
}

message Post#PurchaseScheduledInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PurchaseScheduledInstancesRequest body = 10;
}

message Post#RebootInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RebootInstancesRequest body = 10;
}

message Post#RegisterImageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RegisterImageRequest body = 10;
}

message Post#RejectVpcPeeringConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RejectVpcPeeringConnectionRequest body = 10;
}

message Post#ReleaseAddressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReleaseAddressRequest body = 10;
}

message Post#ReleaseHostsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReleaseHostsRequest body = 10;
}

message Post#ReplaceIamInstanceProfileAssociationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReplaceIamInstanceProfileAssociationRequest body = 10;
}

message Post#ReplaceNetworkAclAssociationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReplaceNetworkAclAssociationRequest body = 10;
}

message Post#ReplaceNetworkAclEntryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReplaceNetworkAclEntryRequest body = 10;
}

message Post#ReplaceRouteRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReplaceRouteRequest body = 10;
}

message Post#ReplaceRouteTableAssociationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReplaceRouteTableAssociationRequest body = 10;
}

message Post#ReportInstanceStatusRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReportInstanceStatusRequest body = 10;
}

message Post#RequestSpotFleetRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RequestSpotFleetRequest body = 10;
}

message Post#RequestSpotInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RequestSpotInstancesRequest body = 10;
}

message Post#ResetFpgaImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetFpgaImageAttributeRequest body = 10;
}

message Post#ResetImageAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetImageAttributeRequest body = 10;
}

message Post#ResetInstanceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetInstanceAttributeRequest body = 10;
}

message Post#ResetNetworkInterfaceAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetNetworkInterfaceAttributeRequest body = 10;
}

message Post#ResetSnapshotAttributeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetSnapshotAttributeRequest body = 10;
}

message Post#RestoreAddressToClassicRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RestoreAddressToClassicRequest body = 10;
}

message Post#RevokeSecurityGroupEgressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RevokeSecurityGroupEgressRequest body = 10;
}

message Post#RevokeSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RevokeSecurityGroupIngressRequest body = 10;
}

message Post#RunInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RunInstancesRequest body = 10;
}

message Post#RunScheduledInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RunScheduledInstancesRequest body = 10;
}

message Post#StartInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    StartInstancesRequest body = 10;
}

message Post#StopInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    StopInstancesRequest body = 10;
}

message Post#TerminateInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TerminateInstancesRequest body = 10;
}

message Post#UnassignIpv6AddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UnassignIpv6AddressesRequest body = 10;
}

message Post#UnassignPrivateIpAddressesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UnassignPrivateIpAddressesRequest body = 10;
}

message Post#UnmonitorInstancesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UnmonitorInstancesRequest body = 10;
}

message Post#UpdateSecurityGroupRuleDescriptionsEgressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateSecurityGroupRuleDescriptionsEgressRequest body = 10;
}

message Post#UpdateSecurityGroupRuleDescriptionsIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateSecurityGroupRuleDescriptionsIngressRequest body = 10;
}

message AcceptReservedInstancesExchangeQuoteRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The IDs of the Convertible Reserved Instances to exchange for other Convertible Reserved Instances of the same or higher value.
    array ReservedInstanceIds = 2;
    // The configurations of the Convertible Reserved Instance offerings that you are purchasing in this exchange.
    array TargetConfigurations = 3;
}

message AcceptReservedInstancesExchangeQuoteResult {
    // The ID of the successful exchange.
    string ExchangeId = 1;
}

message AcceptVpcPeeringConnectionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 2;
}

message AcceptVpcPeeringConnectionResult {
    // Information about the VPC peering connection.
    VpcPeeringConnection VpcPeeringConnection = 1;
}

message AccountAttribute {
    // The name of the account attribute.
    string AttributeName = 1;
    // One or more values for the account attribute.
    array AttributeValues = 2;
}

repeated AccountAttribute AccountAttributeList = 1

enum AccountAttributeName {
    SUPPORTEDPLATFORMS = 0;
    DEFAULTVPC = 1;
}

repeated AccountAttributeName AccountAttributeNameStringList = 1

message AccountAttributeValue {
    // The value of the attribute.
    string AttributeValue = 1;
}

repeated AccountAttributeValue AccountAttributeValueList = 1



message ActiveInstance {
    // The health status of the instance. If the status of either the instance status check or the system status check is <code>impaired</code>, the health status of the instance is <code>unhealthy</code>. Otherwise, the health status is <code>healthy</code>.
    InstanceHealthStatus InstanceHealth = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // The instance type.
    string InstanceType = 3;
    // The ID of the Spot instance request.
    string SpotInstanceRequestId = 4;
}

repeated ActiveInstance ActiveInstanceSet = 1

enum ActivityStatu {
    ERROR = 0;
    PENDING_FULFILLMENT = 1;
    PENDING_TERMINATION = 2;
    FULFILLED = 3;
}

message Address {
    // The ID representing the allocation of the address for use with EC2-VPC.
    string AllocationId = 1;
    // The ID representing the association of the address with an instance in a VPC.
    string AssociationId = 2;
    // Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
    DomainType Domain = 3;
    // The ID of the instance that the address is associated with (if any).
    string InstanceId = 4;
    // The ID of the network interface.
    string NetworkInterfaceId = 5;
    // The ID of the AWS account that owns the network interface.
    string NetworkInterfaceOwnerId = 6;
    // The private IP address associated with the Elastic IP address.
    string PrivateIpAddress = 7;
    // The Elastic IP address.
    string PublicIp = 8;
}

repeated Address AddressList = 1

enum Affinity {
    DEFAULT = 0;
    HOST = 1;
}

message AllocateAddressRequest {
    // [EC2-VPC] The Elastic IP address to recover.
    string Address = 1;
    // <p>Set to <code>vpc</code> to allocate the address for use with instances in a VPC.</p> <p>Default: The address is for use with instances in EC2-Classic.</p>
    DomainType Domain = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
}

message AllocateAddressResult {
    // [EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
    string AllocationId = 1;
    // Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
    DomainType Domain = 2;
    // The Elastic IP address.
    string PublicIp = 3;
}

message AllocateHostsRequest {
    // <p>This is enabled by default. This property allows instances to be automatically placed onto available Dedicated Hosts, when you are launching instances without specifying a host ID.</p> <p>Default: Enabled</p>
    AutoPlacement AutoPlacement = 1;
    // The Availability Zone for the Dedicated Hosts.
    string AvailabilityZone = 2;
    // Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClientToken = 3;
    // Specify the instance type that you want your Dedicated Hosts to be configured for. When you specify the instance type, that is the only instance type that you can launch onto that host.
    string InstanceType = 4;
    // The number of Dedicated Hosts you want to allocate to your account with these parameters.
    integer Quantity = 5;
}

message AllocateHostsResult {
    // The ID of the allocated Dedicated Host. This is used when you want to launch an instance onto a specific host.
    array HostIds = 1;
}

repeated string AllocationIdList = 1

enum AllocationState {
    AVAILABLE = 0;
    UNDERASSESSMENT = 1;
    PERMANENTFAILURE = 2;
    RELEASED = 3;
    RELEASEDPERMANENTFAILURE = 4;
}

enum AllocationStrategy {
    LOWESTPRICE = 0;
    DIVERSIFIED = 1;
}

enum ArchitectureValue {
    I386 = 0;
    X86_64 = 1;
}

message AssignIpv6AddressesRequest {
    // The number of IPv6 addresses to assign to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
    integer Ipv6AddressCount = 1;
    // One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.
    array Ipv6Addresses = 2;
    // The ID of the network interface.
    string NetworkInterfaceId = 3;
}

message AssignIpv6AddressesResult {
    // The IPv6 addresses assigned to the network interface.
    array AssignedIpv6Addresses = 1;
    // The ID of the network interface.
    string NetworkInterfaceId = 2;
}

message AssignPrivateIpAddressesRequest {
    // Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
    boolean AllowReassignment = 1;
    // The ID of the network interface.
    string NetworkInterfaceId = 2;
    // <p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>
    array PrivateIpAddresses = 3;
    // The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
    integer SecondaryPrivateIpAddressCount = 4;
}

message AssociateAddressRequest {
    // [EC2-VPC] The allocation ID. This is required for EC2-VPC.
    string AllocationId = 1;
    // [EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.
    boolean AllowReassociation = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    string InstanceId = 4;
    // [EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.
    string NetworkInterfaceId = 5;
    // [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
    string PrivateIpAddress = 6;
    // The Elastic IP address. This is required for EC2-Classic.
    string PublicIp = 7;
}

message AssociateAddressResult {
    // [EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.
    string AssociationId = 1;
}

message AssociateDhcpOptionsRequest {
    // The ID of the DHCP options set, or <code>default</code> to associate no DHCP options with the VPC.
    string DhcpOptionsId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message AssociateIamInstanceProfileRequest {
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 1;
    // The ID of the instance.
    string InstanceId = 2;
}

message AssociateIamInstanceProfileResult {
    // Information about the IAM instance profile association.
    IamInstanceProfileAssociation IamInstanceProfileAssociation = 1;
}

message AssociateRouteTableRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the route table.
    string RouteTableId = 2;
    // The ID of the subnet.
    string SubnetId = 3;
}

message AssociateRouteTableResult {
    // The route table association ID (needed to disassociate the route table).
    string AssociationId = 1;
}

message AssociateSubnetCidrBlockRequest {
    // The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.
    string Ipv6CidrBlock = 1;
    // The ID of your subnet.
    string SubnetId = 2;
}

message AssociateSubnetCidrBlockResult {
    // Information about the IPv6 CIDR block association.
    SubnetIpv6CidrBlockAssociation Ipv6CidrBlockAssociation = 1;
    // The ID of the subnet.
    string SubnetId = 2;
}

message AssociateVpcCidrBlockRequest {
    // Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
    boolean AmazonProvidedIpv6CidrBlock = 1;
    // An IPv4 CIDR block to associate with the VPC.
    string CidrBlock = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message AssociateVpcCidrBlockResult {
    // Information about the IPv4 CIDR block association.
    VpcCidrBlockAssociation CidrBlockAssociation = 1;
    // Information about the IPv6 CIDR block association.
    VpcIpv6CidrBlockAssociation Ipv6CidrBlockAssociation = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

repeated string AssociationIdList = 1

message AttachClassicLinkVpcRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.
    array Groups = 2;
    // The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
    string InstanceId = 3;
    // The ID of a ClassicLink-enabled VPC.
    string VpcId = 4;
}

message AttachClassicLinkVpcResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message AttachInternetGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the Internet gateway.
    string InternetGatewayId = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message AttachNetworkInterfaceRequest {
    // The index of the device for the network interface attachment.
    integer DeviceIndex = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The ID of the network interface.
    string NetworkInterfaceId = 4;
}

message AttachNetworkInterfaceResult {
    // The ID of the network interface attachment.
    string AttachmentId = 1;
}

message AttachVolumeRequest {
    // The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string Device = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
    string VolumeId = 4;
}

message AttachVpnGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
    // The ID of the virtual private gateway.
    string VpnGatewayId = 3;
}

message AttachVpnGatewayResult {
    // Information about the attachment.
    VpcAttachment VpcAttachment = 1;
}

enum AttachmentStatu {
    ATTACHING = 0;
    ATTACHED = 1;
    DETACHING = 2;
    DETACHED = 3;
}

message AttributeBooleanValue {
    // The attribute value. The valid values are <code>true</code> or <code>false</code>.
    boolean Value = 1;
}

message AttributeValue {
    // The attribute value. Note that the value is case-sensitive.
    string Value = 1;
}

message AuthorizeSecurityGroupEgressRequest {
    // The CIDR IPv4 address range. We recommend that you specify the CIDR range in a set of IP permissions instead.
    string CidrIp = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.
    integer FromPort = 3;
    // The ID of the security group.
    string GroupId = 4;
    // A set of IP permissions. You can't specify a destination security group and a CIDR IP address range.
    array IpPermissions = 5;
    // The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead.
    string IpProtocol = 6;
    // The name of a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead.
    string SourceSecurityGroupName = 7;
    // The AWS account number for a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead.
    string SourceSecurityGroupOwnerId = 8;
    // The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.
    integer ToPort = 9;
}

message AuthorizeSecurityGroupIngressRequest {
    // The CIDR IPv4 address range. You can't specify this parameter when specifying a source security group.
    string CidrIp = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. For the ICMP/ICMPv6 type number, use <code>-1</code> to specify all types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    integer FromPort = 3;
    // The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
    string GroupId = 4;
    // [EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.
    string GroupName = 5;
    // A set of IP permissions. Can be used to specify multiple rules in a single command.
    array IpPermissions = 6;
    // The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). (VPC only) Use <code>-1</code> to specify all protocols. If you specify <code>-1</code>, or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>58</code> (ICMPv6), traffic on all ports is allowed, regardless of any ports you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For protocol <code>58</code> (ICMPv6), you can optionally specify a port range; if you don't, traffic for all types and codes is allowed.
    string IpProtocol = 7;
    // [EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.
    string SourceSecurityGroupName = 8;
    // [EC2-Classic] The AWS account number for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.
    string SourceSecurityGroupOwnerId = 9;
    // The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code number. For the ICMP/ICMPv6 code number, use <code>-1</code> to specify all codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    integer ToPort = 10;
}

enum AutoPlacement {
    ON = 0;
    OFF = 1;
}

message AvailabilityZone {
    // Any messages about the Availability Zone.
    array Messages = 1;
    // The name of the region.
    string RegionName = 2;
    // The state of the Availability Zone.
    AvailabilityZoneState State = 3;
    // The name of the Availability Zone.
    string ZoneName = 4;
}

repeated AvailabilityZone AvailabilityZoneList = 1

message AvailabilityZoneMessage {
    // The message about the Availability Zone.
    string Message = 1;
}

repeated AvailabilityZoneMessage AvailabilityZoneMessageList = 1

enum AvailabilityZoneState {
    AVAILABLE = 0;
    INFORMATION = 1;
    IMPAIRED = 2;
    UNAVAILABLE = 3;
}

message AvailableCapacity {
    // The total number of instances that the Dedicated Host supports.
    array AvailableInstanceCapacity = 1;
    // The number of vCPUs available on the Dedicated Host.
    integer AvailableVCpus = 2;
}

repeated InstanceCapacity AvailableInstanceCapacityList = 1

enum BatchState {
    SUBMITTED = 0;
    ACTIVE = 1;
    CANCELLED = 2;
    FAILED = 3;
    CANCELLED_RUNNING = 4;
    CANCELLED_TERMINATING = 5;
    MODIFYING = 6;
}

repeated string BillingProductList = 1



message BlobAttributeValue {
    string Value = 1;
}

message BlockDeviceMapping {
    // The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string DeviceName = 1;
    // Parameters used to automatically set up EBS volumes when the instance is launched.
    EbsBlockDevice Ebs = 2;
    // Suppresses the specified device included in the block device mapping of the AMI.
    string NoDevice = 3;
    // <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>
    string VirtualName = 4;
}

repeated BlockDeviceMapping BlockDeviceMappingList = 1

repeated BlockDeviceMapping BlockDeviceMappingRequestList = 1



repeated string BundleIdStringList = 1

message BundleInstanceRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>The ID of the instance to bundle.</p> <p>Type: String</p> <p>Default: None</p> <p>Required: Yes</p>
    string InstanceId = 2;
    // The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.
    Storage Storage = 3;
}

message BundleInstanceResult {
    // Information about the bundle task.
    BundleTask BundleTask = 1;
}

message BundleTask {
    // The ID of the bundle task.
    string BundleId = 1;
    // If the task fails, a description of the error.
    BundleTaskError BundleTaskError = 2;
    // The ID of the instance associated with this bundle task.
    string InstanceId = 3;
    // The level of task completion, as a percent (for example, 20%).
    string Progress = 4;
    // The time this task started.
    string StartTime = 5;
    // The state of the task.
    BundleTaskState State = 6;
    // The Amazon S3 storage locations.
    Storage Storage = 7;
    // The time of the most recent update for the task.
    string UpdateTime = 8;
}

message BundleTaskError {
    // The error code.
    string Code = 1;
    // The error message.
    string Message = 2;
}

repeated BundleTask BundleTaskList = 1

enum BundleTaskState {
    PENDING = 0;
    WAITINGFORSHUTDOWN = 1;
    BUNDLING = 2;
    STORING = 3;
    CANCELLING = 4;
    COMPLETE = 5;
    FAILED = 6;
}

enum CancelBatchErrorCode {
    FLEETREQUESTIDDOESNOTEXIST = 0;
    FLEETREQUESTIDMALFORMED = 1;
    FLEETREQUESTNOTINCANCELLABLESTATE = 2;
    UNEXPECTEDERROR = 3;
}

message CancelBundleTaskRequest {
    // The ID of the bundle task.
    string BundleId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message CancelBundleTaskResult {
    // Information about the bundle task.
    BundleTask BundleTask = 1;
}

message CancelConversionRequest {
    // The ID of the conversion task.
    string ConversionTaskId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The reason for canceling the conversion task.
    string ReasonMessage = 3;
}

message CancelExportTaskRequest {
    // The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
    string ExportTaskId = 1;
}

message CancelImportTaskRequest {
    // The reason for canceling the task.
    string CancelReason = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the import image or import snapshot task to be canceled.
    string ImportTaskId = 3;
}

message CancelImportTaskResult {
    // The ID of the task being canceled.
    string ImportTaskId = 1;
    // The current state of the task being canceled.
    string PreviousState = 2;
    // The current state of the task being canceled.
    string State = 3;
}

message CancelReservedInstancesListingRequest {
    // The ID of the Reserved Instance listing.
    string ReservedInstancesListingId = 1;
}

message CancelReservedInstancesListingResult {
    // The Reserved Instance listing.
    array ReservedInstancesListings = 1;
}

message CancelSpotFleetRequestsError {
    // The error code.
    CancelBatchErrorCode Code = 1;
    // The description for the error code.
    string Message = 2;
}

message CancelSpotFleetRequestsErrorItem {
    // The error.
    CancelSpotFleetRequestsError Error = 1;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 2;
}

repeated CancelSpotFleetRequestsErrorItem CancelSpotFleetRequestsErrorSet = 1

message CancelSpotFleetRequestsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The IDs of the Spot fleet requests.
    array SpotFleetRequestIds = 2;
    // Indicates whether to terminate instances for a Spot fleet request if it is canceled successfully.
    boolean TerminateInstances = 3;
}

message CancelSpotFleetRequestsResponse {
    // Information about the Spot fleet requests that are successfully canceled.
    array SuccessfulFleetRequests = 1;
    // Information about the Spot fleet requests that are not successfully canceled.
    array UnsuccessfulFleetRequests = 2;
}

message CancelSpotFleetRequestsSuccessItem {
    // The current state of the Spot fleet request.
    BatchState CurrentSpotFleetRequestState = 1;
    // The previous state of the Spot fleet request.
    BatchState PreviousSpotFleetRequestState = 2;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 3;
}

repeated CancelSpotFleetRequestsSuccessItem CancelSpotFleetRequestsSuccessSet = 1

enum CancelSpotInstanceRequestState {
    ACTIVE = 0;
    OPEN = 1;
    CLOSED = 2;
    CANCELLED = 3;
    COMPLETED = 4;
}

message CancelSpotInstanceRequestsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more Spot instance request IDs.
    array SpotInstanceRequestIds = 2;
}

message CancelSpotInstanceRequestsResult {
    // One or more Spot instance requests.
    array CancelledSpotInstanceRequests = 1;
}

message CancelledSpotInstanceRequest {
    // The ID of the Spot instance request.
    string SpotInstanceRequestId = 1;
    // The state of the Spot instance request.
    CancelSpotInstanceRequestState State = 2;
}

repeated CancelledSpotInstanceRequest CancelledSpotInstanceRequestList = 1

message CidrBlock {
    // The IPv4 CIDR block.
    string CidrBlock = 1;
}

repeated CidrBlock CidrBlockSet = 1

message ClassicLinkDnsSupport {
    // Indicates whether ClassicLink DNS support is enabled for the VPC.
    boolean ClassicLinkDnsSupported = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

repeated ClassicLinkDnsSupport ClassicLinkDnsSupportList = 1

message ClassicLinkInstance {
    // A list of security groups.
    array Groups = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // Any tags assigned to the instance.
    array Tags = 3;
    // The ID of the VPC.
    string VpcId = 4;
}

repeated ClassicLinkInstance ClassicLinkInstanceList = 1

message ClientData {
    // A user-defined comment about the disk upload.
    string Comment = 1;
    // The time that the disk upload ends.
    string UploadEnd = 2;
    // The size of the uploaded disk image, in GiB.
    number UploadSize = 3;
    // The time that the disk upload starts.
    string UploadStart = 4;
}

message ConfirmProductInstanceRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // The product code. This must be a product code that you own.
    string ProductCode = 3;
}

message ConfirmProductInstanceResult {
    // The AWS account ID of the instance owner. This is only present if the product code is attached to the instance.
    string OwnerId = 1;
    // The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance.
    boolean Return = 2;
}

enum ContainerFormat {
    OVA = 0;
}

repeated string ConversionIdStringList = 1

message ConversionTask {
    // The ID of the conversion task.
    string ConversionTaskId = 1;
    // The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.
    string ExpirationTime = 2;
    // If the task is for importing an instance, this contains information about the import instance task.
    ImportInstanceTaskDetails ImportInstance = 3;
    // If the task is for importing a volume, this contains information about the import volume task.
    ImportVolumeTaskDetails ImportVolume = 4;
    // The state of the conversion task.
    ConversionTaskState State = 5;
    // The status message related to the conversion task.
    string StatusMessage = 6;
    // Any tags assigned to the task.
    array Tags = 7;
}

enum ConversionTaskState {
    ACTIVE = 0;
    CANCELLING = 1;
    CANCELLED = 2;
    COMPLETED = 3;
}

message CopyFpgaImageRequest {
    // Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // The description for the new AFI.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The name for the new AFI. The default is the name of the source AFI.
    string Name = 4;
    // The ID of the source AFI.
    string SourceFpgaImageId = 5;
    // The region that contains the source AFI.
    string SourceRegion = 6;
}

message CopyFpgaImageResult {
    // The ID of the new AFI.
    string FpgaImageId = 1;
}

message CopyImageRequest {
    // Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClientToken = 1;
    // A description for the new AMI in the destination region.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // Specifies whether the destination snapshots of the copied image should be encrypted. The default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    boolean Encrypted = 4;
    // The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of an image during a copy operation. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.
    string KmsKeyId = 5;
    // The name of the new AMI in the destination region.
    string Name = 6;
    // The ID of the AMI to copy.
    string SourceImageId = 7;
    // The name of the region that contains the AMI to copy.
    string SourceRegion = 8;
}

message CopyImageResult {
    // The ID of the new AMI.
    string ImageId = 1;
}

message CopySnapshotRequest {
    // A description for the EBS snapshot.
    string Description = 1;
    // <p>The destination region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination region in a <code>PresignedUrl</code> parameter, where it is required.</p> <note> <p> <code>CopySnapshot</code> sends the snapshot copy to the regional endpoint that you send the HTTP request to, such as <code>ec2.us-east-1.amazonaws.com</code> (in the AWS CLI, this is specified with the <code>--region</code> parameter or the default region in your AWS configuration file).</p> </note>
    string DestinationRegion = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // Specifies whether the destination snapshot should be encrypted. You can encrypt a copy of an unencrypted snapshot using this flag, but you cannot use it to create an unencrypted copy from an encrypted snapshot. Your default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    boolean Encrypted = 4;
    // The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when creating the snapshot copy. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.
    string KmsKeyId = 5;
    // The pre-signed URL that facilitates copying an encrypted snapshot. This parameter is only required when copying an encrypted snapshot with the Amazon EC2 Query API; it is available as an optional parameter in all other cases. The <code>PresignedUrl</code> should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The <code>PresignedUrl</code> must be signed using AWS Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests by Using Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail asynchronously, and the snapshot will move to an <code>error</code> state.
    string PresignedUrl = 6;
    // The ID of the region that contains the snapshot to be copied.
    string SourceRegion = 7;
    // The ID of the EBS snapshot to copy.
    string SourceSnapshotId = 8;
}

message CopySnapshotResult {
    // The ID of the new snapshot.
    string SnapshotId = 1;
}

message CreateCustomerGatewayRequest {
    // <p>For devices that support BGP, the customer gateway's BGP ASN.</p> <p>Default: 65000</p>
    integer BgpAsn = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The Internet-routable IP address for the customer gateway's outside interface. The address must be static.
    string PublicIp = 3;
    // The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).
    GatewayType Type = 4;
}

message CreateCustomerGatewayResult {
    // Information about the customer gateway.
    CustomerGateway CustomerGateway = 1;
}

message CreateDefaultVpcRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
}

message CreateDefaultVpcResult {
    // Information about the VPC.
    Vpc Vpc = 1;
}

message CreateDhcpOptionsRequest {
    // A DHCP configuration option.
    array DhcpConfigurations = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message CreateDhcpOptionsResult {
    // A set of DHCP options.
    DhcpOptions DhcpOptions = 1;
}

message CreateEgressOnlyInternetGatewayRequest {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    string ClientToken = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the VPC for which to create the egress-only Internet gateway.
    string VpcId = 3;
}

message CreateEgressOnlyInternetGatewayResult {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
    string ClientToken = 1;
    // Information about the egress-only Internet gateway.
    EgressOnlyInternetGateway EgressOnlyInternetGateway = 2;
}

message CreateFlowLogsRequest {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    string ClientToken = 1;
    // The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group.
    string DeliverLogsPermissionArn = 2;
    // The name of the CloudWatch log group.
    string LogGroupName = 3;
    // <p>One or more subnet, network interface, or VPC IDs.</p> <p>Constraints: Maximum of 1000 resources</p>
    array ResourceIds = 4;
    // The type of resource on which to create the flow log.
    FlowLogsResourceType ResourceType = 5;
    // The type of traffic to log.
    TrafficType TrafficType = 6;
}

message CreateFlowLogsResult {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
    string ClientToken = 1;
    // The IDs of the flow logs.
    array FlowLogIds = 2;
    // Information about the flow logs that could not be created successfully.
    array Unsuccessful = 3;
}

message CreateFpgaImageRequest {
    // Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // A description for the AFI.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.
    StorageLocation InputStorageLocation = 4;
    // The location in Amazon S3 for the output logs.
    StorageLocation LogsStorageLocation = 5;
    // A name for the AFI.
    string Name = 6;
}

message CreateFpgaImageResult {
    // The global FPGA image identifier (AGFI ID).
    string FpgaImageGlobalId = 1;
    // The FPGA image identifier (AFI ID).
    string FpgaImageId = 2;
}

message CreateImageRequest {
    // Information about one or more block device mappings.
    array BlockDeviceMappings = 1;
    // A description for the new image.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the instance.
    string InstanceId = 4;
    // <p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>
    string Name = 5;
    // By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.
    boolean NoReboot = 6;
}

message CreateImageResult {
    // The ID of the new AMI.
    string ImageId = 1;
}

message CreateInstanceExportTaskRequest {
    // A description for the conversion task or the resource being exported. The maximum length is 255 bytes.
    string Description = 1;
    // The format and location for an instance export task.
    ExportToS3TaskSpecification ExportToS3Task = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The target virtualization environment.
    ExportEnvironment TargetEnvironment = 4;
}

message CreateInstanceExportTaskResult {
    // Information about the instance export task.
    ExportTask ExportTask = 1;
}

message CreateInternetGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
}

message CreateInternetGatewayResult {
    // Information about the Internet gateway.
    InternetGateway InternetGateway = 1;
}

message CreateKeyPairRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>A unique name for the key pair.</p> <p>Constraints: Up to 255 ASCII characters</p>
    string KeyName = 2;
}

message CreateNatGatewayRequest {
    // The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.
    string AllocationId = 1;
    // <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>
    string ClientToken = 2;
    // The subnet in which to create the NAT gateway.
    string SubnetId = 3;
}

message CreateNatGatewayResult {
    // Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.
    string ClientToken = 1;
    // Information about the NAT gateway.
    NatGateway NatGateway = 2;
}

message CreateNetworkAclEntryRequest {
    // The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).
    string CidrBlock = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
    boolean Egress = 3;
    // ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying the ICMP protocol, or protocol 58 (ICMPv6) with an IPv6 CIDR block.
    IcmpTypeCode IcmpTypeCode = 4;
    // The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:db8:1234:1a00::/64</code>).
    string Ipv6CidrBlock = 5;
    // The ID of the network ACL.
    string NetworkAclId = 6;
    // TCP or UDP protocols: The range of ports the rule applies to.
    PortRange PortRange = 7;
    // The protocol. A value of <code>-1</code> or <code>all</code> means all protocols. If you specify <code>all</code>, <code>-1</code>, or a protocol number other than <code>tcp</code>, <code>udp</code>, or <code>icmp</code>, traffic on all ports is allowed, regardless of any ports or ICMP types or codes you specify. If you specify protocol <code>58</code> (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol <code>58</code> (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
    string Protocol = 8;
    // Indicates whether to allow or deny the traffic that matches the rule.
    RuleAction RuleAction = 9;
    // <p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p> <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>
    integer RuleNumber = 10;
}

message CreateNetworkAclRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

message CreateNetworkAclResult {
    // Information about the network ACL.
    NetworkAcl NetworkAcl = 1;
}

message CreateNetworkInterfacePermissionRequest {
    // The AWS account ID.
    string AwsAccountId = 1;
    // The AWS service. Currently not supported.
    string AwsService = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the network interface.
    string NetworkInterfaceId = 4;
    // The type of permission to grant.
    InterfacePermissionType Permission = 5;
}

message CreateNetworkInterfacePermissionResult {
    // Information about the permission for the network interface.
    NetworkInterfacePermission InterfacePermission = 1;
}

message CreateNetworkInterfaceRequest {
    // A description for the network interface.
    string Description = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The IDs of one or more security groups.
    array Groups = 3;
    // The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set to <code>true</code>, you can specify <code>0</code> to override this setting.
    integer Ipv6AddressCount = 4;
    // One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.
    array Ipv6Addresses = 5;
    // The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).
    string PrivateIpAddress = 6;
    // One or more private IPv4 addresses.
    array PrivateIpAddresses = 7;
    // <p>The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    integer SecondaryPrivateIpAddressCount = 8;
    // The ID of the subnet to associate with the network interface.
    string SubnetId = 9;
}

message CreateNetworkInterfaceResult {
    // Information about the network interface.
    NetworkInterface NetworkInterface = 1;
}

message CreatePlacementGroupRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>A name for the placement group.</p> <p>Constraints: Up to 255 ASCII characters</p>
    string GroupName = 2;
    // The placement strategy.
    PlacementStrategy Strategy = 3;
}

message CreateReservedInstancesListingRequest {
    // Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.
    integer InstanceCount = 2;
    // A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.
    array PriceSchedules = 3;
    // The ID of the active Standard Reserved Instance.
    string ReservedInstancesId = 4;
}

message CreateReservedInstancesListingResult {
    // Information about the Standard Reserved Instance listing.
    array ReservedInstancesListings = 1;
}

message CreateRouteRequest {
    // The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    string DestinationCidrBlock = 1;
    // The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
    string DestinationIpv6CidrBlock = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // [IPv6 traffic only] The ID of an egress-only Internet gateway.
    string EgressOnlyInternetGatewayId = 4;
    // The ID of an Internet gateway or virtual private gateway attached to your VPC.
    string GatewayId = 5;
    // The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    string InstanceId = 6;
    // [IPv4 traffic only] The ID of a NAT gateway.
    string NatGatewayId = 7;
    // The ID of a network interface.
    string NetworkInterfaceId = 8;
    // The ID of the route table for the route.
    string RouteTableId = 9;
    // The ID of a VPC peering connection.
    string VpcPeeringConnectionId = 10;
}

message CreateRouteResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message CreateRouteTableRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

message CreateRouteTableResult {
    // Information about the route table.
    RouteTable RouteTable = 1;
}

message CreateSecurityGroupRequest {
    // <p>A description for the security group. This is informational only.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>
    string Description = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>The name of the security group.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>
    string GroupName = 3;
    // [EC2-VPC] The ID of the VPC. Required for EC2-VPC.
    string VpcId = 4;
}

message CreateSecurityGroupResult {
    // The ID of the security group.
    string GroupId = 1;
}

message CreateSnapshotRequest {
    // A description for the snapshot.
    string Description = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the EBS volume.
    string VolumeId = 3;
}

message CreateSpotDatafeedSubscriptionRequest {
    // The Amazon S3 bucket in which to store the Spot instance data feed.
    string Bucket = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // A prefix for the data feed file names.
    string Prefix = 3;
}

message CreateSpotDatafeedSubscriptionResult {
    // The Spot instance data feed subscription.
    SpotDatafeedSubscription SpotDatafeedSubscription = 1;
}

message CreateSubnetRequest {
    // <p>The Availability Zone for the subnet.</p> <p>Default: AWS selects one for you. If you create more than one subnet in your VPC, we may not necessarily select a different zone for each subnet.</p>
    string AvailabilityZone = 1;
    // The IPv4 network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.
    string CidrBlock = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.
    string Ipv6CidrBlock = 4;
    // The ID of the VPC.
    string VpcId = 5;
}

message CreateSubnetResult {
    // Information about the subnet.
    Subnet Subnet = 1;
}

message CreateTagsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The IDs of one or more resources to tag. For example, ami-1a2b3c4d.
    array Resources = 2;
    // One or more tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    array Tags = 3;
}

message CreateVolumePermission {
    // The specific group that is to be added or removed from a volume's list of create volume permissions.
    PermissionGroup Group = 1;
    // The specific AWS account ID that is to be added or removed from a volume's list of create volume permissions.
    string UserId = 2;
}

repeated CreateVolumePermission CreateVolumePermissionList = 1

message CreateVolumePermissionModifications {
    // Adds a specific AWS account ID or group to a volume's list of create volume permissions.
    array Add = 1;
    // Removes a specific AWS account ID or group from a volume's list of create volume permissions.
    array Remove = 2;
}

message CreateVolumeRequest {
    // The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.
    string AvailabilityZone = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // Specifies whether the volume should be encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. There is no way to create an encrypted volume from an unencrypted snapshot or vice versa. If your AMI uses encrypted volumes, you can only launch it on supported instance types. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    boolean Encrypted = 3;
    // <p>Only valid for Provisioned IOPS SSD volumes. The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 50 IOPS/GiB.</p> <p>Constraint: Range is 100 to 20000 for Provisioned IOPS SSD volumes </p>
    integer Iops = 4;
    // The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set.
    string KmsKeyId = 5;
    // <p>The size of the volume, in GiBs.</p> <p>Constraints: 1-16384 for <code>gp2</code>, 4-16384 for <code>io1</code>, 500-16384 for <code>st1</code>, 500-16384 for <code>sc1</code>, and 1-1024 for <code>standard</code>. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>
    integer Size = 6;
    // The snapshot from which to create the volume.
    string SnapshotId = 7;
    // The tags to apply to the volume during creation.
    array TagSpecifications = 8;
    // <p>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p> <p>Default: <code>standard</code> </p>
    VolumeType VolumeType = 9;
}

message CreateVpcEndpointRequest {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    string ClientToken = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.
    string PolicyDocument = 3;
    // One or more route table IDs.
    array RouteTableIds = 4;
    // The AWS service name, in the form <code>com.amazonaws.<i>region</i>.<i>service</i> </code>. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request.
    string ServiceName = 5;
    // The ID of the VPC in which the endpoint will be used.
    string VpcId = 6;
}

message CreateVpcEndpointResult {
    // Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
    string ClientToken = 1;
    // Information about the endpoint.
    VpcEndpoint VpcEndpoint = 2;
}

message CreateVpcPeeringConnectionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>The AWS account ID of the owner of the peer VPC.</p> <p>Default: Your AWS account ID</p>
    string PeerOwnerId = 2;
    // The ID of the VPC with which you are creating the VPC peering connection.
    string PeerVpcId = 3;
    // The ID of the requester VPC.
    string VpcId = 4;
}

message CreateVpcPeeringConnectionResult {
    // Information about the VPC peering connection.
    VpcPeeringConnection VpcPeeringConnection = 1;
}

message CreateVpcRequest {
    // Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
    boolean AmazonProvidedIpv6CidrBlock = 1;
    // The IPv4 network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.
    string CidrBlock = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // <p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. </p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>
    Tenancy InstanceTenancy = 4;
}

message CreateVpcResult {
    // Information about the VPC.
    Vpc Vpc = 1;
}

message CreateVpnConnectionRequest {
    // The ID of the customer gateway.
    string CustomerGatewayId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The options for the VPN connection.
    VpnConnectionOptionsSpecification Options = 3;
    // The type of VPN connection (<code>ipsec.1</code>).
    string Type = 4;
    // The ID of the virtual private gateway.
    string VpnGatewayId = 5;
}

message CreateVpnConnectionResult {
    // Information about the VPN connection.
    VpnConnection VpnConnection = 1;
}

message CreateVpnConnectionRouteRequest {
    // The CIDR block associated with the local subnet of the customer network.
    string DestinationCidrBlock = 1;
    // The ID of the VPN connection.
    string VpnConnectionId = 2;
}

message CreateVpnGatewayRequest {
    // The Availability Zone for the virtual private gateway.
    string AvailabilityZone = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The type of VPN connection this virtual private gateway supports.
    GatewayType Type = 3;
}

message CreateVpnGatewayResult {
    // Information about the virtual private gateway.
    VpnGateway VpnGateway = 1;
}

enum CurrencyCodeValue {
    USD = 0;
}

message CustomerGateway {
    // The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
    string BgpAsn = 1;
    // The ID of the customer gateway.
    string CustomerGatewayId = 2;
    // The Internet-routable IP address of the customer gateway's outside interface.
    string IpAddress = 3;
    // The current state of the customer gateway (<code>pending | available | deleting | deleted</code>).
    string State = 4;
    // Any tags assigned to the customer gateway.
    array Tags = 5;
    // The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).
    string Type = 6;
}

repeated string CustomerGatewayIdStringList = 1

repeated CustomerGateway CustomerGatewayList = 1

enum DatafeedSubscriptionState {
    ACTIVE = 0;
    INACTIVE = 1;
}

message DeleteCustomerGatewayRequest {
    // The ID of the customer gateway.
    string CustomerGatewayId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message DeleteDhcpOptionsRequest {
    // The ID of the DHCP options set.
    string DhcpOptionsId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message DeleteEgressOnlyInternetGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the egress-only Internet gateway.
    string EgressOnlyInternetGatewayId = 2;
}

message DeleteEgressOnlyInternetGatewayResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean ReturnCode = 1;
}

message DeleteFlowLogsRequest {
    // One or more flow log IDs.
    array FlowLogIds = 1;
}

message DeleteFlowLogsResult {
    // Information about the flow logs that could not be deleted successfully.
    array Unsuccessful = 1;
}

message DeleteFpgaImageRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the AFI.
    string FpgaImageId = 2;
}

message DeleteFpgaImageResult {
    // Is <code>true</code> if the request succeeds, and an error otherwise.
    boolean Return = 1;
}

message DeleteInternetGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the Internet gateway.
    string InternetGatewayId = 2;
}

message DeleteKeyPairRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The name of the key pair.
    string KeyName = 2;
}

message DeleteNatGatewayRequest {
    // The ID of the NAT gateway.
    string NatGatewayId = 1;
}

message DeleteNatGatewayResult {
    // The ID of the NAT gateway.
    string NatGatewayId = 1;
}

message DeleteNetworkAclEntryRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // Indicates whether the rule is an egress rule.
    boolean Egress = 2;
    // The ID of the network ACL.
    string NetworkAclId = 3;
    // The rule number of the entry to delete.
    integer RuleNumber = 4;
}

message DeleteNetworkAclRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the network ACL.
    string NetworkAclId = 2;
}

message DeleteNetworkInterfacePermissionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // Specify <code>true</code> to remove the permission even if the network interface is attached to an instance.
    boolean Force = 2;
    // The ID of the network interface permission.
    string NetworkInterfacePermissionId = 3;
}

message DeleteNetworkInterfacePermissionResult {
    // Returns <code>true</code> if the request succeeds, otherwise returns an error.
    boolean Return = 1;
}

message DeleteNetworkInterfaceRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the network interface.
    string NetworkInterfaceId = 2;
}

message DeletePlacementGroupRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The name of the placement group.
    string GroupName = 2;
}

message DeleteRouteRequest {
    // The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
    string DestinationCidrBlock = 1;
    // The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
    string DestinationIpv6CidrBlock = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the route table.
    string RouteTableId = 4;
}

message DeleteRouteTableRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the route table.
    string RouteTableId = 2;
}

message DeleteSecurityGroupRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the security group. Required for a nondefault VPC.
    string GroupId = 2;
    // [EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.
    string GroupName = 3;
}

message DeleteSnapshotRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the EBS snapshot.
    string SnapshotId = 2;
}

message DeleteSpotDatafeedSubscriptionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
}

message DeleteSubnetRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the subnet.
    string SubnetId = 2;
}

message DeleteTagsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The IDs of one or more resources.
    array Resources = 2;
    // One or more tags to delete. If you omit this parameter, we delete all tags for the specified resources. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.
    array Tags = 3;
}

message DeleteVolumeRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the volume.
    string VolumeId = 2;
}

message DeleteVpcEndpointsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more endpoint IDs.
    array VpcEndpointIds = 2;
}

message DeleteVpcEndpointsResult {
    // Information about the endpoints that were not successfully deleted.
    array Unsuccessful = 1;
}

message DeleteVpcPeeringConnectionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 2;
}

message DeleteVpcPeeringConnectionResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message DeleteVpcRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

message DeleteVpnConnectionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPN connection.
    string VpnConnectionId = 2;
}

message DeleteVpnConnectionRouteRequest {
    // The CIDR block associated with the local subnet of the customer network.
    string DestinationCidrBlock = 1;
    // The ID of the VPN connection.
    string VpnConnectionId = 2;
}

message DeleteVpnGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the virtual private gateway.
    string VpnGatewayId = 2;
}

message DeregisterImageRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the AMI.
    string ImageId = 2;
}

message DescribeAccountAttributesRequest {
    // One or more account attribute names.
    array AttributeNames = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message DescribeAccountAttributesResult {
    // Information about one or more account attributes.
    array AccountAttributes = 1;
}

message DescribeAddressesRequest {
    // <p>[EC2-VPC] One or more allocation IDs.</p> <p>Default: Describes all your Elastic IP addresses.</p>
    array AllocationIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The AWS account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address.</p> </li> </ul>
    array Filters = 3;
    // <p>[EC2-Classic] One or more Elastic IP addresses.</p> <p>Default: Describes all your Elastic IP addresses.</p>
    array PublicIps = 4;
}

message DescribeAddressesResult {
    // Information about one or more Elastic IP addresses.
    array Addresses = 1;
}

message DescribeAvailabilityZonesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>message</code> - Information about the Availability Zone.</p> </li> <li> <p> <code>region-name</code> - The name of the region for the Availability Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone (<code>available</code> | <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>).</p> </li> </ul>
    array Filters = 2;
    // The names of one or more Availability Zones.
    array ZoneNames = 3;
}

message DescribeAvailabilityZonesResult {
    // Information about one or more Availability Zones.
    array AvailabilityZones = 1;
}

message DescribeBundleTasksRequest {
    // <p>One or more bundle task IDs.</p> <p>Default: Describes all your bundle tasks.</p>
    array BundleIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>
    array Filters = 3;
}

message DescribeBundleTasksResult {
    // Information about one or more bundle tasks.
    array BundleTasks = 1;
}

message DescribeClassicLinkInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>
    array Filters = 2;
    // One or more instance IDs. Must be instances linked to a VPC through ClassicLink.
    array InstanceIds = 3;
    // <p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the instance IDs parameter in the same request.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>
    integer MaxResults = 4;
    // The token to retrieve the next page of results.
    string NextToken = 5;
}

message DescribeClassicLinkInstancesResult {
    // Information about one or more linked EC2-Classic instances.
    array Instances = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

repeated ConversionTask DescribeConversionTaskList = 1

message DescribeConversionTasksRequest {
    // One or more conversion task IDs.
    array ConversionTaskIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message DescribeConversionTasksResult {
    // Information about the conversion tasks.
    array ConversionTasks = 1;
}

message DescribeCustomerGatewaysRequest {
    // <p>One or more customer gateway IDs.</p> <p>Default: Describes all your customer gateways.</p>
    array CustomerGatewayIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway's Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    array Filters = 3;
}

message DescribeCustomerGatewaysResult {
    // Information about one or more customer gateways.
    array CustomerGateways = 1;
}

message DescribeDhcpOptionsRequest {
    // <p>The IDs of one or more DHCP options sets.</p> <p>Default: Describes all your DHCP options sets.</p>
    array DhcpOptionsIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    array Filters = 3;
}

message DescribeDhcpOptionsResult {
    // Information about one or more DHCP options sets.
    array DhcpOptions = 1;
}

message DescribeEgressOnlyInternetGatewaysRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more egress-only Internet gateway IDs.
    array EgressOnlyInternetGatewayIds = 2;
    // The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned.
    integer MaxResults = 3;
    // The token to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeEgressOnlyInternetGatewaysResult {
    // Information about the egress-only Internet gateways.
    array EgressOnlyInternetGateways = 1;
    // The token to use to retrieve the next page of results.
    string NextToken = 2;
}

message DescribeElasticGpusRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more Elastic GPU IDs.
    array ElasticGpuIds = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone in which the Elastic GPU resides.</p> </li> <li> <p> <code>elastic-gpu-health</code> - The status of the Elastic GPU (<code>OK</code> | <code>IMPAIRED</code>).</p> </li> <li> <p> <code>elastic-gpu-state</code> - The state of the Elastic GPU (<code>ATTACHED</code>).</p> </li> <li> <p> <code>elastic-gpu-type</code> - The type of Elastic GPU; for example, <code>eg1.medium</code>.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance to which the Elastic GPU is associated.</p> </li> </ul>
    array Filters = 3;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000.
    integer MaxResults = 4;
    // The token to request the next page of results.
    string NextToken = 5;
}

message DescribeElasticGpusResult {
    // Information about the Elastic GPUs.
    array ElasticGpuSet = 1;
    // The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.
    integer MaxResults = 2;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 3;
}

message DescribeExportTasksRequest {
    // One or more export task IDs.
    array ExportTaskIds = 1;
}

message DescribeExportTasksResult {
    // Information about the export tasks.
    array ExportTasks = 1;
}

message DescribeFlowLogsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>)</p> </li> </ul>
    array Filter = 1;
    // One or more flow log IDs.
    array FlowLogIds = 2;
    // The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the flow log IDs parameter in the same request.
    integer MaxResults = 3;
    // The token to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeFlowLogsResult {
    // Information about the flow logs.
    array FlowLogs = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeFpgaImageAttributeRequest {
    // The AFI attribute.
    FpgaImageAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the AFI.
    string FpgaImageId = 3;
}

message DescribeFpgaImageAttributeResult {
    // Information about the attribute.
    FpgaImageAttribute FpgaImageAttribute = 1;
}

message DescribeFpgaImagesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The creation time of the AFI.</p> </li> <li> <p> <code>fpga-image-id</code> - The FPGA image identifier (AFI ID).</p> </li> <li> <p> <code>fpga-image-global-id</code> - The global FPGA image identifier (AGFI ID).</p> </li> <li> <p> <code>name</code> - The name of the AFI.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the AFI owner.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>shell-version</code> - The version of the AWS Shell that was used to create the bitstream.</p> </li> <li> <p> <code>state</code> - The state of the AFI (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update.</p> </li> </ul>
    array Filters = 2;
    // One or more AFI IDs.
    array FpgaImageIds = 3;
    // The maximum number of results to return in a single call.
    integer MaxResults = 4;
    // The token to retrieve the next page of results.
    string NextToken = 5;
    // Filters the AFI by owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code>).
    array Owners = 6;
}

message DescribeFpgaImagesResult {
    // Information about one or more FPGA images.
    array FpgaImages = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeHostReservationOfferingsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family of the offering (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> </ul>
    array Filter = 1;
    // This is the maximum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.
    integer MaxDuration = 2;
    // The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error.
    integer MaxResults = 3;
    // This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.
    integer MinDuration = 4;
    // The token to use to retrieve the next page of results.
    string NextToken = 5;
    // The ID of the reservation offering.
    string OfferingId = 6;
}

message DescribeHostReservationOfferingsResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the offerings.
    array OfferingSet = 2;
}

message DescribeHostReservationsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> <li> <p> <code>state</code> - The state of the reservation (<code>payment-pending</code> | <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</p> </li> </ul>
    array Filter = 1;
    // One or more host reservation IDs.
    array HostReservationIdSet = 2;
    // The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error.
    integer MaxResults = 3;
    // The token to use to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeHostReservationsResult {
    // Details about the reservation's configuration.
    array HostReservationSet = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeHostsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance</p> </li> <li> <p> <code>state</code>- The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> </ul>
    array Filter = 1;
    // The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
    array HostIds = 2;
    // The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error. You cannot specify this parameter and the host IDs parameter in the same request.
    integer MaxResults = 3;
    // The token to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeHostsResult {
    // Information about the Dedicated Hosts.
    array Hosts = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeIamInstanceProfileAssociationsRequest {
    // One or more IAM instance profile associations.
    array AssociationIds = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>state</code> - The state of the association (<code>associating</code> | <code>associated</code> | <code>disassociating</code> | <code>disassociated</code>).</p> </li> </ul>
    array Filters = 2;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 3;
    // The token to request the next page of results.
    string NextToken = 4;
}

message DescribeIamInstanceProfileAssociationsResult {
    // Information about one or more IAM instance profile associations.
    array IamInstanceProfileAssociations = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeIdFormatRequest {
    // The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>
    string Resource = 1;
}

message DescribeIdFormatResult {
    // Information about the ID format for the resource.
    array Statuses = 1;
}

message DescribeIdentityIdFormatRequest {
    // The ARN of the principal, which can be an IAM role, IAM user, or the root user.
    string PrincipalArn = 1;
    // The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>
    string Resource = 2;
}

message DescribeIdentityIdFormatResult {
    // Information about the ID format for the resources.
    array Statuses = 1;
}

message DescribeImageAttributeRequest {
    // <p>The AMI attribute.</p> <p> <b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code> attribute may return a <code>Client.AuthFailure</code> error. If this happens, use <a>DescribeImages</a> to get information about the block device mapping for the AMI.</p>
    ImageAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the AMI.
    string ImageId = 3;
}

message DescribeImagesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // Scopes the images by users with explicit launch permissions. Specify an AWS account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).
    array ExecutableUsers = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the EBS volume (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> | <code>standard</code>).</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>ena-support</code> - A Boolean that indicates whether enhanced networking with ENA is enabled.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - String value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the image owner.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>
    array Filters = 3;
    // <p>One or more image IDs.</p> <p>Default: Describes all images available to you.</p>
    array ImageIds = 4;
    // Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns all images for which you have launch permissions, regardless of ownership.
    array Owners = 5;
}

message DescribeImagesResult {
    // Information about one or more images.
    array Images = 1;
}

message DescribeImportImageTasksRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // Filter tasks using the <code>task-state</code> filter and one of the following values: active, completed, deleting, deleted.
    array Filters = 2;
    // A list of import image task IDs.
    array ImportTaskIds = 3;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 4;
    // A token that indicates the next page of results.
    string NextToken = 5;
}

message DescribeImportImageTasksResult {
    // A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.
    array ImportImageTasks = 1;
    // The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeImportSnapshotTasksRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more filters.
    array Filters = 2;
    // A list of import snapshot task IDs.
    array ImportTaskIds = 3;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 4;
    // A token that indicates the next page of results.
    string NextToken = 5;
}

message DescribeImportSnapshotTasksResult {
    // A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.
    array ImportSnapshotTasks = 1;
    // The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeInstanceAttributeRequest {
    // <p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>
    InstanceAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the instance.
    string InstanceId = 3;
}

message DescribeInstanceStatusRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>
    array Filters = 2;
    // <p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code> </p>
    boolean IncludeAllInstances = 3;
    // <p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>
    array InstanceIds = 4;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
    integer MaxResults = 5;
    // The token to retrieve the next page of results.
    string NextToken = 6;
}

message DescribeInstanceStatusResult {
    // One or more instance status descriptions.
    array InstanceStatuses = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched.</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by AWS.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>platform</code> - The platform. Use <code>windows</code> if you have Windows instances; otherwise, leave blank.</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows "User Initiated [date]" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The name of the root device for the instance (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of root device that the instance uses (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of the tag's key). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p>
    array InstanceIds = 3;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter or tag filters in the same call.
    integer MaxResults = 4;
    // The token to request the next page of results.
    string NextToken = 5;
}

message DescribeInstancesResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Zero or more reservations.
    array Reservations = 2;
}

message DescribeInternetGatewaysRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more Internet gateway IDs.</p> <p>Default: Describes all your Internet gateways.</p>
    array InternetGatewayIds = 3;
}

message DescribeInternetGatewaysResult {
    // Information about one or more Internet gateways.
    array InternetGateways = 1;
}

message DescribeKeyPairsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more key pair names.</p> <p>Default: Describes all your key pairs.</p>
    array KeyNames = 3;
}

message DescribeKeyPairsResult {
    // Information about one or more key pairs.
    array KeyPairs = 1;
}

message DescribeMovingAddressesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>
    array Filters = 2;
    // <p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>
    integer MaxResults = 3;
    // The token to use to retrieve the next page of results.
    string NextToken = 4;
    // One or more Elastic IP addresses.
    array PublicIps = 5;
}

message DescribeMovingAddressesResult {
    // The status for each Elastic IP address.
    array MovingAddressStatuses = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeNatGatewaysRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p> <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>
    array Filter = 1;
    // <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>
    integer MaxResults = 2;
    // One or more NAT gateway IDs.
    array NatGatewayIds = 3;
    // The token to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeNatGatewaysResult {
    // Information about the NAT gateways.
    array NatGateways = 1;
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
}

message DescribeNetworkAclsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.egress</code> - Indicates whether the entry applies to egress traffic.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the ACL's set of entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more network ACL IDs.</p> <p>Default: Describes all your network ACLs.</p>
    array NetworkAclIds = 3;
}

message DescribeNetworkAclsResult {
    // Information about one or more network ACLs.
    array NetworkAcls = 1;
}

message DescribeNetworkInterfaceAttributeRequest {
    // The attribute of the network interface. This parameter is required.
    NetworkInterfaceAttribute Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the network interface.
    string NetworkInterfaceId = 3;
}

message DescribeNetworkInterfaceAttributeResult {
    // The attachment (if any) of the network interface.
    NetworkInterfaceAttachment Attachment = 1;
    // The description of the network interface.
    AttributeValue Description = 2;
    // The security groups associated with the network interface.
    array Groups = 3;
    // The ID of the network interface.
    string NetworkInterfaceId = 4;
    // Indicates whether source/destination checking is enabled.
    AttributeBooleanValue SourceDestCheck = 5;
}

message DescribeNetworkInterfacePermissionsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>network-interface-permission.network-interface-permission-id</code> - The ID of the permission.</p> </li> <li> <p> <code>network-interface-permission.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface-permission.aws-account-id</code> - The AWS account ID.</p> </li> <li> <p> <code>network-interface-permission.aws-service</code> - The AWS service.</p> </li> <li> <p> <code>network-interface-permission.permission</code> - The type of permission (<code>INSTANCE-ATTACH</code> | <code>EIP-ASSOCIATE</code>).</p> </li> </ul>
    array Filters = 1;
    // The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. If this parameter is not specified, up to 50 results are returned by default.
    integer MaxResults = 2;
    // One or more network interface permission IDs.
    array NetworkInterfacePermissionIds = 3;
    // The token to request the next page of results.
    string NextToken = 4;
}

message DescribeNetworkInterfacePermissionsResult {
    // The network interface permissions.
    array NetworkInterfacePermissions = 1;
    // The token to use to retrieve the next page of results.
    string NextToken = 2;
}

message DescribeNetworkInterfacesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IPv4 addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IPv4 address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address (IPv4).</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface (IPv4).</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach.time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with the network interface.</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-desk-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more network interface IDs.</p> <p>Default: Describes all your network interfaces.</p>
    array NetworkInterfaceIds = 3;
}

message DescribeNetworkInterfacesResult {
    // Information about one or more network interfaces.
    array NetworkInterfaces = 1;
}

message DescribePlacementGroupsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code>).</p> </li> </ul>
    array Filters = 2;
    // <p>One or more placement group names.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>
    array GroupNames = 3;
}

message DescribePlacementGroupsResult {
    // One or more placement groups.
    array PlacementGroups = 1;
}

message DescribePrefixListsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>prefix-list-id</code>: The ID of a prefix list.</p> </li> <li> <p> <code>prefix-list-name</code>: The name of a prefix list.</p> </li> </ul>
    array Filters = 2;
    // <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>
    integer MaxResults = 3;
    // The token for the next set of items to return. (You received this token from a prior call.)
    string NextToken = 4;
    // One or more prefix list IDs.
    array PrefixListIds = 5;
}

message DescribePrefixListsResult {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // All available prefix lists.
    array PrefixLists = 2;
}

message DescribeRegionsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).</p> </li> </ul>
    array Filters = 2;
    // The names of one or more regions.
    array RegionNames = 3;
}

message DescribeRegionsResult {
    // Information about one or more regions.
    array Regions = 1;
}

message DescribeReservedInstancesListingsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>
    array Filters = 1;
    // One or more Reserved Instance IDs.
    string ReservedInstancesId = 2;
    // One or more Reserved Instance listing IDs.
    string ReservedInstancesListingId = 3;
}

message DescribeReservedInstancesListingsResult {
    // Information about the Reserved Instance listing.
    array ReservedInstancesListings = 1;
}

message DescribeReservedInstancesModificationsRequest {
    // <p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>
    array Filters = 1;
    // The token to retrieve the next page of results.
    string NextToken = 2;
    // IDs for the submitted modification request.
    array ReservedInstancesModificationIds = 3;
}

message DescribeReservedInstancesModificationsResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // The Reserved Instance modification information.
    array ReservedInstancesModifications = 2;
}

message DescribeReservedInstancesOfferingsRequest {
    // The Availability Zone in which the Reserved Instance can be used.
    string AvailabilityZone = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both AWS and the Reserved Instance Marketplace are listed.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p> <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code> or <code>Region</code>).</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
    array Filters = 3;
    // Include Reserved Instance Marketplace offerings in the response.
    boolean IncludeMarketplace = 4;
    // <p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>
    Tenancy InstanceTenancy = 5;
    // The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    InstanceType InstanceType = 6;
    // <p>The maximum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 94608000 (3 years)</p>
    integer MaxDuration = 7;
    // <p>The maximum number of instances to filter when searching for offerings.</p> <p>Default: 20</p>
    integer MaxInstanceCount = 8;
    // <p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>
    integer MaxResults = 9;
    // <p>The minimum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 2592000 (1 month)</p>
    integer MinDuration = 10;
    // The token to retrieve the next page of results.
    string NextToken = 11;
    // The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.
    OfferingClassType OfferingClass = 12;
    // The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.
    OfferingTypeValues OfferingType = 13;
    // The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.
    RIProductDescription ProductDescription = 14;
    // One or more Reserved Instances offering IDs.
    array ReservedInstancesOfferingIds = 15;
}

message DescribeReservedInstancesOfferingsResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // A list of Reserved Instances offerings.
    array ReservedInstancesOfferings = 2;
}

message DescribeReservedInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability Zone</code>).</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p> <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
    array Filters = 2;
    // Describes whether the Reserved Instance is Standard or Convertible.
    OfferingClassType OfferingClass = 3;
    // The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.
    OfferingTypeValues OfferingType = 4;
    // <p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>
    array ReservedInstancesIds = 5;
}

message DescribeReservedInstancesResult {
    // A list of Reserved Instances.
    array ReservedInstances = 1;
}

message DescribeRouteTablesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not have an association ID are not returned in the response.</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service specified in a route in the table.</p> </li> <li> <p> <code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet gateway specified in a route in the route table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>
    array RouteTableIds = 3;
}

message DescribeRouteTablesResult {
    // Information about one or more route tables.
    array RouteTables = 1;
}

message DescribeScheduledInstanceAvailabilityRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
    array Filters = 2;
    // The time period for the first schedule to start.
    SlotDateTimeRangeRequest FirstSlotStartTimeRange = 3;
    // The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 4;
    // The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720.
    integer MaxSlotDurationInHours = 5;
    // The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.
    integer MinSlotDurationInHours = 6;
    // The token for the next set of results.
    string NextToken = 7;
    // The schedule recurrence.
    ScheduledInstanceRecurrenceRequest Recurrence = 8;
}

message DescribeScheduledInstanceAvailabilityResult {
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the available Scheduled Instances.
    array ScheduledInstanceAvailabilitySet = 2;
}

message DescribeScheduledInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
    array Filters = 2;
    // The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 3;
    // The token for the next set of results.
    string NextToken = 4;
    // One or more Scheduled Instance IDs.
    array ScheduledInstanceIds = 5;
    // The time period for the first schedule to start.
    SlotStartTimeRangeRequest SlotStartTimeRange = 6;
}

message DescribeScheduledInstancesResult {
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the Scheduled Instances.
    array ScheduledInstanceSet = 2;
}

message DescribeSecurityGroupReferencesRequest {
    // Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    boolean DryRun = 1;
    // One or more security group IDs in your account.
    array GroupId = 2;
}

message DescribeSecurityGroupReferencesResult {
    // Information about the VPCs with the referencing security groups.
    array SecurityGroupReferenceSet = 1;
}

message DescribeSecurityGroupsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service to which the security group allows access.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - An IPv4 CIDR range that has been granted permission in a security group rule.</p> </li> <li> <p> <code>ip-permission.from-port</code> - The start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR range that has been granted permission in a security group rule.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an AWS account that has been granted permission.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the owner of the security group.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the security group.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the security group.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more security group IDs. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all your security groups.</p>
    array GroupIds = 3;
    // <p>[EC2-Classic and default VPC only] One or more security group names. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all your security groups.</p>
    array GroupNames = 4;
}

message DescribeSecurityGroupsResult {
    // Information about one or more security groups.
    array SecurityGroups = 1;
}

message DescribeSnapshotAttributeRequest {
    // The snapshot attribute you would like to view.
    SnapshotAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the EBS snapshot.
    string SnapshotId = 3;
}

message DescribeSnapshotAttributeResult {
    // A list of permissions for creating volumes from the snapshot.
    array CreateVolumePermissions = 1;
    // A list of product codes.
    array ProductCodes = 2;
    // The ID of the EBS snapshot.
    string SnapshotId = 3;
}

message DescribeSnapshotsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>description</code> - A description of the snapshot.</p> </li> <li> <p> <code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.</p> </li> <li> <p> <code>owner-id</code> - The ID of the AWS account that owns the snapshot.</p> </li> <li> <p> <code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p> <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>
    array Filters = 2;
    // The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.
    integer MaxResults = 3;
    // The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
    string NextToken = 4;
    // Returns the snapshots owned by the specified owner. Multiple owners can be specified.
    array OwnerIds = 5;
    // One or more AWS accounts IDs that can create volumes from the snapshot.
    array RestorableByUserIds = 6;
    // <p>One or more snapshot IDs.</p> <p>Default: Describes snapshots for which you have launch permissions.</p>
    array SnapshotIds = 7;
}

message DescribeSnapshotsResult {
    // The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the snapshots.
    array Snapshots = 2;
}

message DescribeSpotDatafeedSubscriptionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
}

message DescribeSpotDatafeedSubscriptionResult {
    // The Spot instance data feed subscription.
    SpotDatafeedSubscription SpotDatafeedSubscription = 1;
}

message DescribeSpotFleetInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 2;
    // The token for the next set of results.
    string NextToken = 3;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 4;
}

message DescribeSpotFleetInstancesResponse {
    // The running instances. Note that this list is refreshed periodically and might be out of date.
    array ActiveInstances = 1;
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 2;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 3;
}

message DescribeSpotFleetRequestHistoryRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The type of events to describe. By default, all events are described.
    EventType EventType = 2;
    // The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 3;
    // The token for the next set of results.
    string NextToken = 4;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 5;
    // The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string StartTime = 6;
}

message DescribeSpotFleetRequestHistoryResponse {
    // Information about the events in the history of the Spot fleet request.
    array HistoryRecords = 1;
    // <p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>
    string LastEvaluatedTime = 2;
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 3;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 4;
    // The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string StartTime = 5;
}

message DescribeSpotFleetRequestsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 2;
    // The token for the next set of results.
    string NextToken = 3;
    // The IDs of the Spot fleet requests.
    array SpotFleetRequestIds = 4;
}

message DescribeSpotFleetRequestsResponse {
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the configuration of your Spot fleet.
    array SpotFleetRequestConfigs = 2;
}

message DescribeSpotInstanceRequestsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the Spot instance request was created.</p> </li> <li> <p> <code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p> <code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code> - The Spot instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The device name for the Amazon EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code> - The size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code> - The type of the Amazon EBS volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The security group for the instance.</p> </li> <li> <p> <code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for the Spot instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>launched-availability-zone</code> - The Availability Zone in which the bid is launched.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p> <code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p> <code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p> <code>spot-instance-request-id</code> - The Spot instance request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly price for any Spot instance launched to fulfill the request.</p> </li> <li> <p> <code>state</code> - The state of the Spot instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot bid status information can help you track your Amazon EC2 Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.</p> </li> <li> <p> <code>status-code</code> - The short code describing the most recent evaluation of your Spot instance request.</p> </li> <li> <p> <code>status-message</code> - The message explaining the status of the Spot instance request.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of Spot instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p> <code>valid-from</code> - The start date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end date of the request.</p> </li> </ul>
    array Filters = 2;
    // One or more Spot instance request IDs.
    array SpotInstanceRequestIds = 3;
}

message DescribeSpotInstanceRequestsResult {
    // One or more Spot instance requests.
    array SpotInstanceRequests = 1;
}

message DescribeSpotPriceHistoryRequest {
    // Filters the results by the specified Availability Zone.
    string AvailabilityZone = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string EndTime = 3;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The timestamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>
    array Filters = 4;
    // Filters the results by the specified instance types. Note that T2 and HS1 instance types are not supported.
    array InstanceTypes = 5;
    // The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 6;
    // The token for the next set of results.
    string NextToken = 7;
    // Filters the results by the specified basic product descriptions.
    array ProductDescriptions = 8;
    // The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string StartTime = 9;
}

message DescribeSpotPriceHistoryResult {
    // The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // The historical Spot prices.
    array SpotPriceHistory = 2;
}

message DescribeStaleSecurityGroupsRequest {
    // Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
    boolean DryRun = 1;
    // The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.
    integer MaxResults = 2;
    // The token for the next set of items to return. (You received this token from a prior call.)
    string NextToken = 3;
    // The ID of the VPC.
    string VpcId = 4;
}

message DescribeStaleSecurityGroupsResult {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // Information about the stale security groups.
    array StaleSecurityGroupSet = 2;
}

message DescribeSubnetsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>availabilityZone</code> - The Availability Zone for the subnet. You can also use <code>availability-zone</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet that are available.</p> </li> <li> <p> <code>cidrBlock</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter names.</p> </li> <li> <p> <code>defaultForAz</code> - Indicates whether this is the default subnet for the Availability Zone. You can also use <code>default-for-az</code> as the filter name.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - An association ID for an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>
    array SubnetIds = 3;
}

message DescribeSubnetsResult {
    // Information about one or more subnets.
    array Subnets = 1;
}

message DescribeTagsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The resource ID.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>
    array Filters = 2;
    // The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
    integer MaxResults = 3;
    // The token to retrieve the next page of results.
    string NextToken = 4;
}

message DescribeTagsResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return..
    string NextToken = 1;
    // A list of tags.
    array Tags = 2;
}

message DescribeVolumeAttributeRequest {
    // The attribute of the volume. This parameter is required.
    VolumeAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the volume.
    string VolumeId = 3;
}

message DescribeVolumeAttributeResult {
    // The state of <code>autoEnableIO</code> attribute.
    AttributeBooleanValue AutoEnableIO = 1;
    // A list of product codes.
    array ProductCodes = 2;
    // The ID of the volume.
    string VolumeId = 3;
}

message DescribeVolumeStatusRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</p> </li> <li> <p> <code>action.description</code> - A description of the action.</p> </li> <li> <p> <code>action.event-id</code> - The event ID associated with the action.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.event-id</code> - The event ID.</p> </li> <li> <p> <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the event.</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the event.</p> </li> <li> <p> <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code> (<code>io-enabled</code> | <code>io-performance</code>).</p> </li> <li> <p> <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</p> </li> <li> <p> <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p> </li> </ul>
    array Filters = 2;
    // The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.
    integer MaxResults = 3;
    // The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 4;
    // <p>One or more volume IDs.</p> <p>Default: Describes all your volumes.</p>
    array VolumeIds = 5;
}

message DescribeVolumeStatusResult {
    // The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // A list of volumes.
    array VolumeStatuses = 2;
}

message DescribeVolumesModificationsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more filters. Supported filters: <code>volume-id</code>, <code>modification-state</code>, <code>target-size</code>, <code>target-iops</code>, <code>target-volume-type</code>, <code>original-size</code>, <code>original-iops</code>, <code>original-volume-type</code>, <code>start-time</code>.
    array Filters = 2;
    // The maximum number of results (up to a limit of 500) to be returned in a paginated request.
    integer MaxResults = 3;
    // The <code>nextToken</code> value returned by a previous paginated request.
    string NextToken = 4;
    // One or more volume IDs for which in-progress modifications will be described.
    array VolumeIds = 5;
}

message DescribeVolumesModificationsResult {
    // Token for pagination, null if there are no more results
    string NextToken = 1;
    // A list of returned <a>VolumeModification</a> objects.
    array VolumesModifications = 2;
}

message DescribeVolumesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name that is exposed to the instance (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - The encryption status of the volume.</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The status of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p> </li> </ul>
    array Filters = 2;
    // The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 500; if <code>MaxResults</code> is given a value larger than 500, only 500 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.
    integer MaxResults = 3;
    // The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
    string NextToken = 4;
    // One or more volume IDs.
    array VolumeIds = 5;
}

message DescribeVolumesResult {
    // The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    string NextToken = 1;
    // Information about the volumes.
    array Volumes = 2;
}

message DescribeVpcAttributeRequest {
    // The VPC attribute.
    VpcAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message DescribeVpcAttributeResult {
    // Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.
    AttributeBooleanValue EnableDnsHostnames = 1;
    // Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
    AttributeBooleanValue EnableDnsSupport = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message DescribeVpcClassicLinkDnsSupportRequest {
    // The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.
    integer MaxResults = 1;
    // The token for the next set of items to return. (You received this token from a prior call.)
    string NextToken = 2;
    // One or more VPC IDs.
    array VpcIds = 3;
}

message DescribeVpcClassicLinkDnsSupportResult {
    // The token to use when requesting the next set of items.
    string NextToken = 1;
    // Information about the ClassicLink DNS support status of the VPCs.
    array Vpcs = 2;
}

message DescribeVpcClassicLinkRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>
    array Filters = 2;
    // One or more VPCs for which you want to describe the ClassicLink status.
    array VpcIds = 3;
}

message DescribeVpcClassicLinkResult {
    // The ClassicLink status of one or more VPCs.
    array Vpcs = 1;
}

message DescribeVpcEndpointServicesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>
    integer MaxResults = 2;
    // The token for the next set of items to return. (You received this token from a prior call.)
    string NextToken = 3;
}

message DescribeVpcEndpointServicesResult {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // A list of supported AWS services.
    array ServiceNames = 2;
}

message DescribeVpcEndpointsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>service-name</code>: The name of the AWS service.</p> </li> <li> <p> <code>vpc-id</code>: The ID of the VPC in which the endpoint resides.</p> </li> <li> <p> <code>vpc-endpoint-id</code>: The ID of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code>: The state of the endpoint. (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>)</p> </li> </ul>
    array Filters = 2;
    // <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>
    integer MaxResults = 3;
    // The token for the next set of items to return. (You received this token from a prior call.)
    string NextToken = 4;
    // One or more endpoint IDs.
    array VpcEndpointIds = 5;
}

message DescribeVpcEndpointsResult {
    // The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
    string NextToken = 1;
    // Information about the endpoints.
    array VpcEndpoints = 2;
}

message DescribeVpcPeeringConnectionsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the requester's VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more VPC peering connection IDs.</p> <p>Default: Describes all your VPC peering connections.</p>
    array VpcPeeringConnectionIds = 3;
}

message DescribeVpcPeeringConnectionsResult {
    // Information about the VPC peering connections.
    array VpcPeeringConnections = 1;
}

message DescribeVpcsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.association-id</code> - The association ID for an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - The association ID for an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>isDefault</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>
    array VpcIds = 3;
}

message DescribeVpcsResult {
    // Information about one or more VPCs.
    array Vpcs = 1;
}

message DescribeVpnConnectionsRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>
    array VpnConnectionIds = 3;
}

message DescribeVpnConnectionsResult {
    // Information about one or more VPN connections.
    array VpnConnections = 1;
}

message DescribeVpnGatewaysRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource. Specify the key of the tag in the filter name and the value of the tag in the filter value. For example, for the tag Purpose=X, specify <code>tag:Purpose</code> for the filter name and <code>X</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose" and the filter "tag-value=X", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>
    array Filters = 2;
    // <p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>
    array VpnGatewayIds = 3;
}

message DescribeVpnGatewaysResult {
    // Information about one or more virtual private gateways.
    array VpnGateways = 1;
}

message DetachClassicLinkVpcRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the instance to unlink from the VPC.
    string InstanceId = 2;
    // The ID of the VPC to which the instance is linked.
    string VpcId = 3;
}

message DetachClassicLinkVpcResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message DetachInternetGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the Internet gateway.
    string InternetGatewayId = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message DetachNetworkInterfaceRequest {
    // The ID of the attachment.
    string AttachmentId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // Specifies whether to force a detachment.
    boolean Force = 3;
}

message DetachVolumeRequest {
    // The device name.
    string Device = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.
    boolean Force = 3;
    // The ID of the instance.
    string InstanceId = 4;
    // The ID of the volume.
    string VolumeId = 5;
}

message DetachVpnGatewayRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
    // The ID of the virtual private gateway.
    string VpnGatewayId = 3;
}

enum DeviceType {
    EBS = 0;
    INSTANCESTORE = 1;
}

message DhcpConfiguration {
    // The name of a DHCP option.
    string Key = 1;
    // One or more values for the DHCP option.
    array Values = 2;
}

repeated DhcpConfiguration DhcpConfigurationList = 1

repeated AttributeValue DhcpConfigurationValueList = 1

message DhcpOptions {
    // One or more DHCP options in the set.
    array DhcpConfigurations = 1;
    // The ID of the set of DHCP options.
    string DhcpOptionsId = 2;
    // Any tags assigned to the DHCP options set.
    array Tags = 3;
}

repeated string DhcpOptionsIdStringList = 1

repeated DhcpOptions DhcpOptionsList = 1

message DisableVgwRoutePropagationRequest {
    // The ID of the virtual private gateway.
    string GatewayId = 1;
    // The ID of the route table.
    string RouteTableId = 2;
}

message DisableVpcClassicLinkDnsSupportRequest {
    // The ID of the VPC.
    string VpcId = 1;
}

message DisableVpcClassicLinkDnsSupportResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message DisableVpcClassicLinkRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

message DisableVpcClassicLinkResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message DisassociateAddressRequest {
    // [EC2-VPC] The association ID. Required for EC2-VPC.
    string AssociationId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // [EC2-Classic] The Elastic IP address. Required for EC2-Classic.
    string PublicIp = 3;
}

message DisassociateIamInstanceProfileRequest {
    // The ID of the IAM instance profile association.
    string AssociationId = 1;
}

message DisassociateIamInstanceProfileResult {
    // Information about the IAM instance profile association.
    IamInstanceProfileAssociation IamInstanceProfileAssociation = 1;
}

message DisassociateRouteTableRequest {
    // The association ID representing the current association between the route table and subnet.
    string AssociationId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
}

message DisassociateSubnetCidrBlockRequest {
    // The association ID for the CIDR block.
    string AssociationId = 1;
}

message DisassociateSubnetCidrBlockResult {
    // Information about the IPv6 CIDR block association.
    SubnetIpv6CidrBlockAssociation Ipv6CidrBlockAssociation = 1;
    // The ID of the subnet.
    string SubnetId = 2;
}

message DisassociateVpcCidrBlockRequest {
    // The association ID for the CIDR block.
    string AssociationId = 1;
}

message DisassociateVpcCidrBlockResult {
    // Information about the IPv4 CIDR block association.
    VpcCidrBlockAssociation CidrBlockAssociation = 1;
    // Information about the IPv6 CIDR block association.
    VpcIpv6CidrBlockAssociation Ipv6CidrBlockAssociation = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message DiskImage {
    // A description of the disk image.
    string Description = 1;
    // Information about the disk image.
    DiskImageDetail Image = 2;
    // Information about the volume.
    VolumeDetail Volume = 3;
}

message DiskImageDescription {
    // The checksum computed for the disk image.
    string Checksum = 1;
    // The disk image format.
    DiskImageFormat Format = 2;
    // <p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    string ImportManifestUrl = 3;
    // The size of the disk image, in GiB.
    integer Size = 4;
}

message DiskImageDetail {
    // The size of the disk image, in GiB.
    integer Bytes = 1;
    // The disk image format.
    DiskImageFormat Format = 2;
    // <p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    string ImportManifestUrl = 3;
}

enum DiskImageFormat {
    VMDK = 0;
    RAW = 1;
    VHD = 2;
}

repeated DiskImage DiskImageList = 1

message DiskImageVolumeDescription {
    // The volume identifier.
    string Id = 1;
    // The size of the volume, in GiB.
    integer Size = 2;
}

enum DomainType {
    VPC = 0;
    STANDARD = 1;
}

message EbsBlockDevice {
    // Indicates whether the EBS volume is deleted on instance termination.
    boolean DeleteOnTermination = 1;
    // Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption.
    boolean Encrypted = 2;
    // <p>The number of I/O operations per second (IOPS) that the volume supports. For <code>io1</code>, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code>, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>
    integer Iops = 3;
    // The ID of the snapshot.
    string SnapshotId = 4;
    // <p>The size of the volume, in GiB.</p> <p>Constraints: 1-16384 for General Purpose SSD (<code>gp2</code>), 4-16384 for Provisioned IOPS SSD (<code>io1</code>), 500-16384 for Throughput Optimized HDD (<code>st1</code>), 500-16384 for Cold HDD (<code>sc1</code>), and 1-1024 for Magnetic (<code>standard</code>) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>
    integer VolumeSize = 5;
    // <p>The volume type: <code>gp2</code>, <code>io1</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code>.</p> <p>Default: <code>standard</code> </p>
    VolumeType VolumeType = 6;
}

message EbsInstanceBlockDevice {
    // The time stamp when the attachment initiated.
    string AttachTime = 1;
    // Indicates whether the volume is deleted on instance termination.
    boolean DeleteOnTermination = 2;
    // The attachment state.
    AttachmentStatus Status = 3;
    // The ID of the EBS volume.
    string VolumeId = 4;
}

message EbsInstanceBlockDeviceSpecification {
    // Indicates whether the volume is deleted on instance termination.
    boolean DeleteOnTermination = 1;
    // The ID of the EBS volume.
    string VolumeId = 2;
}

message EgressOnlyInternetGateway {
    // Information about the attachment of the egress-only Internet gateway.
    array Attachments = 1;
    // The ID of the egress-only Internet gateway.
    string EgressOnlyInternetGatewayId = 2;
}



repeated string EgressOnlyInternetGatewayIdList = 1

repeated EgressOnlyInternetGateway EgressOnlyInternetGatewayList = 1

message ElasticGpuAssociation {
    // The ID of the association.
    string ElasticGpuAssociationId = 1;
    // The state of the association between the instance and the Elastic GPU.
    string ElasticGpuAssociationState = 2;
    // The time the Elastic GPU was associated with the instance.
    string ElasticGpuAssociationTime = 3;
    // The ID of the Elastic GPU.
    string ElasticGpuId = 4;
}

repeated ElasticGpuAssociation ElasticGpuAssociationList = 1

message ElasticGpuHealth {
    // The health status.
    ElasticGpuStatus Status = 1;
}

repeated string ElasticGpuIdSet = 1

repeated ElasticGpus ElasticGpuSet = 1

message ElasticGpuSpecification {
    // The type of Elastic GPU.
    string Type = 1;
}

repeated ElasticGpuSpecification ElasticGpuSpecifications = 1

enum ElasticGpuState {
    ATTACHED = 0;
}

enum ElasticGpuStatu {
    OK = 0;
    IMPAIRED = 1;
}

message ElasticGpus {
    // The Availability Zone in the which the Elastic GPU resides.
    string AvailabilityZone = 1;
    // The status of the Elastic GPU.
    ElasticGpuHealth ElasticGpuHealth = 2;
    // The ID of the Elastic GPU.
    string ElasticGpuId = 3;
    // The state of the Elastic GPU.
    ElasticGpuState ElasticGpuState = 4;
    // The type of Elastic GPU.
    string ElasticGpuType = 5;
    // The ID of the instance to which the Elastic GPU is attached.
    string InstanceId = 6;
}

message EnableVgwRoutePropagationRequest {
    // The ID of the virtual private gateway.
    string GatewayId = 1;
    // The ID of the route table.
    string RouteTableId = 2;
}

message EnableVolumeIORequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the volume.
    string VolumeId = 2;
}

message EnableVpcClassicLinkDnsSupportRequest {
    // The ID of the VPC.
    string VpcId = 1;
}

message EnableVpcClassicLinkDnsSupportResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message EnableVpcClassicLinkRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

message EnableVpcClassicLinkResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

enum EventCode {
    INSTANCEREBOOT = 0;
    SYSTEMREBOOT = 1;
    SYSTEMMAINTENANCE = 2;
    INSTANCERETIREMENT = 3;
    INSTANCESTOP = 4;
}

message EventInformation {
    // The description of the event.
    string EventDescription = 1;
    // <p>The event.</p> <p>The following are the <code>error</code> events.</p> <ul> <li> <p> <code>iamFleetRoleInvalid</code> - The Spot fleet did not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p> <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> <li> <p> <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number of Spot instances that you can launch.</p> </li> </ul> <p>The following are the <code>fleetRequestChange</code> events.</p> <ul> <li> <p> <code>active</code> - The Spot fleet has been validated and Amazon EC2 is attempting to maintain the target number of running Spot instances.</p> </li> <li> <p> <code>cancelled</code> - The Spot fleet is canceled and has no running Spot instances. The Spot fleet will be deleted two days after its instances were terminated.</p> </li> <li> <p> <code>cancelled_running</code> - The Spot fleet is canceled and will not launch additional Spot instances, but its existing Spot instances continue to run until they are interrupted or terminated.</p> </li> <li> <p> <code>cancelled_terminating</code> - The Spot fleet is canceled and its Spot instances are terminating.</p> </li> <li> <p> <code>expired</code> - The Spot fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code> set.</p> </li> <li> <p> <code>modify_in_progress</code> - A request to modify the Spot fleet request was accepted and is in progress.</p> </li> <li> <p> <code>modify_successful</code> - The Spot fleet request was modified.</p> </li> <li> <p> <code>price_update</code> - The bid price for a launch configuration was adjusted because it was too high. This change is permanent.</p> </li> <li> <p> <code>submitted</code> - The Spot fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot instances.</p> </li> </ul> <p>The following are the <code>instanceChange</code> events.</p> <ul> <li> <p> <code>launched</code> - A bid was fulfilled and a new instance was launched.</p> </li> <li> <p> <code>terminated</code> - An instance was terminated by the user.</p> </li> </ul>
    string EventSubType = 2;
    // The ID of the instance. This information is available only for <code>instanceChange</code> events.
    string InstanceId = 3;
}

enum EventType {
    INSTANCECHANGE = 0;
    FLEETREQUESTCHANGE = 1;
    ERROR = 2;
}

enum ExcessCapacityTerminationPolicy {
    NOTERMINATION = 0;
    DEFAULT = 1;
}

repeated string ExecutableByStringList = 1

enum ExportEnvironment {
    CITRIX = 0;
    VMWARE = 1;
    MICROSOFT = 2;
}

message ExportTask {
    // A description of the resource being exported.
    string Description = 1;
    // The ID of the export task.
    string ExportTaskId = 2;
    // Information about the export task.
    ExportToS3Task ExportToS3Task = 3;
    // Information about the instance to export.
    InstanceExportDetails InstanceExportDetails = 4;
    // The state of the export task.
    ExportTaskState State = 5;
    // The status message related to the export task.
    string StatusMessage = 6;
}

repeated string ExportTaskIdStringList = 1

repeated ExportTask ExportTaskList = 1

enum ExportTaskState {
    ACTIVE = 0;
    CANCELLING = 1;
    CANCELLED = 2;
    COMPLETED = 3;
}

message ExportToS3Task {
    // The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
    ContainerFormat ContainerFormat = 1;
    // The format for the exported image.
    DiskImageFormat DiskImageFormat = 2;
    // The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.
    string S3Bucket = 3;
    // The encryption key for your S3 bucket.
    string S3Key = 4;
}

message ExportToS3TaskSpecification {
    // The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
    ContainerFormat ContainerFormat = 1;
    // The format for the exported image.
    DiskImageFormat DiskImageFormat = 2;
    // The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>.
    string S3Bucket = 3;
    // The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.
    string S3Prefix = 4;
}

message Filter {
    // The name of the filter. Filter names are case-sensitive.
    string Name = 1;
    // One or more filter values. Filter values are case-sensitive.
    array Values = 2;
}

repeated Filter FilterList = 1

enum FleetType {
    REQUEST = 0;
    MAINTAIN = 1;
}

message FlowLog {
    // The date and time the flow log was created.
    string CreationTime = 1;
    // Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of CloudWatch Logs log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error.
    string DeliverLogsErrorMessage = 2;
    // The ARN of the IAM role that posts logs to CloudWatch Logs.
    string DeliverLogsPermissionArn = 3;
    // The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).
    string DeliverLogsStatus = 4;
    // The flow log ID.
    string FlowLogId = 5;
    // The status of the flow log (<code>ACTIVE</code>).
    string FlowLogStatus = 6;
    // The name of the flow log group.
    string LogGroupName = 7;
    // The ID of the resource on which the flow log was created.
    string ResourceId = 8;
    // The type of traffic captured for the flow log.
    TrafficType TrafficType = 9;
}

repeated FlowLog FlowLogSet = 1

enum FlowLogsResourceType {
    VPC = 0;
    SUBNET = 1;
    NETWORKINTERFACE = 2;
}

message FpgaImage {
    // The date and time the AFI was created.
    string CreateTime = 1;
    // The description of the AFI.
    string Description = 2;
    // The global FPGA image identifier (AGFI ID).
    string FpgaImageGlobalId = 3;
    // The FPGA image identifier (AFI ID).
    string FpgaImageId = 4;
    // The name of the AFI.
    string Name = 5;
    // The alias of the AFI owner. Possible values include <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>.
    string OwnerAlias = 6;
    // The AWS account ID of the AFI owner.
    string OwnerId = 7;
    // Information about the PCI bus.
    PciId PciId = 8;
    // The product codes for the AFI.
    array ProductCodes = 9;
    // Indicates whether the AFI is public.
    boolean Public = 10;
    // The version of the AWS Shell that was used to create the bitstream.
    string ShellVersion = 11;
    // Information about the state of the AFI.
    FpgaImageState State = 12;
    // Any tags assigned to the AFI.
    array Tags = 13;
    // The time of the most recent update to the AFI.
    string UpdateTime = 14;
}

message FpgaImageAttribute {
    // The description of the AFI.
    string Description = 1;
    // The ID of the AFI.
    string FpgaImageId = 2;
    // One or more load permissions.
    array LoadPermissions = 3;
    // The name of the AFI.
    string Name = 4;
    // One or more product codes.
    array ProductCodes = 5;
}

enum FpgaImageAttributeName {
    DESCRIPTION = 0;
    NAME = 1;
    LOADPERMISSION = 2;
    PRODUCTCODES = 3;
}

repeated string FpgaImageIdList = 1

repeated FpgaImage FpgaImageList = 1

message FpgaImageState {
    // <p>The state. The following are the possible values:</p> <ul> <li> <p> <code>pending</code> - AFI bitstream generation is in progress.</p> </li> <li> <p> <code>available</code> - The AFI is available for use.</p> </li> <li> <p> <code>failed</code> - AFI bitstream generation failed.</p> </li> <li> <p> <code>unavailable</code> - The AFI is no longer available for use.</p> </li> </ul>
    FpgaImageStateCode Code = 1;
    // If the state is <code>failed</code>, this is the error message.
    string Message = 2;
}

enum FpgaImageStateCode {
    PENDING = 0;
    FAILED = 1;
    AVAILABLE = 2;
    UNAVAILABLE = 3;
}

enum GatewayType {
    IPSEC1 = 0;
}

message GetConsoleOutputRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the instance.
    string InstanceId = 2;
}

message GetConsoleOutputResult {
    // The ID of the instance.
    string InstanceId = 1;
    // The console output, Base64-encoded. If using a command line tool, the tool decodes the output for you.
    string Output = 2;
    // The time the output was last updated.
    string Timestamp = 3;
}

message GetConsoleScreenshotRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // When set to <code>true</code>, acts as keystroke input and wakes up an instance that's in standby or "sleep" mode.
    boolean WakeUp = 3;
}

message GetConsoleScreenshotResult {
    // The data that comprises the image.
    string ImageData = 1;
    // The ID of the instance.
    string InstanceId = 2;
}

message GetHostReservationPurchasePreviewRequest {
    // The ID/s of the Dedicated Host/s that the reservation will be associated with.
    array HostIdSet = 1;
    // The offering ID of the reservation.
    string OfferingId = 2;
}

message GetHostReservationPurchasePreviewResult {
    // The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 1;
    // The purchase information of the Dedicated Host Reservation and the Dedicated Hosts associated with it.
    array Purchase = 2;
    // The potential total hourly price of the reservation per hour.
    string TotalHourlyPrice = 3;
    // The potential total upfront price. This is billed immediately.
    string TotalUpfrontPrice = 4;
}

message GetPasswordDataRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the Windows instance.
    string InstanceId = 2;
}

message GetPasswordDataResult {
    // The ID of the Windows instance.
    string InstanceId = 1;
    // The password of the instance. Returns an empty string if the password is not available.
    string PasswordData = 2;
    // The time the data was last updated.
    string Timestamp = 3;
}

message GetReservedInstancesExchangeQuoteRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The IDs of the Convertible Reserved Instances to exchange.
    array ReservedInstanceIds = 2;
    // The configuration requirements of the Convertible Reserved Instances to exchange for your current Convertible Reserved Instances.
    array TargetConfigurations = 3;
}

message GetReservedInstancesExchangeQuoteResult {
    // The currency of the transaction.
    string CurrencyCode = 1;
    // If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot be completed.
    boolean IsValidExchange = 2;
    // The new end date of the reservation term.
    string OutputReservedInstancesWillExpireAt = 3;
    // The total true upfront charge for the exchange.
    string PaymentDue = 4;
    // The cost associated with the Reserved Instance.
    ReservationValue ReservedInstanceValueRollup = 5;
    // The configuration of your Convertible Reserved Instances.
    array ReservedInstanceValueSet = 6;
    // The cost associated with the Reserved Instance.
    ReservationValue TargetConfigurationValueRollup = 7;
    // The values of the target Convertible Reserved Instances.
    array TargetConfigurationValueSet = 8;
    // Describes the reason why the exchange cannot be completed.
    string ValidationFailureReason = 9;
}

repeated string GroupIdStringList = 1

message GroupIdentifier {
    // The ID of the security group.
    string GroupId = 1;
    // The name of the security group.
    string GroupName = 2;
}

repeated GroupIdentifier GroupIdentifierList = 1

repeated string GroupIds = 1

repeated string GroupNameStringList = 1

message HistoryRecord {
    // Information about the event.
    EventInformation EventInformation = 1;
    // <p>The event type.</p> <ul> <li> <p> <code>error</code> - Indicates an error with the Spot fleet request.</p> </li> <li> <p> <code>fleetRequestChange</code> - Indicates a change in the status or configuration of the Spot fleet request.</p> </li> <li> <p> <code>instanceChange</code> - Indicates that an instance was launched or terminated.</p> </li> </ul>
    EventType EventType = 2;
    // The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string Timestamp = 3;
}

repeated HistoryRecord HistoryRecords = 1

message Host {
    // Whether auto-placement is on or off.
    AutoPlacement AutoPlacement = 1;
    // The Availability Zone of the Dedicated Host.
    string AvailabilityZone = 2;
    // The number of new instances that can be launched onto the Dedicated Host.
    AvailableCapacity AvailableCapacity = 3;
    // Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClientToken = 4;
    // The ID of the Dedicated Host.
    string HostId = 5;
    // The hardware specifications of the Dedicated Host.
    HostProperties HostProperties = 6;
    // The reservation ID of the Dedicated Host. This returns a <code>null</code> response if the Dedicated Host doesn't have an associated reservation.
    string HostReservationId = 7;
    // The IDs and instance type that are currently running on the Dedicated Host.
    array Instances = 8;
    // The Dedicated Host's state.
    AllocationState State = 9;
}

message HostInstance {
    // the IDs of instances that are running on the Dedicated Host.
    string InstanceId = 1;
    // The instance type size (for example, <code>m3.medium</code>) of the running instance.
    string InstanceType = 2;
}

repeated HostInstance HostInstanceList = 1

repeated Host HostList = 1

message HostOffering {
    // The currency of the offering.
    CurrencyCodeValues CurrencyCode = 1;
    // The duration of the offering (in seconds).
    integer Duration = 2;
    // The hourly price of the offering.
    string HourlyPrice = 3;
    // The instance family of the offering.
    string InstanceFamily = 4;
    // The ID of the offering.
    string OfferingId = 5;
    // The available payment option.
    PaymentOption PaymentOption = 6;
    // The upfront price of the offering. Does not apply to No Upfront offerings.
    string UpfrontPrice = 7;
}

repeated HostOffering HostOfferingSet = 1

message HostProperties {
    // The number of cores on the Dedicated Host.
    integer Cores = 1;
    // The instance type size that the Dedicated Host supports (for example, <code>m3.medium</code>).
    string InstanceType = 2;
    // The number of sockets on the Dedicated Host.
    integer Sockets = 3;
    // The number of vCPUs on the Dedicated Host.
    integer TotalVCpus = 4;
}

message HostReservation {
    // The number of Dedicated Hosts the reservation is associated with.
    integer Count = 1;
    // The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // The length of the reservation's term, specified in seconds. Can be <code>31536000 (1 year)</code> | <code>94608000 (3 years)</code>.
    integer Duration = 3;
    // The date and time that the reservation ends.
    string End = 4;
    // The IDs of the Dedicated Hosts associated with the reservation.
    array HostIdSet = 5;
    // The ID of the reservation that specifies the associated Dedicated Hosts.
    string HostReservationId = 6;
    // The hourly price of the reservation.
    string HourlyPrice = 7;
    // The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.
    string InstanceFamily = 8;
    // The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.
    string OfferingId = 9;
    // The payment option selected for this reservation.
    PaymentOption PaymentOption = 10;
    // The date and time that the reservation started.
    string Start = 11;
    // The state of the reservation.
    ReservationState State = 12;
    // The upfront price of the reservation.
    string UpfrontPrice = 13;
}

repeated string HostReservationIdSet = 1

repeated HostReservation HostReservationSet = 1

enum HostTenancy {
    DEDICATED = 0;
    HOST = 1;
}

enum HypervisorType {
    OVM = 0;
    XEN = 1;
}

message IamInstanceProfile {
    // The Amazon Resource Name (ARN) of the instance profile.
    string Arn = 1;
    // The ID of the instance profile.
    string Id = 2;
}

message IamInstanceProfileAssociation {
    // The ID of the association.
    string AssociationId = 1;
    // The IAM instance profile.
    IamInstanceProfile IamInstanceProfile = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The state of the association.
    IamInstanceProfileAssociationState State = 4;
    // The time the IAM instance profile was associated with the instance.
    string Timestamp = 5;
}

repeated IamInstanceProfileAssociation IamInstanceProfileAssociationSet = 1

enum IamInstanceProfileAssociationState {
    ASSOCIATING = 0;
    ASSOCIATED = 1;
    DISASSOCIATING = 2;
    DISASSOCIATED = 3;
}

message IamInstanceProfileSpecification {
    // The Amazon Resource Name (ARN) of the instance profile.
    string Arn = 1;
    // The name of the instance profile.
    string Name = 2;
}

message IcmpTypeCode {
    // The ICMP code. A value of -1 means all codes for the specified ICMP type.
    integer Code = 1;
    // The ICMP type. A value of -1 means all types.
    integer Type = 2;
}

message IdFormat {
    // The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.
    string Deadline = 1;
    // The type of resource.
    string Resource = 2;
    // Indicates whether longer IDs (17-character IDs) are enabled for the resource.
    boolean UseLongIds = 3;
}

repeated IdFormat IdFormatList = 1

message Image {
    // The architecture of the image.
    ArchitectureValues Architecture = 1;
    // Any block device mapping entries.
    array BlockDeviceMappings = 2;
    // The date and time the image was created.
    string CreationDate = 3;
    // The description of the AMI that was provided during image creation.
    string Description = 4;
    // Specifies whether enhanced networking with ENA is enabled.
    boolean EnaSupport = 5;
    // The hypervisor type of the image.
    HypervisorType Hypervisor = 6;
    // The ID of the AMI.
    string ImageId = 7;
    // The location of the AMI.
    string ImageLocation = 8;
    // The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the AWS account ID of the AMI owner.
    string ImageOwnerAlias = 9;
    // The type of image.
    ImageTypeValues ImageType = 10;
    // The kernel associated with the image, if any. Only applicable for machine images.
    string KernelId = 11;
    // The name of the AMI that was provided during image creation.
    string Name = 12;
    // The AWS account ID of the image owner.
    string OwnerId = 13;
    // The value is <code>Windows</code> for Windows AMIs; otherwise blank.
    PlatformValues Platform = 14;
    // Any product codes associated with the AMI.
    array ProductCodes = 15;
    // Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.
    boolean Public = 16;
    // The RAM disk associated with the image, if any. Only applicable for machine images.
    string RamdiskId = 17;
    // The device name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
    string RootDeviceName = 18;
    // The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.
    DeviceType RootDeviceType = 19;
    // Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    string SriovNetSupport = 20;
    // The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.
    ImageState State = 21;
    // The reason for the state change.
    StateReason StateReason = 22;
    // Any tags assigned to the image.
    array Tags = 23;
    // The type of virtualization of the AMI.
    VirtualizationType VirtualizationType = 24;
}

message ImageAttribute {
    // One or more block device mapping entries.
    array BlockDeviceMappings = 1;
    // A description for the AMI.
    AttributeValue Description = 2;
    // The ID of the AMI.
    string ImageId = 3;
    // The kernel ID.
    AttributeValue KernelId = 4;
    // One or more launch permissions.
    array LaunchPermissions = 5;
    // One or more product codes.
    array ProductCodes = 6;
    // The RAM disk ID.
    AttributeValue RamdiskId = 7;
    // Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    AttributeValue SriovNetSupport = 8;
}

enum ImageAttributeName {
    DESCRIPTION = 0;
    KERNEL = 1;
    RAMDISK = 2;
    LAUNCHPERMISSION = 3;
    PRODUCTCODES = 4;
    BLOCKDEVICEMAPPING = 5;
    SRIOVNETSUPPORT = 6;
}

message ImageDiskContainer {
    // The description of the disk image.
    string Description = 1;
    // The block device mapping for the disk.
    string DeviceName = 2;
    // <p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code> </p>
    string Format = 3;
    // The ID of the EBS snapshot to be used for importing the snapshot.
    string SnapshotId = 4;
    // The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)
    string Url = 5;
    // The S3 bucket for the disk image.
    UserBucket UserBucket = 6;
}

repeated ImageDiskContainer ImageDiskContainerList = 1

repeated string ImageIdStringList = 1

repeated Image ImageList = 1

enum ImageState {
    PENDING = 0;
    AVAILABLE = 1;
    INVALID = 2;
    DEREGISTERED = 3;
    TRANSIENT = 4;
    FAILED = 5;
    ERROR = 6;
}

enum ImageTypeValue {
    MACHINE = 0;
    KERNEL = 1;
    RAMDISK = 2;
}

message ImportImageRequest {
    // <p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> </p>
    string Architecture = 1;
    // The client-specific data.
    ClientData ClientData = 2;
    // The token to enable idempotency for VM import requests.
    string ClientToken = 3;
    // A description string for the import image task.
    string Description = 4;
    // Information about the disk containers.
    array DiskContainers = 5;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 6;
    // <p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code> </p>
    string Hypervisor = 7;
    // <p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p> <p> <b>Note:</b> You may only use BYOL if you have existing licenses with rights to use these licenses in a third party cloud like AWS. For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a> in the VM Import/Export User Guide.</p> <p>Valid values: <code>AWS</code> | <code>BYOL</code> </p>
    string LicenseType = 8;
    // <p>The operating system of the virtual machine.</p> <p>Valid values: <code>Windows</code> | <code>Linux</code> </p>
    string Platform = 9;
    // The name of the role to use when not using the default role, 'vmimport'.
    string RoleName = 10;
}

message ImportImageResult {
    // The architecture of the virtual machine.
    string Architecture = 1;
    // A description of the import task.
    string Description = 2;
    // The target hypervisor of the import task.
    string Hypervisor = 3;
    // The ID of the Amazon Machine Image (AMI) created by the import task.
    string ImageId = 4;
    // The task ID of the import image task.
    string ImportTaskId = 5;
    // The license type of the virtual machine.
    string LicenseType = 6;
    // The operating system of the virtual machine.
    string Platform = 7;
    // The progress of the task.
    string Progress = 8;
    // Information about the snapshots.
    array SnapshotDetails = 9;
    // A brief status of the task.
    string Status = 10;
    // A detailed status message of the import task.
    string StatusMessage = 11;
}

message ImportImageTask {
    // <p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> </p>
    string Architecture = 1;
    // A description of the import task.
    string Description = 2;
    // <p>The target hypervisor for the import task.</p> <p>Valid values: <code>xen</code> </p>
    string Hypervisor = 3;
    // The ID of the Amazon Machine Image (AMI) of the imported virtual machine.
    string ImageId = 4;
    // The ID of the import image task.
    string ImportTaskId = 5;
    // The license type of the virtual machine.
    string LicenseType = 6;
    // The description string for the import image task.
    string Platform = 7;
    // The percentage of progress of the import image task.
    string Progress = 8;
    // Information about the snapshots.
    array SnapshotDetails = 9;
    // A brief status for the import image task.
    string Status = 10;
    // A descriptive status message for the import image task.
    string StatusMessage = 11;
}

repeated ImportImageTask ImportImageTaskList = 1

message ImportInstanceLaunchSpecification {
    // Reserved.
    string AdditionalInfo = 1;
    // The architecture of the instance.
    ArchitectureValues Architecture = 2;
    // One or more security group IDs.
    array GroupIds = 3;
    // One or more security group names.
    array GroupNames = 4;
    // Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
    ShutdownBehavior InstanceInitiatedShutdownBehavior = 5;
    // The instance type. For more information about the instance types that you can import, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.
    InstanceType InstanceType = 6;
    // Indicates whether monitoring is enabled.
    boolean Monitoring = 7;
    // The placement information for the instance.
    Placement Placement = 8;
    // [EC2-VPC] An available IP address from the IP address range of the subnet.
    string PrivateIpAddress = 9;
    // [EC2-VPC] The ID of the subnet in which to launch the instance.
    string SubnetId = 10;
    // The user data to make available to the instance. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
    UserData UserData = 11;
}

message ImportInstanceRequest {
    // A description for the instance being imported.
    string Description = 1;
    // The disk image.
    array DiskImages = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The launch specification.
    ImportInstanceLaunchSpecification LaunchSpecification = 4;
    // The instance operating system.
    PlatformValues Platform = 5;
}

message ImportInstanceResult {
    // Information about the conversion task.
    ConversionTask ConversionTask = 1;
}

message ImportInstanceTaskDetails {
    // A description of the task.
    string Description = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // The instance operating system.
    PlatformValues Platform = 3;
    // One or more volumes.
    array Volumes = 4;
}

message ImportInstanceVolumeDetailItem {
    // The Availability Zone where the resulting instance will reside.
    string AvailabilityZone = 1;
    // The number of bytes converted so far.
    integer BytesConverted = 2;
    // A description of the task.
    string Description = 3;
    // The image.
    DiskImageDescription Image = 4;
    // The status of the import of this particular disk image.
    string Status = 5;
    // The status information or errors related to the disk image.
    string StatusMessage = 6;
    // The volume.
    DiskImageVolumeDescription Volume = 7;
}

repeated ImportInstanceVolumeDetailItem ImportInstanceVolumeDetailSet = 1

message ImportKeyPairRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // A unique name for the key pair.
    string KeyName = 2;
    // The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.
    string PublicKeyMaterial = 3;
}

message ImportKeyPairResult {
    // The MD5 public key fingerprint as specified in section 4 of RFC 4716.
    string KeyFingerprint = 1;
    // The key pair name you provided.
    string KeyName = 2;
}

message ImportSnapshotRequest {
    // The client-specific data.
    ClientData ClientData = 1;
    // Token to enable idempotency for VM import requests.
    string ClientToken = 2;
    // The description string for the import snapshot task.
    string Description = 3;
    // Information about the disk container.
    SnapshotDiskContainer DiskContainer = 4;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 5;
    // The name of the role to use when not using the default role, 'vmimport'.
    string RoleName = 6;
}

message ImportSnapshotResult {
    // A description of the import snapshot task.
    string Description = 1;
    // The ID of the import snapshot task.
    string ImportTaskId = 2;
    // Information about the import snapshot task.
    SnapshotTaskDetail SnapshotTaskDetail = 3;
}

message ImportSnapshotTask {
    // A description of the import snapshot task.
    string Description = 1;
    // The ID of the import snapshot task.
    string ImportTaskId = 2;
    // Describes an import snapshot task.
    SnapshotTaskDetail SnapshotTaskDetail = 3;
}

repeated ImportSnapshotTask ImportSnapshotTaskList = 1

repeated string ImportTaskIdList = 1

message ImportVolumeRequest {
    // The Availability Zone for the resulting EBS volume.
    string AvailabilityZone = 1;
    // A description of the volume.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The disk image.
    DiskImageDetail Image = 4;
    // The volume size.
    VolumeDetail Volume = 5;
}

message ImportVolumeResult {
    // Information about the conversion task.
    ConversionTask ConversionTask = 1;
}

message ImportVolumeTaskDetails {
    // The Availability Zone where the resulting volume will reside.
    string AvailabilityZone = 1;
    // The number of bytes converted so far.
    integer BytesConverted = 2;
    // The description you provided when starting the import volume task.
    string Description = 3;
    // The image.
    DiskImageDescription Image = 4;
    // The volume.
    DiskImageVolumeDescription Volume = 5;
}

message Instance {
    // The AMI launch index, which can be used to find this instance in the launch group.
    integer AmiLaunchIndex = 1;
    // The architecture of the image.
    ArchitectureValues Architecture = 2;
    // Any block device mapping entries for the instance.
    array BlockDeviceMappings = 3;
    // The idempotency token you provided when you launched the instance, if applicable.
    string ClientToken = 4;
    // Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
    boolean EbsOptimized = 5;
    // The Elastic GPU associated with the instance.
    array ElasticGpuAssociations = 6;
    // Specifies whether enhanced networking with ENA is enabled.
    boolean EnaSupport = 7;
    // The hypervisor type of the instance.
    HypervisorType Hypervisor = 8;
    // The IAM instance profile associated with the instance, if applicable.
    IamInstanceProfile IamInstanceProfile = 9;
    // The ID of the AMI used to launch the instance.
    string ImageId = 10;
    // The ID of the instance.
    string InstanceId = 11;
    // Indicates whether this is a Spot Instance or a Scheduled Instance.
    InstanceLifecycleType InstanceLifecycle = 12;
    // The instance type.
    InstanceType InstanceType = 13;
    // The kernel associated with this instance, if applicable.
    string KernelId = 14;
    // The name of the key pair, if this instance was launched with an associated key pair.
    string KeyName = 15;
    // The time the instance was launched.
    string LaunchTime = 16;
    // The monitoring for the instance.
    Monitoring Monitoring = 17;
    // [EC2-VPC] One or more network interfaces for the instance.
    array NetworkInterfaces = 18;
    // The location where the instance launched, if applicable.
    Placement Placement = 19;
    // The value is <code>Windows</code> for Windows instances; otherwise blank.
    PlatformValues Platform = 20;
    // <p>(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.</p>
    string PrivateDnsName = 21;
    // The private IPv4 address assigned to the instance.
    string PrivateIpAddress = 22;
    // The product codes attached to this instance, if applicable.
    array ProductCodes = 23;
    // (IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.
    string PublicDnsName = 24;
    // The public IPv4 address assigned to the instance, if applicable.
    string PublicIpAddress = 25;
    // The RAM disk associated with this instance, if applicable.
    string RamdiskId = 26;
    // The root device name (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
    string RootDeviceName = 27;
    // The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
    DeviceType RootDeviceType = 28;
    // One or more security groups for the instance.
    array SecurityGroups = 29;
    // Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    boolean SourceDestCheck = 30;
    // If the request is a Spot Instance request, the ID of the request.
    string SpotInstanceRequestId = 31;
    // Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    string SriovNetSupport = 32;
    // The current state of the instance.
    InstanceState State = 33;
    // The reason for the most recent state transition.
    StateReason StateReason = 34;
    // The reason for the most recent state transition. This might be an empty string.
    string StateTransitionReason = 35;
    // [EC2-VPC] The ID of the subnet in which the instance is running.
    string SubnetId = 36;
    // Any tags assigned to the instance.
    array Tags = 37;
    // The virtualization type of the instance.
    VirtualizationType VirtualizationType = 38;
    // [EC2-VPC] The ID of the VPC in which the instance is running.
    string VpcId = 39;
}

message InstanceAttribute {
    // The block device mapping of the instance.
    array BlockDeviceMappings = 1;
    // If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.
    AttributeBooleanValue DisableApiTermination = 2;
    // Indicates whether the instance is optimized for Amazon EBS I/O.
    AttributeBooleanValue EbsOptimized = 3;
    // Indicates whether enhanced networking with ENA is enabled.
    AttributeBooleanValue EnaSupport = 4;
    // The security groups associated with the instance.
    array Groups = 5;
    // The ID of the instance.
    string InstanceId = 6;
    // Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
    AttributeValue InstanceInitiatedShutdownBehavior = 7;
    // The instance type.
    AttributeValue InstanceType = 8;
    // The kernel ID.
    AttributeValue KernelId = 9;
    // A list of product codes.
    array ProductCodes = 10;
    // The RAM disk ID.
    AttributeValue RamdiskId = 11;
    // The name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).
    AttributeValue RootDeviceName = 12;
    // Indicates whether source/destination checking is enabled. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.
    AttributeBooleanValue SourceDestCheck = 13;
    // Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    AttributeValue SriovNetSupport = 14;
    // The user data.
    AttributeValue UserData = 15;
}

enum InstanceAttributeName {
    INSTANCETYPE = 0;
    KERNEL = 1;
    RAMDISK = 2;
    USERDATA = 3;
    DISABLEAPITERMINATION = 4;
    INSTANCEINITIATEDSHUTDOWNBEHAVIOR = 5;
    ROOTDEVICENAME = 6;
    BLOCKDEVICEMAPPING = 7;
    PRODUCTCODES = 8;
    SOURCEDESTCHECK = 9;
    GROUPSET = 10;
    EBSOPTIMIZED = 11;
    SRIOVNETSUPPORT = 12;
    ENASUPPORT = 13;
}

message InstanceBlockDeviceMapping {
    // The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string DeviceName = 1;
    // Parameters used to automatically set up EBS volumes when the instance is launched.
    EbsInstanceBlockDevice Ebs = 2;
}

repeated InstanceBlockDeviceMapping InstanceBlockDeviceMappingList = 1

message InstanceBlockDeviceMappingSpecification {
    // The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string DeviceName = 1;
    // Parameters used to automatically set up EBS volumes when the instance is launched.
    EbsInstanceBlockDeviceSpecification Ebs = 2;
    // suppress the specified device included in the block device mapping.
    string NoDevice = 3;
    // The virtual device name.
    string VirtualName = 4;
}

repeated InstanceBlockDeviceMappingSpecification InstanceBlockDeviceMappingSpecificationList = 1

message InstanceCapacity {
    // The number of instances that can still be launched onto the Dedicated Host.
    integer AvailableCapacity = 1;
    // The instance type size supported by the Dedicated Host.
    string InstanceType = 2;
    // The total number of instances that can be launched onto the Dedicated Host.
    integer TotalCapacity = 3;
}

message InstanceCount {
    // The number of listed Reserved Instances in the state specified by the <code>state</code>.
    integer InstanceCount = 1;
    // The states of the listed Reserved Instances.
    ListingState State = 2;
}

repeated InstanceCount InstanceCountList = 1

message InstanceExportDetails {
    // The ID of the resource being exported.
    string InstanceId = 1;
    // The target virtualization environment.
    ExportEnvironment TargetEnvironment = 2;
}

enum InstanceHealthStatu {
    HEALTHY = 0;
    UNHEALTHY = 1;
}

repeated string InstanceIdSet = 1

repeated string InstanceIdStringList = 1

enum InstanceInterruptionBehavior {
    STOP = 0;
    TERMINATE = 1;
}

message InstanceIpv6Address {
    // The IPv6 address.
    string Ipv6Address = 1;
}

repeated InstanceIpv6Address InstanceIpv6AddressList = 1

enum InstanceLifecycleType {
    SPOT = 0;
    SCHEDULED = 1;
}

repeated Instance InstanceList = 1

message InstanceMonitoring {
    // The ID of the instance.
    string InstanceId = 1;
    // The monitoring for the instance.
    Monitoring Monitoring = 2;
}

repeated InstanceMonitoring InstanceMonitoringList = 1

message InstanceNetworkInterface {
    // The association information for an Elastic IPv4 associated with the network interface.
    InstanceNetworkInterfaceAssociation Association = 1;
    // The network interface attachment.
    InstanceNetworkInterfaceAttachment Attachment = 2;
    // The description.
    string Description = 3;
    // One or more security groups.
    array Groups = 4;
    // One or more IPv6 addresses associated with the network interface.
    array Ipv6Addresses = 5;
    // The MAC address.
    string MacAddress = 6;
    // The ID of the network interface.
    string NetworkInterfaceId = 7;
    // The ID of the AWS account that created the network interface.
    string OwnerId = 8;
    // The private DNS name.
    string PrivateDnsName = 9;
    // The IPv4 address of the network interface within the subnet.
    string PrivateIpAddress = 10;
    // One or more private IPv4 addresses associated with the network interface.
    array PrivateIpAddresses = 11;
    // Indicates whether to validate network traffic to or from this network interface.
    boolean SourceDestCheck = 12;
    // The status of the network interface.
    NetworkInterfaceStatus Status = 13;
    // The ID of the subnet.
    string SubnetId = 14;
    // The ID of the VPC.
    string VpcId = 15;
}

message InstanceNetworkInterfaceAssociation {
    // The ID of the owner of the Elastic IP address.
    string IpOwnerId = 1;
    // The public DNS name.
    string PublicDnsName = 2;
    // The public IP address or Elastic IP address bound to the network interface.
    string PublicIp = 3;
}

message InstanceNetworkInterfaceAttachment {
    // The time stamp when the attachment initiated.
    string AttachTime = 1;
    // The ID of the network interface attachment.
    string AttachmentId = 2;
    // Indicates whether the network interface is deleted when the instance is terminated.
    boolean DeleteOnTermination = 3;
    // The index of the device on the instance for the network interface attachment.
    integer DeviceIndex = 4;
    // The attachment state.
    AttachmentStatus Status = 5;
}

repeated InstanceNetworkInterface InstanceNetworkInterfaceList = 1

message InstanceNetworkInterfaceSpecification {
    // Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.
    boolean AssociatePublicIpAddress = 1;
    // If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance.
    boolean DeleteOnTermination = 2;
    // The description of the network interface. Applies only if creating a network interface when launching an instance.
    string Description = 3;
    // The index of the device on the instance for the network interface attachment. If you are specifying a network interface in a <a>RunInstances</a> request, you must provide the device index.
    integer DeviceIndex = 4;
    // The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.
    array Groups = 5;
    // A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.
    integer Ipv6AddressCount = 6;
    // One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.
    array Ipv6Addresses = 7;
    // The ID of the network interface.
    string NetworkInterfaceId = 8;
    // The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a <a>RunInstances</a> request.
    string PrivateIpAddress = 9;
    // One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a <a>RunInstances</a> request.
    array PrivateIpAddresses = 10;
    // The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a <a>RunInstances</a> request.
    integer SecondaryPrivateIpAddressCount = 11;
    // The ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance.
    string SubnetId = 12;
}

repeated InstanceNetworkInterfaceSpecification InstanceNetworkInterfaceSpecificationList = 1

message InstancePrivateIpAddress {
    // The association information for an Elastic IP address for the network interface.
    InstanceNetworkInterfaceAssociation Association = 1;
    // Indicates whether this IPv4 address is the primary private IP address of the network interface.
    boolean Primary = 2;
    // The private IPv4 DNS name.
    string PrivateDnsName = 3;
    // The private IPv4 address of the network interface.
    string PrivateIpAddress = 4;
}

repeated InstancePrivateIpAddress InstancePrivateIpAddressList = 1

message InstanceState {
    // <p>The low byte represents the state. The high byte is an opaque internal value and should be ignored.</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul>
    integer Code = 1;
    // The current state of the instance.
    InstanceStateName Name = 2;
}

message InstanceStateChange {
    // The current state of the instance.
    InstanceState CurrentState = 1;
    // The ID of the instance.
    string InstanceId = 2;
    // The previous state of the instance.
    InstanceState PreviousState = 3;
}

repeated InstanceStateChange InstanceStateChangeList = 1

enum InstanceStateName {
    PENDING = 0;
    RUNNING = 1;
    SHUTTINGDOWN = 2;
    TERMINATED = 3;
    STOPPING = 4;
    STOPPED = 5;
}

message InstanceStatus {
    // The Availability Zone of the instance.
    string AvailabilityZone = 1;
    // Any scheduled events associated with the instance.
    array Events = 2;
    // The ID of the instance.
    string InstanceId = 3;
    // The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.
    InstanceState InstanceState = 4;
    // Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.
    InstanceStatusSummary InstanceStatus = 5;
    // Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.
    InstanceStatusSummary SystemStatus = 6;
}

message InstanceStatusDetails {
    // The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.
    string ImpairedSince = 1;
    // The type of instance status.
    StatusName Name = 2;
    // The status.
    StatusType Status = 3;
}

repeated InstanceStatusDetails InstanceStatusDetailsList = 1

message InstanceStatusEvent {
    // The event code.
    EventCode Code = 1;
    // <p>A description of the event.</p> <p>After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].</p>
    string Description = 2;
    // The latest scheduled end time for the event.
    string NotAfter = 3;
    // The earliest scheduled start time for the event.
    string NotBefore = 4;
}

repeated InstanceStatusEvent InstanceStatusEventList = 1

repeated InstanceStatus InstanceStatusList = 1

message InstanceStatusSummary {
    // The system instance health or application instance health.
    array Details = 1;
    // The status.
    SummaryStatus Status = 2;
}

enum InstanceType {
    T1MICRO = 0;
    T2NANO = 1;
    T2MICRO = 2;
    T2SMALL = 3;
    T2MEDIUM = 4;
    T2LARGE = 5;
    T2XLARGE = 6;
    T22XLARGE = 7;
    M1SMALL = 8;
    M1MEDIUM = 9;
    M1LARGE = 10;
    M1XLARGE = 11;
    M3MEDIUM = 12;
    M3LARGE = 13;
    M3XLARGE = 14;
    M32XLARGE = 15;
    M4LARGE = 16;
    M4XLARGE = 17;
    M42XLARGE = 18;
    M44XLARGE = 19;
    M410XLARGE = 20;
    M416XLARGE = 21;
    M2XLARGE = 22;
    M22XLARGE = 23;
    M24XLARGE = 24;
    CR18XLARGE = 25;
    R3LARGE = 26;
    R3XLARGE = 27;
    R32XLARGE = 28;
    R34XLARGE = 29;
    R38XLARGE = 30;
    R4LARGE = 31;
    R4XLARGE = 32;
    R42XLARGE = 33;
    R44XLARGE = 34;
    R48XLARGE = 35;
    R416XLARGE = 36;
    X116XLARGE = 37;
    X132XLARGE = 38;
    X1E32XLARGE = 39;
    I2XLARGE = 40;
    I22XLARGE = 41;
    I24XLARGE = 42;
    I28XLARGE = 43;
    I3LARGE = 44;
    I3XLARGE = 45;
    I32XLARGE = 46;
    I34XLARGE = 47;
    I38XLARGE = 48;
    I316XLARGE = 49;
    HI14XLARGE = 50;
    HS18XLARGE = 51;
    C1MEDIUM = 52;
    C1XLARGE = 53;
    C3LARGE = 54;
    C3XLARGE = 55;
    C32XLARGE = 56;
    C34XLARGE = 57;
    C38XLARGE = 58;
    C4LARGE = 59;
    C4XLARGE = 60;
    C42XLARGE = 61;
    C44XLARGE = 62;
    C48XLARGE = 63;
    CC14XLARGE = 64;
    CC28XLARGE = 65;
    G22XLARGE = 66;
    G28XLARGE = 67;
    G34XLARGE = 68;
    G38XLARGE = 69;
    G316XLARGE = 70;
    CG14XLARGE = 71;
    P2XLARGE = 72;
    P28XLARGE = 73;
    P216XLARGE = 74;
    D2XLARGE = 75;
    D22XLARGE = 76;
    D24XLARGE = 77;
    D28XLARGE = 78;
    F12XLARGE = 79;
    F116XLARGE = 80;
}

repeated InstanceType InstanceTypeList = 1



enum InterfacePermissionType {
    INSTANCEATTACH = 0;
    EIPASSOCIATE = 1;
}

message InternetGateway {
    // Any VPCs attached to the Internet gateway.
    array Attachments = 1;
    // The ID of the Internet gateway.
    string InternetGatewayId = 2;
    // Any tags assigned to the Internet gateway.
    array Tags = 3;
}

message InternetGatewayAttachment {
    // The current state of the attachment.
    AttachmentStatus State = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

repeated InternetGatewayAttachment InternetGatewayAttachmentList = 1

repeated InternetGateway InternetGatewayList = 1

message IpPermission {
    // The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of <code>-1</code> indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    integer FromPort = 1;
    // <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). </p> <p>[EC2-VPC only] Use <code>-1</code> to specify all protocols. When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>58</code> (ICMPv6) allows traffic on all ports, regardless of any port range you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>58</code> (ICMPv6), you can optionally specify a port range; if you don't, traffic for all types and codes is allowed when authorizing rules. </p>
    string IpProtocol = 2;
    // One or more IPv4 ranges.
    array IpRanges = 3;
    // [EC2-VPC only] One or more IPv6 ranges.
    array Ipv6Ranges = 4;
    // (Valid for <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupEgress</a> and <a>DescribeSecurityGroups</a> only) One or more prefix list IDs for an AWS service. In an <a>AuthorizeSecurityGroupEgress</a> request, this is the AWS service that you want to access through a VPC endpoint from instances associated with the security group.
    array PrefixListIds = 5;
    // The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    integer ToPort = 6;
    // One or more security group and AWS account ID pairs.
    array UserIdGroupPairs = 7;
}

repeated IpPermission IpPermissionList = 1

message IpRange {
    // The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix.
    string CidrIp = 1;
    // <p>A description for the security group rule that references this IPv4 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
    string Description = 2;
}

repeated IpRange IpRangeList = 1

repeated string IpRanges = 1



repeated string Ipv6AddressList = 1

message Ipv6CidrBlock {
    // The IPv6 CIDR block.
    string Ipv6CidrBlock = 1;
}

repeated Ipv6CidrBlock Ipv6CidrBlockSet = 1

message Ipv6Range {
    // The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix.
    string CidrIpv6 = 1;
    // <p>A description for the security group rule that references this IPv6 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
    string Description = 2;
}

repeated Ipv6Range Ipv6RangeList = 1

repeated string KeyNameStringList = 1

message KeyPair {
    // The SHA-1 digest of the DER encoded private key.
    string KeyFingerprint = 1;
    // An unencrypted PEM encoded RSA private key.
    string KeyMaterial = 2;
    // The name of the key pair.
    string KeyName = 3;
}

message KeyPairInfo {
    // If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.
    string KeyFingerprint = 1;
    // The name of the key pair.
    string KeyName = 2;
}

repeated KeyPairInfo KeyPairList = 1

message LaunchPermission {
    // The name of the group.
    PermissionGroup Group = 1;
    // The AWS account ID.
    string UserId = 2;
}

repeated LaunchPermission LaunchPermissionList = 1

message LaunchPermissionModifications {
    // The AWS account ID to add to the list of launch permissions for the AMI.
    array Add = 1;
    // The AWS account ID to remove from the list of launch permissions for the AMI.
    array Remove = 2;
}

message LaunchSpecification {
    // Deprecated.
    string AddressingType = 1;
    // <p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>
    array BlockDeviceMappings = 2;
    // <p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>
    boolean EbsOptimized = 3;
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 4;
    // The ID of the AMI.
    string ImageId = 5;
    // The instance type.
    InstanceType InstanceType = 6;
    // The ID of the kernel.
    string KernelId = 7;
    // The name of the key pair.
    string KeyName = 8;
    RunInstancesMonitoringEnabled Monitoring = 9;
    // One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.
    array NetworkInterfaces = 10;
    // The placement information for the instance.
    SpotPlacement Placement = 11;
    // The ID of the RAM disk.
    string RamdiskId = 12;
    // One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
    array SecurityGroups = 13;
    // The ID of the subnet in which to launch the instance.
    string SubnetId = 14;
    // The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
    string UserData = 15;
}

repeated SpotFleetLaunchSpecification LaunchSpecsList = 1

enum ListingState {
    AVAILABLE = 0;
    SOLD = 1;
    CANCELLED = 2;
    PENDING = 3;
}

enum ListingStatu {
    ACTIVE = 0;
    PENDING = 1;
    CANCELLED = 2;
    CLOSED = 3;
}

message LoadPermission {
    // The name of the group.
    PermissionGroup Group = 1;
    // The AWS account ID.
    string UserId = 2;
}

repeated LoadPermission LoadPermissionList = 1

repeated LoadPermissionRequest LoadPermissionListRequest = 1

message LoadPermissionModifications {
    // The load permissions to add.
    array Add = 1;
    // The load permissions to remove.
    array Remove = 2;
}

message LoadPermissionRequest {
    // The name of the group.
    PermissionGroup Group = 1;
    // The AWS account ID.
    string UserId = 2;
}

message ModifyFpgaImageAttributeRequest {
    // The name of the attribute.
    FpgaImageAttributeName Attribute = 1;
    // A description for the AFI.
    string Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the AFI.
    string FpgaImageId = 4;
    // The load permission for the AFI.
    LoadPermissionModifications LoadPermission = 5;
    // A name for the AFI.
    string Name = 6;
    // The operation type.
    OperationType OperationType = 7;
    // One or more product codes. After you add a product code to an AFI, it can't be removed. This parameter is valid only when modifying the <code>productCodes</code> attribute.
    array ProductCodes = 8;
    // One or more user groups. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
    array UserGroups = 9;
    // One or more AWS account IDs. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
    array UserIds = 10;
}

message ModifyFpgaImageAttributeResult {
    // Information about the attribute.
    FpgaImageAttribute FpgaImageAttribute = 1;
}

message ModifyHostsRequest {
    // Specify whether to enable or disable auto-placement.
    AutoPlacement AutoPlacement = 1;
    // The host IDs of the Dedicated Hosts you want to modify.
    array HostIds = 2;
}

message ModifyHostsResult {
    // The IDs of the Dedicated Hosts that were successfully modified.
    array Successful = 1;
    // The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.
    array Unsuccessful = 2;
}

message ModifyIdFormatRequest {
    // The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>
    string Resource = 1;
    // Indicate whether the resource should use longer IDs (17-character IDs).
    boolean UseLongIds = 2;
}

message ModifyIdentityIdFormatRequest {
    // The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.
    string PrincipalArn = 1;
    // The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>
    string Resource = 2;
    // Indicates whether the resource should use longer IDs (17-character IDs)
    boolean UseLongIds = 3;
}

message ModifyImageAttributeRequest {
    // The name of the attribute to modify.
    string Attribute = 1;
    // A description for the AMI.
    AttributeValue Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The ID of the AMI.
    string ImageId = 4;
    // A launch permission modification.
    LaunchPermissionModifications LaunchPermission = 5;
    // The operation type.
    OperationType OperationType = 6;
    // One or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the <code>productCodes</code> attribute.
    array ProductCodes = 7;
    // One or more user groups. This is only valid when modifying the <code>launchPermission</code> attribute.
    array UserGroups = 8;
    // One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code> attribute.
    array UserIds = 9;
    // The value of the attribute being modified. This is only valid when modifying the <code>description</code> attribute.
    string Value = 10;
}

message ModifyInstanceAttributeRequest {
    // The name of the attribute.
    InstanceAttributeName Attribute = 1;
    // <p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    array BlockDeviceMappings = 2;
    // If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.
    AttributeBooleanValue DisableApiTermination = 3;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 4;
    // Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
    AttributeBooleanValue EbsOptimized = 5;
    // <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
    AttributeBooleanValue EnaSupport = 6;
    // [EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.
    array Groups = 7;
    // The ID of the instance.
    string InstanceId = 8;
    // Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
    AttributeValue InstanceInitiatedShutdownBehavior = 9;
    // Changes the instance type to the specified value. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.
    AttributeValue InstanceType = 10;
    // Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
    AttributeValue Kernel = 11;
    // Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
    AttributeValue Ramdisk = 12;
    // Specifies whether source/destination checking is enabled. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT.
    AttributeBooleanValue SourceDestCheck = 13;
    // <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
    AttributeValue SriovNetSupport = 14;
    // Changes the instance's user data to the specified value. If you are using an AWS SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.
    BlobAttributeValue UserData = 15;
    // A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.
    string Value = 16;
}

message ModifyInstancePlacementRequest {
    // The new affinity setting for the instance.
    Affinity Affinity = 1;
    // The ID of the Dedicated Host that the instance will have affinity with.
    string HostId = 2;
    // The ID of the instance that you are modifying.
    string InstanceId = 3;
    // The tenancy of the instance that you are modifying.
    HostTenancy Tenancy = 4;
}

message ModifyInstancePlacementResult {
    // Is <code>true</code> if the request succeeds, and an error otherwise.
    boolean Return = 1;
}

message ModifyNetworkInterfaceAttributeRequest {
    // Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.
    NetworkInterfaceAttachmentChanges Attachment = 1;
    // A description for the network interface.
    AttributeValue Description = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.
    array Groups = 4;
    // The ID of the network interface.
    string NetworkInterfaceId = 5;
    // Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    AttributeBooleanValue SourceDestCheck = 6;
}

message ModifyReservedInstancesRequest {
    // A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // The IDs of the Reserved Instances to modify.
    array ReservedInstancesIds = 2;
    // The configuration settings for the Reserved Instances to modify.
    array TargetConfigurations = 3;
}

message ModifyReservedInstancesResult {
    // The ID for the modification.
    string ReservedInstancesModificationId = 1;
}

message ModifySnapshotAttributeRequest {
    // <p>The snapshot attribute to modify.</p> <note> <p>Only volume creation permissions may be modified at the customer level.</p> </note>
    SnapshotAttributeName Attribute = 1;
    // A JSON representation of the snapshot attribute modification.
    CreateVolumePermissionModifications CreateVolumePermission = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // The group to modify for the snapshot.
    array GroupNames = 4;
    // The type of operation to perform to the attribute.
    OperationType OperationType = 5;
    // The ID of the snapshot.
    string SnapshotId = 6;
    // The account ID to modify for the snapshot.
    array UserIds = 7;
}

message ModifySpotFleetRequestRequest {
    // Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.
    ExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy = 1;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 2;
    // The size of the fleet.
    integer TargetCapacity = 3;
}

message ModifySpotFleetRequestResponse {
    // Is <code>true</code> if the request succeeds, and an error otherwise.
    boolean Return = 1;
}

message ModifySubnetAttributeRequest {
    // <p>Specify <code>true</code> to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives an IPv6 address). </p> <p>If you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it's created using version <code>2016-11-15</code> or later of the Amazon EC2 API.</p>
    AttributeBooleanValue AssignIpv6AddressOnCreation = 1;
    // Specify <code>true</code> to indicate that network interfaces created in the specified subnet should be assigned a public IPv4 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives a public IPv4 address).
    AttributeBooleanValue MapPublicIpOnLaunch = 2;
    // The ID of the subnet.
    string SubnetId = 3;
}

message ModifyVolumeAttributeRequest {
    // Indicates whether the volume should be auto-enabled for I/O operations.
    AttributeBooleanValue AutoEnableIO = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the volume.
    string VolumeId = 3;
}

message ModifyVolumeRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>Target IOPS rate of the volume to be modified.</p> <p>Only valid for Provisioned IOPS SSD (<code>io1</code>) volumes. For more information about <code>io1</code> IOPS configuration, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html#EBSVolumeTypes_piops">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html#EBSVolumeTypes_piops</a>.</p> <p>Default: If no IOPS value is specified, the existing value is retained. </p>
    integer Iops = 2;
    // <p>Target size in GiB of the volume to be modified. Target volume size must be greater than or equal to than the existing size of the volume. For information about available EBS volume sizes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html</a>.</p> <p>Default: If no size is specified, the existing size is retained. </p>
    integer Size = 3;
    string VolumeId = 4;
    // <p>Target EBS volume type of the volume to be modified</p> <p> The API does not support modifications for volume type <code>standard</code>. You also cannot change the type of a volume to <code>standard</code>. </p> <p>Default: If no type is specified, the existing type is retained. </p>
    VolumeType VolumeType = 5;
}

message ModifyVolumeResult {
    // A <a>VolumeModification</a> object.
    VolumeModification VolumeModification = 1;
}

message ModifyVpcAttributeRequest {
    // <p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>
    AttributeBooleanValue EnableDnsHostnames = 1;
    // <p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>
    AttributeBooleanValue EnableDnsSupport = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

message ModifyVpcEndpointRequest {
    // One or more route tables IDs to associate with the endpoint.
    array AddRouteTableIds = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // A policy document to attach to the endpoint. The policy must be in valid JSON format.
    string PolicyDocument = 3;
    // One or more route table IDs to disassociate from the endpoint.
    array RemoveRouteTableIds = 4;
    // Specify <code>true</code> to reset the policy document to the default policy. The default policy allows access to the service.
    boolean ResetPolicy = 5;
    // The ID of the endpoint.
    string VpcEndpointId = 6;
}

message ModifyVpcEndpointResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message ModifyVpcPeeringConnectionOptionsRequest {
    // The VPC peering connection options for the accepter VPC.
    PeeringConnectionOptionsRequest AccepterPeeringConnectionOptions = 1;
    // Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The VPC peering connection options for the requester VPC.
    PeeringConnectionOptionsRequest RequesterPeeringConnectionOptions = 3;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 4;
}

message ModifyVpcPeeringConnectionOptionsResult {
    // Information about the VPC peering connection options for the accepter VPC.
    PeeringConnectionOptions AccepterPeeringConnectionOptions = 1;
    // Information about the VPC peering connection options for the requester VPC.
    PeeringConnectionOptions RequesterPeeringConnectionOptions = 2;
}

message MonitorInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
}

message MonitorInstancesResult {
    // The monitoring information.
    array InstanceMonitorings = 1;
}

message Monitoring {
    // Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
    MonitoringState State = 1;
}

enum MonitoringState {
    DISABLED = 0;
    DISABLING = 1;
    ENABLED = 2;
    PENDING = 3;
}

message MoveAddressToVpcRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The Elastic IP address.
    string PublicIp = 2;
}

message MoveAddressToVpcResult {
    // The allocation ID for the Elastic IP address.
    string AllocationId = 1;
    // The status of the move of the IP address.
    Status Status = 2;
}

enum MoveStatu {
    MOVINGTOVPC = 0;
    RESTORINGTOCLASSIC = 1;
}

message MovingAddressStatus {
    // The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.
    MoveStatus MoveStatus = 1;
    // The Elastic IP address.
    string PublicIp = 2;
}

repeated MovingAddressStatus MovingAddressStatusSet = 1

message NatGateway {
    // The date and time the NAT gateway was created.
    string CreateTime = 1;
    // The date and time the NAT gateway was deleted, if applicable.
    string DeleteTime = 2;
    // If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)
    string FailureCode = 3;
    // <p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.</p> <ul> <li> <p>For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"</p> </li> <li> <p>For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"</p> </li> <li> <p>For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"</p> </li> <li> <p>For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"</p> </li> <li> <p>For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."</p> </li> <li> <p>For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."</p> </li> </ul>
    string FailureMessage = 4;
    // Information about the IP addresses and network interface associated with the NAT gateway.
    array NatGatewayAddresses = 5;
    // The ID of the NAT gateway.
    string NatGatewayId = 6;
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    ProvisionedBandwidth ProvisionedBandwidth = 7;
    // <p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>
    NatGatewayState State = 8;
    // The ID of the subnet in which the NAT gateway is located.
    string SubnetId = 9;
    // The tags for the NAT gateway.
    array Tags = 10;
    // The ID of the VPC in which the NAT gateway is located.
    string VpcId = 11;
}

message NatGatewayAddress {
    // The allocation ID of the Elastic IP address that's associated with the NAT gateway.
    string AllocationId = 1;
    // The ID of the network interface associated with the NAT gateway.
    string NetworkInterfaceId = 2;
    // The private IP address associated with the Elastic IP address.
    string PrivateIp = 3;
    // The Elastic IP address associated with the NAT gateway.
    string PublicIp = 4;
}

repeated NatGatewayAddress NatGatewayAddressList = 1

repeated NatGateway NatGatewayList = 1

enum NatGatewayState {
    PENDING = 0;
    FAILED = 1;
    AVAILABLE = 2;
    DELETING = 3;
    DELETED = 4;
}

message NetworkAcl {
    // Any associations between the network ACL and one or more subnets
    array Associations = 1;
    // One or more entries (rules) in the network ACL.
    array Entries = 2;
    // Indicates whether this is the default network ACL for the VPC.
    boolean IsDefault = 3;
    // The ID of the network ACL.
    string NetworkAclId = 4;
    // Any tags assigned to the network ACL.
    array Tags = 5;
    // The ID of the VPC for the network ACL.
    string VpcId = 6;
}

message NetworkAclAssociation {
    // The ID of the association between a network ACL and a subnet.
    string NetworkAclAssociationId = 1;
    // The ID of the network ACL.
    string NetworkAclId = 2;
    // The ID of the subnet.
    string SubnetId = 3;
}

repeated NetworkAclAssociation NetworkAclAssociationList = 1

message NetworkAclEntry {
    // The IPv4 network range to allow or deny, in CIDR notation.
    string CidrBlock = 1;
    // Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
    boolean Egress = 2;
    // ICMP protocol: The ICMP type and code.
    IcmpTypeCode IcmpTypeCode = 3;
    // The IPv6 network range to allow or deny, in CIDR notation.
    string Ipv6CidrBlock = 4;
    // TCP or UDP protocols: The range of ports the rule applies to.
    PortRange PortRange = 5;
    // The protocol. A value of <code>-1</code> means all protocols.
    string Protocol = 6;
    // Indicates whether to allow or deny the traffic that matches the rule.
    RuleAction RuleAction = 7;
    // The rule number for the entry. ACL entries are processed in ascending order by rule number.
    integer RuleNumber = 8;
}

repeated NetworkAclEntry NetworkAclEntryList = 1

repeated NetworkAcl NetworkAclList = 1

message NetworkInterface {
    // The association information for an Elastic IP address (IPv4) associated with the network interface.
    NetworkInterfaceAssociation Association = 1;
    // The network interface attachment.
    NetworkInterfaceAttachment Attachment = 2;
    // The Availability Zone.
    string AvailabilityZone = 3;
    // A description.
    string Description = 4;
    // Any security groups for the network interface.
    array Groups = 5;
    // The type of interface.
    NetworkInterfaceType InterfaceType = 6;
    // The IPv6 addresses associated with the network interface.
    array Ipv6Addresses = 7;
    // The MAC address.
    string MacAddress = 8;
    // The ID of the network interface.
    string NetworkInterfaceId = 9;
    // The AWS account ID of the owner of the network interface.
    string OwnerId = 10;
    // The private DNS name.
    string PrivateDnsName = 11;
    // The IPv4 address of the network interface within the subnet.
    string PrivateIpAddress = 12;
    // The private IPv4 addresses associated with the network interface.
    array PrivateIpAddresses = 13;
    // The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).
    string RequesterId = 14;
    // Indicates whether the network interface is being managed by AWS.
    boolean RequesterManaged = 15;
    // Indicates whether traffic to or from the instance is validated.
    boolean SourceDestCheck = 16;
    // The status of the network interface.
    NetworkInterfaceStatus Status = 17;
    // The ID of the subnet.
    string SubnetId = 18;
    // Any tags assigned to the network interface.
    array TagSet = 19;
    // The ID of the VPC.
    string VpcId = 20;
}

message NetworkInterfaceAssociation {
    // The allocation ID.
    string AllocationId = 1;
    // The association ID.
    string AssociationId = 2;
    // The ID of the Elastic IP address owner.
    string IpOwnerId = 3;
    // The public DNS name.
    string PublicDnsName = 4;
    // The address of the Elastic IP address bound to the network interface.
    string PublicIp = 5;
}

message NetworkInterfaceAttachment {
    // The timestamp indicating when the attachment initiated.
    string AttachTime = 1;
    // The ID of the network interface attachment.
    string AttachmentId = 2;
    // Indicates whether the network interface is deleted when the instance is terminated.
    boolean DeleteOnTermination = 3;
    // The device index of the network interface attachment on the instance.
    integer DeviceIndex = 4;
    // The ID of the instance.
    string InstanceId = 5;
    // The AWS account ID of the owner of the instance.
    string InstanceOwnerId = 6;
    // The attachment state.
    AttachmentStatus Status = 7;
}

message NetworkInterfaceAttachmentChanges {
    // The ID of the network interface attachment.
    string AttachmentId = 1;
    // Indicates whether the network interface is deleted when the instance is terminated.
    boolean DeleteOnTermination = 2;
}

enum NetworkInterfaceAttribute {
    DESCRIPTION = 0;
    GROUPSET = 1;
    SOURCEDESTCHECK = 2;
    ATTACHMENT = 3;
}

repeated string NetworkInterfaceIdList = 1

message NetworkInterfaceIpv6Address {
    // The IPv6 address.
    string Ipv6Address = 1;
}

repeated NetworkInterfaceIpv6Address NetworkInterfaceIpv6AddressesList = 1

repeated NetworkInterface NetworkInterfaceList = 1

message NetworkInterfacePermission {
    // The AWS account ID.
    string AwsAccountId = 1;
    // The AWS service.
    string AwsService = 2;
    // The ID of the network interface.
    string NetworkInterfaceId = 3;
    // The ID of the network interface permission.
    string NetworkInterfacePermissionId = 4;
    // The type of permission.
    InterfacePermissionType Permission = 5;
    // Information about the state of the permission.
    NetworkInterfacePermissionState PermissionState = 6;
}

repeated string NetworkInterfacePermissionIdList = 1

repeated NetworkInterfacePermission NetworkInterfacePermissionList = 1

message NetworkInterfacePermissionState {
    // The state of the permission.
    NetworkInterfacePermissionStateCode State = 1;
    // A status message, if applicable.
    string StatusMessage = 2;
}

enum NetworkInterfacePermissionStateCode {
    PENDING = 0;
    GRANTED = 1;
    REVOKING = 2;
    REVOKED = 3;
}

message NetworkInterfacePrivateIpAddress {
    // The association information for an Elastic IP address (IPv4) associated with the network interface.
    NetworkInterfaceAssociation Association = 1;
    // Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.
    boolean Primary = 2;
    // The private DNS name.
    string PrivateDnsName = 3;
    // The private IPv4 address.
    string PrivateIpAddress = 4;
}

repeated NetworkInterfacePrivateIpAddress NetworkInterfacePrivateIpAddressList = 1

enum NetworkInterfaceStatu {
    AVAILABLE = 0;
    ATTACHING = 1;
    INUSE = 2;
    DETACHING = 3;
}

enum NetworkInterfaceType {
    INTERFACE = 0;
    NATGATEWAY = 1;
}

message NewDhcpConfiguration {
    string Key = 1;
    array Values = 2;
}

repeated NewDhcpConfiguration NewDhcpConfigurationList = 1



repeated integer OccurrenceDayRequestSet = 1

repeated integer OccurrenceDaySet = 1

enum OfferingClassType {
    STANDARD = 0;
    CONVERTIBLE = 1;
}

enum OfferingTypeValue {
    HEAVY_UTILIZATION = 0;
    MEDIUM_UTILIZATION = 1;
    LIGHT_UTILIZATION = 2;
    NO_UPFRONT = 3;
    PARTIAL_UPFRONT = 4;
    ALL_UPFRONT = 5;
}

enum OperationType {
    ADD = 0;
    REMOVE = 1;
}

repeated string OwnerStringList = 1

enum PaymentOption {
    ALLUPFRONT = 0;
    PARTIALUPFRONT = 1;
    NOUPFRONT = 2;
}

message PciId {
    // The ID of the device.
    string DeviceId = 1;
    // The ID of the subsystem.
    string SubsystemId = 2;
    // The ID of the vendor for the subsystem.
    string SubsystemVendorId = 3;
    // The ID of the vendor.
    string VendorId = 4;
}

message PeeringConnectionOptions {
    // If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
    boolean AllowDnsResolutionFromRemoteVpc = 1;
    // If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC.
    boolean AllowEgressFromLocalClassicLinkToRemoteVpc = 2;
    // If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink.
    boolean AllowEgressFromLocalVpcToRemoteClassicLink = 3;
}

message PeeringConnectionOptionsRequest {
    // If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
    boolean AllowDnsResolutionFromRemoteVpc = 1;
    // If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC.
    boolean AllowEgressFromLocalClassicLinkToRemoteVpc = 2;
    // If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink.
    boolean AllowEgressFromLocalVpcToRemoteClassicLink = 3;
}

enum PermissionGroup {
    ALL = 0;
}

message Placement {
    // The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a>ImportInstance</a> command.
    string Affinity = 1;
    // The Availability Zone of the instance.
    string AvailabilityZone = 2;
    // The name of the placement group the instance is in (for cluster compute instances).
    string GroupName = 3;
    // The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the <a>ImportInstance</a> command.
    string HostId = 4;
    // Reserved for future use.
    string SpreadDomain = 5;
    // The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a>ImportInstance</a> command.
    Tenancy Tenancy = 6;
}

message PlacementGroup {
    // The name of the placement group.
    string GroupName = 1;
    // The state of the placement group.
    PlacementGroupState State = 2;
    // The placement strategy.
    PlacementStrategy Strategy = 3;
}

repeated PlacementGroup PlacementGroupList = 1

enum PlacementGroupState {
    PENDING = 0;
    AVAILABLE = 1;
    DELETING = 2;
    DELETED = 3;
}

repeated string PlacementGroupStringList = 1

enum PlacementStrategy {
    CLUSTER = 0;
}

enum PlatformValue {
    WINDOWS = 0;
}

message PortRange {
    // The first port in the range.
    integer From = 1;
    // The last port in the range.
    integer To = 2;
}

message PrefixList {
    // The IP address range of the AWS service.
    array Cidrs = 1;
    // The ID of the prefix.
    string PrefixListId = 2;
    // The name of the prefix.
    string PrefixListName = 3;
}

message PrefixListId {
    // <p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
    string Description = 1;
    // The ID of the prefix.
    string PrefixListId = 2;
}

repeated PrefixListId PrefixListIdList = 1

repeated string PrefixListIdSet = 1

repeated PrefixList PrefixListSet = 1

message PriceSchedule {
    // <p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>
    boolean Active = 1;
    // The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // The fixed price for the term.
    number Price = 3;
    // The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.
    integer Term = 4;
}

repeated PriceSchedule PriceScheduleList = 1

message PriceScheduleSpecification {
    // The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 1;
    // The fixed price for the term.
    number Price = 2;
    // The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.
    integer Term = 3;
}

repeated PriceScheduleSpecification PriceScheduleSpecificationList = 1

message PricingDetail {
    // The number of reservations available for the price.
    integer Count = 1;
    // The price per instance.
    number Price = 2;
}

repeated PricingDetail PricingDetailsList = 1

repeated ScheduledInstancesPrivateIpAddressConfig PrivateIpAddressConfigSet = 1

message PrivateIpAddressSpecification {
    // Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
    boolean Primary = 1;
    // The private IPv4 addresses.
    string PrivateIpAddress = 2;
}

repeated PrivateIpAddressSpecification PrivateIpAddressSpecificationList = 1

repeated string PrivateIpAddressStringList = 1

message ProductCode {
    // The product code.
    string ProductCodeId = 1;
    // The type of product code.
    ProductCodeValues ProductCodeType = 2;
}

repeated ProductCode ProductCodeList = 1

repeated string ProductCodeStringList = 1

enum ProductCodeValue {
    DEVPAY = 0;
    MARKETPLACE = 1;
}

repeated string ProductDescriptionList = 1

message PropagatingVgw {
    // The ID of the virtual private gateway (VGW).
    string GatewayId = 1;
}

repeated PropagatingVgw PropagatingVgwList = 1

message ProvisionedBandwidth {
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    string ProvisionTime = 1;
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    string Provisioned = 2;
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    string RequestTime = 3;
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    string Requested = 4;
    // Reserved. If you need to sustain traffic greater than the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    string Status = 5;
}

repeated string PublicIpStringList = 1

message Purchase {
    // The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 1;
    // The duration of the reservation's term in seconds.
    integer Duration = 2;
    // The IDs of the Dedicated Hosts associated with the reservation.
    array HostIdSet = 3;
    // The ID of the reservation.
    string HostReservationId = 4;
    // The hourly price of the reservation per hour.
    string HourlyPrice = 5;
    // The instance family on the Dedicated Host that the reservation can be associated with.
    string InstanceFamily = 6;
    // The payment option for the reservation.
    PaymentOption PaymentOption = 7;
    // The upfront price of the reservation.
    string UpfrontPrice = 8;
}

message PurchaseHostReservationRequest {
    // Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClientToken = 1;
    // The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>, and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // The ID/s of the Dedicated Host/s that the reservation will be associated with.
    array HostIdSet = 3;
    // The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request will fail. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is <code>USD</code>. For example, to indicate a limit price of USD 100, specify 100.00.
    string LimitPrice = 4;
    // The ID of the offering.
    string OfferingId = 5;
}

message PurchaseHostReservationResult {
    // Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>
    string ClientToken = 1;
    // The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // Describes the details of the purchase.
    array Purchase = 3;
    // The total hourly price of the reservation calculated per hour.
    string TotalHourlyPrice = 4;
    // The total amount that will be charged to your account when you purchase the reservation.
    string TotalUpfrontPrice = 5;
}

message PurchaseRequest {
    // The number of instances.
    integer InstanceCount = 1;
    // The purchase token.
    string PurchaseToken = 2;
}

repeated PurchaseRequest PurchaseRequestSet = 1

message PurchaseReservedInstancesOfferingRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The number of Reserved Instances to purchase.
    integer InstanceCount = 2;
    // Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
    ReservedInstanceLimitPrice LimitPrice = 3;
    // The ID of the Reserved Instance offering to purchase.
    string ReservedInstancesOfferingId = 4;
}

message PurchaseReservedInstancesOfferingResult {
    // The IDs of the purchased Reserved Instances.
    string ReservedInstancesId = 1;
}

message PurchaseScheduledInstancesRequest {
    // Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // One or more purchase requests.
    array PurchaseRequests = 3;
}

message PurchaseScheduledInstancesResult {
    // Information about the Scheduled Instances.
    array ScheduledInstanceSet = 1;
}

repeated Purchase PurchaseSet = 1

repeated ScheduledInstance PurchasedScheduledInstanceSet = 1

enum RIProductDescription {
    LINUXUNIX = 0;
    LINUXUNIX_AMAZON_VPC = 1;
    WINDOWS = 2;
    WINDOWS_AMAZON_VPC = 3;
}

repeated ReportInstanceReasonCodes ReasonCodesList = 1

message RebootInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
}

message RecurringCharge {
    // The amount of the recurring charge.
    number Amount = 1;
    // The frequency of the recurring charge.
    RecurringChargeFrequency Frequency = 2;
}

enum RecurringChargeFrequency {
    HOURLY = 0;
}

repeated RecurringCharge RecurringChargesList = 1

message Region {
    // The region service endpoint.
    string Endpoint = 1;
    // The name of the region.
    string RegionName = 2;
}

repeated Region RegionList = 1

repeated string RegionNameStringList = 1

message RegisterImageRequest {
    // <p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>
    ArchitectureValues Architecture = 1;
    // The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the AWS Marketplace to bill for the use of an AMI.
    array BillingProducts = 2;
    // One or more block device mapping entries.
    array BlockDeviceMappings = 3;
    // A description for your AMI.
    string Description = 4;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 5;
    // <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
    boolean EnaSupport = 6;
    // The full path to your AMI manifest in Amazon S3 storage.
    string ImageLocation = 7;
    // The ID of the kernel.
    string KernelId = 8;
    // <p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>
    string Name = 9;
    // The ID of the RAM disk.
    string RamdiskId = 10;
    // The name of the root device (for example, <code>/dev/sda1</code>, or <code>/dev/xvda</code>).
    string RootDeviceName = 11;
    // <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
    string SriovNetSupport = 12;
    // <p>The type of virtualization.</p> <p>Default: <code>paravirtual</code> </p>
    string VirtualizationType = 13;
}

message RegisterImageResult {
    // The ID of the newly registered AMI.
    string ImageId = 1;
}

message RejectVpcPeeringConnectionRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 2;
}

message RejectVpcPeeringConnectionResult {
    // Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    boolean Return = 1;
}

message ReleaseAddressRequest {
    // [EC2-VPC] The allocation ID. Required for EC2-VPC.
    string AllocationId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // [EC2-Classic] The Elastic IP address. Required for EC2-Classic.
    string PublicIp = 3;
}

message ReleaseHostsRequest {
    // The IDs of the Dedicated Hosts you want to release.
    array HostIds = 1;
}

message ReleaseHostsResult {
    // The IDs of the Dedicated Hosts that were successfully released.
    array Successful = 1;
    // The IDs of the Dedicated Hosts that could not be released, including an error message.
    array Unsuccessful = 2;
}

message ReplaceIamInstanceProfileAssociationRequest {
    // The ID of the existing IAM instance profile association.
    string AssociationId = 1;
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 2;
}

message ReplaceIamInstanceProfileAssociationResult {
    // Information about the IAM instance profile association.
    IamInstanceProfileAssociation IamInstanceProfileAssociation = 1;
}

message ReplaceNetworkAclAssociationRequest {
    // The ID of the current association between the original network ACL and the subnet.
    string AssociationId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the new network ACL to associate with the subnet.
    string NetworkAclId = 3;
}

message ReplaceNetworkAclAssociationResult {
    // The ID of the new association.
    string NewAssociationId = 1;
}

message ReplaceNetworkAclEntryRequest {
    // The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).
    string CidrBlock = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>
    boolean Egress = 3;
    // ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying the ICMP (1) protocol, or protocol 58 (ICMPv6) with an IPv6 CIDR block.
    IcmpTypeCode IcmpTypeCode = 4;
    // The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:bd8:1234:1a00::/64</code>).
    string Ipv6CidrBlock = 5;
    // The ID of the ACL.
    string NetworkAclId = 6;
    // TCP or UDP protocols: The range of ports the rule applies to. Required if specifying TCP (6) or UDP (17) for the protocol.
    PortRange PortRange = 7;
    // The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols. If you specify <code>all</code>, <code>-1</code>, or a protocol number other than <code>tcp</code>, <code>udp</code>, or <code>icmp</code>, traffic on all ports is allowed, regardless of any ports or ICMP types or codes you specify. If you specify protocol <code>58</code> (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol <code>58</code> (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
    string Protocol = 8;
    // Indicates whether to allow or deny the traffic that matches the rule.
    RuleAction RuleAction = 9;
    // The rule number of the entry to replace.
    integer RuleNumber = 10;
}

message ReplaceRouteRequest {
    // The IPv4 CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.
    string DestinationCidrBlock = 1;
    // The IPv6 CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.
    string DestinationIpv6CidrBlock = 2;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 3;
    // [IPv6 traffic only] The ID of an egress-only Internet gateway.
    string EgressOnlyInternetGatewayId = 4;
    // The ID of an Internet gateway or virtual private gateway.
    string GatewayId = 5;
    // The ID of a NAT instance in your VPC.
    string InstanceId = 6;
    // [IPv4 traffic only] The ID of a NAT gateway.
    string NatGatewayId = 7;
    // The ID of a network interface.
    string NetworkInterfaceId = 8;
    // The ID of the route table.
    string RouteTableId = 9;
    // The ID of a VPC peering connection.
    string VpcPeeringConnectionId = 10;
}

message ReplaceRouteTableAssociationRequest {
    // The association ID.
    string AssociationId = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the new route table to associate with the subnet.
    string RouteTableId = 3;
}

message ReplaceRouteTableAssociationResult {
    // The ID of the new association.
    string NewAssociationId = 1;
}

enum ReportInstanceReasonCode {
    INSTANCESTUCKINSTATE = 0;
    UNRESPONSIVE = 1;
    NOTACCEPTINGCREDENTIALS = 2;
    PASSWORDNOTAVAILABLE = 3;
    PERFORMANCENETWORK = 4;
    PERFORMANCEINSTANCESTORE = 5;
    PERFORMANCEEBSVOLUME = 6;
    PERFORMANCEOTHER = 7;
    OTHER = 8;
}

message ReportInstanceStatusRequest {
    // Descriptive text about the health state of your instance.
    string Description = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The time at which the reported instance health state ended.
    string EndTime = 3;
    // One or more instances.
    array Instances = 4;
    // <p>One or more reason codes that describe the health state of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>: My instance is experiencing performance problems that I believe are network related.</p> </li> <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems that I believe are related to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems that I believe are related to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>: [explain using the description parameter]</p> </li> </ul>
    array ReasonCodes = 5;
    // The time at which the reported instance health state began.
    string StartTime = 6;
    // The status of all instances listed.
    ReportStatusType Status = 7;
}

enum ReportStatusType {
    OK = 0;
    IMPAIRED = 1;
}

repeated string RequestHostIdList = 1

repeated string RequestHostIdSet = 1

message RequestSpotFleetRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The configuration for the Spot fleet request.
    SpotFleetRequestConfigData SpotFleetRequestConfig = 2;
}

message RequestSpotFleetResponse {
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 1;
}

message RequestSpotInstancesRequest {
    // <p>The user-specified name for a logical grouping of bids.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to bids for Spot Instances of the same instance type. Any additional Spot instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot instance request (all instances are terminated, the bid is expired, or the bid falls below current market), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>
    string AvailabilityZoneGroup = 1;
    // <p>The required duration for the Spot instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p> <p>The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.</p> <p>Note that you can't specify an Availability Zone group or a launch group if you specify a duration.</p>
    integer BlockDurationMinutes = 2;
    // Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string ClientToken = 3;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 4;
    // <p>The maximum number of Spot instances to launch.</p> <p>Default: 1</p>
    integer InstanceCount = 5;
    // Indicates whether a Spot instance stops or terminates when it is interrupted.
    InstanceInterruptionBehavior InstanceInterruptionBehavior = 6;
    // <p>The instance launch group. Launch groups are Spot instances that launch together and terminate together.</p> <p>Default: Instances are launched and terminated individually</p>
    string LaunchGroup = 7;
    // The launch specification.
    RequestSpotLaunchSpecification LaunchSpecification = 8;
    // The maximum hourly price (bid) for any Spot instance launched to fulfill the request.
    string SpotPrice = 9;
    // <p>The Spot instance request type.</p> <p>Default: <code>one-time</code> </p>
    SpotInstanceType Type = 10;
    // <p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>Default: The request is effective indefinitely.</p>
    string ValidFrom = 11;
    // <p>The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.</p> <p>Default: The request is effective indefinitely.</p>
    string ValidUntil = 12;
}

message RequestSpotInstancesResult {
    // One or more Spot instance requests.
    array SpotInstanceRequests = 1;
}

message RequestSpotLaunchSpecification {
    // Deprecated.
    string AddressingType = 1;
    // <p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>
    array BlockDeviceMappings = 2;
    // <p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>
    boolean EbsOptimized = 3;
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 4;
    // The ID of the AMI.
    string ImageId = 5;
    // The instance type.
    InstanceType InstanceType = 6;
    // The ID of the kernel.
    string KernelId = 7;
    // The name of the key pair.
    string KeyName = 8;
    // <p>Indicates whether basic or detailed monitoring is enabled for the instance.</p> <p>Default: Disabled</p>
    RunInstancesMonitoringEnabled Monitoring = 9;
    // One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.
    array NetworkInterfaces = 10;
    // The placement information for the instance.
    SpotPlacement Placement = 11;
    // The ID of the RAM disk.
    string RamdiskId = 12;
    // One or more security group IDs.
    array SecurityGroupIds = 13;
    // One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
    array SecurityGroups = 14;
    // The ID of the subnet in which to launch the instance.
    string SubnetId = 15;
    // The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
    string UserData = 16;
}

message Reservation {
    // [EC2-Classic only] One or more security groups.
    array Groups = 1;
    // One or more instances.
    array Instances = 2;
    // The ID of the AWS account that owns the reservation.
    string OwnerId = 3;
    // The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).
    string RequesterId = 4;
    // The ID of the reservation.
    string ReservationId = 5;
}

repeated Reservation ReservationList = 1

enum ReservationState {
    PAYMENTPENDING = 0;
    PAYMENTFAILED = 1;
    ACTIVE = 2;
    RETIRED = 3;
}

message ReservationValue {
    // The hourly rate of the reservation.
    string HourlyPrice = 1;
    // The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).
    string RemainingTotalValue = 2;
    // The remaining upfront cost of the reservation.
    string RemainingUpfrontValue = 3;
}

repeated string ReservedInstanceIdSet = 1

message ReservedInstanceLimitPrice {
    // Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
    number Amount = 1;
    // The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
}

message ReservedInstanceReservationValue {
    // The total value of the Convertible Reserved Instance that you are exchanging.
    ReservationValue ReservationValue = 1;
    // The ID of the Convertible Reserved Instance that you are exchanging.
    string ReservedInstanceId = 2;
}

repeated ReservedInstanceReservationValue ReservedInstanceReservationValueSet = 1

enum ReservedInstanceState {
    PAYMENTPENDING = 0;
    ACTIVE = 1;
    PAYMENTFAILED = 2;
    RETIRED = 3;
}

message ReservedInstances {
    // The Availability Zone in which the Reserved Instance can be used.
    string AvailabilityZone = 1;
    // The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // The duration of the Reserved Instance, in seconds.
    integer Duration = 3;
    // The time when the Reserved Instance expires.
    string End = 4;
    // The purchase price of the Reserved Instance.
    number FixedPrice = 5;
    // The number of reservations purchased.
    integer InstanceCount = 6;
    // The tenancy of the instance.
    Tenancy InstanceTenancy = 7;
    // The instance type on which the Reserved Instance can be used.
    InstanceType InstanceType = 8;
    // The offering class of the Reserved Instance.
    OfferingClassType OfferingClass = 9;
    // The Reserved Instance offering type.
    OfferingTypeValues OfferingType = 10;
    // The Reserved Instance product platform description.
    RIProductDescription ProductDescription = 11;
    // The recurring charge tag assigned to the resource.
    array RecurringCharges = 12;
    // The ID of the Reserved Instance.
    string ReservedInstancesId = 13;
    // The scope of the Reserved Instance.
    scope Scope = 14;
    // The date and time the Reserved Instance started.
    string Start = 15;
    // The state of the Reserved Instance purchase.
    ReservedInstanceState State = 16;
    // Any tags assigned to the resource.
    array Tags = 17;
    // The usage price of the Reserved Instance, per hour.
    number UsagePrice = 18;
}

message ReservedInstancesConfiguration {
    // The Availability Zone for the modified Reserved Instances.
    string AvailabilityZone = 1;
    // The number of modified Reserved Instances.
    integer InstanceCount = 2;
    // The instance type for the modified Reserved Instances.
    InstanceType InstanceType = 3;
    // The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.
    string Platform = 4;
    // Whether the Reserved Instance is applied to instances in a region or instances in a specific Availability Zone.
    scope Scope = 5;
}

repeated ReservedInstancesConfiguration ReservedInstancesConfigurationList = 1

message ReservedInstancesId {
    // The ID of the Reserved Instance.
    string ReservedInstancesId = 1;
}

repeated string ReservedInstancesIdStringList = 1

repeated ReservedInstances ReservedInstancesList = 1

message ReservedInstancesListing {
    // A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // The time the listing was created.
    string CreateDate = 2;
    // The number of instances in this state.
    array InstanceCounts = 3;
    // The price of the Reserved Instance listing.
    array PriceSchedules = 4;
    // The ID of the Reserved Instance.
    string ReservedInstancesId = 5;
    // The ID of the Reserved Instance listing.
    string ReservedInstancesListingId = 6;
    // The status of the Reserved Instance listing.
    ListingStatus Status = 7;
    // The reason for the current status of the Reserved Instance listing. The response can be blank.
    string StatusMessage = 8;
    // Any tags assigned to the resource.
    array Tags = 9;
    // The last modified timestamp of the listing.
    string UpdateDate = 10;
}

repeated ReservedInstancesListing ReservedInstancesListingList = 1

message ReservedInstancesModification {
    // A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // The time when the modification request was created.
    string CreateDate = 2;
    // The time for the modification to become effective.
    string EffectiveDate = 3;
    // Contains target configurations along with their corresponding new Reserved Instance IDs.
    array ModificationResults = 4;
    // The IDs of one or more Reserved Instances.
    array ReservedInstancesIds = 5;
    // A unique ID for the Reserved Instance modification.
    string ReservedInstancesModificationId = 6;
    // The status of the Reserved Instances modification request.
    string Status = 7;
    // The reason for the status.
    string StatusMessage = 8;
    // The time when the modification request was last updated.
    string UpdateDate = 9;
}

repeated string ReservedInstancesModificationIdStringList = 1

repeated ReservedInstancesModification ReservedInstancesModificationList = 1

message ReservedInstancesModificationResult {
    // The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.
    string ReservedInstancesId = 1;
    // The target Reserved Instances configurations supplied as part of the modification request.
    ReservedInstancesConfiguration TargetConfiguration = 2;
}

repeated ReservedInstancesModificationResult ReservedInstancesModificationResultList = 1

message ReservedInstancesOffering {
    // The Availability Zone in which the Reserved Instance can be used.
    string AvailabilityZone = 1;
    // The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.
    CurrencyCodeValues CurrencyCode = 2;
    // The duration of the Reserved Instance, in seconds.
    integer Duration = 3;
    // The purchase price of the Reserved Instance.
    number FixedPrice = 4;
    // The tenancy of the instance.
    Tenancy InstanceTenancy = 5;
    // The instance type on which the Reserved Instance can be used.
    InstanceType InstanceType = 6;
    // Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.
    boolean Marketplace = 7;
    // If <code>convertible</code> it can be exchanged for Reserved Instances of the same or higher monetary value, with different configurations. If <code>standard</code>, it is not possible to perform an exchange.
    OfferingClassType OfferingClass = 8;
    // The Reserved Instance offering type.
    OfferingTypeValues OfferingType = 9;
    // The pricing details of the Reserved Instance offering.
    array PricingDetails = 10;
    // The Reserved Instance product platform description.
    RIProductDescription ProductDescription = 11;
    // The recurring charge tag assigned to the resource.
    array RecurringCharges = 12;
    // The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a> to confirm that an exchange can be made.
    string ReservedInstancesOfferingId = 13;
    // Whether the Reserved Instance is applied to instances in a region or an Availability Zone.
    scope Scope = 14;
    // The usage price of the Reserved Instance, per hour.
    number UsagePrice = 15;
}

repeated string ReservedInstancesOfferingIdStringList = 1

repeated ReservedInstancesOffering ReservedInstancesOfferingList = 1

repeated ReservedInstancesId ReservedIntancesIds = 1

enum ResetFpgaImageAttributeName {
    LOADPERMISSION = 0;
}

message ResetFpgaImageAttributeRequest {
    // The attribute.
    ResetFpgaImageAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the AFI.
    string FpgaImageId = 3;
}

message ResetFpgaImageAttributeResult {
    // Is <code>true</code> if the request succeeds, and an error otherwise.
    boolean Return = 1;
}

enum ResetImageAttributeName {
    LAUNCHPERMISSION = 0;
}

message ResetImageAttributeRequest {
    // The attribute to reset (currently you can only reset the launch permission attribute).
    ResetImageAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the AMI.
    string ImageId = 3;
}

message ResetInstanceAttributeRequest {
    // <p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>.</p> </important>
    InstanceAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the instance.
    string InstanceId = 3;
}

message ResetNetworkInterfaceAttributeRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the network interface.
    string NetworkInterfaceId = 2;
    // The source/destination checking attribute. Resets the value to <code>true</code>.
    string SourceDestCheck = 3;
}

message ResetSnapshotAttributeRequest {
    // The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.
    SnapshotAttributeName Attribute = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The ID of the snapshot.
    string SnapshotId = 3;
}

repeated string ResourceIdList = 1

enum ResourceType {
    CUSTOMERGATEWAY = 0;
    DHCPOPTIONS = 1;
    IMAGE = 2;
    INSTANCE = 3;
    INTERNETGATEWAY = 4;
    NETWORKACL = 5;
    NETWORKINTERFACE = 6;
    RESERVEDINSTANCES = 7;
    ROUTETABLE = 8;
    SNAPSHOT = 9;
    SPOTINSTANCESREQUEST = 10;
    SUBNET = 11;
    SECURITYGROUP = 12;
    VOLUME = 13;
    VPC = 14;
    VPNCONNECTION = 15;
    VPNGATEWAY = 16;
}

repeated string ResponseHostIdList = 1

repeated string ResponseHostIdSet = 1

repeated string RestorableByStringList = 1

message RestoreAddressToClassicRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The Elastic IP address.
    string PublicIp = 2;
}

message RestoreAddressToClassicResult {
    // The Elastic IP address.
    string PublicIp = 1;
    // The move status for the IP address.
    Status Status = 2;
}

message RevokeSecurityGroupEgressRequest {
    // The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead.
    string CidrIp = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.
    integer FromPort = 3;
    // The ID of the security group.
    string GroupId = 4;
    // A set of IP permissions. You can't specify a destination security group and a CIDR IP address range.
    array IpPermissions = 5;
    // The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead.
    string IpProtocol = 6;
    // The name of a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.
    string SourceSecurityGroupName = 7;
    // The AWS account number for a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead.
    string SourceSecurityGroupOwnerId = 8;
    // The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead.
    integer ToPort = 9;
}

message RevokeSecurityGroupIngressRequest {
    // The CIDR IP address range. You can't specify this parameter when specifying a source security group.
    string CidrIp = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.
    integer FromPort = 3;
    // The ID of the security group. Required for a security group in a nondefault VPC.
    string GroupId = 4;
    // [EC2-Classic, default VPC] The name of the security group.
    string GroupName = 5;
    // A set of IP permissions. You can't specify a source security group and a CIDR IP address range.
    array IpPermissions = 6;
    // The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). Use <code>-1</code> to specify all.
    string IpProtocol = 7;
    // [EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.
    string SourceSecurityGroupName = 8;
    // [EC2-Classic] The AWS account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.
    string SourceSecurityGroupOwnerId = 9;
    // The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.
    integer ToPort = 10;
}

message Route {
    // The IPv4 CIDR block used for the destination match.
    string DestinationCidrBlock = 1;
    // The IPv6 CIDR block used for the destination match.
    string DestinationIpv6CidrBlock = 2;
    // The prefix of the AWS service.
    string DestinationPrefixListId = 3;
    // The ID of the egress-only Internet gateway.
    string EgressOnlyInternetGatewayId = 4;
    // The ID of a gateway attached to your VPC.
    string GatewayId = 5;
    // The ID of a NAT instance in your VPC.
    string InstanceId = 6;
    // The AWS account ID of the owner of the instance.
    string InstanceOwnerId = 7;
    // The ID of a NAT gateway.
    string NatGatewayId = 8;
    // The ID of the network interface.
    string NetworkInterfaceId = 9;
    // <p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
    RouteOrigin Origin = 10;
    // The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).
    RouteState State = 11;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 12;
}

repeated Route RouteList = 1

enum RouteOrigin {
    CREATEROUTETABLE = 0;
    CREATEROUTE = 1;
    ENABLEVGWROUTEPROPAGATION = 2;
}

enum RouteState {
    ACTIVE = 0;
    BLACKHOLE = 1;
}

message RouteTable {
    // The associations between the route table and one or more subnets.
    array Associations = 1;
    // Any virtual private gateway (VGW) propagating routes.
    array PropagatingVgws = 2;
    // The ID of the route table.
    string RouteTableId = 3;
    // The routes in the route table.
    array Routes = 4;
    // Any tags assigned to the route table.
    array Tags = 5;
    // The ID of the VPC.
    string VpcId = 6;
}

message RouteTableAssociation {
    // Indicates whether this is the main route table.
    boolean Main = 1;
    // The ID of the association between a route table and a subnet.
    string RouteTableAssociationId = 2;
    // The ID of the route table.
    string RouteTableId = 3;
    // The ID of the subnet. A subnet ID is not returned for an implicit association.
    string SubnetId = 4;
}

repeated RouteTableAssociation RouteTableAssociationList = 1

repeated RouteTable RouteTableList = 1

enum RuleAction {
    ALLOW = 0;
    DENY = 1;
}

message RunInstancesMonitoringEnabled {
    // Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
    boolean Enabled = 1;
}

message RunInstancesRequest {
    // Reserved.
    string AdditionalInfo = 1;
    // <p>The block device mapping.</p> <important> <p>Supplying both a snapshot ID and an encryption value as arguments for block-device mapping results in an error. This is because only blank volumes can be encrypted on start, and these are not created from a snapshot. If a snapshot is the basis for the volume, it contains data by definition and its encryption status cannot be changed using this action.</p> </important>
    array BlockDeviceMappings = 2;
    // <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>
    string ClientToken = 3;
    // <p>If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute to <code>false</code> after launch, use <a>ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code> </p>
    boolean DisableApiTermination = 4;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 5;
    // <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>
    boolean EbsOptimized = 6;
    // An Elastic GPU to associate with the instance.
    array ElasticGpuSpecification = 7;
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 8;
    // The ID of the AMI, which you can get by calling <a>DescribeImages</a>.
    string ImageId = 9;
    // <p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>
    ShutdownBehavior InstanceInitiatedShutdownBehavior = 10;
    // <p>The instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>m1.small</code> </p>
    InstanceType InstanceType = 11;
    // [EC2-VPC] A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.
    integer Ipv6AddressCount = 12;
    // [EC2-VPC] Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.
    array Ipv6Addresses = 13;
    // <p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
    string KernelId = 14;
    // <p>The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or <a>ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>
    string KeyName = 15;
    // <p>The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>
    integer MaxCount = 16;
    // <p>The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>
    integer MinCount = 17;
    // The monitoring for the instance.
    RunInstancesMonitoringEnabled Monitoring = 18;
    // One or more network interfaces.
    array NetworkInterfaces = 19;
    // The placement for the instance.
    Placement Placement = 20;
    // <p>[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.</p> <p>Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.</p>
    string PrivateIpAddress = 21;
    // <p>The ID of the RAM disk.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
    string RamdiskId = 22;
    // <p>One or more security group IDs. You can create a security group using <a>CreateSecurityGroup</a>.</p> <p>Default: Amazon EC2 uses the default security group.</p>
    array SecurityGroupIds = 23;
    // <p>[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead.</p> <p>Default: Amazon EC2 uses the default security group.</p>
    array SecurityGroups = 24;
    // [EC2-VPC] The ID of the subnet to launch the instance into.
    string SubnetId = 25;
    // The tags to apply to the resources during launch. You can tag instances and volumes. The specified tags are applied to all instances or volumes that are created during launch.
    array TagSpecifications = 26;
    // The user data to make available to the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows). If you are using an AWS SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.
    string UserData = 27;
}

message RunScheduledInstancesRequest {
    // Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // <p>The number of instances.</p> <p>Default: 1</p>
    integer InstanceCount = 3;
    // The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.
    ScheduledInstancesLaunchSpecification LaunchSpecification = 4;
    // The Scheduled Instance ID.
    string ScheduledInstanceId = 5;
}

message RunScheduledInstancesResult {
    // The IDs of the newly launched instances.
    array InstanceIdSet = 1;
}

message S3Storage {
    // The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href="http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best Practices for Managing AWS Access Keys</a>.
    string AWSAccessKeyId = 1;
    // The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.
    string Bucket = 2;
    // The beginning of the file name of the AMI.
    string Prefix = 3;
    // An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.
    string UploadPolicy = 4;
    // The signature of the JSON document.
    string UploadPolicySignature = 5;
}

message ScheduledInstance {
    // The Availability Zone.
    string AvailabilityZone = 1;
    // The date when the Scheduled Instance was purchased.
    string CreateDate = 2;
    // The hourly price for a single instance.
    string HourlyPrice = 3;
    // The number of instances.
    integer InstanceCount = 4;
    // The instance type.
    string InstanceType = 5;
    // The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
    string NetworkPlatform = 6;
    // The time for the next schedule to start.
    string NextSlotStartTime = 7;
    // The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
    string Platform = 8;
    // The time that the previous schedule ended or will end.
    string PreviousSlotEndTime = 9;
    // The schedule recurrence.
    ScheduledInstanceRecurrence Recurrence = 10;
    // The Scheduled Instance ID.
    string ScheduledInstanceId = 11;
    // The number of hours in the schedule.
    integer SlotDurationInHours = 12;
    // The end date for the Scheduled Instance.
    string TermEndDate = 13;
    // The start date for the Scheduled Instance.
    string TermStartDate = 14;
    // The total number of hours for a single instance for the entire term.
    integer TotalScheduledInstanceHours = 15;
}

message ScheduledInstanceAvailability {
    // The Availability Zone.
    string AvailabilityZone = 1;
    // The number of available instances.
    integer AvailableInstanceCount = 2;
    // The time period for the first schedule to start.
    string FirstSlotStartTime = 3;
    // The hourly price for a single instance.
    string HourlyPrice = 4;
    // The instance type. You can specify one of the C3, C4, M4, or R3 instance types.
    string InstanceType = 5;
    // The maximum term. The only possible value is 365 days.
    integer MaxTermDurationInDays = 6;
    // The minimum term. The only possible value is 365 days.
    integer MinTermDurationInDays = 7;
    // The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
    string NetworkPlatform = 8;
    // The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
    string Platform = 9;
    // The purchase token. This token expires in two hours.
    string PurchaseToken = 10;
    // The schedule recurrence.
    ScheduledInstanceRecurrence Recurrence = 11;
    // The number of hours in the schedule.
    integer SlotDurationInHours = 12;
    // The total number of hours for a single instance for the entire term.
    integer TotalScheduledInstanceHours = 13;
}

repeated ScheduledInstanceAvailability ScheduledInstanceAvailabilitySet = 1

repeated string ScheduledInstanceIdRequestSet = 1

message ScheduledInstanceRecurrence {
    // The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
    string Frequency = 1;
    // The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months.
    integer Interval = 2;
    // The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).
    array OccurrenceDaySet = 3;
    // Indicates whether the occurrence is relative to the end of the specified week or month.
    boolean OccurrenceRelativeToEnd = 4;
    // The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
    string OccurrenceUnit = 5;
}

message ScheduledInstanceRecurrenceRequest {
    // The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
    string Frequency = 1;
    // The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.
    integer Interval = 2;
    // The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.
    array OccurrenceDays = 3;
    // Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.
    boolean OccurrenceRelativeToEnd = 4;
    // The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.
    string OccurrenceUnit = 5;
}

repeated ScheduledInstance ScheduledInstanceSet = 1

message ScheduledInstancesBlockDeviceMapping {
    // The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
    string DeviceName = 1;
    // Parameters used to set up EBS volumes automatically when the instance is launched.
    ScheduledInstancesEbs Ebs = 2;
    // Suppresses the specified device included in the block device mapping of the AMI.
    string NoDevice = 3;
    // <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>
    string VirtualName = 4;
}

repeated ScheduledInstancesBlockDeviceMapping ScheduledInstancesBlockDeviceMappingSet = 1

message ScheduledInstancesEbs {
    // Indicates whether the volume is deleted on instance termination.
    boolean DeleteOnTermination = 1;
    // Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.
    boolean Encrypted = 2;
    // <p>The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about <code>gp2</code> baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code>volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>
    integer Iops = 3;
    // The ID of the snapshot.
    string SnapshotId = 4;
    // <p>The size of the volume, in GiB.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>
    integer VolumeSize = 5;
    // <p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for Magnetic.</p> <p>Default: <code>standard</code> </p>
    string VolumeType = 6;
}

message ScheduledInstancesIamInstanceProfile {
    // The Amazon Resource Name (ARN).
    string Arn = 1;
    // The name.
    string Name = 2;
}

message ScheduledInstancesIpv6Address {
    // The IPv6 address.
    string Ipv6Address = 1;
}

repeated ScheduledInstancesIpv6Address ScheduledInstancesIpv6AddressList = 1

message ScheduledInstancesLaunchSpecification {
    // One or more block device mapping entries.
    array BlockDeviceMappings = 1;
    // <p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>
    boolean EbsOptimized = 2;
    // The IAM instance profile.
    ScheduledInstancesIamInstanceProfile IamInstanceProfile = 3;
    // The ID of the Amazon Machine Image (AMI).
    string ImageId = 4;
    // The instance type.
    string InstanceType = 5;
    // The ID of the kernel.
    string KernelId = 6;
    // The name of the key pair.
    string KeyName = 7;
    // Enable or disable monitoring for the instances.
    ScheduledInstancesMonitoring Monitoring = 8;
    // One or more network interfaces.
    array NetworkInterfaces = 9;
    // The placement information.
    ScheduledInstancesPlacement Placement = 10;
    // The ID of the RAM disk.
    string RamdiskId = 11;
    // The IDs of one or more security groups.
    array SecurityGroupIds = 12;
    // The ID of the subnet in which to launch the instances.
    string SubnetId = 13;
    // The base64-encoded MIME user data.
    string UserData = 14;
}

message ScheduledInstancesMonitoring {
    // Indicates whether monitoring is enabled.
    boolean Enabled = 1;
}

message ScheduledInstancesNetworkInterface {
    // Indicates whether to assign a public IPv4 address to instances launched in a VPC. The public IPv4 address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.
    boolean AssociatePublicIpAddress = 1;
    // Indicates whether to delete the interface when the instance is terminated.
    boolean DeleteOnTermination = 2;
    // The description.
    string Description = 3;
    // The index of the device for the network interface attachment.
    integer DeviceIndex = 4;
    // The IDs of one or more security groups.
    array Groups = 5;
    // The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.
    integer Ipv6AddressCount = 6;
    // One or more specific IPv6 addresses from the subnet range.
    array Ipv6Addresses = 7;
    // The ID of the network interface.
    string NetworkInterfaceId = 8;
    // The IPv4 address of the network interface within the subnet.
    string PrivateIpAddress = 9;
    // The private IPv4 addresses.
    array PrivateIpAddressConfigs = 10;
    // The number of secondary private IPv4 addresses.
    integer SecondaryPrivateIpAddressCount = 11;
    // The ID of the subnet.
    string SubnetId = 12;
}

repeated ScheduledInstancesNetworkInterface ScheduledInstancesNetworkInterfaceSet = 1

message ScheduledInstancesPlacement {
    // The Availability Zone.
    string AvailabilityZone = 1;
    // The name of the placement group.
    string GroupName = 2;
}

message ScheduledInstancesPrivateIpAddressConfig {
    // Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address.
    boolean Primary = 1;
    // The IPv4 address.
    string PrivateIpAddress = 2;
}

repeated string ScheduledInstancesSecurityGroupIdSet = 1

message SecurityGroup {
    // A description of the security group.
    string Description = 1;
    // The ID of the security group.
    string GroupId = 2;
    // The name of the security group.
    string GroupName = 3;
    // One or more inbound rules associated with the security group.
    array IpPermissions = 4;
    // [EC2-VPC] One or more outbound rules associated with the security group.
    array IpPermissionsEgress = 5;
    // The AWS account ID of the owner of the security group.
    string OwnerId = 6;
    // Any tags assigned to the security group.
    array Tags = 7;
    // [EC2-VPC] The ID of the VPC for the security group.
    string VpcId = 8;
}

repeated string SecurityGroupIdStringList = 1

repeated SecurityGroup SecurityGroupList = 1

message SecurityGroupReference {
    // The ID of your security group.
    string GroupId = 1;
    // The ID of the VPC with the referencing security group.
    string ReferencingVpcId = 2;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 3;
}

repeated SecurityGroupReference SecurityGroupReferences = 1

repeated string SecurityGroupStringList = 1

enum ShutdownBehavior {
    STOP = 0;
    TERMINATE = 1;
}

message SlotDateTimeRangeRequest {
    // The earliest date and time, in UTC, for the Scheduled Instance to start.
    string EarliestTime = 1;
    // The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.
    string LatestTime = 2;
}

message SlotStartTimeRangeRequest {
    // The earliest date and time, in UTC, for the Scheduled Instance to start.
    string EarliestTime = 1;
    // The latest date and time, in UTC, for the Scheduled Instance to start.
    string LatestTime = 2;
}

message Snapshot {
    // The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.
    string DataEncryptionKeyId = 1;
    // The description for the snapshot.
    string Description = 2;
    // Indicates whether the snapshot is encrypted.
    boolean Encrypted = 3;
    // The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume.
    string KmsKeyId = 4;
    //  Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.
    string OwnerAlias = 5;
    // The AWS account ID of the EBS snapshot owner.
    string OwnerId = 6;
    // The progress of the snapshot, as a percentage.
    string Progress = 7;
    // The ID of the snapshot. Each snapshot receives a unique identifier when it is created.
    string SnapshotId = 8;
    // The time stamp when the snapshot was initiated.
    string StartTime = 9;
    // The snapshot state.
    SnapshotState State = 10;
    // Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by the <a>DescribeSnapshots</a> API operation.
    string StateMessage = 11;
    // Any tags assigned to the snapshot.
    array Tags = 12;
    // The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose.
    string VolumeId = 13;
    // The size of the volume, in GiB.
    integer VolumeSize = 14;
}

enum SnapshotAttributeName {
    PRODUCTCODES = 0;
    CREATEVOLUMEPERMISSION = 1;
}

message SnapshotDetail {
    // A description for the snapshot.
    string Description = 1;
    // The block device mapping for the snapshot.
    string DeviceName = 2;
    // The size of the disk in the snapshot, in GiB.
    number DiskImageSize = 3;
    // The format of the disk image from which the snapshot is created.
    string Format = 4;
    // The percentage of progress for the task.
    string Progress = 5;
    // The snapshot ID of the disk being imported.
    string SnapshotId = 6;
    // A brief status of the snapshot creation.
    string Status = 7;
    // A detailed status message for the snapshot creation.
    string StatusMessage = 8;
    // The URL used to access the disk image.
    string Url = 9;
    // The S3 bucket for the disk image.
    UserBucketDetails UserBucket = 10;
}

repeated SnapshotDetail SnapshotDetailList = 1

message SnapshotDiskContainer {
    // The description of the disk image being imported.
    string Description = 1;
    // <p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code> </p>
    string Format = 2;
    // The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).
    string Url = 3;
    // The S3 bucket for the disk image.
    UserBucket UserBucket = 4;
}

repeated string SnapshotIdStringList = 1

repeated Snapshot SnapshotList = 1

enum SnapshotState {
    PENDING = 0;
    COMPLETED = 1;
    ERROR = 2;
}

message SnapshotTaskDetail {
    // The description of the snapshot.
    string Description = 1;
    // The size of the disk in the snapshot, in GiB.
    number DiskImageSize = 2;
    // The format of the disk image from which the snapshot is created.
    string Format = 3;
    // The percentage of completion for the import snapshot task.
    string Progress = 4;
    // The snapshot ID of the disk being imported.
    string SnapshotId = 5;
    // A brief status for the import snapshot task.
    string Status = 6;
    // A detailed status message for the import snapshot task.
    string StatusMessage = 7;
    // The URL of the disk image from which the snapshot is created.
    string Url = 8;
    // The S3 bucket for the disk image.
    UserBucketDetails UserBucket = 9;
}

message SpotDatafeedSubscription {
    // The Amazon S3 bucket where the Spot instance data feed is located.
    string Bucket = 1;
    // The fault codes for the Spot instance request, if any.
    SpotInstanceStateFault Fault = 2;
    // The AWS account ID of the account.
    string OwnerId = 3;
    // The prefix that is prepended to data feed files.
    string Prefix = 4;
    // The state of the Spot instance data feed subscription.
    DatafeedSubscriptionState State = 5;
}

message SpotFleetLaunchSpecification {
    // Deprecated.
    string AddressingType = 1;
    // One or more block device mapping entries.
    array BlockDeviceMappings = 2;
    // <p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>
    boolean EbsOptimized = 3;
    // The IAM instance profile.
    IamInstanceProfileSpecification IamInstanceProfile = 4;
    // The ID of the AMI.
    string ImageId = 5;
    // The instance type. Note that T2 and HS1 instance types are not supported.
    InstanceType InstanceType = 6;
    // The ID of the kernel.
    string KernelId = 7;
    // The name of the key pair.
    string KeyName = 8;
    // Enable or disable monitoring for the instances.
    SpotFleetMonitoring Monitoring = 9;
    // One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.
    array NetworkInterfaces = 10;
    // The placement information.
    SpotPlacement Placement = 11;
    // The ID of the RAM disk.
    string RamdiskId = 12;
    // One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
    array SecurityGroups = 13;
    // The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of <code>WeightedCapacity</code>.
    string SpotPrice = 14;
    // The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-a61dafcf, subnet-65ea5f08".
    string SubnetId = 15;
    // The tags to apply during creation.
    array TagSpecifications = 16;
    // The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
    string UserData = 17;
    // <p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).</p> <p>If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.</p>
    number WeightedCapacity = 18;
}

message SpotFleetMonitoring {
    // <p>Enables monitoring for the instance.</p> <p>Default: <code>false</code> </p>
    boolean Enabled = 1;
}

message SpotFleetRequestConfig {
    // The progress of the Spot fleet request. If there is an error, the status is <code>error</code>. After all bids are placed, the status is <code>pending_fulfillment</code>. If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the fleet is decreased, the status is <code>pending_termination</code> while Spot instances are terminating.
    ActivityStatus ActivityStatus = 1;
    // The creation date and time of the request.
    string CreateTime = 2;
    // Information about the configuration of the Spot fleet request.
    SpotFleetRequestConfigData SpotFleetRequestConfig = 3;
    // The ID of the Spot fleet request.
    string SpotFleetRequestId = 4;
    // The state of the Spot fleet request.
    BatchState SpotFleetRequestState = 5;
}

message SpotFleetRequestConfigData {
    // Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is <code>lowestPrice</code>.
    AllocationStrategy AllocationStrategy = 1;
    // A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    string ClientToken = 2;
    // Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.
    ExcessCapacityTerminationPolicy ExcessCapacityTerminationPolicy = 3;
    // The number of units fulfilled by this request compared to the set target capacity.
    number FulfilledCapacity = 4;
    // Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using <a>CancelSpotFleetRequests</a> or when the Spot fleet request expires, if you set <code>terminateInstancesWithExpiration</code>.
    string IamFleetRole = 5;
    // Indicates whether a Spot instance stops or terminates when it is interrupted.
    InstanceInterruptionBehavior InstanceInterruptionBehavior = 6;
    // Information about the launch specifications for the Spot fleet request.
    array LaunchSpecifications = 7;
    // Indicates whether Spot fleet should replace unhealthy instances.
    boolean ReplaceUnhealthyInstances = 8;
    // The bid price per unit hour.
    string SpotPrice = 9;
    // The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.
    integer TargetCapacity = 10;
    // Indicates whether running Spot instances should be terminated when the Spot fleet request expires.
    boolean TerminateInstancesWithExpiration = 11;
    // The type of request. Indicates whether the fleet will only <code>request</code> the target capacity or also attempt to <code>maintain</code> it. When you <code>request</code> a certain target capacity, the fleet will only place the required bids. It will not attempt to replenish Spot instances if capacity is diminished, nor will it submit bids in alternative Spot pools if capacity is not available. When you want to <code>maintain</code> a certain target capacity, fleet will place the required bids to meet this target capacity. It will also automatically replenish any interrupted instances. Default: <code>maintain</code>.
    FleetType Type = 12;
    // The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately.
    string ValidFrom = 13;
    // The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.
    string ValidUntil = 14;
}

repeated SpotFleetRequestConfig SpotFleetRequestConfigSet = 1

message SpotFleetTagSpecification {
    // The type of resource. Currently, the only resource type that is supported is <code>instance</code>.
    ResourceType ResourceType = 1;
    // The tags.
    array Tags = 2;
}

repeated SpotFleetTagSpecification SpotFleetTagSpecificationList = 1

message SpotInstanceRequest {
    // If you specified a duration and your Spot instance request was fulfilled, this is the fixed hourly price in effect for the Spot instance while it runs.
    string ActualBlockHourlyPrice = 1;
    // The Availability Zone group. If you specify the same Availability Zone group for all Spot instance requests, all Spot instances are launched in the same Availability Zone.
    string AvailabilityZoneGroup = 2;
    // The duration for the Spot instance, in minutes.
    integer BlockDurationMinutes = 3;
    // The date and time when the Spot instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string CreateTime = 4;
    // The fault codes for the Spot instance request, if any.
    SpotInstanceStateFault Fault = 5;
    // The instance ID, if an instance has been launched to fulfill the Spot instance request.
    string InstanceId = 6;
    // Indicates whether a Spot instance stops or terminates when it is interrupted.
    InstanceInterruptionBehavior InstanceInterruptionBehavior = 7;
    // The instance launch group. Launch groups are Spot instances that launch together and terminate together.
    string LaunchGroup = 8;
    // Additional information for launching instances.
    LaunchSpecification LaunchSpecification = 9;
    // The Availability Zone in which the bid is launched.
    string LaunchedAvailabilityZone = 10;
    // The product description associated with the Spot instance.
    RIProductDescription ProductDescription = 11;
    // The ID of the Spot instance request.
    string SpotInstanceRequestId = 12;
    // The maximum hourly price (bid) for the Spot instance launched to fulfill the request.
    string SpotPrice = 13;
    // The state of the Spot instance request. Spot bid status information can help you track your Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot Bid Status</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    SpotInstanceState State = 14;
    // The status code and status message describing the Spot instance request.
    SpotInstanceStatus Status = 15;
    // Any tags assigned to the resource.
    array Tags = 16;
    // The Spot instance request type.
    SpotInstanceType Type = 17;
    // The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time.
    string ValidFrom = 18;
    // The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached.
    string ValidUntil = 19;
}

repeated string SpotInstanceRequestIdList = 1

repeated SpotInstanceRequest SpotInstanceRequestList = 1

enum SpotInstanceState {
    OPEN = 0;
    ACTIVE = 1;
    CLOSED = 2;
    CANCELLED = 3;
    FAILED = 4;
}

message SpotInstanceStateFault {
    // The reason code for the Spot instance state change.
    string Code = 1;
    // The message for the Spot instance state change.
    string Message = 2;
}

message SpotInstanceStatus {
    // The status code. For a list of status codes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand">Spot Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    string Code = 1;
    // The description for the status code.
    string Message = 2;
    // The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string UpdateTime = 3;
}

enum SpotInstanceType {
    ONETIME = 0;
    PERSISTENT = 1;
}

message SpotPlacement {
    // <p>The Availability Zone.</p> <p>[Spot fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</p>
    string AvailabilityZone = 1;
    // The name of the placement group (for cluster instances).
    string GroupName = 2;
    // The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for Spot instances.
    Tenancy Tenancy = 3;
}

message SpotPrice {
    // The Availability Zone.
    string AvailabilityZone = 1;
    // The instance type. Note that T2 and HS1 instance types are not supported.
    InstanceType InstanceType = 2;
    // A general description of the AMI.
    RIProductDescription ProductDescription = 3;
    // The maximum price (bid) that you are willing to pay for a Spot instance.
    string SpotPrice = 4;
    // The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    string Timestamp = 5;
}

repeated SpotPrice SpotPriceHistoryList = 1

message StaleIpPermission {
    // The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types.
    integer FromPort = 1;
    // The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers)</a>.
    string IpProtocol = 2;
    // One or more IP ranges. Not applicable for stale security group rules.
    array IpRanges = 3;
    // One or more prefix list IDs for an AWS service. Not applicable for stale security group rules.
    array PrefixListIds = 4;
    // The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types.
    integer ToPort = 5;
    // One or more security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.
    array UserIdGroupPairs = 6;
}

repeated StaleIpPermission StaleIpPermissionSet = 1

message StaleSecurityGroup {
    // The description of the security group.
    string Description = 1;
    // The ID of the security group.
    string GroupId = 2;
    // The name of the security group.
    string GroupName = 3;
    // Information about the stale inbound rules in the security group.
    array StaleIpPermissions = 4;
    // Information about the stale outbound rules in the security group.
    array StaleIpPermissionsEgress = 5;
    // The ID of the VPC for the security group.
    string VpcId = 6;
}

repeated StaleSecurityGroup StaleSecurityGroupSet = 1

message StartInstancesRequest {
    // Reserved.
    string AdditionalInfo = 1;
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 2;
    // One or more instance IDs.
    array InstanceIds = 3;
}

message StartInstancesResult {
    // Information about one or more started instances.
    array StartingInstances = 1;
}

enum State {
    PENDING = 0;
    AVAILABLE = 1;
    DELETING = 2;
    DELETED = 3;
}

message StateReason {
    // The reason code for the state change.
    string Code = 1;
    // <p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient instance capacity to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error occurred during instance launch, resulting in termination.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: A Spot Instance was terminated due to an increase in the market price.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate on launch.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the <code>shutdown -h</code> command from the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your limits.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> </ul>
    string Message = 2;
}

enum Statu {
    MOVEINPROGRESS = 0;
    INVPC = 1;
    INCLASSIC = 2;
}

enum StatusName {
    REACHABILITY = 0;
}

enum StatusType {
    PASSED = 0;
    FAILED = 1;
    INSUFFICIENTDATA = 2;
    INITIALIZING = 3;
}

message StopInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>
    boolean Force = 2;
    // One or more instance IDs.
    array InstanceIds = 3;
}

message StopInstancesResult {
    // Information about one or more stopped instances.
    array StoppingInstances = 1;
}

message Storage {
    // An Amazon S3 storage location.
    S3Storage S3 = 1;
}

message StorageLocation {
    // The name of the S3 bucket.
    string Bucket = 1;
    // The key.
    string Key = 2;
}

message Subnet {
    // Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives an IPv6 address.
    boolean AssignIpv6AddressOnCreation = 1;
    // The Availability Zone of the subnet.
    string AvailabilityZone = 2;
    // The number of unused private IPv4 addresses in the subnet. Note that the IPv4 addresses for any stopped instances are considered unavailable.
    integer AvailableIpAddressCount = 3;
    // The IPv4 CIDR block assigned to the subnet.
    string CidrBlock = 4;
    // Indicates whether this is the default subnet for the Availability Zone.
    boolean DefaultForAz = 5;
    // Information about the IPv6 CIDR blocks associated with the subnet.
    array Ipv6CidrBlockAssociationSet = 6;
    // Indicates whether instances launched in this subnet receive a public IPv4 address.
    boolean MapPublicIpOnLaunch = 7;
    // The current state of the subnet.
    SubnetState State = 8;
    // The ID of the subnet.
    string SubnetId = 9;
    // Any tags assigned to the subnet.
    array Tags = 10;
    // The ID of the VPC the subnet is in.
    string VpcId = 11;
}

message SubnetCidrBlockState {
    // The state of a CIDR block.
    SubnetCidrBlockStateCode State = 1;
    // A message about the status of the CIDR block, if applicable.
    string StatusMessage = 2;
}

enum SubnetCidrBlockStateCode {
    ASSOCIATING = 0;
    ASSOCIATED = 1;
    DISASSOCIATING = 2;
    DISASSOCIATED = 3;
    FAILING = 4;
    FAILED = 5;
}

repeated string SubnetIdStringList = 1

message SubnetIpv6CidrBlockAssociation {
    // The association ID for the CIDR block.
    string AssociationId = 1;
    // The IPv6 CIDR block.
    string Ipv6CidrBlock = 2;
    // Information about the state of the CIDR block.
    SubnetCidrBlockState Ipv6CidrBlockState = 3;
}

repeated SubnetIpv6CidrBlockAssociation SubnetIpv6CidrBlockAssociationSet = 1

repeated Subnet SubnetList = 1

enum SubnetState {
    PENDING = 0;
    AVAILABLE = 1;
}

enum SummaryStatu {
    OK = 0;
    IMPAIRED = 1;
    INSUFFICIENTDATA = 2;
    NOTAPPLICABLE = 3;
    INITIALIZING = 4;
}

message Tag {
    // <p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code> </p>
    string Key = 1;
    // <p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>
    string Value = 2;
}

message TagDescription {
    // The tag key.
    string Key = 1;
    // The ID of the resource. For example, <code>ami-1a2b3c4d</code>.
    string ResourceId = 2;
    // The resource type.
    ResourceType ResourceType = 3;
    // The tag value.
    string Value = 4;
}

repeated TagDescription TagDescriptionList = 1

repeated Tag TagList = 1

message TagSpecification {
    // The type of resource to tag. Currently, the resource types that support tagging on creation are <code>instance</code> and <code>volume</code>.
    ResourceType ResourceType = 1;
    // The tags to apply to the resource.
    array Tags = 2;
}

repeated TagSpecification TagSpecificationList = 1

message TargetConfiguration {
    // The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request
    integer InstanceCount = 1;
    // The ID of the Convertible Reserved Instance offering.
    string OfferingId = 2;
}

message TargetConfigurationRequest {
    // The number of instances the Covertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request
    integer InstanceCount = 1;
    // The Convertible Reserved Instance offering ID.
    string OfferingId = 2;
}

repeated TargetConfigurationRequest TargetConfigurationRequestSet = 1

message TargetReservationValue {
    // The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.
    ReservationValue ReservationValue = 1;
    // The configuration of the Convertible Reserved Instances that make up the exchange.
    TargetConfiguration TargetConfiguration = 2;
}

repeated TargetReservationValue TargetReservationValueSet = 1

enum TelemetryStatu {
    UP = 0;
    DOWN = 1;
}

enum Tenancy {
    DEFAULT = 0;
    DEDICATED = 1;
    HOST = 2;
}

message TerminateInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // <p>One or more instance IDs.</p> <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</p>
    array InstanceIds = 2;
}

message TerminateInstancesResult {
    // Information about one or more terminated instances.
    array TerminatingInstances = 1;
}

enum TrafficType {
    ACCEPT = 0;
    REJECT = 1;
    ALL = 2;
}

repeated VpnTunnelOptionsSpecification TunnelOptionsList = 1

message UnassignIpv6AddressesRequest {
    // The IPv6 addresses to unassign from the network interface.
    array Ipv6Addresses = 1;
    // The ID of the network interface.
    string NetworkInterfaceId = 2;
}

message UnassignIpv6AddressesResult {
    // The ID of the network interface.
    string NetworkInterfaceId = 1;
    // The IPv6 addresses that have been unassigned from the network interface.
    array UnassignedIpv6Addresses = 2;
}

message UnassignPrivateIpAddressesRequest {
    // The ID of the network interface.
    string NetworkInterfaceId = 1;
    // The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
    array PrivateIpAddresses = 2;
}

message UnmonitorInstancesRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // One or more instance IDs.
    array InstanceIds = 2;
}

message UnmonitorInstancesResult {
    // The monitoring information.
    array InstanceMonitorings = 1;
}

message UnsuccessfulItem {
    // Information about the error.
    UnsuccessfulItemError Error = 1;
    // The ID of the resource.
    string ResourceId = 2;
}

message UnsuccessfulItemError {
    // The error code.
    string Code = 1;
    // The error message accompanying the error code.
    string Message = 2;
}

repeated UnsuccessfulItem UnsuccessfulItemList = 1

repeated UnsuccessfulItem UnsuccessfulItemSet = 1

message UpdateSecurityGroupRuleDescriptionsEgressRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
    string GroupId = 2;
    // [Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.
    string GroupName = 3;
    // The IP permissions for the security group rule.
    array IpPermissions = 4;
}

message UpdateSecurityGroupRuleDescriptionsEgressResult {
    // Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    boolean Return = 1;
}

message UpdateSecurityGroupRuleDescriptionsIngressRequest {
    // Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    boolean DryRun = 1;
    // The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
    string GroupId = 2;
    // [EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.
    string GroupName = 3;
    // The IP permissions for the security group rule.
    array IpPermissions = 4;
}

message UpdateSecurityGroupRuleDescriptionsIngressResult {
    // Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    boolean Return = 1;
}

message UserBucket {
    // The name of the S3 bucket where the disk image is located.
    string S3Bucket = 1;
    // The file name of the disk image.
    string S3Key = 2;
}

message UserBucketDetails {
    // The S3 bucket from which the disk image was created.
    string S3Bucket = 1;
    // The file name of the disk image.
    string S3Key = 2;
}

message UserData {
    // The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
    string Data = 1;
}

repeated string UserGroupStringList = 1

message UserIdGroupPair {
    // <p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>
    string Description = 1;
    // The ID of the security group.
    string GroupId = 2;
    // The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID.
    string GroupName = 3;
    // The status of a VPC peering connection, if applicable.
    string PeeringStatus = 4;
    // <p>The ID of an AWS account. For a referenced security group in another VPC, the account ID of the referenced security group is returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.</p>
    string UserId = 5;
    // The ID of the VPC for the referenced security group, if applicable.
    string VpcId = 6;
    // The ID of the VPC peering connection, if applicable.
    string VpcPeeringConnectionId = 7;
}

repeated UserIdGroupPair UserIdGroupPairList = 1

repeated UserIdGroupPair UserIdGroupPairSet = 1

repeated string UserIdStringList = 1

repeated string ValueStringList = 1



message VgwTelemetry {
    // The number of accepted routes.
    integer AcceptedRouteCount = 1;
    // The date and time of the last change in status.
    string LastStatusChange = 2;
    // The Internet-routable IP address of the virtual private gateway's outside interface.
    string OutsideIpAddress = 3;
    // The status of the VPN tunnel.
    TelemetryStatus Status = 4;
    // If an error occurs, a description of the error.
    string StatusMessage = 5;
}

repeated VgwTelemetry VgwTelemetryList = 1

enum VirtualizationType {
    HVM = 0;
    PARAVIRTUAL = 1;
}

message Volume {
    // Information about the volume attachments.
    array Attachments = 1;
    // The Availability Zone for the volume.
    string AvailabilityZone = 2;
    // The time stamp when volume creation was initiated.
    string CreateTime = 3;
    // Indicates whether the volume will be encrypted.
    boolean Encrypted = 4;
    // <p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose SSD baseline performance, I/O credits, and bursting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for io1 volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>
    integer Iops = 5;
    // The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume.
    string KmsKeyId = 6;
    // The size of the volume, in GiBs.
    integer Size = 7;
    // The snapshot from which the volume was created, if applicable.
    string SnapshotId = 8;
    // The volume state.
    VolumeState State = 9;
    // Any tags assigned to the volume.
    array Tags = 10;
    // The ID of the volume.
    string VolumeId = 11;
    // The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.
    VolumeType VolumeType = 12;
}

message VolumeAttachment {
    // The time stamp when the attachment initiated.
    string AttachTime = 1;
    // Indicates whether the EBS volume is deleted on instance termination.
    boolean DeleteOnTermination = 2;
    // The device name.
    string Device = 3;
    // The ID of the instance.
    string InstanceId = 4;
    // The attachment state of the volume.
    VolumeAttachmentState State = 5;
    // The ID of the volume.
    string VolumeId = 6;
}

repeated VolumeAttachment VolumeAttachmentList = 1

enum VolumeAttachmentState {
    ATTACHING = 0;
    ATTACHED = 1;
    DETACHING = 2;
    DETACHED = 3;
}

enum VolumeAttributeName {
    AUTOENABLEIO = 0;
    PRODUCTCODES = 1;
}

message VolumeDetail {
    // The size of the volume, in GiB.
    integer Size = 1;
}

repeated string VolumeIdStringList = 1

repeated Volume VolumeList = 1

message VolumeModification {
    // Modification completion or failure time.
    string EndTime = 1;
    // Current state of modification. Modification state is null for unmodified volumes.
    VolumeModificationState ModificationState = 2;
    // Original IOPS rate of the volume being modified.
    integer OriginalIops = 3;
    // Original size of the volume being modified.
    integer OriginalSize = 4;
    // Original EBS volume type of the volume being modified.
    VolumeType OriginalVolumeType = 5;
    // Modification progress from 0 to 100%.
    integer Progress = 6;
    // Modification start time
    string StartTime = 7;
    // Generic status message on modification progress or failure.
    string StatusMessage = 8;
    // Target IOPS rate of the volume being modified.
    integer TargetIops = 9;
    // Target size of the volume being modified.
    integer TargetSize = 10;
    // Target EBS volume type of the volume being modified.
    VolumeType TargetVolumeType = 11;
    // ID of the volume being modified.
    string VolumeId = 12;
}

repeated VolumeModification VolumeModificationList = 1

enum VolumeModificationState {
    MODIFYING = 0;
    OPTIMIZING = 1;
    COMPLETED = 2;
    FAILED = 3;
}

enum VolumeState {
    CREATING = 0;
    AVAILABLE = 1;
    INUSE = 2;
    DELETING = 3;
    DELETED = 4;
    ERROR = 5;
}

message VolumeStatusAction {
    // The code identifying the operation, for example, <code>enable-volume-io</code>.
    string Code = 1;
    // A description of the operation.
    string Description = 2;
    // The ID of the event associated with this operation.
    string EventId = 3;
    // The event type associated with this operation.
    string EventType = 4;
}

repeated VolumeStatusAction VolumeStatusActionsList = 1

message VolumeStatusDetails {
    // The name of the volume status.
    VolumeStatusName Name = 1;
    // The intended status of the volume status.
    string Status = 2;
}

repeated VolumeStatusDetails VolumeStatusDetailsList = 1

message VolumeStatusEvent {
    // A description of the event.
    string Description = 1;
    // The ID of this event.
    string EventId = 2;
    // The type of this event.
    string EventType = 3;
    // The latest end time of the event.
    string NotAfter = 4;
    // The earliest start time of the event.
    string NotBefore = 5;
}

repeated VolumeStatusEvent VolumeStatusEventsList = 1

message VolumeStatusInfo {
    // The details of the volume status.
    array Details = 1;
    // The status of the volume.
    VolumeStatusInfoStatus Status = 2;
}

enum VolumeStatusInfoStatu {
    OK = 0;
    IMPAIRED = 1;
    INSUFFICIENTDATA = 2;
}

message VolumeStatusItem {
    // The details of the operation.
    array Actions = 1;
    // The Availability Zone of the volume.
    string AvailabilityZone = 2;
    // A list of events associated with the volume.
    array Events = 3;
    // The volume ID.
    string VolumeId = 4;
    // The volume status.
    VolumeStatusInfo VolumeStatus = 5;
}

repeated VolumeStatusItem VolumeStatusList = 1

enum VolumeStatusName {
    IOENABLED = 0;
    IOPERFORMANCE = 1;
}

enum VolumeType {
    STANDARD = 0;
    IO1 = 1;
    GP2 = 2;
    SC1 = 3;
    ST1 = 4;
}

message Vpc {
    // The primary IPv4 CIDR block for the VPC.
    string CidrBlock = 1;
    // Information about the IPv4 CIDR blocks associated with the VPC.
    array CidrBlockAssociationSet = 2;
    // The ID of the set of DHCP options you've associated with the VPC (or <code>default</code> if the default options are associated with the VPC).
    string DhcpOptionsId = 3;
    // The allowed tenancy of instances launched into the VPC.
    Tenancy InstanceTenancy = 4;
    // Information about the IPv6 CIDR blocks associated with the VPC.
    array Ipv6CidrBlockAssociationSet = 5;
    // Indicates whether the VPC is the default VPC.
    boolean IsDefault = 6;
    // The current state of the VPC.
    VpcState State = 7;
    // Any tags assigned to the VPC.
    array Tags = 8;
    // The ID of the VPC.
    string VpcId = 9;
}

message VpcAttachment {
    // The current state of the attachment.
    AttachmentStatus State = 1;
    // The ID of the VPC.
    string VpcId = 2;
}

repeated VpcAttachment VpcAttachmentList = 1

enum VpcAttributeName {
    ENABLEDNSSUPPORT = 0;
    ENABLEDNSHOSTNAMES = 1;
}

message VpcCidrBlockAssociation {
    // The association ID for the IPv4 CIDR block.
    string AssociationId = 1;
    // The IPv4 CIDR block.
    string CidrBlock = 2;
    // Information about the state of the CIDR block.
    VpcCidrBlockState CidrBlockState = 3;
}

repeated VpcCidrBlockAssociation VpcCidrBlockAssociationSet = 1

message VpcCidrBlockState {
    // The state of the CIDR block.
    VpcCidrBlockStateCode State = 1;
    // A message about the status of the CIDR block, if applicable.
    string StatusMessage = 2;
}

enum VpcCidrBlockStateCode {
    ASSOCIATING = 0;
    ASSOCIATED = 1;
    DISASSOCIATING = 2;
    DISASSOCIATED = 3;
    FAILING = 4;
    FAILED = 5;
}

message VpcClassicLink {
    // Indicates whether the VPC is enabled for ClassicLink.
    boolean ClassicLinkEnabled = 1;
    // Any tags assigned to the VPC.
    array Tags = 2;
    // The ID of the VPC.
    string VpcId = 3;
}

repeated string VpcClassicLinkIdList = 1

repeated VpcClassicLink VpcClassicLinkList = 1

message VpcEndpoint {
    // The date and time the VPC endpoint was created.
    string CreationTimestamp = 1;
    // The policy document associated with the endpoint.
    string PolicyDocument = 2;
    // One or more route tables associated with the endpoint.
    array RouteTableIds = 3;
    // The name of the AWS service to which the endpoint is associated.
    string ServiceName = 4;
    // The state of the VPC endpoint.
    State State = 5;
    // The ID of the VPC endpoint.
    string VpcEndpointId = 6;
    // The ID of the VPC to which the endpoint is associated.
    string VpcId = 7;
}

repeated VpcEndpoint VpcEndpointSet = 1

repeated string VpcIdStringList = 1

message VpcIpv6CidrBlockAssociation {
    // The association ID for the IPv6 CIDR block.
    string AssociationId = 1;
    // The IPv6 CIDR block.
    string Ipv6CidrBlock = 2;
    // Information about the state of the CIDR block.
    VpcCidrBlockState Ipv6CidrBlockState = 3;
}

repeated VpcIpv6CidrBlockAssociation VpcIpv6CidrBlockAssociationSet = 1

repeated Vpc VpcList = 1

message VpcPeeringConnection {
    // Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.
    VpcPeeringConnectionVpcInfo AccepterVpcInfo = 1;
    // The time that an unaccepted VPC peering connection will expire.
    string ExpirationTime = 2;
    // Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.
    VpcPeeringConnectionVpcInfo RequesterVpcInfo = 3;
    // The status of the VPC peering connection.
    VpcPeeringConnectionStateReason Status = 4;
    // Any tags assigned to the resource.
    array Tags = 5;
    // The ID of the VPC peering connection.
    string VpcPeeringConnectionId = 6;
}

repeated VpcPeeringConnection VpcPeeringConnectionList = 1

message VpcPeeringConnectionOptionsDescription {
    // Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.
    boolean AllowDnsResolutionFromRemoteVpc = 1;
    // Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.
    boolean AllowEgressFromLocalClassicLinkToRemoteVpc = 2;
    // Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.
    boolean AllowEgressFromLocalVpcToRemoteClassicLink = 3;
}

message VpcPeeringConnectionStateReason {
    // The status of the VPC peering connection.
    VpcPeeringConnectionStateReasonCode Code = 1;
    // A message that provides more information about the status, if applicable.
    string Message = 2;
}

enum VpcPeeringConnectionStateReasonCode {
    INITIATINGREQUEST = 0;
    PENDINGACCEPTANCE = 1;
    ACTIVE = 2;
    DELETED = 3;
    REJECTED = 4;
    FAILED = 5;
    EXPIRED = 6;
    PROVISIONING = 7;
    DELETING = 8;
}

message VpcPeeringConnectionVpcInfo {
    // The IPv4 CIDR block for the VPC.
    string CidrBlock = 1;
    // Information about the IPv4 CIDR blocks for the VPC.
    array CidrBlockSet = 2;
    // The IPv6 CIDR block for the VPC.
    array Ipv6CidrBlockSet = 3;
    // The AWS account ID of the VPC owner.
    string OwnerId = 4;
    // Information about the VPC peering connection options for the accepter or requester VPC.
    VpcPeeringConnectionOptionsDescription PeeringOptions = 5;
    // The ID of the VPC.
    string VpcId = 6;
}

enum VpcState {
    PENDING = 0;
    AVAILABLE = 1;
}

message VpnConnection {
    // The category of the VPN connection. A value of <code>VPN</code> indicates an AWS VPN connection. A value of <code>VPN-Classic</code> indicates an AWS Classic VPN connection. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html#vpn-categories">AWS Managed VPN Categories</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    string Category = 1;
    // The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state.
    string CustomerGatewayConfiguration = 2;
    // The ID of the customer gateway at your end of the VPN connection.
    string CustomerGatewayId = 3;
    // The VPN connection options.
    VpnConnectionOptions Options = 4;
    // The static routes associated with the VPN connection.
    array Routes = 5;
    // The current state of the VPN connection.
    VpnState State = 6;
    // Any tags assigned to the VPN connection.
    array Tags = 7;
    // The type of VPN connection.
    GatewayType Type = 8;
    // Information about the VPN tunnel.
    array VgwTelemetry = 9;
    // The ID of the VPN connection.
    string VpnConnectionId = 10;
    // The ID of the virtual private gateway at the AWS side of the VPN connection.
    string VpnGatewayId = 11;
}

repeated string VpnConnectionIdStringList = 1

repeated VpnConnection VpnConnectionList = 1

message VpnConnectionOptions {
    // Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.
    boolean StaticRoutesOnly = 1;
}

message VpnConnectionOptionsSpecification {
    // <p>Indicate whether the VPN connection uses static routes only. If you are creating a VPN connection for a device that does not support BGP, you must specify <code>true</code>.</p> <p>Default: <code>false</code> </p>
    boolean StaticRoutesOnly = 1;
    // The tunnel options for the VPN connection.
    array TunnelOptions = 2;
}

message VpnGateway {
    // The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.
    string AvailabilityZone = 1;
    // The current state of the virtual private gateway.
    VpnState State = 2;
    // Any tags assigned to the virtual private gateway.
    array Tags = 3;
    // The type of VPN connection the virtual private gateway supports.
    GatewayType Type = 4;
    // Any VPCs attached to the virtual private gateway.
    array VpcAttachments = 5;
    // The ID of the virtual private gateway.
    string VpnGatewayId = 6;
}

repeated string VpnGatewayIdStringList = 1

repeated VpnGateway VpnGatewayList = 1

enum VpnState {
    PENDING = 0;
    AVAILABLE = 1;
    DELETING = 2;
    DELETED = 3;
}

message VpnStaticRoute {
    // The CIDR block associated with the local subnet of the customer data center.
    string DestinationCidrBlock = 1;
    // Indicates how the routes were provided.
    VpnStaticRouteSource Source = 2;
    // The current state of the static route.
    VpnState State = 3;
}

repeated VpnStaticRoute VpnStaticRouteList = 1

enum VpnStaticRouteSource {
    STATIC = 0;
}

message VpnTunnelOptionsSpecification {
    // <p>The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.</p> <p>Constraints: Allowed characters are alphanumeric characters and ._. Must be between 8 and 64 characters in length and cannot start with zero (0).</p>
    string PreSharedKey = 1;
    // <p>The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway. </p> <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The following CIDR blocks are reserved and cannot be used:</p> <ul> <li> <p> <code>169.254.0.0/30</code> </p> </li> <li> <p> <code>169.254.1.0/30</code> </p> </li> <li> <p> <code>169.254.2.0/30</code> </p> </li> <li> <p> <code>169.254.3.0/30</code> </p> </li> <li> <p> <code>169.254.4.0/30</code> </p> </li> <li> <p> <code>169.254.5.0/30</code> </p> </li> <li> <p> <code>169.254.169.252/30</code> </p> </li> </ul>
    string TunnelInsideCidr = 2;
}















repeated string ZoneNameStringList = 1

enum Scope {
    AVAILABILITY_ZONE = 0;
    REGION = 1;
}

service AmazonElasticComputeCloudService {
    // Accepts the Convertible Reserved Instance exchange quote described in the <a>GetReservedInstancesExchangeQuote</a> call.
    rpc Post#AcceptReservedInstancesExchangeQuote(Post#AcceptReservedInstancesExchangeQuoteRequest) returns (AcceptReservedInstancesExchangeQuoteResult) {
      option (google.api.http) = {
        post: "//#AcceptReservedInstancesExchangeQuote"
        body: "body"
      };
    }
    // Accept a VPC peering connection request. To accept a request, the VPC peering connection must be in the <code>pending-acceptance</code> state, and you must be the owner of the peer VPC. Use <a>DescribeVpcPeeringConnections</a> to view your outstanding VPC peering connection requests.
    rpc Post#AcceptVpcPeeringConnection(Post#AcceptVpcPeeringConnectionRequest) returns (AcceptVpcPeeringConnectionResult) {
      option (google.api.http) = {
        post: "//#AcceptVpcPeeringConnection"
        body: "body"
      };
    }
    // <p>Allocates an Elastic IP address.</p> <p>An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. By default, you can allocate 5 Elastic IP addresses for EC2-Classic per region and 5 Elastic IP addresses for EC2-VPC per region.</p> <p>If you release an Elastic IP address for use in a VPC, you might be able to recover it. To recover an Elastic IP address that you released, specify it in the <code>Address</code> parameter. Note that you cannot recover an Elastic IP address that you released after it is allocated to another AWS account.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#AllocateAddress(Post#AllocateAddressRequest) returns (AllocateAddressResult) {
      option (google.api.http) = {
        post: "//#AllocateAddress"
        body: "body"
      };
    }
    // Allocates a Dedicated Host to your account. At minimum you need to specify the instance size type, Availability Zone, and quantity of hosts you want to allocate.
    rpc Post#AllocateHosts(Post#AllocateHostsRequest) returns (AllocateHostsResult) {
      option (google.api.http) = {
        post: "//#AllocateHosts"
        body: "body"
      };
    }
    // Assigns one or more IPv6 addresses to the specified network interface. You can specify one or more specific IPv6 addresses, or you can specify the number of IPv6 addresses to be automatically assigned from within the subnet's IPv6 CIDR block range. You can assign as many IPv6 addresses to a network interface as you can assign private IPv4 addresses, and the limit varies per instance type. For information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per Network Interface Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#AssignIpv6Addresses(Post#AssignIpv6AddressesRequest) returns (AssignIpv6AddressesResult) {
      option (google.api.http) = {
        post: "//#AssignIpv6Addresses"
        body: "body"
      };
    }
    // <p>Assigns one or more secondary private IP addresses to the specified network interface. You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet's CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>AssignPrivateIpAddresses is available only in EC2-VPC.</p>
    rpc Post#AssignPrivateIpAddresses(Post#AssignPrivateIpAddressesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AssignPrivateIpAddresses"
        body: "body"
      };
    }
    // <p>Associates an Elastic IP address with an instance or a network interface.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance. If you associate an Elastic IP address with an instance that has an existing Elastic IP address, the existing address is disassociated from the instance, but remains allocated to your account.</p> <p>[VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation. You cannot associate an Elastic IP address with an instance or network interface that has an existing Elastic IP address.</p> <important> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error, and you may be charged for each time the Elastic IP address is remapped to the same instance. For more information, see the <i>Elastic IP Addresses</i> section of <a href="http://aws.amazon.com/ec2/pricing/">Amazon EC2 Pricing</a>.</p> </important>
    rpc Post#AssociateAddress(Post#AssociateAddressRequest) returns (AssociateAddressResult) {
      option (google.api.http) = {
        post: "//#AssociateAddress"
        body: "body"
      };
    }
    // <p>Associates a set of DHCP options (that you've previously created) with the specified VPC, or associates no DHCP options with the VPC.</p> <p>After you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#AssociateDhcpOptions(Post#AssociateDhcpOptionsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AssociateDhcpOptions"
        body: "body"
      };
    }
    // Associates an IAM instance profile with a running or stopped instance. You cannot associate more than one IAM instance profile with an instance.
    rpc Post#AssociateIamInstanceProfile(Post#AssociateIamInstanceProfileRequest) returns (AssociateIamInstanceProfileResult) {
      option (google.api.http) = {
        post: "//#AssociateIamInstanceProfile"
        body: "body"
      };
    }
    // <p>Associates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table from the subnet later. A route table can be associated with multiple subnets.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#AssociateRouteTable(Post#AssociateRouteTableRequest) returns (AssociateRouteTableResult) {
      option (google.api.http) = {
        post: "//#AssociateRouteTable"
        body: "body"
      };
    }
    // Associates a CIDR block with your subnet. You can only associate a single IPv6 CIDR block with your subnet. An IPv6 CIDR block must have a prefix length of /64.
    rpc Post#AssociateSubnetCidrBlock(Post#AssociateSubnetCidrBlockRequest) returns (AssociateSubnetCidrBlockResult) {
      option (google.api.http) = {
        post: "//#AssociateSubnetCidrBlock"
        body: "body"
      };
    }
    // <p>Associates a CIDR block with your VPC. You can associate a secondary IPv4 CIDR block, or you can associate an Amazon-provided IPv6 CIDR block. The IPv6 CIDR block size is fixed at /56.</p> <p>For more information about associating CIDR blocks with your VPC and applicable restrictions, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html#VPC_Sizing">VPC and Subnet Sizing</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#AssociateVpcCidrBlock(Post#AssociateVpcCidrBlockRequest) returns (AssociateVpcCidrBlockResult) {
      option (google.api.http) = {
        post: "//#AssociateVpcCidrBlock"
        body: "body"
      };
    }
    // <p>Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups. You cannot link an EC2-Classic instance to more than one VPC at a time. You can only link an instance that's in the <code>running</code> state. An instance is automatically unlinked from a VPC when it's stopped - you can link it to the VPC again when you restart it.</p> <p>After you've linked an instance, you cannot change the VPC security groups that are associated with it. To change the security groups, you must first unlink the instance, and then link it again.</p> <p>Linking your instance to a VPC is sometimes referred to as <i>attaching</i> your instance.</p>
    rpc Post#AttachClassicLinkVpc(Post#AttachClassicLinkVpcRequest) returns (AttachClassicLinkVpcResult) {
      option (google.api.http) = {
        post: "//#AttachClassicLinkVpc"
        body: "body"
      };
    }
    // Attaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC. For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.
    rpc Post#AttachInternetGateway(Post#AttachInternetGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AttachInternetGateway"
        body: "body"
      };
    }
    // Attaches a network interface to an instance.
    rpc Post#AttachNetworkInterface(Post#AttachNetworkInterfaceRequest) returns (AttachNetworkInterfaceResult) {
      option (google.api.http) = {
        post: "//#AttachNetworkInterface"
        body: "body"
      };
    }
    // <p>Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.</p> <p>Encrypted EBS volumes may only be attached to instances that support Amazon EBS encryption. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching an EBS Volume to an Instance</a>. Any device names that aren't reserved for instance store volumes can be used for EBS volumes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If a volume has an AWS Marketplace product code:</p> <ul> <li> <p>The volume can be attached only to a stopped instance.</p> </li> <li> <p>AWS Marketplace product codes are copied from the volume to the instance.</p> </li> <li> <p>You must be subscribed to the product.</p> </li> <li> <p>The instance type and operating system of the instance must support the product. For example, you can't detach a volume from a Windows instance and attach it to a Linux instance.</p> </li> </ul> <p>For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">Introducing AWS Marketplace</a>.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#AttachVolume(Post#AttachVolumeRequest) returns (VolumeAttachment) {
      option (google.api.http) = {
        post: "//#AttachVolume"
        body: "body"
      };
    }
    // <p>Attaches a virtual private gateway to a VPC. You can attach one virtual private gateway to one VPC at a time.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#AttachVpnGateway(Post#AttachVpnGatewayRequest) returns (AttachVpnGatewayResult) {
      option (google.api.http) = {
        post: "//#AttachVpnGateway"
        body: "body"
      };
    }
    // <p>[EC2-VPC only] Adds one or more egress rules to a security group for use with a VPC. Specifically, this action permits instances to send traffic to one or more destination IPv4 or IPv6 CIDR address ranges, or to one or more destination security groups for the same VPC. This action doesn't apply to security groups for use in EC2-Classic. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. For more information about security group limits, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon VPC Limits</a>.</p> <p>Each rule consists of the protocol (for example, TCP), plus either a CIDR range or a source group. For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes. You can optionally specify a description for the rule.</p> <p>Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.</p>
    rpc Post#AuthorizeSecurityGroupEgress(Post#AuthorizeSecurityGroupEgressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AuthorizeSecurityGroupEgress"
        body: "body"
      };
    }
    // <p>Adds one or more ingress rules to a security group.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p> <p>[EC2-Classic] This action gives one or more IPv4 CIDR address ranges permission to access a security group in your account, or gives one or more security groups (called the <i>source groups</i>) permission to access a security group for your account. A source group can be for your own AWS account, or another. You can have up to 100 rules per group.</p> <p>[EC2-VPC] This action gives one or more IPv4 or IPv6 CIDR address ranges permission to access a security group in your VPC, or gives one or more other security groups (called the <i>source groups</i>) permission to access a security group for your VPC. The security groups must all be for the same VPC or a peer VPC in a VPC peering connection. For more information about VPC security group limits, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon VPC Limits</a>.</p> <p>You can optionally specify a description for the security group rule.</p>
    rpc Post#AuthorizeSecurityGroupIngress(Post#AuthorizeSecurityGroupIngressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AuthorizeSecurityGroupIngress"
        body: "body"
      };
    }
    // <p>Bundles an Amazon instance store-backed Windows instance.</p> <p>During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved.</p> <note> <p>This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating an Instance Store-Backed Windows AMI</a>.</p>
    rpc Post#BundleInstance(Post#BundleInstanceRequest) returns (BundleInstanceResult) {
      option (google.api.http) = {
        post: "//#BundleInstance"
        body: "body"
      };
    }
    // Cancels a bundling operation for an instance store-backed Windows instance.
    rpc Post#CancelBundleTask(Post#CancelBundleTaskRequest) returns (CancelBundleTaskResult) {
      option (google.api.http) = {
        post: "//#CancelBundleTask"
        body: "body"
      };
    }
    // <p>Cancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p>
    rpc Post#CancelConversionTask(Post#CancelConversionTaskRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CancelConversionTask"
        body: "body"
      };
    }
    // Cancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.
    rpc Post#CancelExportTask(Post#CancelExportTaskRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CancelExportTask"
        body: "body"
      };
    }
    // Cancels an in-process import virtual machine or import snapshot task.
    rpc Post#CancelImportTask(Post#CancelImportTaskRequest) returns (CancelImportTaskResult) {
      option (google.api.http) = {
        post: "//#CancelImportTask"
        body: "body"
      };
    }
    // <p>Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CancelReservedInstancesListing(Post#CancelReservedInstancesListingRequest) returns (CancelReservedInstancesListingResult) {
      option (google.api.http) = {
        post: "//#CancelReservedInstancesListing"
        body: "body"
      };
    }
    // <p>Cancels the specified Spot fleet requests.</p> <p>After you cancel a Spot fleet request, the Spot fleet launches no new Spot instances. You must specify whether the Spot fleet should also terminate its Spot instances. If you terminate the instances, the Spot fleet request enters the <code>cancelled_terminating</code> state. Otherwise, the Spot fleet request enters the <code>cancelled_running</code> state and the instances continue to run until they are interrupted or you terminate them manually.</p>
    rpc Post#CancelSpotFleetRequests(Post#CancelSpotFleetRequestsRequest) returns (CancelSpotFleetRequestsResponse) {
      option (google.api.http) = {
        post: "//#CancelSpotFleetRequests"
        body: "body"
      };
    }
    // <p>Cancels one or more Spot instance requests. Spot instances are instances that Amazon EC2 starts on your behalf when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <important> <p>Canceling a Spot instance request does not terminate running Spot instances associated with the request.</p> </important>
    rpc Post#CancelSpotInstanceRequests(Post#CancelSpotInstanceRequestsRequest) returns (CancelSpotInstanceRequestsResult) {
      option (google.api.http) = {
        post: "//#CancelSpotInstanceRequests"
        body: "body"
      };
    }
    // Determines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner must verify whether another user's instance is eligible for support.
    rpc Post#ConfirmProductInstance(Post#ConfirmProductInstanceRequest) returns (ConfirmProductInstanceResult) {
      option (google.api.http) = {
        post: "//#ConfirmProductInstance"
        body: "body"
      };
    }
    // Copies the specified Amazon FPGA Image (AFI) to the current region.
    rpc Post#CopyFpgaImage(Post#CopyFpgaImageRequest) returns (CopyFpgaImageResult) {
      option (google.api.http) = {
        post: "//#CopyFpgaImage"
        body: "body"
      };
    }
    // <p>Initiates the copy of an AMI from the specified source region to the current region. You specify the destination region by using its endpoint when making the request.</p> <p>For more information about the prerequisites and limits when copying an AMI, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying an AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CopyImage(Post#CopyImageRequest) returns (CopyImageResult) {
      option (google.api.http) = {
        post: "//#CopyImage"
        body: "body"
      };
    }
    // <p>Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the snapshot within the same region or from one region to another. You can use the snapshot to create EBS volumes or Amazon Machine Images (AMIs). The snapshot is copied to the regional endpoint that you send the HTTP request to.</p> <p>Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted, unless the <code>Encrypted</code> flag is specified during the snapshot copy operation. By default, encrypted snapshot copies use the default AWS Key Management Service (AWS KMS) customer master key (CMK); however, you can specify a non-default CMK with the <code>KmsKeyId</code> parameter. </p> <note> <p>To copy an encrypted snapshot that has been shared from another account, you must have permissions for the CMK used to encrypt the snapshot.</p> </note> <note> <p>Snapshots created by the CopySnapshot action have an arbitrary volume ID that should not be used for any purpose.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CopySnapshot(Post#CopySnapshotRequest) returns (CopySnapshotResult) {
      option (google.api.http) = {
        post: "//#CopySnapshot"
        body: "body"
      };
    }
    // <p>Provides information to AWS about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the AWS side of the VPN connection is the virtual private gateway.) You must provide the Internet-routable IP address of the customer gateway's external interface. The IP address must be static and may be behind a device performing network address translation (NAT).</p> <p>For devices that use Border Gateway Protocol (BGP), you can also provide the device's BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534 range).</p> <note> <p>Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with the exception of 7224, which is reserved in the <code>us-east-1</code> region, and 9059, which is reserved in the <code>eu-west-1</code> region.</p> </note> <p>For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <important> <p>You cannot create more than one customer gateway with the same VPN type, IP address, and BGP ASN parameter values. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources.</p> </important>
    rpc Post#CreateCustomerGateway(Post#CreateCustomerGatewayRequest) returns (CreateCustomerGatewayResult) {
      option (google.api.http) = {
        post: "//#CreateCustomerGateway"
        body: "body"
      };
    }
    // <p>Creates a default VPC with a size <code>/16</code> IPv4 CIDR block and a default subnet in each Availability Zone. For more information about the components of a default VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html">Default VPC and Default Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. You cannot specify the components of the default VPC yourself.</p> <p>You can create a default VPC if you deleted your previous default VPC. You cannot have more than one default VPC per region. </p> <p>If your account supports EC2-Classic, you cannot use this action to create a default VPC in a region that supports EC2-Classic. If you want a default VPC in a region that supports EC2-Classic, see "I really want a default VPC for my existing EC2 account. Is that possible?" in the <a href="http://aws.amazon.com/vpc/faqs/#Default_VPCs">Default VPCs FAQ</a>.</p>
    rpc Post#CreateDefaultVpc(Post#CreateDefaultVpcRequest) returns (CreateDefaultVpcResult) {
      option (google.api.http) = {
        post: "//#CreateDefaultVpc"
        body: "body"
      };
    }
    // <p>Creates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> <ul> <li> <p> <code>domain-name-servers</code> - The IP addresses of up to four domain name servers, or AmazonProvidedDNS. The default DHCP option set specifies AmazonProvidedDNS. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas. If you want your instance to receive a custom DNS hostname as specified in <code>domain-name</code>, you must set <code>domain-name-servers</code> to a custom DNS server.</p> </li> <li> <p> <code>domain-name</code> - If you're using AmazonProvidedDNS in <code>us-east-1</code>, specify <code>ec2.internal</code>. If you're using AmazonProvidedDNS in another region, specify <code>region.compute.internal</code> (for example, <code>ap-northeast-1.compute.internal</code>). Otherwise, specify a domain name (for example, <code>MyCompany.com</code>). This value is used to complete unqualified DNS hostnames. <b>Important</b>: Some Linux operating systems accept multiple domain names separated by spaces. However, Windows and other Linux operating systems treat the value as a single domain, which results in unexpected behavior. If your DHCP options set is associated with a VPC that has instances with multiple operating systems, specify only one domain name.</p> </li> <li> <p> <code>ntp-servers</code> - The IP addresses of up to four Network Time Protocol (NTP) servers.</p> </li> <li> <p> <code>netbios-name-servers</code> - The IP addresses of up to four NetBIOS name servers.</p> </li> <li> <p> <code>netbios-node-type</code> - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported). For more information about these node types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>.</p> </li> </ul> <p>Your VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an Internet gateway, make sure to set the <code>domain-name-servers</code> option either to <code>AmazonProvidedDNS</code> or to a domain name server of your choice. For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateDhcpOptions(Post#CreateDhcpOptionsRequest) returns (CreateDhcpOptionsResult) {
      option (google.api.http) = {
        post: "//#CreateDhcpOptions"
        body: "body"
      };
    }
    // [IPv6 only] Creates an egress-only Internet gateway for your VPC. An egress-only Internet gateway is used to enable outbound communication over IPv6 from instances in your VPC to the Internet, and prevents hosts outside of your VPC from initiating an IPv6 connection with your instance.
    rpc Post#CreateEgressOnlyInternetGateway(Post#CreateEgressOnlyInternetGatewayRequest) returns (CreateEgressOnlyInternetGatewayResult) {
      option (google.api.http) = {
        post: "//#CreateEgressOnlyInternetGateway"
        body: "body"
      };
    }
    // <p>Creates one or more flow logs to capture IP traffic for a specific network interface, subnet, or VPC. Flow logs are delivered to a specified log group in Amazon CloudWatch Logs. If you specify a VPC or subnet in the request, a log stream is created in CloudWatch Logs for each network interface in the subnet or VPC. Log streams can include information about accepted and rejected traffic to a network interface. You can view the data in your log streams using Amazon CloudWatch Logs.</p> <p>In your request, you must also specify an IAM role that has permission to publish logs to CloudWatch Logs.</p>
    rpc Post#CreateFlowLogs(Post#CreateFlowLogsRequest) returns (CreateFlowLogsResult) {
      option (google.api.http) = {
        post: "//#CreateFlowLogs"
        body: "body"
      };
    }
    // <p>Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP).</p> <p>The create operation is asynchronous. To verify that the AFI is ready for use, check the output logs.</p> <p>An AFI contains the FPGA bitstream that is ready to download to an FPGA. You can securely deploy an AFI on one or more FPGA-accelerated instances. For more information, see the <a href="https://github.com/aws/aws-fpga/">AWS FPGA Hardware Development Kit</a>.</p>
    rpc Post#CreateFpgaImage(Post#CreateFpgaImageRequest) returns (CreateFpgaImageResult) {
      option (google.api.http) = {
        post: "//#CreateFpgaImage"
        body: "body"
      };
    }
    // <p>Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.</p> <p>If you customized your instance with instance store volumes or EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateImage(Post#CreateImageRequest) returns (CreateImageResult) {
      option (google.api.http) = {
        post: "//#CreateImage"
        body: "body"
      };
    }
    // <p>Exports a running or stopped instance to an S3 bucket.</p> <p>For information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html">Exporting an Instance as a VM Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.</p>
    rpc Post#CreateInstanceExportTask(Post#CreateInstanceExportTaskRequest) returns (CreateInstanceExportTaskResult) {
      option (google.api.http) = {
        post: "//#CreateInstanceExportTask"
        body: "body"
      };
    }
    // <p>Creates an Internet gateway for use with a VPC. After creating the Internet gateway, you attach it to a VPC using <a>AttachInternetGateway</a>.</p> <p>For more information about your VPC and Internet gateway, see the <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/">Amazon Virtual Private Cloud User Guide</a>.</p>
    rpc Post#CreateInternetGateway(Post#CreateInternetGatewayRequest) returns (CreateInternetGatewayResult) {
      option (google.api.http) = {
        post: "//#CreateInternetGateway"
        body: "body"
      };
    }
    // <p>Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name already exists, Amazon EC2 returns an error.</p> <p>You can have up to five thousand key pairs per region.</p> <p>The key pair returned to you is available only in the region in which you create it. To create a key pair that is available in all regions, use <a>ImportKeyPair</a>.</p> <p>For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateKeyPair(Post#CreateKeyPairRequest) returns (KeyPair) {
      option (google.api.http) = {
        post: "//#CreateKeyPair"
        body: "body"
      };
    }
    // Creates a NAT gateway in the specified subnet. A NAT gateway can be used to enable instances in a private subnet to connect to the Internet. This action creates a network interface in the specified subnet with a private IP address from the IP address range of the subnet. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">NAT Gateways</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    rpc Post#CreateNatGateway(Post#CreateNatGatewayRequest) returns (CreateNatGatewayResult) {
      option (google.api.http) = {
        post: "//#CreateNatGateway"
        body: "body"
      };
    }
    // <p>Creates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateNetworkAcl(Post#CreateNetworkAclRequest) returns (CreateNetworkAclResult) {
      option (google.api.http) = {
        post: "//#CreateNetworkAcl"
        body: "body"
      };
    }
    // <p>Creates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.</p> <p>We recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.</p> <p>After you add an entry, you can't modify it; you must either replace it, or create an entry and delete the old one.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateNetworkAclEntry(Post#CreateNetworkAclEntryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateNetworkAclEntry"
        body: "body"
      };
    }
    // <p>Creates a network interface in the specified subnet.</p> <p>For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateNetworkInterface(Post#CreateNetworkInterfaceRequest) returns (CreateNetworkInterfaceResult) {
      option (google.api.http) = {
        post: "//#CreateNetworkInterface"
        body: "body"
      };
    }
    // <p>Grants an AWS authorized partner account permission to attach the specified network interface to an instance in their account.</p> <p>You can grant permission to a single AWS account only, and only one account at a time.</p>
    rpc Post#CreateNetworkInterfacePermission(Post#CreateNetworkInterfacePermissionRequest) returns (CreateNetworkInterfacePermissionResult) {
      option (google.api.http) = {
        post: "//#CreateNetworkInterfacePermission"
        body: "body"
      };
    }
    // <p>Creates a placement group that you launch cluster instances into. Give the group a name that's unique within the scope of your account.</p> <p>For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreatePlacementGroup(Post#CreatePlacementGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreatePlacementGroup"
        body: "body"
      };
    }
    // <p>Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Standard Reserved Instance listing at a time. To get a list of your Standard Reserved Instances, you can use the <a>DescribeReservedInstances</a> operation.</p> <note> <p>Only Standard Reserved Instances with a capacity reservation can be sold in the Reserved Instance Marketplace. Convertible Reserved Instances and Standard Reserved Instances with a regional benefit cannot be sold.</p> </note> <p>The Reserved Instance Marketplace matches sellers who want to resell Standard Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>To sell your Standard Reserved Instances, you must first register as a seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Standard Reserved Instances, and specify the upfront price to receive for them. Your Standard Reserved Instance listings then become available for purchase. To view the details of your Standard Reserved Instance listing, you can use the <a>DescribeReservedInstancesListings</a> operation.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateReservedInstancesListing(Post#CreateReservedInstancesListingRequest) returns (CreateReservedInstancesListingResult) {
      option (google.api.http) = {
        post: "//#CreateReservedInstancesListing"
        body: "body"
      };
    }
    // <p>Creates a route in a route table within a VPC.</p> <p>You must specify one of the following targets: Internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, or egress-only Internet gateway.</p> <p>When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address <code>192.0.2.3</code>, and the route table includes the following two IPv4 routes:</p> <ul> <li> <p> <code>192.0.2.0/24</code> (goes to some target A)</p> </li> <li> <p> <code>192.0.2.0/28</code> (goes to some target B)</p> </li> </ul> <p>Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateRoute(Post#CreateRouteRequest) returns (CreateRouteResult) {
      option (google.api.http) = {
        post: "//#CreateRoute"
        body: "body"
      };
    }
    // <p>Creates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateRouteTable(Post#CreateRouteTableRequest) returns (CreateRouteTableResult) {
      option (google.api.http) = {
        post: "//#CreateRouteTable"
        body: "body"
      };
    }
    // <p>Creates a security group.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <important> <p>EC2-Classic: You can have up to 500 security groups.</p> <p>EC2-VPC: You can create up to 500 security groups per VPC.</p> </important> <p>When you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can't have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.</p> <p>You have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don't specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.</p> <p>You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>, <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.</p>
    rpc Post#CreateSecurityGroup(Post#CreateSecurityGroupRequest) returns (CreateSecurityGroupResult) {
      option (google.api.http) = {
        post: "//#CreateSecurityGroup"
        body: "body"
      };
    }
    // <p>Creates a snapshot of an EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of EBS volumes, and to save data before shutting down an instance.</p> <p>When a snapshot is created, any AWS Marketplace product codes that are associated with the source volume are propagated to the snapshot.</p> <p>You can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your EBS volume at the time the snapshot command is issued; this may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is <code>pending</code>.</p> <p>To create a snapshot for EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</p> <p>Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateSnapshot(Post#CreateSnapshotRequest) returns (Snapshot) {
      option (google.api.http) = {
        post: "//#CreateSnapshot"
        body: "body"
      };
    }
    // Creates a data feed for Spot instances, enabling you to view Spot instance usage logs. You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#CreateSpotDatafeedSubscription(Post#CreateSpotDatafeedSubscriptionRequest) returns (CreateSpotDatafeedSubscriptionResult) {
      option (google.api.http) = {
        post: "//#CreateSpotDatafeedSubscription"
        body: "body"
      };
    }
    // <p>Creates a subnet in an existing VPC.</p> <p>When you create each subnet, you provide the VPC ID and the IPv4 CIDR block you want for the subnet. After you create a subnet, you can't change its CIDR block. The size of the subnet's IPv4 CIDR block can be the same as a VPC's IPv4 CIDR block, or a subset of a VPC's IPv4 CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest IPv4 subnet (and VPC) you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses).</p> <p>If you've associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length. </p> <important> <p>AWS reserves both the first four and the last IPv4 address in each subnet's CIDR block. They're not available for use.</p> </important> <p>If you add more than one subnet to a VPC, they're set up in a star topology with a logical router in the middle.</p> <p>If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address doesn't change if you stop and restart the instance (unlike a similar instance launched outside a VPC, which gets a new IP address when restarted). It's therefore possible to have a subnet with no running instances (they're all stopped), but no remaining IP addresses available.</p> <p>For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateSubnet(Post#CreateSubnetRequest) returns (CreateSubnetResult) {
      option (google.api.http) = {
        post: "//#CreateSubnet"
        body: "body"
      };
    }
    // <p>Adds or overwrites one or more tags for the specified Amazon EC2 resource or resources. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about creating IAM policies that control users' access to resources based on tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html">Supported Resource-Level Permissions for Amazon EC2 API Actions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateTags(Post#CreateTagsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateTags"
        body: "body"
      };
    }
    // <p>Creates an EBS volume that can be attached to an instance in the same Availability Zone. The volume is created in the regional endpoint that you send the HTTP request to. For more information see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a>.</p> <p>You can create a new empty volume or restore a volume from an EBS snapshot. Any AWS Marketplace product codes from the snapshot are propagated to the volume.</p> <p>You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can tag your volumes during creation. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateVolume(Post#CreateVolumeRequest) returns (Volume) {
      option (google.api.http) = {
        post: "//#CreateVolume"
        body: "body"
      };
    }
    // <p>Creates a VPC with the specified IPv4 CIDR block. The smallest VPC you can create uses a /28 netmask (16 IPv4 addresses), and the largest uses a /16 netmask (65,536 IPv4 addresses). To help you decide how big to make your VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can optionally request an Amazon-provided IPv6 CIDR block for the VPC. The IPv6 CIDR block uses a /56 prefix length, and is allocated from Amazon's pool of IPv6 addresses. You cannot choose the IPv6 range for your VPC.</p> <p>By default, each instance you launch in the VPC has the default DHCP options, which includes only a default DNS server that we provide (AmazonProvidedDNS). For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can specify the instance tenancy value for the VPC when you create it. You can't change this value for the VPC after you create it. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#CreateVpc(Post#CreateVpcRequest) returns (CreateVpcResult) {
      option (google.api.http) = {
        post: "//#CreateVpc"
        body: "body"
      };
    }
    // <p>Creates a VPC endpoint for a specified AWS service. An endpoint enables you to create a private connection between your VPC and another AWS service in your account. You can specify an endpoint policy to attach to the endpoint that will control access to the service from your VPC. You can also specify the VPC route tables that use the endpoint.</p> <p>Use <a>DescribeVpcEndpointServices</a> to get a list of supported AWS services.</p>
    rpc Post#CreateVpcEndpoint(Post#CreateVpcEndpointRequest) returns (CreateVpcEndpointResult) {
      option (google.api.http) = {
        post: "//#CreateVpcEndpoint"
        body: "body"
      };
    }
    // <p>Requests a VPC peering connection between two VPCs: a requester VPC that you own and a peer VPC with which to create the connection. The peer VPC can belong to another AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.</p> <p>The owner of the peer VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.</p> <p>If you try to create a VPC peering connection between VPCs that have overlapping CIDR blocks, the VPC peering connection status goes to <code>failed</code>.</p>
    rpc Post#CreateVpcPeeringConnection(Post#CreateVpcPeeringConnectionRequest) returns (CreateVpcPeeringConnectionResult) {
      option (google.api.http) = {
        post: "//#CreateVpcPeeringConnection"
        body: "body"
      };
    }
    // <p>Creates a VPN connection between an existing virtual private gateway and a VPN customer gateway. The only supported connection type is <code>ipsec.1</code>.</p> <p>The response includes information that you need to give to your network administrator to configure your customer gateway.</p> <important> <p>We strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway.</p> </important> <p>If you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">AWS Managed VPN Connections</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateVpnConnection(Post#CreateVpnConnectionRequest) returns (CreateVpnConnectionResult) {
      option (google.api.http) = {
        post: "//#CreateVpnConnection"
        body: "body"
      };
    }
    // <p>Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.</p> <p>For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateVpnConnectionRoute(Post#CreateVpnConnectionRouteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#CreateVpnConnectionRoute"
        body: "body"
      };
    }
    // <p>Creates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.</p> <p>For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#CreateVpnGateway(Post#CreateVpnGatewayRequest) returns (CreateVpnGatewayResult) {
      option (google.api.http) = {
        post: "//#CreateVpnGateway"
        body: "body"
      };
    }
    // Deletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.
    rpc Post#DeleteCustomerGateway(Post#DeleteCustomerGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteCustomerGateway"
        body: "body"
      };
    }
    // Deletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.
    rpc Post#DeleteDhcpOptions(Post#DeleteDhcpOptionsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteDhcpOptions"
        body: "body"
      };
    }
    // Deletes an egress-only Internet gateway.
    rpc Post#DeleteEgressOnlyInternetGateway(Post#DeleteEgressOnlyInternetGatewayRequest) returns (DeleteEgressOnlyInternetGatewayResult) {
      option (google.api.http) = {
        post: "//#DeleteEgressOnlyInternetGateway"
        body: "body"
      };
    }
    // Deletes one or more flow logs.
    rpc Post#DeleteFlowLogs(Post#DeleteFlowLogsRequest) returns (DeleteFlowLogsResult) {
      option (google.api.http) = {
        post: "//#DeleteFlowLogs"
        body: "body"
      };
    }
    // Deletes the specified Amazon FPGA Image (AFI).
    rpc Post#DeleteFpgaImage(Post#DeleteFpgaImageRequest) returns (DeleteFpgaImageResult) {
      option (google.api.http) = {
        post: "//#DeleteFpgaImage"
        body: "body"
      };
    }
    // Deletes the specified Internet gateway. You must detach the Internet gateway from the VPC before you can delete it.
    rpc Post#DeleteInternetGateway(Post#DeleteInternetGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteInternetGateway"
        body: "body"
      };
    }
    // Deletes the specified key pair, by removing the public key from Amazon EC2.
    rpc Post#DeleteKeyPair(Post#DeleteKeyPairRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteKeyPair"
        body: "body"
      };
    }
    // Deletes the specified NAT gateway. Deleting a NAT gateway disassociates its Elastic IP address, but does not release the address from your account. Deleting a NAT gateway does not delete any NAT gateway routes in your route tables.
    rpc Post#DeleteNatGateway(Post#DeleteNatGatewayRequest) returns (DeleteNatGatewayResult) {
      option (google.api.http) = {
        post: "//#DeleteNatGateway"
        body: "body"
      };
    }
    // Deletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.
    rpc Post#DeleteNetworkAcl(Post#DeleteNetworkAclRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteNetworkAcl"
        body: "body"
      };
    }
    // Deletes the specified ingress or egress entry (rule) from the specified network ACL.
    rpc Post#DeleteNetworkAclEntry(Post#DeleteNetworkAclEntryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteNetworkAclEntry"
        body: "body"
      };
    }
    // Deletes the specified network interface. You must detach the network interface before you can delete it.
    rpc Post#DeleteNetworkInterface(Post#DeleteNetworkInterfaceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteNetworkInterface"
        body: "body"
      };
    }
    // Deletes a permission for a network interface. By default, you cannot delete the permission if the account for which you're removing the permission has attached the network interface to an instance. However, you can force delete the permission, regardless of any attachment.
    rpc Post#DeleteNetworkInterfacePermission(Post#DeleteNetworkInterfacePermissionRequest) returns (DeleteNetworkInterfacePermissionResult) {
      option (google.api.http) = {
        post: "//#DeleteNetworkInterfacePermission"
        body: "body"
      };
    }
    // Deletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#DeletePlacementGroup(Post#DeletePlacementGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeletePlacementGroup"
        body: "body"
      };
    }
    // Deletes the specified route from the specified route table.
    rpc Post#DeleteRoute(Post#DeleteRouteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteRoute"
        body: "body"
      };
    }
    // Deletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.
    rpc Post#DeleteRouteTable(Post#DeleteRouteTableRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteRouteTable"
        body: "body"
      };
    }
    // <p>Deletes a security group.</p> <p>If you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code> in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.</p>
    rpc Post#DeleteSecurityGroup(Post#DeleteSecurityGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteSecurityGroup"
        body: "body"
      };
    }
    // <p>Deletes the specified snapshot.</p> <p>When you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.</p> <p>You cannot delete a snapshot of the root device of an EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DeleteSnapshot(Post#DeleteSnapshotRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteSnapshot"
        body: "body"
      };
    }
    // Deletes the data feed for Spot instances.
    rpc Post#DeleteSpotDatafeedSubscription(Post#DeleteSpotDatafeedSubscriptionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteSpotDatafeedSubscription"
        body: "body"
      };
    }
    // Deletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.
    rpc Post#DeleteSubnet(Post#DeleteSubnetRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteSubnet"
        body: "body"
      };
    }
    // <p>Deletes the specified set of tags from the specified set of resources.</p> <p>To list the current tags, use <a>DescribeTags</a>. For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DeleteTags(Post#DeleteTagsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteTags"
        body: "body"
      };
    }
    // <p>Deletes the specified EBS volume. The volume must be in the <code>available</code> state (not attached to an instance).</p> <note> <p>The volume may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DeleteVolume(Post#DeleteVolumeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteVolume"
        body: "body"
      };
    }
    // Deletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.
    rpc Post#DeleteVpc(Post#DeleteVpcRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteVpc"
        body: "body"
      };
    }
    // Deletes one or more specified VPC endpoints. Deleting the endpoint also deletes the endpoint routes in the route tables that were associated with the endpoint.
    rpc Post#DeleteVpcEndpoints(Post#DeleteVpcEndpointsRequest) returns (DeleteVpcEndpointsResult) {
      option (google.api.http) = {
        post: "//#DeleteVpcEndpoints"
        body: "body"
      };
    }
    // Deletes a VPC peering connection. Either the owner of the requester VPC or the owner of the peer VPC can delete the VPC peering connection if it's in the <code>active</code> state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code> state.
    rpc Post#DeleteVpcPeeringConnection(Post#DeleteVpcPeeringConnectionRequest) returns (DeleteVpcPeeringConnectionResult) {
      option (google.api.http) = {
        post: "//#DeleteVpcPeeringConnection"
        body: "body"
      };
    }
    // <p>Deletes the specified VPN connection.</p> <p>If you're deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway using the new configuration information returned with the new VPN connection ID.</p>
    rpc Post#DeleteVpnConnection(Post#DeleteVpnConnectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteVpnConnection"
        body: "body"
      };
    }
    // Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.
    rpc Post#DeleteVpnConnectionRoute(Post#DeleteVpnConnectionRouteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteVpnConnectionRoute"
        body: "body"
      };
    }
    // Deletes the specified virtual private gateway. We recommend that before you delete a virtual private gateway, you detach it from the VPC and delete the VPN connection. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.
    rpc Post#DeleteVpnGateway(Post#DeleteVpnGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteVpnGateway"
        body: "body"
      };
    }
    // <p>Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances; however, it doesn't affect any instances that you've already launched from the AMI. You'll continue to incur usage costs for those instances until you terminate them.</p> <p>When you deregister an Amazon EBS-backed AMI, it doesn't affect the snapshot that was created for the root volume of the instance during the AMI creation process. When you deregister an instance store-backed AMI, it doesn't affect the files that you uploaded to Amazon S3 when you created the AMI.</p>
    rpc Post#DeregisterImage(Post#DeregisterImageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeregisterImage"
        body: "body"
      };
    }
    // <p>Describes attributes of your AWS account. The following are the supported account attributes:</p> <ul> <li> <p> <code>supported-platforms</code>: Indicates whether your account can launch instances into EC2-Classic and EC2-VPC, or only into EC2-VPC.</p> </li> <li> <p> <code>default-vpc</code>: The ID of the default VPC for your account, or <code>none</code>.</p> </li> <li> <p> <code>max-instances</code>: The maximum number of On-Demand instances that you can run.</p> </li> <li> <p> <code>vpc-max-security-groups-per-interface</code>: The maximum number of security groups that you can assign to a network interface.</p> </li> <li> <p> <code>max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-Classic. </p> </li> <li> <p> <code>vpc-max-elastic-ips</code>: The maximum number of Elastic IP addresses that you can allocate for use with EC2-VPC.</p> </li> </ul>
    rpc Post#DescribeAccountAttributes(Post#DescribeAccountAttributesRequest) returns (DescribeAccountAttributesResult) {
      option (google.api.http) = {
        post: "//#DescribeAccountAttributes"
        body: "body"
      };
    }
    // <p>Describes one or more of your Elastic IP addresses.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeAddresses(Post#DescribeAddressesRequest) returns (DescribeAddressesResult) {
      option (google.api.http) = {
        post: "//#DescribeAddresses"
        body: "body"
      };
    }
    // <p>Describes one or more of the Availability Zones that are available to you. The results include zones only for the region you're currently using. If there is an event impacting an Availability Zone, you can use this request to view the state and any provided message for that Availability Zone.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeAvailabilityZones(Post#DescribeAvailabilityZonesRequest) returns (DescribeAvailabilityZonesResult) {
      option (google.api.http) = {
        post: "//#DescribeAvailabilityZones"
        body: "body"
      };
    }
    // <p>Describes one or more of your bundling tasks.</p> <note> <p>Completed bundle tasks are listed for only a limited time. If your bundle task is no longer in the list, you can still register an AMI from it. Just use <code>RegisterImage</code> with the Amazon S3 bucket name and image manifest name you provided to the bundle task.</p> </note>
    rpc Post#DescribeBundleTasks(Post#DescribeBundleTasksRequest) returns (DescribeBundleTasksResult) {
      option (google.api.http) = {
        post: "//#DescribeBundleTasks"
        body: "body"
      };
    }
    // Describes one or more of your linked EC2-Classic instances. This request only returns information about EC2-Classic instances linked to a VPC through ClassicLink; you cannot use this request to return information about other instances.
    rpc Post#DescribeClassicLinkInstances(Post#DescribeClassicLinkInstancesRequest) returns (DescribeClassicLinkInstancesResult) {
      option (google.api.http) = {
        post: "//#DescribeClassicLinkInstances"
        body: "body"
      };
    }
    // <p>Describes one or more of your conversion tasks. For more information, see the <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/">VM Import/Export User Guide</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    rpc Post#DescribeConversionTasks(Post#DescribeConversionTasksRequest) returns (DescribeConversionTasksResult) {
      option (google.api.http) = {
        post: "//#DescribeConversionTasks"
        body: "body"
      };
    }
    // <p>Describes one or more of your VPN customer gateways.</p> <p>For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeCustomerGateways(Post#DescribeCustomerGatewaysRequest) returns (DescribeCustomerGatewaysResult) {
      option (google.api.http) = {
        post: "//#DescribeCustomerGateways"
        body: "body"
      };
    }
    // <p>Describes one or more of your DHCP options sets.</p> <p>For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeDhcpOptions(Post#DescribeDhcpOptionsRequest) returns (DescribeDhcpOptionsResult) {
      option (google.api.http) = {
        post: "//#DescribeDhcpOptions"
        body: "body"
      };
    }
    // Describes one or more of your egress-only Internet gateways.
    rpc Post#DescribeEgressOnlyInternetGateways(Post#DescribeEgressOnlyInternetGatewaysRequest) returns (DescribeEgressOnlyInternetGatewaysResult) {
      option (google.api.http) = {
        post: "//#DescribeEgressOnlyInternetGateways"
        body: "body"
      };
    }
    // Describes the Elastic GPUs associated with your instances. For more information about Elastic GPUs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-gpus.html">Amazon EC2 Elastic GPUs</a>.
    rpc Post#DescribeElasticGpus(Post#DescribeElasticGpusRequest) returns (DescribeElasticGpusResult) {
      option (google.api.http) = {
        post: "//#DescribeElasticGpus"
        body: "body"
      };
    }
    // Describes one or more of your export tasks.
    rpc Post#DescribeExportTasks(Post#DescribeExportTasksRequest) returns (DescribeExportTasksResult) {
      option (google.api.http) = {
        post: "//#DescribeExportTasks"
        body: "body"
      };
    }
    // Describes one or more flow logs. To view the information in your flow logs (the log streams for the network interfaces), you must use the CloudWatch Logs console or the CloudWatch Logs API.
    rpc Post#DescribeFlowLogs(Post#DescribeFlowLogsRequest) returns (DescribeFlowLogsResult) {
      option (google.api.http) = {
        post: "//#DescribeFlowLogs"
        body: "body"
      };
    }
    // Describes the specified attribute of the specified Amazon FPGA Image (AFI).
    rpc Post#DescribeFpgaImageAttribute(Post#DescribeFpgaImageAttributeRequest) returns (DescribeFpgaImageAttributeResult) {
      option (google.api.http) = {
        post: "//#DescribeFpgaImageAttribute"
        body: "body"
      };
    }
    // Describes one or more available Amazon FPGA Images (AFIs). These include public AFIs, private AFIs that you own, and AFIs owned by other AWS accounts for which you have load permissions.
    rpc Post#DescribeFpgaImages(Post#DescribeFpgaImagesRequest) returns (DescribeFpgaImagesResult) {
      option (google.api.http) = {
        post: "//#DescribeFpgaImages"
        body: "body"
      };
    }
    // <p>Describes the Dedicated Host Reservations that are available to purchase.</p> <p>The results describe all the Dedicated Host Reservation offerings, including offerings that may not match the instance family and region of your Dedicated Hosts. When purchasing an offering, ensure that the the instance family and region of the offering matches that of the Dedicated Host/s it will be associated with. For an overview of supported instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html">Dedicated Hosts Overview</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p>
    rpc Post#DescribeHostReservationOfferings(Post#DescribeHostReservationOfferingsRequest) returns (DescribeHostReservationOfferingsResult) {
      option (google.api.http) = {
        post: "//#DescribeHostReservationOfferings"
        body: "body"
      };
    }
    // Describes Dedicated Host Reservations which are associated with Dedicated Hosts in your account.
    rpc Post#DescribeHostReservations(Post#DescribeHostReservationsRequest) returns (DescribeHostReservationsResult) {
      option (google.api.http) = {
        post: "//#DescribeHostReservations"
        body: "body"
      };
    }
    // <p>Describes one or more of your Dedicated Hosts.</p> <p>The results describe only the Dedicated Hosts in the region you're currently using. All listed instances consume capacity on your Dedicated Host. Dedicated Hosts that have recently been released will be listed with the state <code>released</code>.</p>
    rpc Post#DescribeHosts(Post#DescribeHostsRequest) returns (DescribeHostsResult) {
      option (google.api.http) = {
        post: "//#DescribeHosts"
        body: "body"
      };
    }
    // Describes your IAM instance profile associations.
    rpc Post#DescribeIamInstanceProfileAssociations(Post#DescribeIamInstanceProfileAssociationsRequest) returns (DescribeIamInstanceProfileAssociationsResult) {
      option (google.api.http) = {
        post: "//#DescribeIamInstanceProfileAssociations"
        body: "body"
      };
    }
    // <p>Describes the ID format settings for your resources on a per-region basis, for example, to view which resource types are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types.</p> <p>The following resource types support longer IDs: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>. </p> <p>These settings apply to the IAM user who makes the request; they do not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user, unless they explicitly override the settings by running the <a>ModifyIdFormat</a> command. Resources created with longer IDs are visible to all IAM users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
    rpc Post#DescribeIdFormat(Post#DescribeIdFormatRequest) returns (DescribeIdFormatResult) {
      option (google.api.http) = {
        post: "//#DescribeIdFormat"
        body: "body"
      };
    }
    // <p>Describes the ID format settings for resources for the specified IAM user, IAM role, or root user. For example, you can view the resource types that are enabled for longer IDs. This request only returns information about resource types whose ID formats can be modified; it does not return information about other resource types. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>The following resource types support longer IDs: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>. </p> <p>These settings apply to the principal specified in the request. They do not apply to the principal that makes the request.</p>
    rpc Post#DescribeIdentityIdFormat(Post#DescribeIdentityIdFormatRequest) returns (DescribeIdentityIdFormatResult) {
      option (google.api.http) = {
        post: "//#DescribeIdentityIdFormat"
        body: "body"
      };
    }
    // Describes the specified attribute of the specified AMI. You can specify only one attribute at a time.
    rpc Post#DescribeImageAttribute(Post#DescribeImageAttributeRequest) returns (ImageAttribute) {
      option (google.api.http) = {
        post: "//#DescribeImageAttribute"
        body: "body"
      };
    }
    // <p>Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images available to you include public images, private images that you own, and private images owned by other AWS accounts but for which you have explicit launch permissions.</p> <note> <p>Deregistered images are included in the returned results for an unspecified interval after deregistration.</p> </note>
    rpc Post#DescribeImages(Post#DescribeImagesRequest) returns (DescribeImagesResult) {
      option (google.api.http) = {
        post: "//#DescribeImages"
        body: "body"
      };
    }
    // Displays details about an import virtual machine or import snapshot tasks that are already created.
    rpc Post#DescribeImportImageTasks(Post#DescribeImportImageTasksRequest) returns (DescribeImportImageTasksResult) {
      option (google.api.http) = {
        post: "//#DescribeImportImageTasks"
        body: "body"
      };
    }
    // Describes your import snapshot tasks.
    rpc Post#DescribeImportSnapshotTasks(Post#DescribeImportSnapshotTasksRequest) returns (DescribeImportSnapshotTasksResult) {
      option (google.api.http) = {
        post: "//#DescribeImportSnapshotTasks"
        body: "body"
      };
    }
    // Describes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: <code>instanceType</code> | <code>kernel</code> | <code>ramdisk</code> | <code>userData</code> | <code>disableApiTermination</code> | <code>instanceInitiatedShutdownBehavior</code> | <code>rootDeviceName</code> | <code>blockDeviceMapping</code> | <code>productCodes</code> | <code>sourceDestCheck</code> | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code>
    rpc Post#DescribeInstanceAttribute(Post#DescribeInstanceAttributeRequest) returns (InstanceAttribute) {
      option (google.api.http) = {
        post: "//#DescribeInstanceAttribute"
        body: "body"
      };
    }
    // <p>Describes the status of one or more instances. By default, only running instances are described, unless you specifically indicate to return the status of all instances.</p> <p>Instance status includes the following components:</p> <ul> <li> <p> <b>Status checks</b> - Amazon EC2 performs status checks on running EC2 instances to identify hardware and software issues. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html">Status Checks for Your Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <b>Scheduled events</b> - Amazon EC2 can schedule events (such as reboot, stop, or terminate) for your instances related to hardware issues, software updates, or system maintenance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html">Scheduled Events for Your Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <b>Instance state</b> - You can manage your instances from the moment you launch them through their termination. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> </ul>
    rpc Post#DescribeInstanceStatus(Post#DescribeInstanceStatusRequest) returns (DescribeInstanceStatusResult) {
      option (google.api.http) = {
        post: "//#DescribeInstanceStatus"
        body: "body"
      };
    }
    // <p>Describes one or more of your instances.</p> <p>If you specify one or more instance IDs, Amazon EC2 returns information for those instances. If you do not specify instance IDs, Amazon EC2 returns information for all relevant instances. If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the returned results.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>
    rpc Post#DescribeInstances(Post#DescribeInstancesRequest) returns (DescribeInstancesResult) {
      option (google.api.http) = {
        post: "//#DescribeInstances"
        body: "body"
      };
    }
    // Describes one or more of your Internet gateways.
    rpc Post#DescribeInternetGateways(Post#DescribeInternetGatewaysRequest) returns (DescribeInternetGatewaysResult) {
      option (google.api.http) = {
        post: "//#DescribeInternetGateways"
        body: "body"
      };
    }
    // <p>Describes one or more of your key pairs.</p> <p>For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeKeyPairs(Post#DescribeKeyPairsRequest) returns (DescribeKeyPairsResult) {
      option (google.api.http) = {
        post: "//#DescribeKeyPairs"
        body: "body"
      };
    }
    // Describes your Elastic IP addresses that are being moved to the EC2-VPC platform, or that are being restored to the EC2-Classic platform. This request does not return information about any other Elastic IP addresses in your account.
    rpc Post#DescribeMovingAddresses(Post#DescribeMovingAddressesRequest) returns (DescribeMovingAddressesResult) {
      option (google.api.http) = {
        post: "//#DescribeMovingAddresses"
        body: "body"
      };
    }
    // Describes one or more of the your NAT gateways.
    rpc Post#DescribeNatGateways(Post#DescribeNatGatewaysRequest) returns (DescribeNatGatewaysResult) {
      option (google.api.http) = {
        post: "//#DescribeNatGateways"
        body: "body"
      };
    }
    // <p>Describes one or more of your network ACLs.</p> <p>For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeNetworkAcls(Post#DescribeNetworkAclsRequest) returns (DescribeNetworkAclsResult) {
      option (google.api.http) = {
        post: "//#DescribeNetworkAcls"
        body: "body"
      };
    }
    // Describes a network interface attribute. You can specify only one attribute at a time.
    rpc Post#DescribeNetworkInterfaceAttribute(Post#DescribeNetworkInterfaceAttributeRequest) returns (DescribeNetworkInterfaceAttributeResult) {
      option (google.api.http) = {
        post: "//#DescribeNetworkInterfaceAttribute"
        body: "body"
      };
    }
    // Describes the permissions for your network interfaces.
    rpc Post#DescribeNetworkInterfacePermissions(Post#DescribeNetworkInterfacePermissionsRequest) returns (DescribeNetworkInterfacePermissionsResult) {
      option (google.api.http) = {
        post: "//#DescribeNetworkInterfacePermissions"
        body: "body"
      };
    }
    // Describes one or more of your network interfaces.
    rpc Post#DescribeNetworkInterfaces(Post#DescribeNetworkInterfacesRequest) returns (DescribeNetworkInterfacesResult) {
      option (google.api.http) = {
        post: "//#DescribeNetworkInterfaces"
        body: "body"
      };
    }
    // Describes one or more of your placement groups. For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#DescribePlacementGroups(Post#DescribePlacementGroupsRequest) returns (DescribePlacementGroupsResult) {
      option (google.api.http) = {
        post: "//#DescribePlacementGroups"
        body: "body"
      };
    }
    // Describes available AWS services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service. A prefix list ID is required for creating an outbound security group rule that allows traffic from a VPC to access an AWS service through a VPC endpoint.
    rpc Post#DescribePrefixLists(Post#DescribePrefixListsRequest) returns (DescribePrefixListsResult) {
      option (google.api.http) = {
        post: "//#DescribePrefixLists"
        body: "body"
      };
    }
    // <p>Describes one or more regions that are currently available to you.</p> <p>For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions and Endpoints</a>.</p>
    rpc Post#DescribeRegions(Post#DescribeRegionsRequest) returns (DescribeRegionsResult) {
      option (google.api.http) = {
        post: "//#DescribeRegions"
        body: "body"
      };
    }
    // <p>Describes one or more of the Reserved Instances that you purchased.</p> <p>For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeReservedInstances(Post#DescribeReservedInstancesRequest) returns (DescribeReservedInstancesResult) {
      option (google.api.http) = {
        post: "//#DescribeReservedInstances"
        body: "body"
      };
    }
    // <p>Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.</p> <p>The Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances.</p> <p>As a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase.</p> <p>As a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you're searching for with what's available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeReservedInstancesListings(Post#DescribeReservedInstancesListingsRequest) returns (DescribeReservedInstancesListingsResult) {
      option (google.api.http) = {
        post: "//#DescribeReservedInstancesListings"
        body: "body"
      };
    }
    // <p>Describes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.</p>
    rpc Post#DescribeReservedInstancesModifications(Post#DescribeReservedInstancesModificationsRequest) returns (DescribeReservedInstancesModificationsResult) {
      option (google.api.http) = {
        post: "//#DescribeReservedInstancesModifications"
        body: "body"
      };
    }
    // <p>Describes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.</p> <p>If you have listed your own Reserved Instances for sale in the Reserved Instance Marketplace, they will be excluded from these results. This is to ensure that you do not purchase your own Reserved Instances.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeReservedInstancesOfferings(Post#DescribeReservedInstancesOfferingsRequest) returns (DescribeReservedInstancesOfferingsResult) {
      option (google.api.http) = {
        post: "//#DescribeReservedInstancesOfferings"
        body: "body"
      };
    }
    // <p>Describes one or more of your route tables.</p> <p>Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeRouteTables(Post#DescribeRouteTablesRequest) returns (DescribeRouteTablesResult) {
      option (google.api.http) = {
        post: "//#DescribeRouteTables"
        body: "body"
      };
    }
    // <p>Finds available schedules that meet the specified criteria.</p> <p>You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p> <p>After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.</p>
    rpc Post#DescribeScheduledInstanceAvailability(Post#DescribeScheduledInstanceAvailabilityRequest) returns (DescribeScheduledInstanceAvailabilityResult) {
      option (google.api.http) = {
        post: "//#DescribeScheduledInstanceAvailability"
        body: "body"
      };
    }
    // Describes one or more of your Scheduled Instances.
    rpc Post#DescribeScheduledInstances(Post#DescribeScheduledInstancesRequest) returns (DescribeScheduledInstancesResult) {
      option (google.api.http) = {
        post: "//#DescribeScheduledInstances"
        body: "body"
      };
    }
    // [EC2-VPC only] Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you've specified in this request.
    rpc Post#DescribeSecurityGroupReferences(Post#DescribeSecurityGroupReferencesRequest) returns (DescribeSecurityGroupReferencesResult) {
      option (google.api.http) = {
        post: "//#DescribeSecurityGroupReferences"
        body: "body"
      };
    }
    // <p>Describes one or more of your security groups.</p> <p>A security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeSecurityGroups(Post#DescribeSecurityGroupsRequest) returns (DescribeSecurityGroupsResult) {
      option (google.api.http) = {
        post: "//#DescribeSecurityGroups"
        body: "body"
      };
    }
    // <p>Describes the specified attribute of the specified snapshot. You can specify only one attribute at a time.</p> <p>For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeSnapshotAttribute(Post#DescribeSnapshotAttributeRequest) returns (DescribeSnapshotAttributeResult) {
      option (google.api.http) = {
        post: "//#DescribeSnapshotAttribute"
        body: "body"
      };
    }
    // <p>Describes one or more of the EBS snapshots available to you. Available snapshots include public snapshots available for any AWS account to launch, private snapshots that you own, and private snapshots owned by another AWS account but for which you've been given explicit create volume permissions.</p> <p>The create volume permissions fall into the following categories:</p> <ul> <li> <p> <i>public</i>: The owner of the snapshot granted create volume permissions for the snapshot to the <code>all</code> group. All AWS accounts have create volume permissions for these snapshots.</p> </li> <li> <p> <i>explicit</i>: The owner of the snapshot granted create volume permissions to a specific AWS account.</p> </li> <li> <p> <i>implicit</i>: An AWS account has implicit create volume permissions for all snapshots it owns.</p> </li> </ul> <p>The list of snapshots returned can be modified by specifying snapshot IDs, snapshot owners, or AWS accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.</p> <p>If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.</p> <p>If you specify one or more snapshot owners using the <code>OwnerIds</code> option, only snapshots from the specified owners and for which you have access are returned. The results can include the AWS account IDs of the specified owners, <code>amazon</code> for snapshots owned by Amazon, or <code>self</code> for snapshots that you own.</p> <p>If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify AWS account IDs (if you own the snapshots), <code>self</code> for snapshots for which you own or have explicit permissions, or <code>all</code> for public snapshots.</p> <p>If you are describing a long list of snapshots, you can paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeSnapshots</code> request to retrieve the remaining results.</p> <p>For more information about EBS snapshots, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html">Amazon EBS Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeSnapshots(Post#DescribeSnapshotsRequest) returns (DescribeSnapshotsResult) {
      option (google.api.http) = {
        post: "//#DescribeSnapshots"
        body: "body"
      };
    }
    // Describes the data feed for Spot instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html">Spot Instance Data Feed</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#DescribeSpotDatafeedSubscription(Post#DescribeSpotDatafeedSubscriptionRequest) returns (DescribeSpotDatafeedSubscriptionResult) {
      option (google.api.http) = {
        post: "//#DescribeSpotDatafeedSubscription"
        body: "body"
      };
    }
    // Describes the running instances for the specified Spot fleet.
    rpc Post#DescribeSpotFleetInstances(Post#DescribeSpotFleetInstancesRequest) returns (DescribeSpotFleetInstancesResponse) {
      option (google.api.http) = {
        post: "//#DescribeSpotFleetInstances"
        body: "body"
      };
    }
    // <p>Describes the events for the specified Spot fleet request during the specified time.</p> <p>Spot fleet events are delayed by up to 30 seconds before they can be described. This ensures that you can query by the last evaluated time and not miss a recorded event.</p>
    rpc Post#DescribeSpotFleetRequestHistory(Post#DescribeSpotFleetRequestHistoryRequest) returns (DescribeSpotFleetRequestHistoryResponse) {
      option (google.api.http) = {
        post: "//#DescribeSpotFleetRequestHistory"
        body: "body"
      };
    }
    // <p>Describes your Spot fleet requests.</p> <p>Spot fleet requests are deleted 48 hours after they are canceled and their instances are terminated.</p>
    rpc Post#DescribeSpotFleetRequests(Post#DescribeSpotFleetRequestsRequest) returns (DescribeSpotFleetRequestsResponse) {
      option (google.api.http) = {
        post: "//#DescribeSpotFleetRequests"
        body: "body"
      };
    }
    // <p>Describes the Spot instance requests that belong to your account. Spot instances are instances that Amazon EC2 launches when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot instance by examining the response. If the status of the Spot instance is <code>fulfilled</code>, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances where the instance lifecycle is <code>spot</code>.</p> <p>Spot instance requests are deleted 4 hours after they are canceled and their instances are terminated.</p>
    rpc Post#DescribeSpotInstanceRequests(Post#DescribeSpotInstanceRequestsRequest) returns (DescribeSpotInstanceRequestsResult) {
      option (google.api.http) = {
        post: "//#DescribeSpotInstanceRequests"
        body: "body"
      };
    }
    // <p>Describes the Spot price history. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html">Spot Instance Pricing History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you specify a start and end time, this operation returns the prices of the instance types within the time range that you specified and the time when the price changed. The price is valid within the time period that you specified; the response merely indicates the last time that the price changed.</p>
    rpc Post#DescribeSpotPriceHistory(Post#DescribeSpotPriceHistoryRequest) returns (DescribeSpotPriceHistoryResult) {
      option (google.api.http) = {
        post: "//#DescribeSpotPriceHistory"
        body: "body"
      };
    }
    // [EC2-VPC only] Describes the stale security group rules for security groups in a specified VPC. Rules are stale when they reference a deleted security group in a peer VPC, or a security group in a peer VPC for which the VPC peering connection has been deleted.
    rpc Post#DescribeStaleSecurityGroups(Post#DescribeStaleSecurityGroupsRequest) returns (DescribeStaleSecurityGroupsResult) {
      option (google.api.http) = {
        post: "//#DescribeStaleSecurityGroups"
        body: "body"
      };
    }
    // <p>Describes one or more of your subnets.</p> <p>For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeSubnets(Post#DescribeSubnetsRequest) returns (DescribeSubnetsResult) {
      option (google.api.http) = {
        post: "//#DescribeSubnets"
        body: "body"
      };
    }
    // <p>Describes one or more of the tags for your EC2 resources.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeTags(Post#DescribeTagsRequest) returns (DescribeTagsResult) {
      option (google.api.http) = {
        post: "//#DescribeTags"
        body: "body"
      };
    }
    // <p>Describes the specified attribute of the specified volume. You can specify only one attribute at a time.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeVolumeAttribute(Post#DescribeVolumeAttributeRequest) returns (DescribeVolumeAttributeResult) {
      option (google.api.http) = {
        post: "//#DescribeVolumeAttribute"
        body: "body"
      };
    }
    // <p>Describes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume's underlying host. If the volume's underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.</p> <p>The <code>DescribeVolumeStatus</code> operation provides the following information about the specified volumes:</p> <p> <i>Status</i>: Reflects the current status of the volume. The possible values are <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>. If all checks pass, the overall status of the volume is <code>ok</code>. If the check fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>, then the checks may still be taking place on your volume at the time. We recommend that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring the Status of Your Volumes</a>.</p> <p> <i>Events</i>: Reflect the cause of a volume status and may require you to take action. For example, if your volume returns an <code>impaired</code> status, then the volume event might be <code>potential-data-inconsistency</code>. This means that your volume has been affected by an issue with the underlying host, has all I/O operations disabled, and may have inconsistent data.</p> <p> <i>Actions</i>: Reflect the actions you may have to take in response to an event. For example, if the status of the volume is <code>impaired</code> and the volume event shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>. This means that you may want to enable the I/O operations for the volume by calling the <a>EnableVolumeIO</a> action and then check the volume for data consistency.</p> <note> <p>Volume status is based on the volume status checks, and does not reflect the volume state. Therefore, volume status does not indicate volumes in the <code>error</code> state (for example, when a volume is incapable of accepting I/O.)</p> </note>
    rpc Post#DescribeVolumeStatus(Post#DescribeVolumeStatusRequest) returns (DescribeVolumeStatusResult) {
      option (google.api.http) = {
        post: "//#DescribeVolumeStatus"
        body: "body"
      };
    }
    // <p>Describes the specified EBS volumes.</p> <p>If you are describing a long list of volumes, you can paginate the output to make the list more manageable. The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. If the list of results exceeds your <code>MaxResults</code> value, then that number of results is returned along with a <code>NextToken</code> value that can be passed to a subsequent <code>DescribeVolumes</code> request to retrieve the remaining results.</p> <p>For more information about EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html">Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DescribeVolumes(Post#DescribeVolumesRequest) returns (DescribeVolumesResult) {
      option (google.api.http) = {
        post: "//#DescribeVolumes"
        body: "body"
      };
    }
    // <p>Reports the current modification status of EBS volumes.</p> <p>Current-generation EBS volumes support modification of attributes including type, size, and (for <code>io1</code> volumes) IOPS provisioning while either attached to or detached from an instance. Following an action from the API or the console to modify a volume, the status of the modification may be <code>modifying</code>, <code>optimizing</code>, <code>completed</code>, or <code>failed</code>. If a volume has never been modified, then certain elements of the returned <code>VolumeModification</code> objects are null. </p> <p> You can also use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring Volume Modifications"</a>. </p>
    rpc Post#DescribeVolumesModifications(Post#DescribeVolumesModificationsRequest) returns (DescribeVolumesModificationsResult) {
      option (google.api.http) = {
        post: "//#DescribeVolumesModifications"
        body: "body"
      };
    }
    // Describes the specified attribute of the specified VPC. You can specify only one attribute at a time.
    rpc Post#DescribeVpcAttribute(Post#DescribeVpcAttributeRequest) returns (DescribeVpcAttributeResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcAttribute"
        body: "body"
      };
    }
    // Describes the ClassicLink status of one or more VPCs.
    rpc Post#DescribeVpcClassicLink(Post#DescribeVpcClassicLinkRequest) returns (DescribeVpcClassicLinkResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcClassicLink"
        body: "body"
      };
    }
    // Describes the ClassicLink DNS support status of one or more VPCs. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#DescribeVpcClassicLinkDnsSupport(Post#DescribeVpcClassicLinkDnsSupportRequest) returns (DescribeVpcClassicLinkDnsSupportResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcClassicLinkDnsSupport"
        body: "body"
      };
    }
    // Describes all supported AWS services that can be specified when creating a VPC endpoint.
    rpc Post#DescribeVpcEndpointServices(Post#DescribeVpcEndpointServicesRequest) returns (DescribeVpcEndpointServicesResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcEndpointServices"
        body: "body"
      };
    }
    // Describes one or more of your VPC endpoints.
    rpc Post#DescribeVpcEndpoints(Post#DescribeVpcEndpointsRequest) returns (DescribeVpcEndpointsResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcEndpoints"
        body: "body"
      };
    }
    // Describes one or more of your VPC peering connections.
    rpc Post#DescribeVpcPeeringConnections(Post#DescribeVpcPeeringConnectionsRequest) returns (DescribeVpcPeeringConnectionsResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcPeeringConnections"
        body: "body"
      };
    }
    // Describes one or more of your VPCs.
    rpc Post#DescribeVpcs(Post#DescribeVpcsRequest) returns (DescribeVpcsResult) {
      option (google.api.http) = {
        post: "//#DescribeVpcs"
        body: "body"
      };
    }
    // <p>Describes one or more of your VPN connections.</p> <p>For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeVpnConnections(Post#DescribeVpnConnectionsRequest) returns (DescribeVpnConnectionsResult) {
      option (google.api.http) = {
        post: "//#DescribeVpnConnections"
        body: "body"
      };
    }
    // <p>Describes one or more of your virtual private gateways.</p> <p>For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DescribeVpnGateways(Post#DescribeVpnGatewaysRequest) returns (DescribeVpnGatewaysResult) {
      option (google.api.http) = {
        post: "//#DescribeVpnGateways"
        body: "body"
      };
    }
    // Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the instance has been unlinked, the VPC security groups are no longer associated with it. An instance is automatically unlinked from a VPC when it's stopped.
    rpc Post#DetachClassicLinkVpc(Post#DetachClassicLinkVpcRequest) returns (DetachClassicLinkVpcResult) {
      option (google.api.http) = {
        post: "//#DetachClassicLinkVpc"
        body: "body"
      };
    }
    // Detaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses or public IPv4 addresses.
    rpc Post#DetachInternetGateway(Post#DetachInternetGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DetachInternetGateway"
        body: "body"
      };
    }
    // Detaches a network interface from an instance.
    rpc Post#DetachNetworkInterface(Post#DetachNetworkInterfaceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DetachNetworkInterface"
        body: "body"
      };
    }
    // <p>Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the <code>busy</code> state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can't be detached while the instance is running. To detach the root volume, stop the instance first.</p> <p>When a volume with an AWS Marketplace product code is detached from an instance, the product code is no longer associated with the instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#DetachVolume(Post#DetachVolumeRequest) returns (VolumeAttachment) {
      option (google.api.http) = {
        post: "//#DetachVolume"
        body: "body"
      };
    }
    // <p>Detaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).</p> <p>You must wait for the attachment's state to switch to <code>detached</code> before you can delete the VPC or attach a different VPC to the virtual private gateway.</p>
    rpc Post#DetachVpnGateway(Post#DetachVpnGatewayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DetachVpnGateway"
        body: "body"
      };
    }
    // Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.
    rpc Post#DisableVgwRoutePropagation(Post#DisableVgwRoutePropagationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DisableVgwRoutePropagation"
        body: "body"
      };
    }
    // Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC that has EC2-Classic instances linked to it.
    rpc Post#DisableVpcClassicLink(Post#DisableVpcClassicLinkRequest) returns (DisableVpcClassicLinkResult) {
      option (google.api.http) = {
        post: "//#DisableVpcClassicLink"
        body: "body"
      };
    }
    // Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames resolve to public IP addresses when addressed between a linked EC2-Classic instance and instances in the VPC to which it's linked. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#DisableVpcClassicLinkDnsSupport(Post#DisableVpcClassicLinkDnsSupportRequest) returns (DisableVpcClassicLinkDnsSupportResult) {
      option (google.api.http) = {
        post: "//#DisableVpcClassicLinkDnsSupport"
        body: "body"
      };
    }
    // <p>Disassociates an Elastic IP address from the instance or network interface it's associated with.</p> <p>An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>This is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.</p>
    rpc Post#DisassociateAddress(Post#DisassociateAddressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DisassociateAddress"
        body: "body"
      };
    }
    // <p>Disassociates an IAM instance profile from a running or stopped instance.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
    rpc Post#DisassociateIamInstanceProfile(Post#DisassociateIamInstanceProfileRequest) returns (DisassociateIamInstanceProfileResult) {
      option (google.api.http) = {
        post: "//#DisassociateIamInstanceProfile"
        body: "body"
      };
    }
    // <p>Disassociates a subnet from a route table.</p> <p>After you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC's main route table. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#DisassociateRouteTable(Post#DisassociateRouteTableRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DisassociateRouteTable"
        body: "body"
      };
    }
    // Disassociates a CIDR block from a subnet. Currently, you can disassociate an IPv6 CIDR block only. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it.
    rpc Post#DisassociateSubnetCidrBlock(Post#DisassociateSubnetCidrBlockRequest) returns (DisassociateSubnetCidrBlockResult) {
      option (google.api.http) = {
        post: "//#DisassociateSubnetCidrBlock"
        body: "body"
      };
    }
    // <p>Disassociates a CIDR block from a VPC. To disassociate the CIDR block, you must specify its association ID. You can get the association ID by using <a>DescribeVpcs</a>. You must detach or delete all gateways and resources that are associated with the CIDR block before you can disassociate it. </p> <p>You cannot disassociate the CIDR block with which you originally created the VPC (the primary CIDR block).</p>
    rpc Post#DisassociateVpcCidrBlock(Post#DisassociateVpcCidrBlockRequest) returns (DisassociateVpcCidrBlockResult) {
      option (google.api.http) = {
        post: "//#DisassociateVpcCidrBlock"
        body: "body"
      };
    }
    // Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.
    rpc Post#EnableVgwRoutePropagation(Post#EnableVgwRoutePropagationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#EnableVgwRoutePropagation"
        body: "body"
      };
    }
    // Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.
    rpc Post#EnableVolumeIO(Post#EnableVolumeIORequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#EnableVolumeIO"
        body: "body"
      };
    }
    // Enables a VPC for ClassicLink. You can then link EC2-Classic instances to your ClassicLink-enabled VPC to allow communication over private IP addresses. You cannot enable your VPC for ClassicLink if any of your VPC's route tables have existing routes for address ranges within the <code>10.0.0.0/8</code> IP address range, excluding local routes for VPCs in the <code>10.0.0.0/16</code> and <code>10.1.0.0/16</code> IP address ranges. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#EnableVpcClassicLink(Post#EnableVpcClassicLinkRequest) returns (EnableVpcClassicLinkResult) {
      option (google.api.http) = {
        post: "//#EnableVpcClassicLink"
        body: "body"
      };
    }
    // Enables a VPC to support DNS hostname resolution for ClassicLink. If enabled, the DNS hostname of a linked EC2-Classic instance resolves to its private IP address when addressed from an instance in the VPC to which it's linked. Similarly, the DNS hostname of an instance in a VPC resolves to its private IP address when addressed from a linked EC2-Classic instance. For more information about ClassicLink, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#EnableVpcClassicLinkDnsSupport(Post#EnableVpcClassicLinkDnsSupportRequest) returns (EnableVpcClassicLinkDnsSupportResult) {
      option (google.api.http) = {
        post: "//#EnableVpcClassicLinkDnsSupport"
        body: "body"
      };
    }
    // <p>Gets the console output for the specified instance.</p> <p>Instances do not have a physical monitor through which you can view their console output. They also lack physical controls that allow you to power up, reboot, or shut them down. To allow these actions, we provide them through the Amazon EC2 API and command line interface.</p> <p>Instance console output is buffered and posted shortly after instance boot, reboot, and termination. Amazon EC2 preserves the most recent 64 KB output, which is available for at least one hour after the most recent post.</p> <p>For Linux instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. This output is buffered because the instance produces it and then posts it to a store where the instance's owner can retrieve it.</p> <p>For Windows instances, the instance console output includes output from the EC2Config service.</p>
    rpc Post#GetConsoleOutput(Post#GetConsoleOutputRequest) returns (GetConsoleOutputResult) {
      option (google.api.http) = {
        post: "//#GetConsoleOutput"
        body: "body"
      };
    }
    // <p>Retrieve a JPG-format screenshot of a running instance to help with troubleshooting.</p> <p>The returned content is Base64-encoded.</p>
    rpc Post#GetConsoleScreenshot(Post#GetConsoleScreenshotRequest) returns (GetConsoleScreenshotResult) {
      option (google.api.http) = {
        post: "//#GetConsoleScreenshot"
        body: "body"
      };
    }
    // <p>Preview a reservation purchase with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation.</p> <p>This is a preview of the <a>PurchaseHostReservation</a> action and does not result in the offering being purchased.</p>
    rpc Post#GetHostReservationPurchasePreview(Post#GetHostReservationPurchasePreviewRequest) returns (GetHostReservationPurchasePreviewResult) {
      option (google.api.http) = {
        post: "//#GetHostReservationPurchasePreview"
        body: "body"
      };
    }
    // <p>Retrieves the encrypted administrator password for a running Windows instance.</p> <p>The Windows password is generated at boot by the <code>EC2Config</code> service or <code>EC2Launch</code> scripts (Windows Server 2016 and later). This usually only happens the first time an instance is launched. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/UsingConfig_WinAMI.html">EC2Config</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch.html">EC2Launch</a> in the Amazon Elastic Compute Cloud User Guide.</p> <p>For the <code>EC2Config</code> service, the password is not generated for rebundled AMIs unless <code>Ec2SetPassword</code> is enabled before bundling.</p> <p>The password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.</p> <p>When you launch an instance, password generation and encryption may take a few minutes. If you try to retrieve the password before it's available, the output returns an empty string. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.</p>
    rpc Post#GetPasswordData(Post#GetPasswordDataRequest) returns (GetPasswordDataResult) {
      option (google.api.http) = {
        post: "//#GetPasswordData"
        body: "body"
      };
    }
    // Returns details about the values and term of your specified Convertible Reserved Instances. When a target configuration is specified, it returns information about whether the exchange is valid and can be performed.
    rpc Post#GetReservedInstancesExchangeQuote(Post#GetReservedInstancesExchangeQuoteRequest) returns (GetReservedInstancesExchangeQuoteResult) {
      option (google.api.http) = {
        post: "//#GetReservedInstancesExchangeQuote"
        body: "body"
      };
    }
    // Import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI). For more information, see <a href="http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html">Importing a VM as an Image Using VM Import/Export</a> in the <i>VM Import/Export User Guide</i>.
    rpc Post#ImportImage(Post#ImportImageRequest) returns (ImportImageResult) {
      option (google.api.http) = {
        post: "//#ImportImage"
        body: "body"
      };
    }
    // <p>Creates an import instance task using metadata from the specified disk image. <code>ImportInstance</code> only supports single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-vmimport-export.html">Importing a Virtual Machine Using the Amazon EC2 CLI</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    rpc Post#ImportInstance(Post#ImportInstanceRequest) returns (ImportInstanceResult) {
      option (google.api.http) = {
        post: "//#ImportInstance"
        body: "body"
      };
    }
    // <p>Imports the public key from an RSA key pair that you created with a third-party tool. Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create the key pair and give AWS just the public key. The private key is never transferred between you and AWS.</p> <p>For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#ImportKeyPair(Post#ImportKeyPairRequest) returns (ImportKeyPairResult) {
      option (google.api.http) = {
        post: "//#ImportKeyPair"
        body: "body"
      };
    }
    // Imports a disk into an EBS snapshot.
    rpc Post#ImportSnapshot(Post#ImportSnapshotRequest) returns (ImportSnapshotResult) {
      option (google.api.http) = {
        post: "//#ImportSnapshot"
        body: "body"
      };
    }
    // <p>Creates an import volume task using metadata from the specified disk image.For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing Disks to Amazon EBS</a>.</p> <p>For information about the import manifest referenced by this API action, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
    rpc Post#ImportVolume(Post#ImportVolumeRequest) returns (ImportVolumeResult) {
      option (google.api.http) = {
        post: "//#ImportVolume"
        body: "body"
      };
    }
    // Modifies the specified attribute of the specified Amazon FPGA Image (AFI).
    rpc Post#ModifyFpgaImageAttribute(Post#ModifyFpgaImageAttributeRequest) returns (ModifyFpgaImageAttributeResult) {
      option (google.api.http) = {
        post: "//#ModifyFpgaImageAttribute"
        body: "body"
      };
    }
    // Modify the auto-placement setting of a Dedicated Host. When auto-placement is enabled, AWS will place instances that you launch with a tenancy of <code>host</code>, but without targeting a specific host ID, onto any available Dedicated Host in your account which has auto-placement enabled. When auto-placement is disabled, you need to provide a host ID if you want the instance to launch onto a specific host. If no host ID is provided, the instance will be launched onto a suitable host which has auto-placement enabled.
    rpc Post#ModifyHosts(Post#ModifyHostsRequest) returns (ModifyHostsResult) {
      option (google.api.http) = {
        post: "//#ModifyHosts"
        body: "body"
      };
    }
    // <p>Modifies the ID format for the specified resource on a per-region basis. You can specify that resources should receive longer IDs (17-character IDs) when they are created. The following resource types support longer IDs: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>.</p> <p>This setting applies to the IAM user who makes the request; it does not apply to the entire AWS account. By default, an IAM user defaults to the same settings as the root user. If you're using this action as the root user, then these settings apply to the entire account, unless an IAM user explicitly overrides these settings for themselves. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
    rpc Post#ModifyIdFormat(Post#ModifyIdFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyIdFormat"
        body: "body"
      };
    }
    // <p>Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account. You can specify that resources should receive longer IDs (17-character IDs) when they are created. </p> <p>The following resource types support longer IDs: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code>. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html">Resource IDs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. </p> <p>This setting applies to the principal specified in the request; it does not apply to the principal that makes the request. </p> <p>Resources created with longer IDs are visible to all IAM roles and users, regardless of these settings and provided that they have permission to use the relevant <code>Describe</code> command for the resource type.</p>
    rpc Post#ModifyIdentityIdFormat(Post#ModifyIdentityIdFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyIdentityIdFormat"
        body: "body"
      };
    }
    // <p>Modifies the specified attribute of the specified AMI. You can specify only one attribute at a time.</p> <note> <p>AWS Marketplace product codes cannot be modified. Images with an AWS Marketplace product code cannot be made public.</p> </note> <note> <p>The SriovNetSupport enhanced networking attribute cannot be changed using this command. Instead, enable SriovNetSupport on an instance and create an AMI from the instance. This will result in an image with SriovNetSupport enabled.</p> </note>
    rpc Post#ModifyImageAttribute(Post#ModifyImageAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyImageAttribute"
        body: "body"
      };
    }
    // <p>Modifies the specified attribute of the specified instance. You can specify only one attribute at a time.</p> <p>To modify some attributes, the instance must be stopped. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#ModifyInstanceAttribute(Post#ModifyInstanceAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyInstanceAttribute"
        body: "body"
      };
    }
    // <p>Set the instance affinity value for a specific stopped instance and modify the instance tenancy setting.</p> <p>Instance affinity is disabled by default. When instance affinity is <code>host</code> and it is not associated with a specific Dedicated Host, the next time it is launched it will automatically be associated with the host it lands on. This relationship will persist if the instance is stopped/started, or rebooted.</p> <p>You can modify the host ID associated with a stopped instance. If a stopped instance has a new host ID association, the instance will target that host when restarted.</p> <p>You can modify the tenancy of a stopped instance with a tenancy of <code>host</code> or <code>dedicated</code>.</p> <p>Affinity, hostID, and tenancy are not required parameters, but at least one of them must be specified in the request. Affinity and tenancy can be modified in the same request, but tenancy can only be modified on instances that are stopped.</p>
    rpc Post#ModifyInstancePlacement(Post#ModifyInstancePlacementRequest) returns (ModifyInstancePlacementResult) {
      option (google.api.http) = {
        post: "//#ModifyInstancePlacement"
        body: "body"
      };
    }
    // Modifies the specified network interface attribute. You can specify only one attribute at a time.
    rpc Post#ModifyNetworkInterfaceAttribute(Post#ModifyNetworkInterfaceAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyNetworkInterfaceAttribute"
        body: "body"
      };
    }
    // <p>Modifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Standard Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the Amazon Elastic Compute Cloud User Guide.</p>
    rpc Post#ModifyReservedInstances(Post#ModifyReservedInstancesRequest) returns (ModifyReservedInstancesResult) {
      option (google.api.http) = {
        post: "//#ModifyReservedInstances"
        body: "body"
      };
    }
    // <p>Adds or removes permission settings for the specified snapshot. You may add or remove specified AWS account IDs from a snapshot's list of create volume permissions, but you cannot do both in a single API call. If you need to both add and remove account IDs for a snapshot, you must use multiple API calls.</p> <note> <p>Encrypted snapshots and snapshots with AWS Marketplace product codes cannot be made public. Snapshots encrypted with your default CMK cannot be shared with other accounts.</p> </note> <p>For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#ModifySnapshotAttribute(Post#ModifySnapshotAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifySnapshotAttribute"
        body: "body"
      };
    }
    // <p>Modifies the specified Spot fleet request.</p> <p>While the Spot fleet request is being modified, it is in the <code>modifying</code> state.</p> <p>To scale up your Spot fleet, increase its target capacity. The Spot fleet launches the additional Spot instances according to the allocation strategy for the Spot fleet request. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet launches instances using the Spot pool with the lowest price. If the allocation strategy is <code>diversified</code>, the Spot fleet distributes the instances across the Spot pools.</p> <p>To scale down your Spot fleet, decrease its target capacity. First, the Spot fleet cancels any open bids that exceed the new target capacity. You can request that the Spot fleet terminate Spot instances until the size of the fleet no longer exceeds the new target capacity. If the allocation strategy is <code>lowestPrice</code>, the Spot fleet terminates the instances with the highest price per unit. If the allocation strategy is <code>diversified</code>, the Spot fleet terminates instances across the Spot pools. Alternatively, you can request that the Spot fleet keep the fleet at its current size, but not replace any Spot instances that are interrupted or that you terminate manually.</p>
    rpc Post#ModifySpotFleetRequest(Post#ModifySpotFleetRequestRequest) returns (ModifySpotFleetRequestResponse) {
      option (google.api.http) = {
        post: "//#ModifySpotFleetRequest"
        body: "body"
      };
    }
    // Modifies a subnet attribute. You can only modify one attribute at a time.
    rpc Post#ModifySubnetAttribute(Post#ModifySubnetAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifySubnetAttribute"
        body: "body"
      };
    }
    // <p>You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity. If your EBS volume is attached to a current-generation EC2 instance type, you may be able to apply these changes without stopping the instance or detaching the volume from it. For more information about modifying an EBS volume running Linux, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Linux</a>. For more information about modifying an EBS volume running Windows, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Windows</a>. </p> <p> When you complete a resize operation on your volume, you need to extend the volume's file-system size to take advantage of the new storage capacity. For information about extending a Linux file system, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux">Extending a Linux File System</a>. For information about extending a Windows file system, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html#recognize-expanded-volume-windows">Extending a Windows File System</a>. </p> <p> You can use CloudWatch Events to check the status of a modification to an EBS volume. For information about CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/">Amazon CloudWatch Events User Guide</a>. You can also track the status of a modification using the <a>DescribeVolumesModifications</a> API. For information about tracking status changes using either method, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html#monitoring_mods">Monitoring Volume Modifications</a>. </p> <note> <p>With previous-generation instance types, resizing an EBS volume may require detaching and reattaching the volume or stopping and restarting the instance. For more information about modifying an EBS volume running Linux, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Linux</a>. For more information about modifying an EBS volume running Windows, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ebs-expand-volume.html">Modifying the Size, IOPS, or Type of an EBS Volume on Windows</a>.</p> </note> <note> <p>If you reach the maximum volume modification rate per volume limit, you will need to wait at least six hours before applying further modifications to the affected EBS volume.</p> </note>
    rpc Post#ModifyVolume(Post#ModifyVolumeRequest) returns (ModifyVolumeResult) {
      option (google.api.http) = {
        post: "//#ModifyVolume"
        body: "body"
      };
    }
    // <p>Modifies a volume attribute.</p> <p>By default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.</p> <p>You can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.</p>
    rpc Post#ModifyVolumeAttribute(Post#ModifyVolumeAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyVolumeAttribute"
        body: "body"
      };
    }
    // Modifies the specified attribute of the specified VPC.
    rpc Post#ModifyVpcAttribute(Post#ModifyVpcAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ModifyVpcAttribute"
        body: "body"
      };
    }
    // Modifies attributes of a specified VPC endpoint. You can modify the policy associated with the endpoint, and you can add and remove route tables associated with the endpoint.
    rpc Post#ModifyVpcEndpoint(Post#ModifyVpcEndpointRequest) returns (ModifyVpcEndpointResult) {
      option (google.api.http) = {
        post: "//#ModifyVpcEndpoint"
        body: "body"
      };
    }
    // <p>Modifies the VPC peering connection options on one side of a VPC peering connection. You can do the following:</p> <ul> <li> <p>Enable/disable communication over the peering connection between an EC2-Classic instance that's linked to your VPC (using ClassicLink) and instances in the peer VPC.</p> </li> <li> <p>Enable/disable communication over the peering connection between instances in your VPC and an EC2-Classic instance that's linked to the peer VPC.</p> </li> <li> <p>Enable/disable a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p> </li> </ul> <p>If the peered VPCs are in different accounts, each owner must initiate a separate request to modify the peering connection options, depending on whether their VPC was the requester or accepter for the VPC peering connection. If the peered VPCs are in the same account, you can modify the requester and accepter options in the same request. To confirm which VPC is the accepter and requester for a VPC peering connection, use the <a>DescribeVpcPeeringConnections</a> command.</p>
    rpc Post#ModifyVpcPeeringConnectionOptions(Post#ModifyVpcPeeringConnectionOptionsRequest) returns (ModifyVpcPeeringConnectionOptionsResult) {
      option (google.api.http) = {
        post: "//#ModifyVpcPeeringConnectionOptions"
        body: "body"
      };
    }
    // <p>Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>To disable detailed monitoring, see .</p>
    rpc Post#MonitorInstances(Post#MonitorInstancesRequest) returns (MonitorInstancesResult) {
      option (google.api.http) = {
        post: "//#MonitorInstances"
        body: "body"
      };
    }
    // Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform. The Elastic IP address must be allocated to your account for more than 24 hours, and it must not be associated with an instance. After the Elastic IP address is moved, it is no longer available for use in the EC2-Classic platform, unless you move it back using the <a>RestoreAddressToClassic</a> request. You cannot move an Elastic IP address that was originally allocated for use in the EC2-VPC platform to the EC2-Classic platform.
    rpc Post#MoveAddressToVpc(Post#MoveAddressToVpcRequest) returns (MoveAddressToVpcResult) {
      option (google.api.http) = {
        post: "//#MoveAddressToVpc"
        body: "body"
      };
    }
    // Purchase a reservation with configurations that match those of your Dedicated Host. You must have active Dedicated Hosts in your account before you purchase a reservation. This action results in the specified reservation being purchased and charged to your account.
    rpc Post#PurchaseHostReservation(Post#PurchaseHostReservationRequest) returns (PurchaseHostReservationResult) {
      option (google.api.http) = {
        post: "//#PurchaseHostReservation"
        body: "body"
      };
    }
    // <p>Purchases a Reserved Instance for use with your account. With Reserved Instances, you pay a lower hourly rate compared to On-Demand instance pricing.</p> <p>Use <a>DescribeReservedInstancesOfferings</a> to get a list of Reserved Instance offerings that match your specifications. After you've purchased a Reserved Instance, you can check for your new Reserved Instance with <a>DescribeReservedInstances</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved Instances</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#PurchaseReservedInstancesOffering(Post#PurchaseReservedInstancesOfferingRequest) returns (PurchaseReservedInstancesOfferingResult) {
      option (google.api.http) = {
        post: "//#PurchaseReservedInstancesOffering"
        body: "body"
      };
    }
    // <p>Purchases one or more Scheduled Instances with the specified schedule.</p> <p>Scheduled Instances enable you to purchase Amazon EC2 compute capacity by the hour for a one-year term. Before you can purchase a Scheduled Instance, you must call <a>DescribeScheduledInstanceAvailability</a> to check for available schedules and obtain a purchase token. After you purchase a Scheduled Instance, you must call <a>RunScheduledInstances</a> during each scheduled time period.</p> <p>After you purchase a Scheduled Instance, you can't cancel, modify, or resell your purchase.</p>
    rpc Post#PurchaseScheduledInstances(Post#PurchaseScheduledInstancesRequest) returns (PurchaseScheduledInstancesResult) {
      option (google.api.http) = {
        post: "//#PurchaseScheduledInstances"
        body: "body"
      };
    }
    // <p>Requests a reboot of one or more instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.</p> <p>If an instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot.</p> <p>For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#RebootInstances(Post#RebootInstancesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RebootInstances"
        body: "body"
      };
    }
    // <p>Registers an AMI. When you're creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <note> <p>For Amazon EBS-backed instances, <a>CreateImage</a> creates and registers the AMI in a single request, so you don't have to register the AMI yourself.</p> </note> <p>You can also use <code>RegisterImage</code> to create an Amazon EBS-backed Linux AMI from a snapshot of a root device volume. You specify the snapshot using the block device mapping. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-launch-snapshot.html">Launching a Linux Instance from a Backup</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>You can't register an image where a secondary (non-root) snapshot has AWS Marketplace product codes.</p> <p>Some Linux distributions, such as Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise Server (SLES), use the EC2 billing product code associated with an AMI to verify the subscription status for package updates. Creating an AMI from an EBS snapshot does not maintain this billing code, and subsequent instances launched from such an AMI will not be able to connect to package update infrastructure. To create an AMI that must retain billing codes, see <a>CreateImage</a>.</p> <p>If needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.</p>
    rpc Post#RegisterImage(Post#RegisterImageRequest) returns (RegisterImageResult) {
      option (google.api.http) = {
        post: "//#RegisterImage"
        body: "body"
      };
    }
    // Rejects a VPC peering connection request. The VPC peering connection must be in the <code>pending-acceptance</code> state. Use the <a>DescribeVpcPeeringConnections</a> request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use <a>DeleteVpcPeeringConnection</a>.
    rpc Post#RejectVpcPeeringConnection(Post#RejectVpcPeeringConnectionRequest) returns (RejectVpcPeeringConnectionResult) {
      option (google.api.http) = {
        post: "//#RejectVpcPeeringConnection"
        body: "body"
      };
    }
    // <p>Releases the specified Elastic IP address.</p> <p>[EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it's associated with. To disassociate an Elastic IP address without releasing it, use <a>DisassociateAddress</a>.</p> <p>[Nondefault VPC] You must use <a>DisassociateAddress</a> to disassociate the Elastic IP address before you can release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).</p> <p>After releasing an Elastic IP address, it is released to the IP address pool. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you'll get an <code>AuthFailure</code> error if the address is already allocated to another AWS account.</p> <p>[EC2-VPC] After you release an Elastic IP address for use in a VPC, you might be able to recover it. For more information, see <a>AllocateAddress</a>.</p>
    rpc Post#ReleaseAddress(Post#ReleaseAddressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ReleaseAddress"
        body: "body"
      };
    }
    // <p>When you no longer want to use an On-Demand Dedicated Host it can be released. On-Demand billing is stopped and the host goes into <code>released</code> state. The host ID of Dedicated Hosts that have been released can no longer be specified in another request, e.g., ModifyHosts. You must stop or terminate all instances on a host before it can be released.</p> <p>When Dedicated Hosts are released, it make take some time for them to stop counting toward your limit and you may receive capacity errors when trying to allocate new Dedicated hosts. Try waiting a few minutes, and then try again.</p> <p>Released hosts will still appear in a <a>DescribeHosts</a> response.</p>
    rpc Post#ReleaseHosts(Post#ReleaseHostsRequest) returns (ReleaseHostsResult) {
      option (google.api.http) = {
        post: "//#ReleaseHosts"
        body: "body"
      };
    }
    // <p>Replaces an IAM instance profile for the specified running instance. You can use this action to change the IAM instance profile that's associated with an instance without having to disassociate the existing IAM instance profile first.</p> <p>Use <a>DescribeIamInstanceProfileAssociations</a> to get the association ID.</p>
    rpc Post#ReplaceIamInstanceProfileAssociation(Post#ReplaceIamInstanceProfileAssociationRequest) returns (ReplaceIamInstanceProfileAssociationResult) {
      option (google.api.http) = {
        post: "//#ReplaceIamInstanceProfileAssociation"
        body: "body"
      };
    }
    // Changes which network ACL a subnet is associated with. By default when you create a subnet, it's automatically associated with the default network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    rpc Post#ReplaceNetworkAclAssociation(Post#ReplaceNetworkAclAssociationRequest) returns (ReplaceNetworkAclAssociationResult) {
      option (google.api.http) = {
        post: "//#ReplaceNetworkAclAssociation"
        body: "body"
      };
    }
    // Replaces an entry (rule) in a network ACL. For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    rpc Post#ReplaceNetworkAclEntry(Post#ReplaceNetworkAclEntryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ReplaceNetworkAclEntry"
        body: "body"
      };
    }
    // <p>Replaces an existing route within a route table in a VPC. You must provide only one of the following: Internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, or egress-only Internet gateway.</p> <p>For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#ReplaceRoute(Post#ReplaceRouteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ReplaceRoute"
        body: "body"
      };
    }
    // <p>Changes the route table associated with a given subnet in a VPC. After the operation completes, the subnet uses the routes in the new route table it's associated with. For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p> <p>You can also use ReplaceRouteTableAssociation to change which table is the main route table in the VPC. You just specify the main route table's association ID and the route table to be the new main route table.</p>
    rpc Post#ReplaceRouteTableAssociation(Post#ReplaceRouteTableAssociationRequest) returns (ReplaceRouteTableAssociationResult) {
      option (google.api.http) = {
        post: "//#ReplaceRouteTableAssociation"
        body: "body"
      };
    }
    // <p>Submits feedback about the status of an instance. The instance must be in the <code>running</code> state. If your experience with the instance differs from the instance status returned by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.</p> <p>Use of this action does not change the value returned by <a>DescribeInstanceStatus</a>.</p>
    rpc Post#ReportInstanceStatus(Post#ReportInstanceStatusRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ReportInstanceStatus"
        body: "body"
      };
    }
    // <p>Creates a Spot fleet request.</p> <p>You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>By default, the Spot fleet requests Spot instances in the Spot pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.</p> <p>Alternatively, you can specify that the Spot fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot instances in your Spot fleet are in different Spot pools, you can improve the availability of your fleet.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html">Spot Fleet Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#RequestSpotFleet(Post#RequestSpotFleetRequest) returns (RequestSpotFleetResponse) {
      option (google.api.http) = {
        post: "//#RequestSpotFleet"
        body: "body"
      };
    }
    // Creates a Spot instance request. Spot instances are instances that Amazon EC2 launches when the bid price that you specify exceeds the current Spot price. Amazon EC2 periodically sets the Spot price based on available Spot Instance capacity and current Spot instance requests. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html">Spot Instance Requests</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#RequestSpotInstances(Post#RequestSpotInstancesRequest) returns (RequestSpotInstancesResult) {
      option (google.api.http) = {
        post: "//#RequestSpotInstances"
        body: "body"
      };
    }
    // Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value. You can only reset the load permission attribute.
    rpc Post#ResetFpgaImageAttribute(Post#ResetFpgaImageAttributeRequest) returns (ResetFpgaImageAttributeResult) {
      option (google.api.http) = {
        post: "//#ResetFpgaImageAttribute"
        body: "body"
      };
    }
    // <p>Resets an attribute of an AMI to its default value.</p> <note> <p>The productCodes attribute can't be reset.</p> </note>
    rpc Post#ResetImageAttribute(Post#ResetImageAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResetImageAttribute"
        body: "body"
      };
    }
    // <p>Resets an attribute of an instance to its default value. To reset the <code>kernel</code> or <code>ramdisk</code>, the instance must be in a stopped state. To reset the <code>sourceDestCheck</code>, the instance can be either running or stopped.</p> <p>The <code>sourceDestCheck</code> attribute controls whether source/destination checking is enabled. The default value is <code>true</code>, which means checking is enabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    rpc Post#ResetInstanceAttribute(Post#ResetInstanceAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResetInstanceAttribute"
        body: "body"
      };
    }
    // Resets a network interface attribute. You can specify only one attribute at a time.
    rpc Post#ResetNetworkInterfaceAttribute(Post#ResetNetworkInterfaceAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResetNetworkInterfaceAttribute"
        body: "body"
      };
    }
    // <p>Resets permission settings for the specified snapshot.</p> <p>For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#ResetSnapshotAttribute(Post#ResetSnapshotAttributeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#ResetSnapshotAttribute"
        body: "body"
      };
    }
    // Restores an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform. You cannot move an Elastic IP address that was originally allocated for use in EC2-VPC. The Elastic IP address must not be associated with an instance or network interface.
    rpc Post#RestoreAddressToClassic(Post#RestoreAddressToClassicRequest) returns (RestoreAddressToClassicResult) {
      option (google.api.http) = {
        post: "//#RestoreAddressToClassic"
        body: "body"
      };
    }
    // <p>[EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC. This action doesn't apply to security groups for use in EC2-Classic. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.</p> <p>Each rule consists of the protocol and the IPv4 or IPv6 CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>
    rpc Post#RevokeSecurityGroupEgress(Post#RevokeSecurityGroupEgressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RevokeSecurityGroupEgress"
        body: "body"
      };
    }
    // <p>Removes one or more ingress rules from a security group. To remove a rule, the values that you specify (for example, ports) must match the existing rule's values exactly.</p> <note> <p>[EC2-Classic security groups only] If the values you specify do not match the existing rule's values, no error is returned. Use <a>DescribeSecurityGroups</a> to verify that the rule has been removed.</p> </note> <p>Each rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code. If the security group rule has a description, you do not have to specify the description to revoke the rule.</p> <p>Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.</p>
    rpc Post#RevokeSecurityGroupIngress(Post#RevokeSecurityGroupIngressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RevokeSecurityGroupIngress"
        body: "body"
      };
    }
    // <p>Launches the specified number of instances using an AMI for which you have permissions. </p> <p>You can specify a number of options, or leave the default options. The following rules apply:</p> <ul> <li> <p>[EC2-VPC] If you don't specify a subnet ID, we choose a default subnet from your default VPC for you. If you don't have a default VPC, you must specify a subnet ID in the request.</p> </li> <li> <p>[EC2-Classic] If don't specify an Availability Zone, we choose one for you.</p> </li> <li> <p>Some instance types must be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID, the request fails. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types">Instance Types Available Only in a VPC</a>.</p> </li> <li> <p>[EC2-VPC] All instances have a network interface with a primary private IPv4 address. If you don't specify this address, we choose one from the IPv4 range of your subnet.</p> </li> <li> <p>Not all instance types support IPv6 addresses. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a>.</p> </li> <li> <p>If you don't specify a security group ID, we use the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security Groups</a>.</p> </li> <li> <p>If any of the AMIs have a product code attached for which the user has not subscribed, the request fails.</p> </li> </ul> <p>To ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.</p> <p>An instance is ready for you to use when it's in the <code>running</code> state. You can check the state of your instance using <a>DescribeInstances</a>. You can tag instances and EBS volumes during launch, after launch, or both. For more information, see <a>CreateTags</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a>.</p> <p>Linux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#RunInstances(Post#RunInstancesRequest) returns (Reservation) {
      option (google.api.http) = {
        post: "//#RunInstances"
        body: "body"
      };
    }
    // <p>Launches the specified Scheduled Instances.</p> <p>Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>.</p> <p>You must launch a Scheduled Instance during its scheduled time period. You can't stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html">Scheduled Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#RunScheduledInstances(Post#RunScheduledInstancesRequest) returns (RunScheduledInstancesResult) {
      option (google.api.http) = {
        post: "//#RunScheduledInstances"
        body: "body"
      };
    }
    // <p>Starts an Amazon EBS-backed instance that you've previously stopped.</p> <p>Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Performing this operation on an instance that uses an instance store as its root device returns an error.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#StartInstances(Post#StartInstancesRequest) returns (StartInstancesResult) {
      option (google.api.http) = {
        post: "//#StartInstances"
        body: "body"
      };
    }
    // <p>Stops an Amazon EBS-backed instance.</p> <p>We don't charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your Windows instance, Amazon EC2 charges you for a full instance hour. If you stop and restart your Windows instance, a new instance hour begins and Amazon EC2 charges you for another full instance hour even if you are still within the same 60-minute period when it was stopped. Every time you start your Linux instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>You can't start or stop Spot Instances, and you can't stop instance store-backed instances.</p> <p>When you stop an instance, we shut it down. You can restart your instance at any time. Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Stopping an instance is different to rebooting or terminating it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#StopInstances(Post#StopInstancesRequest) returns (StopInstancesResult) {
      option (google.api.http) = {
        post: "//#StopInstances"
        body: "body"
      };
    }
    // <p>Shuts down one or more instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds. </p> <p>If you specify multiple instances and the request fails (for example, because of a single incorrect instance ID), none of the instances are terminated.</p> <p>Terminated instances remain visible after termination (for approximately one hour).</p> <p>By default, Amazon EC2 deletes all EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.</p> <p>You can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, any attached EBS volumes with the <code>DeleteOnTermination</code> block device mapping parameter set to <code>true</code> are automatically deleted. For more information about the differences between stopping and terminating instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    rpc Post#TerminateInstances(Post#TerminateInstancesRequest) returns (TerminateInstancesResult) {
      option (google.api.http) = {
        post: "//#TerminateInstances"
        body: "body"
      };
    }
    // Unassigns one or more IPv6 addresses from a network interface.
    rpc Post#UnassignIpv6Addresses(Post#UnassignIpv6AddressesRequest) returns (UnassignIpv6AddressesResult) {
      option (google.api.http) = {
        post: "//#UnassignIpv6Addresses"
        body: "body"
      };
    }
    // Unassigns one or more secondary private IP addresses from a network interface.
    rpc Post#UnassignPrivateIpAddresses(Post#UnassignPrivateIpAddressesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#UnassignPrivateIpAddresses"
        body: "body"
      };
    }
    // Disables detailed monitoring for a running instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    rpc Post#UnmonitorInstances(Post#UnmonitorInstancesRequest) returns (UnmonitorInstancesResult) {
      option (google.api.http) = {
        post: "//#UnmonitorInstances"
        body: "body"
      };
    }
    // <p>[EC2-VPC only] Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.</p> <p>You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.</p>
    rpc Post#UpdateSecurityGroupRuleDescriptionsEgress(Post#UpdateSecurityGroupRuleDescriptionsEgressRequest) returns (UpdateSecurityGroupRuleDescriptionsEgressResult) {
      option (google.api.http) = {
        post: "//#UpdateSecurityGroupRuleDescriptionsEgress"
        body: "body"
      };
    }
    // <p>Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously.</p> <p>You specify the description as part of the IP permissions structure. You can remove a description for a security group rule by omitting the description parameter in the request.</p>
    rpc Post#UpdateSecurityGroupRuleDescriptionsIngress(Post#UpdateSecurityGroupRuleDescriptionsIngressRequest) returns (UpdateSecurityGroupRuleDescriptionsIngressResult) {
      option (google.api.http) = {
        post: "//#UpdateSecurityGroupRuleDescriptionsIngress"
        body: "body"
      };
    }
}
