{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "elasticache.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "description": "<fullname>Amazon ElastiCache</fullname> <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a distributed cache in the cloud.</p> <p>With ElastiCache, customers get all of the benefits of a high-performance, in-memory cache with less of the administrative burden involved in launching and managing a distributed cache. The service makes setup, scaling, and cluster failure handling much simpler than in a self-managed cache deployment.</p> <p>In addition, through integration with Amazon CloudWatch, customers get enhanced visibility into the key performance statistics associated with their cache and can receive alarms if a part of their cache runs hot.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon ElastiCache",
    "version": "2015-02-02",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticache-2015-02-02.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "elasticache"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/elasticache/"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds up to 50 cost allocation tags to the named resource. A cost allocation tag is a key-value pair where the key and value are case-sensitive. You can use cost allocation tags to categorize and track your AWS costs.</p> <p> When you apply tags to your ElastiCache resources, AWS generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Tagging.html\">Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache User Guide</i>.</p>",
        "operationId": "AddTagsToResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagsToResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagListMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "TagQuotaPerResourceExceeded",
            "schema": {
              "$ref": "#/definitions/TagQuotaPerResourceExceeded"
            }
          },
          "483": {
            "description": "InvalidARNFault",
            "schema": {
              "$ref": "#/definitions/InvalidARNFault"
            }
          }
        }
      }
    },
    "/#AuthorizeCacheSecurityGroupIngress": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p> <note> <p>You cannot authorize ingress from an Amazon EC2 security group in one region to an ElastiCache cluster in another region.</p> </note>",
        "operationId": "AuthorizeCacheSecurityGroupIngress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizeCacheSecurityGroupIngressMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthorizeCacheSecurityGroupIngressResult"
            }
          },
          "480": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidCacheSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheSecurityGroupStateFault"
            }
          },
          "482": {
            "description": "AuthorizationAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationAlreadyExistsFault"
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CopySnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Makes a copy of an existing snapshot.</p> <note> <p>This operation is valid for Redis only.</p> </note> <important> <p>Users or groups that have permissions to use the <code>CopySnapshot</code> operation can create their own Amazon S3 buckets and copy snapshots to it. To control access to your snapshots, use an IAM policy to control who has the ability to use the <code>CopySnapshot</code> operation. For more information about using IAM to control the use of ElastiCache operations, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html\">Exporting Snapshots</a> and <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/IAM.html\">Authentication &amp; Access Control</a>.</p> </important> <p>You could receive the following error messages.</p> <p class=\"title\"> <b>Error Messages</b> </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket\">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket\">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket\">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The authenticated user does not have sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b> Contact your system administrator to get the needed permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code> a new and unique value. If exporting a snapshot, you could alternatively create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read permissions on the bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess\">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess\">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess\">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> </ul>",
        "operationId": "CopySnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopySnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CopySnapshotResult"
            }
          },
          "480": {
            "description": "SnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/SnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "483": {
            "description": "InvalidSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidSnapshotStateFault"
            }
          },
          "484": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "485": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CreateCacheCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a cache cluster. All nodes in the cache cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important>",
        "operationId": "CreateCacheCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCacheClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCacheClusterResult"
            }
          },
          "480": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidReplicationGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidReplicationGroupStateFault"
            }
          },
          "482": {
            "description": "CacheClusterAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterAlreadyExistsFault"
            }
          },
          "483": {
            "description": "InsufficientCacheClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientCacheClusterCapacityFault"
            }
          },
          "484": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "485": {
            "description": "CacheSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupNotFoundFault"
            }
          },
          "486": {
            "description": "ClusterQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaForCustomerExceededFault"
            }
          },
          "487": {
            "description": "NodeQuotaForClusterExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForClusterExceededFault"
            }
          },
          "488": {
            "description": "NodeQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForCustomerExceededFault"
            }
          },
          "489": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "490": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "491": {
            "description": "TagQuotaPerResourceExceeded",
            "schema": {
              "$ref": "#/definitions/TagQuotaPerResourceExceeded"
            }
          },
          "492": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "493": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CreateCacheParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new Amazon ElastiCache cache parameter group. An ElastiCache cache parameter group is a collection of parameters and their values that are applied to all of the nodes in any cache cluster or replication group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup is an exact duplicate of the default parameter group for the CacheParameterGroupFamily. To customize the newly created CacheParameterGroup you can change the values of specific parameters. For more information, see:</p> <ul> <li> <p> <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html\">ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/ParameterGroups.html\">Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>",
        "operationId": "CreateCacheParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCacheParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCacheParameterGroupResult"
            }
          },
          "480": {
            "description": "CacheParameterGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupQuotaExceededFault"
            }
          },
          "481": {
            "description": "CacheParameterGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupAlreadyExistsFault"
            }
          },
          "482": {
            "description": "InvalidCacheParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheParameterGroupStateFault"
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CreateCacheSecurityGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new cache security group. Use a cache security group to control access to one or more cache clusters.</p> <p>Cache security groups are only used when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (Amazon VPC). If you are creating a cache cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html\">CreateCacheSubnetGroup</a>.</p>",
        "operationId": "CreateCacheSecurityGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCacheSecurityGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCacheSecurityGroupResult"
            }
          },
          "480": {
            "description": "CacheSecurityGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "CacheSecurityGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupQuotaExceededFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CreateCacheSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>",
        "operationId": "CreateCacheSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCacheSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCacheSubnetGroupResult"
            }
          },
          "480": {
            "description": "CacheSubnetGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupAlreadyExistsFault"
            }
          },
          "481": {
            "description": "CacheSubnetGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupQuotaExceededFault"
            }
          },
          "482": {
            "description": "CacheSubnetQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetQuotaExceededFault"
            }
          },
          "483": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        }
      }
    },
    "/#CreateReplicationGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.</p> <p>A Redis (cluster mode disabled) replication group is a collection of cache clusters, where one of the cache clusters is a read/write primary and the others are read-only replicas. Writes to the primary are asynchronously propagated to the replicas.</p> <p>A Redis (cluster mode enabled) replication group is a collection of 1 to 15 node groups (shards). Each node group (shard) has one read/write primary node and up to 5 read-only replica nodes. Writes to the primary are asynchronously propagated to the replicas. Redis (cluster mode enabled) replication groups partition the data across node groups (shards).</p> <p>When a Redis (cluster mode disabled) replication group has been successfully created, you can add one or more read replicas to it, up to a total of 5 read replicas. You cannot alter a Redis (cluster mode enabled) replication group after it has been created. However, if you need to increase or decrease the number of node groups (console: shards), you can avail yourself of ElastiCache for Redis' enhanced backup and restore. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/backups-restoring.html\">Restoring From a Backup with Cluster Resizing</a> in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "CreateReplicationGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReplicationGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateReplicationGroupResult"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "482": {
            "description": "ReplicationGroupAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupAlreadyExistsFault"
            }
          },
          "483": {
            "description": "InsufficientCacheClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientCacheClusterCapacityFault"
            }
          },
          "484": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "485": {
            "description": "CacheSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupNotFoundFault"
            }
          },
          "486": {
            "description": "ClusterQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaForCustomerExceededFault"
            }
          },
          "487": {
            "description": "NodeQuotaForClusterExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForClusterExceededFault"
            }
          },
          "488": {
            "description": "NodeQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForCustomerExceededFault"
            }
          },
          "489": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "490": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "491": {
            "description": "TagQuotaPerResourceExceeded",
            "schema": {
              "$ref": "#/definitions/TagQuotaPerResourceExceeded"
            }
          },
          "492": {
            "description": "NodeGroupsPerReplicationGroupQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeGroupsPerReplicationGroupQuotaExceededFault"
            }
          },
          "493": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "494": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#CreateSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a copy of an entire cache cluster or replication group at a specific moment in time.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "CreateSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateSnapshotResult"
            }
          },
          "480": {
            "description": "SnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/SnapshotAlreadyExistsFault"
            }
          },
          "481": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "482": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "483": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "484": {
            "description": "InvalidReplicationGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidReplicationGroupStateFault"
            }
          },
          "485": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "486": {
            "description": "SnapshotFeatureNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/SnapshotFeatureNotSupportedFault"
            }
          },
          "487": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          },
          "488": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          }
        }
      }
    },
    "/#DeleteCacheCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a previously provisioned cache cluster. <code>DeleteCacheCluster</code> deletes all associated cache nodes, node endpoints and the cache cluster itself. When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the cache cluster; you cannot cancel or revert this operation.</p> <p>This operation cannot be used to delete a cache cluster that is the last read replica of a replication group or node group (shard) that has Multi-AZ mode enabled or a cache cluster from a Redis (cluster mode enabled) replication group.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important>",
        "operationId": "DeleteCacheCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCacheClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCacheClusterResult"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "482": {
            "description": "SnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/SnapshotAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SnapshotFeatureNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/SnapshotFeatureNotSupportedFault"
            }
          },
          "484": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "485": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "486": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DeleteCacheParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters.",
        "operationId": "DeleteCacheParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCacheParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidCacheParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheParameterGroupStateFault"
            }
          },
          "481": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DeleteCacheSecurityGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a cache security group.</p> <note> <p>You cannot delete a cache security group if it is associated with any cache clusters.</p> </note>",
        "operationId": "DeleteCacheSecurityGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCacheSecurityGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InvalidCacheSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheSecurityGroupStateFault"
            }
          },
          "481": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DeleteCacheSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a cache subnet group if it is associated with any cache clusters.</p> </note>",
        "operationId": "DeleteCacheSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteCacheSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "CacheSubnetGroupInUse",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupInUse"
            }
          },
          "481": {
            "description": "CacheSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DeleteReplicationGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes an existing replication group. By default, this operation deletes the entire replication group, including the primary/primaries and all of the read replicas. If the replication group has only one primary, you can optionally delete only the read replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "DeleteReplicationGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReplicationGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteReplicationGroupResult"
            }
          },
          "480": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidReplicationGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidReplicationGroupStateFault"
            }
          },
          "482": {
            "description": "SnapshotAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/SnapshotAlreadyExistsFault"
            }
          },
          "483": {
            "description": "SnapshotFeatureNotSupportedFault",
            "schema": {
              "$ref": "#/definitions/SnapshotFeatureNotSupportedFault"
            }
          },
          "484": {
            "description": "SnapshotQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/SnapshotQuotaExceededFault"
            }
          },
          "485": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "486": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DeleteSnapshot": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes an existing snapshot. When you receive a successful response from this operation, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "DeleteSnapshot",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteSnapshotMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteSnapshotResult"
            }
          },
          "480": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidSnapshotStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidSnapshotStateFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeCacheClusters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns information about all provisioned cache clusters if no cache cluster identifier is specified, or about a specific cache cluster if a cache cluster identifier is supplied.</p> <p>By default, abbreviated information about the cache clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the cache nodes associated with the cache clusters. These details include the DNS address and port for the cache node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only cluster-level information is displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only cluster-level information is displayed.</p> <p>If cache nodes are currently being added to the cache cluster, node endpoint information and creation time for the additional nodes are not displayed until they are completely provisioned. When the cache cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If cache nodes are currently being removed from the cache cluster, no endpoint information for the removed nodes is displayed.</p>",
        "operationId": "DescribeCacheClusters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheClustersMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheClusterMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        },
        "x-waiters": [
          {
            "acceptors": [
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "available",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "deleted",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "deleting",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "incompatible-network",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "restore-failed",
                "matcher": "pathAny",
                "state": "failure"
              }
            ],
            "delay": 15,
            "description": "Wait until ElastiCache cluster is available.",
            "maxAttempts": 40,
            "operation": "DescribeCacheClusters"
          },
          {
            "acceptors": [
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "deleted",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "expected": "CacheClusterNotFound",
                "matcher": "error",
                "state": "success"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "available",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "creating",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "incompatible-network",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "modifying",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "restore-failed",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "argument": "CacheClusters[].CacheClusterStatus",
                "expected": "snapshotting",
                "matcher": "pathAny",
                "state": "failure"
              }
            ],
            "delay": 15,
            "description": "Wait until ElastiCache cluster is deleted.",
            "maxAttempts": 40,
            "operation": "DescribeCacheClusters"
          }
        ]
      }
    },
    "/#DescribeCacheEngineVersions": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of the available cache engines and their versions.",
        "operationId": "DescribeCacheEngineVersions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheEngineVersionsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheEngineVersionMessage"
            }
          }
        }
      }
    },
    "/#DescribeCacheParameterGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of cache parameter group descriptions. If a cache parameter group name is specified, the list contains only the descriptions for that group.",
        "operationId": "DescribeCacheParameterGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheParameterGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupsMessage"
            }
          },
          "480": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeCacheParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns the detailed parameter list for a particular cache parameter group.",
        "operationId": "DescribeCacheParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheParametersMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupDetails"
            }
          },
          "480": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeCacheSecurityGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of cache security group descriptions. If a cache security group name is specified, the list contains only the description of that group.",
        "operationId": "DescribeCacheSecurityGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheSecurityGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupMessage"
            }
          },
          "480": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeCacheSubnetGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns a list of cache subnet group descriptions. If a subnet group name is specified, the list contains only the description of that group.",
        "operationId": "DescribeCacheSubnetGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeCacheSubnetGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupMessage"
            }
          },
          "480": {
            "description": "CacheSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupNotFoundFault"
            }
          }
        }
      }
    },
    "/#DescribeEngineDefaultParameters": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns the default engine and system parameter information for the specified cache engine.",
        "operationId": "DescribeEngineDefaultParameters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultParametersMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeEngineDefaultParametersResult"
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "481": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeEvents": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns events related to cache clusters, cache security groups, and cache parameter groups. You can obtain events specific to a particular cache cluster, cache security group, or cache parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days' worth of events if necessary.</p>",
        "operationId": "DescribeEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeEventsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EventsMessage"
            }
          },
          "480": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "481": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeReplicationGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns information about a particular replication group. If no identifier is specified, <code>DescribeReplicationGroups</code> returns information about all replication groups.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "DescribeReplicationGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReplicationGroupsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupMessage"
            }
          },
          "480": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        },
        "x-waiters": [
          {
            "acceptors": [
              {
                "argument": "ReplicationGroups[].Status",
                "expected": "available",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "argument": "ReplicationGroups[].Status",
                "expected": "deleted",
                "matcher": "pathAny",
                "state": "failure"
              }
            ],
            "delay": 15,
            "description": "Wait until ElastiCache replication group is available.",
            "maxAttempts": 40,
            "operation": "DescribeReplicationGroups"
          },
          {
            "acceptors": [
              {
                "argument": "ReplicationGroups[].Status",
                "expected": "deleted",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "argument": "ReplicationGroups[].Status",
                "expected": "available",
                "matcher": "pathAny",
                "state": "failure"
              },
              {
                "expected": "ReplicationGroupNotFoundFault",
                "matcher": "error",
                "state": "success"
              }
            ],
            "delay": 15,
            "description": "Wait until ElastiCache replication group is deleted.",
            "maxAttempts": 40,
            "operation": "DescribeReplicationGroups"
          }
        ]
      }
    },
    "/#DescribeReservedCacheNodes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Returns information about reserved cache nodes for this account, or about a specified reserved cache node.",
        "operationId": "DescribeReservedCacheNodes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReservedCacheNodesMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodeMessage"
            }
          },
          "480": {
            "description": "ReservedCacheNodeNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodeNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeReservedCacheNodesOfferings": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Lists available reserved cache node offerings.",
        "operationId": "DescribeReservedCacheNodesOfferings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeReservedCacheNodesOfferingsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodesOfferingMessage"
            }
          },
          "480": {
            "description": "ReservedCacheNodesOfferingNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodesOfferingNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#DescribeSnapshots": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Returns information about cache cluster or replication group snapshots. By default, <code>DescribeSnapshots</code> lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cache cluster.</p> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "DescribeSnapshots",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeSnapshotsMessage"
            }
          },
          {
            "description": "Pagination limit",
            "in": "query",
            "name": "MaxRecords",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeSnapshotsListMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#ListAllowedNodeTypeModifications": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Lists all available node types that you can scale your Redis cluster's or replication group's current node type up to.</p> <p>When you use the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code> operations to scale up your cluster or replication group, the value of the <code>CacheNodeType</code> parameter must be one of the node types returned by this operation.</p>",
        "operationId": "ListAllowedNodeTypeModifications",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAllowedNodeTypeModificationsMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllowedNodeTypeModificationsMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          }
        }
      }
    },
    "/#ListTagsForResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Lists all cost allocation tags currently on the named resource. A <code>cost allocation tag</code> is a key-value pair where the key is case-sensitive and the value is optional. You can use cost allocation tags to categorize and track your AWS costs.</p> <p>You can have a maximum of 50 cost allocation tags on an ElastiCache resource. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/BestPractices.html\">Using Cost Allocation Tags in Amazon ElastiCache</a>.</p>",
        "operationId": "ListTagsForResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagListMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidARNFault",
            "schema": {
              "$ref": "#/definitions/InvalidARNFault"
            }
          }
        }
      }
    },
    "/#ModifyCacheCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies the settings for a cache cluster. You can use this operation to change one or more cluster configuration parameters by specifying the parameters and the new values.",
        "operationId": "ModifyCacheCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyCacheClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyCacheClusterResult"
            }
          },
          "480": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "481": {
            "description": "InvalidCacheSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheSecurityGroupStateFault"
            }
          },
          "482": {
            "description": "InsufficientCacheClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientCacheClusterCapacityFault"
            }
          },
          "483": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "484": {
            "description": "NodeQuotaForClusterExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForClusterExceededFault"
            }
          },
          "485": {
            "description": "NodeQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForCustomerExceededFault"
            }
          },
          "486": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "487": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "488": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "489": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "490": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#ModifyCacheParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies the parameters of a cache parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.",
        "operationId": "ModifyCacheParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyCacheParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidCacheParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheParameterGroupStateFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#ModifyCacheSubnetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies an existing cache subnet group.",
        "operationId": "ModifyCacheSubnetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyCacheSubnetGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyCacheSubnetGroupResult"
            }
          },
          "480": {
            "description": "CacheSubnetGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetGroupNotFoundFault"
            }
          },
          "481": {
            "description": "CacheSubnetQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/CacheSubnetQuotaExceededFault"
            }
          },
          "482": {
            "description": "SubnetInUse",
            "schema": {
              "$ref": "#/definitions/SubnetInUse"
            }
          },
          "483": {
            "description": "InvalidSubnet",
            "schema": {
              "$ref": "#/definitions/InvalidSubnet"
            }
          }
        }
      }
    },
    "/#ModifyReplicationGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies the settings for a replication group.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important> <note> <p>This operation is valid for Redis only.</p> </note>",
        "operationId": "ModifyReplicationGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyReplicationGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyReplicationGroupResult"
            }
          },
          "480": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "481": {
            "description": "InvalidReplicationGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidReplicationGroupStateFault"
            }
          },
          "482": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "483": {
            "description": "InvalidCacheSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheSecurityGroupStateFault"
            }
          },
          "484": {
            "description": "InsufficientCacheClusterCapacityFault",
            "schema": {
              "$ref": "#/definitions/InsufficientCacheClusterCapacityFault"
            }
          },
          "485": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "486": {
            "description": "NodeQuotaForClusterExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForClusterExceededFault"
            }
          },
          "487": {
            "description": "NodeQuotaForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/NodeQuotaForCustomerExceededFault"
            }
          },
          "488": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "489": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "490": {
            "description": "InvalidVPCNetworkStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidVPCNetworkStateFault"
            }
          },
          "491": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "492": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#PurchaseReservedCacheNodesOffering": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Allows you to purchase a reserved cache node offering.",
        "operationId": "PurchaseReservedCacheNodesOffering",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseReservedCacheNodesOfferingMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PurchaseReservedCacheNodesOfferingResult"
            }
          },
          "480": {
            "description": "ReservedCacheNodesOfferingNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodesOfferingNotFoundFault"
            }
          },
          "481": {
            "description": "ReservedCacheNodeAlreadyExistsFault",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodeAlreadyExistsFault"
            }
          },
          "482": {
            "description": "ReservedCacheNodeQuotaExceededFault",
            "schema": {
              "$ref": "#/definitions/ReservedCacheNodeQuotaExceededFault"
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#RebootCacheCluster": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Reboots some, or all, of the cache nodes within a provisioned cache cluster. This operation applies any modified cache parameter groups to the cache cluster. The reboot operation takes place as soon as possible, and results in a momentary outage to the cache cluster. During the reboot, the cache cluster status is set to REBOOTING.</p> <p>The reboot causes the contents of the cache (for each cache node being rebooted) to be lost.</p> <p>When the reboot is complete, a cache cluster event is created.</p>",
        "operationId": "RebootCacheCluster",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RebootCacheClusterMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RebootCacheClusterResult"
            }
          },
          "480": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "481": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          }
        }
      }
    },
    "/#RemoveTagsFromResource": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Removes the tags identified by the <code>TagKeys</code> list from the named resource.",
        "operationId": "RemoveTagsFromResource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveTagsFromResourceMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagListMessage"
            }
          },
          "480": {
            "description": "CacheClusterNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheClusterNotFoundFault"
            }
          },
          "481": {
            "description": "SnapshotNotFoundFault",
            "schema": {
              "$ref": "#/definitions/SnapshotNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidARNFault",
            "schema": {
              "$ref": "#/definitions/InvalidARNFault"
            }
          },
          "483": {
            "description": "TagNotFoundFault",
            "schema": {
              "$ref": "#/definitions/TagNotFoundFault"
            }
          }
        }
      }
    },
    "/#ResetCacheParameterGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies the parameters of a cache parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire cache parameter group, specify the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code> parameters.",
        "operationId": "ResetCacheParameterGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetCacheParameterGroupMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNameMessage"
            }
          },
          "480": {
            "description": "InvalidCacheParameterGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheParameterGroupStateFault"
            }
          },
          "481": {
            "description": "CacheParameterGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheParameterGroupNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "483": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#RevokeCacheSecurityGroupIngress": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized.",
        "operationId": "RevokeCacheSecurityGroupIngress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RevokeCacheSecurityGroupIngressMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RevokeCacheSecurityGroupIngressResult"
            }
          },
          "480": {
            "description": "CacheSecurityGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/CacheSecurityGroupNotFoundFault"
            }
          },
          "481": {
            "description": "AuthorizationNotFoundFault",
            "schema": {
              "$ref": "#/definitions/AuthorizationNotFoundFault"
            }
          },
          "482": {
            "description": "InvalidCacheSecurityGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheSecurityGroupStateFault"
            }
          },
          "483": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "484": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    },
    "/#TestFailover": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Represents the input of a <code>TestFailover</code> operation which test automatic failover on a specified node group (called shard in the console) in a replication group (called cluster in the console).</p> <p class=\"title\"> <b>Note the following</b> </p> <ul> <li> <p>A customer can use this operation to test automatic failover on up to 5 shards (called node groups in the ElastiCache API and AWS CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation on shards in different clusters (called replication groups in the API and CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling this operation multiple times on different shards in the same Redis (cluster mode enabled) replication group, the first node replacement must complete before a subsequent call can be made.</p> </li> <li> <p>To determine whether the node replacement is complete you can check Events using the Amazon ElastiCache console, the AWS CLI, or the ElastiCache API. Look for the following automatic failover related events, listed here in order of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Failover from master node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group message: <code>Failover from master node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p> <ul> <li> <p> <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/ECEvents.Viewing.html\">Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html\">DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also see, <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/AutoFailover.html#auto-failover-test\">Testing Multi-AZ with Automatic Failover</a> in the <i>ElastiCache User Guide</i>.</p>",
        "operationId": "TestFailover",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestFailoverMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TestFailoverResult"
            }
          },
          "480": {
            "description": "APICallRateForCustomerExceededFault",
            "schema": {
              "$ref": "#/definitions/APICallRateForCustomerExceededFault"
            }
          },
          "481": {
            "description": "InvalidCacheClusterStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidCacheClusterStateFault"
            }
          },
          "482": {
            "description": "InvalidReplicationGroupStateFault",
            "schema": {
              "$ref": "#/definitions/InvalidReplicationGroupStateFault"
            }
          },
          "483": {
            "description": "NodeGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/NodeGroupNotFoundFault"
            }
          },
          "484": {
            "description": "ReplicationGroupNotFoundFault",
            "schema": {
              "$ref": "#/definitions/ReplicationGroupNotFoundFault"
            }
          },
          "485": {
            "description": "TestFailoverNotAvailableFault",
            "schema": {
              "$ref": "#/definitions/TestFailoverNotAvailableFault"
            }
          },
          "486": {
            "description": "InvalidParameterValueException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterValueException"
            }
          },
          "487": {
            "description": "InvalidParameterCombinationException",
            "schema": {
              "$ref": "#/definitions/InvalidParameterCombinationException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "APICallRateForCustomerExceededFault": {
      "description": "The customer has exceeded the allowed rate of API calls.",
      "properties": {},
      "type": "object"
    },
    "AZMode": {
      "enum": [
        "single-az",
        "cross-az"
      ],
      "type": "string"
    },
    "AddTagsToResourceMessage": {
      "description": "Represents the input of an AddTagsToResource operation.",
      "properties": {
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the resource to which the tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value."
        }
      },
      "required": [
        "ResourceName",
        "Tags"
      ],
      "type": "object"
    },
    "AllowedNodeTypeModificationsMessage": {
      "description": "Represents the allowed node types you can use to modify your cache cluster or replication group.",
      "properties": {
        "ScaleUpModifications": {
          "$ref": "#/definitions/NodeTypeList",
          "description": "<p>A string list, each element of which specifies a cache node type which you can use to scale your cache cluster or replication group.</p> <p>When scaling up a Redis cluster or replication group using <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>, use a value from this list for the <code>CacheNodeType</code> parameter.</p>"
        }
      },
      "type": "object"
    },
    "AuthorizationAlreadyExistsFault": {
      "description": "The specified Amazon EC2 security group is already authorized for the specified cache security group.",
      "properties": {},
      "type": "object"
    },
    "AuthorizationNotFoundFault": {
      "description": "The specified Amazon EC2 security group is not authorized for the specified cache security group.",
      "properties": {},
      "type": "object"
    },
    "AuthorizeCacheSecurityGroupIngressMessage": {
      "description": "Represents the input of an AuthorizeCacheSecurityGroupIngress operation.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The cache security group that allows network ingress."
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The Amazon EC2 security group to be authorized for ingress to the cache security group."
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter."
        }
      },
      "required": [
        "CacheSecurityGroupName",
        "EC2SecurityGroupName",
        "EC2SecurityGroupOwnerId"
      ],
      "type": "object"
    },
    "AuthorizeCacheSecurityGroupIngressResult": {
      "properties": {
        "CacheSecurityGroup": {
          "$ref": "#/definitions/CacheSecurityGroup"
        }
      },
      "type": "object"
    },
    "AutomaticFailoverStatus": {
      "enum": [
        "enabled",
        "disabled",
        "enabling",
        "disabling"
      ],
      "type": "string"
    },
    "AvailabilityZone": {
      "description": "Describes an Availability Zone in which the cache cluster is launched.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the Availability Zone."
        }
      },
      "type": "object"
    },
    "AvailabilityZonesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "AwsQueryErrorMessage": {
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BooleanOptional": {
      "type": "boolean"
    },
    "CacheCluster": {
      "description": "Contains all of the attributes of a specific cache cluster.",
      "properties": {
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "This parameter is currently disabled."
        },
        "CacheClusterCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the cache cluster was created."
        },
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The user-supplied identifier of the cache cluster. This identifier is a unique key that identifies a cache cluster."
        },
        "CacheClusterStatus": {
          "$ref": "#/definitions/String",
          "description": "The current state of this cache cluster, one of the following values: <code>available</code>, <code>creating</code>, <code>deleted</code>, <code>deleting</code>, <code>incompatible-network</code>, <code>modifying</code>, <code>rebooting cache cluster nodes</code>, <code>restore-failed</code>, or <code>snapshotting</code>."
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the compute and memory capacity node type for the cache cluster.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "CacheNodes": {
          "$ref": "#/definitions/CacheNodeList",
          "description": "A list of cache nodes that are members of the cache cluster."
        },
        "CacheParameterGroup": {
          "$ref": "#/definitions/CacheParameterGroupStatus"
        },
        "CacheSecurityGroups": {
          "$ref": "#/definitions/CacheSecurityGroupMembershipList",
          "description": "A list of cache security group elements, composed of name and status sub-elements."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache subnet group associated with the cache cluster."
        },
        "ClientDownloadLandingPage": {
          "$ref": "#/definitions/String",
          "description": "The URL of the web page where you can download the latest ElastiCache client library."
        },
        "ConfigurationEndpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "<p>Represents a Memcached cluster endpoint which, if Automatic Discovery is enabled on the cluster, can be used by an application to connect to any node in the cluster. The configuration endpoint will always have <code>.cfg</code> in it.</p> <p>Example: <code>mem-3.9dvc4r<u>.cfg</u>.usw2.cache.amazonaws.com:11211</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache engine (<code>memcached</code> or <code>redis</code>) to be used for this cache cluster."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version of the cache engine that is used in this cache cluster."
        },
        "NotificationConfiguration": {
          "$ref": "#/definitions/NotificationConfiguration"
        },
        "NumCacheNodes": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of cache nodes in the cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>"
        },
        "PendingModifiedValues": {
          "$ref": "#/definitions/PendingModifiedValues"
        },
        "PreferredAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The name of the Availability Zone in which the cache cluster is located or \"Multiple\" if the cache nodes are located in different Availability Zones."
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The replication group to which this cache cluster belongs. If this field is empty, the cache cluster is not associated with any replication group."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroupMembershipList",
          "description": "A list of VPC Security Groups associated with the cache cluster."
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p> </important>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cache cluster.</p> <p>Example: <code>05:00-09:00</code> </p>"
        }
      },
      "type": "object"
    },
    "CacheClusterAlreadyExistsFault": {
      "description": "You already have a cache cluster with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "CacheClusterList": {
      "items": {
        "$ref": "#/definitions/CacheCluster"
      },
      "type": "array"
    },
    "CacheClusterMessage": {
      "description": "Represents the output of a <code>DescribeCacheClusters</code> operation.",
      "properties": {
        "CacheClusters": {
          "$ref": "#/definitions/CacheClusterList",
          "description": "A list of cache clusters. Each item in the list contains detailed information about one cache cluster."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "CacheClusterNotFoundFault": {
      "description": "The requested cache cluster ID does not refer to an existing cache cluster.",
      "properties": {},
      "type": "object"
    },
    "CacheEngineVersion": {
      "description": "Provides all of the details about a particular cache engine version.",
      "properties": {
        "CacheEngineDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the cache engine."
        },
        "CacheEngineVersionDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the cache engine version."
        },
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache parameter group family associated with this cache engine.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache engine."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version number of the cache engine."
        }
      },
      "type": "object"
    },
    "CacheEngineVersionList": {
      "items": {
        "$ref": "#/definitions/CacheEngineVersion"
      },
      "type": "array"
    },
    "CacheEngineVersionMessage": {
      "description": "Represents the output of a <a>DescribeCacheEngineVersions</a> operation.",
      "properties": {
        "CacheEngineVersions": {
          "$ref": "#/definitions/CacheEngineVersionList",
          "description": "A list of cache engine version details. Each element in the list contains detailed information about one cache engine version."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "CacheNode": {
      "description": "<p>Represents an individual cache node within a cache cluster. Each cache node runs its own instance of the cluster's protocol-compliant caching software - either Memcached or Redis.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>",
      "properties": {
        "CacheNodeCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the cache node was created."
        },
        "CacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The combination of cluster ID and node ID uniquely identifies every cache node used in a customer's AWS account."
        },
        "CacheNodeStatus": {
          "$ref": "#/definitions/String",
          "description": "The current state of this cache node."
        },
        "CustomerAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone where this node was created and now resides."
        },
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The hostname for connecting to this cache node."
        },
        "ParameterGroupStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the parameter group applied to this cache node."
        },
        "SourceCacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the primary node to which this read replica node is synchronized. If this field is empty, this node is not associated with a primary cache cluster."
        }
      },
      "type": "object"
    },
    "CacheNodeIdsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "CacheNodeList": {
      "items": {
        "$ref": "#/definitions/CacheNode"
      },
      "type": "array"
    },
    "CacheNodeTypeSpecificParameter": {
      "description": "A parameter that has a different value for each cache node type it is applied to. For example, in a Redis cache cluster, a <code>cache.m1.large</code> cache node type would have a larger <code>maxmemory</code> value than a <code>cache.m1.small</code> type.",
      "properties": {
        "AllowedValues": {
          "$ref": "#/definitions/String",
          "description": "The valid range of values for the parameter."
        },
        "CacheNodeTypeSpecificValues": {
          "$ref": "#/definitions/CacheNodeTypeSpecificValueList",
          "description": "A list of cache node types and their corresponding values for this parameter."
        },
        "ChangeType": {
          "$ref": "#/definitions/ChangeType",
          "description": "Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window's reboot. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Rebooting.html\">Rebooting a Cluster</a>."
        },
        "DataType": {
          "$ref": "#/definitions/String",
          "description": "The valid data type for the parameter."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the parameter."
        },
        "IsModifiable": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed."
        },
        "MinimumEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The earliest cache engine version to which the parameter can apply."
        },
        "ParameterName": {
          "$ref": "#/definitions/String",
          "description": "The name of the parameter."
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "The source of the parameter value."
        }
      },
      "type": "object"
    },
    "CacheNodeTypeSpecificParametersList": {
      "items": {
        "$ref": "#/definitions/CacheNodeTypeSpecificParameter"
      },
      "type": "array"
    },
    "CacheNodeTypeSpecificValue": {
      "description": "A value that applies only to a certain cache node type.",
      "properties": {
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "The cache node type for which this value applies."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The value for the cache node type."
        }
      },
      "type": "object"
    },
    "CacheNodeTypeSpecificValueList": {
      "items": {
        "$ref": "#/definitions/CacheNodeTypeSpecificValue"
      },
      "type": "array"
    },
    "CacheParameterGroup": {
      "description": "Represents the output of a <code>CreateCacheParameterGroup</code> operation.",
      "properties": {
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache parameter group family that this cache parameter group is compatible with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>"
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description for this cache parameter group."
        }
      },
      "type": "object"
    },
    "CacheParameterGroupAlreadyExistsFault": {
      "description": "A cache parameter group with the requested name already exists.",
      "properties": {},
      "type": "object"
    },
    "CacheParameterGroupDetails": {
      "description": "Represents the output of a <code>DescribeCacheParameters</code> operation.",
      "properties": {
        "CacheNodeTypeSpecificParameters": {
          "$ref": "#/definitions/CacheNodeTypeSpecificParametersList",
          "description": "A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "A list of <a>Parameter</a> instances."
        }
      },
      "type": "object"
    },
    "CacheParameterGroupList": {
      "items": {
        "$ref": "#/definitions/CacheParameterGroup"
      },
      "type": "array"
    },
    "CacheParameterGroupNameMessage": {
      "description": "<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>ModifyCacheParameterGroup</code> </p> </li> <li> <p> <code>ResetCacheParameterGroup</code> </p> </li> </ul>",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group."
        }
      },
      "type": "object"
    },
    "CacheParameterGroupNotFoundFault": {
      "description": "The requested cache parameter group name does not refer to an existing cache parameter group.",
      "properties": {},
      "type": "object"
    },
    "CacheParameterGroupQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the maximum number of cache security groups.",
      "properties": {},
      "type": "object"
    },
    "CacheParameterGroupStatus": {
      "description": "Status of the cache parameter group.",
      "properties": {
        "CacheNodeIdsToReboot": {
          "$ref": "#/definitions/CacheNodeIdsList",
          "description": "A list of the cache node IDs which need to be rebooted for parameter changes to be applied. A node ID is a numeric identifier (0001, 0002, etc.)."
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group."
        },
        "ParameterApplyStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of parameter updates."
        }
      },
      "type": "object"
    },
    "CacheParameterGroupsMessage": {
      "description": "Represents the output of a <code>DescribeCacheParameterGroups</code> operation.",
      "properties": {
        "CacheParameterGroups": {
          "$ref": "#/definitions/CacheParameterGroupList",
          "description": "A list of cache parameter groups. Each element in the list contains detailed information about one cache parameter group."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "CacheSecurityGroup": {
      "description": "<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li> <li> <p> <code>CreateCacheSecurityGroup</code> </p> </li> <li> <p> <code>RevokeCacheSecurityGroupIngress</code> </p> </li> </ul>",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache security group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the cache security group."
        },
        "EC2SecurityGroups": {
          "$ref": "#/definitions/EC2SecurityGroupList",
          "description": "A list of Amazon EC2 security groups that are associated with this cache security group."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the cache security group owner."
        }
      },
      "type": "object"
    },
    "CacheSecurityGroupAlreadyExistsFault": {
      "description": "A cache security group with the specified name already exists.",
      "properties": {},
      "type": "object"
    },
    "CacheSecurityGroupMembership": {
      "description": "Represents a cache cluster's status within a particular cache security group.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache security group."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The membership status in the cache security group. The status changes when a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified."
        }
      },
      "type": "object"
    },
    "CacheSecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/CacheSecurityGroupMembership"
      },
      "type": "array"
    },
    "CacheSecurityGroupMessage": {
      "description": "Represents the output of a <code>DescribeCacheSecurityGroups</code> operation.",
      "properties": {
        "CacheSecurityGroups": {
          "$ref": "#/definitions/CacheSecurityGroups",
          "description": "A list of cache security groups. Each element in the list contains detailed information about one group."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "CacheSecurityGroupNameList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "CacheSecurityGroupNotFoundFault": {
      "description": "The requested cache security group name does not refer to an existing cache security group.",
      "properties": {},
      "type": "object"
    },
    "CacheSecurityGroupQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of cache security groups.",
      "properties": {},
      "type": "object"
    },
    "CacheSecurityGroups": {
      "items": {
        "$ref": "#/definitions/CacheSecurityGroup"
      },
      "type": "array"
    },
    "CacheSubnetGroup": {
      "description": "<p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li> <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li> </ul>",
      "properties": {
        "CacheSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the cache subnet group."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache subnet group."
        },
        "Subnets": {
          "$ref": "#/definitions/SubnetList",
          "description": "A list of subnets associated with the cache subnet group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group."
        }
      },
      "type": "object"
    },
    "CacheSubnetGroupAlreadyExistsFault": {
      "description": "The requested cache subnet group name is already in use by an existing cache subnet group.",
      "properties": {},
      "type": "object"
    },
    "CacheSubnetGroupInUse": {
      "description": "The requested cache subnet group is currently in use.",
      "properties": {},
      "type": "object"
    },
    "CacheSubnetGroupMessage": {
      "description": "Represents the output of a <code>DescribeCacheSubnetGroups</code> operation.",
      "properties": {
        "CacheSubnetGroups": {
          "$ref": "#/definitions/CacheSubnetGroups",
          "description": "A list of cache subnet groups. Each element in the list contains detailed information about one group."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "CacheSubnetGroupNotFoundFault": {
      "description": "The requested cache subnet group name does not refer to an existing cache subnet group.",
      "properties": {},
      "type": "object"
    },
    "CacheSubnetGroupQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of cache subnet groups.",
      "properties": {},
      "type": "object"
    },
    "CacheSubnetGroups": {
      "items": {
        "$ref": "#/definitions/CacheSubnetGroup"
      },
      "type": "array"
    },
    "CacheSubnetQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet group.",
      "properties": {},
      "type": "object"
    },
    "ChangeType": {
      "enum": [
        "immediate",
        "requires-reboot"
      ],
      "type": "string"
    },
    "ClusterIdList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ClusterQuotaForCustomerExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of cache clusters per customer.",
      "properties": {},
      "type": "object"
    },
    "CopySnapshotMessage": {
      "description": "Represents the input of a <code>CopySnapshotMessage</code> operation.",
      "properties": {
        "SourceSnapshotName": {
          "$ref": "#/definitions/String",
          "description": "The name of an existing snapshot from which to make a copy."
        },
        "TargetBucket": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon S3 bucket to which the snapshot is exported. This parameter is used only when exporting a snapshot for external access.</p> <p>When using this parameter to export a snapshot, be sure Amazon ElastiCache has the needed permissions to this S3 bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess\">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html\">Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>"
        },
        "TargetSnapshotName": {
          "$ref": "#/definitions/String",
          "description": "A name for the snapshot copy. ElastiCache does not permit overwriting a snapshot, therefore this name must be unique within its context - ElastiCache or an Amazon S3 bucket if exporting."
        }
      },
      "required": [
        "SourceSnapshotName",
        "TargetSnapshotName"
      ],
      "type": "object"
    },
    "CopySnapshotResult": {
      "properties": {
        "Snapshot": {
          "$ref": "#/definitions/Snapshot"
        }
      },
      "type": "object"
    },
    "CreateCacheClusterMessage": {
      "description": "Represents the input of a CreateCacheCluster operation.",
      "properties": {
        "AZMode": {
          "$ref": "#/definitions/AZMode",
          "description": "<p>Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.</p> <p>This parameter is only supported for Memcached cache clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache assumes <code>single-az</code> mode.</p>"
        },
        "AuthToken": {
          "$ref": "#/definitions/String",
          "description": "<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>Cannot contain any of the following characters: '/', '\"', or \"@\". </p> </li> </ul> <p>For more information, see <a href=\"http://redis.io/commands/AUTH\">AUTH password</a> at Redis.</p>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "This parameter is currently disabled."
        },
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "<p>The node group (shard) identifier. This parameter is stored as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A name must contain from 1 to 20 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the parameter group to associate with this cache cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has <code>cluster-enabled='yes'</code> when creating a cluster."
        },
        "CacheSecurityGroupNames": {
          "$ref": "#/definitions/CacheSecurityGroupNameList",
          "description": "<p>A list of security group names to associate with this cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>"
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the subnet group to be used for the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SubnetGroups.html\">Subnets and Subnet Groups</a>.</p> </important>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache engine to be used for this cache cluster.</p> <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code> </p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version number of the cache engine to be used for this cache cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement\">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster or replication group and create it anew with the earlier engine version. </p>"
        },
        "NotificationTopicArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cache cluster owner.</p> </note>"
        },
        "NumCacheNodes": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The initial number of cache nodes that the cache cluster has.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p> <p>If you need more than 20 nodes for your Memcached cluster, please fill out the ElastiCache Limit Increase Request form at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request/\">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port number on which each of the cache nodes accepts connections."
        },
        "PreferredAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The EC2 Availability Zone in which the cache cluster is created.</p> <p>All nodes belonging to this Memcached cache cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen Availability Zone.</p>"
        },
        "PreferredAvailabilityZones": {
          "$ref": "#/definitions/PreferredAvailabilityZoneList",
          "description": "<p>A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.</p> <p>This option is only supported on Memcached.</p> <note> <p>If you are creating your cache cluster in an Amazon VPC (recommended) you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheNodes</code>.</p> </note> <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code> instead, or repeat the Availability Zone multiple times in the list.</p> <p>Default: System chosen Availability Zones.</p>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cache cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "<important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important> <p>The ID of the replication group to which this cache cluster should belong. If this parameter is specified, the cache cluster is added to the specified replication group as a read replica; otherwise, the cache cluster is a standalone primary that is not part of any replication group.</p> <p>If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cache cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIdsList",
          "description": "<p>One or more VPC security groups associated with the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>"
        },
        "SnapshotArns": {
          "$ref": "#/definitions/SnapshotArnsList",
          "description": "<p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
        },
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to <code>restoring</code> while the new node group (shard) is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <p> <b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value."
        }
      },
      "required": [
        "CacheClusterId"
      ],
      "type": "object"
    },
    "CreateCacheClusterResult": {
      "properties": {
        "CacheCluster": {
          "$ref": "#/definitions/CacheCluster"
        }
      },
      "type": "object"
    },
    "CreateCacheParameterGroupMessage": {
      "description": "Represents the input of a <code>CreateCacheParameterGroup</code> operation.",
      "properties": {
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache parameter group family that the cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>"
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "A user-specified name for the cache parameter group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A user-specified description for the cache parameter group."
        }
      },
      "required": [
        "CacheParameterGroupName",
        "CacheParameterGroupFamily",
        "Description"
      ],
      "type": "object"
    },
    "CreateCacheParameterGroupResult": {
      "properties": {
        "CacheParameterGroup": {
          "$ref": "#/definitions/CacheParameterGroup"
        }
      },
      "type": "object"
    },
    "CreateCacheSecurityGroupMessage": {
      "description": "Represents the input of a <code>CreateCacheSecurityGroup</code> operation.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A name for the cache security group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the word \"Default\".</p> <p>Example: <code>mysecuritygroup</code> </p>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the cache security group."
        }
      },
      "required": [
        "CacheSecurityGroupName",
        "Description"
      ],
      "type": "object"
    },
    "CreateCacheSecurityGroupResult": {
      "properties": {
        "CacheSecurityGroup": {
          "$ref": "#/definitions/CacheSecurityGroup"
        }
      },
      "type": "object"
    },
    "CreateCacheSubnetGroupMessage": {
      "description": "Represents the input of a <code>CreateCacheSubnetGroup</code> operation.",
      "properties": {
        "CacheSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description for the cache subnet group."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "A list of VPC subnet IDs for the cache subnet group."
        }
      },
      "required": [
        "CacheSubnetGroupName",
        "CacheSubnetGroupDescription",
        "SubnetIds"
      ],
      "type": "object"
    },
    "CreateCacheSubnetGroupResult": {
      "properties": {
        "CacheSubnetGroup": {
          "$ref": "#/definitions/CacheSubnetGroup"
        }
      },
      "type": "object"
    },
    "CreateReplicationGroupMessage": {
      "description": "Represents the input of a <code>CreateReplicationGroup</code> operation.",
      "properties": {
        "AuthToken": {
          "$ref": "#/definitions/String",
          "description": "<p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>Cannot contain any of the following characters: '/', '\"', or \"@\". </p> </li> </ul> <p>For more information, see <a href=\"http://redis.io/commands/AUTH\">AUTH password</a> at Redis.</p>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "This parameter is currently disabled."
        },
        "AutomaticFailoverEnabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.</p> <p>If <code>true</code>, Multi-AZ is enabled for this replication group. If <code>false</code>, Multi-AZ is disabled for this replication group.</p> <p> <code>AutomaticFailoverEnabled</code> must be enabled for Redis (cluster mode enabled) replication groups.</p> <p>Default: false</p> <note> <p>ElastiCache Multi-AZ replication groups is not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled): T1 and T2 node types.</p> <p>Redis (cluster mode enabled): T2 node types.</p> </li> </ul> </note>"
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.</p> <p>If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. </p> <ul> <li> <p>To create a Redis (cluster mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p> </li> <li> <p>To create a Redis (cluster mode enabled) replication group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p> </li> </ul>"
        },
        "CacheSecurityGroupNames": {
          "$ref": "#/definitions/CacheSecurityGroupNameList",
          "description": "A list of cache security group names to associate with this replication group."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache subnet group to be used for the replication group.</p> <important> <p>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SubnetGroups.html\">Subnets and Subnet Groups</a>.</p> </important>"
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache engine to be used for the cache clusters in this replication group."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The version number of the cache engine to be used for the cache clusters in this replication group. To view the supported cache engine versions, use the <code>DescribeCacheEngineVersions</code> operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement\">Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster or replication group and create it anew with the earlier engine version. </p>"
        },
        "NodeGroupConfiguration": {
          "$ref": "#/definitions/NodeGroupConfigurationList",
          "description": "<p>A list of node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount.</p> <p>If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter.</p>"
        },
        "NotificationTopicArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cache cluster owner.</p> </note>"
        },
        "NumCacheClusters": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of clusters this replication group initially has.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>ReplicasPerNodeGroup</code> instead.</p> <p>If <code>AutomaticFailoverEnabled</code> is <code>true</code>, the value of this parameter must be at least 2. If <code>AutomaticFailoverEnabled</code> is <code>false</code> you can omit this parameter (it will default to 1), or you can explicitly set it to a value between 2 and 6.</p> <p>The maximum permitted value for <code>NumCacheClusters</code> is 6 (primary plus 5 replicas).</p>"
        },
        "NumNodeGroups": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1.</p> <p>Default: 1</p>"
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port number on which each member of the replication group accepts connections."
        },
        "PreferredCacheClusterAZs": {
          "$ref": "#/definitions/AvailabilityZonesList",
          "description": "<p>A list of EC2 Availability Zones in which the replication group's cache clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>NodeGroupConfiguration</code> instead.</p> <note> <p>If you are creating your replication group in an Amazon VPC (recommended), you can only locate cache clusters in Availability Zones associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</p> </note> <p>Default: system chosen Availability Zones.</p>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cache cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "PrimaryClusterId": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier of the cache cluster that serves as the primary for this replication group. This cache cluster must already exist and have a status of <code>available</code>.</p> <p>This parameter is not required if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code> is specified.</p>"
        },
        "ReplicasPerNodeGroup": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5."
        },
        "ReplicationGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A user-created description for the replication group."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must contain from 1 to 20 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIdsList",
          "description": "<p>One or more Amazon VPC security groups associated with this replication group.</p> <p>Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC).</p>"
        },
        "SnapshotArns": {
          "$ref": "#/definitions/SnapshotArnsList",
          "description": "<p>A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i> regardless of the number of ARNs specified here.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>"
        },
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to <code>restoring</code> while the new replication group is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value."
        }
      },
      "required": [
        "ReplicationGroupId",
        "ReplicationGroupDescription"
      ],
      "type": "object"
    },
    "CreateReplicationGroupResult": {
      "properties": {
        "ReplicationGroup": {
          "$ref": "#/definitions/ReplicationGroup"
        }
      },
      "type": "object"
    },
    "CreateSnapshotMessage": {
      "description": "Represents the input of a <code>CreateSnapshot</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The identifier of an existing cache cluster. The snapshot is created from this cache cluster."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier of an existing replication group. The snapshot is created from this replication group."
        },
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "A name for the snapshot being created."
        }
      },
      "required": [
        "SnapshotName"
      ],
      "type": "object"
    },
    "CreateSnapshotResult": {
      "properties": {
        "Snapshot": {
          "$ref": "#/definitions/Snapshot"
        }
      },
      "type": "object"
    },
    "DeleteCacheClusterMessage": {
      "description": "Represents the input of a <code>DeleteCacheCluster</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The cache cluster identifier for the cluster to be deleted. This parameter is not case sensitive."
        },
        "FinalSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The user-supplied name of a final cache cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cache cluster immediately afterward."
        }
      },
      "required": [
        "CacheClusterId"
      ],
      "type": "object"
    },
    "DeleteCacheClusterResult": {
      "properties": {
        "CacheCluster": {
          "$ref": "#/definitions/CacheCluster"
        }
      },
      "type": "object"
    },
    "DeleteCacheParameterGroupMessage": {
      "description": "Represents the input of a <code>DeleteCacheParameterGroup</code> operation.",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache parameter group to delete.</p> <note> <p>The specified cache security group must not be associated with any cache clusters.</p> </note>"
        }
      },
      "required": [
        "CacheParameterGroupName"
      ],
      "type": "object"
    },
    "DeleteCacheSecurityGroupMessage": {
      "description": "Represents the input of a <code>DeleteCacheSecurityGroup</code> operation.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache security group to delete.</p> <note> <p>You cannot delete the default security group.</p> </note>"
        }
      },
      "required": [
        "CacheSecurityGroupName"
      ],
      "type": "object"
    },
    "DeleteCacheSubnetGroupMessage": {
      "description": "Represents the input of a <code>DeleteCacheSubnetGroup</code> operation.",
      "properties": {
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache subnet group to delete.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>"
        }
      },
      "required": [
        "CacheSubnetGroupName"
      ],
      "type": "object"
    },
    "DeleteReplicationGroupMessage": {
      "description": "Represents the input of a <code>DeleteReplicationGroup</code> operation.",
      "properties": {
        "FinalSnapshotIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The name of a final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the replication group is immediately deleted."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the cluster to be deleted. This parameter is not case sensitive."
        },
        "RetainPrimaryCluster": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "If set to <code>true</code>, all of the read replicas are deleted, but the primary node is retained."
        }
      },
      "required": [
        "ReplicationGroupId"
      ],
      "type": "object"
    },
    "DeleteReplicationGroupResult": {
      "properties": {
        "ReplicationGroup": {
          "$ref": "#/definitions/ReplicationGroup"
        }
      },
      "type": "object"
    },
    "DeleteSnapshotMessage": {
      "description": "Represents the input of a <code>DeleteSnapshot</code> operation.",
      "properties": {
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "The name of the snapshot to be deleted."
        }
      },
      "required": [
        "SnapshotName"
      ],
      "type": "object"
    },
    "DeleteSnapshotResult": {
      "properties": {
        "Snapshot": {
          "$ref": "#/definitions/Snapshot"
        }
      },
      "type": "object"
    },
    "DescribeCacheClustersMessage": {
      "description": "Represents the input of a <code>DescribeCacheClusters</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The user-supplied cluster identifier. If this parameter is specified, only information about that specific cache cluster is returned. This parameter isn't case sensitive."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "ShowCacheClustersNotInReplicationGroups": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "An optional flag that can be included in the <code>DescribeCacheCluster</code> request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters."
        },
        "ShowCacheNodeInfo": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "An optional flag that can be included in the <code>DescribeCacheCluster</code> request to retrieve information about the individual cache nodes."
        }
      },
      "type": "object"
    },
    "DescribeCacheEngineVersionsMessage": {
      "description": "Represents the input of a <code>DescribeCacheEngineVersions</code> operation.",
      "properties": {
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of a specific cache parameter group family to return details for.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>"
        },
        "DefaultOnly": {
          "$ref": "#/definitions/Boolean",
          "description": "If <code>true</code>, specifies that only the default version of the specified engine or engine and major version combination is to be returned."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code> "
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code> </p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeCacheParameterGroupsMessage": {
      "description": "Represents the input of a <code>DescribeCacheParameterGroups</code> operation.",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of a specific cache parameter group to return details for."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeCacheParametersMessage": {
      "description": "Represents the input of a <code>DescribeCacheParameters</code> operation.",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of a specific cache parameter group to return details for."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "<p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code> </p>"
        }
      },
      "required": [
        "CacheParameterGroupName"
      ],
      "type": "object"
    },
    "DescribeCacheSecurityGroupsMessage": {
      "description": "Represents the input of a <code>DescribeCacheSecurityGroups</code> operation.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache security group to return details for."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeCacheSubnetGroupsMessage": {
      "description": "Represents the input of a <code>DescribeCacheSubnetGroups</code> operation.",
      "properties": {
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache subnet group to return details for."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        }
      },
      "type": "object"
    },
    "DescribeEngineDefaultParametersMessage": {
      "description": "Represents the input of a <code>DescribeEngineDefaultParameters</code> operation.",
      "properties": {
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache parameter group family.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        }
      },
      "required": [
        "CacheParameterGroupFamily"
      ],
      "type": "object"
    },
    "DescribeEngineDefaultParametersResult": {
      "properties": {
        "EngineDefaults": {
          "$ref": "#/definitions/EngineDefaults"
        }
      },
      "type": "object"
    },
    "DescribeEventsMessage": {
      "description": "Represents the input of a <code>DescribeEvents</code> operation.",
      "properties": {
        "Duration": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The number of minutes worth of events to retrieve."
        },
        "EndTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the event source for which events are returned. If not specified, all sources are included in the response."
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "The event source to retrieve events for. If no value is specified, all events are returned."
        },
        "StartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "<p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>"
        }
      },
      "type": "object"
    },
    "DescribeReplicationGroupsMessage": {
      "description": "Represents the input of a <code>DescribeReplicationGroups</code> operation.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "<p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>"
        }
      },
      "type": "object"
    },
    "DescribeReservedCacheNodesMessage": {
      "description": "Represents the input of a <code>DescribeReservedCacheNodes</code> operation.",
      "properties": {
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "Duration": {
          "$ref": "#/definitions/String",
          "description": "<p>The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid values: <code>\"Light Utilization\"|\"Medium Utilization\"|\"Heavy Utilization\"</code> </p>"
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The product description filter value. Use this parameter to show only those reservations matching the specified product description."
        },
        "ReservedCacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID."
        },
        "ReservedCacheNodesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier."
        }
      },
      "type": "object"
    },
    "DescribeReservedCacheNodesOfferingsMessage": {
      "description": "Represents the input of a <code>DescribeReservedCacheNodesOfferings</code> operation.",
      "properties": {
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "Duration": {
          "$ref": "#/definitions/String",
          "description": "<p>Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>"
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>\"Light Utilization\"|\"Medium Utilization\"|\"Heavy Utilization\"</code> </p>"
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The product description filter value. Use this parameter to show only the available offerings matching the specified product description."
        },
        "ReservedCacheNodesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "<p>The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
        }
      },
      "type": "object"
    },
    "DescribeSnapshotsListMessage": {
      "description": "Represents the output of a <code>DescribeSnapshots</code> operation.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "Snapshots": {
          "$ref": "#/definitions/SnapshotList",
          "description": "A list of snapshots. Each item in the list contains detailed information about one snapshot."
        }
      },
      "type": "object"
    },
    "DescribeSnapshotsMessage": {
      "description": "Represents the input of a <code>DescribeSnapshotsMessage</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cache cluster are described."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>."
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum 50.</p>"
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "A user-supplied replication group identifier. If this parameter is specified, only snapshots associated with that specific replication group are described."
        },
        "ShowNodeGroupConfig": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "A Boolean value which if true, the node group (shard) configuration is included in the snapshot description."
        },
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "A user-supplied name of the snapshot. If this parameter is specified, only this snapshot are described."
        },
        "SnapshotSource": {
          "$ref": "#/definitions/String",
          "description": "If set to <code>system</code>, the output shows snapshots that were automatically created by ElastiCache. If set to <code>user</code> the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots."
        }
      },
      "type": "object"
    },
    "Double": {
      "format": "double",
      "type": "number"
    },
    "EC2SecurityGroup": {
      "description": "Provides ownership and status information for an Amazon EC2 security group.",
      "properties": {
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the Amazon EC2 security group."
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the Amazon EC2 security group owner."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the Amazon EC2 security group."
        }
      },
      "type": "object"
    },
    "EC2SecurityGroupList": {
      "items": {
        "$ref": "#/definitions/EC2SecurityGroup"
      },
      "type": "array"
    },
    "Endpoint": {
      "description": "Represents the information required for client programs to connect to a cache node.",
      "properties": {
        "Address": {
          "$ref": "#/definitions/String",
          "description": "The DNS hostname of the cache node."
        },
        "Port": {
          "$ref": "#/definitions/Integer",
          "description": "The port number that the cache engine is listening on."
        }
      },
      "type": "object"
    },
    "EngineDefaults": {
      "description": "Represents the output of a <code>DescribeEngineDefaultParameters</code> operation.",
      "properties": {
        "CacheNodeTypeSpecificParameters": {
          "$ref": "#/definitions/CacheNodeTypeSpecificParametersList",
          "description": "A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter."
        },
        "CacheParameterGroupFamily": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the name of the cache parameter group family to which the engine default parameters apply.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        },
        "Parameters": {
          "$ref": "#/definitions/ParametersList",
          "description": "Contains a list of engine default parameters."
        }
      },
      "type": "object"
    },
    "Event": {
      "description": "Represents a single occurrence of something interesting within the system. Some examples of events are creating a cache cluster, adding or removing a cache node, or rebooting a node.",
      "properties": {
        "Date": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the event occurred."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The text of the event."
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the source of the event. For example, if the event occurred at the cache cluster level, the identifier would be the name of the cache cluster."
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "Specifies the origin of this event - a cache cluster, a parameter group, a security group, etc."
        }
      },
      "type": "object"
    },
    "EventList": {
      "items": {
        "$ref": "#/definitions/Event"
      },
      "type": "array"
    },
    "EventsMessage": {
      "description": "Represents the output of a <code>DescribeEvents</code> operation.",
      "properties": {
        "Events": {
          "$ref": "#/definitions/EventList",
          "description": "A list of events. Each element in the list contains detailed information about one event."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        }
      },
      "type": "object"
    },
    "InsufficientCacheClusterCapacityFault": {
      "description": "The requested cache node type is not available in the specified Availability Zone.",
      "properties": {},
      "type": "object"
    },
    "Integer": {
      "type": "integer"
    },
    "IntegerOptional": {
      "type": "integer"
    },
    "InvalidARNFault": {
      "description": "The requested Amazon Resource Name (ARN) does not refer to an existing resource.",
      "properties": {},
      "type": "object"
    },
    "InvalidCacheClusterStateFault": {
      "description": "The requested cache cluster is not in the <code>available</code> state.",
      "properties": {},
      "type": "object"
    },
    "InvalidCacheParameterGroupStateFault": {
      "description": "The current state of the cache parameter group does not allow the requested operation to occur.",
      "properties": {},
      "type": "object"
    },
    "InvalidCacheSecurityGroupStateFault": {
      "description": "The current state of the cache security group does not allow deletion.",
      "properties": {},
      "type": "object"
    },
    "InvalidParameterCombinationException": {
      "description": "Two or more incompatible parameters were specified.",
      "properties": {
        "message": {
          "$ref": "#/definitions/AwsQueryErrorMessage",
          "description": "Two or more parameters that must not be used together were used together."
        }
      },
      "type": "object"
    },
    "InvalidParameterValueException": {
      "description": "The value for a parameter is invalid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/AwsQueryErrorMessage",
          "description": "A parameter value is invalid."
        }
      },
      "type": "object"
    },
    "InvalidReplicationGroupStateFault": {
      "description": "The requested replication group is not in the <code>available</code> state.",
      "properties": {},
      "type": "object"
    },
    "InvalidSnapshotStateFault": {
      "description": "The current state of the snapshot does not allow the requested operation to occur.",
      "properties": {},
      "type": "object"
    },
    "InvalidSubnet": {
      "description": "An invalid subnet identifier was specified.",
      "properties": {},
      "type": "object"
    },
    "InvalidVPCNetworkStateFault": {
      "description": "The VPC network is in an invalid state.",
      "properties": {},
      "type": "object"
    },
    "KeyList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "ListAllowedNodeTypeModificationsMessage": {
      "description": "The input parameters for the <code>ListAllowedNodeTypeModifications</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the cache cluster you want to scale up to a larger node instanced type. ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>"
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the replication group want to scale up to a larger node type. ElastiCache uses the replication group id to identify the current node type being used by this replication group, and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>"
        }
      },
      "type": "object"
    },
    "ListTagsForResourceMessage": {
      "description": "The input parameters for the <code>ListTagsForResource</code> operation.",
      "properties": {
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the resource for which you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "object"
    },
    "ModifyCacheClusterMessage": {
      "description": "Represents the input of a <code>ModifyCacheCluster</code> operation.",
      "properties": {
        "AZMode": {
          "$ref": "#/definitions/AZMode",
          "description": "<p>Specifies whether the new nodes in this Memcached cache cluster are all created in a single Availability Zone or created across multiple Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p> <p>This option is only supported for Memcached cache clusters.</p> <note> <p>You cannot specify <code>single-az</code> if the Memcached cache cluster already has cache nodes in different Availability Zones. If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone.</p> <p>Only newly created nodes are located in different Availability Zones. For instructions on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNode.Memcached.html\">Cache Node Considerations for Memcached</a>.</p> </note>"
        },
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the cache cluster.</p> <p>If <code>false</code>, changes to the cache cluster are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <important> <p>If you perform a <code>ModifyCacheCluster</code> before a pending modification is applied, the pending modification is replaced by the newer modification.</p> </important> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "This parameter is currently disabled."
        },
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The cache cluster identifier. This value is stored as a lowercase string."
        },
        "CacheNodeIdsToRemove": {
          "$ref": "#/definitions/CacheNodeIdsList",
          "description": "<p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when <code>NumCacheNodes</code> is less than the existing number of cache nodes. The number of cache node IDs supplied in this parameter must match the difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is greater, and the value of <code>NumCacheNodes</code> in the request.</p> <p>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number of cache nodes in this <code>ModifyCacheCluser</code> call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>"
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "A valid cache node type that you want to scale this cache cluster up to."
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group to apply to this cache cluster. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request."
        },
        "CacheSecurityGroupNames": {
          "$ref": "#/definitions/CacheSecurityGroupNameList",
          "description": "<p>A list of cache security group names to authorize on this cache cluster. This change is asynchronously applied as soon as possible.</p> <p>You can use this parameter only with clusters that are created outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be \"Default\".</p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The upgraded version of the cache engine to be run on the cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement\">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster and create it anew with the earlier engine version. </p>"
        },
        "NewAvailabilityZones": {
          "$ref": "#/definitions/PreferredAvailabilityZoneList",
          "description": "<p>The list of Availability Zones where the new Memcached cache nodes are created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater than the sum of the number of active cache nodes and the number of cache nodes pending creation (which may be zero). The number of Availability Zones supplied in this list must match the cache nodes being added in this request.</p> <p>This option is only supported on Memcached clusters.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability Zones for the two new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the scenario 1 call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1) and optionally specify an Availability Zone for the new node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all pending operations. Specify <code>NumCacheNodes=3</code> to cancel all pending operations.</p> </li> </ul> <p>The Availability Zone placement of nodes pending creation cannot be modified. If you wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone. Only newly created nodes can be located in different Availability Zones. For guidance on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNode.Memcached.html\">Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new add/remove requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create is added to the pending create.</p> <important> <p> <b>Important:</b> If the new create request is <b>Apply Immediately - Yes</b>, all creates are performed immediately. If the new create request is <b>Apply Immediately - No</b>, all creates are pending.</p> </important> </li> </ul> </li> </ul>"
        },
        "NotificationTopicArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the cache cluster owner.</p> </note>"
        },
        "NotificationTopicStatus": {
          "$ref": "#/definitions/String",
          "description": "<p>The status of the Amazon SNS notification topic. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>"
        },
        "NumCacheNodes": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of cache nodes that the cache cluster should have. If the value for <code>NumCacheNodes</code> is greater than the sum of the number of current cache nodes and the number of cache nodes pending creation (which may be zero), more nodes are added. If the value is less than the number of existing cache nodes, nodes are removed. If the value is equal to the number of current cache nodes, any pending add or remove requests are canceled.</p> <p>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the specific cache nodes to remove.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p> <note> <p>Adding or removing Memcached cache nodes can be applied immediately or as a pending operation (see <code>ApplyImmediately</code>).</p> <p>A pending operation to modify the number of cache nodes in a cluster during its maintenance window, whether by adding or removing nodes in accordance with the scale out architecture, is not queued. The customer's latest request to add or remove nodes to the cluster overrides any previous pending operations to modify the number of cache nodes in the cluster. For example, a request to remove 2 nodes would override a previous pending operation to remove 3 nodes. Similarly, a request to add 2 nodes would override a previous pending operation to remove 3 nodes and vice versa. As Memcached cache nodes may now be provisioned in different Availability Zones with flexible cache node placement, a request to add nodes does not automatically override a previous pending operation to add nodes. The customer can modify the previous pending operation to add more nodes or explicitly cancel the pending request and retry the new request. To cancel pending operations to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently in the cache cluster.</p> </note>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIdsList",
          "description": "<p>Specifies the VPC Security Groups associated with the cache cluster.</p> <p>This parameter can be used only with clusters that are created in an Amazon Virtual Private Cloud (Amazon VPC).</p>"
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </note>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cache cluster. "
        }
      },
      "required": [
        "CacheClusterId"
      ],
      "type": "object"
    },
    "ModifyCacheClusterResult": {
      "properties": {
        "CacheCluster": {
          "$ref": "#/definitions/CacheCluster"
        }
      },
      "type": "object"
    },
    "ModifyCacheParameterGroupMessage": {
      "description": "Represents the input of a <code>ModifyCacheParameterGroup</code> operation.",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group to modify."
        },
        "ParameterNameValues": {
          "$ref": "#/definitions/ParameterNameValueList",
          "description": "An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request."
        }
      },
      "required": [
        "CacheParameterGroupName",
        "ParameterNameValues"
      ],
      "type": "object"
    },
    "ModifyCacheSubnetGroupMessage": {
      "description": "Represents the input of a <code>ModifyCacheSubnetGroup</code> operation.",
      "properties": {
        "CacheSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description of the cache subnet group."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "The EC2 subnet IDs for the cache subnet group."
        }
      },
      "required": [
        "CacheSubnetGroupName"
      ],
      "type": "object"
    },
    "ModifyCacheSubnetGroupResult": {
      "properties": {
        "CacheSubnetGroup": {
          "$ref": "#/definitions/CacheSubnetGroup"
        }
      },
      "type": "object"
    },
    "ModifyReplicationGroupMessage": {
      "description": "Represents the input of a <code>ModifyReplicationGroups</code> operation.",
      "properties": {
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the replication group.</p> <p>If <code>false</code>, changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>"
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "This parameter is currently disabled."
        },
        "AutomaticFailoverEnabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>"
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "A valid cache node type that you want to scale this replication group to."
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group to apply to all of the clusters in this replication group. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request."
        },
        "CacheSecurityGroupNames": {
          "$ref": "#/definitions/CacheSecurityGroupNameList",
          "description": "<p>A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with replication group containing cache clusters running outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be <code>Default</code>.</p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "<p>The upgraded version of the cache engine to be run on the cache clusters in the replication group.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement\">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing replication group and create it anew with the earlier engine version. </p>"
        },
        "NodeGroupId": {
          "$ref": "#/definitions/String",
          "description": "The name of the Node Group (called shard in the console)."
        },
        "NotificationTopicArn": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the replication group owner. </p> </note>"
        },
        "NotificationTopicStatus": {
          "$ref": "#/definitions/String",
          "description": "<p>The status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>"
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "PrimaryClusterId": {
          "$ref": "#/definitions/String",
          "description": "For replication groups with a single primary, if this parameter is specified, ElastiCache promotes the specified cluster in the specified replication group to the primary role. The nodes of all other clusters in the replication group are read replicas."
        },
        "ReplicationGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description for the replication group. Maximum length is 255 characters."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the replication group to modify."
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIdsList",
          "description": "<p>Specifies the VPC Security Groups associated with the cache clusters in the replication group.</p> <p>This parameter can be used only with replication group containing cache clusters running in an Amazon Virtual Private Cloud (Amazon VPC).</p>"
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic node group (shard) snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of the node group (shard) specified by <code>SnapshottingClusterId</code>.</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>"
        },
        "SnapshottingClusterId": {
          "$ref": "#/definitions/String",
          "description": "The cache cluster ID that is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups."
        }
      },
      "required": [
        "ReplicationGroupId"
      ],
      "type": "object"
    },
    "ModifyReplicationGroupResult": {
      "properties": {
        "ReplicationGroup": {
          "$ref": "#/definitions/ReplicationGroup"
        }
      },
      "type": "object"
    },
    "NodeGroup": {
      "description": "Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.",
      "properties": {
        "NodeGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the node group (shard). A Redis (cluster mode disabled) replication group contains only 1 node group; therefore, the node group ID is 0001. A Redis (cluster mode enabled) replication group contains 1 to 15 node groups numbered 0001 to 0015. "
        },
        "NodeGroupMembers": {
          "$ref": "#/definitions/NodeGroupMemberList",
          "description": "A list containing information about individual nodes within the node group (shard)."
        },
        "PrimaryEndpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The endpoint of the primary node in this node group (shard)."
        },
        "Slots": {
          "$ref": "#/definitions/String",
          "description": "The keyspace for this node group (shard)."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The current state of this replication group - <code>creating</code>, <code>available</code>, etc."
        }
      },
      "type": "object"
    },
    "NodeGroupConfiguration": {
      "description": "node group (shard) configuration options. Each node group (shard) configuration has the following: <code>Slots</code>, <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>.",
      "properties": {
        "PrimaryAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone where the primary node of this node group (shard) is launched."
        },
        "ReplicaAvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZonesList",
          "description": "A list of Availability Zones to be used for the read replicas. The number of Availability Zones in this list must match the value of <code>ReplicaCount</code> or <code>ReplicasPerNodeGroup</code> if not specified."
        },
        "ReplicaCount": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The number of read replica nodes in this node group (shard)."
        },
        "Slots": {
          "$ref": "#/definitions/String",
          "description": "<p>A string that specifies the keyspace for a particular node group. Keyspaces range from 0 to 16,383. The string is in the format <code>startkey-endkey</code>.</p> <p>Example: <code>\"0-3999\"</code> </p>"
        }
      },
      "type": "object"
    },
    "NodeGroupConfigurationList": {
      "items": {
        "$ref": "#/definitions/NodeGroupConfiguration"
      },
      "type": "array"
    },
    "NodeGroupList": {
      "items": {
        "$ref": "#/definitions/NodeGroup"
      },
      "type": "array"
    },
    "NodeGroupMember": {
      "description": "Represents a single node within a node group (shard).",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the cache cluster to which the node belongs."
        },
        "CacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.)."
        },
        "CurrentRole": {
          "$ref": "#/definitions/String",
          "description": "The role that is currently assigned to the node - <code>primary</code> or <code>replica</code>."
        },
        "PreferredAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The name of the Availability Zone in which the node is located."
        },
        "ReadEndpoint": {
          "$ref": "#/definitions/Endpoint"
        }
      },
      "type": "object"
    },
    "NodeGroupMemberList": {
      "items": {
        "$ref": "#/definitions/NodeGroupMember"
      },
      "type": "array"
    },
    "NodeGroupNotFoundFault": {
      "description": "The node group specified by the <code>NodeGroupId</code> parameter could not be found. Please verify that the node group exists and that you spelled the <code>NodeGroupId</code> value correctly.",
      "properties": {},
      "type": "object"
    },
    "NodeGroupsPerReplicationGroupQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the maximum of 15 node groups (shards) in a single replication group.",
      "properties": {},
      "type": "object"
    },
    "NodeQuotaForClusterExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of cache nodes in a single cache cluster.",
      "properties": {},
      "type": "object"
    },
    "NodeQuotaForCustomerExceededFault": {
      "description": "The request cannot be processed because it would exceed the allowed number of cache nodes per customer.",
      "properties": {},
      "type": "object"
    },
    "NodeSnapshot": {
      "description": "Represents an individual cache node in a snapshot of a cache cluster.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "A unique identifier for the source cache cluster."
        },
        "CacheNodeCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the cache node was created in the source cache cluster."
        },
        "CacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The cache node identifier for the node in the source cache cluster."
        },
        "CacheSize": {
          "$ref": "#/definitions/String",
          "description": "The size of the cache on the source cache node."
        },
        "NodeGroupConfiguration": {
          "$ref": "#/definitions/NodeGroupConfiguration",
          "description": "The configuration for the source node group (shard)."
        },
        "NodeGroupId": {
          "$ref": "#/definitions/String",
          "description": "A unique identifier for the source node group (shard)."
        },
        "SnapshotCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the source node's metadata and cache data set was obtained for the snapshot."
        }
      },
      "type": "object"
    },
    "NodeSnapshotList": {
      "items": {
        "$ref": "#/definitions/NodeSnapshot"
      },
      "type": "array"
    },
    "NodeTypeList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "NotificationConfiguration": {
      "description": "Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).",
      "properties": {
        "TopicArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) that identifies the topic."
        },
        "TopicStatus": {
          "$ref": "#/definitions/String",
          "description": "The current state of the topic."
        }
      },
      "type": "object"
    },
    "Parameter": {
      "description": "Describes an individual setting that controls some aspect of ElastiCache behavior.",
      "properties": {
        "AllowedValues": {
          "$ref": "#/definitions/String",
          "description": "The valid range of values for the parameter."
        },
        "ChangeType": {
          "$ref": "#/definitions/ChangeType",
          "description": "Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window's reboot. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Rebooting.html\">Rebooting a Cluster</a>."
        },
        "DataType": {
          "$ref": "#/definitions/String",
          "description": "The valid data type for the parameter."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the parameter."
        },
        "IsModifiable": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed."
        },
        "MinimumEngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The earliest cache engine version to which the parameter can apply."
        },
        "ParameterName": {
          "$ref": "#/definitions/String",
          "description": "The name of the parameter."
        },
        "ParameterValue": {
          "$ref": "#/definitions/String",
          "description": "The value of the parameter."
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "The source of the parameter."
        }
      },
      "type": "object"
    },
    "ParameterNameValue": {
      "description": "Describes a name-value pair that is used to update the value of a parameter.",
      "properties": {
        "ParameterName": {
          "$ref": "#/definitions/String",
          "description": "The name of the parameter."
        },
        "ParameterValue": {
          "$ref": "#/definitions/String",
          "description": "The value of the parameter."
        }
      },
      "type": "object"
    },
    "ParameterNameValueList": {
      "items": {
        "$ref": "#/definitions/ParameterNameValue"
      },
      "type": "array"
    },
    "ParametersList": {
      "items": {
        "$ref": "#/definitions/Parameter"
      },
      "type": "array"
    },
    "PendingAutomaticFailoverStatus": {
      "enum": [
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "PendingModifiedValues": {
      "description": "A group of settings that are applied to the cache cluster in the future, or that are currently being applied.",
      "properties": {
        "CacheNodeIdsToRemove": {
          "$ref": "#/definitions/CacheNodeIdsList",
          "description": "A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.)."
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "The cache node type that this cache cluster or replication group is scaled to."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The new cache engine version that the cache cluster runs."
        },
        "NumCacheNodes": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The new number of cache nodes for the cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>"
        }
      },
      "type": "object"
    },
    "PreferredAvailabilityZoneList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "PurchaseReservedCacheNodesOfferingMessage": {
      "description": "Represents the input of a <code>PurchaseReservedCacheNodesOffering</code> operation.",
      "properties": {
        "CacheNodeCount": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of cache node instances to reserve.</p> <p>Default: <code>1</code> </p>"
        },
        "ReservedCacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "<p>A customer-specified identifier to track this reservation.</p> <note> <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation. If this parameter is not specified, ElastiCache automatically generates an identifier for the reservation.</p> </note> <p>Example: myreservationID</p>"
        },
        "ReservedCacheNodesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the reserved cache node offering to purchase.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>"
        }
      },
      "required": [
        "ReservedCacheNodesOfferingId"
      ],
      "type": "object"
    },
    "PurchaseReservedCacheNodesOfferingResult": {
      "properties": {
        "ReservedCacheNode": {
          "$ref": "#/definitions/ReservedCacheNode"
        }
      },
      "type": "object"
    },
    "RebootCacheClusterMessage": {
      "description": "Represents the input of a <code>RebootCacheCluster</code> operation.",
      "properties": {
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The cache cluster identifier. This parameter is stored as a lowercase string."
        },
        "CacheNodeIdsToReboot": {
          "$ref": "#/definitions/CacheNodeIdsList",
          "description": "A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cache cluster, specify all of the cache node IDs."
        }
      },
      "required": [
        "CacheClusterId",
        "CacheNodeIdsToReboot"
      ],
      "type": "object"
    },
    "RebootCacheClusterResult": {
      "properties": {
        "CacheCluster": {
          "$ref": "#/definitions/CacheCluster"
        }
      },
      "type": "object"
    },
    "RecurringCharge": {
      "description": "Contains the specific price and frequency of a recurring charges for a reserved cache node, or for a reserved cache node offering.",
      "properties": {
        "RecurringChargeAmount": {
          "$ref": "#/definitions/Double",
          "description": "The monetary amount of the recurring charge."
        },
        "RecurringChargeFrequency": {
          "$ref": "#/definitions/String",
          "description": "The frequency of the recurring charge."
        }
      },
      "type": "object"
    },
    "RecurringChargeList": {
      "items": {
        "$ref": "#/definitions/RecurringCharge"
      },
      "type": "array"
    },
    "RemoveTagsFromResourceMessage": {
      "description": "Represents the input of a <code>RemoveTagsFromResource</code> operation.",
      "properties": {
        "ResourceName": {
          "$ref": "#/definitions/String",
          "description": "<p>The Amazon Resource Name (ARN) of the resource from which you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>"
        },
        "TagKeys": {
          "$ref": "#/definitions/KeyList",
          "description": "A list of <code>TagKeys</code> identifying the tags you want removed from the named resource."
        }
      },
      "required": [
        "ResourceName",
        "TagKeys"
      ],
      "type": "object"
    },
    "ReplicationGroup": {
      "description": "Contains all of the attributes of a specific Redis replication group.",
      "properties": {
        "AutomaticFailover": {
          "$ref": "#/definitions/AutomaticFailoverStatus",
          "description": "<p>Indicates the status of Multi-AZ for this replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>"
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "The name of the compute and memory capacity node type for each node in the replication group."
        },
        "ClusterEnabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups).</p> <p>Valid values: <code>true</code> | <code>false</code> </p>"
        },
        "ConfigurationEndpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The configuration endpoint for this replicaiton group. Use the configuration endpoint to connect to this replication group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the replication group."
        },
        "MemberClusters": {
          "$ref": "#/definitions/ClusterIdList",
          "description": "The names of all the cache clusters that are part of this replication group."
        },
        "NodeGroups": {
          "$ref": "#/definitions/NodeGroupList",
          "description": "A single element list with information about the nodes in the replication group."
        },
        "PendingModifiedValues": {
          "$ref": "#/definitions/ReplicationGroupPendingModifiedValues",
          "description": "A group of settings to be applied to the replication group, either immediately or during the next maintenance window."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier for the replication group."
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </important>"
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <p> <b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>"
        },
        "SnapshottingClusterId": {
          "$ref": "#/definitions/String",
          "description": "The cache cluster ID that is used as the daily snapshot source for the replication group."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The current state of this replication group - <code>creating</code>, <code>available</code>, <code>modifying</code>, <code>deleting</code>, <code>create-failed</code>, <code>snapshotting</code>."
        }
      },
      "type": "object"
    },
    "ReplicationGroupAlreadyExistsFault": {
      "description": "The specified replication group already exists.",
      "properties": {},
      "type": "object"
    },
    "ReplicationGroupList": {
      "items": {
        "$ref": "#/definitions/ReplicationGroup"
      },
      "type": "array"
    },
    "ReplicationGroupMessage": {
      "description": "Represents the output of a <code>DescribeReplicationGroups</code> operation.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        },
        "ReplicationGroups": {
          "$ref": "#/definitions/ReplicationGroupList",
          "description": "A list of replication groups. Each item in the list contains detailed information about one replication group."
        }
      },
      "type": "object"
    },
    "ReplicationGroupNotFoundFault": {
      "description": "The specified replication group does not exist.",
      "properties": {},
      "type": "object"
    },
    "ReplicationGroupPendingModifiedValues": {
      "description": "The settings to be applied to the Redis replication group, either immediately or during the next maintenance window.",
      "properties": {
        "AutomaticFailoverStatus": {
          "$ref": "#/definitions/PendingAutomaticFailoverStatus",
          "description": "<p>Indicates the status of Multi-AZ for this Redis replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>"
        },
        "PrimaryClusterId": {
          "$ref": "#/definitions/String",
          "description": "The primary cluster ID that is applied immediately (if <code>--apply-immediately</code> was specified), or during the next maintenance window."
        }
      },
      "type": "object"
    },
    "ReservedCacheNode": {
      "description": "Represents the output of a <code>PurchaseReservedCacheNodesOffering</code> operation.",
      "properties": {
        "CacheNodeCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of cache nodes that have been reserved."
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The cache node type for the reserved cache nodes.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the reservation in seconds."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price charged for this reserved cache node."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "The offering type of this reserved cache node."
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the reserved cache node."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargeList",
          "description": "The recurring price charged to run this reserved cache node."
        },
        "ReservedCacheNodeId": {
          "$ref": "#/definitions/String",
          "description": "The unique identifier for the reservation."
        },
        "ReservedCacheNodesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering identifier."
        },
        "StartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The time the reservation started."
        },
        "State": {
          "$ref": "#/definitions/String",
          "description": "The state of the reserved cache node."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Double",
          "description": "The hourly price charged for this reserved cache node."
        }
      },
      "type": "object"
    },
    "ReservedCacheNodeAlreadyExistsFault": {
      "description": "You already have a reservation with the given identifier.",
      "properties": {},
      "type": "object"
    },
    "ReservedCacheNodeList": {
      "items": {
        "$ref": "#/definitions/ReservedCacheNode"
      },
      "type": "array"
    },
    "ReservedCacheNodeMessage": {
      "description": "Represents the output of a <code>DescribeReservedCacheNodes</code> operation.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        },
        "ReservedCacheNodes": {
          "$ref": "#/definitions/ReservedCacheNodeList",
          "description": "A list of reserved cache nodes. Each element in the list contains detailed information about one node."
        }
      },
      "type": "object"
    },
    "ReservedCacheNodeNotFoundFault": {
      "description": "The requested reserved cache node was not found.",
      "properties": {},
      "type": "object"
    },
    "ReservedCacheNodeQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the user's cache node quota.",
      "properties": {},
      "type": "object"
    },
    "ReservedCacheNodesOffering": {
      "description": "Describes all of the attributes of a reserved cache node offering.",
      "properties": {
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The cache node type for the reserved cache node.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the offering. in seconds."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price charged for this offering."
        },
        "OfferingType": {
          "$ref": "#/definitions/String",
          "description": "The offering type."
        },
        "ProductDescription": {
          "$ref": "#/definitions/String",
          "description": "The cache engine used by the offering."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargeList",
          "description": "The recurring price charged to run this reserved cache node."
        },
        "ReservedCacheNodesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "A unique identifier for the reserved cache node offering."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Double",
          "description": "The hourly price charged for this offering."
        }
      },
      "type": "object"
    },
    "ReservedCacheNodesOfferingList": {
      "items": {
        "$ref": "#/definitions/ReservedCacheNodesOffering"
      },
      "type": "array"
    },
    "ReservedCacheNodesOfferingMessage": {
      "description": "Represents the output of a <code>DescribeReservedCacheNodesOfferings</code> operation.",
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "Provides an identifier to allow retrieval of paginated results."
        },
        "ReservedCacheNodesOfferings": {
          "$ref": "#/definitions/ReservedCacheNodesOfferingList",
          "description": "A list of reserved cache node offerings. Each element in the list contains detailed information about one offering."
        }
      },
      "type": "object"
    },
    "ReservedCacheNodesOfferingNotFoundFault": {
      "description": "The requested cache node offering does not exist.",
      "properties": {},
      "type": "object"
    },
    "ResetCacheParameterGroupMessage": {
      "description": "Represents the input of a <code>ResetCacheParameterGroup</code> operation.",
      "properties": {
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache parameter group to reset."
        },
        "ParameterNameValues": {
          "$ref": "#/definitions/ParameterNameValueList",
          "description": "An array of parameter names to reset to their default values. If <code>ResetAllParameters</code> is <code>true</code>, do not use <code>ParameterNameValues</code>. If <code>ResetAllParameters</code> is <code>false</code>, you must specify the name of at least one parameter to reset."
        },
        "ResetAllParameters": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If <code>true</code>, all parameters in the cache parameter group are reset to their default values. If <code>false</code>, only the parameters listed by <code>ParameterNameValues</code> are reset to their default values.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>"
        }
      },
      "required": [
        "CacheParameterGroupName"
      ],
      "type": "object"
    },
    "RevokeCacheSecurityGroupIngressMessage": {
      "description": "Represents the input of a <code>RevokeCacheSecurityGroupIngress</code> operation.",
      "properties": {
        "CacheSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache security group to revoke ingress from."
        },
        "EC2SecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the Amazon EC2 security group to revoke access from."
        },
        "EC2SecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter."
        }
      },
      "required": [
        "CacheSecurityGroupName",
        "EC2SecurityGroupName",
        "EC2SecurityGroupOwnerId"
      ],
      "type": "object"
    },
    "RevokeCacheSecurityGroupIngressResult": {
      "properties": {
        "CacheSecurityGroup": {
          "$ref": "#/definitions/CacheSecurityGroup"
        }
      },
      "type": "object"
    },
    "SecurityGroupIdsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SecurityGroupMembership": {
      "description": "Represents a single cache security group and its status.",
      "properties": {
        "SecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the cache security group."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the cache security group membership. The status changes whenever a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified."
        }
      },
      "type": "object"
    },
    "SecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/SecurityGroupMembership"
      },
      "type": "array"
    },
    "Snapshot": {
      "description": "Represents a copy of an entire Redis cache cluster as of the time when the snapshot was taken.",
      "properties": {
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "This parameter is currently disabled."
        },
        "AutomaticFailover": {
          "$ref": "#/definitions/AutomaticFailoverStatus",
          "description": "<p>Indicates the status of Multi-AZ for the source replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>"
        },
        "CacheClusterCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The date and time when the source cache cluster was created."
        },
        "CacheClusterId": {
          "$ref": "#/definitions/String",
          "description": "The user-supplied identifier of the source cache cluster."
        },
        "CacheNodeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the compute and memory capacity node type for the source cache cluster.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/details\">Amazon ElastiCache Product Features and Details</a> and either <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific\">Cache Node Type-Specific Parameters for Memcached</a> or <a href=\"http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific\">Cache Node Type-Specific Parameters for Redis</a>.</p>"
        },
        "CacheParameterGroupName": {
          "$ref": "#/definitions/String",
          "description": "The cache parameter group that is associated with the source cache cluster."
        },
        "CacheSubnetGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache subnet group associated with the source cache cluster."
        },
        "Engine": {
          "$ref": "#/definitions/String",
          "description": "The name of the cache engine (<code>memcached</code> or <code>redis</code>) used by the source cache cluster."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version of the cache engine version that is used by the source cache cluster."
        },
        "NodeSnapshots": {
          "$ref": "#/definitions/NodeSnapshotList",
          "description": "A list of the cache nodes in the source cache cluster."
        },
        "NumCacheNodes": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>The number of cache nodes in the source cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>"
        },
        "NumNodeGroups": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The number of node groups (shards) in this snapshot. When restoring from a snapshot, the number of node groups (shards) in the snapshot and in the restored replication group must be the same."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port number used by each cache nodes in the source cache cluster."
        },
        "PreferredAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The name of the Availability Zone in which the source cache cluster is located."
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>"
        },
        "ReplicationGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "A description of the source replication group."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The unique identifier of the source replication group."
        },
        "SnapshotName": {
          "$ref": "#/definitions/String",
          "description": "The name of a snapshot. For an automatic snapshot, the name is system-generated. For a manual snapshot, this is the user-provided name."
        },
        "SnapshotRetentionLimit": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p>For an automatic snapshot, the number of days for which ElastiCache retains the snapshot before deleting it.</p> <p>For manual snapshots, this field reflects the <code>SnapshotRetentionLimit</code> for the source cache cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the <code>DeleteSnapshot</code> operation. </p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>"
        },
        "SnapshotSource": {
          "$ref": "#/definitions/String",
          "description": "Indicates whether the snapshot is from an automatic backup (<code>automated</code>) or was created manually (<code>manual</code>)."
        },
        "SnapshotStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the snapshot. Valid values: <code>creating</code> | <code>available</code> | <code>restoring</code> | <code>copying</code> | <code>deleting</code>."
        },
        "SnapshotWindow": {
          "$ref": "#/definitions/String",
          "description": "The daily time range during which ElastiCache takes daily snapshots of the source cache cluster."
        },
        "TopicArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the topic used by the source cache cluster for publishing notifications."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cache cluster."
        }
      },
      "type": "object"
    },
    "SnapshotAlreadyExistsFault": {
      "description": "You already have a snapshot with the given name.",
      "properties": {},
      "type": "object"
    },
    "SnapshotArnsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SnapshotFeatureNotSupportedFault": {
      "description": "<p>You attempted one of the following operations:</p> <ul> <li> <p>Creating a snapshot of a Redis cache cluster running on a <code>cache.t1.micro</code> cache node.</p> </li> <li> <p>Creating a snapshot of a cache cluster that is running Memcached rather than Redis.</p> </li> </ul> <p>Neither of these are supported by ElastiCache.</p>",
      "properties": {},
      "type": "object"
    },
    "SnapshotList": {
      "items": {
        "$ref": "#/definitions/Snapshot"
      },
      "type": "array"
    },
    "SnapshotNotFoundFault": {
      "description": "The requested snapshot name does not refer to an existing snapshot.",
      "properties": {},
      "type": "object"
    },
    "SnapshotQuotaExceededFault": {
      "description": "The request cannot be processed because it would exceed the maximum number of snapshots.",
      "properties": {},
      "type": "object"
    },
    "SourceType": {
      "enum": [
        "cache-cluster",
        "cache-parameter-group",
        "cache-security-group",
        "cache-subnet-group",
        "replication-group"
      ],
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "Subnet": {
      "description": "Represents the subnet associated with a cache cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.",
      "properties": {
        "SubnetAvailabilityZone": {
          "$ref": "#/definitions/AvailabilityZone",
          "description": "The Availability Zone associated with the subnet."
        },
        "SubnetIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The unique identifier for the subnet."
        }
      },
      "type": "object"
    },
    "SubnetIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "SubnetInUse": {
      "description": "The requested subnet is being used by another cache subnet group.",
      "properties": {},
      "type": "object"
    },
    "SubnetList": {
      "items": {
        "$ref": "#/definitions/Subnet"
      },
      "type": "array"
    },
    "TStamp": {
      "format": "date-time",
      "type": "string"
    },
    "Tag": {
      "description": "A cost allocation Tag that can be added to an ElastiCache cluster or replication group. Tags are composed of a Key/Value pair. A tag with a null Value is permitted.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String",
          "description": "The key for the tag. May not be null."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The tag's value. May be null."
        }
      },
      "type": "object"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array"
    },
    "TagListMessage": {
      "description": "Represents the output from the <code>AddTagsToResource</code>, <code>ListTagsForResource</code>, and <code>RemoveTagsFromResource</code> operations.",
      "properties": {
        "TagList": {
          "$ref": "#/definitions/TagList",
          "description": "A list of cost allocation tags as key-value pairs."
        }
      },
      "type": "object"
    },
    "TagNotFoundFault": {
      "description": "The requested tag was not found on this resource.",
      "properties": {},
      "type": "object"
    },
    "TagQuotaPerResourceExceeded": {
      "description": "The request cannot be processed because it would cause the resource to have more than the allowed number of tags. The maximum number of tags permitted on a resource is 50.",
      "properties": {},
      "type": "object"
    },
    "TestFailoverMessage": {
      "properties": {
        "NodeGroupId": {
          "$ref": "#/definitions/String",
          "description": "The name of the node group (called shard in the console) in this replication group on which automatic failover is to be tested. You may test automatic failover on up to 5 node groups in any rolling 24-hour period."
        },
        "ReplicationGroupId": {
          "$ref": "#/definitions/String",
          "description": "The name of the replication group (console: cluster) whose automatic failover is being tested by this operation."
        }
      },
      "required": [
        "ReplicationGroupId",
        "NodeGroupId"
      ],
      "type": "object"
    },
    "TestFailoverNotAvailableFault": {
      "properties": {},
      "type": "object"
    },
    "TestFailoverResult": {
      "properties": {
        "ReplicationGroup": {
          "$ref": "#/definitions/ReplicationGroup"
        }
      },
      "type": "object"
    }
  }
}
