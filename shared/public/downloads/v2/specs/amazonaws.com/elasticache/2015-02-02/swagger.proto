syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package amazonelasticache;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsToResourceMessage body = 10;
}

message Post#AuthorizeCacheSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AuthorizeCacheSecurityGroupIngressMessage body = 10;
}

message Post#CopySnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopySnapshotMessage body = 10;
}

message Post#CreateCacheClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCacheClusterMessage body = 10;
}

message Post#CreateCacheParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCacheParameterGroupMessage body = 10;
}

message Post#CreateCacheSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCacheSecurityGroupMessage body = 10;
}

message Post#CreateCacheSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCacheSubnetGroupMessage body = 10;
}

message Post#CreateReplicationGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateReplicationGroupMessage body = 10;
}

message Post#CreateSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSnapshotMessage body = 10;
}

message Post#DeleteCacheClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCacheClusterMessage body = 10;
}

message Post#DeleteCacheParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCacheParameterGroupMessage body = 10;
}

message Post#DeleteCacheSecurityGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCacheSecurityGroupMessage body = 10;
}

message Post#DeleteCacheSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCacheSubnetGroupMessage body = 10;
}

message Post#DeleteReplicationGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteReplicationGroupMessage body = 10;
}

message Post#DeleteSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSnapshotMessage body = 10;
}

message Post#DescribeCacheClustersRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheClustersMessage body = 12;
}

message Post#DescribeCacheEngineVersionsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheEngineVersionsMessage body = 12;
}

message Post#DescribeCacheParameterGroupsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheParameterGroupsMessage body = 12;
}

message Post#DescribeCacheParametersRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheParametersMessage body = 12;
}

message Post#DescribeCacheSecurityGroupsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheSecurityGroupsMessage body = 12;
}

message Post#DescribeCacheSubnetGroupsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCacheSubnetGroupsMessage body = 12;
}

message Post#DescribeEngineDefaultParametersRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEngineDefaultParametersMessage body = 12;
}

message Post#DescribeEventsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEventsMessage body = 12;
}

message Post#DescribeReplicationGroupsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReplicationGroupsMessage body = 12;
}

message Post#DescribeReservedCacheNodesRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReservedCacheNodesMessage body = 12;
}

message Post#DescribeReservedCacheNodesOfferingsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReservedCacheNodesOfferingsMessage body = 12;
}

message Post#DescribeSnapshotsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeSnapshotsMessage body = 12;
}

message Post#ListAllowedNodeTypeModificationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListAllowedNodeTypeModificationsMessage body = 10;
}

message Post#ListTagsForResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsForResourceMessage body = 10;
}

message Post#ModifyCacheClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyCacheClusterMessage body = 10;
}

message Post#ModifyCacheParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyCacheParameterGroupMessage body = 10;
}

message Post#ModifyCacheSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyCacheSubnetGroupMessage body = 10;
}

message Post#ModifyReplicationGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyReplicationGroupMessage body = 10;
}

message Post#PurchaseReservedCacheNodesOfferingRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    PurchaseReservedCacheNodesOfferingMessage body = 10;
}

message Post#RebootCacheClusterRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RebootCacheClusterMessage body = 10;
}

message Post#RemoveTagsFromResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsFromResourceMessage body = 10;
}

message Post#ResetCacheParameterGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetCacheParameterGroupMessage body = 10;
}

message Post#RevokeCacheSecurityGroupIngressRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RevokeCacheSecurityGroupIngressMessage body = 10;
}

message Post#TestFailoverRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TestFailoverMessage body = 10;
}

message APICallRateForCustomerExceededFault {
}

enum AZMode {
    SINGLEAZ = 0;
    CROSSAZ = 1;
}

message AddTagsToResourceMessage {
    // <p>The Amazon Resource Name (ARN) of the resource to which the tags are to be added, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string ResourceName = 1;
    // A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value.
    array Tags = 2;
}

message AllowedNodeTypeModificationsMessage {
    // <p>A string list, each element of which specifies a cache node type which you can use to scale your cache cluster or replication group.</p> <p>When scaling up a Redis cluster or replication group using <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code>, use a value from this list for the <code>CacheNodeType</code> parameter.</p>
    array ScaleUpModifications = 1;
}

message AuthorizationAlreadyExistsFault {
}

message AuthorizationNotFoundFault {
}

message AuthorizeCacheSecurityGroupIngressMessage {
    // The cache security group that allows network ingress.
    string CacheSecurityGroupName = 1;
    // The Amazon EC2 security group to be authorized for ingress to the cache security group.
    string EC2SecurityGroupName = 2;
    // The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter.
    string EC2SecurityGroupOwnerId = 3;
}

message AuthorizeCacheSecurityGroupIngressResult {
    CacheSecurityGroup CacheSecurityGroup = 1;
}

enum AutomaticFailoverStatu {
    ENABLED = 0;
    DISABLED = 1;
    ENABLING = 2;
    DISABLING = 3;
}

message AvailabilityZone {
    // The name of the Availability Zone.
    string Name = 1;
}

repeated string AvailabilityZonesList = 1







message CacheCluster {
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 1;
    // The date and time when the cache cluster was created.
    string CacheClusterCreateTime = 2;
    // The user-supplied identifier of the cache cluster. This identifier is a unique key that identifies a cache cluster.
    string CacheClusterId = 3;
    // The current state of this cache cluster, one of the following values: <code>available</code>, <code>creating</code>, <code>deleted</code>, <code>deleting</code>, <code>incompatible-network</code>, <code>modifying</code>, <code>rebooting cache cluster nodes</code>, <code>restore-failed</code>, or <code>snapshotting</code>.
    string CacheClusterStatus = 4;
    // <p>The name of the compute and memory capacity node type for the cache cluster.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 5;
    // A list of cache nodes that are members of the cache cluster.
    array CacheNodes = 6;
    CacheParameterGroupStatus CacheParameterGroup = 7;
    // A list of cache security group elements, composed of name and status sub-elements.
    array CacheSecurityGroups = 8;
    // The name of the cache subnet group associated with the cache cluster.
    string CacheSubnetGroupName = 9;
    // The URL of the web page where you can download the latest ElastiCache client library.
    string ClientDownloadLandingPage = 10;
    // <p>Represents a Memcached cluster endpoint which, if Automatic Discovery is enabled on the cluster, can be used by an application to connect to any node in the cluster. The configuration endpoint will always have <code>.cfg</code> in it.</p> <p>Example: <code>mem-3.9dvc4r<u>.cfg</u>.usw2.cache.amazonaws.com:11211</code> </p>
    Endpoint ConfigurationEndpoint = 11;
    // The name of the cache engine (<code>memcached</code> or <code>redis</code>) to be used for this cache cluster.
    string Engine = 12;
    // The version of the cache engine that is used in this cache cluster.
    string EngineVersion = 13;
    NotificationConfiguration NotificationConfiguration = 14;
    // <p>The number of cache nodes in the cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>
    integer NumCacheNodes = 15;
    PendingModifiedValues PendingModifiedValues = 16;
    // The name of the Availability Zone in which the cache cluster is located or "Multiple" if the cache nodes are located in different Availability Zones.
    string PreferredAvailabilityZone = 17;
    // <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 18;
    // The replication group to which this cache cluster belongs. If this field is empty, the cache cluster is not associated with any replication group.
    string ReplicationGroupId = 19;
    // A list of VPC Security Groups associated with the cache cluster.
    array SecurityGroups = 20;
    // <p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p> </important>
    integer SnapshotRetentionLimit = 21;
    // <p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cache cluster.</p> <p>Example: <code>05:00-09:00</code> </p>
    string SnapshotWindow = 22;
}

message CacheClusterAlreadyExistsFault {
}

repeated CacheCluster CacheClusterList = 1

message CacheClusterMessage {
    // A list of cache clusters. Each item in the list contains detailed information about one cache cluster.
    array CacheClusters = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

message CacheClusterNotFoundFault {
}

message CacheEngineVersion {
    // The description of the cache engine.
    string CacheEngineDescription = 1;
    // The description of the cache engine version.
    string CacheEngineVersionDescription = 2;
    // <p>The name of the cache parameter group family associated with this cache engine.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>
    string CacheParameterGroupFamily = 3;
    // The name of the cache engine.
    string Engine = 4;
    // The version number of the cache engine.
    string EngineVersion = 5;
}

repeated CacheEngineVersion CacheEngineVersionList = 1

message CacheEngineVersionMessage {
    // A list of cache engine version details. Each element in the list contains detailed information about one cache engine version.
    array CacheEngineVersions = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

message CacheNode {
    // The date and time when the cache node was created.
    string CacheNodeCreateTime = 1;
    // The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The combination of cluster ID and node ID uniquely identifies every cache node used in a customer's AWS account.
    string CacheNodeId = 2;
    // The current state of this cache node.
    string CacheNodeStatus = 3;
    // The Availability Zone where this node was created and now resides.
    string CustomerAvailabilityZone = 4;
    // The hostname for connecting to this cache node.
    Endpoint Endpoint = 5;
    // The status of the parameter group applied to this cache node.
    string ParameterGroupStatus = 6;
    // The ID of the primary node to which this read replica node is synchronized. If this field is empty, this node is not associated with a primary cache cluster.
    string SourceCacheNodeId = 7;
}

repeated string CacheNodeIdsList = 1

repeated CacheNode CacheNodeList = 1

message CacheNodeTypeSpecificParameter {
    // The valid range of values for the parameter.
    string AllowedValues = 1;
    // A list of cache node types and their corresponding values for this parameter.
    array CacheNodeTypeSpecificValues = 2;
    // Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window's reboot. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Rebooting.html">Rebooting a Cluster</a>.
    ChangeType ChangeType = 3;
    // The valid data type for the parameter.
    string DataType = 4;
    // A description of the parameter.
    string Description = 5;
    // Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.
    boolean IsModifiable = 6;
    // The earliest cache engine version to which the parameter can apply.
    string MinimumEngineVersion = 7;
    // The name of the parameter.
    string ParameterName = 8;
    // The source of the parameter value.
    string Source = 9;
}

repeated CacheNodeTypeSpecificParameter CacheNodeTypeSpecificParametersList = 1

message CacheNodeTypeSpecificValue {
    // The cache node type for which this value applies.
    string CacheNodeType = 1;
    // The value for the cache node type.
    string Value = 2;
}

repeated CacheNodeTypeSpecificValue CacheNodeTypeSpecificValueList = 1

message CacheParameterGroup {
    // <p>The name of the cache parameter group family that this cache parameter group is compatible with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>
    string CacheParameterGroupFamily = 1;
    // The name of the cache parameter group.
    string CacheParameterGroupName = 2;
    // The description for this cache parameter group.
    string Description = 3;
}

message CacheParameterGroupAlreadyExistsFault {
}

message CacheParameterGroupDetails {
    // A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.
    array CacheNodeTypeSpecificParameters = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
    // A list of <a>Parameter</a> instances.
    array Parameters = 3;
}

repeated CacheParameterGroup CacheParameterGroupList = 1

message CacheParameterGroupNameMessage {
    // The name of the cache parameter group.
    string CacheParameterGroupName = 1;
}

message CacheParameterGroupNotFoundFault {
}

message CacheParameterGroupQuotaExceededFault {
}

message CacheParameterGroupStatus {
    // A list of the cache node IDs which need to be rebooted for parameter changes to be applied. A node ID is a numeric identifier (0001, 0002, etc.).
    array CacheNodeIdsToReboot = 1;
    // The name of the cache parameter group.
    string CacheParameterGroupName = 2;
    // The status of parameter updates.
    string ParameterApplyStatus = 3;
}

message CacheParameterGroupsMessage {
    // A list of cache parameter groups. Each element in the list contains detailed information about one cache parameter group.
    array CacheParameterGroups = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

message CacheSecurityGroup {
    // The name of the cache security group.
    string CacheSecurityGroupName = 1;
    // The description of the cache security group.
    string Description = 2;
    // A list of Amazon EC2 security groups that are associated with this cache security group.
    array EC2SecurityGroups = 3;
    // The AWS account ID of the cache security group owner.
    string OwnerId = 4;
}

message CacheSecurityGroupAlreadyExistsFault {
}

message CacheSecurityGroupMembership {
    // The name of the cache security group.
    string CacheSecurityGroupName = 1;
    // The membership status in the cache security group. The status changes when a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified.
    string Status = 2;
}

repeated CacheSecurityGroupMembership CacheSecurityGroupMembershipList = 1

message CacheSecurityGroupMessage {
    // A list of cache security groups. Each element in the list contains detailed information about one group.
    array CacheSecurityGroups = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

repeated string CacheSecurityGroupNameList = 1

message CacheSecurityGroupNotFoundFault {
}

message CacheSecurityGroupQuotaExceededFault {
}

repeated CacheSecurityGroup CacheSecurityGroups = 1

message CacheSubnetGroup {
    // The description of the cache subnet group.
    string CacheSubnetGroupDescription = 1;
    // The name of the cache subnet group.
    string CacheSubnetGroupName = 2;
    // A list of subnets associated with the cache subnet group.
    array Subnets = 3;
    // The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.
    string VpcId = 4;
}

message CacheSubnetGroupAlreadyExistsFault {
}

message CacheSubnetGroupInUse {
}

message CacheSubnetGroupMessage {
    // A list of cache subnet groups. Each element in the list contains detailed information about one group.
    array CacheSubnetGroups = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

message CacheSubnetGroupNotFoundFault {
}

message CacheSubnetGroupQuotaExceededFault {
}

repeated CacheSubnetGroup CacheSubnetGroups = 1

message CacheSubnetQuotaExceededFault {
}

enum ChangeType {
    IMMEDIATE = 0;
    REQUIRESREBOOT = 1;
}

repeated string ClusterIdList = 1

message ClusterQuotaForCustomerExceededFault {
}

message CopySnapshotMessage {
    // The name of an existing snapshot from which to make a copy.
    string SourceSnapshotName = 1;
    // <p>The Amazon S3 bucket to which the snapshot is exported. This parameter is used only when exporting a snapshot for external access.</p> <p>When using this parameter to export a snapshot, be sure Amazon ElastiCache has the needed permissions to this S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the <i>Amazon ElastiCache User Guide</i>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html">Exporting a Snapshot</a> in the <i>Amazon ElastiCache User Guide</i>.</p>
    string TargetBucket = 2;
    // A name for the snapshot copy. ElastiCache does not permit overwriting a snapshot, therefore this name must be unique within its context - ElastiCache or an Amazon S3 bucket if exporting.
    string TargetSnapshotName = 3;
}

message CopySnapshotResult {
    Snapshot Snapshot = 1;
}

message CreateCacheClusterMessage {
    // <p>Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.</p> <p>This parameter is only supported for Memcached cache clusters.</p> <p>If the <code>AZMode</code> and <code>PreferredAvailabilityZones</code> are not specified, ElastiCache assumes <code>single-az</code> mode.</p>
    AZMode AZMode = 1;
    // <p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>Cannot contain any of the following characters: '/', '"', or "@". </p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at Redis.</p>
    string AuthToken = 2;
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 3;
    // <p>The node group (shard) identifier. This parameter is stored as a lowercase string.</p> <p> <b>Constraints:</b> </p> <ul> <li> <p>A name must contain from 1 to 20 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
    string CacheClusterId = 4;
    // <p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 5;
    // The name of the parameter group to associate with this cache cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has <code>cluster-enabled='yes'</code> when creating a cluster.
    string CacheParameterGroupName = 6;
    // <p>A list of security group names to associate with this cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).</p>
    array CacheSecurityGroupNames = 7;
    // <p>The name of the subnet group to be used for the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p> <important> <p>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>
    string CacheSubnetGroupName = 8;
    // <p>The name of the cache engine to be used for this cache cluster.</p> <p>Valid values for this parameter are: <code>memcached</code> | <code>redis</code> </p>
    string Engine = 9;
    // <p>The version number of the cache engine to be used for this cache cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster or replication group and create it anew with the earlier engine version. </p>
    string EngineVersion = 10;
    // <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cache cluster owner.</p> </note>
    string NotificationTopicArn = 11;
    // <p>The initial number of cache nodes that the cache cluster has.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p> <p>If you need more than 20 nodes for your Memcached cluster, please fill out the ElastiCache Limit Increase Request form at <a href="http://aws.amazon.com/contact-us/elasticache-node-limit-request/">http://aws.amazon.com/contact-us/elasticache-node-limit-request/</a>.</p>
    integer NumCacheNodes = 12;
    // The port number on which each of the cache nodes accepts connections.
    integer Port = 13;
    // <p>The EC2 Availability Zone in which the cache cluster is created.</p> <p>All nodes belonging to this Memcached cache cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use <code>PreferredAvailabilityZones</code>.</p> <p>Default: System chosen Availability Zone.</p>
    string PreferredAvailabilityZone = 14;
    // <p>A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.</p> <p>This option is only supported on Memcached.</p> <note> <p>If you are creating your cache cluster in an Amazon VPC (recommended) you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheNodes</code>.</p> </note> <p>If you want all the nodes in the same Availability Zone, use <code>PreferredAvailabilityZone</code> instead, or repeat the Availability Zone multiple times in the list.</p> <p>Default: System chosen Availability Zones.</p>
    array PreferredAvailabilityZones = 15;
    // <p>Specifies the weekly time range during which maintenance on the cache cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 16;
    // <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important> <p>The ID of the replication group to which this cache cluster should belong. If this parameter is specified, the cache cluster is added to the specified replication group as a read replica; otherwise, the cache cluster is a standalone primary that is not part of any replication group.</p> <p>If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cache cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
    string ReplicationGroupId = 17;
    // <p>One or more VPC security groups associated with the cache cluster.</p> <p>Use this parameter only when you are creating a cache cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
    array SecurityGroupIds = 18;
    // <p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>
    array SnapshotArns = 19;
    // <p>The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to <code>restoring</code> while the new node group (shard) is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
    string SnapshotName = 20;
    // <p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>
    integer SnapshotRetentionLimit = 21;
    // <p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <p> <b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>
    string SnapshotWindow = 22;
    // A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value.
    array Tags = 23;
}

message CreateCacheClusterResult {
    CacheCluster CacheCluster = 1;
}

message CreateCacheParameterGroupMessage {
    // <p>The name of the cache parameter group family that the cache parameter group can be used with.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>
    string CacheParameterGroupFamily = 1;
    // A user-specified name for the cache parameter group.
    string CacheParameterGroupName = 2;
    // A user-specified description for the cache parameter group.
    string Description = 3;
}

message CreateCacheParameterGroupResult {
    CacheParameterGroup CacheParameterGroup = 1;
}

message CreateCacheSecurityGroupMessage {
    // <p>A name for the cache security group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Cannot be the word "Default".</p> <p>Example: <code>mysecuritygroup</code> </p>
    string CacheSecurityGroupName = 1;
    // A description for the cache security group.
    string Description = 2;
}

message CreateCacheSecurityGroupResult {
    CacheSecurityGroup CacheSecurityGroup = 1;
}

message CreateCacheSubnetGroupMessage {
    // A description for the cache subnet group.
    string CacheSubnetGroupDescription = 1;
    // <p>A name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>
    string CacheSubnetGroupName = 2;
    // A list of VPC subnet IDs for the cache subnet group.
    array SubnetIds = 3;
}

message CreateCacheSubnetGroupResult {
    CacheSubnetGroup CacheSubnetGroup = 1;
}

message CreateReplicationGroupMessage {
    // <p> <b>Reserved parameter.</b> The password used to access a password protected server.</p> <p>Password constraints:</p> <ul> <li> <p>Must be only printable ASCII characters.</p> </li> <li> <p>Must be at least 16 characters and no more than 128 characters in length.</p> </li> <li> <p>Cannot contain any of the following characters: '/', '"', or "@". </p> </li> </ul> <p>For more information, see <a href="http://redis.io/commands/AUTH">AUTH password</a> at Redis.</p>
    string AuthToken = 1;
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 2;
    // <p>Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.</p> <p>If <code>true</code>, Multi-AZ is enabled for this replication group. If <code>false</code>, Multi-AZ is disabled for this replication group.</p> <p> <code>AutomaticFailoverEnabled</code> must be enabled for Redis (cluster mode enabled) replication groups.</p> <p>Default: false</p> <note> <p>ElastiCache Multi-AZ replication groups is not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled): T1 and T2 node types.</p> <p>Redis (cluster mode enabled): T2 node types.</p> </li> </ul> </note>
    boolean AutomaticFailoverEnabled = 3;
    // <p>The compute and memory capacity of the nodes in the node group (shard).</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 4;
    // <p>The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.</p> <p>If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. </p> <ul> <li> <p>To create a Redis (cluster mode disabled) replication group, use <code>CacheParameterGroupName=default.redis3.2</code>.</p> </li> <li> <p>To create a Redis (cluster mode enabled) replication group, use <code>CacheParameterGroupName=default.redis3.2.cluster.on</code>.</p> </li> </ul>
    string CacheParameterGroupName = 5;
    // A list of cache security group names to associate with this replication group.
    array CacheSecurityGroupNames = 6;
    // <p>The name of the cache subnet group to be used for the replication group.</p> <important> <p>If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SubnetGroups.html">Subnets and Subnet Groups</a>.</p> </important>
    string CacheSubnetGroupName = 7;
    // The name of the cache engine to be used for the cache clusters in this replication group.
    string Engine = 8;
    // <p>The version number of the cache engine to be used for the cache clusters in this replication group. To view the supported cache engine versions, use the <code>DescribeCacheEngineVersions</code> operation.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>) in the <i>ElastiCache User Guide</i>, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster or replication group and create it anew with the earlier engine version. </p>
    string EngineVersion = 9;
    // <p>A list of node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount.</p> <p>If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter.</p>
    array NodeGroupConfiguration = 10;
    // <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be the same as the cache cluster owner.</p> </note>
    string NotificationTopicArn = 11;
    // <p>The number of clusters this replication group initially has.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>ReplicasPerNodeGroup</code> instead.</p> <p>If <code>AutomaticFailoverEnabled</code> is <code>true</code>, the value of this parameter must be at least 2. If <code>AutomaticFailoverEnabled</code> is <code>false</code> you can omit this parameter (it will default to 1), or you can explicitly set it to a value between 2 and 6.</p> <p>The maximum permitted value for <code>NumCacheClusters</code> is 6 (primary plus 5 replicas).</p>
    integer NumCacheClusters = 12;
    // <p>An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1.</p> <p>Default: 1</p>
    integer NumNodeGroups = 13;
    // The port number on which each member of the replication group accepts connections.
    integer Port = 14;
    // <p>A list of EC2 Availability Zones in which the replication group's cache clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list.</p> <p>This parameter is not used if there is more than one node group (shard). You should use <code>NodeGroupConfiguration</code> instead.</p> <note> <p>If you are creating your replication group in an Amazon VPC (recommended), you can only locate cache clusters in Availability Zones associated with the subnets in the selected subnet group.</p> <p>The number of Availability Zones listed must equal the value of <code>NumCacheClusters</code>.</p> </note> <p>Default: system chosen Availability Zones.</p>
    array PreferredCacheClusterAZs = 15;
    // <p>Specifies the weekly time range during which maintenance on the cache cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code> are:</p> <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 16;
    // <p>The identifier of the cache cluster that serves as the primary for this replication group. This cache cluster must already exist and have a status of <code>available</code>.</p> <p>This parameter is not required if <code>NumCacheClusters</code>, <code>NumNodeGroups</code>, or <code>ReplicasPerNodeGroup</code> is specified.</p>
    string PrimaryClusterId = 17;
    // An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.
    integer ReplicasPerNodeGroup = 18;
    // A user-created description for the replication group.
    string ReplicationGroupDescription = 19;
    // <p>The replication group identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>A name must contain from 1 to 20 alphanumeric characters or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>A name cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
    string ReplicationGroupId = 20;
    // <p>One or more Amazon VPC security groups associated with this replication group.</p> <p>Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC).</p>
    array SecurityGroupIds = 21;
    // <p>A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter <i>NumNodeGroups</i> or the number of node groups configured by <i>NodeGroupConfiguration</i> regardless of the number of ARNs specified here.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code> </p>
    array SnapshotArns = 22;
    // <p>The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to <code>restoring</code> while the new replication group is being created.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
    string SnapshotName = 23;
    // <p>The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note> <p>Default: 0 (i.e., automatic backups are disabled for this cache cluster).</p>
    integer SnapshotRetentionLimit = 24;
    // <p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <note> <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p> </note>
    string SnapshotWindow = 25;
    // A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value.
    array Tags = 26;
}

message CreateReplicationGroupResult {
    ReplicationGroup ReplicationGroup = 1;
}

message CreateSnapshotMessage {
    // The identifier of an existing cache cluster. The snapshot is created from this cache cluster.
    string CacheClusterId = 1;
    // The identifier of an existing replication group. The snapshot is created from this replication group.
    string ReplicationGroupId = 2;
    // A name for the snapshot being created.
    string SnapshotName = 3;
}

message CreateSnapshotResult {
    Snapshot Snapshot = 1;
}

message DeleteCacheClusterMessage {
    // The cache cluster identifier for the cluster to be deleted. This parameter is not case sensitive.
    string CacheClusterId = 1;
    // The user-supplied name of a final cache cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cache cluster immediately afterward.
    string FinalSnapshotIdentifier = 2;
}

message DeleteCacheClusterResult {
    CacheCluster CacheCluster = 1;
}

message DeleteCacheParameterGroupMessage {
    // <p>The name of the cache parameter group to delete.</p> <note> <p>The specified cache security group must not be associated with any cache clusters.</p> </note>
    string CacheParameterGroupName = 1;
}

message DeleteCacheSecurityGroupMessage {
    // <p>The name of the cache security group to delete.</p> <note> <p>You cannot delete the default security group.</p> </note>
    string CacheSecurityGroupName = 1;
}

message DeleteCacheSubnetGroupMessage {
    // <p>The name of the cache subnet group to delete.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>
    string CacheSubnetGroupName = 1;
}

message DeleteReplicationGroupMessage {
    // The name of a final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster, rather than one of the replicas; this is to ensure that it captures the freshest data. After the final snapshot is taken, the replication group is immediately deleted.
    string FinalSnapshotIdentifier = 1;
    // The identifier for the cluster to be deleted. This parameter is not case sensitive.
    string ReplicationGroupId = 2;
    // If set to <code>true</code>, all of the read replicas are deleted, but the primary node is retained.
    boolean RetainPrimaryCluster = 3;
}

message DeleteReplicationGroupResult {
    ReplicationGroup ReplicationGroup = 1;
}

message DeleteSnapshotMessage {
    // The name of the snapshot to be deleted.
    string SnapshotName = 1;
}

message DeleteSnapshotResult {
    Snapshot Snapshot = 1;
}

message DescribeCacheClustersMessage {
    // The user-supplied cluster identifier. If this parameter is specified, only information about that specific cache cluster is returned. This parameter isn't case sensitive.
    string CacheClusterId = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
    // An optional flag that can be included in the <code>DescribeCacheCluster</code> request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.
    boolean ShowCacheClustersNotInReplicationGroups = 4;
    // An optional flag that can be included in the <code>DescribeCacheCluster</code> request to retrieve information about the individual cache nodes.
    boolean ShowCacheNodeInfo = 5;
}

message DescribeCacheEngineVersionsMessage {
    // <p>The name of a specific cache parameter group family to return details for.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
    string CacheParameterGroupFamily = 1;
    // If <code>true</code>, specifies that only the default version of the specified engine or engine and major version combination is to be returned.
    boolean DefaultOnly = 2;
    // The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code>
    string Engine = 3;
    // <p>The cache engine version to return.</p> <p>Example: <code>1.4.14</code> </p>
    string EngineVersion = 4;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 5;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 6;
}

message DescribeCacheParameterGroupsMessage {
    // The name of a specific cache parameter group to return details for.
    string CacheParameterGroupName = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeCacheParametersMessage {
    // The name of a specific cache parameter group to return details for.
    string CacheParameterGroupName = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
    // <p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code> </p>
    string Source = 4;
}

message DescribeCacheSecurityGroupsMessage {
    // The name of the cache security group to return details for.
    string CacheSecurityGroupName = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeCacheSubnetGroupsMessage {
    // The name of the cache subnet group to return details for.
    string CacheSubnetGroupName = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeEngineDefaultParametersMessage {
    // <p>The name of the cache parameter group family.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>
    string CacheParameterGroupFamily = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeEngineDefaultParametersResult {
    EngineDefaults EngineDefaults = 1;
}

message DescribeEventsMessage {
    // The number of minutes worth of events to retrieve.
    integer Duration = 1;
    // <p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>
    string EndTime = 2;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 3;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 4;
    // The identifier of the event source for which events are returned. If not specified, all sources are included in the response.
    string SourceIdentifier = 5;
    // The event source to retrieve events for. If no value is specified, all events are returned.
    SourceType SourceType = 6;
    // <p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p> <p> <b>Example:</b> 2017-03-30T07:03:49.555Z</p>
    string StartTime = 7;
}

message DescribeReplicationGroupsMessage {
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 2;
    // <p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>
    string ReplicationGroupId = 3;
}

message DescribeReservedCacheNodesMessage {
    // <p>The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 1;
    // <p>The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>
    string Duration = 2;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 3;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 4;
    // <p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"</code> </p>
    string OfferingType = 5;
    // The product description filter value. Use this parameter to show only those reservations matching the specified product description.
    string ProductDescription = 6;
    // The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID.
    string ReservedCacheNodeId = 7;
    // The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier.
    string ReservedCacheNodesOfferingId = 8;
}

message DescribeReservedCacheNodesOfferingsMessage {
    // <p>The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 1;
    // <p>Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.</p> <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>
    string Duration = 2;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 3;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
    integer MaxRecords = 4;
    // <p>The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.</p> <p>Valid Values: <code>"Light Utilization"|"Medium Utilization"|"Heavy Utilization"</code> </p>
    string OfferingType = 5;
    // The product description filter value. Use this parameter to show only the available offerings matching the specified product description.
    string ProductDescription = 6;
    // <p>The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>
    string ReservedCacheNodesOfferingId = 7;
}

message DescribeSnapshotsListMessage {
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // A list of snapshots. Each item in the list contains detailed information about one snapshot.
    array Snapshots = 2;
}

message DescribeSnapshotsMessage {
    // A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cache cluster are described.
    string CacheClusterId = 1;
    // An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 50</p> <p>Constraints: minimum 20; maximum 50.</p>
    integer MaxRecords = 3;
    // A user-supplied replication group identifier. If this parameter is specified, only snapshots associated with that specific replication group are described.
    string ReplicationGroupId = 4;
    // A Boolean value which if true, the node group (shard) configuration is included in the snapshot description.
    boolean ShowNodeGroupConfig = 5;
    // A user-supplied name of the snapshot. If this parameter is specified, only this snapshot are described.
    string SnapshotName = 6;
    // If set to <code>system</code>, the output shows snapshots that were automatically created by ElastiCache. If set to <code>user</code> the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots.
    string SnapshotSource = 7;
}

message EC2SecurityGroup {
    // The name of the Amazon EC2 security group.
    string EC2SecurityGroupName = 1;
    // The AWS account ID of the Amazon EC2 security group owner.
    string EC2SecurityGroupOwnerId = 2;
    // The status of the Amazon EC2 security group.
    string Status = 3;
}

repeated EC2SecurityGroup EC2SecurityGroupList = 1

message Endpoint {
    // The DNS hostname of the cache node.
    string Address = 1;
    // The port number that the cache engine is listening on.
    integer Port = 2;
}

message EngineDefaults {
    // A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.
    array CacheNodeTypeSpecificParameters = 1;
    // <p>Specifies the name of the cache parameter group family to which the engine default parameters apply.</p> <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> </p>
    string CacheParameterGroupFamily = 2;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 3;
    // Contains a list of engine default parameters.
    array Parameters = 4;
}

message Event {
    // The date and time when the event occurred.
    string Date = 1;
    // The text of the event.
    string Message = 2;
    // The identifier for the source of the event. For example, if the event occurred at the cache cluster level, the identifier would be the name of the cache cluster.
    string SourceIdentifier = 3;
    // Specifies the origin of this event - a cache cluster, a parameter group, a security group, etc.
    SourceType SourceType = 4;
}

repeated Event EventList = 1

message EventsMessage {
    // A list of events. Each element in the list contains detailed information about one event.
    array Events = 1;
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 2;
}

message InsufficientCacheClusterCapacityFault {
}

message InvalidARNFault {
}

message InvalidCacheClusterStateFault {
}

message InvalidCacheParameterGroupStateFault {
}

message InvalidCacheSecurityGroupStateFault {
}

message InvalidParameterCombinationException {
    // Two or more parameters that must not be used together were used together.
    string message = 1;
}

message InvalidParameterValueException {
    // A parameter value is invalid.
    string message = 1;
}

message InvalidReplicationGroupStateFault {
}

message InvalidSnapshotStateFault {
}

message InvalidSubnet {
}

message InvalidVPCNetworkStateFault {
}

repeated string KeyList = 1

message ListAllowedNodeTypeModificationsMessage {
    // <p>The name of the cache cluster you want to scale up to a larger node instanced type. ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
    string CacheClusterId = 1;
    // <p>The name of the replication group want to scale up to a larger node type. ElastiCache uses the replication group id to identify the current node type being used by this replication group, and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
    string ReplicationGroupId = 2;
}

message ListTagsForResourceMessage {
    // <p>The Amazon Resource Name (ARN) of the resource for which you want the list of tags, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string ResourceName = 1;
}

message ModifyCacheClusterMessage {
    // <p>Specifies whether the new nodes in this Memcached cache cluster are all created in a single Availability Zone or created across multiple Availability Zones.</p> <p>Valid values: <code>single-az</code> | <code>cross-az</code>.</p> <p>This option is only supported for Memcached cache clusters.</p> <note> <p>You cannot specify <code>single-az</code> if the Memcached cache cluster already has cache nodes in different Availability Zones. If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone.</p> <p>Only newly created nodes are located in different Availability Zones. For instructions on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNode.Memcached.html">Cache Node Considerations for Memcached</a>.</p> </note>
    AZMode AZMode = 1;
    // <p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the cache cluster.</p> <p>If <code>false</code>, changes to the cache cluster are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <important> <p>If you perform a <code>ModifyCacheCluster</code> before a pending modification is applied, the pending modification is replaced by the newer modification.</p> </important> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>
    boolean ApplyImmediately = 2;
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 3;
    // The cache cluster identifier. This value is stored as a lowercase string.
    string CacheClusterId = 4;
    // <p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when <code>NumCacheNodes</code> is less than the existing number of cache nodes. The number of cache node IDs supplied in this parameter must match the difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is greater, and the value of <code>NumCacheNodes</code> in the request.</p> <p>For example: If you have 3 active cache nodes, 7 pending cache nodes, and the number of cache nodes in this <code>ModifyCacheCluser</code> call is 5, you must list 2 (7 - 5) cache node IDs to remove.</p>
    array CacheNodeIdsToRemove = 5;
    // A valid cache node type that you want to scale this cache cluster up to.
    string CacheNodeType = 6;
    // The name of the cache parameter group to apply to this cache cluster. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
    string CacheParameterGroupName = 7;
    // <p>A list of cache security group names to authorize on this cache cluster. This change is asynchronously applied as soon as possible.</p> <p>You can use this parameter only with clusters that are created outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be "Default".</p>
    array CacheSecurityGroupNames = 8;
    // <p>The upgraded version of the cache engine to be run on the cache nodes.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cache cluster and create it anew with the earlier engine version. </p>
    string EngineVersion = 9;
    // <p>The list of Availability Zones where the new Memcached cache nodes are created.</p> <p>This parameter is only valid when <code>NumCacheNodes</code> in the request is greater than the sum of the number of active cache nodes and the number of cache nodes pending creation (which may be zero). The number of Availability Zones supplied in this list must match the cache nodes being added in this request.</p> <p>This option is only supported on Memcached clusters.</p> <p>Scenarios:</p> <ul> <li> <p> <b>Scenario 1:</b> You have 3 active nodes and wish to add 2 nodes. Specify <code>NumCacheNodes=5</code> (3 + 2) and optionally specify two Availability Zones for the two new nodes.</p> </li> <li> <p> <b>Scenario 2:</b> You have 3 active nodes and 2 nodes pending creation (from the scenario 1 call) and want to add 1 more node. Specify <code>NumCacheNodes=6</code> ((3 + 2) + 1) and optionally specify an Availability Zone for the new node.</p> </li> <li> <p> <b>Scenario 3:</b> You want to cancel all pending operations. Specify <code>NumCacheNodes=3</code> to cancel all pending operations.</p> </li> </ul> <p>The Availability Zone placement of nodes pending creation cannot be modified. If you wish to cancel any nodes pending creation, add 0 nodes by setting <code>NumCacheNodes</code> to the number of current nodes.</p> <p>If <code>cross-az</code> is specified, existing Memcached nodes remain in their current Availability Zone. Only newly created nodes can be located in different Availability Zones. For guidance on how to move existing Memcached nodes to different Availability Zones, see the <b>Availability Zone Considerations</b> section of <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNode.Memcached.html">Cache Node Considerations for Memcached</a>.</p> <p> <b>Impact of new add/remove requests upon pending requests</b> </p> <ul> <li> <p>Scenario-1</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-2</p> <ul> <li> <p>Pending Action: Delete</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create, pending or immediate, replaces the pending delete.</p> </li> </ul> </li> <li> <p>Scenario-3</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Delete</p> </li> <li> <p>Result: The new delete, pending or immediate, replaces the pending create.</p> </li> </ul> </li> <li> <p>Scenario-4</p> <ul> <li> <p>Pending Action: Create</p> </li> <li> <p>New Request: Create</p> </li> <li> <p>Result: The new create is added to the pending create.</p> <important> <p> <b>Important:</b> If the new create request is <b>Apply Immediately - Yes</b>, all creates are performed immediately. If the new create request is <b>Apply Immediately - No</b>, all creates are pending.</p> </important> </li> </ul> </li> </ul>
    array NewAvailabilityZones = 10;
    // <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the cache cluster owner.</p> </note>
    string NotificationTopicArn = 11;
    // <p>The status of the Amazon SNS notification topic. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>
    string NotificationTopicStatus = 12;
    // <p>The number of cache nodes that the cache cluster should have. If the value for <code>NumCacheNodes</code> is greater than the sum of the number of current cache nodes and the number of cache nodes pending creation (which may be zero), more nodes are added. If the value is less than the number of existing cache nodes, nodes are removed. If the value is equal to the number of current cache nodes, any pending add or remove requests are canceled.</p> <p>If you are removing cache nodes, you must use the <code>CacheNodeIdsToRemove</code> parameter to provide the IDs of the specific cache nodes to remove.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p> <note> <p>Adding or removing Memcached cache nodes can be applied immediately or as a pending operation (see <code>ApplyImmediately</code>).</p> <p>A pending operation to modify the number of cache nodes in a cluster during its maintenance window, whether by adding or removing nodes in accordance with the scale out architecture, is not queued. The customer's latest request to add or remove nodes to the cluster overrides any previous pending operations to modify the number of cache nodes in the cluster. For example, a request to remove 2 nodes would override a previous pending operation to remove 3 nodes. Similarly, a request to add 2 nodes would override a previous pending operation to remove 3 nodes and vice versa. As Memcached cache nodes may now be provisioned in different Availability Zones with flexible cache node placement, a request to add nodes does not automatically override a previous pending operation to add nodes. The customer can modify the previous pending operation to add more nodes or explicitly cancel the pending request and retry the new request. To cancel pending operations to modify the number of cache nodes in a cluster, use the <code>ModifyCacheCluster</code> request and set <code>NumCacheNodes</code> equal to the number of cache nodes currently in the cache cluster.</p> </note>
    integer NumCacheNodes = 13;
    // <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 14;
    // <p>Specifies the VPC Security Groups associated with the cache cluster.</p> <p>This parameter can be used only with clusters that are created in an Amazon Virtual Private Cloud (Amazon VPC).</p>
    array SecurityGroupIds = 15;
    // <p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <note> <p>If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </note>
    integer SnapshotRetentionLimit = 16;
    // The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cache cluster.
    string SnapshotWindow = 17;
}

message ModifyCacheClusterResult {
    CacheCluster CacheCluster = 1;
}

message ModifyCacheParameterGroupMessage {
    // The name of the cache parameter group to modify.
    string CacheParameterGroupName = 1;
    // An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request.
    array ParameterNameValues = 2;
}

message ModifyCacheSubnetGroupMessage {
    // A description of the cache subnet group.
    string CacheSubnetGroupDescription = 1;
    // <p>The name for the cache subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p> <p>Example: <code>mysubnetgroup</code> </p>
    string CacheSubnetGroupName = 2;
    // The EC2 subnet IDs for the cache subnet group.
    array SubnetIds = 3;
}

message ModifyCacheSubnetGroupResult {
    CacheSubnetGroup CacheSubnetGroup = 1;
}

message ModifyReplicationGroupMessage {
    // <p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the replication group.</p> <p>If <code>false</code>, changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default: <code>false</code> </p>
    boolean ApplyImmediately = 1;
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 2;
    // <p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.</p> <p>Valid values: <code>true</code> | <code>false</code> </p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>
    boolean AutomaticFailoverEnabled = 3;
    // A valid cache node type that you want to scale this replication group to.
    string CacheNodeType = 4;
    // The name of the cache parameter group to apply to all of the clusters in this replication group. This change is asynchronously applied as soon as possible for parameters when the <code>ApplyImmediately</code> parameter is specified as <code>true</code> for this request.
    string CacheParameterGroupName = 5;
    // <p>A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.</p> <p>This parameter can be used only with replication group containing cache clusters running outside of an Amazon Virtual Private Cloud (Amazon VPC).</p> <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be <code>Default</code>.</p>
    array CacheSecurityGroupNames = 6;
    // <p>The upgraded version of the cache engine to be run on the cache clusters in the replication group.</p> <p> <b>Important:</b> You can upgrade to a newer engine version (see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/SelectEngine.html#VersionManagement">Selecting a Cache Engine and Version</a>), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing replication group and create it anew with the earlier engine version. </p>
    string EngineVersion = 7;
    // The name of the Node Group (called shard in the console).
    string NodeGroupId = 8;
    // <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.</p> <note> <p>The Amazon SNS topic owner must be same as the replication group owner. </p> </note>
    string NotificationTopicArn = 9;
    // <p>The status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is <code>active</code>.</p> <p>Valid values: <code>active</code> | <code>inactive</code> </p>
    string NotificationTopicStatus = 10;
    // <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 11;
    // For replication groups with a single primary, if this parameter is specified, ElastiCache promotes the specified cluster in the specified replication group to the primary role. The nodes of all other clusters in the replication group are read replicas.
    string PrimaryClusterId = 12;
    // A description for the replication group. Maximum length is 255 characters.
    string ReplicationGroupDescription = 13;
    // The identifier of the replication group to modify.
    string ReplicationGroupId = 14;
    // <p>Specifies the VPC Security Groups associated with the cache clusters in the replication group.</p> <p>This parameter can be used only with replication group containing cache clusters running in an Amazon Virtual Private Cloud (Amazon VPC).</p>
    array SecurityGroupIds = 15;
    // <p>The number of days for which ElastiCache retains automatic node group (shard) snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>
    integer SnapshotRetentionLimit = 16;
    // <p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of the node group (shard) specified by <code>SnapshottingClusterId</code>.</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p>
    string SnapshotWindow = 17;
    // The cache cluster ID that is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups.
    string SnapshottingClusterId = 18;
}

message ModifyReplicationGroupResult {
    ReplicationGroup ReplicationGroup = 1;
}

message NodeGroup {
    // The identifier for the node group (shard). A Redis (cluster mode disabled) replication group contains only 1 node group; therefore, the node group ID is 0001. A Redis (cluster mode enabled) replication group contains 1 to 15 node groups numbered 0001 to 0015.
    string NodeGroupId = 1;
    // A list containing information about individual nodes within the node group (shard).
    array NodeGroupMembers = 2;
    // The endpoint of the primary node in this node group (shard).
    Endpoint PrimaryEndpoint = 3;
    // The keyspace for this node group (shard).
    string Slots = 4;
    // The current state of this replication group - <code>creating</code>, <code>available</code>, etc.
    string Status = 5;
}

message NodeGroupConfiguration {
    // The Availability Zone where the primary node of this node group (shard) is launched.
    string PrimaryAvailabilityZone = 1;
    // A list of Availability Zones to be used for the read replicas. The number of Availability Zones in this list must match the value of <code>ReplicaCount</code> or <code>ReplicasPerNodeGroup</code> if not specified.
    array ReplicaAvailabilityZones = 2;
    // The number of read replica nodes in this node group (shard).
    integer ReplicaCount = 3;
    // <p>A string that specifies the keyspace for a particular node group. Keyspaces range from 0 to 16,383. The string is in the format <code>startkey-endkey</code>.</p> <p>Example: <code>"0-3999"</code> </p>
    string Slots = 4;
}

repeated NodeGroupConfiguration NodeGroupConfigurationList = 1

repeated NodeGroup NodeGroupList = 1

message NodeGroupMember {
    // The ID of the cache cluster to which the node belongs.
    string CacheClusterId = 1;
    // The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).
    string CacheNodeId = 2;
    // The role that is currently assigned to the node - <code>primary</code> or <code>replica</code>.
    string CurrentRole = 3;
    // The name of the Availability Zone in which the node is located.
    string PreferredAvailabilityZone = 4;
    Endpoint ReadEndpoint = 5;
}

repeated NodeGroupMember NodeGroupMemberList = 1

message NodeGroupNotFoundFault {
}

message NodeGroupsPerReplicationGroupQuotaExceededFault {
}

message NodeQuotaForClusterExceededFault {
}

message NodeQuotaForCustomerExceededFault {
}

message NodeSnapshot {
    // A unique identifier for the source cache cluster.
    string CacheClusterId = 1;
    // The date and time when the cache node was created in the source cache cluster.
    string CacheNodeCreateTime = 2;
    // The cache node identifier for the node in the source cache cluster.
    string CacheNodeId = 3;
    // The size of the cache on the source cache node.
    string CacheSize = 4;
    // The configuration for the source node group (shard).
    NodeGroupConfiguration NodeGroupConfiguration = 5;
    // A unique identifier for the source node group (shard).
    string NodeGroupId = 6;
    // The date and time when the source node's metadata and cache data set was obtained for the snapshot.
    string SnapshotCreateTime = 7;
}

repeated NodeSnapshot NodeSnapshotList = 1

repeated string NodeTypeList = 1

message NotificationConfiguration {
    // The Amazon Resource Name (ARN) that identifies the topic.
    string TopicArn = 1;
    // The current state of the topic.
    string TopicStatus = 2;
}

message Parameter {
    // The valid range of values for the parameter.
    string AllowedValues = 1;
    // Indicates whether a change to the parameter is applied immediately or requires a reboot for the change to be applied. You can force a reboot or wait until the next maintenance window's reboot. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Clusters.Rebooting.html">Rebooting a Cluster</a>.
    ChangeType ChangeType = 2;
    // The valid data type for the parameter.
    string DataType = 3;
    // A description of the parameter.
    string Description = 4;
    // Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed.
    boolean IsModifiable = 5;
    // The earliest cache engine version to which the parameter can apply.
    string MinimumEngineVersion = 6;
    // The name of the parameter.
    string ParameterName = 7;
    // The value of the parameter.
    string ParameterValue = 8;
    // The source of the parameter.
    string Source = 9;
}

message ParameterNameValue {
    // The name of the parameter.
    string ParameterName = 1;
    // The value of the parameter.
    string ParameterValue = 2;
}

repeated ParameterNameValue ParameterNameValueList = 1

repeated Parameter ParametersList = 1

enum PendingAutomaticFailoverStatu {
    ENABLED = 0;
    DISABLED = 1;
}

message PendingModifiedValues {
    // A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).
    array CacheNodeIdsToRemove = 1;
    // The cache node type that this cache cluster or replication group is scaled to.
    string CacheNodeType = 2;
    // The new cache engine version that the cache cluster runs.
    string EngineVersion = 3;
    // <p>The new number of cache nodes for the cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>
    integer NumCacheNodes = 4;
}

repeated string PreferredAvailabilityZoneList = 1

message PurchaseReservedCacheNodesOfferingMessage {
    // <p>The number of cache node instances to reserve.</p> <p>Default: <code>1</code> </p>
    integer CacheNodeCount = 1;
    // <p>A customer-specified identifier to track this reservation.</p> <note> <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation. If this parameter is not specified, ElastiCache automatically generates an identifier for the reservation.</p> </note> <p>Example: myreservationID</p>
    string ReservedCacheNodeId = 2;
    // <p>The ID of the reserved cache node offering to purchase.</p> <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>
    string ReservedCacheNodesOfferingId = 3;
}

message PurchaseReservedCacheNodesOfferingResult {
    ReservedCacheNode ReservedCacheNode = 1;
}

message RebootCacheClusterMessage {
    // The cache cluster identifier. This parameter is stored as a lowercase string.
    string CacheClusterId = 1;
    // A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cache cluster, specify all of the cache node IDs.
    array CacheNodeIdsToReboot = 2;
}

message RebootCacheClusterResult {
    CacheCluster CacheCluster = 1;
}

message RecurringCharge {
    // The monetary amount of the recurring charge.
    number RecurringChargeAmount = 1;
    // The frequency of the recurring charge.
    string RecurringChargeFrequency = 2;
}

repeated RecurringCharge RecurringChargeList = 1

message RemoveTagsFromResourceMessage {
    // <p>The Amazon Resource Name (ARN) of the resource from which you want the tags removed, for example <code>arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster</code> or <code>arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot</code>.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    string ResourceName = 1;
    // A list of <code>TagKeys</code> identifying the tags you want removed from the named resource.
    array TagKeys = 2;
}

message ReplicationGroup {
    // <p>Indicates the status of Multi-AZ for this replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>
    AutomaticFailoverStatus AutomaticFailover = 1;
    // The name of the compute and memory capacity node type for each node in the replication group.
    string CacheNodeType = 2;
    // <p>A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups).</p> <p>Valid values: <code>true</code> | <code>false</code> </p>
    boolean ClusterEnabled = 3;
    // The configuration endpoint for this replicaiton group. Use the configuration endpoint to connect to this replication group.
    Endpoint ConfigurationEndpoint = 4;
    // The description of the replication group.
    string Description = 5;
    // The names of all the cache clusters that are part of this replication group.
    array MemberClusters = 6;
    // A single element list with information about the nodes in the replication group.
    array NodeGroups = 7;
    // A group of settings to be applied to the replication group, either immediately or during the next maintenance window.
    ReplicationGroupPendingModifiedValues PendingModifiedValues = 8;
    // The identifier for the replication group.
    string ReplicationGroupId = 9;
    // <p>The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p> <important> <p> If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p> </important>
    integer SnapshotRetentionLimit = 10;
    // <p>The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).</p> <p>Example: <code>05:00-09:00</code> </p> <p>If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.</p> <p> <b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>
    string SnapshotWindow = 11;
    // The cache cluster ID that is used as the daily snapshot source for the replication group.
    string SnapshottingClusterId = 12;
    // The current state of this replication group - <code>creating</code>, <code>available</code>, <code>modifying</code>, <code>deleting</code>, <code>create-failed</code>, <code>snapshotting</code>.
    string Status = 13;
}

message ReplicationGroupAlreadyExistsFault {
}

repeated ReplicationGroup ReplicationGroupList = 1

message ReplicationGroupMessage {
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 1;
    // A list of replication groups. Each item in the list contains detailed information about one replication group.
    array ReplicationGroups = 2;
}

message ReplicationGroupNotFoundFault {
}

message ReplicationGroupPendingModifiedValues {
    // <p>Indicates the status of Multi-AZ for this Redis replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>
    PendingAutomaticFailoverStatus AutomaticFailoverStatus = 1;
    // The primary cluster ID that is applied immediately (if <code>--apply-immediately</code> was specified), or during the next maintenance window.
    string PrimaryClusterId = 2;
}

message ReservedCacheNode {
    // The number of cache nodes that have been reserved.
    integer CacheNodeCount = 1;
    // <p>The cache node type for the reserved cache nodes.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 2;
    // The duration of the reservation in seconds.
    integer Duration = 3;
    // The fixed price charged for this reserved cache node.
    number FixedPrice = 4;
    // The offering type of this reserved cache node.
    string OfferingType = 5;
    // The description of the reserved cache node.
    string ProductDescription = 6;
    // The recurring price charged to run this reserved cache node.
    array RecurringCharges = 7;
    // The unique identifier for the reservation.
    string ReservedCacheNodeId = 8;
    // The offering identifier.
    string ReservedCacheNodesOfferingId = 9;
    // The time the reservation started.
    string StartTime = 10;
    // The state of the reserved cache node.
    string State = 11;
    // The hourly price charged for this reserved cache node.
    number UsagePrice = 12;
}

message ReservedCacheNodeAlreadyExistsFault {
}

repeated ReservedCacheNode ReservedCacheNodeList = 1

message ReservedCacheNodeMessage {
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 1;
    // A list of reserved cache nodes. Each element in the list contains detailed information about one node.
    array ReservedCacheNodes = 2;
}

message ReservedCacheNodeNotFoundFault {
}

message ReservedCacheNodeQuotaExceededFault {
}

message ReservedCacheNodesOffering {
    // <p>The cache node type for the reserved cache node.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 1;
    // The duration of the offering. in seconds.
    integer Duration = 2;
    // The fixed price charged for this offering.
    number FixedPrice = 3;
    // The offering type.
    string OfferingType = 4;
    // The cache engine used by the offering.
    string ProductDescription = 5;
    // The recurring price charged to run this reserved cache node.
    array RecurringCharges = 6;
    // A unique identifier for the reserved cache node offering.
    string ReservedCacheNodesOfferingId = 7;
    // The hourly price charged for this offering.
    number UsagePrice = 8;
}

repeated ReservedCacheNodesOffering ReservedCacheNodesOfferingList = 1

message ReservedCacheNodesOfferingMessage {
    // Provides an identifier to allow retrieval of paginated results.
    string Marker = 1;
    // A list of reserved cache node offerings. Each element in the list contains detailed information about one offering.
    array ReservedCacheNodesOfferings = 2;
}

message ReservedCacheNodesOfferingNotFoundFault {
}

message ResetCacheParameterGroupMessage {
    // The name of the cache parameter group to reset.
    string CacheParameterGroupName = 1;
    // An array of parameter names to reset to their default values. If <code>ResetAllParameters</code> is <code>true</code>, do not use <code>ParameterNameValues</code>. If <code>ResetAllParameters</code> is <code>false</code>, you must specify the name of at least one parameter to reset.
    array ParameterNameValues = 2;
    // <p>If <code>true</code>, all parameters in the cache parameter group are reset to their default values. If <code>false</code>, only the parameters listed by <code>ParameterNameValues</code> are reset to their default values.</p> <p>Valid values: <code>true</code> | <code>false</code> </p>
    boolean ResetAllParameters = 3;
}

message RevokeCacheSecurityGroupIngressMessage {
    // The name of the cache security group to revoke ingress from.
    string CacheSecurityGroupName = 1;
    // The name of the Amazon EC2 security group to revoke access from.
    string EC2SecurityGroupName = 2;
    // The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access key ID - you must provide a valid AWS account number for this parameter.
    string EC2SecurityGroupOwnerId = 3;
}

message RevokeCacheSecurityGroupIngressResult {
    CacheSecurityGroup CacheSecurityGroup = 1;
}

repeated string SecurityGroupIdsList = 1

message SecurityGroupMembership {
    // The identifier of the cache security group.
    string SecurityGroupId = 1;
    // The status of the cache security group membership. The status changes whenever a cache security group is modified, or when the cache security groups assigned to a cache cluster are modified.
    string Status = 2;
}

repeated SecurityGroupMembership SecurityGroupMembershipList = 1

message Snapshot {
    // This parameter is currently disabled.
    boolean AutoMinorVersionUpgrade = 1;
    // <p>Indicates the status of Multi-AZ for the source replication group.</p> <note> <p>ElastiCache Multi-AZ replication groups are not supported on:</p> <ul> <li> <p>Redis versions earlier than 2.8.6.</p> </li> <li> <p>Redis (cluster mode disabled):T1 and T2 cache node types.</p> <p>Redis (cluster mode enabled): T1 node types.</p> </li> </ul> </note>
    AutomaticFailoverStatus AutomaticFailover = 2;
    // The date and time when the source cache cluster was created.
    string CacheClusterCreateTime = 3;
    // The user-supplied identifier of the source cache cluster.
    string CacheClusterId = 4;
    // <p>The name of the compute and memory capacity node type for the source cache cluster.</p> <p>Valid node types are as follows:</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code>, <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code>, <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.t1.micro</code>, <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized: <code>cache.c1.xlarge</code> </p> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> <li> <p>Previous generation: <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Notes:</b> </p> <ul> <li> <p>All T2 instances are created in an Amazon Virtual Private Cloud (Amazon VPC).</p> </li> <li> <p>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</p> </li> <li> <p>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</p> </li> </ul> <p>For a complete listing of node types and specifications, see <a href="http://aws.amazon.com/elasticache/details">Amazon ElastiCache Product Features and Details</a> and either <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific">Cache Node Type-Specific Parameters for Memcached</a> or <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific">Cache Node Type-Specific Parameters for Redis</a>.</p>
    string CacheNodeType = 5;
    // The cache parameter group that is associated with the source cache cluster.
    string CacheParameterGroupName = 6;
    // The name of the cache subnet group associated with the source cache cluster.
    string CacheSubnetGroupName = 7;
    // The name of the cache engine (<code>memcached</code> or <code>redis</code>) used by the source cache cluster.
    string Engine = 8;
    // The version of the cache engine version that is used by the source cache cluster.
    string EngineVersion = 9;
    // A list of the cache nodes in the source cache cluster.
    array NodeSnapshots = 10;
    // <p>The number of cache nodes in the source cache cluster.</p> <p>For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 20.</p>
    integer NumCacheNodes = 11;
    // The number of node groups (shards) in this snapshot. When restoring from a snapshot, the number of node groups (shards) in the snapshot and in the restored replication group must be the same.
    integer NumNodeGroups = 12;
    // The port number used by each cache nodes in the source cache cluster.
    integer Port = 13;
    // The name of the Availability Zone in which the source cache cluster is located.
    string PreferredAvailabilityZone = 14;
    // <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p> <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code> </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code> </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code> </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    string PreferredMaintenanceWindow = 15;
    // A description of the source replication group.
    string ReplicationGroupDescription = 16;
    // The unique identifier of the source replication group.
    string ReplicationGroupId = 17;
    // The name of a snapshot. For an automatic snapshot, the name is system-generated. For a manual snapshot, this is the user-provided name.
    string SnapshotName = 18;
    // <p>For an automatic snapshot, the number of days for which ElastiCache retains the snapshot before deleting it.</p> <p>For manual snapshots, this field reflects the <code>SnapshotRetentionLimit</code> for the source cache cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the <code>DeleteSnapshot</code> operation. </p> <p> <b>Important</b> If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.</p>
    integer SnapshotRetentionLimit = 19;
    // Indicates whether the snapshot is from an automatic backup (<code>automated</code>) or was created manually (<code>manual</code>).
    string SnapshotSource = 20;
    // The status of the snapshot. Valid values: <code>creating</code> | <code>available</code> | <code>restoring</code> | <code>copying</code> | <code>deleting</code>.
    string SnapshotStatus = 21;
    // The daily time range during which ElastiCache takes daily snapshots of the source cache cluster.
    string SnapshotWindow = 22;
    // The Amazon Resource Name (ARN) for the topic used by the source cache cluster for publishing notifications.
    string TopicArn = 23;
    // The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cache cluster.
    string VpcId = 24;
}

message SnapshotAlreadyExistsFault {
}

repeated string SnapshotArnsList = 1

message SnapshotFeatureNotSupportedFault {
}

repeated Snapshot SnapshotList = 1

message SnapshotNotFoundFault {
}

message SnapshotQuotaExceededFault {
}

enum SourceType {
    CACHECLUSTER = 0;
    CACHEPARAMETERGROUP = 1;
    CACHESECURITYGROUP = 2;
    CACHESUBNETGROUP = 3;
    REPLICATIONGROUP = 4;
}

message Subnet {
    // The Availability Zone associated with the subnet.
    AvailabilityZone SubnetAvailabilityZone = 1;
    // The unique identifier for the subnet.
    string SubnetIdentifier = 2;
}

repeated string SubnetIdentifierList = 1

message SubnetInUse {
}

repeated Subnet SubnetList = 1



message Tag {
    // The key for the tag. May not be null.
    string Key = 1;
    // The tag's value. May be null.
    string Value = 2;
}

repeated Tag TagList = 1

message TagListMessage {
    // A list of cost allocation tags as key-value pairs.
    array TagList = 1;
}

message TagNotFoundFault {
}

message TagQuotaPerResourceExceeded {
}

message TestFailoverMessage {
    // The name of the node group (called shard in the console) in this replication group on which automatic failover is to be tested. You may test automatic failover on up to 5 node groups in any rolling 24-hour period.
    string NodeGroupId = 1;
    // The name of the replication group (console: cluster) whose automatic failover is being tested by this operation.
    string ReplicationGroupId = 2;
}

message TestFailoverNotAvailableFault {
}

message TestFailoverResult {
    ReplicationGroup ReplicationGroup = 1;
}

service AmazonElastiCacheService {
    // <p>Adds up to 50 cost allocation tags to the named resource. A cost allocation tag is a key-value pair where the key and value are case-sensitive. You can use cost allocation tags to categorize and track your AWS costs.</p> <p> When you apply tags to your ElastiCache resources, AWS generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Tagging.html">Using Cost Allocation Tags in Amazon ElastiCache</a> in the <i>ElastiCache User Guide</i>.</p>
    rpc Post(PostRequest) returns (TagListMessage) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Allows network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism.</p> <note> <p>You cannot authorize ingress from an Amazon EC2 security group in one region to an ElastiCache cluster in another region.</p> </note>
    rpc Post#AuthorizeCacheSecurityGroupIngress(Post#AuthorizeCacheSecurityGroupIngressRequest) returns (AuthorizeCacheSecurityGroupIngressResult) {
      option (google.api.http) = {
        post: "//#AuthorizeCacheSecurityGroupIngress"
        body: "body"
      };
    }
    // <p>Makes a copy of an existing snapshot.</p> <note> <p>This operation is valid for Redis only.</p> </note> <important> <p>Users or groups that have permissions to use the <code>CopySnapshot</code> operation can create their own Amazon S3 buckets and copy snapshots to it. To control access to your snapshots, use an IAM policy to control who has the ability to use the <code>CopySnapshot</code> operation. For more information about using IAM to control the use of ElastiCache operations, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html">Exporting Snapshots</a> and <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/IAM.html">Authentication &amp; Access Control</a>.</p> </important> <p>You could receive the following error messages.</p> <p class="title"> <b>Error Messages</b> </p> <ul> <li> <p> <b>Error Message:</b> The S3 bucket %s is outside of the region.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s does not exist.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s is not owned by the authenticated user.</p> <p> <b>Solution:</b> Create an Amazon S3 bucket in the same region as your snapshot. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.CreateBucket">Step 1: Create an Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message:</b> The authenticated user does not have sufficient permissions to perform the desired activity.</p> <p> <b>Solution:</b> Contact your system administrator to get the needed permissions.</p> </li> <li> <p> <b>Error Message:</b> The S3 bucket %s already contains an object with key %s.</p> <p> <b>Solution:</b> Give the <code>TargetSnapshotName</code> a new and unique value. If exporting a snapshot, you could alternatively create a new Amazon S3 bucket and use this same value for <code>TargetSnapshotName</code>.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add List and Read permissions on the bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted WRITE permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add Upload/Delete permissions on the bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> <li> <p> <b>Error Message: </b> ElastiCache has not been granted READ_ACP permissions %s on the S3 Bucket.</p> <p> <b>Solution:</b> Add View Permissions on the bucket. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Snapshots.Exporting.html#Snapshots.Exporting.GrantAccess">Step 2: Grant ElastiCache Access to Your Amazon S3 Bucket</a> in the ElastiCache User Guide.</p> </li> </ul>
    rpc Post#CopySnapshot(Post#CopySnapshotRequest) returns (CopySnapshotResult) {
      option (google.api.http) = {
        post: "//#CopySnapshot"
        body: "body"
      };
    }
    // <p>Creates a cache cluster. All nodes in the cache cluster run the same protocol-compliant cache engine software, either Memcached or Redis.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important>
    rpc Post#CreateCacheCluster(Post#CreateCacheClusterRequest) returns (CreateCacheClusterResult) {
      option (google.api.http) = {
        post: "//#CreateCacheCluster"
        body: "body"
      };
    }
    // <p>Creates a new Amazon ElastiCache cache parameter group. An ElastiCache cache parameter group is a collection of parameters and their values that are applied to all of the nodes in any cache cluster or replication group using the CacheParameterGroup.</p> <p>A newly created CacheParameterGroup is an exact duplicate of the default parameter group for the CacheParameterGroupFamily. To customize the newly created CacheParameterGroup you can change the values of specific parameters. For more information, see:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheParameterGroup.html">ModifyCacheParameterGroup</a> in the ElastiCache API Reference.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/ParameterGroups.html">Parameters and Parameter Groups</a> in the ElastiCache User Guide.</p> </li> </ul>
    rpc Post#CreateCacheParameterGroup(Post#CreateCacheParameterGroupRequest) returns (CreateCacheParameterGroupResult) {
      option (google.api.http) = {
        post: "//#CreateCacheParameterGroup"
        body: "body"
      };
    }
    // <p>Creates a new cache security group. Use a cache security group to control access to one or more cache clusters.</p> <p>Cache security groups are only used when you are creating a cache cluster outside of an Amazon Virtual Private Cloud (Amazon VPC). If you are creating a cache cluster inside of a VPC, use a cache subnet group instead. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateCacheSubnetGroup.html">CreateCacheSubnetGroup</a>.</p>
    rpc Post#CreateCacheSecurityGroup(Post#CreateCacheSecurityGroupRequest) returns (CreateCacheSecurityGroupResult) {
      option (google.api.http) = {
        post: "//#CreateCacheSecurityGroup"
        body: "body"
      };
    }
    // <p>Creates a new cache subnet group.</p> <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).</p>
    rpc Post#CreateCacheSubnetGroup(Post#CreateCacheSubnetGroupRequest) returns (CreateCacheSubnetGroupResult) {
      option (google.api.http) = {
        post: "//#CreateCacheSubnetGroup"
        body: "body"
      };
    }
    // <p>Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.</p> <p>A Redis (cluster mode disabled) replication group is a collection of cache clusters, where one of the cache clusters is a read/write primary and the others are read-only replicas. Writes to the primary are asynchronously propagated to the replicas.</p> <p>A Redis (cluster mode enabled) replication group is a collection of 1 to 15 node groups (shards). Each node group (shard) has one read/write primary node and up to 5 read-only replica nodes. Writes to the primary are asynchronously propagated to the replicas. Redis (cluster mode enabled) replication groups partition the data across node groups (shards).</p> <p>When a Redis (cluster mode disabled) replication group has been successfully created, you can add one or more read replicas to it, up to a total of 5 read replicas. You cannot alter a Redis (cluster mode enabled) replication group after it has been created. However, if you need to increase or decrease the number of node groups (console: shards), you can avail yourself of ElastiCache for Redis' enhanced backup and restore. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/backups-restoring.html">Restoring From a Backup with Cluster Resizing</a> in the <i>ElastiCache User Guide</i>.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#CreateReplicationGroup(Post#CreateReplicationGroupRequest) returns (CreateReplicationGroupResult) {
      option (google.api.http) = {
        post: "//#CreateReplicationGroup"
        body: "body"
      };
    }
    // <p>Creates a copy of an entire cache cluster or replication group at a specific moment in time.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#CreateSnapshot(Post#CreateSnapshotRequest) returns (CreateSnapshotResult) {
      option (google.api.http) = {
        post: "//#CreateSnapshot"
        body: "body"
      };
    }
    // <p>Deletes a previously provisioned cache cluster. <code>DeleteCacheCluster</code> deletes all associated cache nodes, node endpoints and the cache cluster itself. When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the cache cluster; you cannot cancel or revert this operation.</p> <p>This operation cannot be used to delete a cache cluster that is the last read replica of a replication group or node group (shard) that has Multi-AZ mode enabled or a cache cluster from a Redis (cluster mode enabled) replication group.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important>
    rpc Post#DeleteCacheCluster(Post#DeleteCacheClusterRequest) returns (DeleteCacheClusterResult) {
      option (google.api.http) = {
        post: "//#DeleteCacheCluster"
        body: "body"
      };
    }
    // Deletes the specified cache parameter group. You cannot delete a cache parameter group if it is associated with any cache clusters.
    rpc Post#DeleteCacheParameterGroup(Post#DeleteCacheParameterGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteCacheParameterGroup"
        body: "body"
      };
    }
    // <p>Deletes a cache security group.</p> <note> <p>You cannot delete a cache security group if it is associated with any cache clusters.</p> </note>
    rpc Post#DeleteCacheSecurityGroup(Post#DeleteCacheSecurityGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteCacheSecurityGroup"
        body: "body"
      };
    }
    // <p>Deletes a cache subnet group.</p> <note> <p>You cannot delete a cache subnet group if it is associated with any cache clusters.</p> </note>
    rpc Post#DeleteCacheSubnetGroup(Post#DeleteCacheSubnetGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteCacheSubnetGroup"
        body: "body"
      };
    }
    // <p>Deletes an existing replication group. By default, this operation deletes the entire replication group, including the primary/primaries and all of the read replicas. If the replication group has only one primary, you can optionally delete only the read replicas, while retaining the primary by setting <code>RetainPrimaryCluster=true</code>.</p> <p>When you receive a successful response from this operation, Amazon ElastiCache immediately begins deleting the selected resources; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#DeleteReplicationGroup(Post#DeleteReplicationGroupRequest) returns (DeleteReplicationGroupResult) {
      option (google.api.http) = {
        post: "//#DeleteReplicationGroup"
        body: "body"
      };
    }
    // <p>Deletes an existing snapshot. When you receive a successful response from this operation, ElastiCache immediately begins deleting the snapshot; you cannot cancel or revert this operation.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#DeleteSnapshot(Post#DeleteSnapshotRequest) returns (DeleteSnapshotResult) {
      option (google.api.http) = {
        post: "//#DeleteSnapshot"
        body: "body"
      };
    }
    // <p>Returns information about all provisioned cache clusters if no cache cluster identifier is specified, or about a specific cache cluster if a cache cluster identifier is supplied.</p> <p>By default, abbreviated information about the cache clusters is returned. You can use the optional <i>ShowCacheNodeInfo</i> flag to retrieve detailed information about the cache nodes associated with the cache clusters. These details include the DNS address and port for the cache node endpoint.</p> <p>If the cluster is in the <i>creating</i> state, only cluster-level information is displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the <i>deleting</i> state, only cluster-level information is displayed.</p> <p>If cache nodes are currently being added to the cache cluster, node endpoint information and creation time for the additional nodes are not displayed until they are completely provisioned. When the cache cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If cache nodes are currently being removed from the cache cluster, no endpoint information for the removed nodes is displayed.</p>
    rpc Post#DescribeCacheClusters(Post#DescribeCacheClustersRequest) returns (CacheClusterMessage) {
      option (google.api.http) = {
        post: "//#DescribeCacheClusters"
        body: "body"
      };
    }
    // Returns a list of the available cache engines and their versions.
    rpc Post#DescribeCacheEngineVersions(Post#DescribeCacheEngineVersionsRequest) returns (CacheEngineVersionMessage) {
      option (google.api.http) = {
        post: "//#DescribeCacheEngineVersions"
        body: "body"
      };
    }
    // Returns a list of cache parameter group descriptions. If a cache parameter group name is specified, the list contains only the descriptions for that group.
    rpc Post#DescribeCacheParameterGroups(Post#DescribeCacheParameterGroupsRequest) returns (CacheParameterGroupsMessage) {
      option (google.api.http) = {
        post: "//#DescribeCacheParameterGroups"
        body: "body"
      };
    }
    // Returns the detailed parameter list for a particular cache parameter group.
    rpc Post#DescribeCacheParameters(Post#DescribeCacheParametersRequest) returns (CacheParameterGroupDetails) {
      option (google.api.http) = {
        post: "//#DescribeCacheParameters"
        body: "body"
      };
    }
    // Returns a list of cache security group descriptions. If a cache security group name is specified, the list contains only the description of that group.
    rpc Post#DescribeCacheSecurityGroups(Post#DescribeCacheSecurityGroupsRequest) returns (CacheSecurityGroupMessage) {
      option (google.api.http) = {
        post: "//#DescribeCacheSecurityGroups"
        body: "body"
      };
    }
    // Returns a list of cache subnet group descriptions. If a subnet group name is specified, the list contains only the description of that group.
    rpc Post#DescribeCacheSubnetGroups(Post#DescribeCacheSubnetGroupsRequest) returns (CacheSubnetGroupMessage) {
      option (google.api.http) = {
        post: "//#DescribeCacheSubnetGroups"
        body: "body"
      };
    }
    // Returns the default engine and system parameter information for the specified cache engine.
    rpc Post#DescribeEngineDefaultParameters(Post#DescribeEngineDefaultParametersRequest) returns (DescribeEngineDefaultParametersResult) {
      option (google.api.http) = {
        post: "//#DescribeEngineDefaultParameters"
        body: "body"
      };
    }
    // <p>Returns events related to cache clusters, cache security groups, and cache parameter groups. You can obtain events specific to a particular cache cluster, cache security group, or cache parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days' worth of events if necessary.</p>
    rpc Post#DescribeEvents(Post#DescribeEventsRequest) returns (EventsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEvents"
        body: "body"
      };
    }
    // <p>Returns information about a particular replication group. If no identifier is specified, <code>DescribeReplicationGroups</code> returns information about all replication groups.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#DescribeReplicationGroups(Post#DescribeReplicationGroupsRequest) returns (ReplicationGroupMessage) {
      option (google.api.http) = {
        post: "//#DescribeReplicationGroups"
        body: "body"
      };
    }
    // Returns information about reserved cache nodes for this account, or about a specified reserved cache node.
    rpc Post#DescribeReservedCacheNodes(Post#DescribeReservedCacheNodesRequest) returns (ReservedCacheNodeMessage) {
      option (google.api.http) = {
        post: "//#DescribeReservedCacheNodes"
        body: "body"
      };
    }
    // Lists available reserved cache node offerings.
    rpc Post#DescribeReservedCacheNodesOfferings(Post#DescribeReservedCacheNodesOfferingsRequest) returns (ReservedCacheNodesOfferingMessage) {
      option (google.api.http) = {
        post: "//#DescribeReservedCacheNodesOfferings"
        body: "body"
      };
    }
    // <p>Returns information about cache cluster or replication group snapshots. By default, <code>DescribeSnapshots</code> lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cache cluster.</p> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#DescribeSnapshots(Post#DescribeSnapshotsRequest) returns (DescribeSnapshotsListMessage) {
      option (google.api.http) = {
        post: "//#DescribeSnapshots"
        body: "body"
      };
    }
    // <p>Lists all available node types that you can scale your Redis cluster's or replication group's current node type up to.</p> <p>When you use the <code>ModifyCacheCluster</code> or <code>ModifyReplicationGroup</code> operations to scale up your cluster or replication group, the value of the <code>CacheNodeType</code> parameter must be one of the node types returned by this operation.</p>
    rpc Post#ListAllowedNodeTypeModifications(Post#ListAllowedNodeTypeModificationsRequest) returns (AllowedNodeTypeModificationsMessage) {
      option (google.api.http) = {
        post: "//#ListAllowedNodeTypeModifications"
        body: "body"
      };
    }
    // <p>Lists all cost allocation tags currently on the named resource. A <code>cost allocation tag</code> is a key-value pair where the key is case-sensitive and the value is optional. You can use cost allocation tags to categorize and track your AWS costs.</p> <p>You can have a maximum of 50 cost allocation tags on an ElastiCache resource. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/BestPractices.html">Using Cost Allocation Tags in Amazon ElastiCache</a>.</p>
    rpc Post#ListTagsForResource(Post#ListTagsForResourceRequest) returns (TagListMessage) {
      option (google.api.http) = {
        post: "//#ListTagsForResource"
        body: "body"
      };
    }
    // Modifies the settings for a cache cluster. You can use this operation to change one or more cluster configuration parameters by specifying the parameters and the new values.
    rpc Post#ModifyCacheCluster(Post#ModifyCacheClusterRequest) returns (ModifyCacheClusterResult) {
      option (google.api.http) = {
        post: "//#ModifyCacheCluster"
        body: "body"
      };
    }
    // Modifies the parameters of a cache parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.
    rpc Post#ModifyCacheParameterGroup(Post#ModifyCacheParameterGroupRequest) returns (CacheParameterGroupNameMessage) {
      option (google.api.http) = {
        post: "//#ModifyCacheParameterGroup"
        body: "body"
      };
    }
    // Modifies an existing cache subnet group.
    rpc Post#ModifyCacheSubnetGroup(Post#ModifyCacheSubnetGroupRequest) returns (ModifyCacheSubnetGroupResult) {
      option (google.api.http) = {
        post: "//#ModifyCacheSubnetGroup"
        body: "body"
      };
    }
    // <p>Modifies the settings for a replication group.</p> <important> <p>Due to current limitations on Redis (cluster mode disabled), this operation or parameter is not supported on Redis (cluster mode enabled) replication groups.</p> </important> <note> <p>This operation is valid for Redis only.</p> </note>
    rpc Post#ModifyReplicationGroup(Post#ModifyReplicationGroupRequest) returns (ModifyReplicationGroupResult) {
      option (google.api.http) = {
        post: "//#ModifyReplicationGroup"
        body: "body"
      };
    }
    // Allows you to purchase a reserved cache node offering.
    rpc Post#PurchaseReservedCacheNodesOffering(Post#PurchaseReservedCacheNodesOfferingRequest) returns (PurchaseReservedCacheNodesOfferingResult) {
      option (google.api.http) = {
        post: "//#PurchaseReservedCacheNodesOffering"
        body: "body"
      };
    }
    // <p>Reboots some, or all, of the cache nodes within a provisioned cache cluster. This operation applies any modified cache parameter groups to the cache cluster. The reboot operation takes place as soon as possible, and results in a momentary outage to the cache cluster. During the reboot, the cache cluster status is set to REBOOTING.</p> <p>The reboot causes the contents of the cache (for each cache node being rebooted) to be lost.</p> <p>When the reboot is complete, a cache cluster event is created.</p>
    rpc Post#RebootCacheCluster(Post#RebootCacheClusterRequest) returns (RebootCacheClusterResult) {
      option (google.api.http) = {
        post: "//#RebootCacheCluster"
        body: "body"
      };
    }
    // Removes the tags identified by the <code>TagKeys</code> list from the named resource.
    rpc Post#RemoveTagsFromResource(Post#RemoveTagsFromResourceRequest) returns (TagListMessage) {
      option (google.api.http) = {
        post: "//#RemoveTagsFromResource"
        body: "body"
      };
    }
    // Modifies the parameters of a cache parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire cache parameter group, specify the <code>ResetAllParameters</code> and <code>CacheParameterGroupName</code> parameters.
    rpc Post#ResetCacheParameterGroup(Post#ResetCacheParameterGroupRequest) returns (CacheParameterGroupNameMessage) {
      option (google.api.http) = {
        post: "//#ResetCacheParameterGroup"
        body: "body"
      };
    }
    // Revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized.
    rpc Post#RevokeCacheSecurityGroupIngress(Post#RevokeCacheSecurityGroupIngressRequest) returns (RevokeCacheSecurityGroupIngressResult) {
      option (google.api.http) = {
        post: "//#RevokeCacheSecurityGroupIngress"
        body: "body"
      };
    }
    // <p>Represents the input of a <code>TestFailover</code> operation which test automatic failover on a specified node group (called shard in the console) in a replication group (called cluster in the console).</p> <p class="title"> <b>Note the following</b> </p> <ul> <li> <p>A customer can use this operation to test automatic failover on up to 5 shards (called node groups in the ElastiCache API and AWS CLI) in any rolling 24-hour period.</p> </li> <li> <p>If calling this operation on shards in different clusters (called replication groups in the API and CLI), the calls can be made concurrently.</p> <p> </p> </li> <li> <p>If calling this operation multiple times on different shards in the same Redis (cluster mode enabled) replication group, the first node replacement must complete before a subsequent call can be made.</p> </li> <li> <p>To determine whether the node replacement is complete you can check Events using the Amazon ElastiCache console, the AWS CLI, or the ElastiCache API. Look for the following automatic failover related events, listed here in order of occurrance:</p> <ol> <li> <p>Replication group message: <code>Test Failover API called for node group &lt;node-group-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Failover from master node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Replication group message: <code>Failover from master node &lt;primary-node-id&gt; to replica node &lt;node-id&gt; completed</code> </p> </li> <li> <p>Cache cluster message: <code>Recovering cache nodes &lt;node-id&gt;</code> </p> </li> <li> <p>Cache cluster message: <code>Finished recovery for cache nodes &lt;node-id&gt;</code> </p> </li> </ol> <p>For more information see:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/ECEvents.Viewing.html">Viewing ElastiCache Events</a> in the <i>ElastiCache User Guide</i> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> in the ElastiCache API Reference</p> </li> </ul> </li> </ul> <p>Also see, <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/AutoFailover.html#auto-failover-test">Testing Multi-AZ with Automatic Failover</a> in the <i>ElastiCache User Guide</i>.</p>
    rpc Post#TestFailover(Post#TestFailoverRequest) returns (TestFailoverResult) {
      option (google.api.http) = {
        post: "//#TestFailover"
        body: "body"
      };
    }
}
