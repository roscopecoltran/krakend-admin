basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.AccessDeniedException.description" = "Access to a resource was denied."
"definitions.AccessDeniedException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.AccessDeniedException.properties.Message.description" = "A message describing the problem."
"definitions.AccessDeniedException.type" = "object"
"definitions.Action.properties.Arguments.$ref" = "#/definitions/GenericMap"
"definitions.Action.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.Action.type" = "object"
"definitions.ActionList.items.$ref" = "#/definitions/Action"
"definitions.ActionList.type" = "array"
"definitions.AlreadyExistsException.description" = "A resource to be created or added already exists."
"definitions.AlreadyExistsException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.AlreadyExistsException.properties.Message.description" = "A message describing the problem."
"definitions.AlreadyExistsException.type" = "object"
"definitions.AttemptCount.type" = "integer"
"definitions.BatchCreatePartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.BatchCreatePartitionRequest.properties.CatalogId.description" = "The ID of the catalog in which the partion is to be created. Currently, this should be the AWS account ID."
"definitions.BatchCreatePartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.BatchCreatePartitionRequest.properties.DatabaseName.description" = "The name of the metadata database in which the partition is to be created."
"definitions.BatchCreatePartitionRequest.properties.PartitionInputList.$ref" = "#/definitions/PartitionInputList"
"definitions.BatchCreatePartitionRequest.properties.PartitionInputList.description" = "A list of <code>PartitionInput</code> structures that define the partitions to be created."
"definitions.BatchCreatePartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.BatchCreatePartitionRequest.properties.TableName.description" = "The name of the metadata table in which the partition is to be created."
"definitions.BatchCreatePartitionRequest.required.length" = 3
"definitions.BatchCreatePartitionRequest.required[0]" = "DatabaseName"
"definitions.BatchCreatePartitionRequest.required[1]" = "TableName"
"definitions.BatchCreatePartitionRequest.required[2]" = "PartitionInputList"
"definitions.BatchCreatePartitionRequest.type" = "object"
"definitions.BatchCreatePartitionResponse.properties.Errors.$ref" = "#/definitions/PartitionErrors"
"definitions.BatchCreatePartitionResponse.properties.Errors.description" = "Errors encountered when trying to create the requested partitions."
"definitions.BatchCreatePartitionResponse.type" = "object"
"definitions.BatchDeleteConnectionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.BatchDeleteConnectionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the connections reside. If none is supplied, the AWS account ID is used by default."
"definitions.BatchDeleteConnectionRequest.properties.ConnectionNameList.$ref" = "#/definitions/DeleteConnectionNameList"
"definitions.BatchDeleteConnectionRequest.properties.ConnectionNameList.description" = "A list of names of the connections to delete."
"definitions.BatchDeleteConnectionRequest.required.length" = 1
"definitions.BatchDeleteConnectionRequest.required[0]" = "ConnectionNameList"
"definitions.BatchDeleteConnectionRequest.type" = "object"
"definitions.BatchDeleteConnectionResponse.properties.Errors.$ref" = "#/definitions/ErrorByName"
"definitions.BatchDeleteConnectionResponse.properties.Errors.description" = "A map of the names of connections that were not successfully deleted to error details."
"definitions.BatchDeleteConnectionResponse.properties.Succeeded.$ref" = "#/definitions/NameStringList"
"definitions.BatchDeleteConnectionResponse.properties.Succeeded.description" = "A list of names of the connection definitions that were successfully deleted."
"definitions.BatchDeleteConnectionResponse.type" = "object"
"definitions.BatchDeletePartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.BatchDeletePartitionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partition to be deleted resides. If none is supplied, the AWS account ID is used by default."
"definitions.BatchDeletePartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.BatchDeletePartitionRequest.properties.DatabaseName.description" = "The name of the catalog database in which the table in question resides."
"definitions.BatchDeletePartitionRequest.properties.PartitionsToDelete.$ref" = "#/definitions/BatchDeletePartitionValueList"
"definitions.BatchDeletePartitionRequest.properties.PartitionsToDelete.description" = "A list of <code>PartitionInput</code> structures that define the partitions to be deleted."
"definitions.BatchDeletePartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.BatchDeletePartitionRequest.properties.TableName.description" = "The name of the table where the partitions to be deleted is located."
"definitions.BatchDeletePartitionRequest.required.length" = 3
"definitions.BatchDeletePartitionRequest.required[0]" = "DatabaseName"
"definitions.BatchDeletePartitionRequest.required[1]" = "TableName"
"definitions.BatchDeletePartitionRequest.required[2]" = "PartitionsToDelete"
"definitions.BatchDeletePartitionRequest.type" = "object"
"definitions.BatchDeletePartitionResponse.properties.Errors.$ref" = "#/definitions/PartitionErrors"
"definitions.BatchDeletePartitionResponse.properties.Errors.description" = "Errors encountered when trying to delete the requested partitions."
"definitions.BatchDeletePartitionResponse.type" = "object"
"definitions.BatchDeletePartitionValueList.items.$ref" = "#/definitions/PartitionValueList"
"definitions.BatchDeletePartitionValueList.maxItems" = 25.0
"definitions.BatchDeletePartitionValueList.minItems" = 0.0
"definitions.BatchDeletePartitionValueList.type" = "array"
"definitions.BatchDeleteTableNameList.items.$ref" = "#/definitions/NameString"
"definitions.BatchDeleteTableNameList.maxItems" = 100.0
"definitions.BatchDeleteTableNameList.minItems" = 0.0
"definitions.BatchDeleteTableNameList.type" = "array"
"definitions.BatchDeleteTableRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.BatchDeleteTableRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the table resides. If none is supplied, the AWS account ID is used by default."
"definitions.BatchDeleteTableRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.BatchDeleteTableRequest.properties.DatabaseName.description" = "The name of the catalog database where the tables to delete reside."
"definitions.BatchDeleteTableRequest.properties.TablesToDelete.$ref" = "#/definitions/BatchDeleteTableNameList"
"definitions.BatchDeleteTableRequest.properties.TablesToDelete.description" = "A list of the table to delete."
"definitions.BatchDeleteTableRequest.required.length" = 2
"definitions.BatchDeleteTableRequest.required[0]" = "DatabaseName"
"definitions.BatchDeleteTableRequest.required[1]" = "TablesToDelete"
"definitions.BatchDeleteTableRequest.type" = "object"
"definitions.BatchDeleteTableResponse.properties.Errors.$ref" = "#/definitions/TableErrors"
"definitions.BatchDeleteTableResponse.properties.Errors.description" = "A list of errors encountered in attempting to delete the specified tables."
"definitions.BatchDeleteTableResponse.type" = "object"
"definitions.BatchGetPartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.BatchGetPartitionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partitions in question reside. If none is supplied, the AWS account ID is used by default."
"definitions.BatchGetPartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.BatchGetPartitionRequest.properties.DatabaseName.description" = "The name of the catalog database where the partitions reside."
"definitions.BatchGetPartitionRequest.properties.PartitionsToGet.$ref" = "#/definitions/BatchGetPartitionValueList"
"definitions.BatchGetPartitionRequest.properties.PartitionsToGet.description" = "A list of partition values identifying the partitions to retrieve."
"definitions.BatchGetPartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.BatchGetPartitionRequest.properties.TableName.description" = "The name of the partitions' table."
"definitions.BatchGetPartitionRequest.required.length" = 3
"definitions.BatchGetPartitionRequest.required[0]" = "DatabaseName"
"definitions.BatchGetPartitionRequest.required[1]" = "TableName"
"definitions.BatchGetPartitionRequest.required[2]" = "PartitionsToGet"
"definitions.BatchGetPartitionRequest.type" = "object"
"definitions.BatchGetPartitionResponse.properties.Partitions.$ref" = "#/definitions/PartitionList"
"definitions.BatchGetPartitionResponse.properties.Partitions.description" = "A list of the requested partitions."
"definitions.BatchGetPartitionResponse.properties.UnprocessedKeys.$ref" = "#/definitions/BatchGetPartitionValueList"
"definitions.BatchGetPartitionResponse.properties.UnprocessedKeys.description" = "A list of the partition values in the request for which partions were not returned."
"definitions.BatchGetPartitionResponse.type" = "object"
"definitions.BatchGetPartitionValueList.items.$ref" = "#/definitions/PartitionValueList"
"definitions.BatchGetPartitionValueList.maxItems" = 1000.0
"definitions.BatchGetPartitionValueList.minItems" = 0.0
"definitions.BatchGetPartitionValueList.type" = "array"
"definitions.Boolean.type" = "boolean"
"definitions.BooleanValue.type" = "boolean"
"definitions.BoundedPartitionValueList.items.$ref" = "#/definitions/ValueString"
"definitions.BoundedPartitionValueList.maxItems" = 100.0
"definitions.BoundedPartitionValueList.minItems" = 0.0
"definitions.BoundedPartitionValueList.type" = "array"
"definitions.CatalogEntries.items.$ref" = "#/definitions/CatalogEntry"
"definitions.CatalogEntries.type" = "array"
"definitions.CatalogEntry.description" = "Specifies a table definition in the Data Catalog."
"definitions.CatalogEntry.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.CatalogEntry.properties.DatabaseName.description" = "The database in which the table metadata resides."
"definitions.CatalogEntry.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.CatalogEntry.properties.TableName.description" = "The name of the table in question."
"definitions.CatalogEntry.required.length" = 2
"definitions.CatalogEntry.required[0]" = "DatabaseName"
"definitions.CatalogEntry.required[1]" = "TableName"
"definitions.CatalogEntry.type" = "object"
"definitions.CatalogIdString.maxLength" = 255.0
"definitions.CatalogIdString.minLength" = 1.0
"definitions.CatalogIdString.type" = "string"
"definitions.CatalogIdString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.CatalogImportStatus.description" = "A structure containing migration status information."
"definitions.CatalogImportStatus.properties.ImportCompleted.$ref" = "#/definitions/Boolean"
"definitions.CatalogImportStatus.properties.ImportCompleted.description" = "True if the migration has completed, or False otherwise."
"definitions.CatalogImportStatus.properties.ImportTime.$ref" = "#/definitions/Timestamp"
"definitions.CatalogImportStatus.properties.ImportTime.description" = "The time that the migration was started."
"definitions.CatalogImportStatus.properties.ImportedBy.$ref" = "#/definitions/NameString"
"definitions.CatalogImportStatus.properties.ImportedBy.description" = "The name of the person who initiated the migration."
"definitions.CatalogImportStatus.type" = "object"
"definitions.Classification.type" = "string"
"definitions.Classifier.description" = "Classifiers are written in Python and triggered during a Crawl Task. You can write your own Classifiers to best categorize your data sources and specify the appropriate schemas to use for them. A Classifier first checks whether a given file is in a format it can handle, and then, if so, creates a schema in the form of a <code>StructType</code> object that matches that data format."
"definitions.Classifier.properties.GrokClassifier.$ref" = "#/definitions/GrokClassifier"
"definitions.Classifier.properties.GrokClassifier.description" = "A GrokClassifier object."
"definitions.Classifier.type" = "object"
"definitions.ClassifierList.items.$ref" = "#/definitions/Classifier"
"definitions.ClassifierList.type" = "array"
"definitions.ClassifierNameList.items.$ref" = "#/definitions/NameString"
"definitions.ClassifierNameList.type" = "array"
"definitions.CodeGenArgName.type" = "string"
"definitions.CodeGenArgValue.type" = "string"
"definitions.CodeGenEdge.description" = "Represents a directional edge in a directed acyclic graph (DAG)."
"definitions.CodeGenEdge.properties.Source.$ref" = "#/definitions/CodeGenIdentifier"
"definitions.CodeGenEdge.properties.Source.description" = "The ID of the node at which the edge starts."
"definitions.CodeGenEdge.properties.Target.$ref" = "#/definitions/CodeGenIdentifier"
"definitions.CodeGenEdge.properties.Target.description" = "The ID of the node at which the edge ends."
"definitions.CodeGenEdge.properties.TargetParameter.$ref" = "#/definitions/CodeGenArgName"
"definitions.CodeGenEdge.properties.TargetParameter.description" = "The target of the edge."
"definitions.CodeGenEdge.required.length" = 2
"definitions.CodeGenEdge.required[0]" = "Source"
"definitions.CodeGenEdge.required[1]" = "Target"
"definitions.CodeGenEdge.type" = "object"
"definitions.CodeGenIdentifier.maxLength" = 255.0
"definitions.CodeGenIdentifier.minLength" = 1.0
"definitions.CodeGenIdentifier.pattern" = "[A-Za-z_][A-Za-z0-9_]*"
"definitions.CodeGenIdentifier.type" = "string"
"definitions.CodeGenNode.description" = "Represents a node in a directed acyclic graph (DAG)"
"definitions.CodeGenNode.properties.Args.$ref" = "#/definitions/CodeGenNodeArgs"
"definitions.CodeGenNode.properties.Args.description" = "Properties of the node, in the form of name-value pairs."
"definitions.CodeGenNode.properties.Id.$ref" = "#/definitions/CodeGenIdentifier"
"definitions.CodeGenNode.properties.Id.description" = "A node identifier that is unique within the node's graph."
"definitions.CodeGenNode.properties.LineNumber.$ref" = "#/definitions/Integer"
"definitions.CodeGenNode.properties.LineNumber.description" = "The line number of the node."
"definitions.CodeGenNode.properties.NodeType.$ref" = "#/definitions/CodeGenNodeType"
"definitions.CodeGenNode.properties.NodeType.description" = "The type of node this is."
"definitions.CodeGenNode.required.length" = 3
"definitions.CodeGenNode.required[0]" = "Id"
"definitions.CodeGenNode.required[1]" = "NodeType"
"definitions.CodeGenNode.required[2]" = "Args"
"definitions.CodeGenNode.type" = "object"
"definitions.CodeGenNodeArg.description" = "An argument or property of a node."
"definitions.CodeGenNodeArg.properties.Name.$ref" = "#/definitions/CodeGenArgName"
"definitions.CodeGenNodeArg.properties.Name.description" = "The name of the argument or property."
"definitions.CodeGenNodeArg.properties.Param.$ref" = "#/definitions/Boolean"
"definitions.CodeGenNodeArg.properties.Param.description" = "True if the value is used as a parameter."
"definitions.CodeGenNodeArg.properties.Value.$ref" = "#/definitions/CodeGenArgValue"
"definitions.CodeGenNodeArg.properties.Value.description" = "The value of the argument or property."
"definitions.CodeGenNodeArg.required.length" = 2
"definitions.CodeGenNodeArg.required[0]" = "Name"
"definitions.CodeGenNodeArg.required[1]" = "Value"
"definitions.CodeGenNodeArg.type" = "object"
"definitions.CodeGenNodeArgs.items.$ref" = "#/definitions/CodeGenNodeArg"
"definitions.CodeGenNodeArgs.maxItems" = 50.0
"definitions.CodeGenNodeArgs.minItems" = 0.0
"definitions.CodeGenNodeArgs.type" = "array"
"definitions.CodeGenNodeType.type" = "string"
"definitions.Column.description" = "A column in a <code>Table</code>."
"definitions.Column.properties.Comment.$ref" = "#/definitions/CommentString"
"definitions.Column.properties.Comment.description" = "Free-form text comment."
"definitions.Column.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Column.properties.Name.description" = "The name of the <code>Column</code>."
"definitions.Column.properties.Type.$ref" = "#/definitions/ColumnTypeString"
"definitions.Column.properties.Type.description" = "The datatype of data in the <code>Column</code>."
"definitions.Column.required.length" = 1
"definitions.Column.required[0]" = "Name"
"definitions.Column.type" = "object"
"definitions.ColumnList.items.$ref" = "#/definitions/Column"
"definitions.ColumnList.type" = "array"
"definitions.ColumnTypeString.maxLength" = 131072.0
"definitions.ColumnTypeString.minLength" = 0.0
"definitions.ColumnTypeString.type" = "string"
"definitions.ColumnTypeString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.ColumnValueStringList.items.$ref" = "#/definitions/ColumnValuesString"
"definitions.ColumnValueStringList.type" = "array"
"definitions.ColumnValuesString.type" = "string"
"definitions.CommentString.maxLength" = 255.0
"definitions.CommentString.minLength" = 0.0
"definitions.CommentString.type" = "string"
"definitions.CommentString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.ConcurrentModificationException.description" = "Two processes are trying to modify a resource simultaneously."
"definitions.ConcurrentModificationException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.ConcurrentModificationException.properties.Message.description" = "A message describing the problem."
"definitions.ConcurrentModificationException.type" = "object"
"definitions.ConcurrentRunsExceededException.description" = "Too many jobs are being run concurrently."
"definitions.ConcurrentRunsExceededException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.ConcurrentRunsExceededException.properties.Message.description" = "A message describing the problem."
"definitions.ConcurrentRunsExceededException.type" = "object"
"definitions.Condition.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.Condition.properties.LogicalOperator.$ref" = "#/definitions/LogicalOperator"
"definitions.Condition.properties.State.$ref" = "#/definitions/JobRunState"
"definitions.Condition.type" = "object"
"definitions.ConditionList.items.$ref" = "#/definitions/Condition"
"definitions.ConditionList.type" = "array"
"definitions.Connection.description" = "Defines a connection to a data source."
"definitions.Connection.properties.ConnectionProperties.$ref" = "#/definitions/ConnectionProperties"
"definitions.Connection.properties.ConnectionProperties.description" = "A list of key-value pairs used as parameters for this connection."
"definitions.Connection.properties.ConnectionType.$ref" = "#/definitions/ConnectionType"
"definitions.Connection.properties.ConnectionType.description" = "The type of the connection."
"definitions.Connection.properties.CreationTime.$ref" = "#/definitions/Timestamp"
"definitions.Connection.properties.CreationTime.description" = "The time this connection definition was created."
"definitions.Connection.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Connection.properties.Description.description" = "Description of the connection."
"definitions.Connection.properties.LastUpdatedBy.$ref" = "#/definitions/NameString"
"definitions.Connection.properties.LastUpdatedBy.description" = "The user, group or role that last updated this connection definition."
"definitions.Connection.properties.LastUpdatedTime.$ref" = "#/definitions/Timestamp"
"definitions.Connection.properties.LastUpdatedTime.description" = "The last time this connection definition was updated."
"definitions.Connection.properties.MatchCriteria.$ref" = "#/definitions/MatchCriteria"
"definitions.Connection.properties.MatchCriteria.description" = "A list of criteria that can be used in selecting this connection."
"definitions.Connection.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Connection.properties.Name.description" = "The name of the connection definition."
"definitions.Connection.properties.PhysicalConnectionRequirements.$ref" = "#/definitions/PhysicalConnectionRequirements"
"definitions.Connection.properties.PhysicalConnectionRequirements.description" = "A map of physical connection requirements, such as VPC and SecurityGroup, needed for making this connection successfully."
"definitions.Connection.type" = "object"
"definitions.ConnectionInput.description" = "A structure used to specify a connection to create or update."
"definitions.ConnectionInput.properties.ConnectionProperties.$ref" = "#/definitions/ConnectionProperties"
"definitions.ConnectionInput.properties.ConnectionProperties.description" = "A list of key-value pairs used as parameters for this connection."
"definitions.ConnectionInput.properties.ConnectionType.$ref" = "#/definitions/ConnectionType"
"definitions.ConnectionInput.properties.ConnectionType.description" = "The type of the connection."
"definitions.ConnectionInput.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.ConnectionInput.properties.Description.description" = "Description of the connection."
"definitions.ConnectionInput.properties.MatchCriteria.$ref" = "#/definitions/MatchCriteria"
"definitions.ConnectionInput.properties.MatchCriteria.description" = "A list of criteria that can be used in selecting this connection."
"definitions.ConnectionInput.properties.Name.$ref" = "#/definitions/NameString"
"definitions.ConnectionInput.properties.Name.description" = "The name of the connection."
"definitions.ConnectionInput.properties.PhysicalConnectionRequirements.$ref" = "#/definitions/PhysicalConnectionRequirements"
"definitions.ConnectionInput.properties.PhysicalConnectionRequirements.description" = "A map of physical connection requirements, such as VPC and SecurityGroup, needed for making this connection successfully."
"definitions.ConnectionInput.type" = "object"
"definitions.ConnectionList.items.$ref" = "#/definitions/Connection"
"definitions.ConnectionList.type" = "array"
"definitions.ConnectionName.type" = "string"
"definitions.ConnectionProperties.items.properties.key.$ref" = "#/definitions/ConnectionPropertyKey"
"definitions.ConnectionProperties.items.properties.value.$ref" = "#/definitions/ValueString"
"definitions.ConnectionProperties.items.type" = "object"
"definitions.ConnectionProperties.maxItems" = 100.0
"definitions.ConnectionProperties.minItems" = 0.0
"definitions.ConnectionProperties.type" = "array"
"definitions.ConnectionPropertyKey.enum.length" = 11
"definitions.ConnectionPropertyKey.enum[0]" = "HOST"
"definitions.ConnectionPropertyKey.enum[10]" = "JDBC_CONNECTION_URL"
"definitions.ConnectionPropertyKey.enum[1]" = "PORT"
"definitions.ConnectionPropertyKey.enum[2]" = "USERNAME"
"definitions.ConnectionPropertyKey.enum[3]" = "PASSWORD"
"definitions.ConnectionPropertyKey.enum[4]" = "JDBC_DRIVER_JAR_URI"
"definitions.ConnectionPropertyKey.enum[5]" = "JDBC_DRIVER_CLASS_NAME"
"definitions.ConnectionPropertyKey.enum[6]" = "JDBC_ENGINE"
"definitions.ConnectionPropertyKey.enum[7]" = "JDBC_ENGINE_VERSION"
"definitions.ConnectionPropertyKey.enum[8]" = "CONFIG_FILES"
"definitions.ConnectionPropertyKey.enum[9]" = "INSTANCE_ID"
"definitions.ConnectionPropertyKey.type" = "string"
"definitions.ConnectionType.enum.length" = 2
"definitions.ConnectionType.enum[0]" = "JDBC"
"definitions.ConnectionType.enum[1]" = "SFTP"
"definitions.ConnectionType.type" = "string"
"definitions.ConnectionsList.description" = "Specifies the connections used by a job."
"definitions.ConnectionsList.properties.Connections.$ref" = "#/definitions/StringList"
"definitions.ConnectionsList.properties.Connections.description" = "A list of connections used by the job."
"definitions.ConnectionsList.type" = "object"
"definitions.Crawler.description" = "Specifies a crawler program that examines a data source and uses classifiers to try to its schema. If successful, the crawler records metatdata concerning the data source in the Data Catalog."
"definitions.Crawler.properties.Classifiers.$ref" = "#/definitions/ClassifierNameList"
"definitions.Crawler.properties.Classifiers.description" = "A list of custom <code>Classifier</code>s associated with this Crawler."
"definitions.Crawler.properties.CrawlElapsedTime.$ref" = "#/definitions/MillisecondsCount"
"definitions.Crawler.properties.CrawlElapsedTime.description" = "If this Crawler is running, contains the total time elapsed since the last crawl began."
"definitions.Crawler.properties.CreationTime.$ref" = "#/definitions/Timestamp"
"definitions.Crawler.properties.CreationTime.description" = "The time when the Crawler was created."
"definitions.Crawler.properties.DatabaseName.$ref" = "#/definitions/DatabaseName"
"definitions.Crawler.properties.DatabaseName.description" = "The <code>Database</code> where this Crawler's output should be stored."
"definitions.Crawler.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Crawler.properties.Description.description" = "A description of this Crawler and where it should be used."
"definitions.Crawler.properties.LastCrawl.$ref" = "#/definitions/LastCrawlInfo"
"definitions.Crawler.properties.LastCrawl.description" = "The status of the last crawl, and potentially error information if an error occurred."
"definitions.Crawler.properties.LastUpdated.$ref" = "#/definitions/Timestamp"
"definitions.Crawler.properties.LastUpdated.description" = "The time the Crawler was last updated."
"definitions.Crawler.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Crawler.properties.Name.description" = "The <code>Crawler</code> name."
"definitions.Crawler.properties.Role.$ref" = "#/definitions/RoleArn"
"definitions.Crawler.properties.Role.description" = "The ARN of an IAM role used to access customer resources such as data in S3."
"definitions.Crawler.properties.Schedule.$ref" = "#/definitions/Schedule"
"definitions.Crawler.properties.Schedule.description" = "A <code>Schedule</code> object that specifies the schedule on which this Crawler is to be run."
"definitions.Crawler.properties.SchemaChangePolicy.$ref" = "#/definitions/SchemaChangePolicy"
"definitions.Crawler.properties.SchemaChangePolicy.description" = "Sets policy for the crawler's update and delete behavior."
"definitions.Crawler.properties.State.$ref" = "#/definitions/CrawlerState"
"definitions.Crawler.properties.State.description" = "Indicates whether this Crawler is running, or whether a run is pending."
"definitions.Crawler.properties.TablePrefix.$ref" = "#/definitions/TablePrefix"
"definitions.Crawler.properties.TablePrefix.description" = "The table prefix used for catalog tables created."
"definitions.Crawler.properties.Targets.$ref" = "#/definitions/CrawlerTargets"
"definitions.Crawler.properties.Targets.description" = "A collection of targets to crawl."
"definitions.Crawler.properties.Version.$ref" = "#/definitions/VersionId"
"definitions.Crawler.properties.Version.description" = "The version of the Crawler."
"definitions.Crawler.type" = "object"
"definitions.CrawlerList.items.$ref" = "#/definitions/Crawler"
"definitions.CrawlerList.type" = "array"
"definitions.CrawlerMetrics.description" = "Metrics for a specified crawler."
"definitions.CrawlerMetrics.properties.CrawlerName.$ref" = "#/definitions/NameString"
"definitions.CrawlerMetrics.properties.CrawlerName.description" = "The name of the crawler."
"definitions.CrawlerMetrics.properties.LastRuntimeSeconds.$ref" = "#/definitions/NonNegativeDouble"
"definitions.CrawlerMetrics.properties.LastRuntimeSeconds.description" = "The duration of the crawler's most recent run, in seconds."
"definitions.CrawlerMetrics.properties.MedianRuntimeSeconds.$ref" = "#/definitions/NonNegativeDouble"
"definitions.CrawlerMetrics.properties.MedianRuntimeSeconds.description" = "The median duration of this crawler's runs, in seconds."
"definitions.CrawlerMetrics.properties.StillEstimating.$ref" = "#/definitions/Boolean"
"definitions.CrawlerMetrics.properties.StillEstimating.description" = "True if the crawler is estimating its "
"definitions.CrawlerMetrics.properties.TablesCreated.$ref" = "#/definitions/NonNegativeInteger"
"definitions.CrawlerMetrics.properties.TablesCreated.description" = "A list of the tables created by this crawler."
"definitions.CrawlerMetrics.properties.TablesDeleted.$ref" = "#/definitions/NonNegativeInteger"
"definitions.CrawlerMetrics.properties.TablesDeleted.description" = "A list of the tables deleted by this crawler."
"definitions.CrawlerMetrics.properties.TablesUpdated.$ref" = "#/definitions/NonNegativeInteger"
"definitions.CrawlerMetrics.properties.TablesUpdated.description" = "A list of the tables created by this crawler."
"definitions.CrawlerMetrics.properties.TimeLeftSeconds.$ref" = "#/definitions/NonNegativeDouble"
"definitions.CrawlerMetrics.properties.TimeLeftSeconds.description" = "The estimated time left to complete a running crawl."
"definitions.CrawlerMetrics.type" = "object"
"definitions.CrawlerMetricsList.items.$ref" = "#/definitions/CrawlerMetrics"
"definitions.CrawlerMetricsList.type" = "array"
"definitions.CrawlerNameList.items.$ref" = "#/definitions/NameString"
"definitions.CrawlerNameList.maxItems" = 100.0
"definitions.CrawlerNameList.minItems" = 0.0
"definitions.CrawlerNameList.type" = "array"
"definitions.CrawlerNotRunningException.description" = "The specified crawler is not running."
"definitions.CrawlerNotRunningException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.CrawlerNotRunningException.properties.Message.description" = "A message describing the problem."
"definitions.CrawlerNotRunningException.type" = "object"
"definitions.CrawlerRunningException.description" = "The operation cannot be performed because the crawler is already running."
"definitions.CrawlerRunningException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.CrawlerRunningException.properties.Message.description" = "A message describing the problem."
"definitions.CrawlerRunningException.type" = "object"
"definitions.CrawlerState.enum.length" = 3
"definitions.CrawlerState.enum[0]" = "READY"
"definitions.CrawlerState.enum[1]" = "RUNNING"
"definitions.CrawlerState.enum[2]" = "STOPPING"
"definitions.CrawlerState.type" = "string"
"definitions.CrawlerStoppingException.description" = "The specified crawler is stopping."
"definitions.CrawlerStoppingException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.CrawlerStoppingException.properties.Message.description" = "A message describing the problem."
"definitions.CrawlerStoppingException.type" = "object"
"definitions.CrawlerTargets.description" = "Specifies crawler targets."
"definitions.CrawlerTargets.properties.JdbcTargets.$ref" = "#/definitions/JdbcTargetList"
"definitions.CrawlerTargets.properties.JdbcTargets.description" = "Specifies JDBC targets."
"definitions.CrawlerTargets.properties.S3Targets.$ref" = "#/definitions/S3TargetList"
"definitions.CrawlerTargets.properties.S3Targets.description" = "Specifies targets in AWS S3."
"definitions.CrawlerTargets.type" = "object"
"definitions.CreateClassifierRequest.properties.GrokClassifier.$ref" = "#/definitions/CreateGrokClassifierRequest"
"definitions.CreateClassifierRequest.properties.GrokClassifier.description" = "A grok classifier to create."
"definitions.CreateClassifierRequest.type" = "object"
"definitions.CreateClassifierResponse.type" = "object"
"definitions.CreateConnectionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.CreateConnectionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default."
"definitions.CreateConnectionRequest.properties.ConnectionInput.$ref" = "#/definitions/ConnectionInput"
"definitions.CreateConnectionRequest.properties.ConnectionInput.description" = "A <code>ConnectionInput</code> object defining the connection to create."
"definitions.CreateConnectionRequest.required.length" = 1
"definitions.CreateConnectionRequest.required[0]" = "ConnectionInput"
"definitions.CreateConnectionRequest.type" = "object"
"definitions.CreateConnectionResponse.type" = "object"
"definitions.CreateCrawlerRequest.properties.Classifiers.$ref" = "#/definitions/ClassifierNameList"
"definitions.CreateCrawlerRequest.properties.Classifiers.description" = "A list of custom <code>Classifier</code> names that the user has registered. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification."
"definitions.CreateCrawlerRequest.properties.DatabaseName.$ref" = "#/definitions/DatabaseName"
"definitions.CreateCrawlerRequest.properties.DatabaseName.description" = "The Glue <code>Database</code> where results will be stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
"definitions.CreateCrawlerRequest.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.CreateCrawlerRequest.properties.Description.description" = "A description of the new <code>Crawler</code>."
"definitions.CreateCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateCrawlerRequest.properties.Name.description" = "Name of the new <code>Crawler</code>."
"definitions.CreateCrawlerRequest.properties.Role.$ref" = "#/definitions/RoleArn"
"definitions.CreateCrawlerRequest.properties.Role.description" = "The AWS ARN of the IAM role used by the new <code>Crawler</code> to access customer resources."
"definitions.CreateCrawlerRequest.properties.Schedule.$ref" = "#/definitions/CronExpression"
"definitions.CreateCrawlerRequest.properties.Schedule.description" = "A cron expression that can be used as a Cloudwatch event (see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">CloudWatch Schedule Expression Syntax</a>. For example, to run every day at 12:15 UTC, specify: <code>cron(15 12 * * ? *)</code>."
"definitions.CreateCrawlerRequest.properties.SchemaChangePolicy.$ref" = "#/definitions/SchemaChangePolicy"
"definitions.CreateCrawlerRequest.properties.SchemaChangePolicy.description" = "Policy for the crawler's update and deletion behavior."
"definitions.CreateCrawlerRequest.properties.TablePrefix.$ref" = "#/definitions/TablePrefix"
"definitions.CreateCrawlerRequest.properties.TablePrefix.description" = "The table prefix used for catalog tables created."
"definitions.CreateCrawlerRequest.properties.Targets.$ref" = "#/definitions/CrawlerTargets"
"definitions.CreateCrawlerRequest.properties.Targets.description" = "A list of collection of targets to crawl."
"definitions.CreateCrawlerRequest.required.length" = 4
"definitions.CreateCrawlerRequest.required[0]" = "Name"
"definitions.CreateCrawlerRequest.required[1]" = "Role"
"definitions.CreateCrawlerRequest.required[2]" = "DatabaseName"
"definitions.CreateCrawlerRequest.required[3]" = "Targets"
"definitions.CreateCrawlerRequest.type" = "object"
"definitions.CreateCrawlerResponse.type" = "object"
"definitions.CreateDatabaseRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.CreateDatabaseRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which to create the database. If none is supplied, the AWS account ID is used by default."
"definitions.CreateDatabaseRequest.properties.DatabaseInput.$ref" = "#/definitions/DatabaseInput"
"definitions.CreateDatabaseRequest.properties.DatabaseInput.description" = "A <code>DatabaseInput</code> object defining the metadata database to create in the catalog."
"definitions.CreateDatabaseRequest.required.length" = 1
"definitions.CreateDatabaseRequest.required[0]" = "DatabaseInput"
"definitions.CreateDatabaseRequest.type" = "object"
"definitions.CreateDatabaseResponse.type" = "object"
"definitions.CreateDevEndpointRequest.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointRequest.properties.EndpointName.description" = "The name to be assigned to the new DevEndpoint."
"definitions.CreateDevEndpointRequest.properties.ExtraJarsS3Path.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointRequest.properties.ExtraJarsS3Path.description" = "Path to one or more Java Jars in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.CreateDevEndpointRequest.properties.ExtraPythonLibsS3Path.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointRequest.properties.ExtraPythonLibsS3Path.description" = "Path to one or more Python libraries in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.CreateDevEndpointRequest.properties.NumberOfNodes.$ref" = "#/definitions/IntegerValue"
"definitions.CreateDevEndpointRequest.properties.NumberOfNodes.description" = "The number of nodes to use."
"definitions.CreateDevEndpointRequest.properties.PublicKey.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointRequest.properties.PublicKey.description" = "The public key to use for authentication."
"definitions.CreateDevEndpointRequest.properties.RoleArn.$ref" = "#/definitions/RoleArn"
"definitions.CreateDevEndpointRequest.properties.RoleArn.description" = "The IAM role for the DevEndpoint."
"definitions.CreateDevEndpointRequest.properties.SecurityGroupIds.$ref" = "#/definitions/StringList"
"definitions.CreateDevEndpointRequest.properties.SecurityGroupIds.description" = "Security group IDs for the security groups to be used by the new DevEndpoint."
"definitions.CreateDevEndpointRequest.properties.SubnetId.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointRequest.properties.SubnetId.description" = "The subnet ID for the new DevEndpoint to use."
"definitions.CreateDevEndpointRequest.required.length" = 4
"definitions.CreateDevEndpointRequest.required[0]" = "EndpointName"
"definitions.CreateDevEndpointRequest.required[1]" = "RoleArn"
"definitions.CreateDevEndpointRequest.required[2]" = "SecurityGroupIds"
"definitions.CreateDevEndpointRequest.required[3]" = "SubnetId"
"definitions.CreateDevEndpointRequest.type" = "object"
"definitions.CreateDevEndpointResponse.properties.AvailabilityZone.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.AvailabilityZone.description" = "The AWS availability zone where this DevEndpoint is located."
"definitions.CreateDevEndpointResponse.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampValue"
"definitions.CreateDevEndpointResponse.properties.CreatedTimestamp.description" = "The point in time at which this DevEndpoint was created."
"definitions.CreateDevEndpointResponse.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.EndpointName.description" = "The name assigned to the new DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.ExtraJarsS3Path.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.ExtraJarsS3Path.description" = "Path to one or more Java Jars in an S3 bucket that will be loaded in your DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.ExtraPythonLibsS3Path.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.ExtraPythonLibsS3Path.description" = "Path to one or more Python libraries in an S3 bucket that will be loaded in your DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.FailureReason.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.FailureReason.description" = "The reason for a current failure in this DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.NumberOfNodes.$ref" = "#/definitions/IntegerValue"
"definitions.CreateDevEndpointResponse.properties.NumberOfNodes.description" = "The number of nodes in this DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.RoleArn.$ref" = "#/definitions/RoleArn"
"definitions.CreateDevEndpointResponse.properties.RoleArn.description" = "The AWS ARN of the role assigned to the new DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.SecurityGroupIds.$ref" = "#/definitions/StringList"
"definitions.CreateDevEndpointResponse.properties.SecurityGroupIds.description" = "The security groups assigned to the new DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.Status.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.Status.description" = "The current status of the new DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.SubnetId.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.SubnetId.description" = "The subnet ID assigned to the new DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.VpcId.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.VpcId.description" = "The ID of the VPC used by this DevEndpoint."
"definitions.CreateDevEndpointResponse.properties.YarnEndpointAddress.$ref" = "#/definitions/GenericString"
"definitions.CreateDevEndpointResponse.properties.YarnEndpointAddress.description" = "The address of the YARN endpoint used by this DevEndpoint."
"definitions.CreateDevEndpointResponse.type" = "object"
"definitions.CreateGrokClassifierRequest.description" = "Specifies a Grok classifier for CreateClassifier to create."
"definitions.CreateGrokClassifierRequest.properties.Classification.$ref" = "#/definitions/Classification"
"definitions.CreateGrokClassifierRequest.properties.Classification.description" = "The type of result that the classifier matches, such as Twitter Json, Omniture logs, Cloudwatch logs, and so forth."
"definitions.CreateGrokClassifierRequest.properties.CustomPatterns.$ref" = "#/definitions/CustomPatterns"
"definitions.CreateGrokClassifierRequest.properties.CustomPatterns.description" = "Custom grok patterns used by this classifier."
"definitions.CreateGrokClassifierRequest.properties.GrokPattern.$ref" = "#/definitions/GrokPattern"
"definitions.CreateGrokClassifierRequest.properties.GrokPattern.description" = "The grok pattern used by this classifier."
"definitions.CreateGrokClassifierRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateGrokClassifierRequest.properties.Name.description" = "The name of the new Classifier."
"definitions.CreateGrokClassifierRequest.required.length" = 3
"definitions.CreateGrokClassifierRequest.required[0]" = "Classification"
"definitions.CreateGrokClassifierRequest.required[1]" = "Name"
"definitions.CreateGrokClassifierRequest.required[2]" = "GrokPattern"
"definitions.CreateGrokClassifierRequest.type" = "object"
"definitions.CreateJobRequest.properties.AllocatedCapacity.$ref" = "#/definitions/IntegerValue"
"definitions.CreateJobRequest.properties.AllocatedCapacity.description" = "The number of capacity units allocated to this job."
"definitions.CreateJobRequest.properties.Command.$ref" = "#/definitions/JobCommand"
"definitions.CreateJobRequest.properties.Command.description" = "The JobCommand that executes this job."
"definitions.CreateJobRequest.properties.Connections.$ref" = "#/definitions/ConnectionsList"
"definitions.CreateJobRequest.properties.Connections.description" = "The connections used for this job."
"definitions.CreateJobRequest.properties.DefaultArguments.$ref" = "#/definitions/GenericMap"
"definitions.CreateJobRequest.properties.DefaultArguments.description" = "The default parameters for this job."
"definitions.CreateJobRequest.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.CreateJobRequest.properties.Description.description" = "Description of the job."
"definitions.CreateJobRequest.properties.ExecutionProperty.$ref" = "#/definitions/ExecutionProperty"
"definitions.CreateJobRequest.properties.ExecutionProperty.description" = "An ExecutionProperty specifying the maximum number of concurrent runs allowed for this job."
"definitions.CreateJobRequest.properties.LogUri.$ref" = "#/definitions/UriString"
"definitions.CreateJobRequest.properties.LogUri.description" = "Location of the logs for this job."
"definitions.CreateJobRequest.properties.MaxRetries.$ref" = "#/definitions/MaxRetries"
"definitions.CreateJobRequest.properties.MaxRetries.description" = "The maximum number of times to retry this job if it fails."
"definitions.CreateJobRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateJobRequest.properties.Name.description" = "The name you assign to this job."
"definitions.CreateJobRequest.properties.Role.$ref" = "#/definitions/RoleString"
"definitions.CreateJobRequest.properties.Role.description" = "The role associated with this job."
"definitions.CreateJobRequest.required.length" = 3
"definitions.CreateJobRequest.required[0]" = "Name"
"definitions.CreateJobRequest.required[1]" = "Role"
"definitions.CreateJobRequest.required[2]" = "Command"
"definitions.CreateJobRequest.type" = "object"
"definitions.CreateJobResponse.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateJobResponse.properties.Name.description" = "The unique name of the new job that has been created."
"definitions.CreateJobResponse.type" = "object"
"definitions.CreatePartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.CreatePartitionRequest.properties.CatalogId.description" = "The ID of the catalog in which the partion is to be created. Currently, this should be the AWS account ID."
"definitions.CreatePartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.CreatePartitionRequest.properties.DatabaseName.description" = "The name of the metadata database in which the partition is to be created."
"definitions.CreatePartitionRequest.properties.PartitionInput.$ref" = "#/definitions/PartitionInput"
"definitions.CreatePartitionRequest.properties.PartitionInput.description" = "A <code>PartitionInput</code> structure defining the partition to be created."
"definitions.CreatePartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.CreatePartitionRequest.properties.TableName.description" = "The name of the metadata table in which the partition is to be created."
"definitions.CreatePartitionRequest.required.length" = 3
"definitions.CreatePartitionRequest.required[0]" = "DatabaseName"
"definitions.CreatePartitionRequest.required[1]" = "TableName"
"definitions.CreatePartitionRequest.required[2]" = "PartitionInput"
"definitions.CreatePartitionRequest.type" = "object"
"definitions.CreatePartitionResponse.type" = "object"
"definitions.CreateScriptRequest.properties.DagEdges.$ref" = "#/definitions/DagEdges"
"definitions.CreateScriptRequest.properties.DagEdges.description" = "A list of the edges in the DAG."
"definitions.CreateScriptRequest.properties.DagNodes.$ref" = "#/definitions/DagNodes"
"definitions.CreateScriptRequest.properties.DagNodes.description" = "A list of the nodes in the DAG."
"definitions.CreateScriptRequest.type" = "object"
"definitions.CreateScriptResponse.properties.PythonScript.$ref" = "#/definitions/PythonScript"
"definitions.CreateScriptResponse.properties.PythonScript.description" = "The Python script generated from the DAG."
"definitions.CreateScriptResponse.type" = "object"
"definitions.CreateTableRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.CreateTableRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which to create the <code>Table</code>. If none is supplied, the AWS account ID is used by default."
"definitions.CreateTableRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.CreateTableRequest.properties.DatabaseName.description" = "The catalog database in which to create the new table."
"definitions.CreateTableRequest.properties.TableInput.$ref" = "#/definitions/TableInput"
"definitions.CreateTableRequest.properties.TableInput.description" = "The <code>TableInput</code> object that defines the metadata table to create in the catalog."
"definitions.CreateTableRequest.required.length" = 2
"definitions.CreateTableRequest.required[0]" = "DatabaseName"
"definitions.CreateTableRequest.required[1]" = "TableInput"
"definitions.CreateTableRequest.type" = "object"
"definitions.CreateTableResponse.type" = "object"
"definitions.CreateTriggerRequest.properties.Actions.$ref" = "#/definitions/ActionList"
"definitions.CreateTriggerRequest.properties.Actions.description" = "The actions initiated by this trigger when it fires."
"definitions.CreateTriggerRequest.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.CreateTriggerRequest.properties.Description.description" = "A description of the new trigger."
"definitions.CreateTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateTriggerRequest.properties.Name.description" = "The name to assign to the new trigger."
"definitions.CreateTriggerRequest.properties.Predicate.$ref" = "#/definitions/Predicate"
"definitions.CreateTriggerRequest.properties.Predicate.description" = "A predicate to specify when the new trigger should fire."
"definitions.CreateTriggerRequest.properties.Schedule.$ref" = "#/definitions/GenericString"
"definitions.CreateTriggerRequest.properties.Schedule.description" = "A cron schedule expression for the new trigger."
"definitions.CreateTriggerRequest.properties.Type.$ref" = "#/definitions/TriggerType"
"definitions.CreateTriggerRequest.properties.Type.description" = "The type of the new trigger."
"definitions.CreateTriggerRequest.required.length" = 3
"definitions.CreateTriggerRequest.required[0]" = "Name"
"definitions.CreateTriggerRequest.required[1]" = "Type"
"definitions.CreateTriggerRequest.required[2]" = "Actions"
"definitions.CreateTriggerRequest.type" = "object"
"definitions.CreateTriggerResponse.properties.Name.$ref" = "#/definitions/NameString"
"definitions.CreateTriggerResponse.properties.Name.description" = "The name assigned to the new trigger."
"definitions.CreateTriggerResponse.type" = "object"
"definitions.CreateUserDefinedFunctionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.CreateUserDefinedFunctionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which to create the function. If none is supplied, the AWS account ID is used by default."
"definitions.CreateUserDefinedFunctionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.CreateUserDefinedFunctionRequest.properties.DatabaseName.description" = "The name of the catalog database in which to create the function."
"definitions.CreateUserDefinedFunctionRequest.properties.FunctionInput.$ref" = "#/definitions/UserDefinedFunctionInput"
"definitions.CreateUserDefinedFunctionRequest.properties.FunctionInput.description" = "A <code>FunctionInput</code> object that defines the function to create in the Data Catalog."
"definitions.CreateUserDefinedFunctionRequest.required.length" = 2
"definitions.CreateUserDefinedFunctionRequest.required[0]" = "DatabaseName"
"definitions.CreateUserDefinedFunctionRequest.required[1]" = "FunctionInput"
"definitions.CreateUserDefinedFunctionRequest.type" = "object"
"definitions.CreateUserDefinedFunctionResponse.type" = "object"
"definitions.CronExpression.type" = "string"
"definitions.CustomPatterns.maxLength" = 16000.0
"definitions.CustomPatterns.minLength" = 0.0
"definitions.CustomPatterns.type" = "string"
"definitions.CustomPatterns.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.DagEdges.items.$ref" = "#/definitions/CodeGenEdge"
"definitions.DagEdges.type" = "array"
"definitions.DagNodes.items.$ref" = "#/definitions/CodeGenNode"
"definitions.DagNodes.type" = "array"
"definitions.Database.description" = "The <code>Database</code> object represents a logical grouping of tables that may reside in a Hive metastore or an RDBMS."
"definitions.Database.properties.CreateTime.$ref" = "#/definitions/Timestamp"
"definitions.Database.properties.CreateTime.description" = "The time at which the metadata database was created in the catalog."
"definitions.Database.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Database.properties.Description.description" = "Description of the database."
"definitions.Database.properties.LocationUri.$ref" = "#/definitions/URI"
"definitions.Database.properties.LocationUri.description" = "The location of the database (for example, an HDFS path)."
"definitions.Database.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Database.properties.Name.description" = "Name of the database."
"definitions.Database.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.Database.properties.Parameters.description" = "A list of key-value pairs that define parameters and properties of the database."
"definitions.Database.required.length" = 1
"definitions.Database.required[0]" = "Name"
"definitions.Database.type" = "object"
"definitions.DatabaseInput.description" = "The structure used to create or updata a database."
"definitions.DatabaseInput.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.DatabaseInput.properties.Description.description" = "Description of the database"
"definitions.DatabaseInput.properties.LocationUri.$ref" = "#/definitions/URI"
"definitions.DatabaseInput.properties.LocationUri.description" = "The location of the database (for example, an HDFS path)."
"definitions.DatabaseInput.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DatabaseInput.properties.Name.description" = "Name of the database."
"definitions.DatabaseInput.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.DatabaseInput.properties.Parameters.description" = "A list of key-value pairs that define parameters and properties of the database."
"definitions.DatabaseInput.required.length" = 1
"definitions.DatabaseInput.required[0]" = "Name"
"definitions.DatabaseInput.type" = "object"
"definitions.DatabaseList.items.$ref" = "#/definitions/Database"
"definitions.DatabaseList.type" = "array"
"definitions.DatabaseName.type" = "string"
"definitions.DeleteBehavior.enum.length" = 3
"definitions.DeleteBehavior.enum[0]" = "LOG"
"definitions.DeleteBehavior.enum[1]" = "DELETE_FROM_DATABASE"
"definitions.DeleteBehavior.enum[2]" = "DEPRECATE_IN_DATABASE"
"definitions.DeleteBehavior.type" = "string"
"definitions.DeleteClassifierRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteClassifierRequest.properties.Name.description" = "Name of the <code>Classifier</code> to remove."
"definitions.DeleteClassifierRequest.required.length" = 1
"definitions.DeleteClassifierRequest.required[0]" = "Name"
"definitions.DeleteClassifierRequest.type" = "object"
"definitions.DeleteClassifierResponse.type" = "object"
"definitions.DeleteConnectionNameList.items.$ref" = "#/definitions/NameString"
"definitions.DeleteConnectionNameList.maxItems" = 25.0
"definitions.DeleteConnectionNameList.minItems" = 0.0
"definitions.DeleteConnectionNameList.type" = "array"
"definitions.DeleteConnectionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.DeleteConnectionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the connection resides. If none is supplied, the AWS account ID is used by default."
"definitions.DeleteConnectionRequest.properties.ConnectionName.$ref" = "#/definitions/NameString"
"definitions.DeleteConnectionRequest.properties.ConnectionName.description" = "The name of the connection to delete."
"definitions.DeleteConnectionRequest.required.length" = 1
"definitions.DeleteConnectionRequest.required[0]" = "ConnectionName"
"definitions.DeleteConnectionRequest.type" = "object"
"definitions.DeleteConnectionResponse.type" = "object"
"definitions.DeleteCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteCrawlerRequest.properties.Name.description" = "Name of the <code>Crawler</code> to remove."
"definitions.DeleteCrawlerRequest.required.length" = 1
"definitions.DeleteCrawlerRequest.required[0]" = "Name"
"definitions.DeleteCrawlerRequest.type" = "object"
"definitions.DeleteCrawlerResponse.type" = "object"
"definitions.DeleteDatabaseRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.DeleteDatabaseRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the database resides. If none is supplied, the AWS account ID is used by default."
"definitions.DeleteDatabaseRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteDatabaseRequest.properties.Name.description" = "The name of the Database to delete."
"definitions.DeleteDatabaseRequest.required.length" = 1
"definitions.DeleteDatabaseRequest.required[0]" = "Name"
"definitions.DeleteDatabaseRequest.type" = "object"
"definitions.DeleteDatabaseResponse.type" = "object"
"definitions.DeleteDevEndpointRequest.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.DeleteDevEndpointRequest.properties.EndpointName.description" = "The name of the DevEndpoint."
"definitions.DeleteDevEndpointRequest.required.length" = 1
"definitions.DeleteDevEndpointRequest.required[0]" = "EndpointName"
"definitions.DeleteDevEndpointRequest.type" = "object"
"definitions.DeleteDevEndpointResponse.type" = "object"
"definitions.DeleteJobRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.DeleteJobRequest.properties.JobName.description" = "The name of the job to delete."
"definitions.DeleteJobRequest.required.length" = 1
"definitions.DeleteJobRequest.required[0]" = "JobName"
"definitions.DeleteJobRequest.type" = "object"
"definitions.DeleteJobResponse.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.DeleteJobResponse.properties.JobName.description" = "The name of the job that was deleted."
"definitions.DeleteJobResponse.type" = "object"
"definitions.DeletePartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.DeletePartitionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partition to be deleted resides. If none is supplied, the AWS account ID is used by default."
"definitions.DeletePartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.DeletePartitionRequest.properties.DatabaseName.description" = "The name of the catalog database in which the table in question resides."
"definitions.DeletePartitionRequest.properties.PartitionValues.$ref" = "#/definitions/ValueStringList"
"definitions.DeletePartitionRequest.properties.PartitionValues.description" = "The values that define the partition."
"definitions.DeletePartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.DeletePartitionRequest.properties.TableName.description" = "The name of the table where the partition to be deleted is located."
"definitions.DeletePartitionRequest.required.length" = 3
"definitions.DeletePartitionRequest.required[0]" = "DatabaseName"
"definitions.DeletePartitionRequest.required[1]" = "TableName"
"definitions.DeletePartitionRequest.required[2]" = "PartitionValues"
"definitions.DeletePartitionRequest.type" = "object"
"definitions.DeletePartitionResponse.type" = "object"
"definitions.DeleteTableRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.DeleteTableRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the table resides. If none is supplied, the AWS account ID is used by default."
"definitions.DeleteTableRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.DeleteTableRequest.properties.DatabaseName.description" = "The name of the catalog database in which the table resides."
"definitions.DeleteTableRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteTableRequest.properties.Name.description" = "The name of the table to be deleted."
"definitions.DeleteTableRequest.required.length" = 2
"definitions.DeleteTableRequest.required[0]" = "DatabaseName"
"definitions.DeleteTableRequest.required[1]" = "Name"
"definitions.DeleteTableRequest.type" = "object"
"definitions.DeleteTableResponse.type" = "object"
"definitions.DeleteTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteTriggerRequest.properties.Name.description" = "The name of the trigger to delete."
"definitions.DeleteTriggerRequest.required.length" = 1
"definitions.DeleteTriggerRequest.required[0]" = "Name"
"definitions.DeleteTriggerRequest.type" = "object"
"definitions.DeleteTriggerResponse.properties.Name.$ref" = "#/definitions/NameString"
"definitions.DeleteTriggerResponse.properties.Name.description" = "The name of the trigger that was deleted."
"definitions.DeleteTriggerResponse.type" = "object"
"definitions.DeleteUserDefinedFunctionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.DeleteUserDefinedFunctionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the function to be deleted is located. If none is supplied, the AWS account ID is used by default."
"definitions.DeleteUserDefinedFunctionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.DeleteUserDefinedFunctionRequest.properties.DatabaseName.description" = "The name of the catalog database where the function is located."
"definitions.DeleteUserDefinedFunctionRequest.properties.FunctionName.$ref" = "#/definitions/NameString"
"definitions.DeleteUserDefinedFunctionRequest.properties.FunctionName.description" = "The name of the function definition to be deleted."
"definitions.DeleteUserDefinedFunctionRequest.required.length" = 2
"definitions.DeleteUserDefinedFunctionRequest.required[0]" = "DatabaseName"
"definitions.DeleteUserDefinedFunctionRequest.required[1]" = "FunctionName"
"definitions.DeleteUserDefinedFunctionRequest.type" = "object"
"definitions.DeleteUserDefinedFunctionResponse.type" = "object"
"definitions.DescriptionString.maxLength" = 2048.0
"definitions.DescriptionString.minLength" = 0.0
"definitions.DescriptionString.type" = "string"
"definitions.DescriptionString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.DescriptionStringRemovable.maxLength" = 2048.0
"definitions.DescriptionStringRemovable.minLength" = 0.0
"definitions.DescriptionStringRemovable.type" = "string"
"definitions.DescriptionStringRemovable.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.DevEndpoint.description" = "A development endpoint where a developer can remotely debug ETL scripts."
"definitions.DevEndpoint.properties.AvailabilityZone.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.AvailabilityZone.description" = "The AWS availability zone where this DevEndpoint is located."
"definitions.DevEndpoint.properties.CreatedTimestamp.$ref" = "#/definitions/TimestampValue"
"definitions.DevEndpoint.properties.CreatedTimestamp.description" = "The point in time at which this DevEndpoint was created."
"definitions.DevEndpoint.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.EndpointName.description" = "The name of the DevEndpoint."
"definitions.DevEndpoint.properties.ExtraJarsS3Path.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.ExtraJarsS3Path.description" = "Path to one or more Java Jars in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.DevEndpoint.properties.ExtraPythonLibsS3Path.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.ExtraPythonLibsS3Path.description" = "Path to one or more Python libraries in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.DevEndpoint.properties.FailureReason.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.FailureReason.description" = "The reason for a current failure in this DevEndpoint."
"definitions.DevEndpoint.properties.LastModifiedTimestamp.$ref" = "#/definitions/TimestampValue"
"definitions.DevEndpoint.properties.LastModifiedTimestamp.description" = "The point in time at which this DevEndpoint was last modified."
"definitions.DevEndpoint.properties.LastUpdateStatus.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.LastUpdateStatus.description" = "The status of the last update."
"definitions.DevEndpoint.properties.NumberOfNodes.$ref" = "#/definitions/IntegerValue"
"definitions.DevEndpoint.properties.NumberOfNodes.description" = "The number of nodes used by this DevEndpoint."
"definitions.DevEndpoint.properties.PublicAddress.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.PublicAddress.description" = "The public address used by this DevEndpoint."
"definitions.DevEndpoint.properties.PublicKey.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.PublicKey.description" = "The public key to be used by this DevEndpoint for authentication."
"definitions.DevEndpoint.properties.RoleArn.$ref" = "#/definitions/RoleArn"
"definitions.DevEndpoint.properties.RoleArn.description" = "The AWS ARN of the IAM role used in this DevEndpoint."
"definitions.DevEndpoint.properties.SecurityGroupIds.$ref" = "#/definitions/StringList"
"definitions.DevEndpoint.properties.SecurityGroupIds.description" = "A list of security group identifiers used in this DevEndpoint."
"definitions.DevEndpoint.properties.Status.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.Status.description" = "The current status of this DevEndpoint."
"definitions.DevEndpoint.properties.SubnetId.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.SubnetId.description" = "The subnet ID for this DevEndpoint."
"definitions.DevEndpoint.properties.VpcId.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.VpcId.description" = "The ID of the virtual private cloud (VPC) used by this DevEndpoint."
"definitions.DevEndpoint.properties.YarnEndpointAddress.$ref" = "#/definitions/GenericString"
"definitions.DevEndpoint.properties.YarnEndpointAddress.description" = "The YARN endpoint address used by this DevEndpoint."
"definitions.DevEndpoint.type" = "object"
"definitions.DevEndpointCustomLibraries.description" = "Custom libraries to be loaded into a DevEndpoint."
"definitions.DevEndpointCustomLibraries.properties.ExtraJarsS3Path.$ref" = "#/definitions/GenericString"
"definitions.DevEndpointCustomLibraries.properties.ExtraJarsS3Path.description" = "Path to one or more Java Jars in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.DevEndpointCustomLibraries.properties.ExtraPythonLibsS3Path.$ref" = "#/definitions/GenericString"
"definitions.DevEndpointCustomLibraries.properties.ExtraPythonLibsS3Path.description" = "Path to one or more Python libraries in an S3 bucket that should be loaded in your DevEndpoint."
"definitions.DevEndpointCustomLibraries.type" = "object"
"definitions.DevEndpointList.items.$ref" = "#/definitions/DevEndpoint"
"definitions.DevEndpointList.type" = "array"
"definitions.EntityNotFoundException.description" = "A specified entity does not exist"
"definitions.EntityNotFoundException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.EntityNotFoundException.properties.Message.description" = "A message describing the problem."
"definitions.EntityNotFoundException.type" = "object"
"definitions.ErrorByName.items.properties.key.$ref" = "#/definitions/NameString"
"definitions.ErrorByName.items.properties.value.$ref" = "#/definitions/ErrorDetail"
"definitions.ErrorByName.items.type" = "object"
"definitions.ErrorByName.type" = "array"
"definitions.ErrorDetail.description" = "Contains details about an error."
"definitions.ErrorDetail.properties.ErrorCode.$ref" = "#/definitions/NameString"
"definitions.ErrorDetail.properties.ErrorCode.description" = "The code associated with this error."
"definitions.ErrorDetail.properties.ErrorMessage.$ref" = "#/definitions/DescriptionString"
"definitions.ErrorDetail.properties.ErrorMessage.description" = "A message describing the error."
"definitions.ErrorDetail.type" = "object"
"definitions.ErrorString.type" = "string"
"definitions.ExecutionProperty.description" = "An execution property of a job."
"definitions.ExecutionProperty.properties.MaxConcurrentRuns.$ref" = "#/definitions/MaxConcurrentRuns"
"definitions.ExecutionProperty.properties.MaxConcurrentRuns.description" = "The maximum number of concurrent runs allowed for a job."
"definitions.ExecutionProperty.type" = "object"
"definitions.FieldType.type" = "string"
"definitions.FilterString.maxLength" = 2048.0
"definitions.FilterString.minLength" = 0.0
"definitions.FilterString.type" = "string"
"definitions.FilterString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.FormatString.maxLength" = 128.0
"definitions.FormatString.type" = "string"
"definitions.FormatString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.GenericMap.items.properties.key.$ref" = "#/definitions/GenericString"
"definitions.GenericMap.items.properties.value.$ref" = "#/definitions/GenericString"
"definitions.GenericMap.items.type" = "object"
"definitions.GenericMap.type" = "array"
"definitions.GenericString.type" = "string"
"definitions.GetCatalogImportStatusRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetCatalogImportStatusRequest.properties.CatalogId.description" = "The ID of the catalog to migrate. Currently, this should be the AWS account ID."
"definitions.GetCatalogImportStatusRequest.type" = "object"
"definitions.GetCatalogImportStatusResponse.properties.ImportStatus.$ref" = "#/definitions/CatalogImportStatus"
"definitions.GetCatalogImportStatusResponse.properties.ImportStatus.description" = "The status of the specified catalog migration."
"definitions.GetCatalogImportStatusResponse.type" = "object"
"definitions.GetClassifierRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetClassifierRequest.properties.Name.description" = "Name of the <code>Classifier</code> to retrieve."
"definitions.GetClassifierRequest.required.length" = 1
"definitions.GetClassifierRequest.required[0]" = "Name"
"definitions.GetClassifierRequest.type" = "object"
"definitions.GetClassifierResponse.properties.Classifier.$ref" = "#/definitions/Classifier"
"definitions.GetClassifierResponse.properties.Classifier.description" = "The requested <code>Classifier</code>."
"definitions.GetClassifierResponse.type" = "object"
"definitions.GetClassifiersRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetClassifiersRequest.properties.MaxResults.description" = "Size of the list to return (optional)."
"definitions.GetClassifiersRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetClassifiersRequest.properties.NextToken.description" = "An optional continuation token."
"definitions.GetClassifiersRequest.type" = "object"
"definitions.GetClassifiersResponse.properties.Classifiers.$ref" = "#/definitions/ClassifierList"
"definitions.GetClassifiersResponse.properties.Classifiers.description" = "The requested list of <code>Classifier</code> objects."
"definitions.GetClassifiersResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetClassifiersResponse.properties.NextToken.description" = "A continuation token."
"definitions.GetClassifiersResponse.type" = "object"
"definitions.GetConnectionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetConnectionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the connection resides. If none is supplied, the AWS account ID is used by default."
"definitions.GetConnectionRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetConnectionRequest.properties.Name.description" = "The name of the connection definition to retrieve."
"definitions.GetConnectionRequest.required.length" = 1
"definitions.GetConnectionRequest.required[0]" = "Name"
"definitions.GetConnectionRequest.type" = "object"
"definitions.GetConnectionResponse.properties.Connection.$ref" = "#/definitions/Connection"
"definitions.GetConnectionResponse.properties.Connection.description" = "The requested connection definition."
"definitions.GetConnectionResponse.type" = "object"
"definitions.GetConnectionsFilter.description" = "Filters the connection definitions returned by the <code>GetConnections</code> API."
"definitions.GetConnectionsFilter.properties.ConnectionType.$ref" = "#/definitions/ConnectionType"
"definitions.GetConnectionsFilter.properties.ConnectionType.description" = "The type of connections to return."
"definitions.GetConnectionsFilter.properties.MatchCriteria.$ref" = "#/definitions/MatchCriteria"
"definitions.GetConnectionsFilter.properties.MatchCriteria.description" = "A criteria string that must match the criteria recorded in the connection definition for that connection definition to be returned."
"definitions.GetConnectionsFilter.type" = "object"
"definitions.GetConnectionsRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetConnectionsRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the connections reside. If none is supplied, the AWS account ID is used by default."
"definitions.GetConnectionsRequest.properties.Filter.$ref" = "#/definitions/GetConnectionsFilter"
"definitions.GetConnectionsRequest.properties.Filter.description" = "A filter that controls which connections will be returned."
"definitions.GetConnectionsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetConnectionsRequest.properties.MaxResults.description" = "The maximum number of connections to return in one response."
"definitions.GetConnectionsRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetConnectionsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetConnectionsRequest.type" = "object"
"definitions.GetConnectionsResponse.properties.ConnectionList.$ref" = "#/definitions/ConnectionList"
"definitions.GetConnectionsResponse.properties.ConnectionList.description" = "A list of requested connection definitions."
"definitions.GetConnectionsResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetConnectionsResponse.properties.NextToken.description" = "A continuation token, if the list of connections returned does not include the last of the filtered connections."
"definitions.GetConnectionsResponse.type" = "object"
"definitions.GetCrawlerMetricsRequest.properties.CrawlerNameList.$ref" = "#/definitions/CrawlerNameList"
"definitions.GetCrawlerMetricsRequest.properties.CrawlerNameList.description" = "A list of the names of crawlers about which to retrieve metrics."
"definitions.GetCrawlerMetricsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetCrawlerMetricsRequest.properties.MaxResults.description" = "The maximum size of a list to return."
"definitions.GetCrawlerMetricsRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetCrawlerMetricsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetCrawlerMetricsRequest.type" = "object"
"definitions.GetCrawlerMetricsResponse.properties.CrawlerMetricsList.$ref" = "#/definitions/CrawlerMetricsList"
"definitions.GetCrawlerMetricsResponse.properties.CrawlerMetricsList.description" = "A list of metrics for the specified crawler."
"definitions.GetCrawlerMetricsResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetCrawlerMetricsResponse.properties.NextToken.description" = "A continuation token, if the returned list does not contain the last metric available."
"definitions.GetCrawlerMetricsResponse.type" = "object"
"definitions.GetCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetCrawlerRequest.properties.Name.description" = "Name of the <code>Crawler</code> to retrieve metadata for."
"definitions.GetCrawlerRequest.required.length" = 1
"definitions.GetCrawlerRequest.required[0]" = "Name"
"definitions.GetCrawlerRequest.type" = "object"
"definitions.GetCrawlerResponse.properties.Crawler.$ref" = "#/definitions/Crawler"
"definitions.GetCrawlerResponse.properties.Crawler.description" = "The metadata for the specified <code>Crawler</code>."
"definitions.GetCrawlerResponse.type" = "object"
"definitions.GetCrawlersRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetCrawlersRequest.properties.MaxResults.description" = "The number of Crawlers to return on each call."
"definitions.GetCrawlersRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetCrawlersRequest.properties.NextToken.description" = "A continuation token, if this is a continuation request."
"definitions.GetCrawlersRequest.type" = "object"
"definitions.GetCrawlersResponse.properties.Crawlers.$ref" = "#/definitions/CrawlerList"
"definitions.GetCrawlersResponse.properties.Crawlers.description" = "A list of <code>Crawler</code> metadata."
"definitions.GetCrawlersResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetCrawlersResponse.properties.NextToken.description" = "A continuation token, if the returned list has not reached the end of those defined in this customer account."
"definitions.GetCrawlersResponse.type" = "object"
"definitions.GetDatabaseRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetDatabaseRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the database resides. If none is supplied, the AWS account ID is used by default."
"definitions.GetDatabaseRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetDatabaseRequest.properties.Name.description" = "The name of the database to retrieve."
"definitions.GetDatabaseRequest.required.length" = 1
"definitions.GetDatabaseRequest.required[0]" = "Name"
"definitions.GetDatabaseRequest.type" = "object"
"definitions.GetDatabaseResponse.properties.Database.$ref" = "#/definitions/Database"
"definitions.GetDatabaseResponse.properties.Database.description" = "The definition of the specified database in the catalog."
"definitions.GetDatabaseResponse.type" = "object"
"definitions.GetDatabasesRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetDatabasesRequest.properties.CatalogId.description" = "The ID of the Data Catalog from which to retrieve <code>Databases</code>. If none is supplied, the AWS account ID is used by default."
"definitions.GetDatabasesRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetDatabasesRequest.properties.MaxResults.description" = "The maximum number of databases to return in one response."
"definitions.GetDatabasesRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetDatabasesRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetDatabasesRequest.type" = "object"
"definitions.GetDatabasesResponse.properties.DatabaseList.$ref" = "#/definitions/DatabaseList"
"definitions.GetDatabasesResponse.properties.DatabaseList.description" = "A list of <code>Database</code> objects from the specified catalog."
"definitions.GetDatabasesResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetDatabasesResponse.properties.NextToken.description" = "A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last."
"definitions.GetDatabasesResponse.required.length" = 1
"definitions.GetDatabasesResponse.required[0]" = "DatabaseList"
"definitions.GetDatabasesResponse.type" = "object"
"definitions.GetDataflowGraphRequest.properties.PythonScript.$ref" = "#/definitions/PythonScript"
"definitions.GetDataflowGraphRequest.properties.PythonScript.description" = "The Python script to transform."
"definitions.GetDataflowGraphRequest.type" = "object"
"definitions.GetDataflowGraphResponse.properties.DagEdges.$ref" = "#/definitions/DagEdges"
"definitions.GetDataflowGraphResponse.properties.DagEdges.description" = "A list of the edges in the resulting DAG."
"definitions.GetDataflowGraphResponse.properties.DagNodes.$ref" = "#/definitions/DagNodes"
"definitions.GetDataflowGraphResponse.properties.DagNodes.description" = "A list of the nodes in the resulting DAG."
"definitions.GetDataflowGraphResponse.type" = "object"
"definitions.GetDevEndpointRequest.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.GetDevEndpointRequest.properties.EndpointName.description" = "Name of the DevEndpoint for which to retrieve information."
"definitions.GetDevEndpointRequest.required.length" = 1
"definitions.GetDevEndpointRequest.required[0]" = "EndpointName"
"definitions.GetDevEndpointRequest.type" = "object"
"definitions.GetDevEndpointResponse.properties.DevEndpoint.$ref" = "#/definitions/DevEndpoint"
"definitions.GetDevEndpointResponse.properties.DevEndpoint.description" = "A DevEndpoint definition."
"definitions.GetDevEndpointResponse.type" = "object"
"definitions.GetDevEndpointsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetDevEndpointsRequest.properties.MaxResults.description" = "The maximum size of information to return."
"definitions.GetDevEndpointsRequest.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetDevEndpointsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetDevEndpointsRequest.type" = "object"
"definitions.GetDevEndpointsResponse.properties.DevEndpoints.$ref" = "#/definitions/DevEndpointList"
"definitions.GetDevEndpointsResponse.properties.DevEndpoints.description" = "A list of DevEndpoint definitions."
"definitions.GetDevEndpointsResponse.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetDevEndpointsResponse.properties.NextToken.description" = "A continuation token, if not all DevEndpoint definitions have yet been returned."
"definitions.GetDevEndpointsResponse.type" = "object"
"definitions.GetJobRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.GetJobRequest.properties.JobName.description" = "The name of the job to retrieve."
"definitions.GetJobRequest.required.length" = 1
"definitions.GetJobRequest.required[0]" = "JobName"
"definitions.GetJobRequest.type" = "object"
"definitions.GetJobResponse.properties.Job.$ref" = "#/definitions/Job"
"definitions.GetJobResponse.properties.Job.description" = "The requested job definition."
"definitions.GetJobResponse.type" = "object"
"definitions.GetJobRunRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.GetJobRunRequest.properties.JobName.description" = "Name of the job being run."
"definitions.GetJobRunRequest.properties.PredecessorsIncluded.$ref" = "#/definitions/BooleanValue"
"definitions.GetJobRunRequest.properties.PredecessorsIncluded.description" = "A list of the predecessor runs to return as well."
"definitions.GetJobRunRequest.properties.RunId.$ref" = "#/definitions/IdString"
"definitions.GetJobRunRequest.properties.RunId.description" = "The ID of the job run."
"definitions.GetJobRunRequest.required.length" = 2
"definitions.GetJobRunRequest.required[0]" = "JobName"
"definitions.GetJobRunRequest.required[1]" = "RunId"
"definitions.GetJobRunRequest.type" = "object"
"definitions.GetJobRunResponse.properties.JobRun.$ref" = "#/definitions/JobRun"
"definitions.GetJobRunResponse.properties.JobRun.description" = "The requested job-run metadata."
"definitions.GetJobRunResponse.type" = "object"
"definitions.GetJobRunsRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.GetJobRunsRequest.properties.JobName.description" = "The name of the job for which to retrieve all job runs."
"definitions.GetJobRunsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetJobRunsRequest.properties.MaxResults.description" = "The maximum size of the response."
"definitions.GetJobRunsRequest.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetJobRunsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetJobRunsRequest.required.length" = 1
"definitions.GetJobRunsRequest.required[0]" = "JobName"
"definitions.GetJobRunsRequest.type" = "object"
"definitions.GetJobRunsResponse.properties.JobRuns.$ref" = "#/definitions/JobRunList"
"definitions.GetJobRunsResponse.properties.JobRuns.description" = "A list of job-run metatdata objects."
"definitions.GetJobRunsResponse.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetJobRunsResponse.properties.NextToken.description" = "A continuation token, if not all reequested job runs have been returned."
"definitions.GetJobRunsResponse.type" = "object"
"definitions.GetJobsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetJobsRequest.properties.MaxResults.description" = "The maximum size of the response."
"definitions.GetJobsRequest.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetJobsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetJobsRequest.type" = "object"
"definitions.GetJobsResponse.properties.Jobs.$ref" = "#/definitions/JobList"
"definitions.GetJobsResponse.properties.Jobs.description" = "A list of jobs."
"definitions.GetJobsResponse.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetJobsResponse.properties.NextToken.description" = "A continuation token, if not all jobs have yet been returned."
"definitions.GetJobsResponse.type" = "object"
"definitions.GetMappingRequest.properties.Location.$ref" = "#/definitions/Location"
"definitions.GetMappingRequest.properties.Location.description" = "Parameters for the mapping."
"definitions.GetMappingRequest.properties.Sinks.$ref" = "#/definitions/CatalogEntries"
"definitions.GetMappingRequest.properties.Sinks.description" = "A list of target tables."
"definitions.GetMappingRequest.properties.Source.$ref" = "#/definitions/CatalogEntry"
"definitions.GetMappingRequest.properties.Source.description" = "Specifies the source table."
"definitions.GetMappingRequest.required.length" = 1
"definitions.GetMappingRequest.required[0]" = "Source"
"definitions.GetMappingRequest.type" = "object"
"definitions.GetMappingResponse.properties.Mapping.$ref" = "#/definitions/MappingList"
"definitions.GetMappingResponse.properties.Mapping.description" = "A list of mappings to the specified targets."
"definitions.GetMappingResponse.required.length" = 1
"definitions.GetMappingResponse.required[0]" = "Mapping"
"definitions.GetMappingResponse.type" = "object"
"definitions.GetPartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetPartitionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partition in question resides. If none is supplied, the AWS account ID is used by default."
"definitions.GetPartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetPartitionRequest.properties.DatabaseName.description" = "The name of the catalog database where the partition resides."
"definitions.GetPartitionRequest.properties.PartitionValues.$ref" = "#/definitions/ValueStringList"
"definitions.GetPartitionRequest.properties.PartitionValues.description" = "The values that define the partition."
"definitions.GetPartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.GetPartitionRequest.properties.TableName.description" = "The name of the partition's table."
"definitions.GetPartitionRequest.required.length" = 3
"definitions.GetPartitionRequest.required[0]" = "DatabaseName"
"definitions.GetPartitionRequest.required[1]" = "TableName"
"definitions.GetPartitionRequest.required[2]" = "PartitionValues"
"definitions.GetPartitionRequest.type" = "object"
"definitions.GetPartitionResponse.properties.Partition.$ref" = "#/definitions/Partition"
"definitions.GetPartitionResponse.properties.Partition.description" = "The requested information, in the form of a <code>Partition</code> object."
"definitions.GetPartitionResponse.type" = "object"
"definitions.GetPartitionsRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetPartitionsRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partitions in question reside. If none is supplied, the AWS account ID is used by default."
"definitions.GetPartitionsRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetPartitionsRequest.properties.DatabaseName.description" = "The name of the catalog database where the partitions reside."
"definitions.GetPartitionsRequest.properties.Expression.$ref" = "#/definitions/PredicateString"
"definitions.GetPartitionsRequest.properties.Expression.description" = "An expression filtering the partitions to be returned."
"definitions.GetPartitionsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetPartitionsRequest.properties.MaxResults.description" = "The maximum number of partitions to return in a single response."
"definitions.GetPartitionsRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetPartitionsRequest.properties.NextToken.description" = "A continuation token, if this is not the first call to retrieve these partitions."
"definitions.GetPartitionsRequest.properties.Segment.$ref" = "#/definitions/Segment"
"definitions.GetPartitionsRequest.properties.Segment.description" = "The segment of the table's partitions to scan in this request."
"definitions.GetPartitionsRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.GetPartitionsRequest.properties.TableName.description" = "The name of the partitions' table."
"definitions.GetPartitionsRequest.required.length" = 2
"definitions.GetPartitionsRequest.required[0]" = "DatabaseName"
"definitions.GetPartitionsRequest.required[1]" = "TableName"
"definitions.GetPartitionsRequest.type" = "object"
"definitions.GetPartitionsResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetPartitionsResponse.properties.NextToken.description" = "A continuation token, if the returned list of partitions does not does not include the last one."
"definitions.GetPartitionsResponse.properties.Partitions.$ref" = "#/definitions/PartitionList"
"definitions.GetPartitionsResponse.properties.Partitions.description" = "A list of requested partitions."
"definitions.GetPartitionsResponse.type" = "object"
"definitions.GetPlanRequest.properties.Location.$ref" = "#/definitions/Location"
"definitions.GetPlanRequest.properties.Location.description" = "Parameters for the mapping."
"definitions.GetPlanRequest.properties.Mapping.$ref" = "#/definitions/MappingList"
"definitions.GetPlanRequest.properties.Mapping.description" = "The list of mappings from a source table to target tables."
"definitions.GetPlanRequest.properties.Sinks.$ref" = "#/definitions/CatalogEntries"
"definitions.GetPlanRequest.properties.Sinks.description" = "The target tables."
"definitions.GetPlanRequest.properties.Source.$ref" = "#/definitions/CatalogEntry"
"definitions.GetPlanRequest.properties.Source.description" = "The source table."
"definitions.GetPlanRequest.required.length" = 2
"definitions.GetPlanRequest.required[0]" = "Mapping"
"definitions.GetPlanRequest.required[1]" = "Source"
"definitions.GetPlanRequest.type" = "object"
"definitions.GetPlanResponse.properties.PythonScript.$ref" = "#/definitions/PythonScript"
"definitions.GetPlanResponse.properties.PythonScript.description" = "A python script to perform the mapping."
"definitions.GetPlanResponse.type" = "object"
"definitions.GetTableRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetTableRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the table resides. If none is supplied, the AWS account ID is used by default."
"definitions.GetTableRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetTableRequest.properties.DatabaseName.description" = "The name of the database in the catalog in which the table resides."
"definitions.GetTableRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetTableRequest.properties.Name.description" = "The name of the table for which to retrieve the definition."
"definitions.GetTableRequest.required.length" = 2
"definitions.GetTableRequest.required[0]" = "DatabaseName"
"definitions.GetTableRequest.required[1]" = "Name"
"definitions.GetTableRequest.type" = "object"
"definitions.GetTableResponse.properties.Table.$ref" = "#/definitions/Table"
"definitions.GetTableResponse.properties.Table.description" = "The <code>Table</code> object that defines the specified table."
"definitions.GetTableResponse.type" = "object"
"definitions.GetTableVersionsList.items.$ref" = "#/definitions/TableVersion"
"definitions.GetTableVersionsList.type" = "array"
"definitions.GetTableVersionsRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetTableVersionsRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the tables reside. If none is supplied, the AWS account ID is used by default."
"definitions.GetTableVersionsRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetTableVersionsRequest.properties.DatabaseName.description" = "The database in the catalog in which the table resides."
"definitions.GetTableVersionsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetTableVersionsRequest.properties.MaxResults.description" = "The maximum number of table versions to return in one response."
"definitions.GetTableVersionsRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetTableVersionsRequest.properties.NextToken.description" = "A continuation token, if this is not the first call."
"definitions.GetTableVersionsRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.GetTableVersionsRequest.properties.TableName.description" = "The name of the table."
"definitions.GetTableVersionsRequest.required.length" = 2
"definitions.GetTableVersionsRequest.required[0]" = "DatabaseName"
"definitions.GetTableVersionsRequest.required[1]" = "TableName"
"definitions.GetTableVersionsRequest.type" = "object"
"definitions.GetTableVersionsResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetTableVersionsResponse.properties.NextToken.description" = "A continuation token, if the list of available versions does not include the last one."
"definitions.GetTableVersionsResponse.properties.TableVersions.$ref" = "#/definitions/GetTableVersionsList"
"definitions.GetTableVersionsResponse.properties.TableVersions.description" = "A list of strings identifying available versions of the specified table."
"definitions.GetTableVersionsResponse.type" = "object"
"definitions.GetTablesRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetTablesRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the tables reside. If none is supplied, the AWS account ID is used by default."
"definitions.GetTablesRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetTablesRequest.properties.DatabaseName.description" = "The database in the catalog whose tables to list."
"definitions.GetTablesRequest.properties.Expression.$ref" = "#/definitions/FilterString"
"definitions.GetTablesRequest.properties.Expression.description" = "A regular expression pattern. If present, only those tables whose names match the pattern are returned."
"definitions.GetTablesRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetTablesRequest.properties.MaxResults.description" = "The maximum number of tables to return in a single response."
"definitions.GetTablesRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetTablesRequest.properties.NextToken.description" = "A continuation token, included if this is a continuation call."
"definitions.GetTablesRequest.required.length" = 1
"definitions.GetTablesRequest.required[0]" = "DatabaseName"
"definitions.GetTablesRequest.type" = "object"
"definitions.GetTablesResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetTablesResponse.properties.NextToken.description" = "A continuation token, present if the current list segment is not the last."
"definitions.GetTablesResponse.properties.TableList.$ref" = "#/definitions/TableList"
"definitions.GetTablesResponse.properties.TableList.description" = "A list of the requested <code>Table</code> objects."
"definitions.GetTablesResponse.type" = "object"
"definitions.GetTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GetTriggerRequest.properties.Name.description" = "The name of the trigger to retrieve."
"definitions.GetTriggerRequest.required.length" = 1
"definitions.GetTriggerRequest.required[0]" = "Name"
"definitions.GetTriggerRequest.type" = "object"
"definitions.GetTriggerResponse.properties.Trigger.$ref" = "#/definitions/Trigger"
"definitions.GetTriggerResponse.properties.Trigger.description" = "The requested trigger definition."
"definitions.GetTriggerResponse.type" = "object"
"definitions.GetTriggersRequest.properties.DependentJobName.$ref" = "#/definitions/NameString"
"definitions.GetTriggersRequest.properties.DependentJobName.description" = "The name of the job for which to retrieve triggers."
"definitions.GetTriggersRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetTriggersRequest.properties.MaxResults.description" = "The maximum size of the response."
"definitions.GetTriggersRequest.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetTriggersRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetTriggersRequest.type" = "object"
"definitions.GetTriggersResponse.properties.NextToken.$ref" = "#/definitions/GenericString"
"definitions.GetTriggersResponse.properties.NextToken.description" = "A continuation token, if not all the requested triggers have yet been returned."
"definitions.GetTriggersResponse.properties.Triggers.$ref" = "#/definitions/TriggerList"
"definitions.GetTriggersResponse.properties.Triggers.description" = "A list of triggers for the specified job."
"definitions.GetTriggersResponse.type" = "object"
"definitions.GetUserDefinedFunctionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetUserDefinedFunctionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the function to be retrieved is located. If none is supplied, the AWS account ID is used by default."
"definitions.GetUserDefinedFunctionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetUserDefinedFunctionRequest.properties.DatabaseName.description" = "The name of the catalog database where the function is located."
"definitions.GetUserDefinedFunctionRequest.properties.FunctionName.$ref" = "#/definitions/NameString"
"definitions.GetUserDefinedFunctionRequest.properties.FunctionName.description" = "The name of the function."
"definitions.GetUserDefinedFunctionRequest.required.length" = 2
"definitions.GetUserDefinedFunctionRequest.required[0]" = "DatabaseName"
"definitions.GetUserDefinedFunctionRequest.required[1]" = "FunctionName"
"definitions.GetUserDefinedFunctionRequest.type" = "object"
"definitions.GetUserDefinedFunctionResponse.properties.UserDefinedFunction.$ref" = "#/definitions/UserDefinedFunction"
"definitions.GetUserDefinedFunctionResponse.properties.UserDefinedFunction.description" = "The requested function definition."
"definitions.GetUserDefinedFunctionResponse.type" = "object"
"definitions.GetUserDefinedFunctionsRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.GetUserDefinedFunctionsRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the functions to be retrieved are located. If none is supplied, the AWS account ID is used by default."
"definitions.GetUserDefinedFunctionsRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.GetUserDefinedFunctionsRequest.properties.DatabaseName.description" = "The name of the catalog database where the functions are located."
"definitions.GetUserDefinedFunctionsRequest.properties.MaxResults.$ref" = "#/definitions/PageSize"
"definitions.GetUserDefinedFunctionsRequest.properties.MaxResults.description" = "The maximum number of functions to return in one response."
"definitions.GetUserDefinedFunctionsRequest.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetUserDefinedFunctionsRequest.properties.NextToken.description" = "A continuation token, if this is a continuation call."
"definitions.GetUserDefinedFunctionsRequest.properties.Pattern.$ref" = "#/definitions/NameString"
"definitions.GetUserDefinedFunctionsRequest.properties.Pattern.description" = "An optional function-name pattern string that filters the function definitions returned."
"definitions.GetUserDefinedFunctionsRequest.required.length" = 2
"definitions.GetUserDefinedFunctionsRequest.required[0]" = "DatabaseName"
"definitions.GetUserDefinedFunctionsRequest.required[1]" = "Pattern"
"definitions.GetUserDefinedFunctionsRequest.type" = "object"
"definitions.GetUserDefinedFunctionsResponse.properties.NextToken.$ref" = "#/definitions/Token"
"definitions.GetUserDefinedFunctionsResponse.properties.NextToken.description" = "A continuation token, if the list of functions returned does not include the last requested function."
"definitions.GetUserDefinedFunctionsResponse.properties.UserDefinedFunctions.$ref" = "#/definitions/UserDefinedFunctionList"
"definitions.GetUserDefinedFunctionsResponse.properties.UserDefinedFunctions.description" = "A list of requested function definitions."
"definitions.GetUserDefinedFunctionsResponse.type" = "object"
"definitions.GrokClassifier.description" = "A classifier that uses <code>grok</code>."
"definitions.GrokClassifier.properties.Classification.$ref" = "#/definitions/Classification"
"definitions.GrokClassifier.properties.Classification.description" = "The data form that the classifier matches, such as Twitter, JSON, Omniture Logs, and so forth."
"definitions.GrokClassifier.properties.CreationTime.$ref" = "#/definitions/Timestamp"
"definitions.GrokClassifier.properties.CreationTime.description" = "The time this classifier was registered."
"definitions.GrokClassifier.properties.CustomPatterns.$ref" = "#/definitions/CustomPatterns"
"definitions.GrokClassifier.properties.CustomPatterns.description" = "Custom grok patterns used by this classifier."
"definitions.GrokClassifier.properties.GrokPattern.$ref" = "#/definitions/GrokPattern"
"definitions.GrokClassifier.properties.GrokPattern.description" = "The grok pattern used by this classifier."
"definitions.GrokClassifier.properties.LastUpdated.$ref" = "#/definitions/Timestamp"
"definitions.GrokClassifier.properties.LastUpdated.description" = "The time this classifier was last updated."
"definitions.GrokClassifier.properties.Name.$ref" = "#/definitions/NameString"
"definitions.GrokClassifier.properties.Name.description" = "The name of the classifier."
"definitions.GrokClassifier.properties.Version.$ref" = "#/definitions/VersionId"
"definitions.GrokClassifier.properties.Version.description" = "The version of this classifier."
"definitions.GrokClassifier.required.length" = 3
"definitions.GrokClassifier.required[0]" = "Name"
"definitions.GrokClassifier.required[1]" = "Classification"
"definitions.GrokClassifier.required[2]" = "GrokPattern"
"definitions.GrokClassifier.type" = "object"
"definitions.GrokPattern.maxLength" = 2048.0
"definitions.GrokPattern.minLength" = 1.0
"definitions.GrokPattern.type" = "string"
"definitions.GrokPattern.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\t]*"
"definitions.IdString.maxLength" = 255.0
"definitions.IdString.minLength" = 1.0
"definitions.IdString.type" = "string"
"definitions.IdString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.IdempotentParameterMismatchException.description" = "The same unique identifier was associated with two different records."
"definitions.IdempotentParameterMismatchException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.IdempotentParameterMismatchException.properties.Message.description" = "A message describing the problem."
"definitions.IdempotentParameterMismatchException.type" = "object"
"definitions.ImportCatalogToGlueRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.ImportCatalogToGlueRequest.properties.CatalogId.description" = "The ID of the catalog to import. Currently, this should be the AWS account ID."
"definitions.ImportCatalogToGlueRequest.type" = "object"
"definitions.ImportCatalogToGlueResponse.type" = "object"
"definitions.Integer.type" = "integer"
"definitions.IntegerFlag.maximum" = 1.0
"definitions.IntegerFlag.minimum" = 0.0
"definitions.IntegerFlag.type" = "integer"
"definitions.IntegerValue.type" = "integer"
"definitions.InternalServiceException.description" = "An internal service error occurred."
"definitions.InternalServiceException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.InternalServiceException.properties.Message.description" = "A message describing the problem."
"definitions.InternalServiceException.type" = "object"
"definitions.InvalidInputException.description" = "The input provided was not valid."
"definitions.InvalidInputException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.InvalidInputException.properties.Message.description" = "A message describing the problem."
"definitions.InvalidInputException.type" = "object"
"definitions.JdbcTarget.description" = "Specifies a JDBC target for a crawl."
"definitions.JdbcTarget.properties.ConnectionName.$ref" = "#/definitions/ConnectionName"
"definitions.JdbcTarget.properties.ConnectionName.description" = "The name of the connection to use for the JDBC target."
"definitions.JdbcTarget.properties.Exclusions.$ref" = "#/definitions/PathList"
"definitions.JdbcTarget.properties.Exclusions.description" = "A list of items to exclude from the crawl."
"definitions.JdbcTarget.properties.Path.$ref" = "#/definitions/Path"
"definitions.JdbcTarget.properties.Path.description" = "The path of the JDBC target."
"definitions.JdbcTarget.type" = "object"
"definitions.JdbcTargetList.items.$ref" = "#/definitions/JdbcTarget"
"definitions.JdbcTargetList.type" = "array"
"definitions.Job.description" = "Specifies a job in the Data Catalog."
"definitions.Job.properties.AllocatedCapacity.$ref" = "#/definitions/IntegerValue"
"definitions.Job.properties.AllocatedCapacity.description" = "The number of capacity units allocated to this job."
"definitions.Job.properties.Command.$ref" = "#/definitions/JobCommand"
"definitions.Job.properties.Command.description" = "The JobCommand that executes this job."
"definitions.Job.properties.Connections.$ref" = "#/definitions/ConnectionsList"
"definitions.Job.properties.Connections.description" = "The connections used for this job."
"definitions.Job.properties.CreatedOn.$ref" = "#/definitions/TimestampValue"
"definitions.Job.properties.CreatedOn.description" = "The time and date that this job specification was created."
"definitions.Job.properties.DefaultArguments.$ref" = "#/definitions/GenericMap"
"definitions.Job.properties.DefaultArguments.description" = "The default parameters for this job."
"definitions.Job.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Job.properties.Description.description" = "Description of this job."
"definitions.Job.properties.ExecutionProperty.$ref" = "#/definitions/ExecutionProperty"
"definitions.Job.properties.ExecutionProperty.description" = "An ExecutionProperty specifying the maximum number of concurrent runs allowed for this job."
"definitions.Job.properties.LastModifiedOn.$ref" = "#/definitions/TimestampValue"
"definitions.Job.properties.LastModifiedOn.description" = "The last point in time when this job specification was modified."
"definitions.Job.properties.LogUri.$ref" = "#/definitions/UriString"
"definitions.Job.properties.LogUri.description" = "Location of the logs for this job."
"definitions.Job.properties.MaxRetries.$ref" = "#/definitions/MaxRetries"
"definitions.Job.properties.MaxRetries.description" = "The maximum number of times to retry this job if it fails."
"definitions.Job.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Job.properties.Name.description" = "The name you assign to this job."
"definitions.Job.properties.Role.$ref" = "#/definitions/RoleString"
"definitions.Job.properties.Role.description" = "The role associated with this job."
"definitions.Job.type" = "object"
"definitions.JobBookmarkEntry.description" = "Defines a point which a job can resume processing."
"definitions.JobBookmarkEntry.properties.Attempt.$ref" = "#/definitions/IntegerValue"
"definitions.JobBookmarkEntry.properties.Attempt.description" = "The attempt ID number."
"definitions.JobBookmarkEntry.properties.JobBookmark.$ref" = "#/definitions/JsonValue"
"definitions.JobBookmarkEntry.properties.JobBookmark.description" = "The bookmark itself."
"definitions.JobBookmarkEntry.properties.JobName.$ref" = "#/definitions/JobName"
"definitions.JobBookmarkEntry.properties.JobName.description" = "Name of the job in question."
"definitions.JobBookmarkEntry.properties.Run.$ref" = "#/definitions/IntegerValue"
"definitions.JobBookmarkEntry.properties.Run.description" = "The run ID number."
"definitions.JobBookmarkEntry.properties.Version.$ref" = "#/definitions/IntegerValue"
"definitions.JobBookmarkEntry.properties.Version.description" = "Version of the job."
"definitions.JobBookmarkEntry.type" = "object"
"definitions.JobCommand.description" = "Specifies code that executes a job."
"definitions.JobCommand.properties.Name.$ref" = "#/definitions/GenericString"
"definitions.JobCommand.properties.Name.description" = "The name of this job command."
"definitions.JobCommand.properties.ScriptLocation.$ref" = "#/definitions/ScriptLocationString"
"definitions.JobCommand.properties.ScriptLocation.description" = "Specifies the location of a script that executes a job."
"definitions.JobCommand.type" = "object"
"definitions.JobList.items.$ref" = "#/definitions/Job"
"definitions.JobList.type" = "array"
"definitions.JobName.type" = "string"
"definitions.JobRun.description" = "Contains information about a job run."
"definitions.JobRun.properties.AllocatedCapacity.$ref" = "#/definitions/IntegerValue"
"definitions.JobRun.properties.AllocatedCapacity.description" = "The amount of infrastructure capacity allocated to this job run."
"definitions.JobRun.properties.Arguments.$ref" = "#/definitions/GenericMap"
"definitions.JobRun.properties.Arguments.description" = "The job arguments associated with this run."
"definitions.JobRun.properties.Attempt.$ref" = "#/definitions/AttemptCount"
"definitions.JobRun.properties.Attempt.description" = "The number or the attempt to run this job."
"definitions.JobRun.properties.CompletedOn.$ref" = "#/definitions/TimestampValue"
"definitions.JobRun.properties.CompletedOn.description" = "The date and time this job run completed."
"definitions.JobRun.properties.ErrorMessage.$ref" = "#/definitions/ErrorString"
"definitions.JobRun.properties.ErrorMessage.description" = "An error message associated with this job run."
"definitions.JobRun.properties.Id.$ref" = "#/definitions/IdString"
"definitions.JobRun.properties.Id.description" = "The ID of this job run."
"definitions.JobRun.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.JobRun.properties.JobName.description" = "The name of the job being run."
"definitions.JobRun.properties.JobRunState.$ref" = "#/definitions/JobRunState"
"definitions.JobRun.properties.JobRunState.description" = "The current state of the job run."
"definitions.JobRun.properties.LastModifiedOn.$ref" = "#/definitions/TimestampValue"
"definitions.JobRun.properties.LastModifiedOn.description" = "The last time this job run was modified."
"definitions.JobRun.properties.PredecessorRuns.$ref" = "#/definitions/PredecessorList"
"definitions.JobRun.properties.PredecessorRuns.description" = "A list of predecessors to this job run."
"definitions.JobRun.properties.PreviousRunId.$ref" = "#/definitions/IdString"
"definitions.JobRun.properties.PreviousRunId.description" = "The ID of the previous run of this job."
"definitions.JobRun.properties.StartedOn.$ref" = "#/definitions/TimestampValue"
"definitions.JobRun.properties.StartedOn.description" = "The date and time at which this job run was started."
"definitions.JobRun.properties.TriggerName.$ref" = "#/definitions/NameString"
"definitions.JobRun.properties.TriggerName.description" = "The name of the trigger for this job run."
"definitions.JobRun.type" = "object"
"definitions.JobRunList.items.$ref" = "#/definitions/JobRun"
"definitions.JobRunList.type" = "array"
"definitions.JobRunState.enum.length" = 6
"definitions.JobRunState.enum[0]" = "STARTING"
"definitions.JobRunState.enum[1]" = "RUNNING"
"definitions.JobRunState.enum[2]" = "STOPPING"
"definitions.JobRunState.enum[3]" = "STOPPED"
"definitions.JobRunState.enum[4]" = "SUCCEEDED"
"definitions.JobRunState.enum[5]" = "FAILED"
"definitions.JobRunState.type" = "string"
"definitions.JobUpdate.description" = "Specifies information used to update an existing job."
"definitions.JobUpdate.properties.AllocatedCapacity.$ref" = "#/definitions/IntegerValue"
"definitions.JobUpdate.properties.AllocatedCapacity.description" = "The number of capacity units allocated to this job."
"definitions.JobUpdate.properties.Command.$ref" = "#/definitions/JobCommand"
"definitions.JobUpdate.properties.Command.description" = "The JobCommand that executes this job."
"definitions.JobUpdate.properties.Connections.$ref" = "#/definitions/ConnectionsList"
"definitions.JobUpdate.properties.Connections.description" = "The connections used for this job."
"definitions.JobUpdate.properties.DefaultArguments.$ref" = "#/definitions/GenericMap"
"definitions.JobUpdate.properties.DefaultArguments.description" = "The default parameters for this job."
"definitions.JobUpdate.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.JobUpdate.properties.Description.description" = "Description of the job."
"definitions.JobUpdate.properties.ExecutionProperty.$ref" = "#/definitions/ExecutionProperty"
"definitions.JobUpdate.properties.ExecutionProperty.description" = "An ExecutionProperty specifying the maximum number of concurrent runs allowed for this job."
"definitions.JobUpdate.properties.LogUri.$ref" = "#/definitions/UriString"
"definitions.JobUpdate.properties.LogUri.description" = "Location of the logs for this job."
"definitions.JobUpdate.properties.MaxRetries.$ref" = "#/definitions/MaxRetries"
"definitions.JobUpdate.properties.MaxRetries.description" = "The maximum number of times to retry this job if it fails."
"definitions.JobUpdate.properties.Role.$ref" = "#/definitions/RoleString"
"definitions.JobUpdate.properties.Role.description" = "The role associated with this job."
"definitions.JobUpdate.type" = "object"
"definitions.JsonValue.type" = "string"
"definitions.KeyString.maxLength" = 255.0
"definitions.KeyString.minLength" = 1.0
"definitions.KeyString.type" = "string"
"definitions.KeyString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.LastCrawlInfo.description" = "Status and error information about the most recent crawl."
"definitions.LastCrawlInfo.properties.ErrorMessage.$ref" = "#/definitions/DescriptionString"
"definitions.LastCrawlInfo.properties.ErrorMessage.description" = "Error information about the last crawl, if an error occurred."
"definitions.LastCrawlInfo.properties.LogGroup.$ref" = "#/definitions/LogGroup"
"definitions.LastCrawlInfo.properties.LogGroup.description" = "The log group for the last crawl."
"definitions.LastCrawlInfo.properties.LogStream.$ref" = "#/definitions/LogStream"
"definitions.LastCrawlInfo.properties.LogStream.description" = "The log stream for the last crawl."
"definitions.LastCrawlInfo.properties.MessagePrefix.$ref" = "#/definitions/MessagePrefix"
"definitions.LastCrawlInfo.properties.MessagePrefix.description" = "The prefix for a message about this crawl."
"definitions.LastCrawlInfo.properties.StartTime.$ref" = "#/definitions/Timestamp"
"definitions.LastCrawlInfo.properties.StartTime.description" = "The time at which the crawl started."
"definitions.LastCrawlInfo.properties.Status.$ref" = "#/definitions/LastCrawlStatus"
"definitions.LastCrawlInfo.properties.Status.description" = "Status of the last crawl."
"definitions.LastCrawlInfo.type" = "object"
"definitions.LastCrawlStatus.enum.length" = 3
"definitions.LastCrawlStatus.enum[0]" = "SUCCEEDED"
"definitions.LastCrawlStatus.enum[1]" = "CANCELLED"
"definitions.LastCrawlStatus.enum[2]" = "FAILED"
"definitions.LastCrawlStatus.type" = "string"
"definitions.Location.description" = "The location of resources."
"definitions.Location.properties.Jdbc.$ref" = "#/definitions/CodeGenNodeArgs"
"definitions.Location.properties.Jdbc.description" = "A JDBC location."
"definitions.Location.properties.S3.$ref" = "#/definitions/CodeGenNodeArgs"
"definitions.Location.properties.S3.description" = "An AWS S3 location."
"definitions.Location.type" = "object"
"definitions.LocationMap.items.properties.key.$ref" = "#/definitions/ColumnValuesString"
"definitions.LocationMap.items.properties.value.$ref" = "#/definitions/ColumnValuesString"
"definitions.LocationMap.items.type" = "object"
"definitions.LocationMap.type" = "array"
"definitions.LocationString.maxLength" = 2056.0
"definitions.LocationString.type" = "string"
"definitions.LocationString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.LogGroup.maxLength" = 512.0
"definitions.LogGroup.minLength" = 1.0
"definitions.LogGroup.pattern" = "[\\.\\-_/#A-Za-z0-9]+"
"definitions.LogGroup.type" = "string"
"definitions.LogStream.maxLength" = 512.0
"definitions.LogStream.minLength" = 1.0
"definitions.LogStream.pattern" = "[^:*]*"
"definitions.LogStream.type" = "string"
"definitions.Logical.enum.length" = 1
"definitions.Logical.enum[0]" = "AND"
"definitions.Logical.type" = "string"
"definitions.LogicalOperator.enum.length" = 1
"definitions.LogicalOperator.enum[0]" = "EQUALS"
"definitions.LogicalOperator.type" = "string"
"definitions.MappingEntry.description" = "Defines a mapping."
"definitions.MappingEntry.properties.SourcePath.$ref" = "#/definitions/SchemaPathString"
"definitions.MappingEntry.properties.SourcePath.description" = "The source path."
"definitions.MappingEntry.properties.SourceTable.$ref" = "#/definitions/TableName"
"definitions.MappingEntry.properties.SourceTable.description" = "The name of the source table."
"definitions.MappingEntry.properties.SourceType.$ref" = "#/definitions/FieldType"
"definitions.MappingEntry.properties.SourceType.description" = "The source type."
"definitions.MappingEntry.properties.TargetPath.$ref" = "#/definitions/SchemaPathString"
"definitions.MappingEntry.properties.TargetPath.description" = "The target path."
"definitions.MappingEntry.properties.TargetTable.$ref" = "#/definitions/TableName"
"definitions.MappingEntry.properties.TargetTable.description" = "The target table."
"definitions.MappingEntry.properties.TargetType.$ref" = "#/definitions/FieldType"
"definitions.MappingEntry.properties.TargetType.description" = "The target type."
"definitions.MappingEntry.type" = "object"
"definitions.MappingList.items.$ref" = "#/definitions/MappingEntry"
"definitions.MappingList.type" = "array"
"definitions.MatchCriteria.items.$ref" = "#/definitions/NameString"
"definitions.MatchCriteria.maxItems" = 10.0
"definitions.MatchCriteria.minItems" = 0.0
"definitions.MatchCriteria.type" = "array"
"definitions.MaxConcurrentRuns.type" = "integer"
"definitions.MaxRetries.type" = "integer"
"definitions.MessagePrefix.maxLength" = 255.0
"definitions.MessagePrefix.minLength" = 1.0
"definitions.MessagePrefix.type" = "string"
"definitions.MessagePrefix.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.MessageString.type" = "string"
"definitions.MillisecondsCount.type" = "integer"
"definitions.NameString.maxLength" = 255.0
"definitions.NameString.minLength" = 1.0
"definitions.NameString.type" = "string"
"definitions.NameString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.NameStringList.items.$ref" = "#/definitions/NameString"
"definitions.NameStringList.type" = "array"
"definitions.NoScheduleException.description" = "There is no applicable schedule."
"definitions.NoScheduleException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.NoScheduleException.properties.Message.description" = "A message describing the problem."
"definitions.NoScheduleException.type" = "object"
"definitions.NonNegativeDouble.format" = "double"
"definitions.NonNegativeDouble.minimum" = 0.0
"definitions.NonNegativeDouble.type" = "number"
"definitions.NonNegativeInteger.minimum" = 0.0
"definitions.NonNegativeInteger.type" = "integer"
"definitions.OperationTimeoutException.description" = "The operation timed out."
"definitions.OperationTimeoutException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.OperationTimeoutException.properties.Message.description" = "A message describing the problem."
"definitions.OperationTimeoutException.type" = "object"
"definitions.Order.description" = "Specifies the sort order of a sorted column."
"definitions.Order.properties.Column.$ref" = "#/definitions/NameString"
"definitions.Order.properties.Column.description" = "The name of the column."
"definitions.Order.properties.SortOrder.$ref" = "#/definitions/IntegerFlag"
"definitions.Order.properties.SortOrder.description" = "Indicates that the column is sorted in ascending order (<code>== 1</code>), or in descending order (<code>==0</code>)."
"definitions.Order.required.length" = 2
"definitions.Order.required[0]" = "Column"
"definitions.Order.required[1]" = "SortOrder"
"definitions.Order.type" = "object"
"definitions.OrderList.items.$ref" = "#/definitions/Order"
"definitions.OrderList.type" = "array"
"definitions.PageSize.maximum" = 1000.0
"definitions.PageSize.minimum" = 1.0
"definitions.PageSize.type" = "integer"
"definitions.ParametersMap.items.properties.key.$ref" = "#/definitions/KeyString"
"definitions.ParametersMap.items.properties.value.$ref" = "#/definitions/ParametersMapValue"
"definitions.ParametersMap.items.type" = "object"
"definitions.ParametersMap.type" = "array"
"definitions.ParametersMapValue.maxLength" = 51200.0
"definitions.ParametersMapValue.type" = "string"
"definitions.Partition.description" = "Represents a slice of table data."
"definitions.Partition.properties.CreationTime.$ref" = "#/definitions/Timestamp"
"definitions.Partition.properties.CreationTime.description" = "The time at which the partition was created."
"definitions.Partition.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.Partition.properties.DatabaseName.description" = "The name of the catalog database where the table in question is located."
"definitions.Partition.properties.LastAccessTime.$ref" = "#/definitions/Timestamp"
"definitions.Partition.properties.LastAccessTime.description" = "The last time at which the partition was accessed."
"definitions.Partition.properties.LastAnalyzedTime.$ref" = "#/definitions/Timestamp"
"definitions.Partition.properties.LastAnalyzedTime.description" = "The last time at which column statistics were computed for this partition."
"definitions.Partition.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.Partition.properties.Parameters.description" = "Partition parameters, in the form of a list of key-value pairs."
"definitions.Partition.properties.StorageDescriptor.$ref" = "#/definitions/StorageDescriptor"
"definitions.Partition.properties.StorageDescriptor.description" = "Provides information about the physical location where the partition is stored."
"definitions.Partition.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.Partition.properties.TableName.description" = "The name of the table in question."
"definitions.Partition.properties.Values.$ref" = "#/definitions/ValueStringList"
"definitions.Partition.properties.Values.description" = "The values of the partition."
"definitions.Partition.type" = "object"
"definitions.PartitionError.description" = "Contains information about a partition error."
"definitions.PartitionError.properties.ErrorDetail.$ref" = "#/definitions/ErrorDetail"
"definitions.PartitionError.properties.ErrorDetail.description" = "Details about the partition error."
"definitions.PartitionError.properties.PartitionValues.$ref" = "#/definitions/ValueStringList"
"definitions.PartitionError.properties.PartitionValues.description" = "The values that define the partition."
"definitions.PartitionError.type" = "object"
"definitions.PartitionErrors.items.$ref" = "#/definitions/PartitionError"
"definitions.PartitionErrors.type" = "array"
"definitions.PartitionInput.description" = "The structure used to create and update a partion."
"definitions.PartitionInput.properties.LastAccessTime.$ref" = "#/definitions/Timestamp"
"definitions.PartitionInput.properties.LastAccessTime.description" = "The last time at which the partition was accessed."
"definitions.PartitionInput.properties.LastAnalyzedTime.$ref" = "#/definitions/Timestamp"
"definitions.PartitionInput.properties.LastAnalyzedTime.description" = "The last time at which column statistics were computed for this partition."
"definitions.PartitionInput.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.PartitionInput.properties.Parameters.description" = "Partition parameters, in the form of a list of key-value pairs."
"definitions.PartitionInput.properties.StorageDescriptor.$ref" = "#/definitions/StorageDescriptor"
"definitions.PartitionInput.properties.StorageDescriptor.description" = "Provides information about the physical location where the partition is stored."
"definitions.PartitionInput.properties.Values.$ref" = "#/definitions/ValueStringList"
"definitions.PartitionInput.properties.Values.description" = "The values of the partition."
"definitions.PartitionInput.type" = "object"
"definitions.PartitionInputList.items.$ref" = "#/definitions/PartitionInput"
"definitions.PartitionInputList.maxItems" = 100.0
"definitions.PartitionInputList.minItems" = 0.0
"definitions.PartitionInputList.type" = "array"
"definitions.PartitionList.items.$ref" = "#/definitions/Partition"
"definitions.PartitionList.type" = "array"
"definitions.PartitionValueList.properties.Values.$ref" = "#/definitions/ValueStringList"
"definitions.PartitionValueList.required.length" = 1
"definitions.PartitionValueList.required[0]" = "Values"
"definitions.PartitionValueList.type" = "object"
"definitions.Path.type" = "string"
"definitions.PathList.items.$ref" = "#/definitions/Path"
"definitions.PathList.type" = "array"
"definitions.PhysicalConnectionRequirements.description" = "Specifies the physical requirements for a connection."
"definitions.PhysicalConnectionRequirements.properties.AvailabilityZone.$ref" = "#/definitions/NameString"
"definitions.PhysicalConnectionRequirements.properties.AvailabilityZone.description" = "The connection's availability zone."
"definitions.PhysicalConnectionRequirements.properties.SecurityGroupIdList.$ref" = "#/definitions/SecurityGroupIdList"
"definitions.PhysicalConnectionRequirements.properties.SecurityGroupIdList.description" = "The security group ID list used by the connection."
"definitions.PhysicalConnectionRequirements.properties.SubnetId.$ref" = "#/definitions/NameString"
"definitions.PhysicalConnectionRequirements.properties.SubnetId.description" = "The subnet ID used by the connection."
"definitions.PhysicalConnectionRequirements.type" = "object"
"definitions.Predecessor.description" = "A job run that preceded this one."
"definitions.Predecessor.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.Predecessor.properties.JobName.description" = "The name of the predecessor job."
"definitions.Predecessor.properties.RunId.$ref" = "#/definitions/IdString"
"definitions.Predecessor.properties.RunId.description" = "The job-run ID of the precessor job run."
"definitions.Predecessor.type" = "object"
"definitions.PredecessorList.items.$ref" = "#/definitions/Predecessor"
"definitions.PredecessorList.type" = "array"
"definitions.Predicate.description" = "Defines the predicate of the trigger, which determines when it fires."
"definitions.Predicate.properties.Conditions.$ref" = "#/definitions/ConditionList"
"definitions.Predicate.properties.Conditions.description" = "A list of the conditions that determine when the trigger will fire."
"definitions.Predicate.properties.Logical.$ref" = "#/definitions/Logical"
"definitions.Predicate.properties.Logical.description" = "Currently \"OR\" is not supported."
"definitions.Predicate.type" = "object"
"definitions.PredicateString.maxLength" = 2048.0
"definitions.PredicateString.minLength" = 0.0
"definitions.PredicateString.type" = "string"
"definitions.PredicateString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.PrincipalType.enum.length" = 3
"definitions.PrincipalType.enum[0]" = "USER"
"definitions.PrincipalType.enum[1]" = "ROLE"
"definitions.PrincipalType.enum[2]" = "GROUP"
"definitions.PrincipalType.type" = "string"
"definitions.PythonScript.type" = "string"
"definitions.ResetJobBookmarkRequest.properties.JobName.$ref" = "#/definitions/JobName"
"definitions.ResetJobBookmarkRequest.properties.JobName.description" = "The name of the job in question."
"definitions.ResetJobBookmarkRequest.required.length" = 1
"definitions.ResetJobBookmarkRequest.required[0]" = "JobName"
"definitions.ResetJobBookmarkRequest.type" = "object"
"definitions.ResetJobBookmarkResponse.properties.JobBookmarkEntry.$ref" = "#/definitions/JobBookmarkEntry"
"definitions.ResetJobBookmarkResponse.properties.JobBookmarkEntry.description" = "The reset bookmark entry."
"definitions.ResetJobBookmarkResponse.type" = "object"
"definitions.ResourceNumberLimitExceededException.description" = "A resource numerical limit was exceeded."
"definitions.ResourceNumberLimitExceededException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.ResourceNumberLimitExceededException.properties.Message.description" = "A message describing the problem."
"definitions.ResourceNumberLimitExceededException.type" = "object"
"definitions.ResourceType.enum.length" = 3
"definitions.ResourceType.enum[0]" = "JAR"
"definitions.ResourceType.enum[1]" = "FILE"
"definitions.ResourceType.enum[2]" = "ARCHIVE"
"definitions.ResourceType.type" = "string"
"definitions.ResourceUri.description" = "URIs for function resources."
"definitions.ResourceUri.properties.ResourceType.$ref" = "#/definitions/ResourceType"
"definitions.ResourceUri.properties.ResourceType.description" = "The type of the resource."
"definitions.ResourceUri.properties.Uri.$ref" = "#/definitions/URI"
"definitions.ResourceUri.properties.Uri.description" = "The URI for accessing the resource."
"definitions.ResourceUri.type" = "object"
"definitions.ResourceUriList.items.$ref" = "#/definitions/ResourceUri"
"definitions.ResourceUriList.maxItems" = 1000.0
"definitions.ResourceUriList.minItems" = 0.0
"definitions.ResourceUriList.type" = "array"
"definitions.RoleArn.pattern" = "arn:aws:iam::\\d{12}:role/.*"
"definitions.RoleArn.type" = "string"
"definitions.RoleString.type" = "string"
"definitions.S3Target.description" = "Specifies a crawler target in AWS S3."
"definitions.S3Target.properties.Exclusions.$ref" = "#/definitions/PathList"
"definitions.S3Target.properties.Exclusions.description" = "A list of S3 objects to exclude from the crawl."
"definitions.S3Target.properties.Path.$ref" = "#/definitions/Path"
"definitions.S3Target.properties.Path.description" = "The path to the S3 target."
"definitions.S3Target.type" = "object"
"definitions.S3TargetList.items.$ref" = "#/definitions/S3Target"
"definitions.S3TargetList.type" = "array"
"definitions.Schedule.description" = "A scheduling object using a <code>cron</code> statement to schedule an event."
"definitions.Schedule.properties.ScheduleExpression.$ref" = "#/definitions/CronExpression"
"definitions.Schedule.properties.ScheduleExpression.description" = "A <code>cron</code> expression that can be used as a Cloudwatch event to schedule something (see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">CloudWatch Schedule Expression Syntax</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>."
"definitions.Schedule.properties.State.$ref" = "#/definitions/ScheduleState"
"definitions.Schedule.properties.State.description" = "The state of the schedule."
"definitions.Schedule.type" = "object"
"definitions.ScheduleState.enum.length" = 3
"definitions.ScheduleState.enum[0]" = "SCHEDULED"
"definitions.ScheduleState.enum[1]" = "NOT_SCHEDULED"
"definitions.ScheduleState.enum[2]" = "TRANSITIONING"
"definitions.ScheduleState.type" = "string"
"definitions.SchedulerNotRunningException.description" = "The specified scheduler is not running."
"definitions.SchedulerNotRunningException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.SchedulerNotRunningException.properties.Message.description" = "A message describing the problem."
"definitions.SchedulerNotRunningException.type" = "object"
"definitions.SchedulerRunningException.description" = "The specified scheduler is already running."
"definitions.SchedulerRunningException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.SchedulerRunningException.properties.Message.description" = "A message describing the problem."
"definitions.SchedulerRunningException.type" = "object"
"definitions.SchedulerTransitioningException.description" = "The specified scheduler is transitioning."
"definitions.SchedulerTransitioningException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.SchedulerTransitioningException.properties.Message.description" = "A message describing the problem."
"definitions.SchedulerTransitioningException.type" = "object"
"definitions.SchemaChangePolicy.description" = "Crawler policy for update and deletion behavior."
"definitions.SchemaChangePolicy.properties.DeleteBehavior.$ref" = "#/definitions/DeleteBehavior"
"definitions.SchemaChangePolicy.properties.DeleteBehavior.description" = "The deletion behavior."
"definitions.SchemaChangePolicy.properties.UpdateBehavior.$ref" = "#/definitions/UpdateBehavior"
"definitions.SchemaChangePolicy.properties.UpdateBehavior.description" = "The update behavior."
"definitions.SchemaChangePolicy.type" = "object"
"definitions.SchemaPathString.type" = "string"
"definitions.ScriptLocationString.type" = "string"
"definitions.SecurityGroupIdList.items.$ref" = "#/definitions/NameString"
"definitions.SecurityGroupIdList.maxItems" = 50.0
"definitions.SecurityGroupIdList.minItems" = 0.0
"definitions.SecurityGroupIdList.type" = "array"
"definitions.Segment.description" = "Defines a non-overlapping region of a table's partitions, allowing multiple requests to be executed in parallel."
"definitions.Segment.properties.SegmentNumber.$ref" = "#/definitions/NonNegativeInteger"
"definitions.Segment.properties.SegmentNumber.description" = "The zero-based index number of the this segment. For example, if the total number of segments is 4, SegmentNumber values will range from zero through three."
"definitions.Segment.properties.TotalSegments.$ref" = "#/definitions/TotalSegmentsInteger"
"definitions.Segment.properties.TotalSegments.description" = "The total numer of segments."
"definitions.Segment.required.length" = 2
"definitions.Segment.required[0]" = "SegmentNumber"
"definitions.Segment.required[1]" = "TotalSegments"
"definitions.Segment.type" = "object"
"definitions.SerDeInfo.description" = "Information about a serialization/deserialization program (SerDe) which serves as an extractor and loader."
"definitions.SerDeInfo.properties.Name.$ref" = "#/definitions/NameString"
"definitions.SerDeInfo.properties.Name.description" = "Name of the SerDe."
"definitions.SerDeInfo.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.SerDeInfo.properties.Parameters.description" = "A list of initialization parameters for the SerDe, in key-value form."
"definitions.SerDeInfo.properties.SerializationLibrary.$ref" = "#/definitions/NameString"
"definitions.SerDeInfo.properties.SerializationLibrary.description" = "Usually the class that implements the SerDe. An example is: <code>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</code>."
"definitions.SerDeInfo.type" = "object"
"definitions.SkewedInfo.description" = "Specifies skewed values in a table. Skewed are ones that occur with very high frequency."
"definitions.SkewedInfo.properties.SkewedColumnNames.$ref" = "#/definitions/NameStringList"
"definitions.SkewedInfo.properties.SkewedColumnNames.description" = "A list of names of columns that contain skewed values."
"definitions.SkewedInfo.properties.SkewedColumnValueLocationMaps.$ref" = "#/definitions/LocationMap"
"definitions.SkewedInfo.properties.SkewedColumnValueLocationMaps.description" = "A mapping of skewed values to the columns that contain them."
"definitions.SkewedInfo.properties.SkewedColumnValues.$ref" = "#/definitions/ColumnValueStringList"
"definitions.SkewedInfo.properties.SkewedColumnValues.description" = "A list of values that appear so frequently as to be considered skewed."
"definitions.SkewedInfo.type" = "object"
"definitions.StartCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StartCrawlerRequest.properties.Name.description" = "Name of the <code>Crawler</code> to start."
"definitions.StartCrawlerRequest.required.length" = 1
"definitions.StartCrawlerRequest.required[0]" = "Name"
"definitions.StartCrawlerRequest.type" = "object"
"definitions.StartCrawlerResponse.type" = "object"
"definitions.StartCrawlerScheduleRequest.properties.CrawlerName.$ref" = "#/definitions/NameString"
"definitions.StartCrawlerScheduleRequest.properties.CrawlerName.description" = "Name of the crawler to schedule."
"definitions.StartCrawlerScheduleRequest.required.length" = 1
"definitions.StartCrawlerScheduleRequest.required[0]" = "CrawlerName"
"definitions.StartCrawlerScheduleRequest.type" = "object"
"definitions.StartCrawlerScheduleResponse.type" = "object"
"definitions.StartJobRunRequest.properties.AllocatedCapacity.$ref" = "#/definitions/IntegerValue"
"definitions.StartJobRunRequest.properties.AllocatedCapacity.description" = "The infrastructure capacity to allocate to this job."
"definitions.StartJobRunRequest.properties.Arguments.$ref" = "#/definitions/GenericMap"
"definitions.StartJobRunRequest.properties.Arguments.description" = "Specific arguments for this job run."
"definitions.StartJobRunRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.StartJobRunRequest.properties.JobName.description" = "The name of the job to start."
"definitions.StartJobRunRequest.properties.JobRunId.$ref" = "#/definitions/IdString"
"definitions.StartJobRunRequest.properties.JobRunId.description" = "The ID of the job run to start."
"definitions.StartJobRunRequest.required.length" = 1
"definitions.StartJobRunRequest.required[0]" = "JobName"
"definitions.StartJobRunRequest.type" = "object"
"definitions.StartJobRunResponse.properties.JobRunId.$ref" = "#/definitions/IdString"
"definitions.StartJobRunResponse.properties.JobRunId.description" = "The ID assigned to this job run."
"definitions.StartJobRunResponse.type" = "object"
"definitions.StartTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StartTriggerRequest.properties.Name.description" = "The name of the trigger to start."
"definitions.StartTriggerRequest.required.length" = 1
"definitions.StartTriggerRequest.required[0]" = "Name"
"definitions.StartTriggerRequest.type" = "object"
"definitions.StartTriggerResponse.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StartTriggerResponse.properties.Name.description" = "The name of the trigger that was started."
"definitions.StartTriggerResponse.type" = "object"
"definitions.StopCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StopCrawlerRequest.properties.Name.description" = "Name of the <code>Crawler</code> to stop."
"definitions.StopCrawlerRequest.required.length" = 1
"definitions.StopCrawlerRequest.required[0]" = "Name"
"definitions.StopCrawlerRequest.type" = "object"
"definitions.StopCrawlerResponse.type" = "object"
"definitions.StopCrawlerScheduleRequest.properties.CrawlerName.$ref" = "#/definitions/NameString"
"definitions.StopCrawlerScheduleRequest.properties.CrawlerName.description" = "Name of the crawler whose schedule state to set."
"definitions.StopCrawlerScheduleRequest.required.length" = 1
"definitions.StopCrawlerScheduleRequest.required[0]" = "CrawlerName"
"definitions.StopCrawlerScheduleRequest.type" = "object"
"definitions.StopCrawlerScheduleResponse.type" = "object"
"definitions.StopTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StopTriggerRequest.properties.Name.description" = "The name of the trigger to stop."
"definitions.StopTriggerRequest.required.length" = 1
"definitions.StopTriggerRequest.required[0]" = "Name"
"definitions.StopTriggerRequest.type" = "object"
"definitions.StopTriggerResponse.properties.Name.$ref" = "#/definitions/NameString"
"definitions.StopTriggerResponse.properties.Name.description" = "The name of the trigger that was stopped."
"definitions.StopTriggerResponse.type" = "object"
"definitions.StorageDescriptor.description" = "Describes the physical storage of table data."
"definitions.StorageDescriptor.properties.BucketColumns.$ref" = "#/definitions/NameStringList"
"definitions.StorageDescriptor.properties.BucketColumns.description" = "A list of reducer grouping columns, clustering columns, and bucketing columns in the table."
"definitions.StorageDescriptor.properties.Columns.$ref" = "#/definitions/ColumnList"
"definitions.StorageDescriptor.properties.Columns.description" = "A list of the <code>Columns</code> in the table."
"definitions.StorageDescriptor.properties.Compressed.$ref" = "#/definitions/Boolean"
"definitions.StorageDescriptor.properties.Compressed.description" = "True if the data in the table is compressed, or False if not."
"definitions.StorageDescriptor.properties.InputFormat.$ref" = "#/definitions/FormatString"
"definitions.StorageDescriptor.properties.InputFormat.description" = "The input format: <code>SequenceFileInputFormat</code> (binary), or <code>TextInputFormat</code>, or a custom format."
"definitions.StorageDescriptor.properties.Location.$ref" = "#/definitions/LocationString"
"definitions.StorageDescriptor.properties.Location.description" = "The physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name."
"definitions.StorageDescriptor.properties.NumberOfBuckets.$ref" = "#/definitions/Integer"
"definitions.StorageDescriptor.properties.NumberOfBuckets.description" = "Must be specified if the table contains any dimension columns."
"definitions.StorageDescriptor.properties.OutputFormat.$ref" = "#/definitions/FormatString"
"definitions.StorageDescriptor.properties.OutputFormat.description" = "The output format: <code>SequenceFileOutputFormat</code> (binary), or <code>IgnoreKeyTextOutputFormat</code>, or a custom format."
"definitions.StorageDescriptor.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.StorageDescriptor.properties.Parameters.description" = "User-supplied properties in key-value form."
"definitions.StorageDescriptor.properties.SerdeInfo.$ref" = "#/definitions/SerDeInfo"
"definitions.StorageDescriptor.properties.SerdeInfo.description" = "Serialization/deserialization (SerDe) information."
"definitions.StorageDescriptor.properties.SkewedInfo.$ref" = "#/definitions/SkewedInfo"
"definitions.StorageDescriptor.properties.SkewedInfo.description" = "Information about values that appear very frequently in a column (skewed values)."
"definitions.StorageDescriptor.properties.SortColumns.$ref" = "#/definitions/OrderList"
"definitions.StorageDescriptor.properties.SortColumns.description" = "A list specifying the sort order of each bucket in the table."
"definitions.StorageDescriptor.properties.StoredAsSubDirectories.$ref" = "#/definitions/Boolean"
"definitions.StorageDescriptor.properties.StoredAsSubDirectories.description" = "True if the table data is stored in subdirectories, or False if not."
"definitions.StorageDescriptor.type" = "object"
"definitions.StringList.items.$ref" = "#/definitions/GenericString"
"definitions.StringList.type" = "array"
"definitions.Table.description" = "Represents a collection of related data organized in columns and rows."
"definitions.Table.properties.CreateTime.$ref" = "#/definitions/Timestamp"
"definitions.Table.properties.CreateTime.description" = "Time when the table definition was created in the Data Catalog."
"definitions.Table.properties.CreatedBy.$ref" = "#/definitions/NameString"
"definitions.Table.properties.CreatedBy.description" = "Person or entity who created the table."
"definitions.Table.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.Table.properties.DatabaseName.description" = "Name of the metadata database where the table metadata resides."
"definitions.Table.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Table.properties.Description.description" = "Description of the table."
"definitions.Table.properties.LastAccessTime.$ref" = "#/definitions/Timestamp"
"definitions.Table.properties.LastAccessTime.description" = "Last time the table was accessed. This is usually taken from HDFS, and may not be reliable."
"definitions.Table.properties.LastAnalyzedTime.$ref" = "#/definitions/Timestamp"
"definitions.Table.properties.LastAnalyzedTime.description" = "Last time column statistics were computed for this table."
"definitions.Table.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Table.properties.Name.description" = "Name of the table."
"definitions.Table.properties.Owner.$ref" = "#/definitions/NameString"
"definitions.Table.properties.Owner.description" = "Owner of the table."
"definitions.Table.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.Table.properties.Parameters.description" = "Properties associated with this table, as a list of key-value pairs."
"definitions.Table.properties.PartitionKeys.$ref" = "#/definitions/ColumnList"
"definitions.Table.properties.PartitionKeys.description" = "A list of columns by which the table is partitioned. Only primitive types are supported as partition keys."
"definitions.Table.properties.Retention.$ref" = "#/definitions/NonNegativeInteger"
"definitions.Table.properties.Retention.description" = "Retention time for this table."
"definitions.Table.properties.StorageDescriptor.$ref" = "#/definitions/StorageDescriptor"
"definitions.Table.properties.StorageDescriptor.description" = "A storage descriptor containing information about the physical storage of this table."
"definitions.Table.properties.TableType.$ref" = "#/definitions/TableTypeString"
"definitions.Table.properties.TableType.description" = "The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.)."
"definitions.Table.properties.UpdateTime.$ref" = "#/definitions/Timestamp"
"definitions.Table.properties.UpdateTime.description" = "Last time the table was updated."
"definitions.Table.properties.ViewExpandedText.$ref" = "#/definitions/ViewTextString"
"definitions.Table.properties.ViewExpandedText.description" = "If the table is a view, the expanded text of the view; otherwise <code>null</code>."
"definitions.Table.properties.ViewOriginalText.$ref" = "#/definitions/ViewTextString"
"definitions.Table.properties.ViewOriginalText.description" = "If the table is a view, the original text of the view; otherwise <code>null</code>."
"definitions.Table.required.length" = 1
"definitions.Table.required[0]" = "Name"
"definitions.Table.type" = "object"
"definitions.TableError.description" = "An error record for table operations."
"definitions.TableError.properties.ErrorDetail.$ref" = "#/definitions/ErrorDetail"
"definitions.TableError.properties.ErrorDetail.description" = "Detail about the error."
"definitions.TableError.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.TableError.properties.TableName.description" = "Name of the table."
"definitions.TableError.type" = "object"
"definitions.TableErrors.items.$ref" = "#/definitions/TableError"
"definitions.TableErrors.type" = "array"
"definitions.TableInput.description" = "Structure used to create or update the table."
"definitions.TableInput.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.TableInput.properties.Description.description" = "Description of the table."
"definitions.TableInput.properties.LastAccessTime.$ref" = "#/definitions/Timestamp"
"definitions.TableInput.properties.LastAccessTime.description" = "Last time the table was accessed."
"definitions.TableInput.properties.LastAnalyzedTime.$ref" = "#/definitions/Timestamp"
"definitions.TableInput.properties.LastAnalyzedTime.description" = "Last time column statistics were computed for this table."
"definitions.TableInput.properties.Name.$ref" = "#/definitions/NameString"
"definitions.TableInput.properties.Name.description" = "Name of the table."
"definitions.TableInput.properties.Owner.$ref" = "#/definitions/NameString"
"definitions.TableInput.properties.Owner.description" = "Owner of the table."
"definitions.TableInput.properties.Parameters.$ref" = "#/definitions/ParametersMap"
"definitions.TableInput.properties.Parameters.description" = "Properties associated with this table, as a list of key-value pairs."
"definitions.TableInput.properties.PartitionKeys.$ref" = "#/definitions/ColumnList"
"definitions.TableInput.properties.PartitionKeys.description" = "A list of columns by which the table is partitioned. Only primitive types are supported as partition keys."
"definitions.TableInput.properties.Retention.$ref" = "#/definitions/NonNegativeInteger"
"definitions.TableInput.properties.Retention.description" = "Retention time for this table."
"definitions.TableInput.properties.StorageDescriptor.$ref" = "#/definitions/StorageDescriptor"
"definitions.TableInput.properties.StorageDescriptor.description" = "A storage descriptor containing information about the physical storage of this table."
"definitions.TableInput.properties.TableType.$ref" = "#/definitions/TableTypeString"
"definitions.TableInput.properties.TableType.description" = "The type of this table (<code>EXTERNAL_TABLE</code>, <code>VIRTUAL_VIEW</code>, etc.)."
"definitions.TableInput.properties.ViewExpandedText.$ref" = "#/definitions/ViewTextString"
"definitions.TableInput.properties.ViewExpandedText.description" = "If the table is a view, the expanded text of the view; otherwise <code>null</code>."
"definitions.TableInput.properties.ViewOriginalText.$ref" = "#/definitions/ViewTextString"
"definitions.TableInput.properties.ViewOriginalText.description" = "If the table is a view, the original text of the view; otherwise <code>null</code>."
"definitions.TableInput.required.length" = 1
"definitions.TableInput.required[0]" = "Name"
"definitions.TableInput.type" = "object"
"definitions.TableList.items.$ref" = "#/definitions/Table"
"definitions.TableList.type" = "array"
"definitions.TableName.type" = "string"
"definitions.TablePrefix.maxLength" = 128.0
"definitions.TablePrefix.minLength" = 0.0
"definitions.TablePrefix.type" = "string"
"definitions.TableTypeString.maxLength" = 255.0
"definitions.TableTypeString.type" = "string"
"definitions.TableVersion.properties.Table.$ref" = "#/definitions/Table"
"definitions.TableVersion.properties.VersionId.$ref" = "#/definitions/VersionString"
"definitions.TableVersion.type" = "object"
"definitions.Timestamp.format" = "date-time"
"definitions.Timestamp.type" = "string"
"definitions.TimestampValue.format" = "date-time"
"definitions.TimestampValue.type" = "string"
"definitions.Token.type" = "string"
"definitions.TotalSegmentsInteger.maximum" = 10.0
"definitions.TotalSegmentsInteger.minimum" = 1.0
"definitions.TotalSegmentsInteger.type" = "integer"
"definitions.Trigger.description" = "Information about a specific trigger."
"definitions.Trigger.properties.Actions.$ref" = "#/definitions/ActionList"
"definitions.Trigger.properties.Actions.description" = "The actions initiated by this trigger."
"definitions.Trigger.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.Trigger.properties.Description.description" = "A description of this trigger."
"definitions.Trigger.properties.Id.$ref" = "#/definitions/IdString"
"definitions.Trigger.properties.Id.description" = "The trigger ID."
"definitions.Trigger.properties.Name.$ref" = "#/definitions/NameString"
"definitions.Trigger.properties.Name.description" = "Name of the trigger."
"definitions.Trigger.properties.Predicate.$ref" = "#/definitions/Predicate"
"definitions.Trigger.properties.Predicate.description" = "The predicate of this trigger."
"definitions.Trigger.properties.Schedule.$ref" = "#/definitions/GenericString"
"definitions.Trigger.properties.Schedule.description" = "A cron schedule expression."
"definitions.Trigger.properties.State.$ref" = "#/definitions/TriggerState"
"definitions.Trigger.properties.State.description" = "The current state of the trigger."
"definitions.Trigger.properties.Type.$ref" = "#/definitions/TriggerType"
"definitions.Trigger.properties.Type.description" = "The type of trigger that this is."
"definitions.Trigger.type" = "object"
"definitions.TriggerList.items.$ref" = "#/definitions/Trigger"
"definitions.TriggerList.type" = "array"
"definitions.TriggerState.enum.length" = 8
"definitions.TriggerState.enum[0]" = "CREATING"
"definitions.TriggerState.enum[1]" = "CREATED"
"definitions.TriggerState.enum[2]" = "ACTIVATING"
"definitions.TriggerState.enum[3]" = "ACTIVATED"
"definitions.TriggerState.enum[4]" = "DEACTIVATING"
"definitions.TriggerState.enum[5]" = "DEACTIVATED"
"definitions.TriggerState.enum[6]" = "DELETING"
"definitions.TriggerState.enum[7]" = "UPDATING"
"definitions.TriggerState.type" = "string"
"definitions.TriggerType.enum.length" = 3
"definitions.TriggerType.enum[0]" = "SCHEDULED"
"definitions.TriggerType.enum[1]" = "CONDITIONAL"
"definitions.TriggerType.enum[2]" = "ON_DEMAND"
"definitions.TriggerType.type" = "string"
"definitions.TriggerUpdate.description" = "A structure used to provide information used to updata a trigger."
"definitions.TriggerUpdate.properties.Actions.$ref" = "#/definitions/ActionList"
"definitions.TriggerUpdate.properties.Actions.description" = "The actions initiated by this trigger."
"definitions.TriggerUpdate.properties.Description.$ref" = "#/definitions/DescriptionString"
"definitions.TriggerUpdate.properties.Description.description" = "A description of this trigger."
"definitions.TriggerUpdate.properties.Name.$ref" = "#/definitions/NameString"
"definitions.TriggerUpdate.properties.Name.description" = "The name of the trigger."
"definitions.TriggerUpdate.properties.Predicate.$ref" = "#/definitions/Predicate"
"definitions.TriggerUpdate.properties.Predicate.description" = "The predicate of this trigger, which defines when it will fire."
"definitions.TriggerUpdate.properties.Schedule.$ref" = "#/definitions/GenericString"
"definitions.TriggerUpdate.properties.Schedule.description" = "A cron expression specifying the schedule."
"definitions.TriggerUpdate.type" = "object"
"definitions.URI.maxLength" = 1024.0
"definitions.URI.minLength" = 1.0
"definitions.URI.type" = "string"
"definitions.URI.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
"definitions.UpdateBehavior.enum.length" = 2
"definitions.UpdateBehavior.enum[0]" = "LOG"
"definitions.UpdateBehavior.enum[1]" = "UPDATE_IN_DATABASE"
"definitions.UpdateBehavior.type" = "string"
"definitions.UpdateClassifierRequest.properties.GrokClassifier.$ref" = "#/definitions/UpdateGrokClassifierRequest"
"definitions.UpdateClassifierRequest.properties.GrokClassifier.description" = "A <code>GrokClassifier</code> object with updated fields."
"definitions.UpdateClassifierRequest.type" = "object"
"definitions.UpdateClassifierResponse.type" = "object"
"definitions.UpdateConnectionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.UpdateConnectionRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the connection resides. If none is supplied, the AWS account ID is used by default."
"definitions.UpdateConnectionRequest.properties.ConnectionInput.$ref" = "#/definitions/ConnectionInput"
"definitions.UpdateConnectionRequest.properties.ConnectionInput.description" = "A <code>ConnectionInput</code> object that redefines the connection in question."
"definitions.UpdateConnectionRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.UpdateConnectionRequest.properties.Name.description" = "The name of the connection definition to update."
"definitions.UpdateConnectionRequest.required.length" = 2
"definitions.UpdateConnectionRequest.required[0]" = "Name"
"definitions.UpdateConnectionRequest.required[1]" = "ConnectionInput"
"definitions.UpdateConnectionRequest.type" = "object"
"definitions.UpdateConnectionResponse.type" = "object"
"definitions.UpdateCrawlerRequest.properties.Classifiers.$ref" = "#/definitions/ClassifierNameList"
"definitions.UpdateCrawlerRequest.properties.Classifiers.description" = "A list of custom <code>Classifier</code> names that the user has registered. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification."
"definitions.UpdateCrawlerRequest.properties.DatabaseName.$ref" = "#/definitions/DatabaseName"
"definitions.UpdateCrawlerRequest.properties.DatabaseName.description" = "The Glue <code>Database</code> where results will be stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
"definitions.UpdateCrawlerRequest.properties.Description.$ref" = "#/definitions/DescriptionStringRemovable"
"definitions.UpdateCrawlerRequest.properties.Description.description" = "A description of the new <code>Crawler</code>."
"definitions.UpdateCrawlerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.UpdateCrawlerRequest.properties.Name.description" = "Name of the new <code>Crawler</code>."
"definitions.UpdateCrawlerRequest.properties.Role.$ref" = "#/definitions/RoleArn"
"definitions.UpdateCrawlerRequest.properties.Role.description" = "The AWS ARN of the IAM role used by the new <code>Crawler</code> to access customer resources."
"definitions.UpdateCrawlerRequest.properties.Schedule.$ref" = "#/definitions/CronExpression"
"definitions.UpdateCrawlerRequest.properties.Schedule.description" = "A cron expression that can be used as a Cloudwatch event (see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">CloudWatch Schedule Expression Syntax</a>. For example, to run every day at 12:15 UTC, specify: <code>cron(15 12 * * ? *)</code>."
"definitions.UpdateCrawlerRequest.properties.SchemaChangePolicy.$ref" = "#/definitions/SchemaChangePolicy"
"definitions.UpdateCrawlerRequest.properties.SchemaChangePolicy.description" = "Policy for the crawler's update and deletion behavior."
"definitions.UpdateCrawlerRequest.properties.TablePrefix.$ref" = "#/definitions/TablePrefix"
"definitions.UpdateCrawlerRequest.properties.TablePrefix.description" = "The table prefix used for catalog tables created."
"definitions.UpdateCrawlerRequest.properties.Targets.$ref" = "#/definitions/CrawlerTargets"
"definitions.UpdateCrawlerRequest.properties.Targets.description" = "A list of collection of targets to crawl."
"definitions.UpdateCrawlerRequest.required.length" = 1
"definitions.UpdateCrawlerRequest.required[0]" = "Name"
"definitions.UpdateCrawlerRequest.type" = "object"
"definitions.UpdateCrawlerResponse.type" = "object"
"definitions.UpdateCrawlerScheduleRequest.properties.CrawlerName.$ref" = "#/definitions/NameString"
"definitions.UpdateCrawlerScheduleRequest.properties.CrawlerName.description" = "Name of the crawler whose schedule to update."
"definitions.UpdateCrawlerScheduleRequest.properties.Schedule.$ref" = "#/definitions/CronExpression"
"definitions.UpdateCrawlerScheduleRequest.properties.Schedule.description" = "Cron expression of the updated schedule."
"definitions.UpdateCrawlerScheduleRequest.required.length" = 1
"definitions.UpdateCrawlerScheduleRequest.required[0]" = "CrawlerName"
"definitions.UpdateCrawlerScheduleRequest.type" = "object"
"definitions.UpdateCrawlerScheduleResponse.type" = "object"
"definitions.UpdateDatabaseRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.UpdateDatabaseRequest.properties.CatalogId.description" = "The ID of the Data Catalog in which the metadata database resides. If none is supplied, the AWS account ID is used by default."
"definitions.UpdateDatabaseRequest.properties.DatabaseInput.$ref" = "#/definitions/DatabaseInput"
"definitions.UpdateDatabaseRequest.properties.DatabaseInput.description" = "A <code>DatabaseInput</code> object specifying the new definition of the metadata database in the catalog."
"definitions.UpdateDatabaseRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.UpdateDatabaseRequest.properties.Name.description" = "The name of the metadata database to update in the catalog."
"definitions.UpdateDatabaseRequest.required.length" = 2
"definitions.UpdateDatabaseRequest.required[0]" = "Name"
"definitions.UpdateDatabaseRequest.required[1]" = "DatabaseInput"
"definitions.UpdateDatabaseRequest.type" = "object"
"definitions.UpdateDatabaseResponse.type" = "object"
"definitions.UpdateDevEndpointRequest.properties.CustomLibraries.$ref" = "#/definitions/DevEndpointCustomLibraries"
"definitions.UpdateDevEndpointRequest.properties.CustomLibraries.description" = "Custom Python or Java custom libraries to be loaded in the DevEndpoint."
"definitions.UpdateDevEndpointRequest.properties.EndpointName.$ref" = "#/definitions/GenericString"
"definitions.UpdateDevEndpointRequest.properties.EndpointName.description" = "The name of the DevEndpoint to be updated."
"definitions.UpdateDevEndpointRequest.properties.PublicKey.$ref" = "#/definitions/GenericString"
"definitions.UpdateDevEndpointRequest.properties.PublicKey.description" = "The public key for the DevEndpoint to use."
"definitions.UpdateDevEndpointRequest.required.length" = 1
"definitions.UpdateDevEndpointRequest.required[0]" = "EndpointName"
"definitions.UpdateDevEndpointRequest.type" = "object"
"definitions.UpdateDevEndpointResponse.type" = "object"
"definitions.UpdateGrokClassifierRequest.description" = "Specifies a Grok classifier to update when passed to UpdateClassifier."
"definitions.UpdateGrokClassifierRequest.properties.Classification.$ref" = "#/definitions/Classification"
"definitions.UpdateGrokClassifierRequest.properties.Classification.description" = "The type of result that the classifier matches, such as Twitter Json, Omniture logs, Cloudwatch logs, and so forth."
"definitions.UpdateGrokClassifierRequest.properties.CustomPatterns.$ref" = "#/definitions/CustomPatterns"
"definitions.UpdateGrokClassifierRequest.properties.CustomPatterns.description" = "Custom grok patterns used by this classifier."
"definitions.UpdateGrokClassifierRequest.properties.GrokPattern.$ref" = "#/definitions/GrokPattern"
"definitions.UpdateGrokClassifierRequest.properties.GrokPattern.description" = "The grok pattern used by this classifier."
"definitions.UpdateGrokClassifierRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.UpdateGrokClassifierRequest.properties.Name.description" = "The name of the <code>GrokClassifier</code>."
"definitions.UpdateGrokClassifierRequest.required.length" = 1
"definitions.UpdateGrokClassifierRequest.required[0]" = "Name"
"definitions.UpdateGrokClassifierRequest.type" = "object"
"definitions.UpdateJobRequest.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.UpdateJobRequest.properties.JobName.description" = "Name of the job definition to update."
"definitions.UpdateJobRequest.properties.JobUpdate.$ref" = "#/definitions/JobUpdate"
"definitions.UpdateJobRequest.properties.JobUpdate.description" = "Specifies the values with which to update the job."
"definitions.UpdateJobRequest.required.length" = 2
"definitions.UpdateJobRequest.required[0]" = "JobName"
"definitions.UpdateJobRequest.required[1]" = "JobUpdate"
"definitions.UpdateJobRequest.type" = "object"
"definitions.UpdateJobResponse.properties.JobName.$ref" = "#/definitions/NameString"
"definitions.UpdateJobResponse.properties.JobName.description" = "Returns the name of the updated job."
"definitions.UpdateJobResponse.type" = "object"
"definitions.UpdatePartitionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.UpdatePartitionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the partition to be updated resides. If none is supplied, the AWS account ID is used by default."
"definitions.UpdatePartitionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.UpdatePartitionRequest.properties.DatabaseName.description" = "The name of the catalog database in which the table in question resides."
"definitions.UpdatePartitionRequest.properties.PartitionInput.$ref" = "#/definitions/PartitionInput"
"definitions.UpdatePartitionRequest.properties.PartitionInput.description" = "The new partition object to which to update the partition."
"definitions.UpdatePartitionRequest.properties.PartitionValueList.$ref" = "#/definitions/BoundedPartitionValueList"
"definitions.UpdatePartitionRequest.properties.PartitionValueList.description" = "A list of the values defining the partition."
"definitions.UpdatePartitionRequest.properties.TableName.$ref" = "#/definitions/NameString"
"definitions.UpdatePartitionRequest.properties.TableName.description" = "The name of the table where the partition to be updated is located."
"definitions.UpdatePartitionRequest.required.length" = 4
"definitions.UpdatePartitionRequest.required[0]" = "DatabaseName"
"definitions.UpdatePartitionRequest.required[1]" = "TableName"
"definitions.UpdatePartitionRequest.required[2]" = "PartitionValueList"
"definitions.UpdatePartitionRequest.required[3]" = "PartitionInput"
"definitions.UpdatePartitionRequest.type" = "object"
"definitions.UpdatePartitionResponse.type" = "object"
"definitions.UpdateTableRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.UpdateTableRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the table resides. If none is supplied, the AWS account ID is used by default."
"definitions.UpdateTableRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.UpdateTableRequest.properties.DatabaseName.description" = "The name of the catalog database in which the table resides."
"definitions.UpdateTableRequest.properties.TableInput.$ref" = "#/definitions/TableInput"
"definitions.UpdateTableRequest.properties.TableInput.description" = "An updated <code>TableInput</code> object to define the metadata table in the catalog."
"definitions.UpdateTableRequest.required.length" = 2
"definitions.UpdateTableRequest.required[0]" = "DatabaseName"
"definitions.UpdateTableRequest.required[1]" = "TableInput"
"definitions.UpdateTableRequest.type" = "object"
"definitions.UpdateTableResponse.type" = "object"
"definitions.UpdateTriggerRequest.properties.Name.$ref" = "#/definitions/NameString"
"definitions.UpdateTriggerRequest.properties.Name.description" = "The name of the trigger to update."
"definitions.UpdateTriggerRequest.properties.TriggerUpdate.$ref" = "#/definitions/TriggerUpdate"
"definitions.UpdateTriggerRequest.properties.TriggerUpdate.description" = "The new values with which to update the trigger."
"definitions.UpdateTriggerRequest.required.length" = 2
"definitions.UpdateTriggerRequest.required[0]" = "Name"
"definitions.UpdateTriggerRequest.required[1]" = "TriggerUpdate"
"definitions.UpdateTriggerRequest.type" = "object"
"definitions.UpdateTriggerResponse.properties.Trigger.$ref" = "#/definitions/Trigger"
"definitions.UpdateTriggerResponse.properties.Trigger.description" = "The resulting trigger definition."
"definitions.UpdateTriggerResponse.type" = "object"
"definitions.UpdateUserDefinedFunctionRequest.properties.CatalogId.$ref" = "#/definitions/CatalogIdString"
"definitions.UpdateUserDefinedFunctionRequest.properties.CatalogId.description" = "The ID of the Data Catalog where the function to be updated is located. If none is supplied, the AWS account ID is used by default."
"definitions.UpdateUserDefinedFunctionRequest.properties.DatabaseName.$ref" = "#/definitions/NameString"
"definitions.UpdateUserDefinedFunctionRequest.properties.DatabaseName.description" = "The name of the catalog database where the function to be updated is located."
"definitions.UpdateUserDefinedFunctionRequest.properties.FunctionInput.$ref" = "#/definitions/UserDefinedFunctionInput"
"definitions.UpdateUserDefinedFunctionRequest.properties.FunctionInput.description" = "A <code>FunctionInput</code> object that re-defines the function in the Data Catalog."
"definitions.UpdateUserDefinedFunctionRequest.properties.FunctionName.$ref" = "#/definitions/NameString"
"definitions.UpdateUserDefinedFunctionRequest.properties.FunctionName.description" = "The name of the function."
"definitions.UpdateUserDefinedFunctionRequest.required.length" = 3
"definitions.UpdateUserDefinedFunctionRequest.required[0]" = "DatabaseName"
"definitions.UpdateUserDefinedFunctionRequest.required[1]" = "FunctionName"
"definitions.UpdateUserDefinedFunctionRequest.required[2]" = "FunctionInput"
"definitions.UpdateUserDefinedFunctionRequest.type" = "object"
"definitions.UpdateUserDefinedFunctionResponse.type" = "object"
"definitions.UriString.type" = "string"
"definitions.UserDefinedFunction.description" = "Represents the equivalent of a Hive user-defined function (<code>UDF</code>) definition."
"definitions.UserDefinedFunction.properties.ClassName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunction.properties.ClassName.description" = "The Java class that contains the function code."
"definitions.UserDefinedFunction.properties.CreateTime.$ref" = "#/definitions/Timestamp"
"definitions.UserDefinedFunction.properties.CreateTime.description" = "The time at which the function was created."
"definitions.UserDefinedFunction.properties.FunctionName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunction.properties.FunctionName.description" = "The name of the function."
"definitions.UserDefinedFunction.properties.OwnerName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunction.properties.OwnerName.description" = "The owner of the function."
"definitions.UserDefinedFunction.properties.OwnerType.$ref" = "#/definitions/PrincipalType"
"definitions.UserDefinedFunction.properties.OwnerType.description" = "The owner type."
"definitions.UserDefinedFunction.properties.ResourceUris.$ref" = "#/definitions/ResourceUriList"
"definitions.UserDefinedFunction.properties.ResourceUris.description" = "The resource URIs for the function."
"definitions.UserDefinedFunction.type" = "object"
"definitions.UserDefinedFunctionInput.description" = "A structure used to create or updata a user-defined function."
"definitions.UserDefinedFunctionInput.properties.ClassName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunctionInput.properties.ClassName.description" = "The Java class that contains the function code."
"definitions.UserDefinedFunctionInput.properties.FunctionName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunctionInput.properties.FunctionName.description" = "The name of the function."
"definitions.UserDefinedFunctionInput.properties.OwnerName.$ref" = "#/definitions/NameString"
"definitions.UserDefinedFunctionInput.properties.OwnerName.description" = "The owner of the function."
"definitions.UserDefinedFunctionInput.properties.OwnerType.$ref" = "#/definitions/PrincipalType"
"definitions.UserDefinedFunctionInput.properties.OwnerType.description" = "The owner type."
"definitions.UserDefinedFunctionInput.properties.ResourceUris.$ref" = "#/definitions/ResourceUriList"
"definitions.UserDefinedFunctionInput.properties.ResourceUris.description" = "The resource URIs for the function."
"definitions.UserDefinedFunctionInput.type" = "object"
"definitions.UserDefinedFunctionList.items.$ref" = "#/definitions/UserDefinedFunction"
"definitions.UserDefinedFunctionList.type" = "array"
"definitions.ValidationException.description" = "A value could not be validated."
"definitions.ValidationException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.ValidationException.properties.Message.description" = "A message describing the problem."
"definitions.ValidationException.type" = "object"
"definitions.ValueString.maxLength" = 1024.0
"definitions.ValueString.type" = "string"
"definitions.ValueStringList.items.$ref" = "#/definitions/ValueString"
"definitions.ValueStringList.type" = "array"
"definitions.VersionId.type" = "integer"
"definitions.VersionMismatchException.description" = "There was a version conflict."
"definitions.VersionMismatchException.properties.Message.$ref" = "#/definitions/MessageString"
"definitions.VersionMismatchException.properties.Message.description" = "A message describing the problem."
"definitions.VersionMismatchException.type" = "object"
"definitions.VersionString.maxLength" = 255.0
"definitions.VersionString.minLength" = 1.0
"definitions.VersionString.type" = "string"
"definitions.VersionString.x-pattern" = "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
"definitions.ViewTextString.maxLength" = 2048.0
"definitions.ViewTextString.type" = "string"
"externalDocs.description" = "Amazon Web Services documentation"
"externalDocs.url" = "https://aws.amazon.com/glue/"
host = "glue.amazonaws.com"
"info.contact.email" = "mike.ralphson@gmail.com"
"info.contact.name" = "Mike Ralphson"
"info.contact.url" = "https://github.com/mermade/aws2openapi"
"info.description" = "Defines service operations used by the GlueFrontendService"
"info.license.name" = "Apache 2.0 License"
"info.license.url" = "http://www.apache.org/licenses/"
"info.termsOfService" = "https://aws.amazon.com/service-terms/"
"info.title" = "AWS Glue"
"info.version" = "2017-03-31"
"info.x-apiClientRegistration.url" = "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
"info.x-origin.length" = 1
"info.x-origin[0].contentType" = "application/json"
"info.x-origin[0].converter.url" = "https://github.com/mermade/aws2openapi"
"info.x-origin[0].converter.version" = "1.0.0"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/glue-2017-03-31.normal.json"
"info.x-origin[0].x-apisguru-direct" = true
"info.x-preferred" = true
"info.x-providerName" = "amazonaws.com"
"info.x-release" = "v4"
"info.x-serviceName" = "glue"
"parameters.Action.in" = "header"
"parameters.Action.name" = "Action"
"parameters.Action.required" = true
"parameters.Action.type" = "string"
"parameters.Version.in" = "header"
"parameters.Version.name" = "Version"
"parameters.Version.required" = true
"parameters.Version.type" = "string"
"parameters.X-Amz-Algorithm.in" = "header"
"parameters.X-Amz-Algorithm.name" = "X-Amz-Algorithm"
"parameters.X-Amz-Algorithm.required" = false
"parameters.X-Amz-Algorithm.type" = "string"
"parameters.X-Amz-Content-Sha256.in" = "header"
"parameters.X-Amz-Content-Sha256.name" = "X-Amz-Content-Sha256"
"parameters.X-Amz-Content-Sha256.required" = false
"parameters.X-Amz-Content-Sha256.type" = "string"
"parameters.X-Amz-Credential.in" = "header"
"parameters.X-Amz-Credential.name" = "X-Amz-Credential"
"parameters.X-Amz-Credential.required" = false
"parameters.X-Amz-Credential.type" = "string"
"parameters.X-Amz-Date.in" = "header"
"parameters.X-Amz-Date.name" = "X-Amz-Date"
"parameters.X-Amz-Date.required" = false
"parameters.X-Amz-Date.type" = "string"
"parameters.X-Amz-Security-Token.in" = "header"
"parameters.X-Amz-Security-Token.name" = "X-Amz-Security-Token"
"parameters.X-Amz-Security-Token.required" = false
"parameters.X-Amz-Security-Token.type" = "string"
"parameters.X-Amz-Signature.in" = "header"
"parameters.X-Amz-Signature.name" = "X-Amz-Signature"
"parameters.X-Amz-Signature.required" = false
"parameters.X-Amz-Signature.type" = "string"
"parameters.X-Amz-SignedHeaders.in" = "header"
"parameters.X-Amz-SignedHeaders.name" = "X-Amz-SignedHeaders"
"parameters.X-Amz-SignedHeaders.required" = false
"parameters.X-Amz-SignedHeaders.type" = "string"
"paths./#BatchDeleteConnection.parameters.length" = 9
"paths./#BatchDeleteConnection.parameters[0].$ref" = "#/parameters/Action"
"paths./#BatchDeleteConnection.parameters[1].$ref" = "#/parameters/Version"
"paths./#BatchDeleteConnection.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#BatchDeleteConnection.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#BatchDeleteConnection.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#BatchDeleteConnection.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#BatchDeleteConnection.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#BatchDeleteConnection.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#BatchDeleteConnection.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#BatchDeleteConnection.post.description" = "Deletes a list of connection definitions from the Data Catalog."
"paths./#BatchDeleteConnection.post.operationId" = "BatchDeleteConnection"
"paths./#BatchDeleteConnection.post.parameters.length" = 1
"paths./#BatchDeleteConnection.post.parameters[0].in" = "body"
"paths./#BatchDeleteConnection.post.parameters[0].name" = "body"
"paths./#BatchDeleteConnection.post.parameters[0].required" = true
"paths./#BatchDeleteConnection.post.parameters[0].schema.$ref" = "#/definitions/BatchDeleteConnectionRequest"
"paths./#BatchDeleteConnection.post.responses.200.description" = "Success"
"paths./#BatchDeleteConnection.post.responses.200.schema.$ref" = "#/definitions/BatchDeleteConnectionResponse"
"paths./#BatchDeleteConnection.post.responses.480.description" = "InternalServiceException"
"paths./#BatchDeleteConnection.post.responses.480.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#BatchDeleteConnection.post.responses.481.description" = "OperationTimeoutException"
"paths./#BatchDeleteConnection.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#BatchDeletePartition.parameters.length" = 9
"paths./#BatchDeletePartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#BatchDeletePartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#BatchDeletePartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#BatchDeletePartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#BatchDeletePartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#BatchDeletePartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#BatchDeletePartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#BatchDeletePartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#BatchDeletePartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#BatchDeletePartition.post.description" = "Deletes one or more partitions in a batch operation."
"paths./#BatchDeletePartition.post.operationId" = "BatchDeletePartition"
"paths./#BatchDeletePartition.post.parameters.length" = 1
"paths./#BatchDeletePartition.post.parameters[0].in" = "body"
"paths./#BatchDeletePartition.post.parameters[0].name" = "body"
"paths./#BatchDeletePartition.post.parameters[0].required" = true
"paths./#BatchDeletePartition.post.parameters[0].schema.$ref" = "#/definitions/BatchDeletePartitionRequest"
"paths./#BatchDeletePartition.post.responses.200.description" = "Success"
"paths./#BatchDeletePartition.post.responses.200.schema.$ref" = "#/definitions/BatchDeletePartitionResponse"
"paths./#BatchDeletePartition.post.responses.480.description" = "InvalidInputException"
"paths./#BatchDeletePartition.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#BatchDeletePartition.post.responses.481.description" = "EntityNotFoundException"
"paths./#BatchDeletePartition.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#BatchDeletePartition.post.responses.482.description" = "InternalServiceException"
"paths./#BatchDeletePartition.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#BatchDeletePartition.post.responses.483.description" = "OperationTimeoutException"
"paths./#BatchDeletePartition.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#BatchDeleteTable.parameters.length" = 9
"paths./#BatchDeleteTable.parameters[0].$ref" = "#/parameters/Action"
"paths./#BatchDeleteTable.parameters[1].$ref" = "#/parameters/Version"
"paths./#BatchDeleteTable.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#BatchDeleteTable.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#BatchDeleteTable.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#BatchDeleteTable.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#BatchDeleteTable.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#BatchDeleteTable.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#BatchDeleteTable.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#BatchDeleteTable.post.description" = "Deletes multiple tables at once."
"paths./#BatchDeleteTable.post.operationId" = "BatchDeleteTable"
"paths./#BatchDeleteTable.post.parameters.length" = 1
"paths./#BatchDeleteTable.post.parameters[0].in" = "body"
"paths./#BatchDeleteTable.post.parameters[0].name" = "body"
"paths./#BatchDeleteTable.post.parameters[0].required" = true
"paths./#BatchDeleteTable.post.parameters[0].schema.$ref" = "#/definitions/BatchDeleteTableRequest"
"paths./#BatchDeleteTable.post.responses.200.description" = "Success"
"paths./#BatchDeleteTable.post.responses.200.schema.$ref" = "#/definitions/BatchDeleteTableResponse"
"paths./#BatchDeleteTable.post.responses.480.description" = "InvalidInputException"
"paths./#BatchDeleteTable.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#BatchDeleteTable.post.responses.481.description" = "EntityNotFoundException"
"paths./#BatchDeleteTable.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#BatchDeleteTable.post.responses.482.description" = "InternalServiceException"
"paths./#BatchDeleteTable.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#BatchDeleteTable.post.responses.483.description" = "OperationTimeoutException"
"paths./#BatchDeleteTable.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#BatchGetPartition.parameters.length" = 9
"paths./#BatchGetPartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#BatchGetPartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#BatchGetPartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#BatchGetPartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#BatchGetPartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#BatchGetPartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#BatchGetPartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#BatchGetPartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#BatchGetPartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#BatchGetPartition.post.description" = "Retrieves partitions in a batch request."
"paths./#BatchGetPartition.post.operationId" = "BatchGetPartition"
"paths./#BatchGetPartition.post.parameters.length" = 1
"paths./#BatchGetPartition.post.parameters[0].in" = "body"
"paths./#BatchGetPartition.post.parameters[0].name" = "body"
"paths./#BatchGetPartition.post.parameters[0].required" = true
"paths./#BatchGetPartition.post.parameters[0].schema.$ref" = "#/definitions/BatchGetPartitionRequest"
"paths./#BatchGetPartition.post.responses.200.description" = "Success"
"paths./#BatchGetPartition.post.responses.200.schema.$ref" = "#/definitions/BatchGetPartitionResponse"
"paths./#BatchGetPartition.post.responses.480.description" = "InvalidInputException"
"paths./#BatchGetPartition.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#BatchGetPartition.post.responses.481.description" = "EntityNotFoundException"
"paths./#BatchGetPartition.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#BatchGetPartition.post.responses.482.description" = "OperationTimeoutException"
"paths./#BatchGetPartition.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#BatchGetPartition.post.responses.483.description" = "InternalServiceException"
"paths./#BatchGetPartition.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateClassifier.parameters.length" = 9
"paths./#CreateClassifier.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateClassifier.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateClassifier.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateClassifier.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateClassifier.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateClassifier.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateClassifier.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateClassifier.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateClassifier.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateClassifier.post.description" = "Creates a <code>Classifier</code> in the user's account."
"paths./#CreateClassifier.post.operationId" = "CreateClassifier"
"paths./#CreateClassifier.post.parameters.length" = 1
"paths./#CreateClassifier.post.parameters[0].in" = "body"
"paths./#CreateClassifier.post.parameters[0].name" = "body"
"paths./#CreateClassifier.post.parameters[0].required" = true
"paths./#CreateClassifier.post.parameters[0].schema.$ref" = "#/definitions/CreateClassifierRequest"
"paths./#CreateClassifier.post.responses.200.description" = "Success"
"paths./#CreateClassifier.post.responses.200.schema.$ref" = "#/definitions/CreateClassifierResponse"
"paths./#CreateClassifier.post.responses.480.description" = "AlreadyExistsException"
"paths./#CreateClassifier.post.responses.480.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateClassifier.post.responses.481.description" = "InvalidInputException"
"paths./#CreateClassifier.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateClassifier.post.responses.482.description" = "OperationTimeoutException"
"paths./#CreateClassifier.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateConnection.parameters.length" = 9
"paths./#CreateConnection.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateConnection.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateConnection.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateConnection.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateConnection.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateConnection.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateConnection.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateConnection.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateConnection.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateConnection.post.description" = "Creates a connection definition in the Data Catalog."
"paths./#CreateConnection.post.operationId" = "CreateConnection"
"paths./#CreateConnection.post.parameters.length" = 1
"paths./#CreateConnection.post.parameters[0].in" = "body"
"paths./#CreateConnection.post.parameters[0].name" = "body"
"paths./#CreateConnection.post.parameters[0].required" = true
"paths./#CreateConnection.post.parameters[0].schema.$ref" = "#/definitions/CreateConnectionRequest"
"paths./#CreateConnection.post.responses.200.description" = "Success"
"paths./#CreateConnection.post.responses.200.schema.$ref" = "#/definitions/CreateConnectionResponse"
"paths./#CreateConnection.post.responses.480.description" = "AlreadyExistsException"
"paths./#CreateConnection.post.responses.480.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateConnection.post.responses.481.description" = "InvalidInputException"
"paths./#CreateConnection.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateConnection.post.responses.482.description" = "OperationTimeoutException"
"paths./#CreateConnection.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateCrawler.parameters.length" = 9
"paths./#CreateCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateCrawler.post.description" = "Creates a new <code>Crawler</code> with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in either the <i>s3Targets</i> or the <i>jdbcTargets</i> field."
"paths./#CreateCrawler.post.operationId" = "CreateCrawler"
"paths./#CreateCrawler.post.parameters.length" = 1
"paths./#CreateCrawler.post.parameters[0].in" = "body"
"paths./#CreateCrawler.post.parameters[0].name" = "body"
"paths./#CreateCrawler.post.parameters[0].required" = true
"paths./#CreateCrawler.post.parameters[0].schema.$ref" = "#/definitions/CreateCrawlerRequest"
"paths./#CreateCrawler.post.responses.200.description" = "Success"
"paths./#CreateCrawler.post.responses.200.schema.$ref" = "#/definitions/CreateCrawlerResponse"
"paths./#CreateCrawler.post.responses.480.description" = "InvalidInputException"
"paths./#CreateCrawler.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateCrawler.post.responses.481.description" = "AlreadyExistsException"
"paths./#CreateCrawler.post.responses.481.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateCrawler.post.responses.482.description" = "OperationTimeoutException"
"paths./#CreateCrawler.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateCrawler.post.responses.483.description" = "ResourceNumberLimitExceededException"
"paths./#CreateCrawler.post.responses.483.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreateDatabase.parameters.length" = 9
"paths./#CreateDatabase.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateDatabase.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateDatabase.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateDatabase.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateDatabase.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateDatabase.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateDatabase.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateDatabase.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateDatabase.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateDatabase.post.description" = "Creates a new database in a Data Catalog."
"paths./#CreateDatabase.post.operationId" = "CreateDatabase"
"paths./#CreateDatabase.post.parameters.length" = 1
"paths./#CreateDatabase.post.parameters[0].in" = "body"
"paths./#CreateDatabase.post.parameters[0].name" = "body"
"paths./#CreateDatabase.post.parameters[0].required" = true
"paths./#CreateDatabase.post.parameters[0].schema.$ref" = "#/definitions/CreateDatabaseRequest"
"paths./#CreateDatabase.post.responses.200.description" = "Success"
"paths./#CreateDatabase.post.responses.200.schema.$ref" = "#/definitions/CreateDatabaseResponse"
"paths./#CreateDatabase.post.responses.480.description" = "InvalidInputException"
"paths./#CreateDatabase.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateDatabase.post.responses.481.description" = "AlreadyExistsException"
"paths./#CreateDatabase.post.responses.481.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateDatabase.post.responses.482.description" = "ResourceNumberLimitExceededException"
"paths./#CreateDatabase.post.responses.482.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreateDatabase.post.responses.483.description" = "InternalServiceException"
"paths./#CreateDatabase.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateDatabase.post.responses.484.description" = "OperationTimeoutException"
"paths./#CreateDatabase.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateDevEndpoint.parameters.length" = 9
"paths./#CreateDevEndpoint.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateDevEndpoint.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateDevEndpoint.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateDevEndpoint.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateDevEndpoint.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateDevEndpoint.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateDevEndpoint.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateDevEndpoint.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateDevEndpoint.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateDevEndpoint.post.description" = "Creates a new DevEndpoint."
"paths./#CreateDevEndpoint.post.operationId" = "CreateDevEndpoint"
"paths./#CreateDevEndpoint.post.parameters.length" = 1
"paths./#CreateDevEndpoint.post.parameters[0].in" = "body"
"paths./#CreateDevEndpoint.post.parameters[0].name" = "body"
"paths./#CreateDevEndpoint.post.parameters[0].required" = true
"paths./#CreateDevEndpoint.post.parameters[0].schema.$ref" = "#/definitions/CreateDevEndpointRequest"
"paths./#CreateDevEndpoint.post.responses.200.description" = "Success"
"paths./#CreateDevEndpoint.post.responses.200.schema.$ref" = "#/definitions/CreateDevEndpointResponse"
"paths./#CreateDevEndpoint.post.responses.480.description" = "AccessDeniedException"
"paths./#CreateDevEndpoint.post.responses.480.schema.$ref" = "#/definitions/AccessDeniedException"
"paths./#CreateDevEndpoint.post.responses.481.description" = "AlreadyExistsException"
"paths./#CreateDevEndpoint.post.responses.481.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateDevEndpoint.post.responses.482.description" = "IdempotentParameterMismatchException"
"paths./#CreateDevEndpoint.post.responses.482.schema.$ref" = "#/definitions/IdempotentParameterMismatchException"
"paths./#CreateDevEndpoint.post.responses.483.description" = "InternalServiceException"
"paths./#CreateDevEndpoint.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateDevEndpoint.post.responses.484.description" = "OperationTimeoutException"
"paths./#CreateDevEndpoint.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateDevEndpoint.post.responses.485.description" = "InvalidInputException"
"paths./#CreateDevEndpoint.post.responses.485.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateDevEndpoint.post.responses.486.description" = "ValidationException"
"paths./#CreateDevEndpoint.post.responses.486.schema.$ref" = "#/definitions/ValidationException"
"paths./#CreateDevEndpoint.post.responses.487.description" = "ResourceNumberLimitExceededException"
"paths./#CreateDevEndpoint.post.responses.487.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreateJob.parameters.length" = 9
"paths./#CreateJob.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateJob.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateJob.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateJob.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateJob.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateJob.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateJob.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateJob.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateJob.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateJob.post.description" = "Creates a new job."
"paths./#CreateJob.post.operationId" = "CreateJob"
"paths./#CreateJob.post.parameters.length" = 1
"paths./#CreateJob.post.parameters[0].in" = "body"
"paths./#CreateJob.post.parameters[0].name" = "body"
"paths./#CreateJob.post.parameters[0].required" = true
"paths./#CreateJob.post.parameters[0].schema.$ref" = "#/definitions/CreateJobRequest"
"paths./#CreateJob.post.responses.200.description" = "Success"
"paths./#CreateJob.post.responses.200.schema.$ref" = "#/definitions/CreateJobResponse"
"paths./#CreateJob.post.responses.480.description" = "InvalidInputException"
"paths./#CreateJob.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateJob.post.responses.481.description" = "IdempotentParameterMismatchException"
"paths./#CreateJob.post.responses.481.schema.$ref" = "#/definitions/IdempotentParameterMismatchException"
"paths./#CreateJob.post.responses.482.description" = "AlreadyExistsException"
"paths./#CreateJob.post.responses.482.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateJob.post.responses.483.description" = "InternalServiceException"
"paths./#CreateJob.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateJob.post.responses.484.description" = "OperationTimeoutException"
"paths./#CreateJob.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateJob.post.responses.485.description" = "ResourceNumberLimitExceededException"
"paths./#CreateJob.post.responses.485.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreatePartition.parameters.length" = 9
"paths./#CreatePartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreatePartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreatePartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreatePartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreatePartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreatePartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreatePartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreatePartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreatePartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreatePartition.post.description" = "Creates a new partition."
"paths./#CreatePartition.post.operationId" = "CreatePartition"
"paths./#CreatePartition.post.parameters.length" = 1
"paths./#CreatePartition.post.parameters[0].in" = "body"
"paths./#CreatePartition.post.parameters[0].name" = "body"
"paths./#CreatePartition.post.parameters[0].required" = true
"paths./#CreatePartition.post.parameters[0].schema.$ref" = "#/definitions/CreatePartitionRequest"
"paths./#CreatePartition.post.responses.200.description" = "Success"
"paths./#CreatePartition.post.responses.200.schema.$ref" = "#/definitions/CreatePartitionResponse"
"paths./#CreatePartition.post.responses.480.description" = "InvalidInputException"
"paths./#CreatePartition.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreatePartition.post.responses.481.description" = "AlreadyExistsException"
"paths./#CreatePartition.post.responses.481.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreatePartition.post.responses.482.description" = "ResourceNumberLimitExceededException"
"paths./#CreatePartition.post.responses.482.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreatePartition.post.responses.483.description" = "InternalServiceException"
"paths./#CreatePartition.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreatePartition.post.responses.484.description" = "EntityNotFoundException"
"paths./#CreatePartition.post.responses.484.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#CreatePartition.post.responses.485.description" = "OperationTimeoutException"
"paths./#CreatePartition.post.responses.485.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateScript.parameters.length" = 9
"paths./#CreateScript.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateScript.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateScript.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateScript.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateScript.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateScript.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateScript.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateScript.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateScript.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateScript.post.description" = "Transforms a directed acyclic graph (DAG) into a Python script."
"paths./#CreateScript.post.operationId" = "CreateScript"
"paths./#CreateScript.post.parameters.length" = 1
"paths./#CreateScript.post.parameters[0].in" = "body"
"paths./#CreateScript.post.parameters[0].name" = "body"
"paths./#CreateScript.post.parameters[0].required" = true
"paths./#CreateScript.post.parameters[0].schema.$ref" = "#/definitions/CreateScriptRequest"
"paths./#CreateScript.post.responses.200.description" = "Success"
"paths./#CreateScript.post.responses.200.schema.$ref" = "#/definitions/CreateScriptResponse"
"paths./#CreateScript.post.responses.480.description" = "InvalidInputException"
"paths./#CreateScript.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateScript.post.responses.481.description" = "InternalServiceException"
"paths./#CreateScript.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateScript.post.responses.482.description" = "OperationTimeoutException"
"paths./#CreateScript.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateTable.parameters.length" = 9
"paths./#CreateTable.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateTable.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateTable.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateTable.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateTable.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateTable.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateTable.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateTable.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateTable.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateTable.post.description" = "Creates a new table definition in the Data Catalog."
"paths./#CreateTable.post.operationId" = "CreateTable"
"paths./#CreateTable.post.parameters.length" = 1
"paths./#CreateTable.post.parameters[0].in" = "body"
"paths./#CreateTable.post.parameters[0].name" = "body"
"paths./#CreateTable.post.parameters[0].required" = true
"paths./#CreateTable.post.parameters[0].schema.$ref" = "#/definitions/CreateTableRequest"
"paths./#CreateTable.post.responses.200.description" = "Success"
"paths./#CreateTable.post.responses.200.schema.$ref" = "#/definitions/CreateTableResponse"
"paths./#CreateTable.post.responses.480.description" = "AlreadyExistsException"
"paths./#CreateTable.post.responses.480.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateTable.post.responses.481.description" = "InvalidInputException"
"paths./#CreateTable.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateTable.post.responses.482.description" = "EntityNotFoundException"
"paths./#CreateTable.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#CreateTable.post.responses.483.description" = "ResourceNumberLimitExceededException"
"paths./#CreateTable.post.responses.483.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreateTable.post.responses.484.description" = "InternalServiceException"
"paths./#CreateTable.post.responses.484.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateTable.post.responses.485.description" = "OperationTimeoutException"
"paths./#CreateTable.post.responses.485.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateTrigger.parameters.length" = 9
"paths./#CreateTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateTrigger.post.description" = "Creates a new trigger."
"paths./#CreateTrigger.post.operationId" = "CreateTrigger"
"paths./#CreateTrigger.post.parameters.length" = 1
"paths./#CreateTrigger.post.parameters[0].in" = "body"
"paths./#CreateTrigger.post.parameters[0].name" = "body"
"paths./#CreateTrigger.post.parameters[0].required" = true
"paths./#CreateTrigger.post.parameters[0].schema.$ref" = "#/definitions/CreateTriggerRequest"
"paths./#CreateTrigger.post.responses.200.description" = "Success"
"paths./#CreateTrigger.post.responses.200.schema.$ref" = "#/definitions/CreateTriggerResponse"
"paths./#CreateTrigger.post.responses.480.description" = "AlreadyExistsException"
"paths./#CreateTrigger.post.responses.480.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateTrigger.post.responses.481.description" = "InvalidInputException"
"paths./#CreateTrigger.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateTrigger.post.responses.482.description" = "InternalServiceException"
"paths./#CreateTrigger.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateTrigger.post.responses.483.description" = "OperationTimeoutException"
"paths./#CreateTrigger.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#CreateTrigger.post.responses.484.description" = "ResourceNumberLimitExceededException"
"paths./#CreateTrigger.post.responses.484.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#CreateUserDefinedFunction.parameters.length" = 9
"paths./#CreateUserDefinedFunction.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateUserDefinedFunction.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateUserDefinedFunction.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateUserDefinedFunction.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateUserDefinedFunction.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateUserDefinedFunction.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateUserDefinedFunction.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateUserDefinedFunction.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateUserDefinedFunction.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateUserDefinedFunction.post.description" = "Creates a new function definition in the Data Catalog."
"paths./#CreateUserDefinedFunction.post.operationId" = "CreateUserDefinedFunction"
"paths./#CreateUserDefinedFunction.post.parameters.length" = 1
"paths./#CreateUserDefinedFunction.post.parameters[0].in" = "body"
"paths./#CreateUserDefinedFunction.post.parameters[0].name" = "body"
"paths./#CreateUserDefinedFunction.post.parameters[0].required" = true
"paths./#CreateUserDefinedFunction.post.parameters[0].schema.$ref" = "#/definitions/CreateUserDefinedFunctionRequest"
"paths./#CreateUserDefinedFunction.post.responses.200.description" = "Success"
"paths./#CreateUserDefinedFunction.post.responses.200.schema.$ref" = "#/definitions/CreateUserDefinedFunctionResponse"
"paths./#CreateUserDefinedFunction.post.responses.480.description" = "AlreadyExistsException"
"paths./#CreateUserDefinedFunction.post.responses.480.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./#CreateUserDefinedFunction.post.responses.481.description" = "InvalidInputException"
"paths./#CreateUserDefinedFunction.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#CreateUserDefinedFunction.post.responses.482.description" = "InternalServiceException"
"paths./#CreateUserDefinedFunction.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#CreateUserDefinedFunction.post.responses.483.description" = "EntityNotFoundException"
"paths./#CreateUserDefinedFunction.post.responses.483.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#CreateUserDefinedFunction.post.responses.484.description" = "OperationTimeoutException"
"paths./#CreateUserDefinedFunction.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteClassifier.parameters.length" = 9
"paths./#DeleteClassifier.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteClassifier.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteClassifier.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteClassifier.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteClassifier.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteClassifier.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteClassifier.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteClassifier.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteClassifier.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteClassifier.post.description" = "Removes a <code>Classifier</code> from the metadata store."
"paths./#DeleteClassifier.post.operationId" = "DeleteClassifier"
"paths./#DeleteClassifier.post.parameters.length" = 1
"paths./#DeleteClassifier.post.parameters[0].in" = "body"
"paths./#DeleteClassifier.post.parameters[0].name" = "body"
"paths./#DeleteClassifier.post.parameters[0].required" = true
"paths./#DeleteClassifier.post.parameters[0].schema.$ref" = "#/definitions/DeleteClassifierRequest"
"paths./#DeleteClassifier.post.responses.200.description" = "Success"
"paths./#DeleteClassifier.post.responses.200.schema.$ref" = "#/definitions/DeleteClassifierResponse"
"paths./#DeleteClassifier.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteClassifier.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteClassifier.post.responses.481.description" = "OperationTimeoutException"
"paths./#DeleteClassifier.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteConnection.parameters.length" = 9
"paths./#DeleteConnection.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteConnection.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteConnection.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteConnection.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteConnection.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteConnection.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteConnection.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteConnection.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteConnection.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteConnection.post.description" = "Deletes a connection from the Data Catalog."
"paths./#DeleteConnection.post.operationId" = "DeleteConnection"
"paths./#DeleteConnection.post.parameters.length" = 1
"paths./#DeleteConnection.post.parameters[0].in" = "body"
"paths./#DeleteConnection.post.parameters[0].name" = "body"
"paths./#DeleteConnection.post.parameters[0].required" = true
"paths./#DeleteConnection.post.parameters[0].schema.$ref" = "#/definitions/DeleteConnectionRequest"
"paths./#DeleteConnection.post.responses.200.description" = "Success"
"paths./#DeleteConnection.post.responses.200.schema.$ref" = "#/definitions/DeleteConnectionResponse"
"paths./#DeleteConnection.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteConnection.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteConnection.post.responses.481.description" = "OperationTimeoutException"
"paths./#DeleteConnection.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteCrawler.parameters.length" = 9
"paths./#DeleteCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteCrawler.post.description" = "Removes a specified <code>Crawler</code> from the metadata store, unless the <code>Crawler</code> state is <code>RUNNING</code>."
"paths./#DeleteCrawler.post.operationId" = "DeleteCrawler"
"paths./#DeleteCrawler.post.parameters.length" = 1
"paths./#DeleteCrawler.post.parameters[0].in" = "body"
"paths./#DeleteCrawler.post.parameters[0].name" = "body"
"paths./#DeleteCrawler.post.parameters[0].required" = true
"paths./#DeleteCrawler.post.parameters[0].schema.$ref" = "#/definitions/DeleteCrawlerRequest"
"paths./#DeleteCrawler.post.responses.200.description" = "Success"
"paths./#DeleteCrawler.post.responses.200.schema.$ref" = "#/definitions/DeleteCrawlerResponse"
"paths./#DeleteCrawler.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteCrawler.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteCrawler.post.responses.481.description" = "CrawlerRunningException"
"paths./#DeleteCrawler.post.responses.481.schema.$ref" = "#/definitions/CrawlerRunningException"
"paths./#DeleteCrawler.post.responses.482.description" = "SchedulerTransitioningException"
"paths./#DeleteCrawler.post.responses.482.schema.$ref" = "#/definitions/SchedulerTransitioningException"
"paths./#DeleteCrawler.post.responses.483.description" = "OperationTimeoutException"
"paths./#DeleteCrawler.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteDatabase.parameters.length" = 9
"paths./#DeleteDatabase.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteDatabase.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteDatabase.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteDatabase.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteDatabase.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteDatabase.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteDatabase.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteDatabase.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteDatabase.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteDatabase.post.description" = "Removes a specified Database from a Data Catalog."
"paths./#DeleteDatabase.post.operationId" = "DeleteDatabase"
"paths./#DeleteDatabase.post.parameters.length" = 1
"paths./#DeleteDatabase.post.parameters[0].in" = "body"
"paths./#DeleteDatabase.post.parameters[0].name" = "body"
"paths./#DeleteDatabase.post.parameters[0].required" = true
"paths./#DeleteDatabase.post.parameters[0].schema.$ref" = "#/definitions/DeleteDatabaseRequest"
"paths./#DeleteDatabase.post.responses.200.description" = "Success"
"paths./#DeleteDatabase.post.responses.200.schema.$ref" = "#/definitions/DeleteDatabaseResponse"
"paths./#DeleteDatabase.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteDatabase.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteDatabase.post.responses.481.description" = "InvalidInputException"
"paths./#DeleteDatabase.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteDatabase.post.responses.482.description" = "InternalServiceException"
"paths./#DeleteDatabase.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteDatabase.post.responses.483.description" = "OperationTimeoutException"
"paths./#DeleteDatabase.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteDevEndpoint.parameters.length" = 9
"paths./#DeleteDevEndpoint.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteDevEndpoint.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteDevEndpoint.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteDevEndpoint.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteDevEndpoint.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteDevEndpoint.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteDevEndpoint.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteDevEndpoint.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteDevEndpoint.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteDevEndpoint.post.description" = "Deletes a specified DevEndpoint."
"paths./#DeleteDevEndpoint.post.operationId" = "DeleteDevEndpoint"
"paths./#DeleteDevEndpoint.post.parameters.length" = 1
"paths./#DeleteDevEndpoint.post.parameters[0].in" = "body"
"paths./#DeleteDevEndpoint.post.parameters[0].name" = "body"
"paths./#DeleteDevEndpoint.post.parameters[0].required" = true
"paths./#DeleteDevEndpoint.post.parameters[0].schema.$ref" = "#/definitions/DeleteDevEndpointRequest"
"paths./#DeleteDevEndpoint.post.responses.200.description" = "Success"
"paths./#DeleteDevEndpoint.post.responses.200.schema.$ref" = "#/definitions/DeleteDevEndpointResponse"
"paths./#DeleteDevEndpoint.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteDevEndpoint.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteDevEndpoint.post.responses.481.description" = "InternalServiceException"
"paths./#DeleteDevEndpoint.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteDevEndpoint.post.responses.482.description" = "OperationTimeoutException"
"paths./#DeleteDevEndpoint.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteDevEndpoint.post.responses.483.description" = "InvalidInputException"
"paths./#DeleteDevEndpoint.post.responses.483.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteJob.parameters.length" = 9
"paths./#DeleteJob.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteJob.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteJob.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteJob.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteJob.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteJob.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteJob.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteJob.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteJob.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteJob.post.description" = "Deletes a specified job."
"paths./#DeleteJob.post.operationId" = "DeleteJob"
"paths./#DeleteJob.post.parameters.length" = 1
"paths./#DeleteJob.post.parameters[0].in" = "body"
"paths./#DeleteJob.post.parameters[0].name" = "body"
"paths./#DeleteJob.post.parameters[0].required" = true
"paths./#DeleteJob.post.parameters[0].schema.$ref" = "#/definitions/DeleteJobRequest"
"paths./#DeleteJob.post.responses.200.description" = "Success"
"paths./#DeleteJob.post.responses.200.schema.$ref" = "#/definitions/DeleteJobResponse"
"paths./#DeleteJob.post.responses.480.description" = "InvalidInputException"
"paths./#DeleteJob.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteJob.post.responses.481.description" = "InternalServiceException"
"paths./#DeleteJob.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteJob.post.responses.482.description" = "OperationTimeoutException"
"paths./#DeleteJob.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeletePartition.parameters.length" = 9
"paths./#DeletePartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeletePartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeletePartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeletePartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeletePartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeletePartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeletePartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeletePartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeletePartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeletePartition.post.description" = "Deletes a specified partition."
"paths./#DeletePartition.post.operationId" = "DeletePartition"
"paths./#DeletePartition.post.parameters.length" = 1
"paths./#DeletePartition.post.parameters[0].in" = "body"
"paths./#DeletePartition.post.parameters[0].name" = "body"
"paths./#DeletePartition.post.parameters[0].required" = true
"paths./#DeletePartition.post.parameters[0].schema.$ref" = "#/definitions/DeletePartitionRequest"
"paths./#DeletePartition.post.responses.200.description" = "Success"
"paths./#DeletePartition.post.responses.200.schema.$ref" = "#/definitions/DeletePartitionResponse"
"paths./#DeletePartition.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeletePartition.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeletePartition.post.responses.481.description" = "InvalidInputException"
"paths./#DeletePartition.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeletePartition.post.responses.482.description" = "InternalServiceException"
"paths./#DeletePartition.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeletePartition.post.responses.483.description" = "OperationTimeoutException"
"paths./#DeletePartition.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteTable.parameters.length" = 9
"paths./#DeleteTable.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteTable.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteTable.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteTable.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteTable.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteTable.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteTable.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteTable.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteTable.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteTable.post.description" = "Removes a table definition from the Data Catalog."
"paths./#DeleteTable.post.operationId" = "DeleteTable"
"paths./#DeleteTable.post.parameters.length" = 1
"paths./#DeleteTable.post.parameters[0].in" = "body"
"paths./#DeleteTable.post.parameters[0].name" = "body"
"paths./#DeleteTable.post.parameters[0].required" = true
"paths./#DeleteTable.post.parameters[0].schema.$ref" = "#/definitions/DeleteTableRequest"
"paths./#DeleteTable.post.responses.200.description" = "Success"
"paths./#DeleteTable.post.responses.200.schema.$ref" = "#/definitions/DeleteTableResponse"
"paths./#DeleteTable.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteTable.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteTable.post.responses.481.description" = "InvalidInputException"
"paths./#DeleteTable.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteTable.post.responses.482.description" = "InternalServiceException"
"paths./#DeleteTable.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteTable.post.responses.483.description" = "OperationTimeoutException"
"paths./#DeleteTable.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteTrigger.parameters.length" = 9
"paths./#DeleteTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteTrigger.post.description" = "Deletes a specified trigger."
"paths./#DeleteTrigger.post.operationId" = "DeleteTrigger"
"paths./#DeleteTrigger.post.parameters.length" = 1
"paths./#DeleteTrigger.post.parameters[0].in" = "body"
"paths./#DeleteTrigger.post.parameters[0].name" = "body"
"paths./#DeleteTrigger.post.parameters[0].required" = true
"paths./#DeleteTrigger.post.parameters[0].schema.$ref" = "#/definitions/DeleteTriggerRequest"
"paths./#DeleteTrigger.post.responses.200.description" = "Success"
"paths./#DeleteTrigger.post.responses.200.schema.$ref" = "#/definitions/DeleteTriggerResponse"
"paths./#DeleteTrigger.post.responses.480.description" = "InvalidInputException"
"paths./#DeleteTrigger.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteTrigger.post.responses.481.description" = "InternalServiceException"
"paths./#DeleteTrigger.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteTrigger.post.responses.482.description" = "OperationTimeoutException"
"paths./#DeleteTrigger.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#DeleteUserDefinedFunction.parameters.length" = 9
"paths./#DeleteUserDefinedFunction.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteUserDefinedFunction.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteUserDefinedFunction.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteUserDefinedFunction.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteUserDefinedFunction.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteUserDefinedFunction.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteUserDefinedFunction.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteUserDefinedFunction.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteUserDefinedFunction.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteUserDefinedFunction.post.description" = "Deletes an existing function definition from the Data Catalog."
"paths./#DeleteUserDefinedFunction.post.operationId" = "DeleteUserDefinedFunction"
"paths./#DeleteUserDefinedFunction.post.parameters.length" = 1
"paths./#DeleteUserDefinedFunction.post.parameters[0].in" = "body"
"paths./#DeleteUserDefinedFunction.post.parameters[0].name" = "body"
"paths./#DeleteUserDefinedFunction.post.parameters[0].required" = true
"paths./#DeleteUserDefinedFunction.post.parameters[0].schema.$ref" = "#/definitions/DeleteUserDefinedFunctionRequest"
"paths./#DeleteUserDefinedFunction.post.responses.200.description" = "Success"
"paths./#DeleteUserDefinedFunction.post.responses.200.schema.$ref" = "#/definitions/DeleteUserDefinedFunctionResponse"
"paths./#DeleteUserDefinedFunction.post.responses.480.description" = "EntityNotFoundException"
"paths./#DeleteUserDefinedFunction.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#DeleteUserDefinedFunction.post.responses.481.description" = "InvalidInputException"
"paths./#DeleteUserDefinedFunction.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#DeleteUserDefinedFunction.post.responses.482.description" = "InternalServiceException"
"paths./#DeleteUserDefinedFunction.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#DeleteUserDefinedFunction.post.responses.483.description" = "OperationTimeoutException"
"paths./#DeleteUserDefinedFunction.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetCatalogImportStatus.parameters.length" = 9
"paths./#GetCatalogImportStatus.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetCatalogImportStatus.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetCatalogImportStatus.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetCatalogImportStatus.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetCatalogImportStatus.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetCatalogImportStatus.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetCatalogImportStatus.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetCatalogImportStatus.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetCatalogImportStatus.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetCatalogImportStatus.post.description" = "Retrieves the status of a migration operation."
"paths./#GetCatalogImportStatus.post.operationId" = "GetCatalogImportStatus"
"paths./#GetCatalogImportStatus.post.parameters.length" = 1
"paths./#GetCatalogImportStatus.post.parameters[0].in" = "body"
"paths./#GetCatalogImportStatus.post.parameters[0].name" = "body"
"paths./#GetCatalogImportStatus.post.parameters[0].required" = true
"paths./#GetCatalogImportStatus.post.parameters[0].schema.$ref" = "#/definitions/GetCatalogImportStatusRequest"
"paths./#GetCatalogImportStatus.post.responses.200.description" = "Success"
"paths./#GetCatalogImportStatus.post.responses.200.schema.$ref" = "#/definitions/GetCatalogImportStatusResponse"
"paths./#GetCatalogImportStatus.post.responses.480.description" = "InternalServiceException"
"paths./#GetCatalogImportStatus.post.responses.480.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetCatalogImportStatus.post.responses.481.description" = "OperationTimeoutException"
"paths./#GetCatalogImportStatus.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetClassifier.parameters.length" = 9
"paths./#GetClassifier.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetClassifier.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetClassifier.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetClassifier.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetClassifier.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetClassifier.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetClassifier.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetClassifier.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetClassifier.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetClassifier.post.description" = "Retrieve a <code>Classifier</code> by name."
"paths./#GetClassifier.post.operationId" = "GetClassifier"
"paths./#GetClassifier.post.parameters.length" = 1
"paths./#GetClassifier.post.parameters[0].in" = "body"
"paths./#GetClassifier.post.parameters[0].name" = "body"
"paths./#GetClassifier.post.parameters[0].required" = true
"paths./#GetClassifier.post.parameters[0].schema.$ref" = "#/definitions/GetClassifierRequest"
"paths./#GetClassifier.post.responses.200.description" = "Success"
"paths./#GetClassifier.post.responses.200.schema.$ref" = "#/definitions/GetClassifierResponse"
"paths./#GetClassifier.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetClassifier.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetClassifier.post.responses.481.description" = "OperationTimeoutException"
"paths./#GetClassifier.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetClassifiers.parameters.length" = 9
"paths./#GetClassifiers.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetClassifiers.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetClassifiers.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetClassifiers.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetClassifiers.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetClassifiers.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetClassifiers.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetClassifiers.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetClassifiers.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetClassifiers.post.description" = "Lists all Classifier objects in the metadata store."
"paths./#GetClassifiers.post.operationId" = "GetClassifiers"
"paths./#GetClassifiers.post.parameters.length" = 3
"paths./#GetClassifiers.post.parameters[0].in" = "body"
"paths./#GetClassifiers.post.parameters[0].name" = "body"
"paths./#GetClassifiers.post.parameters[0].required" = true
"paths./#GetClassifiers.post.parameters[0].schema.$ref" = "#/definitions/GetClassifiersRequest"
"paths./#GetClassifiers.post.parameters[1].description" = "Pagination limit"
"paths./#GetClassifiers.post.parameters[1].in" = "query"
"paths./#GetClassifiers.post.parameters[1].name" = "MaxResults"
"paths./#GetClassifiers.post.parameters[1].required" = false
"paths./#GetClassifiers.post.parameters[1].type" = "string"
"paths./#GetClassifiers.post.parameters[2].description" = "Pagination token"
"paths./#GetClassifiers.post.parameters[2].in" = "query"
"paths./#GetClassifiers.post.parameters[2].name" = "NextToken"
"paths./#GetClassifiers.post.parameters[2].required" = false
"paths./#GetClassifiers.post.parameters[2].type" = "string"
"paths./#GetClassifiers.post.responses.200.description" = "Success"
"paths./#GetClassifiers.post.responses.200.schema.$ref" = "#/definitions/GetClassifiersResponse"
"paths./#GetClassifiers.post.responses.480.description" = "OperationTimeoutException"
"paths./#GetClassifiers.post.responses.480.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetConnection.parameters.length" = 9
"paths./#GetConnection.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetConnection.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetConnection.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetConnection.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetConnection.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetConnection.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetConnection.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetConnection.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetConnection.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetConnection.post.description" = "Retrieves a connection definition from the Data Catalog."
"paths./#GetConnection.post.operationId" = "GetConnection"
"paths./#GetConnection.post.parameters.length" = 1
"paths./#GetConnection.post.parameters[0].in" = "body"
"paths./#GetConnection.post.parameters[0].name" = "body"
"paths./#GetConnection.post.parameters[0].required" = true
"paths./#GetConnection.post.parameters[0].schema.$ref" = "#/definitions/GetConnectionRequest"
"paths./#GetConnection.post.responses.200.description" = "Success"
"paths./#GetConnection.post.responses.200.schema.$ref" = "#/definitions/GetConnectionResponse"
"paths./#GetConnection.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetConnection.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetConnection.post.responses.481.description" = "OperationTimeoutException"
"paths./#GetConnection.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetConnections.parameters.length" = 9
"paths./#GetConnections.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetConnections.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetConnections.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetConnections.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetConnections.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetConnections.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetConnections.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetConnections.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetConnections.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetConnections.post.description" = "Retrieves a list of connection definitions from the Data Catalog."
"paths./#GetConnections.post.operationId" = "GetConnections"
"paths./#GetConnections.post.parameters.length" = 3
"paths./#GetConnections.post.parameters[0].in" = "body"
"paths./#GetConnections.post.parameters[0].name" = "body"
"paths./#GetConnections.post.parameters[0].required" = true
"paths./#GetConnections.post.parameters[0].schema.$ref" = "#/definitions/GetConnectionsRequest"
"paths./#GetConnections.post.parameters[1].description" = "Pagination limit"
"paths./#GetConnections.post.parameters[1].in" = "query"
"paths./#GetConnections.post.parameters[1].name" = "MaxResults"
"paths./#GetConnections.post.parameters[1].required" = false
"paths./#GetConnections.post.parameters[1].type" = "string"
"paths./#GetConnections.post.parameters[2].description" = "Pagination token"
"paths./#GetConnections.post.parameters[2].in" = "query"
"paths./#GetConnections.post.parameters[2].name" = "NextToken"
"paths./#GetConnections.post.parameters[2].required" = false
"paths./#GetConnections.post.parameters[2].type" = "string"
"paths./#GetConnections.post.responses.200.description" = "Success"
"paths./#GetConnections.post.responses.200.schema.$ref" = "#/definitions/GetConnectionsResponse"
"paths./#GetConnections.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetConnections.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetConnections.post.responses.481.description" = "OperationTimeoutException"
"paths./#GetConnections.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetCrawler.parameters.length" = 9
"paths./#GetCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetCrawler.post.description" = "Retrieves metadata for a specified <code>Crawler</code>."
"paths./#GetCrawler.post.operationId" = "GetCrawler"
"paths./#GetCrawler.post.parameters.length" = 1
"paths./#GetCrawler.post.parameters[0].in" = "body"
"paths./#GetCrawler.post.parameters[0].name" = "body"
"paths./#GetCrawler.post.parameters[0].required" = true
"paths./#GetCrawler.post.parameters[0].schema.$ref" = "#/definitions/GetCrawlerRequest"
"paths./#GetCrawler.post.responses.200.description" = "Success"
"paths./#GetCrawler.post.responses.200.schema.$ref" = "#/definitions/GetCrawlerResponse"
"paths./#GetCrawler.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetCrawler.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetCrawler.post.responses.481.description" = "OperationTimeoutException"
"paths./#GetCrawler.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetCrawlerMetrics.parameters.length" = 9
"paths./#GetCrawlerMetrics.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetCrawlerMetrics.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetCrawlerMetrics.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetCrawlerMetrics.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetCrawlerMetrics.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetCrawlerMetrics.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetCrawlerMetrics.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetCrawlerMetrics.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetCrawlerMetrics.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetCrawlerMetrics.post.description" = "Retrieves metrics about specified crawlers."
"paths./#GetCrawlerMetrics.post.operationId" = "GetCrawlerMetrics"
"paths./#GetCrawlerMetrics.post.parameters.length" = 3
"paths./#GetCrawlerMetrics.post.parameters[0].in" = "body"
"paths./#GetCrawlerMetrics.post.parameters[0].name" = "body"
"paths./#GetCrawlerMetrics.post.parameters[0].required" = true
"paths./#GetCrawlerMetrics.post.parameters[0].schema.$ref" = "#/definitions/GetCrawlerMetricsRequest"
"paths./#GetCrawlerMetrics.post.parameters[1].description" = "Pagination limit"
"paths./#GetCrawlerMetrics.post.parameters[1].in" = "query"
"paths./#GetCrawlerMetrics.post.parameters[1].name" = "MaxResults"
"paths./#GetCrawlerMetrics.post.parameters[1].required" = false
"paths./#GetCrawlerMetrics.post.parameters[1].type" = "string"
"paths./#GetCrawlerMetrics.post.parameters[2].description" = "Pagination token"
"paths./#GetCrawlerMetrics.post.parameters[2].in" = "query"
"paths./#GetCrawlerMetrics.post.parameters[2].name" = "NextToken"
"paths./#GetCrawlerMetrics.post.parameters[2].required" = false
"paths./#GetCrawlerMetrics.post.parameters[2].type" = "string"
"paths./#GetCrawlerMetrics.post.responses.200.description" = "Success"
"paths./#GetCrawlerMetrics.post.responses.200.schema.$ref" = "#/definitions/GetCrawlerMetricsResponse"
"paths./#GetCrawlerMetrics.post.responses.480.description" = "OperationTimeoutException"
"paths./#GetCrawlerMetrics.post.responses.480.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetCrawlers.parameters.length" = 9
"paths./#GetCrawlers.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetCrawlers.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetCrawlers.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetCrawlers.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetCrawlers.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetCrawlers.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetCrawlers.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetCrawlers.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetCrawlers.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetCrawlers.post.description" = "Retrieves metadata for all <code>Crawlers</code> defined in the customer account."
"paths./#GetCrawlers.post.operationId" = "GetCrawlers"
"paths./#GetCrawlers.post.parameters.length" = 3
"paths./#GetCrawlers.post.parameters[0].in" = "body"
"paths./#GetCrawlers.post.parameters[0].name" = "body"
"paths./#GetCrawlers.post.parameters[0].required" = true
"paths./#GetCrawlers.post.parameters[0].schema.$ref" = "#/definitions/GetCrawlersRequest"
"paths./#GetCrawlers.post.parameters[1].description" = "Pagination limit"
"paths./#GetCrawlers.post.parameters[1].in" = "query"
"paths./#GetCrawlers.post.parameters[1].name" = "MaxResults"
"paths./#GetCrawlers.post.parameters[1].required" = false
"paths./#GetCrawlers.post.parameters[1].type" = "string"
"paths./#GetCrawlers.post.parameters[2].description" = "Pagination token"
"paths./#GetCrawlers.post.parameters[2].in" = "query"
"paths./#GetCrawlers.post.parameters[2].name" = "NextToken"
"paths./#GetCrawlers.post.parameters[2].required" = false
"paths./#GetCrawlers.post.parameters[2].type" = "string"
"paths./#GetCrawlers.post.responses.200.description" = "Success"
"paths./#GetCrawlers.post.responses.200.schema.$ref" = "#/definitions/GetCrawlersResponse"
"paths./#GetCrawlers.post.responses.480.description" = "OperationTimeoutException"
"paths./#GetCrawlers.post.responses.480.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDatabase.parameters.length" = 9
"paths./#GetDatabase.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetDatabase.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetDatabase.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetDatabase.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetDatabase.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetDatabase.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetDatabase.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetDatabase.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetDatabase.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetDatabase.post.description" = "Retrieves the definition of a specified database."
"paths./#GetDatabase.post.operationId" = "GetDatabase"
"paths./#GetDatabase.post.parameters.length" = 1
"paths./#GetDatabase.post.parameters[0].in" = "body"
"paths./#GetDatabase.post.parameters[0].name" = "body"
"paths./#GetDatabase.post.parameters[0].required" = true
"paths./#GetDatabase.post.parameters[0].schema.$ref" = "#/definitions/GetDatabaseRequest"
"paths./#GetDatabase.post.responses.200.description" = "Success"
"paths./#GetDatabase.post.responses.200.schema.$ref" = "#/definitions/GetDatabaseResponse"
"paths./#GetDatabase.post.responses.480.description" = "InvalidInputException"
"paths./#GetDatabase.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetDatabase.post.responses.481.description" = "EntityNotFoundException"
"paths./#GetDatabase.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetDatabase.post.responses.482.description" = "InternalServiceException"
"paths./#GetDatabase.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetDatabase.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetDatabase.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDatabases.parameters.length" = 9
"paths./#GetDatabases.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetDatabases.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetDatabases.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetDatabases.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetDatabases.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetDatabases.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetDatabases.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetDatabases.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetDatabases.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetDatabases.post.description" = "Retrieves all Databases defined in a given Data Catalog."
"paths./#GetDatabases.post.operationId" = "GetDatabases"
"paths./#GetDatabases.post.parameters.length" = 3
"paths./#GetDatabases.post.parameters[0].in" = "body"
"paths./#GetDatabases.post.parameters[0].name" = "body"
"paths./#GetDatabases.post.parameters[0].required" = true
"paths./#GetDatabases.post.parameters[0].schema.$ref" = "#/definitions/GetDatabasesRequest"
"paths./#GetDatabases.post.parameters[1].description" = "Pagination limit"
"paths./#GetDatabases.post.parameters[1].in" = "query"
"paths./#GetDatabases.post.parameters[1].name" = "MaxResults"
"paths./#GetDatabases.post.parameters[1].required" = false
"paths./#GetDatabases.post.parameters[1].type" = "string"
"paths./#GetDatabases.post.parameters[2].description" = "Pagination token"
"paths./#GetDatabases.post.parameters[2].in" = "query"
"paths./#GetDatabases.post.parameters[2].name" = "NextToken"
"paths./#GetDatabases.post.parameters[2].required" = false
"paths./#GetDatabases.post.parameters[2].type" = "string"
"paths./#GetDatabases.post.responses.200.description" = "Success"
"paths./#GetDatabases.post.responses.200.schema.$ref" = "#/definitions/GetDatabasesResponse"
"paths./#GetDatabases.post.responses.480.description" = "InvalidInputException"
"paths./#GetDatabases.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetDatabases.post.responses.481.description" = "InternalServiceException"
"paths./#GetDatabases.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetDatabases.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetDatabases.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDataflowGraph.parameters.length" = 9
"paths./#GetDataflowGraph.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetDataflowGraph.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetDataflowGraph.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetDataflowGraph.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetDataflowGraph.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetDataflowGraph.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetDataflowGraph.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetDataflowGraph.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetDataflowGraph.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetDataflowGraph.post.description" = "Transforms a Python script into a directed acyclic graph (DAG). "
"paths./#GetDataflowGraph.post.operationId" = "GetDataflowGraph"
"paths./#GetDataflowGraph.post.parameters.length" = 1
"paths./#GetDataflowGraph.post.parameters[0].in" = "body"
"paths./#GetDataflowGraph.post.parameters[0].name" = "body"
"paths./#GetDataflowGraph.post.parameters[0].required" = true
"paths./#GetDataflowGraph.post.parameters[0].schema.$ref" = "#/definitions/GetDataflowGraphRequest"
"paths./#GetDataflowGraph.post.responses.200.description" = "Success"
"paths./#GetDataflowGraph.post.responses.200.schema.$ref" = "#/definitions/GetDataflowGraphResponse"
"paths./#GetDataflowGraph.post.responses.480.description" = "InvalidInputException"
"paths./#GetDataflowGraph.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetDataflowGraph.post.responses.481.description" = "InternalServiceException"
"paths./#GetDataflowGraph.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetDataflowGraph.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetDataflowGraph.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDevEndpoint.parameters.length" = 9
"paths./#GetDevEndpoint.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetDevEndpoint.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetDevEndpoint.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetDevEndpoint.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetDevEndpoint.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetDevEndpoint.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetDevEndpoint.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetDevEndpoint.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetDevEndpoint.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetDevEndpoint.post.description" = "Retrieves information about a specified DevEndpoint."
"paths./#GetDevEndpoint.post.operationId" = "GetDevEndpoint"
"paths./#GetDevEndpoint.post.parameters.length" = 1
"paths./#GetDevEndpoint.post.parameters[0].in" = "body"
"paths./#GetDevEndpoint.post.parameters[0].name" = "body"
"paths./#GetDevEndpoint.post.parameters[0].required" = true
"paths./#GetDevEndpoint.post.parameters[0].schema.$ref" = "#/definitions/GetDevEndpointRequest"
"paths./#GetDevEndpoint.post.responses.200.description" = "Success"
"paths./#GetDevEndpoint.post.responses.200.schema.$ref" = "#/definitions/GetDevEndpointResponse"
"paths./#GetDevEndpoint.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetDevEndpoint.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetDevEndpoint.post.responses.481.description" = "InternalServiceException"
"paths./#GetDevEndpoint.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetDevEndpoint.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetDevEndpoint.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDevEndpoint.post.responses.483.description" = "InvalidInputException"
"paths./#GetDevEndpoint.post.responses.483.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetDevEndpoints.parameters.length" = 9
"paths./#GetDevEndpoints.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetDevEndpoints.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetDevEndpoints.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetDevEndpoints.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetDevEndpoints.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetDevEndpoints.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetDevEndpoints.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetDevEndpoints.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetDevEndpoints.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetDevEndpoints.post.description" = "Retrieves all the DevEndpoints in this AWS account."
"paths./#GetDevEndpoints.post.operationId" = "GetDevEndpoints"
"paths./#GetDevEndpoints.post.parameters.length" = 3
"paths./#GetDevEndpoints.post.parameters[0].in" = "body"
"paths./#GetDevEndpoints.post.parameters[0].name" = "body"
"paths./#GetDevEndpoints.post.parameters[0].required" = true
"paths./#GetDevEndpoints.post.parameters[0].schema.$ref" = "#/definitions/GetDevEndpointsRequest"
"paths./#GetDevEndpoints.post.parameters[1].description" = "Pagination limit"
"paths./#GetDevEndpoints.post.parameters[1].in" = "query"
"paths./#GetDevEndpoints.post.parameters[1].name" = "MaxResults"
"paths./#GetDevEndpoints.post.parameters[1].required" = false
"paths./#GetDevEndpoints.post.parameters[1].type" = "string"
"paths./#GetDevEndpoints.post.parameters[2].description" = "Pagination token"
"paths./#GetDevEndpoints.post.parameters[2].in" = "query"
"paths./#GetDevEndpoints.post.parameters[2].name" = "NextToken"
"paths./#GetDevEndpoints.post.parameters[2].required" = false
"paths./#GetDevEndpoints.post.parameters[2].type" = "string"
"paths./#GetDevEndpoints.post.responses.200.description" = "Success"
"paths./#GetDevEndpoints.post.responses.200.schema.$ref" = "#/definitions/GetDevEndpointsResponse"
"paths./#GetDevEndpoints.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetDevEndpoints.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetDevEndpoints.post.responses.481.description" = "InternalServiceException"
"paths./#GetDevEndpoints.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetDevEndpoints.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetDevEndpoints.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetDevEndpoints.post.responses.483.description" = "InvalidInputException"
"paths./#GetDevEndpoints.post.responses.483.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetJob.parameters.length" = 9
"paths./#GetJob.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetJob.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetJob.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetJob.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetJob.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetJob.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetJob.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetJob.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetJob.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetJob.post.description" = "Retrieves an existing job definition."
"paths./#GetJob.post.operationId" = "GetJob"
"paths./#GetJob.post.parameters.length" = 1
"paths./#GetJob.post.parameters[0].in" = "body"
"paths./#GetJob.post.parameters[0].name" = "body"
"paths./#GetJob.post.parameters[0].required" = true
"paths./#GetJob.post.parameters[0].schema.$ref" = "#/definitions/GetJobRequest"
"paths./#GetJob.post.responses.200.description" = "Success"
"paths./#GetJob.post.responses.200.schema.$ref" = "#/definitions/GetJobResponse"
"paths./#GetJob.post.responses.480.description" = "InvalidInputException"
"paths./#GetJob.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetJob.post.responses.481.description" = "EntityNotFoundException"
"paths./#GetJob.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetJob.post.responses.482.description" = "InternalServiceException"
"paths./#GetJob.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetJob.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetJob.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetJobRun.parameters.length" = 9
"paths./#GetJobRun.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetJobRun.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetJobRun.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetJobRun.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetJobRun.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetJobRun.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetJobRun.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetJobRun.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetJobRun.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetJobRun.post.description" = "Retrieves the metadata for a given job run."
"paths./#GetJobRun.post.operationId" = "GetJobRun"
"paths./#GetJobRun.post.parameters.length" = 1
"paths./#GetJobRun.post.parameters[0].in" = "body"
"paths./#GetJobRun.post.parameters[0].name" = "body"
"paths./#GetJobRun.post.parameters[0].required" = true
"paths./#GetJobRun.post.parameters[0].schema.$ref" = "#/definitions/GetJobRunRequest"
"paths./#GetJobRun.post.responses.200.description" = "Success"
"paths./#GetJobRun.post.responses.200.schema.$ref" = "#/definitions/GetJobRunResponse"
"paths./#GetJobRun.post.responses.480.description" = "InvalidInputException"
"paths./#GetJobRun.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetJobRun.post.responses.481.description" = "EntityNotFoundException"
"paths./#GetJobRun.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetJobRun.post.responses.482.description" = "InternalServiceException"
"paths./#GetJobRun.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetJobRun.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetJobRun.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetJobRuns.parameters.length" = 9
"paths./#GetJobRuns.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetJobRuns.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetJobRuns.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetJobRuns.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetJobRuns.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetJobRuns.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetJobRuns.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetJobRuns.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetJobRuns.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetJobRuns.post.description" = "Retrieves metadata for all runs of a given job."
"paths./#GetJobRuns.post.operationId" = "GetJobRuns"
"paths./#GetJobRuns.post.parameters.length" = 3
"paths./#GetJobRuns.post.parameters[0].in" = "body"
"paths./#GetJobRuns.post.parameters[0].name" = "body"
"paths./#GetJobRuns.post.parameters[0].required" = true
"paths./#GetJobRuns.post.parameters[0].schema.$ref" = "#/definitions/GetJobRunsRequest"
"paths./#GetJobRuns.post.parameters[1].description" = "Pagination limit"
"paths./#GetJobRuns.post.parameters[1].in" = "query"
"paths./#GetJobRuns.post.parameters[1].name" = "MaxResults"
"paths./#GetJobRuns.post.parameters[1].required" = false
"paths./#GetJobRuns.post.parameters[1].type" = "string"
"paths./#GetJobRuns.post.parameters[2].description" = "Pagination token"
"paths./#GetJobRuns.post.parameters[2].in" = "query"
"paths./#GetJobRuns.post.parameters[2].name" = "NextToken"
"paths./#GetJobRuns.post.parameters[2].required" = false
"paths./#GetJobRuns.post.parameters[2].type" = "string"
"paths./#GetJobRuns.post.responses.200.description" = "Success"
"paths./#GetJobRuns.post.responses.200.schema.$ref" = "#/definitions/GetJobRunsResponse"
"paths./#GetJobRuns.post.responses.480.description" = "InvalidInputException"
"paths./#GetJobRuns.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetJobRuns.post.responses.481.description" = "EntityNotFoundException"
"paths./#GetJobRuns.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetJobRuns.post.responses.482.description" = "InternalServiceException"
"paths./#GetJobRuns.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetJobRuns.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetJobRuns.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetJobs.parameters.length" = 9
"paths./#GetJobs.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetJobs.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetJobs.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetJobs.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetJobs.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetJobs.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetJobs.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetJobs.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetJobs.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetJobs.post.description" = "Retrieves all current jobs."
"paths./#GetJobs.post.operationId" = "GetJobs"
"paths./#GetJobs.post.parameters.length" = 3
"paths./#GetJobs.post.parameters[0].in" = "body"
"paths./#GetJobs.post.parameters[0].name" = "body"
"paths./#GetJobs.post.parameters[0].required" = true
"paths./#GetJobs.post.parameters[0].schema.$ref" = "#/definitions/GetJobsRequest"
"paths./#GetJobs.post.parameters[1].description" = "Pagination limit"
"paths./#GetJobs.post.parameters[1].in" = "query"
"paths./#GetJobs.post.parameters[1].name" = "MaxResults"
"paths./#GetJobs.post.parameters[1].required" = false
"paths./#GetJobs.post.parameters[1].type" = "string"
"paths./#GetJobs.post.parameters[2].description" = "Pagination token"
"paths./#GetJobs.post.parameters[2].in" = "query"
"paths./#GetJobs.post.parameters[2].name" = "NextToken"
"paths./#GetJobs.post.parameters[2].required" = false
"paths./#GetJobs.post.parameters[2].type" = "string"
"paths./#GetJobs.post.responses.200.description" = "Success"
"paths./#GetJobs.post.responses.200.schema.$ref" = "#/definitions/GetJobsResponse"
"paths./#GetJobs.post.responses.480.description" = "InvalidInputException"
"paths./#GetJobs.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetJobs.post.responses.481.description" = "EntityNotFoundException"
"paths./#GetJobs.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetJobs.post.responses.482.description" = "InternalServiceException"
"paths./#GetJobs.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetJobs.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetJobs.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetMapping.parameters.length" = 9
"paths./#GetMapping.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetMapping.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetMapping.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetMapping.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetMapping.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetMapping.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetMapping.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetMapping.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetMapping.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetMapping.post.description" = "Creates mappings."
"paths./#GetMapping.post.operationId" = "GetMapping"
"paths./#GetMapping.post.parameters.length" = 1
"paths./#GetMapping.post.parameters[0].in" = "body"
"paths./#GetMapping.post.parameters[0].name" = "body"
"paths./#GetMapping.post.parameters[0].required" = true
"paths./#GetMapping.post.parameters[0].schema.$ref" = "#/definitions/GetMappingRequest"
"paths./#GetMapping.post.responses.200.description" = "Success"
"paths./#GetMapping.post.responses.200.schema.$ref" = "#/definitions/GetMappingResponse"
"paths./#GetMapping.post.responses.480.description" = "InvalidInputException"
"paths./#GetMapping.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetMapping.post.responses.481.description" = "InternalServiceException"
"paths./#GetMapping.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetMapping.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetMapping.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetPartition.parameters.length" = 9
"paths./#GetPartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetPartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetPartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetPartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetPartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetPartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetPartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetPartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetPartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetPartition.post.description" = "Retrieves information about a specified partition."
"paths./#GetPartition.post.operationId" = "GetPartition"
"paths./#GetPartition.post.parameters.length" = 1
"paths./#GetPartition.post.parameters[0].in" = "body"
"paths./#GetPartition.post.parameters[0].name" = "body"
"paths./#GetPartition.post.parameters[0].required" = true
"paths./#GetPartition.post.parameters[0].schema.$ref" = "#/definitions/GetPartitionRequest"
"paths./#GetPartition.post.responses.200.description" = "Success"
"paths./#GetPartition.post.responses.200.schema.$ref" = "#/definitions/GetPartitionResponse"
"paths./#GetPartition.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetPartition.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetPartition.post.responses.481.description" = "InvalidInputException"
"paths./#GetPartition.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetPartition.post.responses.482.description" = "InternalServiceException"
"paths./#GetPartition.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetPartition.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetPartition.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetPartitions.parameters.length" = 9
"paths./#GetPartitions.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetPartitions.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetPartitions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetPartitions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetPartitions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetPartitions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetPartitions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetPartitions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetPartitions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetPartitions.post.description" = "Retrieves information about the partitions in a table."
"paths./#GetPartitions.post.operationId" = "GetPartitions"
"paths./#GetPartitions.post.parameters.length" = 3
"paths./#GetPartitions.post.parameters[0].in" = "body"
"paths./#GetPartitions.post.parameters[0].name" = "body"
"paths./#GetPartitions.post.parameters[0].required" = true
"paths./#GetPartitions.post.parameters[0].schema.$ref" = "#/definitions/GetPartitionsRequest"
"paths./#GetPartitions.post.parameters[1].description" = "Pagination limit"
"paths./#GetPartitions.post.parameters[1].in" = "query"
"paths./#GetPartitions.post.parameters[1].name" = "MaxResults"
"paths./#GetPartitions.post.parameters[1].required" = false
"paths./#GetPartitions.post.parameters[1].type" = "string"
"paths./#GetPartitions.post.parameters[2].description" = "Pagination token"
"paths./#GetPartitions.post.parameters[2].in" = "query"
"paths./#GetPartitions.post.parameters[2].name" = "NextToken"
"paths./#GetPartitions.post.parameters[2].required" = false
"paths./#GetPartitions.post.parameters[2].type" = "string"
"paths./#GetPartitions.post.responses.200.description" = "Success"
"paths./#GetPartitions.post.responses.200.schema.$ref" = "#/definitions/GetPartitionsResponse"
"paths./#GetPartitions.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetPartitions.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetPartitions.post.responses.481.description" = "InvalidInputException"
"paths./#GetPartitions.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetPartitions.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetPartitions.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetPartitions.post.responses.483.description" = "InternalServiceException"
"paths./#GetPartitions.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetPlan.parameters.length" = 9
"paths./#GetPlan.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetPlan.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetPlan.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetPlan.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetPlan.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetPlan.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetPlan.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetPlan.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetPlan.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetPlan.post.description" = "Gets a Python script to perform a specified mapping."
"paths./#GetPlan.post.operationId" = "GetPlan"
"paths./#GetPlan.post.parameters.length" = 1
"paths./#GetPlan.post.parameters[0].in" = "body"
"paths./#GetPlan.post.parameters[0].name" = "body"
"paths./#GetPlan.post.parameters[0].required" = true
"paths./#GetPlan.post.parameters[0].schema.$ref" = "#/definitions/GetPlanRequest"
"paths./#GetPlan.post.responses.200.description" = "Success"
"paths./#GetPlan.post.responses.200.schema.$ref" = "#/definitions/GetPlanResponse"
"paths./#GetPlan.post.responses.480.description" = "InvalidInputException"
"paths./#GetPlan.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetPlan.post.responses.481.description" = "InternalServiceException"
"paths./#GetPlan.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetPlan.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetPlan.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetTable.parameters.length" = 9
"paths./#GetTable.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetTable.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetTable.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetTable.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetTable.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetTable.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetTable.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetTable.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetTable.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetTable.post.description" = "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table."
"paths./#GetTable.post.operationId" = "GetTable"
"paths./#GetTable.post.parameters.length" = 1
"paths./#GetTable.post.parameters[0].in" = "body"
"paths./#GetTable.post.parameters[0].name" = "body"
"paths./#GetTable.post.parameters[0].required" = true
"paths./#GetTable.post.parameters[0].schema.$ref" = "#/definitions/GetTableRequest"
"paths./#GetTable.post.responses.200.description" = "Success"
"paths./#GetTable.post.responses.200.schema.$ref" = "#/definitions/GetTableResponse"
"paths./#GetTable.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetTable.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetTable.post.responses.481.description" = "InvalidInputException"
"paths./#GetTable.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetTable.post.responses.482.description" = "InternalServiceException"
"paths./#GetTable.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetTable.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetTable.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetTableVersions.parameters.length" = 9
"paths./#GetTableVersions.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetTableVersions.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetTableVersions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetTableVersions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetTableVersions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetTableVersions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetTableVersions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetTableVersions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetTableVersions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetTableVersions.post.description" = "Retrieves a list of strings that identify available versions of a specified table."
"paths./#GetTableVersions.post.operationId" = "GetTableVersions"
"paths./#GetTableVersions.post.parameters.length" = 3
"paths./#GetTableVersions.post.parameters[0].in" = "body"
"paths./#GetTableVersions.post.parameters[0].name" = "body"
"paths./#GetTableVersions.post.parameters[0].required" = true
"paths./#GetTableVersions.post.parameters[0].schema.$ref" = "#/definitions/GetTableVersionsRequest"
"paths./#GetTableVersions.post.parameters[1].description" = "Pagination limit"
"paths./#GetTableVersions.post.parameters[1].in" = "query"
"paths./#GetTableVersions.post.parameters[1].name" = "MaxResults"
"paths./#GetTableVersions.post.parameters[1].required" = false
"paths./#GetTableVersions.post.parameters[1].type" = "string"
"paths./#GetTableVersions.post.parameters[2].description" = "Pagination token"
"paths./#GetTableVersions.post.parameters[2].in" = "query"
"paths./#GetTableVersions.post.parameters[2].name" = "NextToken"
"paths./#GetTableVersions.post.parameters[2].required" = false
"paths./#GetTableVersions.post.parameters[2].type" = "string"
"paths./#GetTableVersions.post.responses.200.description" = "Success"
"paths./#GetTableVersions.post.responses.200.schema.$ref" = "#/definitions/GetTableVersionsResponse"
"paths./#GetTableVersions.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetTableVersions.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetTableVersions.post.responses.481.description" = "InvalidInputException"
"paths./#GetTableVersions.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetTableVersions.post.responses.482.description" = "InternalServiceException"
"paths./#GetTableVersions.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetTableVersions.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetTableVersions.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetTables.parameters.length" = 9
"paths./#GetTables.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetTables.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetTables.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetTables.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetTables.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetTables.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetTables.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetTables.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetTables.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetTables.post.description" = "Retrieves the definitions of some or all of the tables in a given <code>Database</code>."
"paths./#GetTables.post.operationId" = "GetTables"
"paths./#GetTables.post.parameters.length" = 3
"paths./#GetTables.post.parameters[0].in" = "body"
"paths./#GetTables.post.parameters[0].name" = "body"
"paths./#GetTables.post.parameters[0].required" = true
"paths./#GetTables.post.parameters[0].schema.$ref" = "#/definitions/GetTablesRequest"
"paths./#GetTables.post.parameters[1].description" = "Pagination limit"
"paths./#GetTables.post.parameters[1].in" = "query"
"paths./#GetTables.post.parameters[1].name" = "MaxResults"
"paths./#GetTables.post.parameters[1].required" = false
"paths./#GetTables.post.parameters[1].type" = "string"
"paths./#GetTables.post.parameters[2].description" = "Pagination token"
"paths./#GetTables.post.parameters[2].in" = "query"
"paths./#GetTables.post.parameters[2].name" = "NextToken"
"paths./#GetTables.post.parameters[2].required" = false
"paths./#GetTables.post.parameters[2].type" = "string"
"paths./#GetTables.post.responses.200.description" = "Success"
"paths./#GetTables.post.responses.200.schema.$ref" = "#/definitions/GetTablesResponse"
"paths./#GetTables.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetTables.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetTables.post.responses.481.description" = "InvalidInputException"
"paths./#GetTables.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetTables.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetTables.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetTables.post.responses.483.description" = "InternalServiceException"
"paths./#GetTables.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetTrigger.parameters.length" = 9
"paths./#GetTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetTrigger.post.description" = "Retrieves the definition of a trigger."
"paths./#GetTrigger.post.operationId" = "GetTrigger"
"paths./#GetTrigger.post.parameters.length" = 1
"paths./#GetTrigger.post.parameters[0].in" = "body"
"paths./#GetTrigger.post.parameters[0].name" = "body"
"paths./#GetTrigger.post.parameters[0].required" = true
"paths./#GetTrigger.post.parameters[0].schema.$ref" = "#/definitions/GetTriggerRequest"
"paths./#GetTrigger.post.responses.200.description" = "Success"
"paths./#GetTrigger.post.responses.200.schema.$ref" = "#/definitions/GetTriggerResponse"
"paths./#GetTrigger.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetTrigger.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetTrigger.post.responses.481.description" = "InvalidInputException"
"paths./#GetTrigger.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetTrigger.post.responses.482.description" = "InternalServiceException"
"paths./#GetTrigger.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetTrigger.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetTrigger.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetTriggers.parameters.length" = 9
"paths./#GetTriggers.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetTriggers.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetTriggers.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetTriggers.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetTriggers.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetTriggers.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetTriggers.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetTriggers.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetTriggers.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetTriggers.post.description" = "Gets all the triggers associated with a job."
"paths./#GetTriggers.post.operationId" = "GetTriggers"
"paths./#GetTriggers.post.parameters.length" = 3
"paths./#GetTriggers.post.parameters[0].in" = "body"
"paths./#GetTriggers.post.parameters[0].name" = "body"
"paths./#GetTriggers.post.parameters[0].required" = true
"paths./#GetTriggers.post.parameters[0].schema.$ref" = "#/definitions/GetTriggersRequest"
"paths./#GetTriggers.post.parameters[1].description" = "Pagination limit"
"paths./#GetTriggers.post.parameters[1].in" = "query"
"paths./#GetTriggers.post.parameters[1].name" = "MaxResults"
"paths./#GetTriggers.post.parameters[1].required" = false
"paths./#GetTriggers.post.parameters[1].type" = "string"
"paths./#GetTriggers.post.parameters[2].description" = "Pagination token"
"paths./#GetTriggers.post.parameters[2].in" = "query"
"paths./#GetTriggers.post.parameters[2].name" = "NextToken"
"paths./#GetTriggers.post.parameters[2].required" = false
"paths./#GetTriggers.post.parameters[2].type" = "string"
"paths./#GetTriggers.post.responses.200.description" = "Success"
"paths./#GetTriggers.post.responses.200.schema.$ref" = "#/definitions/GetTriggersResponse"
"paths./#GetTriggers.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetTriggers.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetTriggers.post.responses.481.description" = "InvalidInputException"
"paths./#GetTriggers.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetTriggers.post.responses.482.description" = "InternalServiceException"
"paths./#GetTriggers.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetTriggers.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetTriggers.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetUserDefinedFunction.parameters.length" = 9
"paths./#GetUserDefinedFunction.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetUserDefinedFunction.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetUserDefinedFunction.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetUserDefinedFunction.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetUserDefinedFunction.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetUserDefinedFunction.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetUserDefinedFunction.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetUserDefinedFunction.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetUserDefinedFunction.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetUserDefinedFunction.post.description" = "Retrieves a specified function definition from the Data Catalog."
"paths./#GetUserDefinedFunction.post.operationId" = "GetUserDefinedFunction"
"paths./#GetUserDefinedFunction.post.parameters.length" = 1
"paths./#GetUserDefinedFunction.post.parameters[0].in" = "body"
"paths./#GetUserDefinedFunction.post.parameters[0].name" = "body"
"paths./#GetUserDefinedFunction.post.parameters[0].required" = true
"paths./#GetUserDefinedFunction.post.parameters[0].schema.$ref" = "#/definitions/GetUserDefinedFunctionRequest"
"paths./#GetUserDefinedFunction.post.responses.200.description" = "Success"
"paths./#GetUserDefinedFunction.post.responses.200.schema.$ref" = "#/definitions/GetUserDefinedFunctionResponse"
"paths./#GetUserDefinedFunction.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetUserDefinedFunction.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetUserDefinedFunction.post.responses.481.description" = "InvalidInputException"
"paths./#GetUserDefinedFunction.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetUserDefinedFunction.post.responses.482.description" = "InternalServiceException"
"paths./#GetUserDefinedFunction.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#GetUserDefinedFunction.post.responses.483.description" = "OperationTimeoutException"
"paths./#GetUserDefinedFunction.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetUserDefinedFunctions.parameters.length" = 9
"paths./#GetUserDefinedFunctions.parameters[0].$ref" = "#/parameters/Action"
"paths./#GetUserDefinedFunctions.parameters[1].$ref" = "#/parameters/Version"
"paths./#GetUserDefinedFunctions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#GetUserDefinedFunctions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#GetUserDefinedFunctions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#GetUserDefinedFunctions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#GetUserDefinedFunctions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#GetUserDefinedFunctions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#GetUserDefinedFunctions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#GetUserDefinedFunctions.post.description" = "Retrieves a multiple function definitions from the Data Catalog."
"paths./#GetUserDefinedFunctions.post.operationId" = "GetUserDefinedFunctions"
"paths./#GetUserDefinedFunctions.post.parameters.length" = 3
"paths./#GetUserDefinedFunctions.post.parameters[0].in" = "body"
"paths./#GetUserDefinedFunctions.post.parameters[0].name" = "body"
"paths./#GetUserDefinedFunctions.post.parameters[0].required" = true
"paths./#GetUserDefinedFunctions.post.parameters[0].schema.$ref" = "#/definitions/GetUserDefinedFunctionsRequest"
"paths./#GetUserDefinedFunctions.post.parameters[1].description" = "Pagination limit"
"paths./#GetUserDefinedFunctions.post.parameters[1].in" = "query"
"paths./#GetUserDefinedFunctions.post.parameters[1].name" = "MaxResults"
"paths./#GetUserDefinedFunctions.post.parameters[1].required" = false
"paths./#GetUserDefinedFunctions.post.parameters[1].type" = "string"
"paths./#GetUserDefinedFunctions.post.parameters[2].description" = "Pagination token"
"paths./#GetUserDefinedFunctions.post.parameters[2].in" = "query"
"paths./#GetUserDefinedFunctions.post.parameters[2].name" = "NextToken"
"paths./#GetUserDefinedFunctions.post.parameters[2].required" = false
"paths./#GetUserDefinedFunctions.post.parameters[2].type" = "string"
"paths./#GetUserDefinedFunctions.post.responses.200.description" = "Success"
"paths./#GetUserDefinedFunctions.post.responses.200.schema.$ref" = "#/definitions/GetUserDefinedFunctionsResponse"
"paths./#GetUserDefinedFunctions.post.responses.480.description" = "EntityNotFoundException"
"paths./#GetUserDefinedFunctions.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#GetUserDefinedFunctions.post.responses.481.description" = "InvalidInputException"
"paths./#GetUserDefinedFunctions.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#GetUserDefinedFunctions.post.responses.482.description" = "OperationTimeoutException"
"paths./#GetUserDefinedFunctions.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#GetUserDefinedFunctions.post.responses.483.description" = "InternalServiceException"
"paths./#GetUserDefinedFunctions.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#ImportCatalogToGlue.parameters.length" = 9
"paths./#ImportCatalogToGlue.parameters[0].$ref" = "#/parameters/Action"
"paths./#ImportCatalogToGlue.parameters[1].$ref" = "#/parameters/Version"
"paths./#ImportCatalogToGlue.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#ImportCatalogToGlue.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#ImportCatalogToGlue.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#ImportCatalogToGlue.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#ImportCatalogToGlue.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#ImportCatalogToGlue.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#ImportCatalogToGlue.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#ImportCatalogToGlue.post.description" = "Imports an existing Athena Data Catalog to AWS Glue"
"paths./#ImportCatalogToGlue.post.operationId" = "ImportCatalogToGlue"
"paths./#ImportCatalogToGlue.post.parameters.length" = 1
"paths./#ImportCatalogToGlue.post.parameters[0].in" = "body"
"paths./#ImportCatalogToGlue.post.parameters[0].name" = "body"
"paths./#ImportCatalogToGlue.post.parameters[0].required" = true
"paths./#ImportCatalogToGlue.post.parameters[0].schema.$ref" = "#/definitions/ImportCatalogToGlueRequest"
"paths./#ImportCatalogToGlue.post.responses.200.description" = "Success"
"paths./#ImportCatalogToGlue.post.responses.200.schema.$ref" = "#/definitions/ImportCatalogToGlueResponse"
"paths./#ImportCatalogToGlue.post.responses.480.description" = "InternalServiceException"
"paths./#ImportCatalogToGlue.post.responses.480.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#ImportCatalogToGlue.post.responses.481.description" = "OperationTimeoutException"
"paths./#ImportCatalogToGlue.post.responses.481.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#ResetJobBookmark.parameters.length" = 9
"paths./#ResetJobBookmark.parameters[0].$ref" = "#/parameters/Action"
"paths./#ResetJobBookmark.parameters[1].$ref" = "#/parameters/Version"
"paths./#ResetJobBookmark.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#ResetJobBookmark.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#ResetJobBookmark.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#ResetJobBookmark.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#ResetJobBookmark.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#ResetJobBookmark.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#ResetJobBookmark.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#ResetJobBookmark.post.description" = "Resets a bookmark entry."
"paths./#ResetJobBookmark.post.operationId" = "ResetJobBookmark"
"paths./#ResetJobBookmark.post.parameters.length" = 1
"paths./#ResetJobBookmark.post.parameters[0].in" = "body"
"paths./#ResetJobBookmark.post.parameters[0].name" = "body"
"paths./#ResetJobBookmark.post.parameters[0].required" = true
"paths./#ResetJobBookmark.post.parameters[0].schema.$ref" = "#/definitions/ResetJobBookmarkRequest"
"paths./#ResetJobBookmark.post.responses.200.description" = "Success"
"paths./#ResetJobBookmark.post.responses.200.schema.$ref" = "#/definitions/ResetJobBookmarkResponse"
"paths./#ResetJobBookmark.post.responses.480.description" = "EntityNotFoundException"
"paths./#ResetJobBookmark.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#ResetJobBookmark.post.responses.481.description" = "InvalidInputException"
"paths./#ResetJobBookmark.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#ResetJobBookmark.post.responses.482.description" = "InternalServiceException"
"paths./#ResetJobBookmark.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#ResetJobBookmark.post.responses.483.description" = "OperationTimeoutException"
"paths./#ResetJobBookmark.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StartCrawler.parameters.length" = 9
"paths./#StartCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartCrawler.post.description" = "Starts a crawl using the specified <code>Crawler</code>, regardless of what is scheduled. If the <code>Crawler</code> is already running, does nothing."
"paths./#StartCrawler.post.operationId" = "StartCrawler"
"paths./#StartCrawler.post.parameters.length" = 1
"paths./#StartCrawler.post.parameters[0].in" = "body"
"paths./#StartCrawler.post.parameters[0].name" = "body"
"paths./#StartCrawler.post.parameters[0].required" = true
"paths./#StartCrawler.post.parameters[0].schema.$ref" = "#/definitions/StartCrawlerRequest"
"paths./#StartCrawler.post.responses.200.description" = "Success"
"paths./#StartCrawler.post.responses.200.schema.$ref" = "#/definitions/StartCrawlerResponse"
"paths./#StartCrawler.post.responses.480.description" = "EntityNotFoundException"
"paths./#StartCrawler.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StartCrawler.post.responses.481.description" = "CrawlerRunningException"
"paths./#StartCrawler.post.responses.481.schema.$ref" = "#/definitions/CrawlerRunningException"
"paths./#StartCrawler.post.responses.482.description" = "OperationTimeoutException"
"paths./#StartCrawler.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StartCrawlerSchedule.parameters.length" = 9
"paths./#StartCrawlerSchedule.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartCrawlerSchedule.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartCrawlerSchedule.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartCrawlerSchedule.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartCrawlerSchedule.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartCrawlerSchedule.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartCrawlerSchedule.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartCrawlerSchedule.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartCrawlerSchedule.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartCrawlerSchedule.post.description" = "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>."
"paths./#StartCrawlerSchedule.post.operationId" = "StartCrawlerSchedule"
"paths./#StartCrawlerSchedule.post.parameters.length" = 1
"paths./#StartCrawlerSchedule.post.parameters[0].in" = "body"
"paths./#StartCrawlerSchedule.post.parameters[0].name" = "body"
"paths./#StartCrawlerSchedule.post.parameters[0].required" = true
"paths./#StartCrawlerSchedule.post.parameters[0].schema.$ref" = "#/definitions/StartCrawlerScheduleRequest"
"paths./#StartCrawlerSchedule.post.responses.200.description" = "Success"
"paths./#StartCrawlerSchedule.post.responses.200.schema.$ref" = "#/definitions/StartCrawlerScheduleResponse"
"paths./#StartCrawlerSchedule.post.responses.480.description" = "EntityNotFoundException"
"paths./#StartCrawlerSchedule.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StartCrawlerSchedule.post.responses.481.description" = "SchedulerRunningException"
"paths./#StartCrawlerSchedule.post.responses.481.schema.$ref" = "#/definitions/SchedulerRunningException"
"paths./#StartCrawlerSchedule.post.responses.482.description" = "SchedulerTransitioningException"
"paths./#StartCrawlerSchedule.post.responses.482.schema.$ref" = "#/definitions/SchedulerTransitioningException"
"paths./#StartCrawlerSchedule.post.responses.483.description" = "NoScheduleException"
"paths./#StartCrawlerSchedule.post.responses.483.schema.$ref" = "#/definitions/NoScheduleException"
"paths./#StartCrawlerSchedule.post.responses.484.description" = "OperationTimeoutException"
"paths./#StartCrawlerSchedule.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StartJobRun.parameters.length" = 9
"paths./#StartJobRun.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartJobRun.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartJobRun.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartJobRun.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartJobRun.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartJobRun.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartJobRun.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartJobRun.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartJobRun.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartJobRun.post.description" = "Runs a job."
"paths./#StartJobRun.post.operationId" = "StartJobRun"
"paths./#StartJobRun.post.parameters.length" = 1
"paths./#StartJobRun.post.parameters[0].in" = "body"
"paths./#StartJobRun.post.parameters[0].name" = "body"
"paths./#StartJobRun.post.parameters[0].required" = true
"paths./#StartJobRun.post.parameters[0].schema.$ref" = "#/definitions/StartJobRunRequest"
"paths./#StartJobRun.post.responses.200.description" = "Success"
"paths./#StartJobRun.post.responses.200.schema.$ref" = "#/definitions/StartJobRunResponse"
"paths./#StartJobRun.post.responses.480.description" = "InvalidInputException"
"paths./#StartJobRun.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#StartJobRun.post.responses.481.description" = "EntityNotFoundException"
"paths./#StartJobRun.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StartJobRun.post.responses.482.description" = "InternalServiceException"
"paths./#StartJobRun.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#StartJobRun.post.responses.483.description" = "OperationTimeoutException"
"paths./#StartJobRun.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StartJobRun.post.responses.484.description" = "ResourceNumberLimitExceededException"
"paths./#StartJobRun.post.responses.484.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#StartJobRun.post.responses.485.description" = "ConcurrentRunsExceededException"
"paths./#StartJobRun.post.responses.485.schema.$ref" = "#/definitions/ConcurrentRunsExceededException"
"paths./#StartTrigger.parameters.length" = 9
"paths./#StartTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartTrigger.post.description" = "Starts an existing trigger."
"paths./#StartTrigger.post.operationId" = "StartTrigger"
"paths./#StartTrigger.post.parameters.length" = 1
"paths./#StartTrigger.post.parameters[0].in" = "body"
"paths./#StartTrigger.post.parameters[0].name" = "body"
"paths./#StartTrigger.post.parameters[0].required" = true
"paths./#StartTrigger.post.parameters[0].schema.$ref" = "#/definitions/StartTriggerRequest"
"paths./#StartTrigger.post.responses.200.description" = "Success"
"paths./#StartTrigger.post.responses.200.schema.$ref" = "#/definitions/StartTriggerResponse"
"paths./#StartTrigger.post.responses.480.description" = "InvalidInputException"
"paths./#StartTrigger.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#StartTrigger.post.responses.481.description" = "InternalServiceException"
"paths./#StartTrigger.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#StartTrigger.post.responses.482.description" = "EntityNotFoundException"
"paths./#StartTrigger.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StartTrigger.post.responses.483.description" = "OperationTimeoutException"
"paths./#StartTrigger.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StartTrigger.post.responses.484.description" = "ResourceNumberLimitExceededException"
"paths./#StartTrigger.post.responses.484.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./#StartTrigger.post.responses.485.description" = "ConcurrentRunsExceededException"
"paths./#StartTrigger.post.responses.485.schema.$ref" = "#/definitions/ConcurrentRunsExceededException"
"paths./#StopCrawler.parameters.length" = 9
"paths./#StopCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#StopCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#StopCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StopCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StopCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StopCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StopCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StopCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StopCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StopCrawler.post.description" = "If the specified <code>Crawler</code> is running, stops the crawl."
"paths./#StopCrawler.post.operationId" = "StopCrawler"
"paths./#StopCrawler.post.parameters.length" = 1
"paths./#StopCrawler.post.parameters[0].in" = "body"
"paths./#StopCrawler.post.parameters[0].name" = "body"
"paths./#StopCrawler.post.parameters[0].required" = true
"paths./#StopCrawler.post.parameters[0].schema.$ref" = "#/definitions/StopCrawlerRequest"
"paths./#StopCrawler.post.responses.200.description" = "Success"
"paths./#StopCrawler.post.responses.200.schema.$ref" = "#/definitions/StopCrawlerResponse"
"paths./#StopCrawler.post.responses.480.description" = "EntityNotFoundException"
"paths./#StopCrawler.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StopCrawler.post.responses.481.description" = "CrawlerNotRunningException"
"paths./#StopCrawler.post.responses.481.schema.$ref" = "#/definitions/CrawlerNotRunningException"
"paths./#StopCrawler.post.responses.482.description" = "CrawlerStoppingException"
"paths./#StopCrawler.post.responses.482.schema.$ref" = "#/definitions/CrawlerStoppingException"
"paths./#StopCrawler.post.responses.483.description" = "OperationTimeoutException"
"paths./#StopCrawler.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StopCrawlerSchedule.parameters.length" = 9
"paths./#StopCrawlerSchedule.parameters[0].$ref" = "#/parameters/Action"
"paths./#StopCrawlerSchedule.parameters[1].$ref" = "#/parameters/Version"
"paths./#StopCrawlerSchedule.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StopCrawlerSchedule.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StopCrawlerSchedule.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StopCrawlerSchedule.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StopCrawlerSchedule.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StopCrawlerSchedule.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StopCrawlerSchedule.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StopCrawlerSchedule.post.description" = "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running."
"paths./#StopCrawlerSchedule.post.operationId" = "StopCrawlerSchedule"
"paths./#StopCrawlerSchedule.post.parameters.length" = 1
"paths./#StopCrawlerSchedule.post.parameters[0].in" = "body"
"paths./#StopCrawlerSchedule.post.parameters[0].name" = "body"
"paths./#StopCrawlerSchedule.post.parameters[0].required" = true
"paths./#StopCrawlerSchedule.post.parameters[0].schema.$ref" = "#/definitions/StopCrawlerScheduleRequest"
"paths./#StopCrawlerSchedule.post.responses.200.description" = "Success"
"paths./#StopCrawlerSchedule.post.responses.200.schema.$ref" = "#/definitions/StopCrawlerScheduleResponse"
"paths./#StopCrawlerSchedule.post.responses.480.description" = "EntityNotFoundException"
"paths./#StopCrawlerSchedule.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StopCrawlerSchedule.post.responses.481.description" = "SchedulerNotRunningException"
"paths./#StopCrawlerSchedule.post.responses.481.schema.$ref" = "#/definitions/SchedulerNotRunningException"
"paths./#StopCrawlerSchedule.post.responses.482.description" = "SchedulerTransitioningException"
"paths./#StopCrawlerSchedule.post.responses.482.schema.$ref" = "#/definitions/SchedulerTransitioningException"
"paths./#StopCrawlerSchedule.post.responses.483.description" = "OperationTimeoutException"
"paths./#StopCrawlerSchedule.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#StopTrigger.parameters.length" = 9
"paths./#StopTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#StopTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#StopTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StopTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StopTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StopTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StopTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StopTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StopTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StopTrigger.post.description" = "Stops a specified trigger."
"paths./#StopTrigger.post.operationId" = "StopTrigger"
"paths./#StopTrigger.post.parameters.length" = 1
"paths./#StopTrigger.post.parameters[0].in" = "body"
"paths./#StopTrigger.post.parameters[0].name" = "body"
"paths./#StopTrigger.post.parameters[0].required" = true
"paths./#StopTrigger.post.parameters[0].schema.$ref" = "#/definitions/StopTriggerRequest"
"paths./#StopTrigger.post.responses.200.description" = "Success"
"paths./#StopTrigger.post.responses.200.schema.$ref" = "#/definitions/StopTriggerResponse"
"paths./#StopTrigger.post.responses.480.description" = "InvalidInputException"
"paths./#StopTrigger.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#StopTrigger.post.responses.481.description" = "InternalServiceException"
"paths./#StopTrigger.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#StopTrigger.post.responses.482.description" = "EntityNotFoundException"
"paths./#StopTrigger.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#StopTrigger.post.responses.483.description" = "OperationTimeoutException"
"paths./#StopTrigger.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateClassifier.parameters.length" = 9
"paths./#UpdateClassifier.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateClassifier.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateClassifier.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateClassifier.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateClassifier.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateClassifier.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateClassifier.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateClassifier.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateClassifier.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateClassifier.post.description" = "Modifies an existing <code>Classifier</code>."
"paths./#UpdateClassifier.post.operationId" = "UpdateClassifier"
"paths./#UpdateClassifier.post.parameters.length" = 1
"paths./#UpdateClassifier.post.parameters[0].in" = "body"
"paths./#UpdateClassifier.post.parameters[0].name" = "body"
"paths./#UpdateClassifier.post.parameters[0].required" = true
"paths./#UpdateClassifier.post.parameters[0].schema.$ref" = "#/definitions/UpdateClassifierRequest"
"paths./#UpdateClassifier.post.responses.200.description" = "Success"
"paths./#UpdateClassifier.post.responses.200.schema.$ref" = "#/definitions/UpdateClassifierResponse"
"paths./#UpdateClassifier.post.responses.480.description" = "InvalidInputException"
"paths./#UpdateClassifier.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateClassifier.post.responses.481.description" = "VersionMismatchException"
"paths./#UpdateClassifier.post.responses.481.schema.$ref" = "#/definitions/VersionMismatchException"
"paths./#UpdateClassifier.post.responses.482.description" = "EntityNotFoundException"
"paths./#UpdateClassifier.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateClassifier.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateClassifier.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateConnection.parameters.length" = 9
"paths./#UpdateConnection.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateConnection.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateConnection.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateConnection.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateConnection.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateConnection.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateConnection.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateConnection.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateConnection.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateConnection.post.description" = "Updates a connection definition in the Data Catalog."
"paths./#UpdateConnection.post.operationId" = "UpdateConnection"
"paths./#UpdateConnection.post.parameters.length" = 1
"paths./#UpdateConnection.post.parameters[0].in" = "body"
"paths./#UpdateConnection.post.parameters[0].name" = "body"
"paths./#UpdateConnection.post.parameters[0].required" = true
"paths./#UpdateConnection.post.parameters[0].schema.$ref" = "#/definitions/UpdateConnectionRequest"
"paths./#UpdateConnection.post.responses.200.description" = "Success"
"paths./#UpdateConnection.post.responses.200.schema.$ref" = "#/definitions/UpdateConnectionResponse"
"paths./#UpdateConnection.post.responses.480.description" = "InvalidInputException"
"paths./#UpdateConnection.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateConnection.post.responses.481.description" = "EntityNotFoundException"
"paths./#UpdateConnection.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateConnection.post.responses.482.description" = "OperationTimeoutException"
"paths./#UpdateConnection.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateCrawler.parameters.length" = 9
"paths./#UpdateCrawler.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateCrawler.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateCrawler.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateCrawler.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateCrawler.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateCrawler.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateCrawler.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateCrawler.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateCrawler.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateCrawler.post.description" = "Updates a <code>Crawler</code>. If a <code>Crawler</code> is running, you must stop it using <code>StopCrawler</code> before updating it."
"paths./#UpdateCrawler.post.operationId" = "UpdateCrawler"
"paths./#UpdateCrawler.post.parameters.length" = 1
"paths./#UpdateCrawler.post.parameters[0].in" = "body"
"paths./#UpdateCrawler.post.parameters[0].name" = "body"
"paths./#UpdateCrawler.post.parameters[0].required" = true
"paths./#UpdateCrawler.post.parameters[0].schema.$ref" = "#/definitions/UpdateCrawlerRequest"
"paths./#UpdateCrawler.post.responses.200.description" = "Success"
"paths./#UpdateCrawler.post.responses.200.schema.$ref" = "#/definitions/UpdateCrawlerResponse"
"paths./#UpdateCrawler.post.responses.480.description" = "InvalidInputException"
"paths./#UpdateCrawler.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateCrawler.post.responses.481.description" = "VersionMismatchException"
"paths./#UpdateCrawler.post.responses.481.schema.$ref" = "#/definitions/VersionMismatchException"
"paths./#UpdateCrawler.post.responses.482.description" = "EntityNotFoundException"
"paths./#UpdateCrawler.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateCrawler.post.responses.483.description" = "CrawlerRunningException"
"paths./#UpdateCrawler.post.responses.483.schema.$ref" = "#/definitions/CrawlerRunningException"
"paths./#UpdateCrawler.post.responses.484.description" = "OperationTimeoutException"
"paths./#UpdateCrawler.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateCrawlerSchedule.parameters.length" = 9
"paths./#UpdateCrawlerSchedule.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateCrawlerSchedule.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateCrawlerSchedule.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateCrawlerSchedule.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateCrawlerSchedule.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateCrawlerSchedule.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateCrawlerSchedule.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateCrawlerSchedule.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateCrawlerSchedule.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateCrawlerSchedule.post.description" = "Updates the schedule of a crawler using a Cron expression. "
"paths./#UpdateCrawlerSchedule.post.operationId" = "UpdateCrawlerSchedule"
"paths./#UpdateCrawlerSchedule.post.parameters.length" = 1
"paths./#UpdateCrawlerSchedule.post.parameters[0].in" = "body"
"paths./#UpdateCrawlerSchedule.post.parameters[0].name" = "body"
"paths./#UpdateCrawlerSchedule.post.parameters[0].required" = true
"paths./#UpdateCrawlerSchedule.post.parameters[0].schema.$ref" = "#/definitions/UpdateCrawlerScheduleRequest"
"paths./#UpdateCrawlerSchedule.post.responses.200.description" = "Success"
"paths./#UpdateCrawlerSchedule.post.responses.200.schema.$ref" = "#/definitions/UpdateCrawlerScheduleResponse"
"paths./#UpdateCrawlerSchedule.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdateCrawlerSchedule.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateCrawlerSchedule.post.responses.481.description" = "InvalidInputException"
"paths./#UpdateCrawlerSchedule.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateCrawlerSchedule.post.responses.482.description" = "VersionMismatchException"
"paths./#UpdateCrawlerSchedule.post.responses.482.schema.$ref" = "#/definitions/VersionMismatchException"
"paths./#UpdateCrawlerSchedule.post.responses.483.description" = "SchedulerTransitioningException"
"paths./#UpdateCrawlerSchedule.post.responses.483.schema.$ref" = "#/definitions/SchedulerTransitioningException"
"paths./#UpdateCrawlerSchedule.post.responses.484.description" = "OperationTimeoutException"
"paths./#UpdateCrawlerSchedule.post.responses.484.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateDatabase.parameters.length" = 9
"paths./#UpdateDatabase.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateDatabase.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateDatabase.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateDatabase.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateDatabase.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateDatabase.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateDatabase.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateDatabase.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateDatabase.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateDatabase.post.description" = "Updates an existing database definition in a Data Catalog."
"paths./#UpdateDatabase.post.operationId" = "UpdateDatabase"
"paths./#UpdateDatabase.post.parameters.length" = 1
"paths./#UpdateDatabase.post.parameters[0].in" = "body"
"paths./#UpdateDatabase.post.parameters[0].name" = "body"
"paths./#UpdateDatabase.post.parameters[0].required" = true
"paths./#UpdateDatabase.post.parameters[0].schema.$ref" = "#/definitions/UpdateDatabaseRequest"
"paths./#UpdateDatabase.post.responses.200.description" = "Success"
"paths./#UpdateDatabase.post.responses.200.schema.$ref" = "#/definitions/UpdateDatabaseResponse"
"paths./#UpdateDatabase.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdateDatabase.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateDatabase.post.responses.481.description" = "InvalidInputException"
"paths./#UpdateDatabase.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateDatabase.post.responses.482.description" = "InternalServiceException"
"paths./#UpdateDatabase.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateDatabase.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateDatabase.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateDevEndpoint.parameters.length" = 9
"paths./#UpdateDevEndpoint.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateDevEndpoint.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateDevEndpoint.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateDevEndpoint.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateDevEndpoint.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateDevEndpoint.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateDevEndpoint.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateDevEndpoint.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateDevEndpoint.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateDevEndpoint.post.description" = "Updates a specified DevEndpoint."
"paths./#UpdateDevEndpoint.post.operationId" = "UpdateDevEndpoint"
"paths./#UpdateDevEndpoint.post.parameters.length" = 1
"paths./#UpdateDevEndpoint.post.parameters[0].in" = "body"
"paths./#UpdateDevEndpoint.post.parameters[0].name" = "body"
"paths./#UpdateDevEndpoint.post.parameters[0].required" = true
"paths./#UpdateDevEndpoint.post.parameters[0].schema.$ref" = "#/definitions/UpdateDevEndpointRequest"
"paths./#UpdateDevEndpoint.post.responses.200.description" = "Success"
"paths./#UpdateDevEndpoint.post.responses.200.schema.$ref" = "#/definitions/UpdateDevEndpointResponse"
"paths./#UpdateDevEndpoint.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdateDevEndpoint.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateDevEndpoint.post.responses.481.description" = "InternalServiceException"
"paths./#UpdateDevEndpoint.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateDevEndpoint.post.responses.482.description" = "OperationTimeoutException"
"paths./#UpdateDevEndpoint.post.responses.482.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateDevEndpoint.post.responses.483.description" = "InvalidInputException"
"paths./#UpdateDevEndpoint.post.responses.483.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateDevEndpoint.post.responses.484.description" = "ValidationException"
"paths./#UpdateDevEndpoint.post.responses.484.schema.$ref" = "#/definitions/ValidationException"
"paths./#UpdateJob.parameters.length" = 9
"paths./#UpdateJob.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateJob.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateJob.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateJob.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateJob.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateJob.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateJob.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateJob.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateJob.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateJob.post.description" = "Updates an existing job definition."
"paths./#UpdateJob.post.operationId" = "UpdateJob"
"paths./#UpdateJob.post.parameters.length" = 1
"paths./#UpdateJob.post.parameters[0].in" = "body"
"paths./#UpdateJob.post.parameters[0].name" = "body"
"paths./#UpdateJob.post.parameters[0].required" = true
"paths./#UpdateJob.post.parameters[0].schema.$ref" = "#/definitions/UpdateJobRequest"
"paths./#UpdateJob.post.responses.200.description" = "Success"
"paths./#UpdateJob.post.responses.200.schema.$ref" = "#/definitions/UpdateJobResponse"
"paths./#UpdateJob.post.responses.480.description" = "InvalidInputException"
"paths./#UpdateJob.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateJob.post.responses.481.description" = "EntityNotFoundException"
"paths./#UpdateJob.post.responses.481.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateJob.post.responses.482.description" = "InternalServiceException"
"paths./#UpdateJob.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateJob.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateJob.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdatePartition.parameters.length" = 9
"paths./#UpdatePartition.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdatePartition.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdatePartition.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdatePartition.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdatePartition.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdatePartition.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdatePartition.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdatePartition.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdatePartition.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdatePartition.post.description" = "Updates a partition."
"paths./#UpdatePartition.post.operationId" = "UpdatePartition"
"paths./#UpdatePartition.post.parameters.length" = 1
"paths./#UpdatePartition.post.parameters[0].in" = "body"
"paths./#UpdatePartition.post.parameters[0].name" = "body"
"paths./#UpdatePartition.post.parameters[0].required" = true
"paths./#UpdatePartition.post.parameters[0].schema.$ref" = "#/definitions/UpdatePartitionRequest"
"paths./#UpdatePartition.post.responses.200.description" = "Success"
"paths./#UpdatePartition.post.responses.200.schema.$ref" = "#/definitions/UpdatePartitionResponse"
"paths./#UpdatePartition.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdatePartition.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdatePartition.post.responses.481.description" = "InvalidInputException"
"paths./#UpdatePartition.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdatePartition.post.responses.482.description" = "InternalServiceException"
"paths./#UpdatePartition.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdatePartition.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdatePartition.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateTable.parameters.length" = 9
"paths./#UpdateTable.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateTable.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateTable.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateTable.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateTable.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateTable.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateTable.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateTable.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateTable.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateTable.post.description" = "Updates a metadata table in the Data Catalog."
"paths./#UpdateTable.post.operationId" = "UpdateTable"
"paths./#UpdateTable.post.parameters.length" = 1
"paths./#UpdateTable.post.parameters[0].in" = "body"
"paths./#UpdateTable.post.parameters[0].name" = "body"
"paths./#UpdateTable.post.parameters[0].required" = true
"paths./#UpdateTable.post.parameters[0].schema.$ref" = "#/definitions/UpdateTableRequest"
"paths./#UpdateTable.post.responses.200.description" = "Success"
"paths./#UpdateTable.post.responses.200.schema.$ref" = "#/definitions/UpdateTableResponse"
"paths./#UpdateTable.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdateTable.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateTable.post.responses.481.description" = "InvalidInputException"
"paths./#UpdateTable.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateTable.post.responses.482.description" = "InternalServiceException"
"paths./#UpdateTable.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateTable.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateTable.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateTable.post.responses.484.description" = "ConcurrentModificationException"
"paths./#UpdateTable.post.responses.484.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#UpdateTrigger.parameters.length" = 9
"paths./#UpdateTrigger.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateTrigger.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateTrigger.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateTrigger.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateTrigger.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateTrigger.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateTrigger.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateTrigger.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateTrigger.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateTrigger.post.description" = "Updates a trigger definition."
"paths./#UpdateTrigger.post.operationId" = "UpdateTrigger"
"paths./#UpdateTrigger.post.parameters.length" = 1
"paths./#UpdateTrigger.post.parameters[0].in" = "body"
"paths./#UpdateTrigger.post.parameters[0].name" = "body"
"paths./#UpdateTrigger.post.parameters[0].required" = true
"paths./#UpdateTrigger.post.parameters[0].schema.$ref" = "#/definitions/UpdateTriggerRequest"
"paths./#UpdateTrigger.post.responses.200.description" = "Success"
"paths./#UpdateTrigger.post.responses.200.schema.$ref" = "#/definitions/UpdateTriggerResponse"
"paths./#UpdateTrigger.post.responses.480.description" = "InvalidInputException"
"paths./#UpdateTrigger.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateTrigger.post.responses.481.description" = "InternalServiceException"
"paths./#UpdateTrigger.post.responses.481.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateTrigger.post.responses.482.description" = "EntityNotFoundException"
"paths./#UpdateTrigger.post.responses.482.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateTrigger.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateTrigger.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./#UpdateUserDefinedFunction.parameters.length" = 9
"paths./#UpdateUserDefinedFunction.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateUserDefinedFunction.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateUserDefinedFunction.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateUserDefinedFunction.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateUserDefinedFunction.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateUserDefinedFunction.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateUserDefinedFunction.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateUserDefinedFunction.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateUserDefinedFunction.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateUserDefinedFunction.post.description" = "Updates an existing function definition in the Data Catalog."
"paths./#UpdateUserDefinedFunction.post.operationId" = "UpdateUserDefinedFunction"
"paths./#UpdateUserDefinedFunction.post.parameters.length" = 1
"paths./#UpdateUserDefinedFunction.post.parameters[0].in" = "body"
"paths./#UpdateUserDefinedFunction.post.parameters[0].name" = "body"
"paths./#UpdateUserDefinedFunction.post.parameters[0].required" = true
"paths./#UpdateUserDefinedFunction.post.parameters[0].schema.$ref" = "#/definitions/UpdateUserDefinedFunctionRequest"
"paths./#UpdateUserDefinedFunction.post.responses.200.description" = "Success"
"paths./#UpdateUserDefinedFunction.post.responses.200.schema.$ref" = "#/definitions/UpdateUserDefinedFunctionResponse"
"paths./#UpdateUserDefinedFunction.post.responses.480.description" = "EntityNotFoundException"
"paths./#UpdateUserDefinedFunction.post.responses.480.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./#UpdateUserDefinedFunction.post.responses.481.description" = "InvalidInputException"
"paths./#UpdateUserDefinedFunction.post.responses.481.schema.$ref" = "#/definitions/InvalidInputException"
"paths./#UpdateUserDefinedFunction.post.responses.482.description" = "InternalServiceException"
"paths./#UpdateUserDefinedFunction.post.responses.482.schema.$ref" = "#/definitions/InternalServiceException"
"paths./#UpdateUserDefinedFunction.post.responses.483.description" = "OperationTimeoutException"
"paths./#UpdateUserDefinedFunction.post.responses.483.schema.$ref" = "#/definitions/OperationTimeoutException"
"paths./.parameters.length" = 9
"paths./.parameters[0].$ref" = "#/parameters/Action"
"paths./.parameters[1].$ref" = "#/parameters/Version"
"paths./.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./.post.description" = "Creates one or more partitions in a batch operation."
"paths./.post.operationId" = "BatchCreatePartition"
"paths./.post.parameters.length" = 1
"paths./.post.parameters[0].in" = "body"
"paths./.post.parameters[0].name" = "body"
"paths./.post.parameters[0].required" = true
"paths./.post.parameters[0].schema.$ref" = "#/definitions/BatchCreatePartitionRequest"
"paths./.post.responses.200.description" = "Success"
"paths./.post.responses.200.schema.$ref" = "#/definitions/BatchCreatePartitionResponse"
"paths./.post.responses.480.description" = "InvalidInputException"
"paths./.post.responses.480.schema.$ref" = "#/definitions/InvalidInputException"
"paths./.post.responses.481.description" = "AlreadyExistsException"
"paths./.post.responses.481.schema.$ref" = "#/definitions/AlreadyExistsException"
"paths./.post.responses.482.description" = "ResourceNumberLimitExceededException"
"paths./.post.responses.482.schema.$ref" = "#/definitions/ResourceNumberLimitExceededException"
"paths./.post.responses.483.description" = "InternalServiceException"
"paths./.post.responses.483.schema.$ref" = "#/definitions/InternalServiceException"
"paths./.post.responses.484.description" = "EntityNotFoundException"
"paths./.post.responses.484.schema.$ref" = "#/definitions/EntityNotFoundException"
"paths./.post.responses.485.description" = "OperationTimeoutException"
"paths./.post.responses.485.schema.$ref" = "#/definitions/OperationTimeoutException"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "http"
"security.length" = 1
"securityDefinitions.hmac.description" = "Amazon Signature authorization v4"
"securityDefinitions.hmac.in" = "header"
"securityDefinitions.hmac.name" = "Authorization"
"securityDefinitions.hmac.type" = "apiKey"
"securityDefinitions.hmac.x-amazon-apigateway-authtype" = "awsSigv4"
"security[0].hmac.length" = 0
swagger = "2.0"
x-hasEquivalentPaths = true
