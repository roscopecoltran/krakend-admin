basePath: /
consumes.length: 1
consumes[0]: application/json
definitions.AddTagsToStreamInput.description: Represents the input for <code>AddTagsToStream</code>.
definitions.AddTagsToStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.AddTagsToStreamInput.properties.StreamName.description: The name of the
  stream.
definitions.AddTagsToStreamInput.properties.Tags.$ref: '#/definitions/TagMap'
definitions.AddTagsToStreamInput.properties.Tags.description: The set of key-value
  pairs to use to create the tags.
definitions.AddTagsToStreamInput.required.length: 2
definitions.AddTagsToStreamInput.required[0]: StreamName
definitions.AddTagsToStreamInput.required[1]: Tags
definitions.AddTagsToStreamInput.type: object
definitions.BooleanObject.type: boolean
definitions.CreateStreamInput.description: Represents the input for <code>CreateStream</code>.
definitions.CreateStreamInput.properties.ShardCount.$ref: '#/definitions/PositiveIntegerObject'
definitions.CreateStreamInput.properties.ShardCount.description: <p>The number of
  shards that the stream will use. The throughput of the stream is a function of the
  number of shards; more shards are required for greater provisioned throughput.</p>
  <p>DefaultShardLimit;</p>
definitions.CreateStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.CreateStreamInput.properties.StreamName.description: A name to identify
  the stream. The stream name is scoped to the AWS account used by the application
  that creates the stream. It is also scoped by region. That is, two streams in two
  different AWS accounts can have the same name, and two streams in the same AWS account
  but in two different regions can have the same name.
definitions.CreateStreamInput.required.length: 2
definitions.CreateStreamInput.required[0]: StreamName
definitions.CreateStreamInput.required[1]: ShardCount
definitions.CreateStreamInput.type: object
definitions.Data.maxLength: 1.048576e+06
definitions.Data.minLength: 0
definitions.Data.type: string
definitions.DecreaseStreamRetentionPeriodInput.description: Represents the input for
  <a>DecreaseStreamRetentionPeriod</a>.
definitions.DecreaseStreamRetentionPeriodInput.properties.RetentionPeriodHours.$ref: '#/definitions/PositiveIntegerObject'
definitions.DecreaseStreamRetentionPeriodInput.properties.RetentionPeriodHours.description: The
  new retention period of the stream, in hours. Must be less than the current retention
  period.
definitions.DecreaseStreamRetentionPeriodInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.DecreaseStreamRetentionPeriodInput.properties.StreamName.description: The
  name of the stream to modify.
definitions.DecreaseStreamRetentionPeriodInput.required.length: 2
definitions.DecreaseStreamRetentionPeriodInput.required[0]: StreamName
definitions.DecreaseStreamRetentionPeriodInput.required[1]: RetentionPeriodHours
definitions.DecreaseStreamRetentionPeriodInput.type: object
definitions.DeleteStreamInput.description: Represents the input for <a>DeleteStream</a>.
definitions.DeleteStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.DeleteStreamInput.properties.StreamName.description: The name of the stream
  to delete.
definitions.DeleteStreamInput.required.length: 1
definitions.DeleteStreamInput.required[0]: StreamName
definitions.DeleteStreamInput.type: object
definitions.DescribeLimitsInput.type: object
definitions.DescribeLimitsOutput.properties.OpenShardCount.$ref: '#/definitions/ShardCountObject'
definitions.DescribeLimitsOutput.properties.OpenShardCount.description: The number
  of open shards.
definitions.DescribeLimitsOutput.properties.ShardLimit.$ref: '#/definitions/ShardCountObject'
definitions.DescribeLimitsOutput.properties.ShardLimit.description: The maximum number
  of shards.
definitions.DescribeLimitsOutput.required.length: 2
definitions.DescribeLimitsOutput.required[0]: ShardLimit
definitions.DescribeLimitsOutput.required[1]: OpenShardCount
definitions.DescribeLimitsOutput.type: object
definitions.DescribeStreamInput.description: Represents the input for <code>DescribeStream</code>.
definitions.DescribeStreamInput.properties.ExclusiveStartShardId.$ref: '#/definitions/ShardId'
definitions.DescribeStreamInput.properties.ExclusiveStartShardId.description: The
  shard ID of the shard to start with.
definitions.DescribeStreamInput.properties.Limit.$ref: '#/definitions/DescribeStreamInputLimit'
definitions.DescribeStreamInput.properties.Limit.description: The maximum number of
  shards to return in a single call. The default value is 100. If you specify a value
  greater than 100, at most 100 shards are returned.
definitions.DescribeStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.DescribeStreamInput.properties.StreamName.description: The name of the
  stream to describe.
definitions.DescribeStreamInput.required.length: 1
definitions.DescribeStreamInput.required[0]: StreamName
definitions.DescribeStreamInput.type: object
definitions.DescribeStreamInputLimit.maximum: 10000
definitions.DescribeStreamInputLimit.minimum: 1
definitions.DescribeStreamInputLimit.type: integer
definitions.DescribeStreamOutput.description: Represents the output for <code>DescribeStream</code>.
definitions.DescribeStreamOutput.properties.StreamDescription.$ref: '#/definitions/StreamDescription'
definitions.DescribeStreamOutput.properties.StreamDescription.description: The current
  status of the stream, the stream ARN, an array of shard objects that comprise the
  stream, and whether there are more shards available.
definitions.DescribeStreamOutput.required.length: 1
definitions.DescribeStreamOutput.required[0]: StreamDescription
definitions.DescribeStreamOutput.type: object
definitions.DisableEnhancedMonitoringInput.description: Represents the input for <a>DisableEnhancedMonitoring</a>.
definitions.DisableEnhancedMonitoringInput.properties.ShardLevelMetrics.$ref: '#/definitions/MetricsNameList'
definitions.DisableEnhancedMonitoringInput.properties.ShardLevelMetrics.description: <p>List
  of shard-level metrics to disable.</p> <p>The following are the valid shard-level
  metrics. The value "<code>ALL</code>" disables every metric.</p> <ul> <li> <p> <code>IncomingBytes</code>
  </p> </li> <li> <p> <code>IncomingRecords</code> </p> </li> <li> <p> <code>OutgoingBytes</code>
  </p> </li> <li> <p> <code>OutgoingRecords</code> </p> </li> <li> <p> <code>WriteProvisionedThroughputExceeded</code>
  </p> </li> <li> <p> <code>ReadProvisionedThroughputExceeded</code> </p> </li> <li>
  <p> <code>IteratorAgeMilliseconds</code> </p> </li> <li> <p> <code>ALL</code> </p>
  </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html">Monitoring
  the Amazon Kinesis Streams Service with Amazon CloudWatch</a> in the <i>Amazon Kinesis
  Streams Developer Guide</i>.</p>
definitions.DisableEnhancedMonitoringInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.DisableEnhancedMonitoringInput.properties.StreamName.description: The
  name of the Amazon Kinesis stream for which to disable enhanced monitoring.
definitions.DisableEnhancedMonitoringInput.required.length: 2
definitions.DisableEnhancedMonitoringInput.required[0]: StreamName
definitions.DisableEnhancedMonitoringInput.required[1]: ShardLevelMetrics
definitions.DisableEnhancedMonitoringInput.type: object
definitions.EnableEnhancedMonitoringInput.description: Represents the input for <a>EnableEnhancedMonitoring</a>.
definitions.EnableEnhancedMonitoringInput.properties.ShardLevelMetrics.$ref: '#/definitions/MetricsNameList'
definitions.EnableEnhancedMonitoringInput.properties.ShardLevelMetrics.description: <p>List
  of shard-level metrics to enable.</p> <p>The following are the valid shard-level
  metrics. The value "<code>ALL</code>" enables every metric.</p> <ul> <li> <p> <code>IncomingBytes</code>
  </p> </li> <li> <p> <code>IncomingRecords</code> </p> </li> <li> <p> <code>OutgoingBytes</code>
  </p> </li> <li> <p> <code>OutgoingRecords</code> </p> </li> <li> <p> <code>WriteProvisionedThroughputExceeded</code>
  </p> </li> <li> <p> <code>ReadProvisionedThroughputExceeded</code> </p> </li> <li>
  <p> <code>IteratorAgeMilliseconds</code> </p> </li> <li> <p> <code>ALL</code> </p>
  </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html">Monitoring
  the Amazon Kinesis Streams Service with Amazon CloudWatch</a> in the <i>Amazon Kinesis
  Streams Developer Guide</i>.</p>
definitions.EnableEnhancedMonitoringInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.EnableEnhancedMonitoringInput.properties.StreamName.description: The name
  of the stream for which to enable enhanced monitoring.
definitions.EnableEnhancedMonitoringInput.required.length: 2
definitions.EnableEnhancedMonitoringInput.required[0]: StreamName
definitions.EnableEnhancedMonitoringInput.required[1]: ShardLevelMetrics
definitions.EnableEnhancedMonitoringInput.type: object
definitions.EncryptionType.enum.length: 2
definitions.EncryptionType.enum[0]: NONE
definitions.EncryptionType.enum[1]: KMS
definitions.EncryptionType.type: string
definitions.EnhancedMetrics.description: Represents enhanced metrics types.
definitions.EnhancedMetrics.properties.ShardLevelMetrics.$ref: '#/definitions/MetricsNameList'
definitions.EnhancedMetrics.properties.ShardLevelMetrics.description: <p>List of shard-level
  metrics.</p> <p>The following are the valid shard-level metrics. The value "<code>ALL</code>"
  enhances every metric.</p> <ul> <li> <p> <code>IncomingBytes</code> </p> </li> <li>
  <p> <code>IncomingRecords</code> </p> </li> <li> <p> <code>OutgoingBytes</code>
  </p> </li> <li> <p> <code>OutgoingRecords</code> </p> </li> <li> <p> <code>WriteProvisionedThroughputExceeded</code>
  </p> </li> <li> <p> <code>ReadProvisionedThroughputExceeded</code> </p> </li> <li>
  <p> <code>IteratorAgeMilliseconds</code> </p> </li> <li> <p> <code>ALL</code> </p>
  </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html">Monitoring
  the Amazon Kinesis Streams Service with Amazon CloudWatch</a> in the <i>Amazon Kinesis
  Streams Developer Guide</i>.</p>
definitions.EnhancedMetrics.type: object
definitions.EnhancedMonitoringList.items.$ref: '#/definitions/EnhancedMetrics'
definitions.EnhancedMonitoringList.type: array
definitions.EnhancedMonitoringOutput.description: Represents the output for <a>EnableEnhancedMonitoring</a>
  and <a>DisableEnhancedMonitoring</a>.
definitions.EnhancedMonitoringOutput.properties.CurrentShardLevelMetrics.$ref: '#/definitions/MetricsNameList'
definitions.EnhancedMonitoringOutput.properties.CurrentShardLevelMetrics.description: Represents
  the current state of the metrics that are in the enhanced state before the operation.
definitions.EnhancedMonitoringOutput.properties.DesiredShardLevelMetrics.$ref: '#/definitions/MetricsNameList'
definitions.EnhancedMonitoringOutput.properties.DesiredShardLevelMetrics.description: Represents
  the list of all the metrics that would be in the enhanced state after the operation.
definitions.EnhancedMonitoringOutput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.EnhancedMonitoringOutput.properties.StreamName.description: The name of
  the Amazon Kinesis stream.
definitions.EnhancedMonitoringOutput.type: object
definitions.ErrorCode.type: string
definitions.ErrorMessage.type: string
definitions.ExpiredIteratorException.description: The provided iterator exceeds the
  maximum age allowed.
definitions.ExpiredIteratorException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.ExpiredIteratorException.properties.message.description: A message that
  provides information about the error.
definitions.ExpiredIteratorException.type: object
definitions.GetRecordsInput.description: Represents the input for <a>GetRecords</a>.
definitions.GetRecordsInput.properties.Limit.$ref: '#/definitions/GetRecordsInputLimit'
definitions.GetRecordsInput.properties.Limit.description: The maximum number of records
  to return. Specify a value of up to 10,000. If you specify a value that is greater
  than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.
definitions.GetRecordsInput.properties.ShardIterator.$ref: '#/definitions/ShardIterator'
definitions.GetRecordsInput.properties.ShardIterator.description: The position in
  the shard from which you want to start sequentially reading data records. A shard
  iterator specifies this position using the sequence number of a data record in the
  shard.
definitions.GetRecordsInput.required.length: 1
definitions.GetRecordsInput.required[0]: ShardIterator
definitions.GetRecordsInput.type: object
definitions.GetRecordsInputLimit.maximum: 10000
definitions.GetRecordsInputLimit.minimum: 1
definitions.GetRecordsInputLimit.type: integer
definitions.GetRecordsOutput.description: Represents the output for <a>GetRecords</a>.
definitions.GetRecordsOutput.properties.MillisBehindLatest.$ref: '#/definitions/MillisBehindLatest'
definitions.GetRecordsOutput.properties.MillisBehindLatest.description: The number
  of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating
  how far behind current time the consumer is. A value of zero indicates record processing
  is caught up, and there are no new records to process at this moment.
definitions.GetRecordsOutput.properties.NextShardIterator.$ref: '#/definitions/ShardIterator'
definitions.GetRecordsOutput.properties.NextShardIterator.description: 'The next position
  in the shard from which to start sequentially reading data records. If set to <code>null</code>,
  the shard has been closed and the requested iterator will not return any more data. '
definitions.GetRecordsOutput.properties.Records.$ref: '#/definitions/RecordList'
definitions.GetRecordsOutput.properties.Records.description: The data records retrieved
  from the shard.
definitions.GetRecordsOutput.required.length: 1
definitions.GetRecordsOutput.required[0]: Records
definitions.GetRecordsOutput.type: object
definitions.GetShardIteratorInput.description: Represents the input for <code>GetShardIterator</code>.
definitions.GetShardIteratorInput.properties.ShardId.$ref: '#/definitions/ShardId'
definitions.GetShardIteratorInput.properties.ShardId.description: The shard ID of
  the Amazon Kinesis shard to get the iterator for.
definitions.GetShardIteratorInput.properties.ShardIteratorType.$ref: '#/definitions/ShardIteratorType'
definitions.GetShardIteratorInput.properties.ShardIteratorType.description: <p>Determines
  how the shard iterator is used to start reading data records from the shard.</p>
  <p>The following are the valid Amazon Kinesis shard iterator types:</p> <ul> <li>
  <p>AT_SEQUENCE_NUMBER - Start reading from the position denoted by a specific sequence
  number, provided in the value <code>StartingSequenceNumber</code>.</p> </li> <li>
  <p>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific
  sequence number, provided in the value <code>StartingSequenceNumber</code>.</p>
  </li> <li> <p>AT_TIMESTAMP - Start reading from the position denoted by a specific
  timestamp, provided in the value <code>Timestamp</code>.</p> </li> <li> <p>TRIM_HORIZON
  - Start reading at the last untrimmed record in the shard in the system, which is
  the oldest data record in the shard.</p> </li> <li> <p>LATEST - Start reading just
  after the most recent record in the shard, so that you always read the most recent
  data in the shard.</p> </li> </ul>
definitions.GetShardIteratorInput.properties.StartingSequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.GetShardIteratorInput.properties.StartingSequenceNumber.description: The
  sequence number of the data record in the shard from which to start reading. Used
  with shard iterator type AT_SEQUENCE_NUMBER and AFTER_SEQUENCE_NUMBER.
definitions.GetShardIteratorInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.GetShardIteratorInput.properties.StreamName.description: The name of the
  Amazon Kinesis stream.
definitions.GetShardIteratorInput.properties.Timestamp.$ref: '#/definitions/Timestamp'
definitions.GetShardIteratorInput.properties.Timestamp.description: The timestamp
  of the data record from which to start reading. Used with shard iterator type AT_TIMESTAMP.
  A timestamp is the Unix epoch date with precision in milliseconds. For example,
  <code>2016-04-04T19:58:46.480-00:00</code> or <code>1459799926.480</code>. If a
  record with this exact timestamp does not exist, the iterator returned is for the
  next (later) record. If the timestamp is older than the current trim horizon, the
  iterator returned is for the oldest untrimmed data record (TRIM_HORIZON).
definitions.GetShardIteratorInput.required.length: 3
definitions.GetShardIteratorInput.required[0]: StreamName
definitions.GetShardIteratorInput.required[1]: ShardId
definitions.GetShardIteratorInput.required[2]: ShardIteratorType
definitions.GetShardIteratorInput.type: object
definitions.GetShardIteratorOutput.description: Represents the output for <code>GetShardIterator</code>.
definitions.GetShardIteratorOutput.properties.ShardIterator.$ref: '#/definitions/ShardIterator'
definitions.GetShardIteratorOutput.properties.ShardIterator.description: The position
  in the shard from which to start reading data records sequentially. A shard iterator
  specifies this position using the sequence number of a data record in a shard.
definitions.GetShardIteratorOutput.type: object
definitions.HashKey.pattern: 0|([1-9]\d{0,38})
definitions.HashKey.type: string
definitions.HashKeyRange.description: The range of possible hash key values for the
  shard, which is a set of ordered contiguous positive integers.
definitions.HashKeyRange.properties.EndingHashKey.$ref: '#/definitions/HashKey'
definitions.HashKeyRange.properties.EndingHashKey.description: The ending hash key
  of the hash key range.
definitions.HashKeyRange.properties.StartingHashKey.$ref: '#/definitions/HashKey'
definitions.HashKeyRange.properties.StartingHashKey.description: The starting hash
  key of the hash key range.
definitions.HashKeyRange.required.length: 2
definitions.HashKeyRange.required[0]: StartingHashKey
definitions.HashKeyRange.required[1]: EndingHashKey
definitions.HashKeyRange.type: object
definitions.IncreaseStreamRetentionPeriodInput.description: Represents the input for
  <a>IncreaseStreamRetentionPeriod</a>.
definitions.IncreaseStreamRetentionPeriodInput.properties.RetentionPeriodHours.$ref: '#/definitions/PositiveIntegerObject'
definitions.IncreaseStreamRetentionPeriodInput.properties.RetentionPeriodHours.description: The
  new retention period of the stream, in hours. Must be more than the current retention
  period.
definitions.IncreaseStreamRetentionPeriodInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.IncreaseStreamRetentionPeriodInput.properties.StreamName.description: The
  name of the stream to modify.
definitions.IncreaseStreamRetentionPeriodInput.required.length: 2
definitions.IncreaseStreamRetentionPeriodInput.required[0]: StreamName
definitions.IncreaseStreamRetentionPeriodInput.required[1]: RetentionPeriodHours
definitions.IncreaseStreamRetentionPeriodInput.type: object
definitions.InvalidArgumentException.description: A specified parameter exceeds its
  restrictions, is not supported, or can't be used. For more information, see the
  returned message.
definitions.InvalidArgumentException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.InvalidArgumentException.properties.message.description: A message that
  provides information about the error.
definitions.InvalidArgumentException.type: object
definitions.KMSAccessDeniedException.description: The ciphertext references a key
  that doesn't exist or that you don't have access to.
definitions.KMSAccessDeniedException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSAccessDeniedException.properties.message.description: A message that
  provides information about the error.
definitions.KMSAccessDeniedException.type: object
definitions.KMSDisabledException.description: The request was rejected because the
  specified CMK isn't enabled.
definitions.KMSDisabledException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSDisabledException.properties.message.description: A message that provides
  information about the error.
definitions.KMSDisabledException.type: object
definitions.KMSInvalidStateException.description: The request was rejected because
  the state of the specified resource isn't valid for this request. For more information,
  see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">How
  Key State Affects Use of a Customer Master Key</a> in the <i>AWS Key Management
  Service Developer Guide</i>.
definitions.KMSInvalidStateException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSInvalidStateException.properties.message.description: A message that
  provides information about the error.
definitions.KMSInvalidStateException.type: object
definitions.KMSNotFoundException.description: The request was rejected because the
  specified entity or resource couldn't be found.
definitions.KMSNotFoundException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSNotFoundException.properties.message.description: A message that provides
  information about the error.
definitions.KMSNotFoundException.type: object
definitions.KMSOptInRequired.description: The AWS access key ID needs a subscription
  for the service.
definitions.KMSOptInRequired.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSOptInRequired.properties.message.description: A message that provides
  information about the error.
definitions.KMSOptInRequired.type: object
definitions.KMSThrottlingException.description: The request was denied due to request
  throttling. For more information about throttling, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#requests-per-second">Limits</a>
  in the <i>AWS Key Management Service Developer Guide</i>.
definitions.KMSThrottlingException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.KMSThrottlingException.properties.message.description: A message that
  provides information about the error.
definitions.KMSThrottlingException.type: object
definitions.KeyId.maxLength: 2048
definitions.KeyId.minLength: 1
definitions.KeyId.type: string
definitions.LimitExceededException.description: The requested resource exceeds the
  maximum number allowed, or the number of concurrent stream requests exceeds the
  maximum number allowed (5).
definitions.LimitExceededException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.LimitExceededException.properties.message.description: A message that
  provides information about the error.
definitions.LimitExceededException.type: object
definitions.ListStreamsInput.description: Represents the input for <code>ListStreams</code>.
definitions.ListStreamsInput.properties.ExclusiveStartStreamName.$ref: '#/definitions/StreamName'
definitions.ListStreamsInput.properties.ExclusiveStartStreamName.description: The
  name of the stream to start the list with.
definitions.ListStreamsInput.properties.Limit.$ref: '#/definitions/ListStreamsInputLimit'
definitions.ListStreamsInput.properties.Limit.description: The maximum number of streams
  to list.
definitions.ListStreamsInput.type: object
definitions.ListStreamsInputLimit.maximum: 10000
definitions.ListStreamsInputLimit.minimum: 1
definitions.ListStreamsInputLimit.type: integer
definitions.ListStreamsOutput.description: Represents the output for <code>ListStreams</code>.
definitions.ListStreamsOutput.properties.HasMoreStreams.$ref: '#/definitions/BooleanObject'
definitions.ListStreamsOutput.properties.HasMoreStreams.description: If set to <code>true</code>,
  there are more streams available to list.
definitions.ListStreamsOutput.properties.StreamNames.$ref: '#/definitions/StreamNameList'
definitions.ListStreamsOutput.properties.StreamNames.description: The names of the
  streams that are associated with the AWS account making the <code>ListStreams</code>
  request.
definitions.ListStreamsOutput.required.length: 2
definitions.ListStreamsOutput.required[0]: StreamNames
definitions.ListStreamsOutput.required[1]: HasMoreStreams
definitions.ListStreamsOutput.type: object
definitions.ListTagsForStreamInput.description: Represents the input for <code>ListTagsForStream</code>.
definitions.ListTagsForStreamInput.properties.ExclusiveStartTagKey.$ref: '#/definitions/TagKey'
definitions.ListTagsForStreamInput.properties.ExclusiveStartTagKey.description: 'The
  key to use as the starting point for the list of tags. If this parameter is set,
  <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. '
definitions.ListTagsForStreamInput.properties.Limit.$ref: '#/definitions/ListTagsForStreamInputLimit'
definitions.ListTagsForStreamInput.properties.Limit.description: The number of tags
  to return. If this number is less than the total number of tags associated with
  the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional
  tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.
definitions.ListTagsForStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.ListTagsForStreamInput.properties.StreamName.description: The name of
  the stream.
definitions.ListTagsForStreamInput.required.length: 1
definitions.ListTagsForStreamInput.required[0]: StreamName
definitions.ListTagsForStreamInput.type: object
definitions.ListTagsForStreamInputLimit.maximum: 10
definitions.ListTagsForStreamInputLimit.minimum: 1
definitions.ListTagsForStreamInputLimit.type: integer
definitions.ListTagsForStreamOutput.description: Represents the output for <code>ListTagsForStream</code>.
definitions.ListTagsForStreamOutput.properties.HasMoreTags.$ref: '#/definitions/BooleanObject'
definitions.ListTagsForStreamOutput.properties.HasMoreTags.description: If set to
  <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code>
  to the key of the last tag returned.
definitions.ListTagsForStreamOutput.properties.Tags.$ref: '#/definitions/TagList'
definitions.ListTagsForStreamOutput.properties.Tags.description: 'A list of tags associated
  with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code>
  and up to the specified <code>Limit</code>. '
definitions.ListTagsForStreamOutput.required.length: 2
definitions.ListTagsForStreamOutput.required[0]: Tags
definitions.ListTagsForStreamOutput.required[1]: HasMoreTags
definitions.ListTagsForStreamOutput.type: object
definitions.MergeShardsInput.description: Represents the input for <code>MergeShards</code>.
definitions.MergeShardsInput.properties.AdjacentShardToMerge.$ref: '#/definitions/ShardId'
definitions.MergeShardsInput.properties.AdjacentShardToMerge.description: The shard
  ID of the adjacent shard for the merge.
definitions.MergeShardsInput.properties.ShardToMerge.$ref: '#/definitions/ShardId'
definitions.MergeShardsInput.properties.ShardToMerge.description: The shard ID of
  the shard to combine with the adjacent shard for the merge.
definitions.MergeShardsInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.MergeShardsInput.properties.StreamName.description: The name of the stream
  for the merge.
definitions.MergeShardsInput.required.length: 3
definitions.MergeShardsInput.required[0]: StreamName
definitions.MergeShardsInput.required[1]: ShardToMerge
definitions.MergeShardsInput.required[2]: AdjacentShardToMerge
definitions.MergeShardsInput.type: object
definitions.MetricsName.enum.length: 8
definitions.MetricsName.enum[0]: IncomingBytes
definitions.MetricsName.enum[1]: IncomingRecords
definitions.MetricsName.enum[2]: OutgoingBytes
definitions.MetricsName.enum[3]: OutgoingRecords
definitions.MetricsName.enum[4]: WriteProvisionedThroughputExceeded
definitions.MetricsName.enum[5]: ReadProvisionedThroughputExceeded
definitions.MetricsName.enum[6]: IteratorAgeMilliseconds
definitions.MetricsName.enum[7]: ALL
definitions.MetricsName.type: string
definitions.MetricsNameList.items.$ref: '#/definitions/MetricsName'
definitions.MetricsNameList.maxItems: 7
definitions.MetricsNameList.minItems: 1
definitions.MetricsNameList.type: array
definitions.MillisBehindLatest.minimum: 0
definitions.MillisBehindLatest.type: integer
definitions.PartitionKey.maxLength: 256
definitions.PartitionKey.minLength: 1
definitions.PartitionKey.type: string
definitions.PositiveIntegerObject.maximum: 100000
definitions.PositiveIntegerObject.minimum: 1
definitions.PositiveIntegerObject.type: integer
definitions.ProvisionedThroughputExceededException.description: The request rate for
  the stream is too high, or the requested data is too large for the available throughput.
  Reduce the frequency or size of your requests. For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>, and <a href="http://docs.aws.amazon.com/general/latest/gr/api-retries.html">Error
  Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.
definitions.ProvisionedThroughputExceededException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.ProvisionedThroughputExceededException.properties.message.description: A
  message that provides information about the error.
definitions.ProvisionedThroughputExceededException.type: object
definitions.PutRecordInput.description: Represents the input for <code>PutRecord</code>.
definitions.PutRecordInput.properties.Data.$ref: '#/definitions/Data'
definitions.PutRecordInput.properties.Data.description: The data blob to put into
  the record, which is base64-encoded when the blob is serialized. When the data blob
  (the payload before base64-encoding) is added to the partition key size, the total
  size must not exceed the maximum record size (1 MB).
definitions.PutRecordInput.properties.ExplicitHashKey.$ref: '#/definitions/HashKey'
definitions.PutRecordInput.properties.ExplicitHashKey.description: The hash value
  used to explicitly determine the shard the data record is assigned to by overriding
  the partition key hash.
definitions.PutRecordInput.properties.PartitionKey.$ref: '#/definitions/PartitionKey'
definitions.PutRecordInput.properties.PartitionKey.description: Determines which shard
  in the stream the data record is assigned to. Partition keys are Unicode strings
  with a maximum length limit of 256 characters for each key. Amazon Kinesis uses
  the partition key as input to a hash function that maps the partition key and associated
  data to a specific shard. Specifically, an MD5 hash function is used to map partition
  keys to 128-bit integer values and to map associated data records to shards. As
  a result of this hashing mechanism, all data records with the same partition key
  map to the same shard within the stream.
definitions.PutRecordInput.properties.SequenceNumberForOrdering.$ref: '#/definitions/SequenceNumber'
definitions.PutRecordInput.properties.SequenceNumberForOrdering.description: 'Guarantees
  strictly increasing sequence numbers, for puts from the same client and to the same
  partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i>
  to the sequence number of record <i>n-1</i> (as returned in the result when putting
  record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered
  based on arrival time.'
definitions.PutRecordInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.PutRecordInput.properties.StreamName.description: The name of the stream
  to put the data record into.
definitions.PutRecordInput.required.length: 3
definitions.PutRecordInput.required[0]: StreamName
definitions.PutRecordInput.required[1]: Data
definitions.PutRecordInput.required[2]: PartitionKey
definitions.PutRecordInput.type: object
definitions.PutRecordOutput.description: Represents the output for <code>PutRecord</code>.
definitions.PutRecordOutput.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.PutRecordOutput.properties.EncryptionType.description: '<p>The encryption
  type to use on the record. This parameter can be one of the following values:</p>
  <ul> <li> <p> <code>NONE</code>: Do not encrypt the records in the stream.</p> </li>
  <li> <p> <code>KMS</code>: Use server-side encryption on the records in the stream
  using a customer-managed KMS key.</p> </li> </ul>'
definitions.PutRecordOutput.properties.SequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.PutRecordOutput.properties.SequenceNumber.description: The sequence number
  identifier that was assigned to the put data record. The sequence number for the
  record is unique across all records in the stream. A sequence number is the identifier
  associated with every record put into the stream.
definitions.PutRecordOutput.properties.ShardId.$ref: '#/definitions/ShardId'
definitions.PutRecordOutput.properties.ShardId.description: The shard ID of the shard
  where the data record was placed.
definitions.PutRecordOutput.required.length: 2
definitions.PutRecordOutput.required[0]: ShardId
definitions.PutRecordOutput.required[1]: SequenceNumber
definitions.PutRecordOutput.type: object
definitions.PutRecordsInput.description: A <code>PutRecords</code> request.
definitions.PutRecordsInput.properties.Records.$ref: '#/definitions/PutRecordsRequestEntryList'
definitions.PutRecordsInput.properties.Records.description: The records associated
  with the request.
definitions.PutRecordsInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.PutRecordsInput.properties.StreamName.description: The stream name associated
  with the request.
definitions.PutRecordsInput.required.length: 2
definitions.PutRecordsInput.required[0]: Records
definitions.PutRecordsInput.required[1]: StreamName
definitions.PutRecordsInput.type: object
definitions.PutRecordsOutput.description: ' <code>PutRecords</code> results.'
definitions.PutRecordsOutput.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.PutRecordsOutput.properties.EncryptionType.description: '<p>The encryption
  type used on the records. This parameter can be one of the following values:</p>
  <ul> <li> <p> <code>NONE</code>: Do not encrypt the records.</p> </li> <li> <p>
  <code>KMS</code>: Use server-side encryption on the records using a customer-managed
  KMS key.</p> </li> </ul>'
definitions.PutRecordsOutput.properties.FailedRecordCount.$ref: '#/definitions/PositiveIntegerObject'
definitions.PutRecordsOutput.properties.FailedRecordCount.description: The number
  of unsuccessfully processed records in a <code>PutRecords</code> request.
definitions.PutRecordsOutput.properties.Records.$ref: '#/definitions/PutRecordsResultEntryList'
definitions.PutRecordsOutput.properties.Records.description: An array of successfully
  and unsuccessfully processed record results, correlated with the request by natural
  ordering. A record that is successfully added to a stream includes <code>SequenceNumber</code>
  and <code>ShardId</code> in the result. A record that fails to be added to a stream
  includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.
definitions.PutRecordsOutput.required.length: 1
definitions.PutRecordsOutput.required[0]: Records
definitions.PutRecordsOutput.type: object
definitions.PutRecordsRequestEntry.description: Represents the output for <code>PutRecords</code>.
definitions.PutRecordsRequestEntry.properties.Data.$ref: '#/definitions/Data'
definitions.PutRecordsRequestEntry.properties.Data.description: The data blob to put
  into the record, which is base64-encoded when the blob is serialized. When the data
  blob (the payload before base64-encoding) is added to the partition key size, the
  total size must not exceed the maximum record size (1 MB).
definitions.PutRecordsRequestEntry.properties.ExplicitHashKey.$ref: '#/definitions/HashKey'
definitions.PutRecordsRequestEntry.properties.ExplicitHashKey.description: The hash
  value used to determine explicitly the shard that the data record is assigned to
  by overriding the partition key hash.
definitions.PutRecordsRequestEntry.properties.PartitionKey.$ref: '#/definitions/PartitionKey'
definitions.PutRecordsRequestEntry.properties.PartitionKey.description: Determines
  which shard in the stream the data record is assigned to. Partition keys are Unicode
  strings with a maximum length limit of 256 characters for each key. Amazon Kinesis
  uses the partition key as input to a hash function that maps the partition key and
  associated data to a specific shard. Specifically, an MD5 hash function is used
  to map partition keys to 128-bit integer values and to map associated data records
  to shards. As a result of this hashing mechanism, all data records with the same
  partition key map to the same shard within the stream.
definitions.PutRecordsRequestEntry.required.length: 2
definitions.PutRecordsRequestEntry.required[0]: Data
definitions.PutRecordsRequestEntry.required[1]: PartitionKey
definitions.PutRecordsRequestEntry.type: object
definitions.PutRecordsRequestEntryList.items.$ref: '#/definitions/PutRecordsRequestEntry'
definitions.PutRecordsRequestEntryList.maxItems: 500
definitions.PutRecordsRequestEntryList.minItems: 1
definitions.PutRecordsRequestEntryList.type: array
definitions.PutRecordsResultEntry.description: Represents the result of an individual
  record from a <code>PutRecords</code> request. A record that is successfully added
  to a stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the
  result. A record that fails to be added to the stream includes <code>ErrorCode</code>
  and <code>ErrorMessage</code> in the result.
definitions.PutRecordsResultEntry.properties.ErrorCode.$ref: '#/definitions/ErrorCode'
definitions.PutRecordsResultEntry.properties.ErrorCode.description: The error code
  for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code>
  or <code>InternalFailure</code>.
definitions.PutRecordsResultEntry.properties.ErrorMessage.$ref: '#/definitions/ErrorMessage'
definitions.PutRecordsResultEntry.properties.ErrorMessage.description: The error message
  for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code>
  has an error message that includes the account ID, stream name, and shard ID. An
  <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message
  <code>"Internal Service Failure"</code>.
definitions.PutRecordsResultEntry.properties.SequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.PutRecordsResultEntry.properties.SequenceNumber.description: The sequence
  number for an individual record result.
definitions.PutRecordsResultEntry.properties.ShardId.$ref: '#/definitions/ShardId'
definitions.PutRecordsResultEntry.properties.ShardId.description: The shard ID for
  an individual record result.
definitions.PutRecordsResultEntry.type: object
definitions.PutRecordsResultEntryList.items.$ref: '#/definitions/PutRecordsResultEntry'
definitions.PutRecordsResultEntryList.maxItems: 500
definitions.PutRecordsResultEntryList.minItems: 1
definitions.PutRecordsResultEntryList.type: array
definitions.Record.description: The unit of data of the Amazon Kinesis stream, which
  is composed of a sequence number, a partition key, and a data blob.
definitions.Record.properties.ApproximateArrivalTimestamp.$ref: '#/definitions/Timestamp'
definitions.Record.properties.ApproximateArrivalTimestamp.description: The approximate
  time that the record was inserted into the stream.
definitions.Record.properties.Data.$ref: '#/definitions/Data'
definitions.Record.properties.Data.description: The data blob. The data in the blob
  is both opaque and immutable to the Amazon Kinesis service, which does not inspect,
  interpret, or change the data in the blob in any way. When the data blob (the payload
  before base64-encoding) is added to the partition key size, the total size must
  not exceed the maximum record size (1 MB).
definitions.Record.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.Record.properties.EncryptionType.description: '<p>The encryption type
  used on the record. This parameter can be one of the following values:</p> <ul>
  <li> <p> <code>NONE</code>: Do not encrypt the records in the stream.</p> </li>
  <li> <p> <code>KMS</code>: Use server-side encryption on the records in the stream
  using a customer-managed KMS key.</p> </li> </ul>'
definitions.Record.properties.PartitionKey.$ref: '#/definitions/PartitionKey'
definitions.Record.properties.PartitionKey.description: Identifies which shard in
  the stream the data record is assigned to.
definitions.Record.properties.SequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.Record.properties.SequenceNumber.description: The unique identifier of
  the record within its shard.
definitions.Record.required.length: 3
definitions.Record.required[0]: SequenceNumber
definitions.Record.required[1]: Data
definitions.Record.required[2]: PartitionKey
definitions.Record.type: object
definitions.RecordList.items.$ref: '#/definitions/Record'
definitions.RecordList.type: array
definitions.RemoveTagsFromStreamInput.description: Represents the input for <code>RemoveTagsFromStream</code>.
definitions.RemoveTagsFromStreamInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.RemoveTagsFromStreamInput.properties.StreamName.description: The name
  of the stream.
definitions.RemoveTagsFromStreamInput.properties.TagKeys.$ref: '#/definitions/TagKeyList'
definitions.RemoveTagsFromStreamInput.properties.TagKeys.description: A list of tag
  keys. Each corresponding tag is removed from the stream.
definitions.RemoveTagsFromStreamInput.required.length: 2
definitions.RemoveTagsFromStreamInput.required[0]: StreamName
definitions.RemoveTagsFromStreamInput.required[1]: TagKeys
definitions.RemoveTagsFromStreamInput.type: object
definitions.ResourceInUseException.description: The resource is not available for
  this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code>
  state.
definitions.ResourceInUseException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.ResourceInUseException.properties.message.description: A message that
  provides information about the error.
definitions.ResourceInUseException.type: object
definitions.ResourceNotFoundException.description: The requested resource could not
  be found. The stream might not be specified correctly.
definitions.ResourceNotFoundException.properties.message.$ref: '#/definitions/ErrorMessage'
definitions.ResourceNotFoundException.properties.message.description: A message that
  provides information about the error.
definitions.ResourceNotFoundException.type: object
definitions.ScalingType.enum.length: 1
definitions.ScalingType.enum[0]: UNIFORM_SCALING
definitions.ScalingType.type: string
definitions.SequenceNumber.pattern: 0|([1-9]\d{0,128})
definitions.SequenceNumber.type: string
definitions.SequenceNumberRange.description: The range of possible sequence numbers
  for the shard.
definitions.SequenceNumberRange.properties.EndingSequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.SequenceNumberRange.properties.EndingSequenceNumber.description: The ending
  sequence number for the range. Shards that are in the OPEN state have an ending
  sequence number of <code>null</code>.
definitions.SequenceNumberRange.properties.StartingSequenceNumber.$ref: '#/definitions/SequenceNumber'
definitions.SequenceNumberRange.properties.StartingSequenceNumber.description: The
  starting sequence number for the range.
definitions.SequenceNumberRange.required.length: 1
definitions.SequenceNumberRange.required[0]: StartingSequenceNumber
definitions.SequenceNumberRange.type: object
definitions.Shard.description: A uniquely identified group of data records in an Amazon
  Kinesis stream.
definitions.Shard.properties.AdjacentParentShardId.$ref: '#/definitions/ShardId'
definitions.Shard.properties.AdjacentParentShardId.description: The shard ID of the
  shard adjacent to the shard's parent.
definitions.Shard.properties.HashKeyRange.$ref: '#/definitions/HashKeyRange'
definitions.Shard.properties.HashKeyRange.description: The range of possible hash
  key values for the shard, which is a set of ordered contiguous positive integers.
definitions.Shard.properties.ParentShardId.$ref: '#/definitions/ShardId'
definitions.Shard.properties.ParentShardId.description: The shard ID of the shard's
  parent.
definitions.Shard.properties.SequenceNumberRange.$ref: '#/definitions/SequenceNumberRange'
definitions.Shard.properties.SequenceNumberRange.description: The range of possible
  sequence numbers for the shard.
definitions.Shard.properties.ShardId.$ref: '#/definitions/ShardId'
definitions.Shard.properties.ShardId.description: The unique identifier of the shard
  within the stream.
definitions.Shard.required.length: 3
definitions.Shard.required[0]: ShardId
definitions.Shard.required[1]: HashKeyRange
definitions.Shard.required[2]: SequenceNumberRange
definitions.Shard.type: object
definitions.ShardCountObject.maximum: 1e+06
definitions.ShardCountObject.minimum: 0
definitions.ShardCountObject.type: integer
definitions.ShardId.maxLength: 128
definitions.ShardId.minLength: 1
definitions.ShardId.pattern: '[a-zA-Z0-9_.-]+'
definitions.ShardId.type: string
definitions.ShardIterator.maxLength: 512
definitions.ShardIterator.minLength: 1
definitions.ShardIterator.type: string
definitions.ShardIteratorType.enum.length: 5
definitions.ShardIteratorType.enum[0]: AT_SEQUENCE_NUMBER
definitions.ShardIteratorType.enum[1]: AFTER_SEQUENCE_NUMBER
definitions.ShardIteratorType.enum[2]: TRIM_HORIZON
definitions.ShardIteratorType.enum[3]: LATEST
definitions.ShardIteratorType.enum[4]: AT_TIMESTAMP
definitions.ShardIteratorType.type: string
definitions.ShardList.items.$ref: '#/definitions/Shard'
definitions.ShardList.type: array
definitions.SplitShardInput.description: Represents the input for <code>SplitShard</code>.
definitions.SplitShardInput.properties.NewStartingHashKey.$ref: '#/definitions/HashKey'
definitions.SplitShardInput.properties.NewStartingHashKey.description: A hash key
  value for the starting hash key of one of the child shards created by the split.
  The hash key range for a given shard constitutes a set of ordered contiguous positive
  integers. The value for <code>NewStartingHashKey</code> must be in the range of
  hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash
  key value and all higher hash key values in hash key range are distributed to one
  of the child shards. All the lower hash key values in the range are distributed
  to the other child shard.
definitions.SplitShardInput.properties.ShardToSplit.$ref: '#/definitions/ShardId'
definitions.SplitShardInput.properties.ShardToSplit.description: The shard ID of the
  shard to split.
definitions.SplitShardInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.SplitShardInput.properties.StreamName.description: The name of the stream
  for the shard split.
definitions.SplitShardInput.required.length: 3
definitions.SplitShardInput.required[0]: StreamName
definitions.SplitShardInput.required[1]: ShardToSplit
definitions.SplitShardInput.required[2]: NewStartingHashKey
definitions.SplitShardInput.type: object
definitions.StartStreamEncryptionInput.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.StartStreamEncryptionInput.properties.EncryptionType.description: '<p>The
  encryption type to use. This parameter can be one of the following values:</p> <ul>
  <li> <p> <code>NONE</code>: Not valid for this operation. An <code>InvalidOperationException</code>
  will be thrown.</p> </li> <li> <p> <code>KMS</code>: Use server-side encryption
  on the records in the stream using a customer-managed KMS key.</p> </li> </ul>'
definitions.StartStreamEncryptionInput.properties.KeyId.$ref: '#/definitions/KeyId'
definitions.StartStreamEncryptionInput.properties.KeyId.description: The GUID for
  the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned
  master key by specifying the alias <code>aws/kinesis</code>.
definitions.StartStreamEncryptionInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.StartStreamEncryptionInput.properties.StreamName.description: The name
  of the stream for which to start encrypting records.
definitions.StartStreamEncryptionInput.required.length: 3
definitions.StartStreamEncryptionInput.required[0]: StreamName
definitions.StartStreamEncryptionInput.required[1]: EncryptionType
definitions.StartStreamEncryptionInput.required[2]: KeyId
definitions.StartStreamEncryptionInput.type: object
definitions.StopStreamEncryptionInput.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.StopStreamEncryptionInput.properties.EncryptionType.description: '<p>The
  encryption type. This parameter can be one of the following values:</p> <ul> <li>
  <p> <code>NONE</code>: Not valid for this operation. An <code>InvalidOperationException</code>
  will be thrown.</p> </li> <li> <p> <code>KMS</code>: Use server-side encryption
  on the records in the stream using a customer-managed KMS key.</p> </li> </ul>'
definitions.StopStreamEncryptionInput.properties.KeyId.$ref: '#/definitions/KeyId'
definitions.StopStreamEncryptionInput.properties.KeyId.description: The GUID for the
  customer-managed key that was used for encryption.
definitions.StopStreamEncryptionInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.StopStreamEncryptionInput.properties.StreamName.description: The name
  of the stream on which to stop encrypting records.
definitions.StopStreamEncryptionInput.required.length: 3
definitions.StopStreamEncryptionInput.required[0]: StreamName
definitions.StopStreamEncryptionInput.required[1]: EncryptionType
definitions.StopStreamEncryptionInput.required[2]: KeyId
definitions.StopStreamEncryptionInput.type: object
definitions.StreamARN.type: string
definitions.StreamDescription.description: Represents the output for <a>DescribeStream</a>.
definitions.StreamDescription.properties.EncryptionType.$ref: '#/definitions/EncryptionType'
definitions.StreamDescription.properties.EncryptionType.description: '<p>The server-side
  encryption type used on the stream. This parameter can be one of the following values:</p>
  <ul> <li> <p> <code>NONE</code>: Do not encrypt the records in the stream.</p> </li>
  <li> <p> <code>KMS</code>: Use server-side encryption on the records in the stream
  using a customer-managed KMS key.</p> </li> </ul>'
definitions.StreamDescription.properties.EnhancedMonitoring.$ref: '#/definitions/EnhancedMonitoringList'
definitions.StreamDescription.properties.EnhancedMonitoring.description: Represents
  the current enhanced monitoring settings of the stream.
definitions.StreamDescription.properties.HasMoreShards.$ref: '#/definitions/BooleanObject'
definitions.StreamDescription.properties.HasMoreShards.description: If set to <code>true</code>,
  more shards in the stream are available to describe.
definitions.StreamDescription.properties.KeyId.$ref: '#/definitions/KeyId'
definitions.StreamDescription.properties.KeyId.description: The GUID for the customer-managed
  KMS key used for encryption on the stream.
definitions.StreamDescription.properties.RetentionPeriodHours.$ref: '#/definitions/PositiveIntegerObject'
definitions.StreamDescription.properties.RetentionPeriodHours.description: The current
  retention period, in hours.
definitions.StreamDescription.properties.Shards.$ref: '#/definitions/ShardList'
definitions.StreamDescription.properties.Shards.description: The shards that comprise
  the stream.
definitions.StreamDescription.properties.StreamARN.$ref: '#/definitions/StreamARN'
definitions.StreamDescription.properties.StreamARN.description: The Amazon Resource
  Name (ARN) for the stream being described.
definitions.StreamDescription.properties.StreamCreationTimestamp.$ref: '#/definitions/Timestamp'
definitions.StreamDescription.properties.StreamCreationTimestamp.description: The
  approximate time that the stream was created.
definitions.StreamDescription.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.StreamDescription.properties.StreamName.description: The name of the stream
  being described.
definitions.StreamDescription.properties.StreamStatus.$ref: '#/definitions/StreamStatus'
definitions.StreamDescription.properties.StreamStatus.description: <p>The current
  status of the stream being described. The stream status is one of the following
  states:</p> <ul> <li> <p> <code>CREATING</code> - The stream is being created. Amazon
  Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</p>
  </li> <li> <p> <code>DELETING</code> - The stream is being deleted. The specified
  stream is in the <code>DELETING</code> state until Amazon Kinesis completes the
  deletion.</p> </li> <li> <p> <code>ACTIVE</code> - The stream exists and is ready
  for read and write operations or deletion. You should perform read and write operations
  only on an <code>ACTIVE</code> stream.</p> </li> <li> <p> <code>UPDATING</code>
  - Shards in the stream are being merged or split. Read and write operations continue
  to work while the stream is in the <code>UPDATING</code> state.</p> </li> </ul>
definitions.StreamDescription.required.length: 8
definitions.StreamDescription.required[0]: StreamName
definitions.StreamDescription.required[1]: StreamARN
definitions.StreamDescription.required[2]: StreamStatus
definitions.StreamDescription.required[3]: Shards
definitions.StreamDescription.required[4]: HasMoreShards
definitions.StreamDescription.required[5]: RetentionPeriodHours
definitions.StreamDescription.required[6]: StreamCreationTimestamp
definitions.StreamDescription.required[7]: EnhancedMonitoring
definitions.StreamDescription.type: object
definitions.StreamName.maxLength: 128
definitions.StreamName.minLength: 1
definitions.StreamName.pattern: '[a-zA-Z0-9_.-]+'
definitions.StreamName.type: string
definitions.StreamNameList.items.$ref: '#/definitions/StreamName'
definitions.StreamNameList.type: array
definitions.StreamStatus.enum.length: 4
definitions.StreamStatus.enum[0]: CREATING
definitions.StreamStatus.enum[1]: DELETING
definitions.StreamStatus.enum[2]: ACTIVE
definitions.StreamStatus.enum[3]: UPDATING
definitions.StreamStatus.type: string
definitions.Tag.description: Metadata assigned to the stream, consisting of a key-value
  pair.
definitions.Tag.properties.Key.$ref: '#/definitions/TagKey'
definitions.Tag.properties.Key.description: 'A unique identifier for the tag. Maximum
  length: 128 characters. Valid characters: Unicode letters, digits, white space,
  _ . / = + - % @'
definitions.Tag.properties.Value.$ref: '#/definitions/TagValue'
definitions.Tag.properties.Value.description: 'An optional string, typically used
  to describe or define the tag. Maximum length: 256 characters. Valid characters:
  Unicode letters, digits, white space, _ . / = + - % @'
definitions.Tag.required.length: 1
definitions.Tag.required[0]: Key
definitions.Tag.type: object
definitions.TagKey.maxLength: 128
definitions.TagKey.minLength: 1
definitions.TagKey.type: string
definitions.TagKeyList.items.$ref: '#/definitions/TagKey'
definitions.TagKeyList.maxItems: 10
definitions.TagKeyList.minItems: 1
definitions.TagKeyList.type: array
definitions.TagList.items.$ref: '#/definitions/Tag'
definitions.TagList.minItems: 0
definitions.TagList.type: array
definitions.TagMap.items.properties.key.$ref: '#/definitions/TagKey'
definitions.TagMap.items.properties.value.$ref: '#/definitions/TagValue'
definitions.TagMap.items.type: object
definitions.TagMap.maxItems: 10
definitions.TagMap.minItems: 1
definitions.TagMap.type: array
definitions.TagValue.maxLength: 256
definitions.TagValue.minLength: 0
definitions.TagValue.type: string
definitions.Timestamp.format: date-time
definitions.Timestamp.type: string
definitions.UpdateShardCountInput.properties.ScalingType.$ref: '#/definitions/ScalingType'
definitions.UpdateShardCountInput.properties.ScalingType.description: The scaling
  type. Uniform scaling creates shards of equal size.
definitions.UpdateShardCountInput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.UpdateShardCountInput.properties.StreamName.description: The name of the
  stream.
definitions.UpdateShardCountInput.properties.TargetShardCount.$ref: '#/definitions/PositiveIntegerObject'
definitions.UpdateShardCountInput.properties.TargetShardCount.description: The new
  number of shards.
definitions.UpdateShardCountInput.required.length: 3
definitions.UpdateShardCountInput.required[0]: StreamName
definitions.UpdateShardCountInput.required[1]: TargetShardCount
definitions.UpdateShardCountInput.required[2]: ScalingType
definitions.UpdateShardCountInput.type: object
definitions.UpdateShardCountOutput.properties.CurrentShardCount.$ref: '#/definitions/PositiveIntegerObject'
definitions.UpdateShardCountOutput.properties.CurrentShardCount.description: The current
  number of shards.
definitions.UpdateShardCountOutput.properties.StreamName.$ref: '#/definitions/StreamName'
definitions.UpdateShardCountOutput.properties.StreamName.description: The name of
  the stream.
definitions.UpdateShardCountOutput.properties.TargetShardCount.$ref: '#/definitions/PositiveIntegerObject'
definitions.UpdateShardCountOutput.properties.TargetShardCount.description: The updated
  number of shards.
definitions.UpdateShardCountOutput.type: object
externalDocs.description: Amazon Web Services documentation
externalDocs.url: https://aws.amazon.com/kinesis/
host: kinesis.amazonaws.com
info.contact.email: mike.ralphson@gmail.com
info.contact.name: Mike Ralphson
info.contact.url: https://github.com/mermade/aws2openapi
info.description: <fullname>Amazon Kinesis Streams Service API Reference</fullname>
  <p>Amazon Kinesis Streams is a managed service that scales elastically for real
  time processing of streaming big data.</p>
info.license.name: Apache 2.0 License
info.license.url: http://www.apache.org/licenses/
info.termsOfService: https://aws.amazon.com/service-terms/
info.title: Amazon Kinesis
info.version: 2013-12-02
info.x-apiClientRegistration.url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: cloud
info.x-logo.backgroundColor: '#FFFFFF'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg
info.x-origin.length: 1
info.x-origin[0].contentType: application/json
info.x-origin[0].converter.url: https://github.com/mermade/aws2openapi
info.x-origin[0].converter.version: 1.0.0
info.x-origin[0].url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesis-2013-12-02.normal.json
info.x-origin[0].x-apisguru-direct: true
info.x-preferred: true
info.x-providerName: amazonaws.com
info.x-release: v4
info.x-serviceName: kinesis
parameters.Action.in: header
parameters.Action.name: Action
parameters.Action.required: true
parameters.Action.type: string
parameters.Version.in: header
parameters.Version.name: Version
parameters.Version.required: true
parameters.Version.type: string
parameters.X-Amz-Algorithm.in: header
parameters.X-Amz-Algorithm.name: X-Amz-Algorithm
parameters.X-Amz-Algorithm.required: false
parameters.X-Amz-Algorithm.type: string
parameters.X-Amz-Content-Sha256.in: header
parameters.X-Amz-Content-Sha256.name: X-Amz-Content-Sha256
parameters.X-Amz-Content-Sha256.required: false
parameters.X-Amz-Content-Sha256.type: string
parameters.X-Amz-Credential.in: header
parameters.X-Amz-Credential.name: X-Amz-Credential
parameters.X-Amz-Credential.required: false
parameters.X-Amz-Credential.type: string
parameters.X-Amz-Date.in: header
parameters.X-Amz-Date.name: X-Amz-Date
parameters.X-Amz-Date.required: false
parameters.X-Amz-Date.type: string
parameters.X-Amz-Security-Token.in: header
parameters.X-Amz-Security-Token.name: X-Amz-Security-Token
parameters.X-Amz-Security-Token.required: false
parameters.X-Amz-Security-Token.type: string
parameters.X-Amz-Signature.in: header
parameters.X-Amz-Signature.name: X-Amz-Signature
parameters.X-Amz-Signature.required: false
parameters.X-Amz-Signature.type: string
parameters.X-Amz-SignedHeaders.in: header
parameters.X-Amz-SignedHeaders.name: X-Amz-SignedHeaders
parameters.X-Amz-SignedHeaders.required: false
parameters.X-Amz-SignedHeaders.type: string
paths./#CreateStream.parameters.length: 9
paths./#CreateStream.parameters[0].$ref: '#/parameters/Action'
paths./#CreateStream.parameters[1].$ref: '#/parameters/Version'
paths./#CreateStream.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateStream.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateStream.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateStream.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateStream.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateStream.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateStream.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateStream.post.description: <p>Creates an Amazon Kinesis stream. A stream
  captures and transports data records that are continuously emitted from different
  data sources or <i>producers</i>. Scale-out within a stream is explicitly supported
  by means of shards, which are uniquely identified groups of data records in a stream.</p>
  <p>You specify and control the number of shards that a stream is composed of. Each
  shard can support reads up to 5 transactions per second, up to a maximum data read
  total of 2 MB per second. Each shard can support writes up to 1,000 records per
  second, up to a maximum data write total of 1 MB per second. You can add shards
  to a stream if the amount of data input increases and you can remove shards if the
  amount of data input decreases.</p> <p>The stream name identifies the stream. The
  name is scoped to the AWS account used by the application. It is also scoped by
  region. That is, two streams in two different accounts can have the same name, and
  two streams in the same account, but in two different regions, can have the same
  name.</p> <p> <code>CreateStream</code> is an asynchronous operation. Upon receiving
  a <code>CreateStream</code> request, Amazon Kinesis immediately returns and sets
  the stream status to <code>CREATING</code>. After the stream is created, Amazon
  Kinesis sets the stream status to <code>ACTIVE</code>. You should perform read and
  write operations only on an <code>ACTIVE</code> stream. </p> <p>You receive a <code>LimitExceededException</code>
  when making a <code>CreateStream</code> request if you try to do one of the following:</p>
  <ul> <li> <p>Have more than five streams in the <code>CREATING</code> state at any
  point in time.</p> </li> <li> <p>Create more shards than are authorized for your
  account.</p> </li> </ul> <p>For the default shard limit for an AWS account, see
  <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>. If you need to
  increase this limit, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
  AWS Support</a>.</p> <p>You can use <code>DescribeStream</code> to check the stream
  status, which is returned in <code>StreamStatus</code>.</p> <p> <a>CreateStream</a>
  has a limit of 5 transactions per second per account.</p>
paths./#CreateStream.post.operationId: CreateStream
paths./#CreateStream.post.parameters.length: 1
paths./#CreateStream.post.parameters[0].in: body
paths./#CreateStream.post.parameters[0].name: body
paths./#CreateStream.post.parameters[0].required: true
paths./#CreateStream.post.parameters[0].schema.$ref: '#/definitions/CreateStreamInput'
paths./#CreateStream.post.responses.200.description: Success
paths./#CreateStream.post.responses.480.description: ResourceInUseException
paths./#CreateStream.post.responses.480.schema.$ref: '#/definitions/ResourceInUseException'
paths./#CreateStream.post.responses.481.description: LimitExceededException
paths./#CreateStream.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateStream.post.responses.482.description: InvalidArgumentException
paths./#CreateStream.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#DecreaseStreamRetentionPeriod.parameters.length: 9
paths./#DecreaseStreamRetentionPeriod.parameters[0].$ref: '#/parameters/Action'
paths./#DecreaseStreamRetentionPeriod.parameters[1].$ref: '#/parameters/Version'
paths./#DecreaseStreamRetentionPeriod.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DecreaseStreamRetentionPeriod.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DecreaseStreamRetentionPeriod.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DecreaseStreamRetentionPeriod.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DecreaseStreamRetentionPeriod.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DecreaseStreamRetentionPeriod.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DecreaseStreamRetentionPeriod.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DecreaseStreamRetentionPeriod.post.description: <p>Decreases the Amazon Kinesis
  stream's retention period, which is the length of time data records are accessible
  after they are added to the stream. The minimum value of a stream's retention period
  is 24 hours.</p> <p>This operation may result in lost data. For example, if the
  stream's retention period is 48 hours and is decreased to 24 hours, any data already
  in the stream that is older than 24 hours is inaccessible.</p>
paths./#DecreaseStreamRetentionPeriod.post.operationId: DecreaseStreamRetentionPeriod
paths./#DecreaseStreamRetentionPeriod.post.parameters.length: 1
paths./#DecreaseStreamRetentionPeriod.post.parameters[0].in: body
paths./#DecreaseStreamRetentionPeriod.post.parameters[0].name: body
paths./#DecreaseStreamRetentionPeriod.post.parameters[0].required: true
paths./#DecreaseStreamRetentionPeriod.post.parameters[0].schema.$ref: '#/definitions/DecreaseStreamRetentionPeriodInput'
paths./#DecreaseStreamRetentionPeriod.post.responses.200.description: Success
paths./#DecreaseStreamRetentionPeriod.post.responses.480.description: ResourceInUseException
paths./#DecreaseStreamRetentionPeriod.post.responses.480.schema.$ref: '#/definitions/ResourceInUseException'
paths./#DecreaseStreamRetentionPeriod.post.responses.481.description: ResourceNotFoundException
paths./#DecreaseStreamRetentionPeriod.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DecreaseStreamRetentionPeriod.post.responses.482.description: InvalidArgumentException
paths./#DecreaseStreamRetentionPeriod.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#DeleteStream.parameters.length: 9
paths./#DeleteStream.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteStream.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteStream.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteStream.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteStream.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteStream.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteStream.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteStream.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteStream.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteStream.post.description: <p>Deletes an Amazon Kinesis stream and all
  its shards and data. You must shut down any applications that are operating on the
  stream before you delete the stream. If an application attempts to operate on a
  deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.</p>
  <p>If the stream is in the <code>ACTIVE</code> state, you can delete it. After a
  <code>DeleteStream</code> request, the specified stream is in the <code>DELETING</code>
  state until Amazon Kinesis completes the deletion.</p> <p> <b>Note:</b> Amazon Kinesis
  might continue to accept data read and write operations, such as <a>PutRecord</a>,
  <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in the <code>DELETING</code>
  state until the stream deletion is complete.</p> <p>When you delete a stream, any
  shards in that stream are also deleted, and any tags are dissociated from the stream.</p>
  <p>You can use the <a>DescribeStream</a> operation to check the state of the stream,
  which is returned in <code>StreamStatus</code>.</p> <p> <a>DeleteStream</a> has
  a limit of 5 transactions per second per account.</p>
paths./#DeleteStream.post.operationId: DeleteStream
paths./#DeleteStream.post.parameters.length: 1
paths./#DeleteStream.post.parameters[0].in: body
paths./#DeleteStream.post.parameters[0].name: body
paths./#DeleteStream.post.parameters[0].required: true
paths./#DeleteStream.post.parameters[0].schema.$ref: '#/definitions/DeleteStreamInput'
paths./#DeleteStream.post.responses.200.description: Success
paths./#DeleteStream.post.responses.480.description: ResourceNotFoundException
paths./#DeleteStream.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteStream.post.responses.481.description: LimitExceededException
paths./#DeleteStream.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#DescribeLimits.parameters.length: 9
paths./#DescribeLimits.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeLimits.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeLimits.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeLimits.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeLimits.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeLimits.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeLimits.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeLimits.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeLimits.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeLimits.post.description: <p>Describes the shard limits and usage for
  the account.</p> <p>If you update your account limits, the old limits might be returned
  for a few minutes.</p> <p>This operation has a limit of 1 transaction per second
  per account.</p>
paths./#DescribeLimits.post.operationId: DescribeLimits
paths./#DescribeLimits.post.parameters.length: 1
paths./#DescribeLimits.post.parameters[0].in: body
paths./#DescribeLimits.post.parameters[0].name: body
paths./#DescribeLimits.post.parameters[0].required: true
paths./#DescribeLimits.post.parameters[0].schema.$ref: '#/definitions/DescribeLimitsInput'
paths./#DescribeLimits.post.responses.200.description: Success
paths./#DescribeLimits.post.responses.200.schema.$ref: '#/definitions/DescribeLimitsOutput'
paths./#DescribeLimits.post.responses.480.description: LimitExceededException
paths./#DescribeLimits.post.responses.480.schema.$ref: '#/definitions/LimitExceededException'
paths./#DescribeStream.parameters.length: 9
paths./#DescribeStream.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeStream.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeStream.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeStream.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeStream.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeStream.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeStream.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeStream.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeStream.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeStream.post.description: <p>Describes the specified Amazon Kinesis
  stream.</p> <p>The information returned includes the stream name, Amazon Resource
  Name (ARN), creation time, enhanced metric configuration, and shard map. The shard
  map is an array of shard objects. For each shard object, there is the hash key and
  sequence number ranges that the shard spans, and the IDs of any earlier shards that
  played in a role in creating the shard. Every record ingested in the stream is identified
  by a sequence number, which is assigned when the record is put into the stream.</p>
  <p>You can limit the number of shards returned by each call. For more information,
  see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-retrieve-shards.html">Retrieving
  Shards from a Stream</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p>
  <p>There are no guarantees about the chronological order shards returned. To process
  shards in chronological order, use the ID of the parent shard to track the lineage
  to the oldest shard.</p> <p>This operation has a limit of 10 transactions per second
  per account.</p>
paths./#DescribeStream.post.operationId: DescribeStream
paths./#DescribeStream.post.parameters.length: 3
paths./#DescribeStream.post.parameters[0].in: body
paths./#DescribeStream.post.parameters[0].name: body
paths./#DescribeStream.post.parameters[0].required: true
paths./#DescribeStream.post.parameters[0].schema.$ref: '#/definitions/DescribeStreamInput'
paths./#DescribeStream.post.parameters[1].description: Pagination limit
paths./#DescribeStream.post.parameters[1].in: query
paths./#DescribeStream.post.parameters[1].name: Limit
paths./#DescribeStream.post.parameters[1].required: false
paths./#DescribeStream.post.parameters[1].type: string
paths./#DescribeStream.post.parameters[2].description: Pagination token
paths./#DescribeStream.post.parameters[2].in: query
paths./#DescribeStream.post.parameters[2].name: ExclusiveStartShardId
paths./#DescribeStream.post.parameters[2].required: false
paths./#DescribeStream.post.parameters[2].type: string
paths./#DescribeStream.post.responses.200.description: Success
paths./#DescribeStream.post.responses.200.schema.$ref: '#/definitions/DescribeStreamOutput'
paths./#DescribeStream.post.responses.480.description: ResourceNotFoundException
paths./#DescribeStream.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeStream.post.responses.481.description: LimitExceededException
paths./#DescribeStream.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#DescribeStream.post.x-waiters.length: 2
paths./#DescribeStream.post.x-waiters[0].acceptors.length: 1
paths./#DescribeStream.post.x-waiters[0].acceptors[0].argument: StreamDescription.StreamStatus
paths./#DescribeStream.post.x-waiters[0].acceptors[0].expected: ACTIVE
paths./#DescribeStream.post.x-waiters[0].acceptors[0].matcher: path
paths./#DescribeStream.post.x-waiters[0].acceptors[0].state: success
paths./#DescribeStream.post.x-waiters[0].delay: 10
paths./#DescribeStream.post.x-waiters[0].maxAttempts: 18
paths./#DescribeStream.post.x-waiters[0].operation: DescribeStream
paths./#DescribeStream.post.x-waiters[1].acceptors.length: 1
paths./#DescribeStream.post.x-waiters[1].acceptors[0].expected: ResourceNotFoundException
paths./#DescribeStream.post.x-waiters[1].acceptors[0].matcher: error
paths./#DescribeStream.post.x-waiters[1].acceptors[0].state: success
paths./#DescribeStream.post.x-waiters[1].delay: 10
paths./#DescribeStream.post.x-waiters[1].maxAttempts: 18
paths./#DescribeStream.post.x-waiters[1].operation: DescribeStream
paths./#DisableEnhancedMonitoring.parameters.length: 9
paths./#DisableEnhancedMonitoring.parameters[0].$ref: '#/parameters/Action'
paths./#DisableEnhancedMonitoring.parameters[1].$ref: '#/parameters/Version'
paths./#DisableEnhancedMonitoring.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DisableEnhancedMonitoring.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DisableEnhancedMonitoring.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DisableEnhancedMonitoring.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DisableEnhancedMonitoring.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DisableEnhancedMonitoring.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DisableEnhancedMonitoring.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DisableEnhancedMonitoring.post.description: Disables enhanced monitoring.
paths./#DisableEnhancedMonitoring.post.operationId: DisableEnhancedMonitoring
paths./#DisableEnhancedMonitoring.post.parameters.length: 1
paths./#DisableEnhancedMonitoring.post.parameters[0].in: body
paths./#DisableEnhancedMonitoring.post.parameters[0].name: body
paths./#DisableEnhancedMonitoring.post.parameters[0].required: true
paths./#DisableEnhancedMonitoring.post.parameters[0].schema.$ref: '#/definitions/DisableEnhancedMonitoringInput'
paths./#DisableEnhancedMonitoring.post.responses.200.description: Success
paths./#DisableEnhancedMonitoring.post.responses.200.schema.$ref: '#/definitions/EnhancedMonitoringOutput'
paths./#DisableEnhancedMonitoring.post.responses.480.description: InvalidArgumentException
paths./#DisableEnhancedMonitoring.post.responses.480.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#DisableEnhancedMonitoring.post.responses.481.description: LimitExceededException
paths./#DisableEnhancedMonitoring.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#DisableEnhancedMonitoring.post.responses.482.description: ResourceInUseException
paths./#DisableEnhancedMonitoring.post.responses.482.schema.$ref: '#/definitions/ResourceInUseException'
paths./#DisableEnhancedMonitoring.post.responses.483.description: ResourceNotFoundException
paths./#DisableEnhancedMonitoring.post.responses.483.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#EnableEnhancedMonitoring.parameters.length: 9
paths./#EnableEnhancedMonitoring.parameters[0].$ref: '#/parameters/Action'
paths./#EnableEnhancedMonitoring.parameters[1].$ref: '#/parameters/Version'
paths./#EnableEnhancedMonitoring.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#EnableEnhancedMonitoring.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#EnableEnhancedMonitoring.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#EnableEnhancedMonitoring.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#EnableEnhancedMonitoring.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#EnableEnhancedMonitoring.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#EnableEnhancedMonitoring.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#EnableEnhancedMonitoring.post.description: Enables enhanced Amazon Kinesis
  stream monitoring for shard-level metrics.
paths./#EnableEnhancedMonitoring.post.operationId: EnableEnhancedMonitoring
paths./#EnableEnhancedMonitoring.post.parameters.length: 1
paths./#EnableEnhancedMonitoring.post.parameters[0].in: body
paths./#EnableEnhancedMonitoring.post.parameters[0].name: body
paths./#EnableEnhancedMonitoring.post.parameters[0].required: true
paths./#EnableEnhancedMonitoring.post.parameters[0].schema.$ref: '#/definitions/EnableEnhancedMonitoringInput'
paths./#EnableEnhancedMonitoring.post.responses.200.description: Success
paths./#EnableEnhancedMonitoring.post.responses.200.schema.$ref: '#/definitions/EnhancedMonitoringOutput'
paths./#EnableEnhancedMonitoring.post.responses.480.description: InvalidArgumentException
paths./#EnableEnhancedMonitoring.post.responses.480.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#EnableEnhancedMonitoring.post.responses.481.description: LimitExceededException
paths./#EnableEnhancedMonitoring.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#EnableEnhancedMonitoring.post.responses.482.description: ResourceInUseException
paths./#EnableEnhancedMonitoring.post.responses.482.schema.$ref: '#/definitions/ResourceInUseException'
paths./#EnableEnhancedMonitoring.post.responses.483.description: ResourceNotFoundException
paths./#EnableEnhancedMonitoring.post.responses.483.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetRecords.parameters.length: 9
paths./#GetRecords.parameters[0].$ref: '#/parameters/Action'
paths./#GetRecords.parameters[1].$ref: '#/parameters/Version'
paths./#GetRecords.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetRecords.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetRecords.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetRecords.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetRecords.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetRecords.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetRecords.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetRecords.post.description: <p>Gets data records from an Amazon Kinesis stream's
  shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter.
  The shard iterator specifies the position in the shard from which you want to start
  reading data records sequentially. If there are no records available in the portion
  of the shard that the iterator points to, <a>GetRecords</a> returns an empty list.
  Note that it might take multiple calls to get to a portion of the shard that contains
  records.</p> <p>You can scale by provisioning multiple shards per stream while considering
  service limits (for more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>). Your application
  should have one thread per shard, each reading continuously from its stream. To
  read from a stream continually, call <a>GetRecords</a> in a loop. Use <a>GetShardIterator</a>
  to get the shard iterator to specify in the first <a>GetRecords</a> call. <a>GetRecords</a>
  returns a new shard iterator in <code>NextShardIterator</code>. Specify the shard
  iterator returned in <code>NextShardIterator</code> in subsequent calls to <a>GetRecords</a>.
  Note that if the shard has been closed, the shard iterator can't return more data
  and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>.
  You can terminate the loop when the shard is closed, or when the shard iterator
  reaches the record with the sequence number or other attribute that marks it as
  the last record to process.</p> <p>Each data record can be up to 1 MB in size, and
  each shard can read up to 2 MB per second. You can ensure that your calls don't
  exceed the maximum supported size or throughput by using the <code>Limit</code>
  parameter to specify the maximum number of records that <a>GetRecords</a> can return.
  Consider your average record size when determining this limit.</p> <p>The size of
  the data returned by <a>GetRecords</a> varies depending on the utilization of the
  shard. The maximum size of data that <a>GetRecords</a> can return is 10 MB. If a
  call returns this amount of data, subsequent calls made within the next 5 seconds
  throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient
  provisioned throughput on the shard, subsequent calls made within the next 1 second
  throw <code>ProvisionedThroughputExceededException</code>. Note that <a>GetRecords</a>
  won't return any data when it throws an exception. For this reason, we recommend
  that you wait one second between calls to <a>GetRecords</a>; however, it's possible
  that the application will get exceptions for longer than 1 second.</p> <p>To detect
  whether the application is falling behind in processing, you can use the <code>MillisBehindLatest</code>
  response attribute. You can also monitor the stream using CloudWatch metrics and
  other mechanisms (see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html">Monitoring</a>
  in the <i>Amazon Kinesis Streams Developer Guide</i>).</p> <p>Each Amazon Kinesis
  record includes a value, <code>ApproximateArrivalTimestamp</code>, that is set when
  a stream successfully receives and stores a record. This is commonly referred to
  as a server-side timestamp, whereas a client-side timestamp is set when a data producer
  creates or sends the record to a stream (a data producer is any data source putting
  data records into a stream, for example with <a>PutRecords</a>). The timestamp has
  millisecond precision. There are no guarantees about the timestamp accuracy, or
  that the timestamp is always increasing. For example, records in a shard or across
  a stream might have timestamps that are out of order.</p>
paths./#GetRecords.post.operationId: GetRecords
paths./#GetRecords.post.parameters.length: 1
paths./#GetRecords.post.parameters[0].in: body
paths./#GetRecords.post.parameters[0].name: body
paths./#GetRecords.post.parameters[0].required: true
paths./#GetRecords.post.parameters[0].schema.$ref: '#/definitions/GetRecordsInput'
paths./#GetRecords.post.responses.200.description: Success
paths./#GetRecords.post.responses.200.schema.$ref: '#/definitions/GetRecordsOutput'
paths./#GetRecords.post.responses.480.description: ResourceNotFoundException
paths./#GetRecords.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetRecords.post.responses.481.description: InvalidArgumentException
paths./#GetRecords.post.responses.481.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#GetRecords.post.responses.482.description: ProvisionedThroughputExceededException
paths./#GetRecords.post.responses.482.schema.$ref: '#/definitions/ProvisionedThroughputExceededException'
paths./#GetRecords.post.responses.483.description: ExpiredIteratorException
paths./#GetRecords.post.responses.483.schema.$ref: '#/definitions/ExpiredIteratorException'
paths./#GetRecords.post.responses.484.description: KMSDisabledException
paths./#GetRecords.post.responses.484.schema.$ref: '#/definitions/KMSDisabledException'
paths./#GetRecords.post.responses.485.description: KMSInvalidStateException
paths./#GetRecords.post.responses.485.schema.$ref: '#/definitions/KMSInvalidStateException'
paths./#GetRecords.post.responses.486.description: KMSAccessDeniedException
paths./#GetRecords.post.responses.486.schema.$ref: '#/definitions/KMSAccessDeniedException'
paths./#GetRecords.post.responses.487.description: KMSNotFoundException
paths./#GetRecords.post.responses.487.schema.$ref: '#/definitions/KMSNotFoundException'
paths./#GetRecords.post.responses.488.description: KMSOptInRequired
paths./#GetRecords.post.responses.488.schema.$ref: '#/definitions/KMSOptInRequired'
paths./#GetRecords.post.responses.489.description: KMSThrottlingException
paths./#GetRecords.post.responses.489.schema.$ref: '#/definitions/KMSThrottlingException'
paths./#GetShardIterator.parameters.length: 9
paths./#GetShardIterator.parameters[0].$ref: '#/parameters/Action'
paths./#GetShardIterator.parameters[1].$ref: '#/parameters/Version'
paths./#GetShardIterator.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetShardIterator.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetShardIterator.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetShardIterator.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetShardIterator.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetShardIterator.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetShardIterator.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetShardIterator.post.description: <p>Gets an Amazon Kinesis shard iterator.
  A shard iterator expires five minutes after it is returned to the requester.</p>
  <p>A shard iterator specifies the shard position from which to start reading data
  records sequentially. The position is specified using the sequence number of a data
  record in a shard. A sequence number is the identifier associated with every record
  ingested in the stream, and is assigned when a record is put into the stream. Each
  stream has one or more shards.</p> <p>You must specify the shard iterator type.
  For example, you can set the <code>ShardIteratorType</code> parameter to read exactly
  from the position denoted by a specific sequence number by using the <code>AT_SEQUENCE_NUMBER</code>
  shard iterator type, or right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code>
  shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>,
  <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. In the request,
  you can specify the shard iterator type <code>AT_TIMESTAMP</code> to read records
  from an arbitrary point in time, <code>TRIM_HORIZON</code> to cause <code>ShardIterator</code>
  to point to the last untrimmed record in the shard in the system (the oldest data
  record in the shard), or <code>LATEST</code> so that you always read the most recent
  data in the shard. </p> <p>When you read repeatedly from a stream, use a <a>GetShardIterator</a>
  request to get the first shard iterator for use in your first <a>GetRecords</a>
  request and for subsequent reads use the shard iterator returned by the <a>GetRecords</a>
  request in <code>NextShardIterator</code>. A new shard iterator is returned by every
  <a>GetRecords</a> request in <code>NextShardIterator</code>, which you use in the
  <code>ShardIterator</code> parameter of the next <a>GetRecords</a> request. </p>
  <p>If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>.
  For more information about throughput limits, see <a>GetRecords</a>, and <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>If the shard
  is closed, <a>GetShardIterator</a> returns a valid iterator for the last sequence
  number of the shard. Note that a shard can be closed as a result of using <a>SplitShard</a>
  or <a>MergeShards</a>.</p> <p> <a>GetShardIterator</a> has a limit of 5 transactions
  per second per account per open shard.</p>
paths./#GetShardIterator.post.operationId: GetShardIterator
paths./#GetShardIterator.post.parameters.length: 1
paths./#GetShardIterator.post.parameters[0].in: body
paths./#GetShardIterator.post.parameters[0].name: body
paths./#GetShardIterator.post.parameters[0].required: true
paths./#GetShardIterator.post.parameters[0].schema.$ref: '#/definitions/GetShardIteratorInput'
paths./#GetShardIterator.post.responses.200.description: Success
paths./#GetShardIterator.post.responses.200.schema.$ref: '#/definitions/GetShardIteratorOutput'
paths./#GetShardIterator.post.responses.480.description: ResourceNotFoundException
paths./#GetShardIterator.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetShardIterator.post.responses.481.description: InvalidArgumentException
paths./#GetShardIterator.post.responses.481.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#GetShardIterator.post.responses.482.description: ProvisionedThroughputExceededException
paths./#GetShardIterator.post.responses.482.schema.$ref: '#/definitions/ProvisionedThroughputExceededException'
paths./#IncreaseStreamRetentionPeriod.parameters.length: 9
paths./#IncreaseStreamRetentionPeriod.parameters[0].$ref: '#/parameters/Action'
paths./#IncreaseStreamRetentionPeriod.parameters[1].$ref: '#/parameters/Version'
paths./#IncreaseStreamRetentionPeriod.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#IncreaseStreamRetentionPeriod.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#IncreaseStreamRetentionPeriod.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#IncreaseStreamRetentionPeriod.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#IncreaseStreamRetentionPeriod.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#IncreaseStreamRetentionPeriod.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#IncreaseStreamRetentionPeriod.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#IncreaseStreamRetentionPeriod.post.description: <p>Increases the Amazon Kinesis
  stream's retention period, which is the length of time data records are accessible
  after they are added to the stream. The maximum value of a stream's retention period
  is 168 hours (7 days).</p> <p>Upon choosing a longer stream retention period, this
  operation will increase the time period records are accessible that have not yet
  expired. However, it will not make previous data that has expired (older than the
  stream's previous retention period) accessible after the operation has been called.
  For example, if a stream's retention period is set to 24 hours and is increased
  to 168 hours, any data that is older than 24 hours will remain inaccessible to consumer
  applications.</p>
paths./#IncreaseStreamRetentionPeriod.post.operationId: IncreaseStreamRetentionPeriod
paths./#IncreaseStreamRetentionPeriod.post.parameters.length: 1
paths./#IncreaseStreamRetentionPeriod.post.parameters[0].in: body
paths./#IncreaseStreamRetentionPeriod.post.parameters[0].name: body
paths./#IncreaseStreamRetentionPeriod.post.parameters[0].required: true
paths./#IncreaseStreamRetentionPeriod.post.parameters[0].schema.$ref: '#/definitions/IncreaseStreamRetentionPeriodInput'
paths./#IncreaseStreamRetentionPeriod.post.responses.200.description: Success
paths./#IncreaseStreamRetentionPeriod.post.responses.480.description: ResourceInUseException
paths./#IncreaseStreamRetentionPeriod.post.responses.480.schema.$ref: '#/definitions/ResourceInUseException'
paths./#IncreaseStreamRetentionPeriod.post.responses.481.description: ResourceNotFoundException
paths./#IncreaseStreamRetentionPeriod.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#IncreaseStreamRetentionPeriod.post.responses.482.description: InvalidArgumentException
paths./#IncreaseStreamRetentionPeriod.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#ListStreams.parameters.length: 9
paths./#ListStreams.parameters[0].$ref: '#/parameters/Action'
paths./#ListStreams.parameters[1].$ref: '#/parameters/Version'
paths./#ListStreams.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListStreams.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListStreams.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListStreams.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListStreams.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListStreams.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListStreams.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListStreams.post.description: <p>Lists your Amazon Kinesis streams.</p> <p>The
  number of streams may be too large to return from a single call to <code>ListStreams</code>.
  You can limit the number of returned streams using the <code>Limit</code> parameter.
  If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis
  uses the default limit, which is currently 10.</p> <p>You can detect if there are
  more streams available to list by using the <code>HasMoreStreams</code> flag from
  the returned output. If there are more streams available, you can request more streams
  by using the name of the last stream returned by the <code>ListStreams</code> request
  in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request to
  <code>ListStreams</code>. The group of stream names returned by the subsequent request
  is then added to the list. You can continue this process until all the stream names
  have been collected in the list. </p> <p> <a>ListStreams</a> has a limit of 5 transactions
  per second per account.</p>
paths./#ListStreams.post.operationId: ListStreams
paths./#ListStreams.post.parameters.length: 3
paths./#ListStreams.post.parameters[0].in: body
paths./#ListStreams.post.parameters[0].name: body
paths./#ListStreams.post.parameters[0].required: true
paths./#ListStreams.post.parameters[0].schema.$ref: '#/definitions/ListStreamsInput'
paths./#ListStreams.post.parameters[1].description: Pagination limit
paths./#ListStreams.post.parameters[1].in: query
paths./#ListStreams.post.parameters[1].name: Limit
paths./#ListStreams.post.parameters[1].required: false
paths./#ListStreams.post.parameters[1].type: string
paths./#ListStreams.post.parameters[2].description: Pagination token
paths./#ListStreams.post.parameters[2].in: query
paths./#ListStreams.post.parameters[2].name: ExclusiveStartStreamName
paths./#ListStreams.post.parameters[2].required: false
paths./#ListStreams.post.parameters[2].type: string
paths./#ListStreams.post.responses.200.description: Success
paths./#ListStreams.post.responses.200.schema.$ref: '#/definitions/ListStreamsOutput'
paths./#ListStreams.post.responses.480.description: LimitExceededException
paths./#ListStreams.post.responses.480.schema.$ref: '#/definitions/LimitExceededException'
paths./#ListTagsForStream.parameters.length: 9
paths./#ListTagsForStream.parameters[0].$ref: '#/parameters/Action'
paths./#ListTagsForStream.parameters[1].$ref: '#/parameters/Version'
paths./#ListTagsForStream.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListTagsForStream.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListTagsForStream.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListTagsForStream.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListTagsForStream.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListTagsForStream.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListTagsForStream.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListTagsForStream.post.description: Lists the tags for the specified Amazon
  Kinesis stream.
paths./#ListTagsForStream.post.operationId: ListTagsForStream
paths./#ListTagsForStream.post.parameters.length: 1
paths./#ListTagsForStream.post.parameters[0].in: body
paths./#ListTagsForStream.post.parameters[0].name: body
paths./#ListTagsForStream.post.parameters[0].required: true
paths./#ListTagsForStream.post.parameters[0].schema.$ref: '#/definitions/ListTagsForStreamInput'
paths./#ListTagsForStream.post.responses.200.description: Success
paths./#ListTagsForStream.post.responses.200.schema.$ref: '#/definitions/ListTagsForStreamOutput'
paths./#ListTagsForStream.post.responses.480.description: ResourceNotFoundException
paths./#ListTagsForStream.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListTagsForStream.post.responses.481.description: InvalidArgumentException
paths./#ListTagsForStream.post.responses.481.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#ListTagsForStream.post.responses.482.description: LimitExceededException
paths./#ListTagsForStream.post.responses.482.schema.$ref: '#/definitions/LimitExceededException'
paths./#MergeShards.parameters.length: 9
paths./#MergeShards.parameters[0].$ref: '#/parameters/Action'
paths./#MergeShards.parameters[1].$ref: '#/parameters/Version'
paths./#MergeShards.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#MergeShards.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#MergeShards.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#MergeShards.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#MergeShards.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#MergeShards.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#MergeShards.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#MergeShards.post.description: <p>Merges two adjacent shards in an Amazon Kinesis
  stream and combines them into a single shard to reduce the stream's capacity to
  ingest and transport data. Two shards are considered adjacent if the union of the
  hash key ranges for the two shards form a contiguous set with no gaps. For example,
  if you have two shards, one with a hash key range of 276...381 and the other with
  a hash key range of 382...454, then you could merge these two shards into a single
  shard that would have a hash key range of 276...454. After the merge, the single
  child shard receives data for all hash key values covered by the two parent shards.</p>
  <p> <code>MergeShards</code> is called when there is a need to reduce the overall
  capacity of a stream because of excess capacity that is not being used. You must
  specify the shard to be merged and the adjacent shard for a stream. For more information
  about merging shards, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html">Merge
  Two Shards</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>If the
  stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>.
  If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code>
  state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If
  the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>.
  </p> <p>You can use <a>DescribeStream</a> to check the state of the stream, which
  is returned in <code>StreamStatus</code>.</p> <p> <code>MergeShards</code> is an
  asynchronous operation. Upon receiving a <code>MergeShards</code> request, Amazon
  Kinesis immediately returns a response and sets the <code>StreamStatus</code> to
  <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the
  <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue
  to work while the stream is in the <code>UPDATING</code> state. </p> <p>You use
  <a>DescribeStream</a> to determine the shard IDs that are specified in the <code>MergeShards</code>
  request. </p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>,
  <a>DeleteStream</a>, <code>MergeShards</code> or <a>SplitShard</a>, you will receive
  a <code>LimitExceededException</code>. </p> <p> <code>MergeShards</code> has limit
  of 5 transactions per second per account.</p>
paths./#MergeShards.post.operationId: MergeShards
paths./#MergeShards.post.parameters.length: 1
paths./#MergeShards.post.parameters[0].in: body
paths./#MergeShards.post.parameters[0].name: body
paths./#MergeShards.post.parameters[0].required: true
paths./#MergeShards.post.parameters[0].schema.$ref: '#/definitions/MergeShardsInput'
paths./#MergeShards.post.responses.200.description: Success
paths./#MergeShards.post.responses.480.description: ResourceNotFoundException
paths./#MergeShards.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#MergeShards.post.responses.481.description: ResourceInUseException
paths./#MergeShards.post.responses.481.schema.$ref: '#/definitions/ResourceInUseException'
paths./#MergeShards.post.responses.482.description: InvalidArgumentException
paths./#MergeShards.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#MergeShards.post.responses.483.description: LimitExceededException
paths./#MergeShards.post.responses.483.schema.$ref: '#/definitions/LimitExceededException'
paths./#PutRecord.parameters.length: 9
paths./#PutRecord.parameters[0].$ref: '#/parameters/Action'
paths./#PutRecord.parameters[1].$ref: '#/parameters/Version'
paths./#PutRecord.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#PutRecord.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#PutRecord.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#PutRecord.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#PutRecord.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#PutRecord.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#PutRecord.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#PutRecord.post.description: <p>Writes a single data record into an Amazon
  Kinesis stream. Call <code>PutRecord</code> to send data into the stream for real-time
  ingestion and subsequent processing, one record at a time. Each shard can support
  writes up to 1,000 records per second, up to a maximum data write total of 1 MB
  per second.</p> <p>You must specify the name of the stream that captures, stores,
  and transports the data; a partition key; and the data blob itself.</p> <p>The data
  blob can be any type of data; for example, a segment from a log file, geographic/location
  data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon
  Kinesis to distribute data across shards. Amazon Kinesis segregates the data records
  that belong to a stream into multiple shards, using the partition key associated
  with each data record to determine which shard a given data record belongs to.</p>
  <p>Partition keys are Unicode strings, with a maximum length limit of 256 characters
  for each key. An MD5 hash function is used to map partition keys to 128-bit integer
  values and to map associated data records to shards using the hash key ranges of
  the shards. You can override hashing the partition key to determine the shard by
  explicitly specifying a hash value using the <code>ExplicitHashKey</code> parameter.
  For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
  Data to a Stream</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>
  <code>PutRecord</code> returns the shard ID of where the data record was placed
  and the sequence number that was assigned to the data record.</p> <p>Sequence numbers
  increase over time and are specific to a shard within a stream, not across all shards
  within a stream. To guarantee strictly increasing ordering, write serially to a
  shard and use the <code>SequenceNumberForOrdering</code> parameter. For more information,
  see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
  Data to a Stream</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>If
  a <code>PutRecord</code> request cannot be processed because of insufficient provisioned
  throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>.
  </p> <p>By default, data records are accessible for 24 hours from the time that
  they are added to a stream. You can use <a>IncreaseStreamRetentionPeriod</a> or
  <a>DecreaseStreamRetentionPeriod</a> to modify this retention period.</p>
paths./#PutRecord.post.operationId: PutRecord
paths./#PutRecord.post.parameters.length: 1
paths./#PutRecord.post.parameters[0].in: body
paths./#PutRecord.post.parameters[0].name: body
paths./#PutRecord.post.parameters[0].required: true
paths./#PutRecord.post.parameters[0].schema.$ref: '#/definitions/PutRecordInput'
paths./#PutRecord.post.responses.200.description: Success
paths./#PutRecord.post.responses.200.schema.$ref: '#/definitions/PutRecordOutput'
paths./#PutRecord.post.responses.480.description: ResourceNotFoundException
paths./#PutRecord.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#PutRecord.post.responses.481.description: InvalidArgumentException
paths./#PutRecord.post.responses.481.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#PutRecord.post.responses.482.description: ProvisionedThroughputExceededException
paths./#PutRecord.post.responses.482.schema.$ref: '#/definitions/ProvisionedThroughputExceededException'
paths./#PutRecord.post.responses.483.description: KMSDisabledException
paths./#PutRecord.post.responses.483.schema.$ref: '#/definitions/KMSDisabledException'
paths./#PutRecord.post.responses.484.description: KMSInvalidStateException
paths./#PutRecord.post.responses.484.schema.$ref: '#/definitions/KMSInvalidStateException'
paths./#PutRecord.post.responses.485.description: KMSAccessDeniedException
paths./#PutRecord.post.responses.485.schema.$ref: '#/definitions/KMSAccessDeniedException'
paths./#PutRecord.post.responses.486.description: KMSNotFoundException
paths./#PutRecord.post.responses.486.schema.$ref: '#/definitions/KMSNotFoundException'
paths./#PutRecord.post.responses.487.description: KMSOptInRequired
paths./#PutRecord.post.responses.487.schema.$ref: '#/definitions/KMSOptInRequired'
paths./#PutRecord.post.responses.488.description: KMSThrottlingException
paths./#PutRecord.post.responses.488.schema.$ref: '#/definitions/KMSThrottlingException'
paths./#PutRecords.parameters.length: 9
paths./#PutRecords.parameters[0].$ref: '#/parameters/Action'
paths./#PutRecords.parameters[1].$ref: '#/parameters/Version'
paths./#PutRecords.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#PutRecords.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#PutRecords.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#PutRecords.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#PutRecords.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#PutRecords.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#PutRecords.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#PutRecords.post.description: '<p>Writes multiple data records into an Amazon
  Kinesis stream in a single call (also referred to as a <code>PutRecords</code> request).
  Use this operation to send data into the stream for data ingestion and processing.
  </p> <p>Each <code>PutRecords</code> request can support up to 500 records. Each
  record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire
  request, including partition keys. Each shard can support writes up to 1,000 records
  per second, up to a maximum data write total of 1 MB per second.</p> <p>You must
  specify the name of the stream that captures, stores, and transports the data; and
  an array of request <code>Records</code>, with each record in the array requiring
  a partition key and data blob. The record size limit applies to the total size of
  the partition key and data blob.</p> <p>The data blob can be any type of data; for
  example, a segment from a log file, geographic/location data, website clickstream
  data, and so on.</p> <p>The partition key is used by Amazon Kinesis as input to
  a hash function that maps the partition key and associated data to a specific shard.
  An MD5 hash function is used to map partition keys to 128-bit integer values and
  to map associated data records to shards. As a result of this hashing mechanism,
  all data records with the same partition key map to the same shard within the stream.
  For more information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream">Adding
  Data to a Stream</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>Each
  record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>,
  which overrides the partition key to shard mapping. This parameter allows a data
  producer to determine explicitly the shard where the record is stored. For more
  information, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords">Adding
  Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Streams Developer
  Guide</i>.</p> <p>The <code>PutRecords</code> response includes an array of response
  <code>Records</code>. Each record in the response array directly correlates with
  a record in the request array using natural ordering, from the top to the bottom
  of the request and response. The response <code>Records</code> array always includes
  the same number of records as the request array.</p> <p>The response <code>Records</code>
  array includes both successfully and unsuccessfully processed records. Amazon Kinesis
  attempts to process all records in each <code>PutRecords</code> request. A single
  record failure does not stop the processing of subsequent records.</p> <p>A successfully-processed
  record includes <code>ShardId</code> and <code>SequenceNumber</code> values. The
  <code>ShardId</code> parameter identifies the shard in the stream where the record
  is stored. The <code>SequenceNumber</code> parameter is an identifier assigned to
  the put record, unique to all records in the stream.</p> <p>An unsuccessfully-processed
  record includes <code>ErrorCode</code> and <code>ErrorMessage</code> values. <code>ErrorCode</code>
  reflects the type of error and can be one of the following values: <code>ProvisionedThroughputExceededException</code>
  or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed
  information about the <code>ProvisionedThroughputExceededException</code> exception
  including the account ID, stream name, and shard ID of the record that was throttled.
  For more information about partially successful responses, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords">Adding
  Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Streams Developer
  Guide</i>.</p> <p>By default, data records are accessible for 24 hours from the
  time that they are added to a stream. You can use <a>IncreaseStreamRetentionPeriod</a>
  or <a>DecreaseStreamRetentionPeriod</a> to modify this retention period.</p>'
paths./#PutRecords.post.operationId: PutRecords
paths./#PutRecords.post.parameters.length: 1
paths./#PutRecords.post.parameters[0].in: body
paths./#PutRecords.post.parameters[0].name: body
paths./#PutRecords.post.parameters[0].required: true
paths./#PutRecords.post.parameters[0].schema.$ref: '#/definitions/PutRecordsInput'
paths./#PutRecords.post.responses.200.description: Success
paths./#PutRecords.post.responses.200.schema.$ref: '#/definitions/PutRecordsOutput'
paths./#PutRecords.post.responses.480.description: ResourceNotFoundException
paths./#PutRecords.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#PutRecords.post.responses.481.description: InvalidArgumentException
paths./#PutRecords.post.responses.481.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#PutRecords.post.responses.482.description: ProvisionedThroughputExceededException
paths./#PutRecords.post.responses.482.schema.$ref: '#/definitions/ProvisionedThroughputExceededException'
paths./#PutRecords.post.responses.483.description: KMSDisabledException
paths./#PutRecords.post.responses.483.schema.$ref: '#/definitions/KMSDisabledException'
paths./#PutRecords.post.responses.484.description: KMSInvalidStateException
paths./#PutRecords.post.responses.484.schema.$ref: '#/definitions/KMSInvalidStateException'
paths./#PutRecords.post.responses.485.description: KMSAccessDeniedException
paths./#PutRecords.post.responses.485.schema.$ref: '#/definitions/KMSAccessDeniedException'
paths./#PutRecords.post.responses.486.description: KMSNotFoundException
paths./#PutRecords.post.responses.486.schema.$ref: '#/definitions/KMSNotFoundException'
paths./#PutRecords.post.responses.487.description: KMSOptInRequired
paths./#PutRecords.post.responses.487.schema.$ref: '#/definitions/KMSOptInRequired'
paths./#PutRecords.post.responses.488.description: KMSThrottlingException
paths./#PutRecords.post.responses.488.schema.$ref: '#/definitions/KMSThrottlingException'
paths./#RemoveTagsFromStream.parameters.length: 9
paths./#RemoveTagsFromStream.parameters[0].$ref: '#/parameters/Action'
paths./#RemoveTagsFromStream.parameters[1].$ref: '#/parameters/Version'
paths./#RemoveTagsFromStream.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#RemoveTagsFromStream.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#RemoveTagsFromStream.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#RemoveTagsFromStream.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#RemoveTagsFromStream.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#RemoveTagsFromStream.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#RemoveTagsFromStream.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#RemoveTagsFromStream.post.description: <p>Removes tags from the specified
  Amazon Kinesis stream. Removed tags are deleted and cannot be recovered after this
  operation successfully completes.</p> <p>If you specify a tag that does not exist,
  it is ignored.</p>
paths./#RemoveTagsFromStream.post.operationId: RemoveTagsFromStream
paths./#RemoveTagsFromStream.post.parameters.length: 1
paths./#RemoveTagsFromStream.post.parameters[0].in: body
paths./#RemoveTagsFromStream.post.parameters[0].name: body
paths./#RemoveTagsFromStream.post.parameters[0].required: true
paths./#RemoveTagsFromStream.post.parameters[0].schema.$ref: '#/definitions/RemoveTagsFromStreamInput'
paths./#RemoveTagsFromStream.post.responses.200.description: Success
paths./#RemoveTagsFromStream.post.responses.480.description: ResourceNotFoundException
paths./#RemoveTagsFromStream.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#RemoveTagsFromStream.post.responses.481.description: ResourceInUseException
paths./#RemoveTagsFromStream.post.responses.481.schema.$ref: '#/definitions/ResourceInUseException'
paths./#RemoveTagsFromStream.post.responses.482.description: InvalidArgumentException
paths./#RemoveTagsFromStream.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#RemoveTagsFromStream.post.responses.483.description: LimitExceededException
paths./#RemoveTagsFromStream.post.responses.483.schema.$ref: '#/definitions/LimitExceededException'
paths./#SplitShard.parameters.length: 9
paths./#SplitShard.parameters[0].$ref: '#/parameters/Action'
paths./#SplitShard.parameters[1].$ref: '#/parameters/Version'
paths./#SplitShard.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SplitShard.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SplitShard.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SplitShard.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SplitShard.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SplitShard.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SplitShard.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SplitShard.post.description: <p>Splits a shard into two new shards in the
  Amazon Kinesis stream to increase the stream's capacity to ingest and transport
  data. <code>SplitShard</code> is called when there is a need to increase the overall
  capacity of a stream because of an expected increase in the volume of data records
  being ingested. </p> <p>You can also use <code>SplitShard</code> when a shard appears
  to be approaching its maximum utilization; for example, the producers sending data
  into the specific shard are suddenly sending more than previously anticipated. You
  can also call <code>SplitShard</code> to increase stream capacity, so that more
  Amazon Kinesis applications can simultaneously read data from the stream for real-time
  processing. </p> <p>You must specify the shard to be split and the new hash key,
  which is the position in the shard where the shard gets split in two. In many cases,
  the new hash key might simply be the average of the beginning and ending hash key,
  but it can be any hash key value in the range being mapped into the shard. For more
  information about splitting shards, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html">Split
  a Shard</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.</p> <p>You can
  use <a>DescribeStream</a> to determine the shard ID and hash key values for the
  <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that are
  specified in the <code>SplitShard</code> request.</p> <p> <code>SplitShard</code>
  is an asynchronous operation. Upon receiving a <code>SplitShard</code> request,
  Amazon Kinesis immediately returns a response and sets the stream status to <code>UPDATING</code>.
  After the operation is completed, Amazon Kinesis sets the stream status to <code>ACTIVE</code>.
  Read and write operations continue to work while the stream is in the <code>UPDATING</code>
  state. </p> <p>You can use <code>DescribeStream</code> to check the status of the
  stream, which is returned in <code>StreamStatus</code>. If the stream is in the
  <code>ACTIVE</code> state, you can call <code>SplitShard</code>. If a stream is
  in <code>CREATING</code> or <code>UPDATING</code> or <code>DELETING</code> states,
  <code>DescribeStream</code> returns a <code>ResourceInUseException</code>.</p> <p>If
  the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>.
  If you try to create more shards than are authorized for your account, you receive
  a <code>LimitExceededException</code>. </p> <p>For the default shard limit for an
  AWS account, see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>. If you need to
  increase this limit, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
  AWS Support</a>.</p> <p>If you try to operate on too many streams simultaneously
  using <a>CreateStream</a>, <a>DeleteStream</a>, <a>MergeShards</a>, and/or <a>SplitShard</a>,
  you receive a <code>LimitExceededException</code>. </p> <p> <code>SplitShard</code>
  has limit of 5 transactions per second per account.</p>
paths./#SplitShard.post.operationId: SplitShard
paths./#SplitShard.post.parameters.length: 1
paths./#SplitShard.post.parameters[0].in: body
paths./#SplitShard.post.parameters[0].name: body
paths./#SplitShard.post.parameters[0].required: true
paths./#SplitShard.post.parameters[0].schema.$ref: '#/definitions/SplitShardInput'
paths./#SplitShard.post.responses.200.description: Success
paths./#SplitShard.post.responses.480.description: ResourceNotFoundException
paths./#SplitShard.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#SplitShard.post.responses.481.description: ResourceInUseException
paths./#SplitShard.post.responses.481.schema.$ref: '#/definitions/ResourceInUseException'
paths./#SplitShard.post.responses.482.description: InvalidArgumentException
paths./#SplitShard.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#SplitShard.post.responses.483.description: LimitExceededException
paths./#SplitShard.post.responses.483.schema.$ref: '#/definitions/LimitExceededException'
paths./#StartStreamEncryption.parameters.length: 9
paths./#StartStreamEncryption.parameters[0].$ref: '#/parameters/Action'
paths./#StartStreamEncryption.parameters[1].$ref: '#/parameters/Version'
paths./#StartStreamEncryption.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StartStreamEncryption.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StartStreamEncryption.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StartStreamEncryption.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StartStreamEncryption.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StartStreamEncryption.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StartStreamEncryption.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StartStreamEncryption.post.description: '<p>Enables or updates server-side
  encryption using an AWS KMS key for a specified stream. </p> <p>Starting encryption
  is an asynchronous operation. Upon receiving the request, Amazon Kinesis returns
  immediately and sets the status of the stream to <code>UPDATING</code>. After the
  update is complete, Amazon Kinesis sets the status of the stream back to <code>ACTIVE</code>.
  Updating or applying encryption normally takes a few seconds to complete but it
  can take minutes. You can continue to read and write data to your stream while its
  status is <code>UPDATING</code>. Once the status of the stream is <code>ACTIVE</code>,
  records written to the stream will begin to be encrypted. </p> <p>API Limits: You
  can successfully apply a new AWS KMS key for server-side encryption 25 times in
  a rolling 24 hour period.</p> <p>Note: It can take up to 5 seconds after the stream
  is in an <code>ACTIVE</code> status before all records written to the stream are
  encrypted. After you’ve enabled encryption, you can verify encryption was applied
  by inspecting the API response from <code>PutRecord</code> or <code>PutRecords</code>.</p>'
paths./#StartStreamEncryption.post.operationId: StartStreamEncryption
paths./#StartStreamEncryption.post.parameters.length: 1
paths./#StartStreamEncryption.post.parameters[0].in: body
paths./#StartStreamEncryption.post.parameters[0].name: body
paths./#StartStreamEncryption.post.parameters[0].required: true
paths./#StartStreamEncryption.post.parameters[0].schema.$ref: '#/definitions/StartStreamEncryptionInput'
paths./#StartStreamEncryption.post.responses.200.description: Success
paths./#StartStreamEncryption.post.responses.480.description: InvalidArgumentException
paths./#StartStreamEncryption.post.responses.480.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#StartStreamEncryption.post.responses.481.description: LimitExceededException
paths./#StartStreamEncryption.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#StartStreamEncryption.post.responses.482.description: ResourceInUseException
paths./#StartStreamEncryption.post.responses.482.schema.$ref: '#/definitions/ResourceInUseException'
paths./#StartStreamEncryption.post.responses.483.description: ResourceNotFoundException
paths./#StartStreamEncryption.post.responses.483.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#StartStreamEncryption.post.responses.484.description: KMSDisabledException
paths./#StartStreamEncryption.post.responses.484.schema.$ref: '#/definitions/KMSDisabledException'
paths./#StartStreamEncryption.post.responses.485.description: KMSInvalidStateException
paths./#StartStreamEncryption.post.responses.485.schema.$ref: '#/definitions/KMSInvalidStateException'
paths./#StartStreamEncryption.post.responses.486.description: KMSAccessDeniedException
paths./#StartStreamEncryption.post.responses.486.schema.$ref: '#/definitions/KMSAccessDeniedException'
paths./#StartStreamEncryption.post.responses.487.description: KMSNotFoundException
paths./#StartStreamEncryption.post.responses.487.schema.$ref: '#/definitions/KMSNotFoundException'
paths./#StartStreamEncryption.post.responses.488.description: KMSOptInRequired
paths./#StartStreamEncryption.post.responses.488.schema.$ref: '#/definitions/KMSOptInRequired'
paths./#StartStreamEncryption.post.responses.489.description: KMSThrottlingException
paths./#StartStreamEncryption.post.responses.489.schema.$ref: '#/definitions/KMSThrottlingException'
paths./#StopStreamEncryption.parameters.length: 9
paths./#StopStreamEncryption.parameters[0].$ref: '#/parameters/Action'
paths./#StopStreamEncryption.parameters[1].$ref: '#/parameters/Version'
paths./#StopStreamEncryption.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StopStreamEncryption.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StopStreamEncryption.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StopStreamEncryption.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StopStreamEncryption.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StopStreamEncryption.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StopStreamEncryption.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StopStreamEncryption.post.description: '<p>Disables server-side encryption
  for a specified stream. </p> <p>Stopping encryption is an asynchronous operation.
  Upon receiving the request, Amazon Kinesis returns immediately and sets the status
  of the stream to <code>UPDATING</code>. After the update is complete, Amazon Kinesis
  sets the status of the stream back to <code>ACTIVE</code>. Stopping encryption normally
  takes a few seconds to complete but it can take minutes. You can continue to read
  and write data to your stream while its status is <code>UPDATING</code>. Once the
  status of the stream is <code>ACTIVE</code> records written to the stream will no
  longer be encrypted by the Amazon Kinesis Streams service. </p> <p>API Limits: You
  can successfully disable server-side encryption 25 times in a rolling 24 hour period.
  </p> <p>Note: It can take up to 5 seconds after the stream is in an <code>ACTIVE</code>
  status before all records written to the stream are no longer subject to encryption.
  After you’ve disabled encryption, you can verify encryption was not applied by inspecting
  the API response from <code>PutRecord</code> or <code>PutRecords</code>.</p>'
paths./#StopStreamEncryption.post.operationId: StopStreamEncryption
paths./#StopStreamEncryption.post.parameters.length: 1
paths./#StopStreamEncryption.post.parameters[0].in: body
paths./#StopStreamEncryption.post.parameters[0].name: body
paths./#StopStreamEncryption.post.parameters[0].required: true
paths./#StopStreamEncryption.post.parameters[0].schema.$ref: '#/definitions/StopStreamEncryptionInput'
paths./#StopStreamEncryption.post.responses.200.description: Success
paths./#StopStreamEncryption.post.responses.480.description: InvalidArgumentException
paths./#StopStreamEncryption.post.responses.480.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#StopStreamEncryption.post.responses.481.description: LimitExceededException
paths./#StopStreamEncryption.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#StopStreamEncryption.post.responses.482.description: ResourceInUseException
paths./#StopStreamEncryption.post.responses.482.schema.$ref: '#/definitions/ResourceInUseException'
paths./#StopStreamEncryption.post.responses.483.description: ResourceNotFoundException
paths./#StopStreamEncryption.post.responses.483.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateShardCount.parameters.length: 9
paths./#UpdateShardCount.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateShardCount.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateShardCount.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateShardCount.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateShardCount.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateShardCount.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateShardCount.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateShardCount.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateShardCount.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateShardCount.post.description: <p>Updates the shard count of the specified
  stream to the specified number of shards.</p> <p>Updating the shard count is an
  asynchronous operation. Upon receiving the request, Amazon Kinesis returns immediately
  and sets the status of the stream to <code>UPDATING</code>. After the update is
  complete, Amazon Kinesis sets the status of the stream back to <code>ACTIVE</code>.
  Depending on the size of the stream, the scaling action could take a few minutes
  to complete. You can continue to read and write data to your stream while its status
  is <code>UPDATING</code>.</p> <p>To update the shard count, Amazon Kinesis performs
  splits or merges on individual shards. This can cause short-lived shards to be created,
  in addition to the final shards. We recommend that you double or halve the shard
  count, as this results in the fewest number of splits or merges.</p> <p>This operation
  has the following limits, which are per region per account unless otherwise noted:</p>
  <ul> <li> <p>scale more than twice per rolling 24 hour period</p> </li> <li> <p>scale
  up above double your current shard count</p> </li> <li> <p>scale down below half
  your current shard count</p> </li> <li> <p>scale up above 200 shards in a stream</p>
  </li> <li> <p>scale a stream with more than 200 shards down unless the result is
  less than 200 shards</p> </li> <li> <p>scale up above the shard limits for your
  account</p> </li> <li> <p/> </li> </ul> <p>For the default limits for an AWS account,
  see <a href="http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html">Streams
  Limits</a> in the <i>Amazon Kinesis Streams Developer Guide</i>. If you need to
  increase a limit, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
  AWS Support</a>.</p>
paths./#UpdateShardCount.post.operationId: UpdateShardCount
paths./#UpdateShardCount.post.parameters.length: 1
paths./#UpdateShardCount.post.parameters[0].in: body
paths./#UpdateShardCount.post.parameters[0].name: body
paths./#UpdateShardCount.post.parameters[0].required: true
paths./#UpdateShardCount.post.parameters[0].schema.$ref: '#/definitions/UpdateShardCountInput'
paths./#UpdateShardCount.post.responses.200.description: Success
paths./#UpdateShardCount.post.responses.200.schema.$ref: '#/definitions/UpdateShardCountOutput'
paths./#UpdateShardCount.post.responses.480.description: InvalidArgumentException
paths./#UpdateShardCount.post.responses.480.schema.$ref: '#/definitions/InvalidArgumentException'
paths./#UpdateShardCount.post.responses.481.description: LimitExceededException
paths./#UpdateShardCount.post.responses.481.schema.$ref: '#/definitions/LimitExceededException'
paths./#UpdateShardCount.post.responses.482.description: ResourceInUseException
paths./#UpdateShardCount.post.responses.482.schema.$ref: '#/definitions/ResourceInUseException'
paths./#UpdateShardCount.post.responses.483.description: ResourceNotFoundException
paths./#UpdateShardCount.post.responses.483.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./.parameters.length: 9
paths./.parameters[0].$ref: '#/parameters/Action'
paths./.parameters[1].$ref: '#/parameters/Version'
paths./.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./.post.description: <p>Adds or updates tags for the specified Amazon Kinesis
  stream. Each stream can have up to 10 tags.</p> <p>If tags have already been assigned
  to the stream, <code>AddTagsToStream</code> overwrites any existing tags that correspond
  to the specified tag keys.</p>
paths./.post.operationId: AddTagsToStream
paths./.post.parameters.length: 1
paths./.post.parameters[0].in: body
paths./.post.parameters[0].name: body
paths./.post.parameters[0].required: true
paths./.post.parameters[0].schema.$ref: '#/definitions/AddTagsToStreamInput'
paths./.post.responses.200.description: Success
paths./.post.responses.480.description: ResourceNotFoundException
paths./.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./.post.responses.481.description: ResourceInUseException
paths./.post.responses.481.schema.$ref: '#/definitions/ResourceInUseException'
paths./.post.responses.482.description: InvalidArgumentException
paths./.post.responses.482.schema.$ref: '#/definitions/InvalidArgumentException'
paths./.post.responses.483.description: LimitExceededException
paths./.post.responses.483.schema.$ref: '#/definitions/LimitExceededException'
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: http
security.length: 1
security[0].hmac.length: 0
securityDefinitions.hmac.description: Amazon Signature authorization v4
securityDefinitions.hmac.in: header
securityDefinitions.hmac.name: Authorization
securityDefinitions.hmac.type: apiKey
securityDefinitions.hmac.x-amazon-apigateway-authtype: awsSigv4
swagger: "2.0"
x-hasEquivalentPaths: true
