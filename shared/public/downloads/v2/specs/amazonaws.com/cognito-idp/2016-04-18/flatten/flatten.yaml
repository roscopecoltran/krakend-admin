basePath: /
consumes.length: 1
consumes[0]: application/json
definitions.AWSAccountIdType.type: string
definitions.AddCustomAttributesRequest.description: Represents the request to add
  custom attributes.
definitions.AddCustomAttributesRequest.properties.CustomAttributes.$ref: '#/definitions/CustomAttributesListType'
definitions.AddCustomAttributesRequest.properties.CustomAttributes.description: An
  array of custom attributes, such as Mutable and Name.
definitions.AddCustomAttributesRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AddCustomAttributesRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to add custom attributes.
definitions.AddCustomAttributesRequest.required.length: 2
definitions.AddCustomAttributesRequest.required[0]: UserPoolId
definitions.AddCustomAttributesRequest.required[1]: CustomAttributes
definitions.AddCustomAttributesRequest.type: object
definitions.AddCustomAttributesResponse.description: Represents the response from
  the server for the request to add custom attributes.
definitions.AddCustomAttributesResponse.type: object
definitions.AdminAddUserToGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.AdminAddUserToGroupRequest.properties.GroupName.description: The group
  name.
definitions.AdminAddUserToGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminAddUserToGroupRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.AdminAddUserToGroupRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminAddUserToGroupRequest.properties.Username.description: The username
  for the user.
definitions.AdminAddUserToGroupRequest.required.length: 3
definitions.AdminAddUserToGroupRequest.required[0]: UserPoolId
definitions.AdminAddUserToGroupRequest.required[1]: Username
definitions.AdminAddUserToGroupRequest.required[2]: GroupName
definitions.AdminAddUserToGroupRequest.type: object
definitions.AdminConfirmSignUpRequest.description: Represents the request to confirm
  user registration.
definitions.AdminConfirmSignUpRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminConfirmSignUpRequest.properties.UserPoolId.description: The user
  pool ID for which you want to confirm user registration.
definitions.AdminConfirmSignUpRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminConfirmSignUpRequest.properties.Username.description: The user name
  for which you want to confirm user registration.
definitions.AdminConfirmSignUpRequest.required.length: 2
definitions.AdminConfirmSignUpRequest.required[0]: UserPoolId
definitions.AdminConfirmSignUpRequest.required[1]: Username
definitions.AdminConfirmSignUpRequest.type: object
definitions.AdminConfirmSignUpResponse.description: Represents the response from the
  server for the request to confirm registration.
definitions.AdminConfirmSignUpResponse.type: object
definitions.AdminCreateUserConfigType.description: The type of configuration for creating
  a new user profile.
definitions.AdminCreateUserConfigType.properties.AllowAdminCreateUserOnly.$ref: '#/definitions/BooleanType'
definitions.AdminCreateUserConfigType.properties.AllowAdminCreateUserOnly.description: Set
  to <code>True</code> if only the administrator is allowed to create user profiles.
  Set to <code>False</code> if users can sign themselves up via an app.
definitions.AdminCreateUserConfigType.properties.InviteMessageTemplate.$ref: '#/definitions/MessageTemplateType'
definitions.AdminCreateUserConfigType.properties.InviteMessageTemplate.description: The
  message template to be used for the welcome message to new users.
definitions.AdminCreateUserConfigType.properties.UnusedAccountValidityDays.$ref: '#/definitions/AdminCreateUserUnusedAccountValidityDaysType'
definitions.AdminCreateUserConfigType.properties.UnusedAccountValidityDays.description: The
  user account expiration limit, in days, after which the account is no longer usable.
  To reset the account after that time limit, you must call <code>AdminCreateUser</code>
  again, specifying <code>"RESEND"</code> for the <code>MessageAction</code> parameter.
  The default value for this parameter is 7.
definitions.AdminCreateUserConfigType.type: object
definitions.AdminCreateUserRequest.description: Represents the request to create a
  user in the specified user pool.
definitions.AdminCreateUserRequest.properties.DesiredDeliveryMediums.$ref: '#/definitions/DeliveryMediumListType'
definitions.AdminCreateUserRequest.properties.DesiredDeliveryMediums.description: Specify
  <code>"EMAIL"</code> if email will be used to send the welcome message. Specify
  <code>"SMS"</code> if the phone number will be used. The default value is <code>"SMS"</code>.
  More than one value can be specified.
definitions.AdminCreateUserRequest.properties.ForceAliasCreation.$ref: '#/definitions/ForceAliasCreation'
definitions.AdminCreateUserRequest.properties.ForceAliasCreation.description: <p>This
  parameter is only used if the <code>phone_number_verified</code> or <code>email_verified</code>
  attribute is set to <code>True</code>. Otherwise, it is ignored.</p> <p>If this
  parameter is set to <code>True</code> and the phone number or email address specified
  in the UserAttributes parameter already exists as an alias with a different user,
  the API call will migrate the alias from the previous user to the newly created
  user. The previous user will no longer be able to log in using that alias.</p> <p>If
  this parameter is set to <code>False</code>, the API throws an <code>AliasExistsException</code>
  error if the alias already exists. The default value is <code>False</code>.</p>
definitions.AdminCreateUserRequest.properties.MessageAction.$ref: '#/definitions/MessageActionType'
definitions.AdminCreateUserRequest.properties.MessageAction.description: Set to <code>"RESEND"</code>
  to resend the invitation message to a user that already exists and reset the expiration
  limit on the user's account. Set to <code>"SUPPRESS"</code> to suppress sending
  the message. Only one value can be specified.
definitions.AdminCreateUserRequest.properties.TemporaryPassword.$ref: '#/definitions/PasswordType'
definitions.AdminCreateUserRequest.properties.TemporaryPassword.description: <p>The
  user's temporary password. This password must conform to the password policy that
  you specified when you created the user pool.</p> <p>The temporary password is valid
  only once. To complete the Admin Create User flow, the user must enter the temporary
  password in the sign-in page along with a new password to be used in all future
  sign-ins.</p> <p>This parameter is not required. If you do not specify a value,
  Amazon Cognito generates one for you.</p> <p>The temporary password can only be
  used until the user account expiration limit that you specified when you created
  the user pool. To reset the account after that time limit, you must call <code>AdminCreateUser</code>
  again, specifying <code>"RESEND"</code> for the <code>MessageAction</code> parameter.</p>
definitions.AdminCreateUserRequest.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.AdminCreateUserRequest.properties.UserAttributes.description: '<p>An array
  of name-value pairs that contain user attributes and attribute values to be set
  for the user to be created. You can create a user without specifying any attributes
  other than <code>Username</code>. However, any attributes that you specify as required
  (in <a href="API_CreateUserPool.html">CreateUserPool</a> or in the <b>Attributes</b>
  tab of the console) must be supplied either by you (in your call to <code>AdminCreateUser</code>)
  or by the user (when he or she signs up in response to your welcome message).</p>
  <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the
  attribute name.</p> <p>To send a message inviting the user to sign up, you must
  specify the user''s email address or phone number. This can be done in your call
  to AdminCreateUser or in the <b>Users</b> tab of the Amazon Cognito console for
  managing your user pools.</p> <p>In your call to <code>AdminCreateUser</code>, you
  can set the <code>email_verified</code> attribute to <code>True</code>, and you
  can set the <code>phone_number_verified</code> attribute to <code>True</code>. (You
  can also do this by calling <a href="API_AdminUpdateUserAttributes.html">AdminUpdateUserAttributes</a>.)</p>
  <ul> <li> <p> <b>email</b>: The email address of the user to whom the message that
  contains the code and username will be sent. Required if the <code>email_verified</code>
  attribute is set to <code>True</code>, or if <code>"EMAIL"</code> is specified in
  the <code>DesiredDeliveryMediums</code> parameter.</p> </li> <li> <p> <b>phone_number</b>:
  The phone number of the user to whom the message that contains the code and username
  will be sent. Required if the <code>phone_number_verified</code> attribute is set
  to <code>True</code>, or if <code>"SMS"</code> is specified in the <code>DesiredDeliveryMediums</code>
  parameter.</p> </li> </ul>'
definitions.AdminCreateUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminCreateUserRequest.properties.UserPoolId.description: The user pool
  ID for the user pool where the user will be created.
definitions.AdminCreateUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminCreateUserRequest.properties.Username.description: The username for
  the user. Must be unique within the user pool. Must be a UTF-8 string between 1
  and 128 characters. After the user is created, the username cannot be changed.
definitions.AdminCreateUserRequest.properties.ValidationData.$ref: '#/definitions/AttributeListType'
definitions.AdminCreateUserRequest.properties.ValidationData.description: <p>The user's
  validation data. This is an array of name-value pairs that contain user attributes
  and attribute values that you can use for custom validation, such as restricting
  the types of user accounts that can be registered. For example, you might choose
  to allow or disallow user sign-up based on the user's domain.</p> <p>To configure
  custom validation, you must create a Pre Sign-up Lambda trigger for the user pool
  as described in the Amazon Cognito Developer Guide. The Lambda trigger receives
  the validation data and uses it in the validation process.</p> <p>The user's validation
  data is not persisted.</p>
definitions.AdminCreateUserRequest.required.length: 2
definitions.AdminCreateUserRequest.required[0]: UserPoolId
definitions.AdminCreateUserRequest.required[1]: Username
definitions.AdminCreateUserRequest.type: object
definitions.AdminCreateUserResponse.description: Represents the response from the
  server to the request to create the user.
definitions.AdminCreateUserResponse.properties.User.$ref: '#/definitions/UserType'
definitions.AdminCreateUserResponse.properties.User.description: The newly created
  user.
definitions.AdminCreateUserResponse.type: object
definitions.AdminCreateUserUnusedAccountValidityDaysType.maximum: 90
definitions.AdminCreateUserUnusedAccountValidityDaysType.minimum: 0
definitions.AdminCreateUserUnusedAccountValidityDaysType.type: integer
definitions.AdminDeleteUserAttributesRequest.description: Represents the request to
  delete user attributes as an administrator.
definitions.AdminDeleteUserAttributesRequest.properties.UserAttributeNames.$ref: '#/definitions/AttributeNameListType'
definitions.AdminDeleteUserAttributesRequest.properties.UserAttributeNames.description: <p>An
  array of strings representing the user attribute names you wish to delete.</p> <p>For
  custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
  name.</p>
definitions.AdminDeleteUserAttributesRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminDeleteUserAttributesRequest.properties.UserPoolId.description: The
  user pool ID for the user pool where you want to delete user attributes.
definitions.AdminDeleteUserAttributesRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminDeleteUserAttributesRequest.properties.Username.description: The
  user name of the user from which you would like to delete attributes.
definitions.AdminDeleteUserAttributesRequest.required.length: 3
definitions.AdminDeleteUserAttributesRequest.required[0]: UserPoolId
definitions.AdminDeleteUserAttributesRequest.required[1]: Username
definitions.AdminDeleteUserAttributesRequest.required[2]: UserAttributeNames
definitions.AdminDeleteUserAttributesRequest.type: object
definitions.AdminDeleteUserAttributesResponse.description: Represents the response
  received from the server for a request to delete user attributes.
definitions.AdminDeleteUserAttributesResponse.type: object
definitions.AdminDeleteUserRequest.description: Represents the request to delete a
  user as an administrator.
definitions.AdminDeleteUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminDeleteUserRequest.properties.UserPoolId.description: The user pool
  ID for the user pool where you want to delete the user.
definitions.AdminDeleteUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminDeleteUserRequest.properties.Username.description: The user name
  of the user you wish to delete.
definitions.AdminDeleteUserRequest.required.length: 2
definitions.AdminDeleteUserRequest.required[0]: UserPoolId
definitions.AdminDeleteUserRequest.required[1]: Username
definitions.AdminDeleteUserRequest.type: object
definitions.AdminDisableProviderForUserRequest.properties.User.$ref: '#/definitions/ProviderUserIdentifierType'
definitions.AdminDisableProviderForUserRequest.properties.User.description: The user
  to be disabled.
definitions.AdminDisableProviderForUserRequest.properties.UserPoolId.$ref: '#/definitions/StringType'
definitions.AdminDisableProviderForUserRequest.properties.UserPoolId.description: The
  user pool ID for the user pool.
definitions.AdminDisableProviderForUserRequest.required.length: 2
definitions.AdminDisableProviderForUserRequest.required[0]: UserPoolId
definitions.AdminDisableProviderForUserRequest.required[1]: User
definitions.AdminDisableProviderForUserRequest.type: object
definitions.AdminDisableProviderForUserResponse.type: object
definitions.AdminDisableUserRequest.description: Represents the request to disable
  any user as an administrator.
definitions.AdminDisableUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminDisableUserRequest.properties.UserPoolId.description: The user pool
  ID for the user pool where you want to disable the user.
definitions.AdminDisableUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminDisableUserRequest.properties.Username.description: The user name
  of the user you wish to disable.
definitions.AdminDisableUserRequest.required.length: 2
definitions.AdminDisableUserRequest.required[0]: UserPoolId
definitions.AdminDisableUserRequest.required[1]: Username
definitions.AdminDisableUserRequest.type: object
definitions.AdminDisableUserResponse.description: Represents the response received
  from the server to disable the user as an administrator.
definitions.AdminDisableUserResponse.type: object
definitions.AdminEnableUserRequest.description: Represents the request that enables
  the user as an administrator.
definitions.AdminEnableUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminEnableUserRequest.properties.UserPoolId.description: The user pool
  ID for the user pool where you want to enable the user.
definitions.AdminEnableUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminEnableUserRequest.properties.Username.description: The user name
  of the user you wish to enable.
definitions.AdminEnableUserRequest.required.length: 2
definitions.AdminEnableUserRequest.required[0]: UserPoolId
definitions.AdminEnableUserRequest.required[1]: Username
definitions.AdminEnableUserRequest.type: object
definitions.AdminEnableUserResponse.description: Represents the response from the
  server for the request to enable a user as an administrator.
definitions.AdminEnableUserResponse.type: object
definitions.AdminForgetDeviceRequest.description: Sends the forgot device request,
  as an administrator.
definitions.AdminForgetDeviceRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.AdminForgetDeviceRequest.properties.DeviceKey.description: The device
  key.
definitions.AdminForgetDeviceRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminForgetDeviceRequest.properties.UserPoolId.description: The user pool
  ID.
definitions.AdminForgetDeviceRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminForgetDeviceRequest.properties.Username.description: The user name.
definitions.AdminForgetDeviceRequest.required.length: 3
definitions.AdminForgetDeviceRequest.required[0]: UserPoolId
definitions.AdminForgetDeviceRequest.required[1]: Username
definitions.AdminForgetDeviceRequest.required[2]: DeviceKey
definitions.AdminForgetDeviceRequest.type: object
definitions.AdminGetDeviceRequest.description: Represents the request to get the device,
  as an administrator.
definitions.AdminGetDeviceRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.AdminGetDeviceRequest.properties.DeviceKey.description: The device key.
definitions.AdminGetDeviceRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminGetDeviceRequest.properties.UserPoolId.description: The user pool
  ID.
definitions.AdminGetDeviceRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminGetDeviceRequest.properties.Username.description: The user name.
definitions.AdminGetDeviceRequest.required.length: 3
definitions.AdminGetDeviceRequest.required[0]: DeviceKey
definitions.AdminGetDeviceRequest.required[1]: UserPoolId
definitions.AdminGetDeviceRequest.required[2]: Username
definitions.AdminGetDeviceRequest.type: object
definitions.AdminGetDeviceResponse.description: Gets the device response, as an administrator.
definitions.AdminGetDeviceResponse.properties.Device.$ref: '#/definitions/DeviceType'
definitions.AdminGetDeviceResponse.properties.Device.description: The device.
definitions.AdminGetDeviceResponse.required.length: 1
definitions.AdminGetDeviceResponse.required[0]: Device
definitions.AdminGetDeviceResponse.type: object
definitions.AdminGetUserRequest.description: Represents the request to get the specified
  user as an administrator.
definitions.AdminGetUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminGetUserRequest.properties.UserPoolId.description: The user pool ID
  for the user pool where you want to get information about the user.
definitions.AdminGetUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminGetUserRequest.properties.Username.description: The user name of
  the user you wish to retrieve.
definitions.AdminGetUserRequest.required.length: 2
definitions.AdminGetUserRequest.required[0]: UserPoolId
definitions.AdminGetUserRequest.required[1]: Username
definitions.AdminGetUserRequest.type: object
definitions.AdminGetUserResponse.description: Represents the response from the server
  from the request to get the specified user as an administrator.
definitions.AdminGetUserResponse.properties.Enabled.$ref: '#/definitions/BooleanType'
definitions.AdminGetUserResponse.properties.Enabled.description: Indicates that the
  status is enabled.
definitions.AdminGetUserResponse.properties.MFAOptions.$ref: '#/definitions/MFAOptionListType'
definitions.AdminGetUserResponse.properties.MFAOptions.description: Specifies the
  options for MFA (e.g., email or phone number).
definitions.AdminGetUserResponse.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.AdminGetUserResponse.properties.UserAttributes.description: An array of
  name-value pairs representing user attributes.
definitions.AdminGetUserResponse.properties.UserCreateDate.$ref: '#/definitions/DateType'
definitions.AdminGetUserResponse.properties.UserCreateDate.description: The date the
  user was created.
definitions.AdminGetUserResponse.properties.UserLastModifiedDate.$ref: '#/definitions/DateType'
definitions.AdminGetUserResponse.properties.UserLastModifiedDate.description: The
  date the user was last modified.
definitions.AdminGetUserResponse.properties.UserStatus.$ref: '#/definitions/UserStatusType'
definitions.AdminGetUserResponse.properties.UserStatus.description: <p>The user status.
  Can be one of the following:</p> <ul> <li> <p>UNCONFIRMED - User has been created
  but not confirmed.</p> </li> <li> <p>CONFIRMED - User has been confirmed.</p> </li>
  <li> <p>ARCHIVED - User is no longer active.</p> </li> <li> <p>COMPROMISED - User
  is disabled due to a potential security threat.</p> </li> <li> <p>UNKNOWN - User
  status is not known.</p> </li> </ul>
definitions.AdminGetUserResponse.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminGetUserResponse.properties.Username.description: The user name of
  the user about whom you are receiving information.
definitions.AdminGetUserResponse.required.length: 1
definitions.AdminGetUserResponse.required[0]: Username
definitions.AdminGetUserResponse.type: object
definitions.AdminInitiateAuthRequest.description: Initiates the authorization request,
  as an administrator.
definitions.AdminInitiateAuthRequest.properties.AuthFlow.$ref: '#/definitions/AuthFlowType'
definitions.AdminInitiateAuthRequest.properties.AuthFlow.description: '<p>The authentication
  flow for this call to execute. The API action will depend on this value. For example:</p>
  <ul> <li> <p> <code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh token
  and return new tokens.</p> </li> <li> <p> <code>USER_SRP_AUTH</code> will take in
  <code>USERNAME</code> and <code>SRP_A</code> and return the SRP variables to be
  used for next challenge execution.</p> </li> </ul> <p>Valid values include:</p>
  <ul> <li> <p> <code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote
  Password (SRP) protocol.</p> </li> <li> <p> <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>:
  Authentication flow for refreshing the access token and ID token by supplying a
  valid refresh token.</p> </li> <li> <p> <code>CUSTOM_AUTH</code>: Custom authentication
  flow.</p> </li> <li> <p> <code>ADMIN_NO_SRP_AUTH</code>: Non-SRP authentication
  flow; you can pass in the USERNAME and PASSWORD directly if the flow is enabled
  for calling the app client.</p> </li> </ul>'
definitions.AdminInitiateAuthRequest.properties.AuthParameters.$ref: '#/definitions/AuthParametersType'
definitions.AdminInitiateAuthRequest.properties.AuthParameters.description: '<p>The
  authentication parameters. These are inputs corresponding to the <code>AuthFlow</code>
  that you are invoking. The required values depend on the value of <code>AuthFlow</code>:</p>
  <ul> <li> <p>For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
  (required), <code>SECRET_HASH</code> (required if the app client is configured with
  a client secret), <code>DEVICE_KEY</code> </p> </li> <li> <p>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>:
  <code>USERNAME</code> (required), <code>SECRET_HASH</code> (required if the app
  client is configured with a client secret), <code>REFRESH_TOKEN</code> (required),
  <code>DEVICE_KEY</code> </p> </li> <li> <p>For <code>ADMIN_NO_SRP_AUTH</code>: <code>USERNAME</code>
  (required), <code>SECRET_HASH</code> (if app client is configured with client secret),
  <code>PASSWORD</code> (required), <code>DEVICE_KEY</code> </p> </li> <li> <p>For
  <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required), <code>SECRET_HASH</code>
  (if app client is configured with client secret), <code>DEVICE_KEY</code> </p> </li>
  </ul>'
definitions.AdminInitiateAuthRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.AdminInitiateAuthRequest.properties.ClientId.description: The app client
  ID.
definitions.AdminInitiateAuthRequest.properties.ClientMetadata.$ref: '#/definitions/ClientMetadataType'
definitions.AdminInitiateAuthRequest.properties.ClientMetadata.description: This is
  a random key-value pair map which can contain any key and will be passed to your
  PreAuthentication Lambda trigger as-is. It can be used to implement additional validations
  around authentication.
definitions.AdminInitiateAuthRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminInitiateAuthRequest.properties.UserPoolId.description: The ID of
  the Amazon Cognito user pool.
definitions.AdminInitiateAuthRequest.required.length: 3
definitions.AdminInitiateAuthRequest.required[0]: UserPoolId
definitions.AdminInitiateAuthRequest.required[1]: ClientId
definitions.AdminInitiateAuthRequest.required[2]: AuthFlow
definitions.AdminInitiateAuthRequest.type: object
definitions.AdminInitiateAuthResponse.description: Initiates the authentication response,
  as an administrator.
definitions.AdminInitiateAuthResponse.properties.AuthenticationResult.$ref: '#/definitions/AuthenticationResultType'
definitions.AdminInitiateAuthResponse.properties.AuthenticationResult.description: The
  result of the authentication response. This is only returned if the caller does
  not need to pass another challenge. If the caller does need to pass another challenge
  before it gets tokens, <code>ChallengeName</code>, <code>ChallengeParameters</code>,
  and <code>Session</code> are returned.
definitions.AdminInitiateAuthResponse.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.AdminInitiateAuthResponse.properties.ChallengeName.description: '<p>The
  name of the challenge which you are responding to with this call. This is returned
  to you in the <code>AdminInitiateAuth</code> response if you need to pass another
  challenge.</p> <ul> <li> <p> <code>SMS_MFA</code>: Next challenge is to supply an
  <code>SMS_MFA_CODE</code>, delivered via SMS.</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>:
  Next challenge is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
  and <code>TIMESTAMP</code> after the client-side SRP calculations.</p> </li> <li>
  <p> <code>CUSTOM_CHALLENGE</code>: This is returned if your custom authentication
  flow determines that the user should pass another challenge before tokens are issued.</p>
  </li> <li> <p> <code>DEVICE_SRP_AUTH</code>: If device tracking was enabled on your
  user pool and the previous challenges were passed, this challenge is returned so
  that Amazon Cognito can start tracking this device.</p> </li> <li> <p> <code>DEVICE_PASSWORD_VERIFIER</code>:
  Similar to <code>PASSWORD_VERIFIER</code>, but for devices only.</p> </li> <li>
  <p> <code>ADMIN_NO_SRP_AUTH</code>: This is returned if you need to authenticate
  with <code>USERNAME</code> and <code>PASSWORD</code> directly. An app client must
  be enabled to use this flow.</p> </li> <li> <p> <code>NEW_PASSWORD_REQUIRED</code>:
  For users which are required to change their passwords after successful first login.
  This challenge should be passed with <code>NEW_PASSWORD</code> and any other required
  attributes.</p> </li> </ul>'
definitions.AdminInitiateAuthResponse.properties.ChallengeParameters.$ref: '#/definitions/ChallengeParametersType'
definitions.AdminInitiateAuthResponse.properties.ChallengeParameters.description: <p>The
  challenge parameters. These are returned to you in the <code>AdminInitiateAuth</code>
  response if you need to pass another challenge. The responses in this parameter
  should be used to compute inputs to the next call (<code>AdminRespondToAuthChallenge</code>).</p>
  <p>All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code> (if
  applicable).</p> <p>The value of the <code>USER_IF_FOR_SRP</code> attribute will
  be the user's actual username, not an alias (such as email address or phone number),
  even if you specified an alias in your call to <code>AdminInitiateAuth</code>. This
  is because, in the <code>AdminRespondToAuthChallenge</code> API <code>ChallengeResponses</code>,
  the <code>USERNAME</code> attribute cannot be an alias.</p>
definitions.AdminInitiateAuthResponse.properties.Session.$ref: '#/definitions/SessionType'
definitions.AdminInitiateAuthResponse.properties.Session.description: The session
  which should be passed both ways in challenge-response calls to the service. If
  <code>AdminInitiateAuth</code> or <code>AdminRespondToAuthChallenge</code> API call
  determines that the caller needs to go through another challenge, they return a
  session with other challenge parameters. This session should be passed as it is
  to the next <code>AdminRespondToAuthChallenge</code> API call.
definitions.AdminInitiateAuthResponse.type: object
definitions.AdminLinkProviderForUserRequest.properties.DestinationUser.$ref: '#/definitions/ProviderUserIdentifierType'
definitions.AdminLinkProviderForUserRequest.properties.DestinationUser.description: <p>The
  existing user in the user pool to be linked to the external identity provider user
  account. Can be a native (Username + Password) Cognito User Pools user or a federated
  user (for example, a SAML or Facebook user). If the user doesn't exist, an exception
  is thrown. This is the user that is returned when the new user (with the linked
  identity provider attribute) signs in.</p> <p>The <code>ProviderAttributeValue</code>
  for the <code>DestinationUser</code> must match the username for the user in the
  user pool. The <code>ProviderAttributeName</code> will always be ignored.</p>
definitions.AdminLinkProviderForUserRequest.properties.SourceUser.$ref: '#/definitions/ProviderUserIdentifierType'
definitions.AdminLinkProviderForUserRequest.properties.SourceUser.description: <p>An
  external identity provider account for a user who does not currently exist yet in
  the user pool. This user must be a federated user (for example, a SAML or Facebook
  user), not another native user.</p> <p>If the <code>SourceUser</code> is a federated
  social identity provider user (Facebook, Google, or Login with Amazon), you must
  set the <code>ProviderAttributeName</code> to <code>Cognito_Subject</code>. For
  social identity providers, the <code>ProviderName</code> will be <code>Facebook</code>,
  <code>Google</code>, or <code>LoginWithAmazon</code>, and Cognito will automatically
  parse the Facebook, Google, and Login with Amazon tokens for <code>id</code>, <code>sub</code>,
  and <code>user_id</code>, respectively. The <code>ProviderAttributeValue</code>
  for the user must be the same value as the <code>id</code>, <code>sub</code>, or
  <code>user_id</code> value found in the social identity provider token.</p> <p/>
  <p>For SAML, the <code>ProviderAttributeName</code> can be any value that matches
  a claim in the SAML assertion. If you wish to link SAML users based on the subject
  of the SAML assertion, you should map the subject to a claim through the SAML identity
  provider and submit that claim name as the <code>ProviderAttributeName</code>. If
  you set <code>ProviderAttributeName</code> to <code>Cognito_Subject</code>, Cognito
  will automatically parse the default unique identifier found in the subject from
  the SAML token.</p>
definitions.AdminLinkProviderForUserRequest.properties.UserPoolId.$ref: '#/definitions/StringType'
definitions.AdminLinkProviderForUserRequest.properties.UserPoolId.description: The
  user pool ID for the user pool.
definitions.AdminLinkProviderForUserRequest.required.length: 3
definitions.AdminLinkProviderForUserRequest.required[0]: UserPoolId
definitions.AdminLinkProviderForUserRequest.required[1]: DestinationUser
definitions.AdminLinkProviderForUserRequest.required[2]: SourceUser
definitions.AdminLinkProviderForUserRequest.type: object
definitions.AdminLinkProviderForUserResponse.type: object
definitions.AdminListDevicesRequest.description: Represents the request to list devices,
  as an administrator.
definitions.AdminListDevicesRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.AdminListDevicesRequest.properties.Limit.description: The limit of the
  devices request.
definitions.AdminListDevicesRequest.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.AdminListDevicesRequest.properties.PaginationToken.description: The pagination
  token.
definitions.AdminListDevicesRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminListDevicesRequest.properties.UserPoolId.description: The user pool
  ID.
definitions.AdminListDevicesRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminListDevicesRequest.properties.Username.description: The user name.
definitions.AdminListDevicesRequest.required.length: 2
definitions.AdminListDevicesRequest.required[0]: UserPoolId
definitions.AdminListDevicesRequest.required[1]: Username
definitions.AdminListDevicesRequest.type: object
definitions.AdminListDevicesResponse.description: Lists the device's response, as
  an administrator.
definitions.AdminListDevicesResponse.properties.Devices.$ref: '#/definitions/DeviceListType'
definitions.AdminListDevicesResponse.properties.Devices.description: The devices in
  the list of devices response.
definitions.AdminListDevicesResponse.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.AdminListDevicesResponse.properties.PaginationToken.description: The pagination
  token.
definitions.AdminListDevicesResponse.type: object
definitions.AdminListGroupsForUserRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.AdminListGroupsForUserRequest.properties.Limit.description: The limit
  of the request to list groups.
definitions.AdminListGroupsForUserRequest.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.AdminListGroupsForUserRequest.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.AdminListGroupsForUserRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminListGroupsForUserRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.AdminListGroupsForUserRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminListGroupsForUserRequest.properties.Username.description: The username
  for the user.
definitions.AdminListGroupsForUserRequest.required.length: 2
definitions.AdminListGroupsForUserRequest.required[0]: Username
definitions.AdminListGroupsForUserRequest.required[1]: UserPoolId
definitions.AdminListGroupsForUserRequest.type: object
definitions.AdminListGroupsForUserResponse.properties.Groups.$ref: '#/definitions/GroupListType'
definitions.AdminListGroupsForUserResponse.properties.Groups.description: The groups
  that the user belongs to.
definitions.AdminListGroupsForUserResponse.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.AdminListGroupsForUserResponse.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.AdminListGroupsForUserResponse.type: object
definitions.AdminRemoveUserFromGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.AdminRemoveUserFromGroupRequest.properties.GroupName.description: The
  group name.
definitions.AdminRemoveUserFromGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminRemoveUserFromGroupRequest.properties.UserPoolId.description: The
  user pool ID for the user pool.
definitions.AdminRemoveUserFromGroupRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminRemoveUserFromGroupRequest.properties.Username.description: The username
  for the user.
definitions.AdminRemoveUserFromGroupRequest.required.length: 3
definitions.AdminRemoveUserFromGroupRequest.required[0]: UserPoolId
definitions.AdminRemoveUserFromGroupRequest.required[1]: Username
definitions.AdminRemoveUserFromGroupRequest.required[2]: GroupName
definitions.AdminRemoveUserFromGroupRequest.type: object
definitions.AdminResetUserPasswordRequest.description: Represents the request to reset
  a user's password as an administrator.
definitions.AdminResetUserPasswordRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminResetUserPasswordRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to reset the user's password.
definitions.AdminResetUserPasswordRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminResetUserPasswordRequest.properties.Username.description: The user
  name of the user whose password you wish to reset.
definitions.AdminResetUserPasswordRequest.required.length: 2
definitions.AdminResetUserPasswordRequest.required[0]: UserPoolId
definitions.AdminResetUserPasswordRequest.required[1]: Username
definitions.AdminResetUserPasswordRequest.type: object
definitions.AdminResetUserPasswordResponse.description: Represents the response from
  the server to reset a user password as an administrator.
definitions.AdminResetUserPasswordResponse.type: object
definitions.AdminRespondToAuthChallengeRequest.description: The request to respond
  to the authentication challenge, as an administrator.
definitions.AdminRespondToAuthChallengeRequest.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.AdminRespondToAuthChallengeRequest.properties.ChallengeName.description: The
  challenge name. For more information, see <a href="API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
definitions.AdminRespondToAuthChallengeRequest.properties.ChallengeResponses.$ref: '#/definitions/ChallengeResponsesType'
definitions.AdminRespondToAuthChallengeRequest.properties.ChallengeResponses.description: '<p>The
  challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
  for example:</p> <ul> <li> <p> <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>,
  <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with
  client secret).</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>,
  <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, <code>TIMESTAMP</code>, <code>USERNAME</code>,
  <code>SECRET_HASH</code> (if app client is configured with client secret).</p> </li>
  <li> <p> <code>ADMIN_NO_SRP_AUTH</code>: <code>PASSWORD</code>, <code>USERNAME</code>,
  <code>SECRET_HASH</code> (if app client is configured with client secret). </p>
  </li> <li> <p> <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, any
  other required attributes, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app
  client is configured with client secret). </p> </li> </ul> <p>The value of the <code>USERNAME</code>
  attribute must be the user''s actual username, not an alias (such as email address
  or phone number). To make this easier, the <code>AdminInitiateAuth</code> response
  includes the actual username value in the <code>USERNAMEUSER_ID_FOR_SRP</code> attribute,
  even if you specified an alias in your call to <code>AdminInitiateAuth</code>.</p>'
definitions.AdminRespondToAuthChallengeRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.AdminRespondToAuthChallengeRequest.properties.ClientId.description: The
  app client ID.
definitions.AdminRespondToAuthChallengeRequest.properties.Session.$ref: '#/definitions/SessionType'
definitions.AdminRespondToAuthChallengeRequest.properties.Session.description: The
  session which should be passed both ways in challenge-response calls to the service.
  If <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
  that the caller needs to go through another challenge, they return a session with
  other challenge parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
  API call.
definitions.AdminRespondToAuthChallengeRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminRespondToAuthChallengeRequest.properties.UserPoolId.description: The
  ID of the Amazon Cognito user pool.
definitions.AdminRespondToAuthChallengeRequest.required.length: 3
definitions.AdminRespondToAuthChallengeRequest.required[0]: UserPoolId
definitions.AdminRespondToAuthChallengeRequest.required[1]: ClientId
definitions.AdminRespondToAuthChallengeRequest.required[2]: ChallengeName
definitions.AdminRespondToAuthChallengeRequest.type: object
definitions.AdminRespondToAuthChallengeResponse.description: Responds to the authentication
  challenge, as an administrator.
definitions.AdminRespondToAuthChallengeResponse.properties.AuthenticationResult.$ref: '#/definitions/AuthenticationResultType'
definitions.AdminRespondToAuthChallengeResponse.properties.AuthenticationResult.description: The
  result returned by the server in response to the authentication request.
definitions.AdminRespondToAuthChallengeResponse.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.AdminRespondToAuthChallengeResponse.properties.ChallengeName.description: The
  name of the challenge. For more information, see <a href="API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
definitions.AdminRespondToAuthChallengeResponse.properties.ChallengeParameters.$ref: '#/definitions/ChallengeParametersType'
definitions.AdminRespondToAuthChallengeResponse.properties.ChallengeParameters.description: The
  challenge parameters. For more information, see <a href="API_AdminInitiateAuth.html">AdminInitiateAuth</a>.
definitions.AdminRespondToAuthChallengeResponse.properties.Session.$ref: '#/definitions/SessionType'
definitions.AdminRespondToAuthChallengeResponse.properties.Session.description: The
  session which should be passed both ways in challenge-response calls to the service.
  If the <a href="API_InitiateAuth.html">InitiateAuth</a> or <a href="API_RespondToAuthChallenge.html">RespondToAuthChallenge</a>
  API call determines that the caller needs to go through another challenge, they
  return a session with other challenge parameters. This session should be passed
  as it is to the next <code>RespondToAuthChallenge</code> API call.
definitions.AdminRespondToAuthChallengeResponse.type: object
definitions.AdminSetUserSettingsRequest.description: Represents the request to set
  user settings as an administrator.
definitions.AdminSetUserSettingsRequest.properties.MFAOptions.$ref: '#/definitions/MFAOptionListType'
definitions.AdminSetUserSettingsRequest.properties.MFAOptions.description: Specifies
  the options for MFA (e.g., email or phone number).
definitions.AdminSetUserSettingsRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminSetUserSettingsRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to set the user's settings, such as MFA
  options.
definitions.AdminSetUserSettingsRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminSetUserSettingsRequest.properties.Username.description: The user
  name of the user for whom you wish to set user settings.
definitions.AdminSetUserSettingsRequest.required.length: 3
definitions.AdminSetUserSettingsRequest.required[0]: UserPoolId
definitions.AdminSetUserSettingsRequest.required[1]: Username
definitions.AdminSetUserSettingsRequest.required[2]: MFAOptions
definitions.AdminSetUserSettingsRequest.type: object
definitions.AdminSetUserSettingsResponse.description: Represents the response from
  the server to set user settings as an administrator.
definitions.AdminSetUserSettingsResponse.type: object
definitions.AdminUpdateDeviceStatusRequest.description: The request to update the
  device status, as an administrator.
definitions.AdminUpdateDeviceStatusRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.AdminUpdateDeviceStatusRequest.properties.DeviceKey.description: The device
  key.
definitions.AdminUpdateDeviceStatusRequest.properties.DeviceRememberedStatus.$ref: '#/definitions/DeviceRememberedStatusType'
definitions.AdminUpdateDeviceStatusRequest.properties.DeviceRememberedStatus.description: The
  status indicating whether a device has been remembered or not.
definitions.AdminUpdateDeviceStatusRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminUpdateDeviceStatusRequest.properties.UserPoolId.description: The
  user pool ID.
definitions.AdminUpdateDeviceStatusRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminUpdateDeviceStatusRequest.properties.Username.description: The user
  name.
definitions.AdminUpdateDeviceStatusRequest.required.length: 3
definitions.AdminUpdateDeviceStatusRequest.required[0]: UserPoolId
definitions.AdminUpdateDeviceStatusRequest.required[1]: Username
definitions.AdminUpdateDeviceStatusRequest.required[2]: DeviceKey
definitions.AdminUpdateDeviceStatusRequest.type: object
definitions.AdminUpdateDeviceStatusResponse.description: The status response from
  the request to update the device, as an administrator.
definitions.AdminUpdateDeviceStatusResponse.type: object
definitions.AdminUpdateUserAttributesRequest.description: Represents the request to
  update the user's attributes as an administrator.
definitions.AdminUpdateUserAttributesRequest.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.AdminUpdateUserAttributesRequest.properties.UserAttributes.description: <p>An
  array of name-value pairs representing user attributes.</p> <p>For custom attributes,
  you must prepend the <code>custom:</code> prefix to the attribute name.</p>
definitions.AdminUpdateUserAttributesRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminUpdateUserAttributesRequest.properties.UserPoolId.description: The
  user pool ID for the user pool where you want to update user attributes.
definitions.AdminUpdateUserAttributesRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminUpdateUserAttributesRequest.properties.Username.description: The
  user name of the user for whom you want to update user attributes.
definitions.AdminUpdateUserAttributesRequest.required.length: 3
definitions.AdminUpdateUserAttributesRequest.required[0]: UserPoolId
definitions.AdminUpdateUserAttributesRequest.required[1]: Username
definitions.AdminUpdateUserAttributesRequest.required[2]: UserAttributes
definitions.AdminUpdateUserAttributesRequest.type: object
definitions.AdminUpdateUserAttributesResponse.description: Represents the response
  from the server for the request to update user attributes as an administrator.
definitions.AdminUpdateUserAttributesResponse.type: object
definitions.AdminUserGlobalSignOutRequest.description: The request to sign out of
  all devices, as an administrator.
definitions.AdminUserGlobalSignOutRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.AdminUserGlobalSignOutRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.AdminUserGlobalSignOutRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.AdminUserGlobalSignOutRequest.properties.Username.description: The user
  name.
definitions.AdminUserGlobalSignOutRequest.required.length: 2
definitions.AdminUserGlobalSignOutRequest.required[0]: UserPoolId
definitions.AdminUserGlobalSignOutRequest.required[1]: Username
definitions.AdminUserGlobalSignOutRequest.type: object
definitions.AdminUserGlobalSignOutResponse.description: The global sign-out response,
  as an administrator.
definitions.AdminUserGlobalSignOutResponse.type: object
definitions.AliasAttributeType.enum.length: 3
definitions.AliasAttributeType.enum[0]: phone_number
definitions.AliasAttributeType.enum[1]: email
definitions.AliasAttributeType.enum[2]: preferred_username
definitions.AliasAttributeType.type: string
definitions.AliasAttributesListType.items.$ref: '#/definitions/AliasAttributeType'
definitions.AliasAttributesListType.type: array
definitions.AliasExistsException.description: This exception is thrown when a user
  tries to confirm the account with an email or phone number that has already been
  supplied as an alias from a different account. This exception tells user that an
  account with this email or phone already exists.
definitions.AliasExistsException.properties.message.$ref: '#/definitions/MessageType'
definitions.AliasExistsException.properties.message.description: The message sent
  to the user when an alias exists.
definitions.AliasExistsException.type: object
definitions.ArnType.maxLength: 2048
definitions.ArnType.minLength: 20
definitions.ArnType.pattern: arn:[\w+=/,.@-]+:[\w+=/,.@-]+:([\w+=/,.@-]*)?:[0-9]+:[\w+=/,.@-]+(:[\w+=/,.@-]+)?(:[\w+=/,.@-]+)?
definitions.ArnType.type: string
definitions.AttributeDataType.enum.length: 4
definitions.AttributeDataType.enum[0]: String
definitions.AttributeDataType.enum[1]: Number
definitions.AttributeDataType.enum[2]: DateTime
definitions.AttributeDataType.enum[3]: Boolean
definitions.AttributeDataType.type: string
definitions.AttributeListType.items.$ref: '#/definitions/AttributeType'
definitions.AttributeListType.type: array
definitions.AttributeMappingKeyType.maxLength: 32
definitions.AttributeMappingKeyType.minLength: 1
definitions.AttributeMappingKeyType.type: string
definitions.AttributeMappingType.items.properties.key.$ref: '#/definitions/AttributeMappingKeyType'
definitions.AttributeMappingType.items.properties.value.$ref: '#/definitions/StringType'
definitions.AttributeMappingType.items.type: object
definitions.AttributeMappingType.type: array
definitions.AttributeNameListType.items.$ref: '#/definitions/AttributeNameType'
definitions.AttributeNameListType.type: array
definitions.AttributeNameType.maxLength: 32
definitions.AttributeNameType.minLength: 1
definitions.AttributeNameType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.AttributeNameType.type: string
definitions.AttributeType.description: Specifies whether the attribute is standard
  or custom.
definitions.AttributeType.properties.Name.$ref: '#/definitions/AttributeNameType'
definitions.AttributeType.properties.Name.description: The name of the attribute.
definitions.AttributeType.properties.Value.$ref: '#/definitions/AttributeValueType'
definitions.AttributeType.properties.Value.description: The value of the attribute.
definitions.AttributeType.required.length: 1
definitions.AttributeType.required[0]: Name
definitions.AttributeType.type: object
definitions.AttributeValueType.format: password
definitions.AttributeValueType.maxLength: 2048
definitions.AttributeValueType.type: string
definitions.AuthFlowType.enum.length: 5
definitions.AuthFlowType.enum[0]: USER_SRP_AUTH
definitions.AuthFlowType.enum[1]: REFRESH_TOKEN_AUTH
definitions.AuthFlowType.enum[2]: REFRESH_TOKEN
definitions.AuthFlowType.enum[3]: CUSTOM_AUTH
definitions.AuthFlowType.enum[4]: ADMIN_NO_SRP_AUTH
definitions.AuthFlowType.type: string
definitions.AuthParametersType.items.properties.key.$ref: '#/definitions/StringType'
definitions.AuthParametersType.items.properties.value.$ref: '#/definitions/StringType'
definitions.AuthParametersType.items.type: object
definitions.AuthParametersType.type: array
definitions.AuthenticationResultType.description: The result type of the authentication
  result.
definitions.AuthenticationResultType.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.AuthenticationResultType.properties.AccessToken.description: The access
  token of the authentication result.
definitions.AuthenticationResultType.properties.ExpiresIn.$ref: '#/definitions/IntegerType'
definitions.AuthenticationResultType.properties.ExpiresIn.description: The expiration
  period of the authentication result.
definitions.AuthenticationResultType.properties.IdToken.$ref: '#/definitions/TokenModelType'
definitions.AuthenticationResultType.properties.IdToken.description: The ID token
  of the authentication result.
definitions.AuthenticationResultType.properties.NewDeviceMetadata.$ref: '#/definitions/NewDeviceMetadataType'
definitions.AuthenticationResultType.properties.NewDeviceMetadata.description: The
  new device metadata from an authentication result.
definitions.AuthenticationResultType.properties.RefreshToken.$ref: '#/definitions/TokenModelType'
definitions.AuthenticationResultType.properties.RefreshToken.description: The refresh
  token of the authentication result.
definitions.AuthenticationResultType.properties.TokenType.$ref: '#/definitions/StringType'
definitions.AuthenticationResultType.properties.TokenType.description: The token type
  of the authentication result.
definitions.AuthenticationResultType.type: object
definitions.BooleanType.type: boolean
definitions.CSSType.type: string
definitions.CSSVersionType.type: string
definitions.CallbackURLsListType.items.$ref: '#/definitions/RedirectUrlType'
definitions.CallbackURLsListType.maxItems: 100
definitions.CallbackURLsListType.minItems: 0
definitions.CallbackURLsListType.type: array
definitions.ChallengeNameType.enum.length: 7
definitions.ChallengeNameType.enum[0]: SMS_MFA
definitions.ChallengeNameType.enum[1]: PASSWORD_VERIFIER
definitions.ChallengeNameType.enum[2]: CUSTOM_CHALLENGE
definitions.ChallengeNameType.enum[3]: DEVICE_SRP_AUTH
definitions.ChallengeNameType.enum[4]: DEVICE_PASSWORD_VERIFIER
definitions.ChallengeNameType.enum[5]: ADMIN_NO_SRP_AUTH
definitions.ChallengeNameType.enum[6]: NEW_PASSWORD_REQUIRED
definitions.ChallengeNameType.type: string
definitions.ChallengeParametersType.items.properties.key.$ref: '#/definitions/StringType'
definitions.ChallengeParametersType.items.properties.value.$ref: '#/definitions/StringType'
definitions.ChallengeParametersType.items.type: object
definitions.ChallengeParametersType.type: array
definitions.ChallengeResponsesType.items.properties.key.$ref: '#/definitions/StringType'
definitions.ChallengeResponsesType.items.properties.value.$ref: '#/definitions/StringType'
definitions.ChallengeResponsesType.items.type: object
definitions.ChallengeResponsesType.type: array
definitions.ChangePasswordRequest.description: Represents the request to change a
  user password.
definitions.ChangePasswordRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.ChangePasswordRequest.properties.AccessToken.description: The access token
  in the change password request.
definitions.ChangePasswordRequest.properties.PreviousPassword.$ref: '#/definitions/PasswordType'
definitions.ChangePasswordRequest.properties.PreviousPassword.description: The old
  password in the change password request.
definitions.ChangePasswordRequest.properties.ProposedPassword.$ref: '#/definitions/PasswordType'
definitions.ChangePasswordRequest.properties.ProposedPassword.description: The new
  password in the change password request.
definitions.ChangePasswordRequest.required.length: 3
definitions.ChangePasswordRequest.required[0]: PreviousPassword
definitions.ChangePasswordRequest.required[1]: ProposedPassword
definitions.ChangePasswordRequest.required[2]: AccessToken
definitions.ChangePasswordRequest.type: object
definitions.ChangePasswordResponse.description: The response from the server to the
  change password request.
definitions.ChangePasswordResponse.type: object
definitions.ClientIdType.format: password
definitions.ClientIdType.maxLength: 128
definitions.ClientIdType.minLength: 1
definitions.ClientIdType.pattern: '[\w+]+'
definitions.ClientIdType.type: string
definitions.ClientMetadataType.items.properties.key.$ref: '#/definitions/StringType'
definitions.ClientMetadataType.items.properties.value.$ref: '#/definitions/StringType'
definitions.ClientMetadataType.items.type: object
definitions.ClientMetadataType.type: array
definitions.ClientNameType.maxLength: 128
definitions.ClientNameType.minLength: 1
definitions.ClientNameType.pattern: '[\w\s+=,.@-]+'
definitions.ClientNameType.type: string
definitions.ClientPermissionListType.items.$ref: '#/definitions/ClientPermissionType'
definitions.ClientPermissionListType.type: array
definitions.ClientPermissionType.maxLength: 2048
definitions.ClientPermissionType.minLength: 1
definitions.ClientPermissionType.type: string
definitions.ClientSecretType.format: password
definitions.ClientSecretType.maxLength: 64
definitions.ClientSecretType.minLength: 1
definitions.ClientSecretType.pattern: '[\w+]+'
definitions.ClientSecretType.type: string
definitions.CodeDeliveryDetailsListType.items.$ref: '#/definitions/CodeDeliveryDetailsType'
definitions.CodeDeliveryDetailsListType.type: array
definitions.CodeDeliveryDetailsType.description: The type of code delivery details
  being returned from the server.
definitions.CodeDeliveryDetailsType.properties.AttributeName.$ref: '#/definitions/AttributeNameType'
definitions.CodeDeliveryDetailsType.properties.AttributeName.description: The name
  of the attribute in the code delivery details type.
definitions.CodeDeliveryDetailsType.properties.DeliveryMedium.$ref: '#/definitions/DeliveryMediumType'
definitions.CodeDeliveryDetailsType.properties.DeliveryMedium.description: The delivery
  medium (email message or phone number).
definitions.CodeDeliveryDetailsType.properties.Destination.$ref: '#/definitions/StringType'
definitions.CodeDeliveryDetailsType.properties.Destination.description: The destination
  for the code delivery details.
definitions.CodeDeliveryDetailsType.type: object
definitions.CodeDeliveryFailureException.description: This exception is thrown when
  a verification code fails to deliver successfully.
definitions.CodeDeliveryFailureException.properties.message.$ref: '#/definitions/MessageType'
definitions.CodeDeliveryFailureException.properties.message.description: The message
  sent when a verification code fails to deliver successfully.
definitions.CodeDeliveryFailureException.type: object
definitions.CodeMismatchException.description: This exception is thrown if the provided
  code does not match what the server was expecting.
definitions.CodeMismatchException.properties.message.$ref: '#/definitions/MessageType'
definitions.CodeMismatchException.properties.message.description: The message provided
  when the code mismatch exception is thrown.
definitions.CodeMismatchException.type: object
definitions.CompletionMessageType.maxLength: 128
definitions.CompletionMessageType.minLength: 1
definitions.CompletionMessageType.pattern: '[\w]+'
definitions.CompletionMessageType.type: string
definitions.ConcurrentModificationException.description: This exception is thrown
  if two or more modifications are happening concurrently.
definitions.ConcurrentModificationException.properties.message.$ref: '#/definitions/MessageType'
definitions.ConcurrentModificationException.properties.message.description: The message
  provided when the concurrent exception is thrown.
definitions.ConcurrentModificationException.type: object
definitions.ConfirmDeviceRequest.description: Confirms the device request.
definitions.ConfirmDeviceRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.ConfirmDeviceRequest.properties.AccessToken.description: The access token.
definitions.ConfirmDeviceRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.ConfirmDeviceRequest.properties.DeviceKey.description: The device key.
definitions.ConfirmDeviceRequest.properties.DeviceName.$ref: '#/definitions/DeviceNameType'
definitions.ConfirmDeviceRequest.properties.DeviceName.description: The device name.
definitions.ConfirmDeviceRequest.properties.DeviceSecretVerifierConfig.$ref: '#/definitions/DeviceSecretVerifierConfigType'
definitions.ConfirmDeviceRequest.properties.DeviceSecretVerifierConfig.description: The
  configuration of the device secret verifier.
definitions.ConfirmDeviceRequest.required.length: 2
definitions.ConfirmDeviceRequest.required[0]: AccessToken
definitions.ConfirmDeviceRequest.required[1]: DeviceKey
definitions.ConfirmDeviceRequest.type: object
definitions.ConfirmDeviceResponse.description: Confirms the device response.
definitions.ConfirmDeviceResponse.properties.UserConfirmationNecessary.$ref: '#/definitions/BooleanType'
definitions.ConfirmDeviceResponse.properties.UserConfirmationNecessary.description: Indicates
  whether the user confirmation is necessary to confirm the device response.
definitions.ConfirmDeviceResponse.type: object
definitions.ConfirmForgotPasswordRequest.description: The request representing the
  confirmation for a password reset.
definitions.ConfirmForgotPasswordRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.ConfirmForgotPasswordRequest.properties.ClientId.description: The app
  client ID of the app associated with the user pool.
definitions.ConfirmForgotPasswordRequest.properties.ConfirmationCode.$ref: '#/definitions/ConfirmationCodeType'
definitions.ConfirmForgotPasswordRequest.properties.ConfirmationCode.description: 'The
  confirmation code sent by a user''s request to retrieve a forgotten password. For
  more information, see <a href="API_ForgotPassword.html">ForgotPassword</a> '
definitions.ConfirmForgotPasswordRequest.properties.Password.$ref: '#/definitions/PasswordType'
definitions.ConfirmForgotPasswordRequest.properties.Password.description: The password
  sent by a user's request to retrieve a forgotten password.
definitions.ConfirmForgotPasswordRequest.properties.SecretHash.$ref: '#/definitions/SecretHashType'
definitions.ConfirmForgotPasswordRequest.properties.SecretHash.description: A keyed-hash
  message authentication code (HMAC) calculated using the secret key of a user pool
  client and username plus the client ID in the message.
definitions.ConfirmForgotPasswordRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.ConfirmForgotPasswordRequest.properties.Username.description: The user
  name of the user for whom you want to enter a code to retrieve a forgotten password.
definitions.ConfirmForgotPasswordRequest.required.length: 4
definitions.ConfirmForgotPasswordRequest.required[0]: ClientId
definitions.ConfirmForgotPasswordRequest.required[1]: Username
definitions.ConfirmForgotPasswordRequest.required[2]: ConfirmationCode
definitions.ConfirmForgotPasswordRequest.required[3]: Password
definitions.ConfirmForgotPasswordRequest.type: object
definitions.ConfirmForgotPasswordResponse.description: The response from the server
  that results from a user's request to retrieve a forgotten password.
definitions.ConfirmForgotPasswordResponse.type: object
definitions.ConfirmSignUpRequest.description: Represents the request to confirm registration
  of a user.
definitions.ConfirmSignUpRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.ConfirmSignUpRequest.properties.ClientId.description: The ID of the app
  client associated with the user pool.
definitions.ConfirmSignUpRequest.properties.ConfirmationCode.$ref: '#/definitions/ConfirmationCodeType'
definitions.ConfirmSignUpRequest.properties.ConfirmationCode.description: The confirmation
  code sent by a user's request to confirm registration.
definitions.ConfirmSignUpRequest.properties.ForceAliasCreation.$ref: '#/definitions/ForceAliasCreation'
definitions.ConfirmSignUpRequest.properties.ForceAliasCreation.description: Boolean
  to be specified to force user confirmation irrespective of existing alias. By default
  set to <code>False</code>. If this parameter is set to <code>True</code> and the
  phone number/email used for sign up confirmation already exists as an alias with
  a different user, the API call will migrate the alias from the previous user to
  the newly created user being confirmed. If set to <code>False</code>, the API will
  throw an <b>AliasExistsException</b> error.
definitions.ConfirmSignUpRequest.properties.SecretHash.$ref: '#/definitions/SecretHashType'
definitions.ConfirmSignUpRequest.properties.SecretHash.description: A keyed-hash message
  authentication code (HMAC) calculated using the secret key of a user pool client
  and username plus the client ID in the message.
definitions.ConfirmSignUpRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.ConfirmSignUpRequest.properties.Username.description: The user name of
  the user whose registration you wish to confirm.
definitions.ConfirmSignUpRequest.required.length: 3
definitions.ConfirmSignUpRequest.required[0]: ClientId
definitions.ConfirmSignUpRequest.required[1]: Username
definitions.ConfirmSignUpRequest.required[2]: ConfirmationCode
definitions.ConfirmSignUpRequest.type: object
definitions.ConfirmSignUpResponse.description: Represents the response from the server
  for the registration confirmation.
definitions.ConfirmSignUpResponse.type: object
definitions.ConfirmationCodeType.maxLength: 2048
definitions.ConfirmationCodeType.minLength: 1
definitions.ConfirmationCodeType.pattern: '[\S]+'
definitions.ConfirmationCodeType.type: string
definitions.CreateGroupRequest.properties.Description.$ref: '#/definitions/DescriptionType'
definitions.CreateGroupRequest.properties.Description.description: A string containing
  the description of the group.
definitions.CreateGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.CreateGroupRequest.properties.GroupName.description: The name of the group.
  Must be unique.
definitions.CreateGroupRequest.properties.Precedence.$ref: '#/definitions/PrecedenceType'
definitions.CreateGroupRequest.properties.Precedence.description: <p>A nonnegative
  integer value that specifies the precedence of this group relative to the other
  groups that a user can belong to in the user pool. Zero is the highest precedence
  value. Groups with lower <code>Precedence</code> values take precedence over groups
  with higher or null <code>Precedence</code> values. If a user belongs to two or
  more groups, it is the group with the lowest precedence value whose role ARN will
  be used in the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
  claims in the user's tokens.</p> <p>Two groups can have the same <code>Precedence</code>
  value. If this happens, neither group takes precedence over the other. If two groups
  with the same <code>Precedence</code> have the same role ARN, that role is used
  in the <code>cognito:preferred_role</code> claim in tokens for users in each group.
  If the two groups have different role ARNs, the <code>cognito:preferred_role</code>
  claim is not set in users' tokens.</p> <p>The default <code>Precedence</code> value
  is null.</p>
definitions.CreateGroupRequest.properties.RoleArn.$ref: '#/definitions/ArnType'
definitions.CreateGroupRequest.properties.RoleArn.description: The role ARN for the
  group.
definitions.CreateGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateGroupRequest.properties.UserPoolId.description: The user pool ID
  for the user pool.
definitions.CreateGroupRequest.required.length: 2
definitions.CreateGroupRequest.required[0]: GroupName
definitions.CreateGroupRequest.required[1]: UserPoolId
definitions.CreateGroupRequest.type: object
definitions.CreateGroupResponse.properties.Group.$ref: '#/definitions/GroupType'
definitions.CreateGroupResponse.properties.Group.description: The group object for
  the group.
definitions.CreateGroupResponse.type: object
definitions.CreateIdentityProviderRequest.properties.AttributeMapping.$ref: '#/definitions/AttributeMappingType'
definitions.CreateIdentityProviderRequest.properties.AttributeMapping.description: A
  mapping of identity provider attributes to standard and custom user pool attributes.
definitions.CreateIdentityProviderRequest.properties.IdpIdentifiers.$ref: '#/definitions/IdpIdentifiersListType'
definitions.CreateIdentityProviderRequest.properties.IdpIdentifiers.description: A
  list of identity provider identifiers.
definitions.CreateIdentityProviderRequest.properties.ProviderDetails.$ref: '#/definitions/ProviderDetailsType'
definitions.CreateIdentityProviderRequest.properties.ProviderDetails.description: The
  identity provider details, such as <code>MetadataURL</code> and <code>MetadataFile</code>.
definitions.CreateIdentityProviderRequest.properties.ProviderName.$ref: '#/definitions/ProviderNameTypeV1'
definitions.CreateIdentityProviderRequest.properties.ProviderName.description: The
  identity provider name.
definitions.CreateIdentityProviderRequest.properties.ProviderType.$ref: '#/definitions/IdentityProviderTypeType'
definitions.CreateIdentityProviderRequest.properties.ProviderType.description: The
  identity provider type.
definitions.CreateIdentityProviderRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateIdentityProviderRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.CreateIdentityProviderRequest.required.length: 4
definitions.CreateIdentityProviderRequest.required[0]: UserPoolId
definitions.CreateIdentityProviderRequest.required[1]: ProviderName
definitions.CreateIdentityProviderRequest.required[2]: ProviderType
definitions.CreateIdentityProviderRequest.required[3]: ProviderDetails
definitions.CreateIdentityProviderRequest.type: object
definitions.CreateIdentityProviderResponse.properties.IdentityProvider.$ref: '#/definitions/IdentityProviderType'
definitions.CreateIdentityProviderResponse.properties.IdentityProvider.description: The
  newly created identity provider object.
definitions.CreateIdentityProviderResponse.required.length: 1
definitions.CreateIdentityProviderResponse.required[0]: IdentityProvider
definitions.CreateIdentityProviderResponse.type: object
definitions.CreateResourceServerRequest.properties.Identifier.$ref: '#/definitions/ResourceServerIdentifierType'
definitions.CreateResourceServerRequest.properties.Identifier.description: A unique
  resource server identifier for the resource server. This could be an HTTPS endpoint
  where the resource server is located. For example, <code>https://my-weather-api.example.com</code>.
definitions.CreateResourceServerRequest.properties.Name.$ref: '#/definitions/ResourceServerNameType'
definitions.CreateResourceServerRequest.properties.Name.description: A friendly name
  for the resource server.
definitions.CreateResourceServerRequest.properties.Scopes.$ref: '#/definitions/ResourceServerScopeListType'
definitions.CreateResourceServerRequest.properties.Scopes.description: A list of scopes.
  Each scope is map, where the keys are <code>name</code> and <code>description</code>.
definitions.CreateResourceServerRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateResourceServerRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.CreateResourceServerRequest.required.length: 3
definitions.CreateResourceServerRequest.required[0]: UserPoolId
definitions.CreateResourceServerRequest.required[1]: Identifier
definitions.CreateResourceServerRequest.required[2]: Name
definitions.CreateResourceServerRequest.type: object
definitions.CreateResourceServerResponse.properties.ResourceServer.$ref: '#/definitions/ResourceServerType'
definitions.CreateResourceServerResponse.properties.ResourceServer.description: The
  newly created resource server.
definitions.CreateResourceServerResponse.required.length: 1
definitions.CreateResourceServerResponse.required[0]: ResourceServer
definitions.CreateResourceServerResponse.type: object
definitions.CreateUserImportJobRequest.description: Represents the request to create
  the user import job.
definitions.CreateUserImportJobRequest.properties.CloudWatchLogsRoleArn.$ref: '#/definitions/ArnType'
definitions.CreateUserImportJobRequest.properties.CloudWatchLogsRoleArn.description: The
  role ARN for the Amazon CloudWatch Logging role for the user import job.
definitions.CreateUserImportJobRequest.properties.JobName.$ref: '#/definitions/UserImportJobNameType'
definitions.CreateUserImportJobRequest.properties.JobName.description: The job name
  for the user import job.
definitions.CreateUserImportJobRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateUserImportJobRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that the users are being imported into.
definitions.CreateUserImportJobRequest.required.length: 3
definitions.CreateUserImportJobRequest.required[0]: JobName
definitions.CreateUserImportJobRequest.required[1]: UserPoolId
definitions.CreateUserImportJobRequest.required[2]: CloudWatchLogsRoleArn
definitions.CreateUserImportJobRequest.type: object
definitions.CreateUserImportJobResponse.description: Represents the response from
  the server to the request to create the user import job.
definitions.CreateUserImportJobResponse.properties.UserImportJob.$ref: '#/definitions/UserImportJobType'
definitions.CreateUserImportJobResponse.properties.UserImportJob.description: The
  job object that represents the user import job.
definitions.CreateUserImportJobResponse.type: object
definitions.CreateUserPoolClientRequest.description: Represents the request to create
  a user pool client.
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthFlows.$ref: '#/definitions/OAuthFlowsType'
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthFlows.description: <p>Set
  to <code>code</code> to initiate a code grant flow, which provides an authorization
  code as the response. This code can be exchanged for access tokens with the token
  endpoint.</p> <p>Set to <code>token</code> to specify that the client should get
  the access token (and, optionally, ID token, based on scopes) directly.</p>
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthFlowsUserPoolClient.$ref: '#/definitions/BooleanType'
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthFlowsUserPoolClient.description: Set
  to <code>True</code> if the client is allowed to follow the OAuth protocol when
  interacting with Cognito user pools.
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthScopes.$ref: '#/definitions/ScopeListType'
definitions.CreateUserPoolClientRequest.properties.AllowedOAuthScopes.description: A
  list of allowed <code>OAuth</code> scopes. Currently supported values are <code>"phone"</code>,
  <code>"email"</code>, <code>"openid"</code>, and <code>"Cognito"</code>.
definitions.CreateUserPoolClientRequest.properties.CallbackURLs.$ref: '#/definitions/CallbackURLsListType'
definitions.CreateUserPoolClientRequest.properties.CallbackURLs.description: A list
  of allowed callback URLs for the identity providers.
definitions.CreateUserPoolClientRequest.properties.ClientName.$ref: '#/definitions/ClientNameType'
definitions.CreateUserPoolClientRequest.properties.ClientName.description: The client
  name for the user pool client you would like to create.
definitions.CreateUserPoolClientRequest.properties.DefaultRedirectURI.$ref: '#/definitions/RedirectUrlType'
definitions.CreateUserPoolClientRequest.properties.DefaultRedirectURI.description: The
  default redirect URI. Must be in the <code>CallbackURLs</code> list.
definitions.CreateUserPoolClientRequest.properties.ExplicitAuthFlows.$ref: '#/definitions/ExplicitAuthFlowsListType'
definitions.CreateUserPoolClientRequest.properties.ExplicitAuthFlows.description: The
  explicit authentication flows.
definitions.CreateUserPoolClientRequest.properties.GenerateSecret.$ref: '#/definitions/GenerateSecret'
definitions.CreateUserPoolClientRequest.properties.GenerateSecret.description: Boolean
  to specify whether you want to generate a secret for the user pool client being
  created.
definitions.CreateUserPoolClientRequest.properties.LogoutURLs.$ref: '#/definitions/LogoutURLsListType'
definitions.CreateUserPoolClientRequest.properties.LogoutURLs.description: A list
  of allowed logout URLs for the identity providers.
definitions.CreateUserPoolClientRequest.properties.ReadAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.CreateUserPoolClientRequest.properties.ReadAttributes.description: The
  read attributes.
definitions.CreateUserPoolClientRequest.properties.RefreshTokenValidity.$ref: '#/definitions/RefreshTokenValidityType'
definitions.CreateUserPoolClientRequest.properties.RefreshTokenValidity.description: The
  time limit, in days, after which the refresh token is no longer valid and cannot
  be used.
definitions.CreateUserPoolClientRequest.properties.SupportedIdentityProviders.$ref: '#/definitions/SupportedIdentityProvidersListType'
definitions.CreateUserPoolClientRequest.properties.SupportedIdentityProviders.description: A
  list of provider names for the identity providers that are supported on this client.
definitions.CreateUserPoolClientRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateUserPoolClientRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to create a user pool client.
definitions.CreateUserPoolClientRequest.properties.WriteAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.CreateUserPoolClientRequest.properties.WriteAttributes.description: The
  write attributes.
definitions.CreateUserPoolClientRequest.required.length: 2
definitions.CreateUserPoolClientRequest.required[0]: UserPoolId
definitions.CreateUserPoolClientRequest.required[1]: ClientName
definitions.CreateUserPoolClientRequest.type: object
definitions.CreateUserPoolClientResponse.description: Represents the response from
  the server to create a user pool client.
definitions.CreateUserPoolClientResponse.properties.UserPoolClient.$ref: '#/definitions/UserPoolClientType'
definitions.CreateUserPoolClientResponse.properties.UserPoolClient.description: The
  user pool client that was just created.
definitions.CreateUserPoolClientResponse.type: object
definitions.CreateUserPoolDomainRequest.properties.Domain.$ref: '#/definitions/DomainType'
definitions.CreateUserPoolDomainRequest.properties.Domain.description: The domain
  string.
definitions.CreateUserPoolDomainRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.CreateUserPoolDomainRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.CreateUserPoolDomainRequest.required.length: 2
definitions.CreateUserPoolDomainRequest.required[0]: Domain
definitions.CreateUserPoolDomainRequest.required[1]: UserPoolId
definitions.CreateUserPoolDomainRequest.type: object
definitions.CreateUserPoolDomainResponse.type: object
definitions.CreateUserPoolRequest.description: Represents the request to create a
  user pool.
definitions.CreateUserPoolRequest.properties.AdminCreateUserConfig.$ref: '#/definitions/AdminCreateUserConfigType'
definitions.CreateUserPoolRequest.properties.AdminCreateUserConfig.description: The
  configuration for <code>AdminCreateUser</code> requests.
definitions.CreateUserPoolRequest.properties.AliasAttributes.$ref: '#/definitions/AliasAttributesListType'
definitions.CreateUserPoolRequest.properties.AliasAttributes.description: 'Attributes
  supported as an alias for this user pool. Possible values: <b>phone_number</b>,
  <b>email</b>, or <b>preferred_username</b>.'
definitions.CreateUserPoolRequest.properties.AutoVerifiedAttributes.$ref: '#/definitions/VerifiedAttributesListType'
definitions.CreateUserPoolRequest.properties.AutoVerifiedAttributes.description: 'The
  attributes to be auto-verified. Possible values: <b>email</b>, <b>phone_number</b>.'
definitions.CreateUserPoolRequest.properties.DeviceConfiguration.$ref: '#/definitions/DeviceConfigurationType'
definitions.CreateUserPoolRequest.properties.DeviceConfiguration.description: The
  device configuration.
definitions.CreateUserPoolRequest.properties.EmailConfiguration.$ref: '#/definitions/EmailConfigurationType'
definitions.CreateUserPoolRequest.properties.EmailConfiguration.description: The email
  configuration.
definitions.CreateUserPoolRequest.properties.EmailVerificationMessage.$ref: '#/definitions/EmailVerificationMessageType'
definitions.CreateUserPoolRequest.properties.EmailVerificationMessage.description: A
  string representing the email verification message.
definitions.CreateUserPoolRequest.properties.EmailVerificationSubject.$ref: '#/definitions/EmailVerificationSubjectType'
definitions.CreateUserPoolRequest.properties.EmailVerificationSubject.description: A
  string representing the email verification subject.
definitions.CreateUserPoolRequest.properties.LambdaConfig.$ref: '#/definitions/LambdaConfigType'
definitions.CreateUserPoolRequest.properties.LambdaConfig.description: The Lambda
  trigger configuration information for the new user pool.
definitions.CreateUserPoolRequest.properties.MfaConfiguration.$ref: '#/definitions/UserPoolMfaType'
definitions.CreateUserPoolRequest.properties.MfaConfiguration.description: Specifies
  MFA configuration details.
definitions.CreateUserPoolRequest.properties.Policies.$ref: '#/definitions/UserPoolPolicyType'
definitions.CreateUserPoolRequest.properties.Policies.description: The policies associated
  with the new user pool.
definitions.CreateUserPoolRequest.properties.PoolName.$ref: '#/definitions/UserPoolNameType'
definitions.CreateUserPoolRequest.properties.PoolName.description: A string used to
  name the user pool.
definitions.CreateUserPoolRequest.properties.Schema.$ref: '#/definitions/SchemaAttributesListType'
definitions.CreateUserPoolRequest.properties.Schema.description: An array of schema
  attributes for the new user pool. These attributes can be standard or custom attributes.
definitions.CreateUserPoolRequest.properties.SmsAuthenticationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.CreateUserPoolRequest.properties.SmsAuthenticationMessage.description: A
  string representing the SMS authentication message.
definitions.CreateUserPoolRequest.properties.SmsConfiguration.$ref: '#/definitions/SmsConfigurationType'
definitions.CreateUserPoolRequest.properties.SmsConfiguration.description: The SMS
  configuration.
definitions.CreateUserPoolRequest.properties.SmsVerificationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.CreateUserPoolRequest.properties.SmsVerificationMessage.description: A
  string representing the SMS verification message.
definitions.CreateUserPoolRequest.properties.UserPoolTags.$ref: '#/definitions/UserPoolTagsType'
definitions.CreateUserPoolRequest.properties.UserPoolTags.description: 'The cost allocation
  tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
  Cost Allocation Tags to Your User Pool</a> '
definitions.CreateUserPoolRequest.properties.UsernameAttributes.$ref: '#/definitions/UsernameAttributesListType'
definitions.CreateUserPoolRequest.properties.UsernameAttributes.description: Specifies
  whether email addresses or phone numbers can be specified as usernames when a user
  signs up.
definitions.CreateUserPoolRequest.properties.VerificationMessageTemplate.$ref: '#/definitions/VerificationMessageTemplateType'
definitions.CreateUserPoolRequest.properties.VerificationMessageTemplate.description: The
  template for the verification message that the user sees when the app requests permission
  to access the user's information.
definitions.CreateUserPoolRequest.required.length: 1
definitions.CreateUserPoolRequest.required[0]: PoolName
definitions.CreateUserPoolRequest.type: object
definitions.CreateUserPoolResponse.description: Represents the response from the server
  for the request to create a user pool.
definitions.CreateUserPoolResponse.properties.UserPool.$ref: '#/definitions/UserPoolType'
definitions.CreateUserPoolResponse.properties.UserPool.description: A container for
  the user pool details.
definitions.CreateUserPoolResponse.type: object
definitions.CustomAttributeNameType.maxLength: 20
definitions.CustomAttributeNameType.minLength: 1
definitions.CustomAttributeNameType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.CustomAttributeNameType.type: string
definitions.CustomAttributesListType.items.$ref: '#/definitions/SchemaAttributeType'
definitions.CustomAttributesListType.maxItems: 25
definitions.CustomAttributesListType.minItems: 1
definitions.CustomAttributesListType.type: array
definitions.DateType.format: date-time
definitions.DateType.type: string
definitions.DefaultEmailOptionType.enum.length: 2
definitions.DefaultEmailOptionType.enum[0]: CONFIRM_WITH_LINK
definitions.DefaultEmailOptionType.enum[1]: CONFIRM_WITH_CODE
definitions.DefaultEmailOptionType.type: string
definitions.DeleteGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.DeleteGroupRequest.properties.GroupName.description: The name of the group.
definitions.DeleteGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteGroupRequest.properties.UserPoolId.description: The user pool ID
  for the user pool.
definitions.DeleteGroupRequest.required.length: 2
definitions.DeleteGroupRequest.required[0]: GroupName
definitions.DeleteGroupRequest.required[1]: UserPoolId
definitions.DeleteGroupRequest.type: object
definitions.DeleteIdentityProviderRequest.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.DeleteIdentityProviderRequest.properties.ProviderName.description: The
  identity provider name.
definitions.DeleteIdentityProviderRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteIdentityProviderRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.DeleteIdentityProviderRequest.required.length: 2
definitions.DeleteIdentityProviderRequest.required[0]: UserPoolId
definitions.DeleteIdentityProviderRequest.required[1]: ProviderName
definitions.DeleteIdentityProviderRequest.type: object
definitions.DeleteResourceServerRequest.properties.Identifier.$ref: '#/definitions/ResourceServerIdentifierType'
definitions.DeleteResourceServerRequest.properties.Identifier.description: The identifier
  for the resource server.
definitions.DeleteResourceServerRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteResourceServerRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that hosts the resource server.
definitions.DeleteResourceServerRequest.required.length: 2
definitions.DeleteResourceServerRequest.required[0]: UserPoolId
definitions.DeleteResourceServerRequest.required[1]: Identifier
definitions.DeleteResourceServerRequest.type: object
definitions.DeleteUserAttributesRequest.description: Represents the request to delete
  user attributes.
definitions.DeleteUserAttributesRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.DeleteUserAttributesRequest.properties.AccessToken.description: The access
  token used in the request to delete user attributes.
definitions.DeleteUserAttributesRequest.properties.UserAttributeNames.$ref: '#/definitions/AttributeNameListType'
definitions.DeleteUserAttributesRequest.properties.UserAttributeNames.description: <p>An
  array of strings representing the user attribute names you wish to delete.</p> <p>For
  custom attributes, you must prepend the <code>custom:</code> prefix to the attribute
  name.</p>
definitions.DeleteUserAttributesRequest.required.length: 2
definitions.DeleteUserAttributesRequest.required[0]: UserAttributeNames
definitions.DeleteUserAttributesRequest.required[1]: AccessToken
definitions.DeleteUserAttributesRequest.type: object
definitions.DeleteUserAttributesResponse.description: Represents the response from
  the server to delete user attributes.
definitions.DeleteUserAttributesResponse.type: object
definitions.DeleteUserPoolClientRequest.description: Represents the request to delete
  a user pool client.
definitions.DeleteUserPoolClientRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.DeleteUserPoolClientRequest.properties.ClientId.description: The app client
  ID of the app associated with the user pool.
definitions.DeleteUserPoolClientRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteUserPoolClientRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to delete the client.
definitions.DeleteUserPoolClientRequest.required.length: 2
definitions.DeleteUserPoolClientRequest.required[0]: UserPoolId
definitions.DeleteUserPoolClientRequest.required[1]: ClientId
definitions.DeleteUserPoolClientRequest.type: object
definitions.DeleteUserPoolDomainRequest.properties.Domain.$ref: '#/definitions/DomainType'
definitions.DeleteUserPoolDomainRequest.properties.Domain.description: The domain
  string.
definitions.DeleteUserPoolDomainRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteUserPoolDomainRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.DeleteUserPoolDomainRequest.required.length: 2
definitions.DeleteUserPoolDomainRequest.required[0]: Domain
definitions.DeleteUserPoolDomainRequest.required[1]: UserPoolId
definitions.DeleteUserPoolDomainRequest.type: object
definitions.DeleteUserPoolDomainResponse.type: object
definitions.DeleteUserPoolRequest.description: Represents the request to delete a
  user pool.
definitions.DeleteUserPoolRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DeleteUserPoolRequest.properties.UserPoolId.description: The user pool
  ID for the user pool you want to delete.
definitions.DeleteUserPoolRequest.required.length: 1
definitions.DeleteUserPoolRequest.required[0]: UserPoolId
definitions.DeleteUserPoolRequest.type: object
definitions.DeleteUserRequest.description: Represents the request to delete a user.
definitions.DeleteUserRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.DeleteUserRequest.properties.AccessToken.description: The access token
  from a request to delete a user.
definitions.DeleteUserRequest.required.length: 1
definitions.DeleteUserRequest.required[0]: AccessToken
definitions.DeleteUserRequest.type: object
definitions.DeliveryMediumListType.items.$ref: '#/definitions/DeliveryMediumType'
definitions.DeliveryMediumListType.type: array
definitions.DeliveryMediumType.enum.length: 2
definitions.DeliveryMediumType.enum[0]: SMS
definitions.DeliveryMediumType.enum[1]: EMAIL
definitions.DeliveryMediumType.type: string
definitions.DescribeIdentityProviderRequest.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.DescribeIdentityProviderRequest.properties.ProviderName.description: The
  identity provider name.
definitions.DescribeIdentityProviderRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DescribeIdentityProviderRequest.properties.UserPoolId.description: The
  user pool ID.
definitions.DescribeIdentityProviderRequest.required.length: 2
definitions.DescribeIdentityProviderRequest.required[0]: UserPoolId
definitions.DescribeIdentityProviderRequest.required[1]: ProviderName
definitions.DescribeIdentityProviderRequest.type: object
definitions.DescribeIdentityProviderResponse.properties.IdentityProvider.$ref: '#/definitions/IdentityProviderType'
definitions.DescribeIdentityProviderResponse.properties.IdentityProvider.description: The
  identity provider that was deleted.
definitions.DescribeIdentityProviderResponse.required.length: 1
definitions.DescribeIdentityProviderResponse.required[0]: IdentityProvider
definitions.DescribeIdentityProviderResponse.type: object
definitions.DescribeResourceServerRequest.properties.Identifier.$ref: '#/definitions/ResourceServerIdentifierType'
definitions.DescribeResourceServerRequest.properties.Identifier.description: The identifier
  for the resource server
definitions.DescribeResourceServerRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DescribeResourceServerRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that hosts the resource server.
definitions.DescribeResourceServerRequest.required.length: 2
definitions.DescribeResourceServerRequest.required[0]: UserPoolId
definitions.DescribeResourceServerRequest.required[1]: Identifier
definitions.DescribeResourceServerRequest.type: object
definitions.DescribeResourceServerResponse.properties.ResourceServer.$ref: '#/definitions/ResourceServerType'
definitions.DescribeResourceServerResponse.properties.ResourceServer.description: The
  resource server.
definitions.DescribeResourceServerResponse.required.length: 1
definitions.DescribeResourceServerResponse.required[0]: ResourceServer
definitions.DescribeResourceServerResponse.type: object
definitions.DescribeUserImportJobRequest.description: Represents the request to describe
  the user import job.
definitions.DescribeUserImportJobRequest.properties.JobId.$ref: '#/definitions/UserImportJobIdType'
definitions.DescribeUserImportJobRequest.properties.JobId.description: The job ID
  for the user import job.
definitions.DescribeUserImportJobRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DescribeUserImportJobRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that the users are being imported into.
definitions.DescribeUserImportJobRequest.required.length: 2
definitions.DescribeUserImportJobRequest.required[0]: UserPoolId
definitions.DescribeUserImportJobRequest.required[1]: JobId
definitions.DescribeUserImportJobRequest.type: object
definitions.DescribeUserImportJobResponse.description: Represents the response from
  the server to the request to describe the user import job.
definitions.DescribeUserImportJobResponse.properties.UserImportJob.$ref: '#/definitions/UserImportJobType'
definitions.DescribeUserImportJobResponse.properties.UserImportJob.description: The
  job object that represents the user import job.
definitions.DescribeUserImportJobResponse.type: object
definitions.DescribeUserPoolClientRequest.description: Represents the request to describe
  a user pool client.
definitions.DescribeUserPoolClientRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.DescribeUserPoolClientRequest.properties.ClientId.description: The app
  client ID of the app associated with the user pool.
definitions.DescribeUserPoolClientRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DescribeUserPoolClientRequest.properties.UserPoolId.description: The user
  pool ID for the user pool you want to describe.
definitions.DescribeUserPoolClientRequest.required.length: 2
definitions.DescribeUserPoolClientRequest.required[0]: UserPoolId
definitions.DescribeUserPoolClientRequest.required[1]: ClientId
definitions.DescribeUserPoolClientRequest.type: object
definitions.DescribeUserPoolClientResponse.description: Represents the response from
  the server from a request to describe the user pool client.
definitions.DescribeUserPoolClientResponse.properties.UserPoolClient.$ref: '#/definitions/UserPoolClientType'
definitions.DescribeUserPoolClientResponse.properties.UserPoolClient.description: The
  user pool client from a server response to describe the user pool client.
definitions.DescribeUserPoolClientResponse.type: object
definitions.DescribeUserPoolDomainRequest.properties.Domain.$ref: '#/definitions/DomainType'
definitions.DescribeUserPoolDomainRequest.properties.Domain.description: The domain
  string.
definitions.DescribeUserPoolDomainRequest.required.length: 1
definitions.DescribeUserPoolDomainRequest.required[0]: Domain
definitions.DescribeUserPoolDomainRequest.type: object
definitions.DescribeUserPoolDomainResponse.properties.DomainDescription.$ref: '#/definitions/DomainDescriptionType'
definitions.DescribeUserPoolDomainResponse.properties.DomainDescription.description: A
  domain description object containing information about the domain.
definitions.DescribeUserPoolDomainResponse.type: object
definitions.DescribeUserPoolRequest.description: Represents the request to describe
  the user pool.
definitions.DescribeUserPoolRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DescribeUserPoolRequest.properties.UserPoolId.description: The user pool
  ID for the user pool you want to describe.
definitions.DescribeUserPoolRequest.required.length: 1
definitions.DescribeUserPoolRequest.required[0]: UserPoolId
definitions.DescribeUserPoolRequest.type: object
definitions.DescribeUserPoolResponse.description: Represents the response to describe
  the user pool.
definitions.DescribeUserPoolResponse.properties.UserPool.$ref: '#/definitions/UserPoolType'
definitions.DescribeUserPoolResponse.properties.UserPool.description: The container
  of metadata returned by the server to describe the pool.
definitions.DescribeUserPoolResponse.type: object
definitions.DescriptionType.maxLength: 2048
definitions.DescriptionType.type: string
definitions.DeviceConfigurationType.description: The type of configuration for the
  user pool's device tracking.
definitions.DeviceConfigurationType.properties.ChallengeRequiredOnNewDevice.$ref: '#/definitions/BooleanType'
definitions.DeviceConfigurationType.properties.ChallengeRequiredOnNewDevice.description: Indicates
  whether a challenge is required on a new device. Only applicable to a new device.
definitions.DeviceConfigurationType.properties.DeviceOnlyRememberedOnUserPrompt.$ref: '#/definitions/BooleanType'
definitions.DeviceConfigurationType.properties.DeviceOnlyRememberedOnUserPrompt.description: If
  true, a device is only remembered on user prompt.
definitions.DeviceConfigurationType.type: object
definitions.DeviceKeyType.maxLength: 55
definitions.DeviceKeyType.minLength: 1
definitions.DeviceKeyType.pattern: '[\w-]+_[0-9a-f-]+'
definitions.DeviceKeyType.type: string
definitions.DeviceListType.items.$ref: '#/definitions/DeviceType'
definitions.DeviceListType.type: array
definitions.DeviceNameType.maxLength: 1024
definitions.DeviceNameType.minLength: 1
definitions.DeviceNameType.type: string
definitions.DeviceRememberedStatusType.enum.length: 2
definitions.DeviceRememberedStatusType.enum[0]: remembered
definitions.DeviceRememberedStatusType.enum[1]: not_remembered
definitions.DeviceRememberedStatusType.type: string
definitions.DeviceSecretVerifierConfigType.description: The device verifier against
  which it will be authenticated.
definitions.DeviceSecretVerifierConfigType.properties.PasswordVerifier.$ref: '#/definitions/StringType'
definitions.DeviceSecretVerifierConfigType.properties.PasswordVerifier.description: The
  password verifier.
definitions.DeviceSecretVerifierConfigType.properties.Salt.$ref: '#/definitions/StringType'
definitions.DeviceSecretVerifierConfigType.properties.Salt.description: The salt.
definitions.DeviceSecretVerifierConfigType.type: object
definitions.DeviceType.description: The device type.
definitions.DeviceType.properties.DeviceAttributes.$ref: '#/definitions/AttributeListType'
definitions.DeviceType.properties.DeviceAttributes.description: The device attributes.
definitions.DeviceType.properties.DeviceCreateDate.$ref: '#/definitions/DateType'
definitions.DeviceType.properties.DeviceCreateDate.description: The creation date
  of the device.
definitions.DeviceType.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.DeviceType.properties.DeviceKey.description: The device key.
definitions.DeviceType.properties.DeviceLastAuthenticatedDate.$ref: '#/definitions/DateType'
definitions.DeviceType.properties.DeviceLastAuthenticatedDate.description: The date
  in which the device was last authenticated.
definitions.DeviceType.properties.DeviceLastModifiedDate.$ref: '#/definitions/DateType'
definitions.DeviceType.properties.DeviceLastModifiedDate.description: The last modified
  date of the device.
definitions.DeviceType.type: object
definitions.DomainDescriptionType.description: A container for information about a
  domain.
definitions.DomainDescriptionType.properties.AWSAccountId.$ref: '#/definitions/AWSAccountIdType'
definitions.DomainDescriptionType.properties.AWSAccountId.description: The AWS account
  ID for the user pool owner.
definitions.DomainDescriptionType.properties.CloudFrontDistribution.$ref: '#/definitions/ArnType'
definitions.DomainDescriptionType.properties.CloudFrontDistribution.description: The
  ARN of the CloudFront distribution.
definitions.DomainDescriptionType.properties.Domain.$ref: '#/definitions/DomainType'
definitions.DomainDescriptionType.properties.Domain.description: The domain string.
definitions.DomainDescriptionType.properties.S3Bucket.$ref: '#/definitions/S3BucketType'
definitions.DomainDescriptionType.properties.S3Bucket.description: The S3 bucket where
  the static files for this domain are stored.
definitions.DomainDescriptionType.properties.Status.$ref: '#/definitions/DomainStatusType'
definitions.DomainDescriptionType.properties.Status.description: The domain status.
definitions.DomainDescriptionType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.DomainDescriptionType.properties.UserPoolId.description: The user pool
  ID.
definitions.DomainDescriptionType.properties.Version.$ref: '#/definitions/DomainVersionType'
definitions.DomainDescriptionType.properties.Version.description: The app version.
definitions.DomainDescriptionType.type: object
definitions.DomainStatusType.enum.length: 5
definitions.DomainStatusType.enum[0]: CREATING
definitions.DomainStatusType.enum[1]: DELETING
definitions.DomainStatusType.enum[2]: UPDATING
definitions.DomainStatusType.enum[3]: ACTIVE
definitions.DomainStatusType.enum[4]: FAILED
definitions.DomainStatusType.type: string
definitions.DomainType.maxLength: 63
definitions.DomainType.minLength: 1
definitions.DomainType.pattern: ^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$
definitions.DomainType.type: string
definitions.DomainVersionType.maxLength: 20
definitions.DomainVersionType.minLength: 1
definitions.DomainVersionType.type: string
definitions.DuplicateProviderException.description: This exception is thrown when
  the provider is already supported by the user pool.
definitions.DuplicateProviderException.properties.message.$ref: '#/definitions/MessageType'
definitions.DuplicateProviderException.type: object
definitions.EmailAddressType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+@[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.EmailAddressType.type: string
definitions.EmailConfigurationType.description: The email configuration type.
definitions.EmailConfigurationType.properties.ReplyToEmailAddress.$ref: '#/definitions/EmailAddressType'
definitions.EmailConfigurationType.properties.ReplyToEmailAddress.description: The
  REPLY-TO email address.
definitions.EmailConfigurationType.properties.SourceArn.$ref: '#/definitions/ArnType'
definitions.EmailConfigurationType.properties.SourceArn.description: The Amazon Resource
  Name (ARN) of the email source.
definitions.EmailConfigurationType.type: object
definitions.EmailVerificationMessageByLinkType.maxLength: 20000
definitions.EmailVerificationMessageByLinkType.minLength: 6
definitions.EmailVerificationMessageByLinkType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{##[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*##\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*'
definitions.EmailVerificationMessageByLinkType.type: string
definitions.EmailVerificationMessageType.maxLength: 20000
definitions.EmailVerificationMessageType.minLength: 6
definitions.EmailVerificationMessageType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{####\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*'
definitions.EmailVerificationMessageType.type: string
definitions.EmailVerificationSubjectByLinkType.maxLength: 140
definitions.EmailVerificationSubjectByLinkType.minLength: 1
definitions.EmailVerificationSubjectByLinkType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+'
definitions.EmailVerificationSubjectByLinkType.type: string
definitions.EmailVerificationSubjectType.maxLength: 140
definitions.EmailVerificationSubjectType.minLength: 1
definitions.EmailVerificationSubjectType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+'
definitions.EmailVerificationSubjectType.type: string
definitions.ExpiredCodeException.description: This exception is thrown if a code has
  expired.
definitions.ExpiredCodeException.properties.message.$ref: '#/definitions/MessageType'
definitions.ExpiredCodeException.properties.message.description: The message returned
  when the expired code exception is thrown.
definitions.ExpiredCodeException.type: object
definitions.ExplicitAuthFlowsListType.items.$ref: '#/definitions/ExplicitAuthFlowsType'
definitions.ExplicitAuthFlowsListType.type: array
definitions.ExplicitAuthFlowsType.enum.length: 2
definitions.ExplicitAuthFlowsType.enum[0]: ADMIN_NO_SRP_AUTH
definitions.ExplicitAuthFlowsType.enum[1]: CUSTOM_AUTH_FLOW_ONLY
definitions.ExplicitAuthFlowsType.type: string
definitions.ForceAliasCreation.type: boolean
definitions.ForgetDeviceRequest.description: Represents the request to forget the
  device.
definitions.ForgetDeviceRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.ForgetDeviceRequest.properties.AccessToken.description: The access token
  for the forgotten device request.
definitions.ForgetDeviceRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.ForgetDeviceRequest.properties.DeviceKey.description: The device key.
definitions.ForgetDeviceRequest.required.length: 1
definitions.ForgetDeviceRequest.required[0]: DeviceKey
definitions.ForgetDeviceRequest.type: object
definitions.ForgotPasswordRequest.description: Represents the request to reset a user's
  password.
definitions.ForgotPasswordRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.ForgotPasswordRequest.properties.ClientId.description: The ID of the client
  associated with the user pool.
definitions.ForgotPasswordRequest.properties.SecretHash.$ref: '#/definitions/SecretHashType'
definitions.ForgotPasswordRequest.properties.SecretHash.description: A keyed-hash
  message authentication code (HMAC) calculated using the secret key of a user pool
  client and username plus the client ID in the message.
definitions.ForgotPasswordRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.ForgotPasswordRequest.properties.Username.description: The user name of
  the user for whom you want to enter a code to reset a forgotten password.
definitions.ForgotPasswordRequest.required.length: 2
definitions.ForgotPasswordRequest.required[0]: ClientId
definitions.ForgotPasswordRequest.required[1]: Username
definitions.ForgotPasswordRequest.type: object
definitions.ForgotPasswordResponse.description: Respresents the response from the
  server regarding the request to reset a password.
definitions.ForgotPasswordResponse.properties.CodeDeliveryDetails.$ref: '#/definitions/CodeDeliveryDetailsType'
definitions.ForgotPasswordResponse.properties.CodeDeliveryDetails.description: The
  code delivery details returned by the server in response to the request to reset
  a password.
definitions.ForgotPasswordResponse.type: object
definitions.GenerateSecret.type: boolean
definitions.GetCSVHeaderRequest.description: Represents the request to get the header
  information for the .csv file for the user import job.
definitions.GetCSVHeaderRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GetCSVHeaderRequest.properties.UserPoolId.description: The user pool ID
  for the user pool that the users are to be imported into.
definitions.GetCSVHeaderRequest.required.length: 1
definitions.GetCSVHeaderRequest.required[0]: UserPoolId
definitions.GetCSVHeaderRequest.type: object
definitions.GetCSVHeaderResponse.description: Represents the response from the server
  to the request to get the header information for the .csv file for the user import
  job.
definitions.GetCSVHeaderResponse.properties.CSVHeader.$ref: '#/definitions/ListOfStringTypes'
definitions.GetCSVHeaderResponse.properties.CSVHeader.description: The header information
  for the .csv file for the user import job.
definitions.GetCSVHeaderResponse.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GetCSVHeaderResponse.properties.UserPoolId.description: The user pool
  ID for the user pool that the users are to be imported into.
definitions.GetCSVHeaderResponse.type: object
definitions.GetDeviceRequest.description: Represents the request to get the device.
definitions.GetDeviceRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.GetDeviceRequest.properties.AccessToken.description: The access token.
definitions.GetDeviceRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.GetDeviceRequest.properties.DeviceKey.description: The device key.
definitions.GetDeviceRequest.required.length: 1
definitions.GetDeviceRequest.required[0]: DeviceKey
definitions.GetDeviceRequest.type: object
definitions.GetDeviceResponse.description: Gets the device response.
definitions.GetDeviceResponse.properties.Device.$ref: '#/definitions/DeviceType'
definitions.GetDeviceResponse.properties.Device.description: The device.
definitions.GetDeviceResponse.required.length: 1
definitions.GetDeviceResponse.required[0]: Device
definitions.GetDeviceResponse.type: object
definitions.GetGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.GetGroupRequest.properties.GroupName.description: The name of the group.
definitions.GetGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GetGroupRequest.properties.UserPoolId.description: The user pool ID for
  the user pool.
definitions.GetGroupRequest.required.length: 2
definitions.GetGroupRequest.required[0]: GroupName
definitions.GetGroupRequest.required[1]: UserPoolId
definitions.GetGroupRequest.type: object
definitions.GetGroupResponse.properties.Group.$ref: '#/definitions/GroupType'
definitions.GetGroupResponse.properties.Group.description: The group object for the
  group.
definitions.GetGroupResponse.type: object
definitions.GetIdentityProviderByIdentifierRequest.properties.IdpIdentifier.$ref: '#/definitions/IdpIdentifierType'
definitions.GetIdentityProviderByIdentifierRequest.properties.IdpIdentifier.description: The
  identity provider ID.
definitions.GetIdentityProviderByIdentifierRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GetIdentityProviderByIdentifierRequest.properties.UserPoolId.description: The
  user pool ID.
definitions.GetIdentityProviderByIdentifierRequest.required.length: 2
definitions.GetIdentityProviderByIdentifierRequest.required[0]: UserPoolId
definitions.GetIdentityProviderByIdentifierRequest.required[1]: IdpIdentifier
definitions.GetIdentityProviderByIdentifierRequest.type: object
definitions.GetIdentityProviderByIdentifierResponse.properties.IdentityProvider.$ref: '#/definitions/IdentityProviderType'
definitions.GetIdentityProviderByIdentifierResponse.properties.IdentityProvider.description: The
  identity provider object.
definitions.GetIdentityProviderByIdentifierResponse.required.length: 1
definitions.GetIdentityProviderByIdentifierResponse.required[0]: IdentityProvider
definitions.GetIdentityProviderByIdentifierResponse.type: object
definitions.GetUICustomizationRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.GetUICustomizationRequest.properties.ClientId.description: The client
  ID for the client app.
definitions.GetUICustomizationRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GetUICustomizationRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.GetUICustomizationRequest.required.length: 1
definitions.GetUICustomizationRequest.required[0]: UserPoolId
definitions.GetUICustomizationRequest.type: object
definitions.GetUICustomizationResponse.properties.UICustomization.$ref: '#/definitions/UICustomizationType'
definitions.GetUICustomizationResponse.properties.UICustomization.description: The
  UI customization information.
definitions.GetUICustomizationResponse.required.length: 1
definitions.GetUICustomizationResponse.required[0]: UICustomization
definitions.GetUICustomizationResponse.type: object
definitions.GetUserAttributeVerificationCodeRequest.description: Represents the request
  to get user attribute verification.
definitions.GetUserAttributeVerificationCodeRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.GetUserAttributeVerificationCodeRequest.properties.AccessToken.description: The
  access token returned by the server response to get the user attribute verification
  code.
definitions.GetUserAttributeVerificationCodeRequest.properties.AttributeName.$ref: '#/definitions/AttributeNameType'
definitions.GetUserAttributeVerificationCodeRequest.properties.AttributeName.description: The
  attribute name returned by the server response to get the user attribute verification
  code.
definitions.GetUserAttributeVerificationCodeRequest.required.length: 2
definitions.GetUserAttributeVerificationCodeRequest.required[0]: AccessToken
definitions.GetUserAttributeVerificationCodeRequest.required[1]: AttributeName
definitions.GetUserAttributeVerificationCodeRequest.type: object
definitions.GetUserAttributeVerificationCodeResponse.description: The verification
  code response returned by the server response to get the user attribute verification
  code.
definitions.GetUserAttributeVerificationCodeResponse.properties.CodeDeliveryDetails.$ref: '#/definitions/CodeDeliveryDetailsType'
definitions.GetUserAttributeVerificationCodeResponse.properties.CodeDeliveryDetails.description: The
  code delivery details returned by the server in response to the request to get the
  user attribute verification code.
definitions.GetUserAttributeVerificationCodeResponse.type: object
definitions.GetUserRequest.description: Represents the request to get information
  about the user.
definitions.GetUserRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.GetUserRequest.properties.AccessToken.description: The access token returned
  by the server response to get information about the user.
definitions.GetUserRequest.required.length: 1
definitions.GetUserRequest.required[0]: AccessToken
definitions.GetUserRequest.type: object
definitions.GetUserResponse.description: Represents the response from the server from
  the request to get information about the user.
definitions.GetUserResponse.properties.MFAOptions.$ref: '#/definitions/MFAOptionListType'
definitions.GetUserResponse.properties.MFAOptions.description: Specifies the options
  for MFA (e.g., email or phone number).
definitions.GetUserResponse.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.GetUserResponse.properties.UserAttributes.description: <p>An array of
  name-value pairs representing user attributes.</p> <p>For custom attributes, you
  must prepend the <code>custom:</code> prefix to the attribute name.</p>
definitions.GetUserResponse.properties.Username.$ref: '#/definitions/UsernameType'
definitions.GetUserResponse.properties.Username.description: The user name of the
  user you wish to retrieve from the get user request.
definitions.GetUserResponse.required.length: 2
definitions.GetUserResponse.required[0]: Username
definitions.GetUserResponse.required[1]: UserAttributes
definitions.GetUserResponse.type: object
definitions.GlobalSignOutRequest.description: Represents the request to sign out all
  devices.
definitions.GlobalSignOutRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.GlobalSignOutRequest.properties.AccessToken.description: The access token.
definitions.GlobalSignOutRequest.required.length: 1
definitions.GlobalSignOutRequest.required[0]: AccessToken
definitions.GlobalSignOutRequest.type: object
definitions.GlobalSignOutResponse.description: The response to the request to sign
  out all devices.
definitions.GlobalSignOutResponse.type: object
definitions.GroupExistsException.description: This exception is thrown when Amazon
  Cognito encounters a group that already exists in the user pool.
definitions.GroupExistsException.properties.message.$ref: '#/definitions/MessageType'
definitions.GroupExistsException.type: object
definitions.GroupListType.items.$ref: '#/definitions/GroupType'
definitions.GroupListType.type: array
definitions.GroupNameType.maxLength: 128
definitions.GroupNameType.minLength: 1
definitions.GroupNameType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.GroupNameType.type: string
definitions.GroupType.description: The group type.
definitions.GroupType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.GroupType.properties.CreationDate.description: The date the group was
  created.
definitions.GroupType.properties.Description.$ref: '#/definitions/DescriptionType'
definitions.GroupType.properties.Description.description: A string containing the
  description of the group.
definitions.GroupType.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.GroupType.properties.GroupName.description: The name of the group.
definitions.GroupType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.GroupType.properties.LastModifiedDate.description: The date the group
  was last modified.
definitions.GroupType.properties.Precedence.$ref: '#/definitions/PrecedenceType'
definitions.GroupType.properties.Precedence.description: <p>A nonnegative integer
  value that specifies the precedence of this group relative to the other groups that
  a user can belong to in the user pool. If a user belongs to two or more groups,
  it is the group with the highest precedence whose role ARN will be used in the <code>cognito:roles</code>
  and <code>cognito:preferred_role</code> claims in the user's tokens. Groups with
  higher <code>Precedence</code> values take precedence over groups with lower <code>Precedence</code>
  values or with null <code>Precedence</code> values.</p> <p>Two groups can have the
  same <code>Precedence</code> value. If this happens, neither group takes precedence
  over the other. If two groups with the same <code>Precedence</code> have the same
  role ARN, that role is used in the <code>cognito:preferred_role</code> claim in
  tokens for users in each group. If the two groups have different role ARNs, the
  <code>cognito:preferred_role</code> claim is not set in users' tokens.</p> <p>The
  default <code>Precedence</code> value is null.</p>
definitions.GroupType.properties.RoleArn.$ref: '#/definitions/ArnType'
definitions.GroupType.properties.RoleArn.description: The role ARN for the group.
definitions.GroupType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.GroupType.properties.UserPoolId.description: The user pool ID for the
  user pool.
definitions.GroupType.type: object
definitions.IdentityProviderType.description: A container for information about an
  identity provider.
definitions.IdentityProviderType.properties.AttributeMapping.$ref: '#/definitions/AttributeMappingType'
definitions.IdentityProviderType.properties.AttributeMapping.description: A mapping
  of identity provider attributes to standard and custom user pool attributes.
definitions.IdentityProviderType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.IdentityProviderType.properties.CreationDate.description: The date the
  identity provider was created.
definitions.IdentityProviderType.properties.IdpIdentifiers.$ref: '#/definitions/IdpIdentifiersListType'
definitions.IdentityProviderType.properties.IdpIdentifiers.description: A list of
  identity provider identifiers.
definitions.IdentityProviderType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.IdentityProviderType.properties.LastModifiedDate.description: The date
  the identity provider was last modified.
definitions.IdentityProviderType.properties.ProviderDetails.$ref: '#/definitions/ProviderDetailsType'
definitions.IdentityProviderType.properties.ProviderDetails.description: The identity
  provider details, such as <code>MetadataURL</code> and <code>MetadataFile</code>.
definitions.IdentityProviderType.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.IdentityProviderType.properties.ProviderName.description: The identity
  provider name.
definitions.IdentityProviderType.properties.ProviderType.$ref: '#/definitions/IdentityProviderTypeType'
definitions.IdentityProviderType.properties.ProviderType.description: The identity
  provider type.
definitions.IdentityProviderType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.IdentityProviderType.properties.UserPoolId.description: The user pool
  ID.
definitions.IdentityProviderType.type: object
definitions.IdentityProviderTypeType.enum.length: 4
definitions.IdentityProviderTypeType.enum[0]: SAML
definitions.IdentityProviderTypeType.enum[1]: Facebook
definitions.IdentityProviderTypeType.enum[2]: Google
definitions.IdentityProviderTypeType.enum[3]: LoginWithAmazon
definitions.IdentityProviderTypeType.type: string
definitions.IdpIdentifierType.maxLength: 40
definitions.IdpIdentifierType.minLength: 1
definitions.IdpIdentifierType.pattern: '[\w\s+=.@-]+'
definitions.IdpIdentifierType.type: string
definitions.IdpIdentifiersListType.items.$ref: '#/definitions/IdpIdentifierType'
definitions.IdpIdentifiersListType.maxItems: 50
definitions.IdpIdentifiersListType.minItems: 0
definitions.IdpIdentifiersListType.type: array
definitions.ImageFileType.type: string
definitions.ImageUrlType.type: string
definitions.InitiateAuthRequest.description: Initiates the authentication request.
definitions.InitiateAuthRequest.properties.AuthFlow.$ref: '#/definitions/AuthFlowType'
definitions.InitiateAuthRequest.properties.AuthFlow.description: '<p>The authentication
  flow for this call to execute. The API action will depend on this value. For example:
  </p> <ul> <li> <p> <code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh
  token and return new tokens.</p> </li> <li> <p> <code>USER_SRP_AUTH</code> will
  take in <code>USERNAME</code> and <code>SRP_A</code> and return the SRP variables
  to be used for next challenge execution.</p> </li> </ul> <p>Valid values include:</p>
  <ul> <li> <p> <code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote
  Password (SRP) protocol.</p> </li> <li> <p> <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>:
  Authentication flow for refreshing the access token and ID token by supplying a
  valid refresh token.</p> </li> <li> <p> <code>CUSTOM_AUTH</code>: Custom authentication
  flow.</p> </li> </ul> <p> <code>ADMIN_NO_SRP_AUTH</code> is not a valid value.</p>'
definitions.InitiateAuthRequest.properties.AuthParameters.$ref: '#/definitions/AuthParametersType'
definitions.InitiateAuthRequest.properties.AuthParameters.description: '<p>The authentication
  parameters. These are inputs corresponding to the <code>AuthFlow</code> that you
  are invoking. The required values depend on the value of <code>AuthFlow</code>:</p>
  <ul> <li> <p>For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required), <code>SRP_A</code>
  (required), <code>SECRET_HASH</code> (required if the app client is configured with
  a client secret), <code>DEVICE_KEY</code> </p> </li> <li> <p>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>:
  <code>USERNAME</code> (required), <code>SECRET_HASH</code> (required if the app
  client is configured with a client secret), <code>REFRESH_TOKEN</code> (required),
  <code>DEVICE_KEY</code> </p> </li> <li> <p>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code>
  (required), <code>SECRET_HASH</code> (if app client is configured with client secret),
  <code>DEVICE_KEY</code> </p> </li> </ul>'
definitions.InitiateAuthRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.InitiateAuthRequest.properties.ClientId.description: The app client ID.
definitions.InitiateAuthRequest.properties.ClientMetadata.$ref: '#/definitions/ClientMetadataType'
definitions.InitiateAuthRequest.properties.ClientMetadata.description: This is a random
  key-value pair map which can contain any key and will be passed to your PreAuthentication
  Lambda trigger as-is. It can be used to implement additional validations around
  authentication.
definitions.InitiateAuthRequest.required.length: 2
definitions.InitiateAuthRequest.required[0]: AuthFlow
definitions.InitiateAuthRequest.required[1]: ClientId
definitions.InitiateAuthRequest.type: object
definitions.InitiateAuthResponse.description: Initiates the authentication response.
definitions.InitiateAuthResponse.properties.AuthenticationResult.$ref: '#/definitions/AuthenticationResultType'
definitions.InitiateAuthResponse.properties.AuthenticationResult.description: The
  result of the authentication response. This is only returned if the caller does
  not need to pass another challenge. If the caller does need to pass another challenge
  before it gets tokens, <code>ChallengeName</code>, <code>ChallengeParameters</code>,
  and <code>Session</code> are returned.
definitions.InitiateAuthResponse.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.InitiateAuthResponse.properties.ChallengeName.description: '<p>The name
  of the challenge which you are responding to with this call. This is returned to
  you in the <code>AdminInitiateAuth</code> response if you need to pass another challenge.</p>
  <p>Valid values include the following. Note that all of these challenges require
  <code>USERNAME</code> and <code>SECRET_HASH</code> (if applicable) in the parameters.</p>
  <ul> <li> <p> <code>SMS_MFA</code>: Next challenge is to supply an <code>SMS_MFA_CODE</code>,
  delivered via SMS.</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: Next challenge
  is to supply <code>PASSWORD_CLAIM_SIGNATURE</code>, <code>PASSWORD_CLAIM_SECRET_BLOCK</code>,
  and <code>TIMESTAMP</code> after the client-side SRP calculations.</p> </li> <li>
  <p> <code>CUSTOM_CHALLENGE</code>: This is returned if your custom authentication
  flow determines that the user should pass another challenge before tokens are issued.</p>
  </li> <li> <p> <code>DEVICE_SRP_AUTH</code>: If device tracking was enabled on your
  user pool and the previous challenges were passed, this challenge is returned so
  that Amazon Cognito can start tracking this device.</p> </li> <li> <p> <code>DEVICE_PASSWORD_VERIFIER</code>:
  Similar to <code>PASSWORD_VERIFIER</code>, but for devices only.</p> </li> <li>
  <p> <code>NEW_PASSWORD_REQUIRED</code>: For users which are required to change their
  passwords after successful first login. This challenge should be passed with <code>NEW_PASSWORD</code>
  and any other required attributes.</p> </li> </ul>'
definitions.InitiateAuthResponse.properties.ChallengeParameters.$ref: '#/definitions/ChallengeParametersType'
definitions.InitiateAuthResponse.properties.ChallengeParameters.description: <p>The
  challenge parameters. These are returned to you in the <code>InitiateAuth</code>
  response if you need to pass another challenge. The responses in this parameter
  should be used to compute inputs to the next call (<code>RespondToAuthChallenge</code>).
  </p> <p>All challenges require <code>USERNAME</code> and <code>SECRET_HASH</code>
  (if applicable).</p>
definitions.InitiateAuthResponse.properties.Session.$ref: '#/definitions/SessionType'
definitions.InitiateAuthResponse.properties.Session.description: The session which
  should be passed both ways in challenge-response calls to the service. If the <a
  href="API_InitiateAuth.html">InitiateAuth</a> or <a href="API_RespondToAuthChallenge.html">RespondToAuthChallenge</a>
  API call determines that the caller needs to go through another challenge, they
  return a session with other challenge parameters. This session should be passed
  as it is to the next <code>RespondToAuthChallenge</code> API call.
definitions.InitiateAuthResponse.type: object
definitions.IntegerType.type: integer
definitions.InternalErrorException.description: This exception is thrown when Amazon
  Cognito encounters an internal error.
definitions.InternalErrorException.properties.message.$ref: '#/definitions/MessageType'
definitions.InternalErrorException.properties.message.description: The message returned
  when Amazon Cognito throws an internal error exception.
definitions.InternalErrorException.type: object
definitions.InvalidEmailRoleAccessPolicyException.description: 'This exception is
  thrown when Amazon Cognito is not allowed to use your email identity. HTTP status
  code: 400.'
definitions.InvalidEmailRoleAccessPolicyException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidEmailRoleAccessPolicyException.properties.message.description: The
  message returned when you have an unverified email address or the identity policy
  is not set on an email address that Amazon Cognito can access.
definitions.InvalidEmailRoleAccessPolicyException.type: object
definitions.InvalidLambdaResponseException.description: This exception is thrown when
  the Amazon Cognito service encounters an invalid AWS Lambda response.
definitions.InvalidLambdaResponseException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidLambdaResponseException.properties.message.description: The message
  returned when the Amazon Cognito service throws an invalid AWS Lambda response exception.
definitions.InvalidLambdaResponseException.type: object
definitions.InvalidOAuthFlowException.description: This exception is thrown when the
  specified OAuth flow is invalid.
definitions.InvalidOAuthFlowException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidOAuthFlowException.type: object
definitions.InvalidParameterException.description: This exception is thrown when the
  Amazon Cognito service encounters an invalid parameter.
definitions.InvalidParameterException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidParameterException.properties.message.description: The message
  returned when the Amazon Cognito service throws an invalid parameter exception.
definitions.InvalidParameterException.type: object
definitions.InvalidPasswordException.description: This exception is thrown when the
  Amazon Cognito service encounters an invalid password.
definitions.InvalidPasswordException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidPasswordException.properties.message.description: The message returned
  when the Amazon Cognito service throws an invalid user password exception.
definitions.InvalidPasswordException.type: object
definitions.InvalidSmsRoleAccessPolicyException.description: This exception is returned
  when the role provided for SMS configuration does not have permission to publish
  using Amazon SNS.
definitions.InvalidSmsRoleAccessPolicyException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidSmsRoleAccessPolicyException.properties.message.description: The
  message retuned when the invalid SMS role access policy exception is thrown.
definitions.InvalidSmsRoleAccessPolicyException.type: object
definitions.InvalidSmsRoleTrustRelationshipException.description: This exception is
  thrown when the trust relationship is invalid for the role provided for SMS configuration.
  This can happen if you do not trust <b>cognito-idp.amazonaws.com</b> or the external
  ID provided in the role does not match what is provided in the SMS configuration
  for the user pool.
definitions.InvalidSmsRoleTrustRelationshipException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidSmsRoleTrustRelationshipException.properties.message.description: The
  message returned when the role trust relationship for the SMS message is invalid.
definitions.InvalidSmsRoleTrustRelationshipException.type: object
definitions.InvalidUserPoolConfigurationException.description: This exception is thrown
  when the user pool configuration is invalid.
definitions.InvalidUserPoolConfigurationException.properties.message.$ref: '#/definitions/MessageType'
definitions.InvalidUserPoolConfigurationException.properties.message.description: The
  message returned when the user pool configuration is invalid.
definitions.InvalidUserPoolConfigurationException.type: object
definitions.LambdaConfigType.description: Specifies the type of configuration for
  AWS Lambda triggers.
definitions.LambdaConfigType.properties.CreateAuthChallenge.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.CreateAuthChallenge.description: Creates an
  authentication challenge.
definitions.LambdaConfigType.properties.CustomMessage.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.CustomMessage.description: A custom Message
  AWS Lambda trigger.
definitions.LambdaConfigType.properties.DefineAuthChallenge.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.DefineAuthChallenge.description: Defines the
  authentication challenge.
definitions.LambdaConfigType.properties.PostAuthentication.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.PostAuthentication.description: A post-authentication
  AWS Lambda trigger.
definitions.LambdaConfigType.properties.PostConfirmation.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.PostConfirmation.description: A post-confirmation
  AWS Lambda trigger.
definitions.LambdaConfigType.properties.PreAuthentication.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.PreAuthentication.description: A pre-authentication
  AWS Lambda trigger.
definitions.LambdaConfigType.properties.PreSignUp.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.PreSignUp.description: A pre-registration
  AWS Lambda trigger.
definitions.LambdaConfigType.properties.VerifyAuthChallengeResponse.$ref: '#/definitions/ArnType'
definitions.LambdaConfigType.properties.VerifyAuthChallengeResponse.description: Verifies
  the authentication challenge response.
definitions.LambdaConfigType.type: object
definitions.LimitExceededException.description: This exception is thrown when a user
  exceeds the limit for a requested AWS resource.
definitions.LimitExceededException.properties.message.$ref: '#/definitions/MessageType'
definitions.LimitExceededException.properties.message.description: The message returned
  when Amazon Cognito throws a limit exceeded exception.
definitions.LimitExceededException.type: object
definitions.ListDevicesRequest.description: Represents the request to list the devices.
definitions.ListDevicesRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.ListDevicesRequest.properties.AccessToken.description: The access tokens
  for the request to list devices.
definitions.ListDevicesRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.ListDevicesRequest.properties.Limit.description: The limit of the device
  request.
definitions.ListDevicesRequest.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.ListDevicesRequest.properties.PaginationToken.description: The pagination
  token for the list request.
definitions.ListDevicesRequest.required.length: 1
definitions.ListDevicesRequest.required[0]: AccessToken
definitions.ListDevicesRequest.type: object
definitions.ListDevicesResponse.description: Represents the response to list devices.
definitions.ListDevicesResponse.properties.Devices.$ref: '#/definitions/DeviceListType'
definitions.ListDevicesResponse.properties.Devices.description: The devices returned
  in the list devices response.
definitions.ListDevicesResponse.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.ListDevicesResponse.properties.PaginationToken.description: The pagination
  token for the list device response.
definitions.ListDevicesResponse.type: object
definitions.ListGroupsRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.ListGroupsRequest.properties.Limit.description: The limit of the request
  to list groups.
definitions.ListGroupsRequest.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListGroupsRequest.properties.NextToken.description: An identifier that
  was returned from the previous call to this operation, which can be used to return
  the next set of items in the list.
definitions.ListGroupsRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListGroupsRequest.properties.UserPoolId.description: The user pool ID
  for the user pool.
definitions.ListGroupsRequest.required.length: 1
definitions.ListGroupsRequest.required[0]: UserPoolId
definitions.ListGroupsRequest.type: object
definitions.ListGroupsResponse.properties.Groups.$ref: '#/definitions/GroupListType'
definitions.ListGroupsResponse.properties.Groups.description: The group objects for
  the groups.
definitions.ListGroupsResponse.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListGroupsResponse.properties.NextToken.description: An identifier that
  was returned from the previous call to this operation, which can be used to return
  the next set of items in the list.
definitions.ListGroupsResponse.type: object
definitions.ListIdentityProvidersRequest.properties.MaxResults.$ref: '#/definitions/ListProvidersLimitType'
definitions.ListIdentityProvidersRequest.properties.MaxResults.description: The maximum
  number of identity providers to return.
definitions.ListIdentityProvidersRequest.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListIdentityProvidersRequest.properties.NextToken.description: A pagination
  token.
definitions.ListIdentityProvidersRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListIdentityProvidersRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.ListIdentityProvidersRequest.required.length: 1
definitions.ListIdentityProvidersRequest.required[0]: UserPoolId
definitions.ListIdentityProvidersRequest.type: object
definitions.ListIdentityProvidersResponse.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListIdentityProvidersResponse.properties.NextToken.description: A pagination
  token.
definitions.ListIdentityProvidersResponse.properties.Providers.$ref: '#/definitions/ProvidersListType'
definitions.ListIdentityProvidersResponse.properties.Providers.description: A list
  of identity provider objects.
definitions.ListIdentityProvidersResponse.required.length: 1
definitions.ListIdentityProvidersResponse.required[0]: Providers
definitions.ListIdentityProvidersResponse.type: object
definitions.ListOfStringTypes.items.$ref: '#/definitions/StringType'
definitions.ListOfStringTypes.type: array
definitions.ListProvidersLimitType.maximum: 60
definitions.ListProvidersLimitType.minimum: 1
definitions.ListProvidersLimitType.type: integer
definitions.ListResourceServersLimitType.maximum: 50
definitions.ListResourceServersLimitType.minimum: 1
definitions.ListResourceServersLimitType.type: integer
definitions.ListResourceServersRequest.properties.MaxResults.$ref: '#/definitions/ListResourceServersLimitType'
definitions.ListResourceServersRequest.properties.MaxResults.description: The maximum
  number of resource servers to return.
definitions.ListResourceServersRequest.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListResourceServersRequest.properties.NextToken.description: A pagination
  token.
definitions.ListResourceServersRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListResourceServersRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.ListResourceServersRequest.required.length: 1
definitions.ListResourceServersRequest.required[0]: UserPoolId
definitions.ListResourceServersRequest.type: object
definitions.ListResourceServersResponse.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListResourceServersResponse.properties.NextToken.description: A pagination
  token.
definitions.ListResourceServersResponse.properties.ResourceServers.$ref: '#/definitions/ResourceServersListType'
definitions.ListResourceServersResponse.properties.ResourceServers.description: The
  resource servers.
definitions.ListResourceServersResponse.required.length: 1
definitions.ListResourceServersResponse.required[0]: ResourceServers
definitions.ListResourceServersResponse.type: object
definitions.ListUserImportJobsRequest.description: Represents the request to list
  the user import jobs.
definitions.ListUserImportJobsRequest.properties.MaxResults.$ref: '#/definitions/PoolQueryLimitType'
definitions.ListUserImportJobsRequest.properties.MaxResults.description: The maximum
  number of import jobs you want the request to return.
definitions.ListUserImportJobsRequest.properties.PaginationToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListUserImportJobsRequest.properties.PaginationToken.description: An identifier
  that was returned from the previous call to <code>ListUserImportJobs</code>, which
  can be used to return the next set of import jobs in the list.
definitions.ListUserImportJobsRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListUserImportJobsRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that the users are being imported into.
definitions.ListUserImportJobsRequest.required.length: 2
definitions.ListUserImportJobsRequest.required[0]: UserPoolId
definitions.ListUserImportJobsRequest.required[1]: MaxResults
definitions.ListUserImportJobsRequest.type: object
definitions.ListUserImportJobsResponse.description: Represents the response from the
  server to the request to list the user import jobs.
definitions.ListUserImportJobsResponse.properties.PaginationToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListUserImportJobsResponse.properties.PaginationToken.description: An
  identifier that can be used to return the next set of user import jobs in the list.
definitions.ListUserImportJobsResponse.properties.UserImportJobs.$ref: '#/definitions/UserImportJobsListType'
definitions.ListUserImportJobsResponse.properties.UserImportJobs.description: The
  user import jobs.
definitions.ListUserImportJobsResponse.type: object
definitions.ListUserPoolClientsRequest.description: Represents the request to list
  the user pool clients.
definitions.ListUserPoolClientsRequest.properties.MaxResults.$ref: '#/definitions/QueryLimit'
definitions.ListUserPoolClientsRequest.properties.MaxResults.description: The maximum
  number of results you want the request to return when listing the user pool clients.
definitions.ListUserPoolClientsRequest.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListUserPoolClientsRequest.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUserPoolClientsRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListUserPoolClientsRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to list user pool clients.
definitions.ListUserPoolClientsRequest.required.length: 1
definitions.ListUserPoolClientsRequest.required[0]: UserPoolId
definitions.ListUserPoolClientsRequest.type: object
definitions.ListUserPoolClientsResponse.description: Represents the response from
  the server that lists user pool clients.
definitions.ListUserPoolClientsResponse.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListUserPoolClientsResponse.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUserPoolClientsResponse.properties.UserPoolClients.$ref: '#/definitions/UserPoolClientListType'
definitions.ListUserPoolClientsResponse.properties.UserPoolClients.description: The
  user pool clients in the response that lists user pool clients.
definitions.ListUserPoolClientsResponse.type: object
definitions.ListUserPoolsRequest.description: Represents the request to list user
  pools.
definitions.ListUserPoolsRequest.properties.MaxResults.$ref: '#/definitions/PoolQueryLimitType'
definitions.ListUserPoolsRequest.properties.MaxResults.description: The maximum number
  of results you want the request to return when listing the user pools.
definitions.ListUserPoolsRequest.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListUserPoolsRequest.properties.NextToken.description: An identifier that
  was returned from the previous call to this operation, which can be used to return
  the next set of items in the list.
definitions.ListUserPoolsRequest.required.length: 1
definitions.ListUserPoolsRequest.required[0]: MaxResults
definitions.ListUserPoolsRequest.type: object
definitions.ListUserPoolsResponse.description: Represents the response to list user
  pools.
definitions.ListUserPoolsResponse.properties.NextToken.$ref: '#/definitions/PaginationKeyType'
definitions.ListUserPoolsResponse.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUserPoolsResponse.properties.UserPools.$ref: '#/definitions/UserPoolListType'
definitions.ListUserPoolsResponse.properties.UserPools.description: The user pools
  from the response to list users.
definitions.ListUserPoolsResponse.type: object
definitions.ListUsersInGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.ListUsersInGroupRequest.properties.GroupName.description: The name of
  the group.
definitions.ListUsersInGroupRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.ListUsersInGroupRequest.properties.Limit.description: The limit of the
  request to list users.
definitions.ListUsersInGroupRequest.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListUsersInGroupRequest.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUsersInGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListUsersInGroupRequest.properties.UserPoolId.description: The user pool
  ID for the user pool.
definitions.ListUsersInGroupRequest.required.length: 2
definitions.ListUsersInGroupRequest.required[0]: UserPoolId
definitions.ListUsersInGroupRequest.required[1]: GroupName
definitions.ListUsersInGroupRequest.type: object
definitions.ListUsersInGroupResponse.properties.NextToken.$ref: '#/definitions/PaginationKey'
definitions.ListUsersInGroupResponse.properties.NextToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUsersInGroupResponse.properties.Users.$ref: '#/definitions/UsersListType'
definitions.ListUsersInGroupResponse.properties.Users.description: The users returned
  in the request to list users.
definitions.ListUsersInGroupResponse.type: object
definitions.ListUsersRequest.description: Represents the request to list users.
definitions.ListUsersRequest.properties.AttributesToGet.$ref: '#/definitions/SearchedAttributeNamesListType'
definitions.ListUsersRequest.properties.AttributesToGet.description: An array of strings,
  where each string is the name of a user attribute to be returned for each user in
  the search results. If the array is empty, all attributes are returned.
definitions.ListUsersRequest.properties.Filter.$ref: '#/definitions/UserFilterType'
definitions.ListUsersRequest.properties.Filter.description: '<p>A filter string of
  the form "<i>AttributeName</i> <i>Filter-Type</i> "<i>AttributeValue</i>"". Quotation
  marks within the filter string must be escaped using the backslash (\) character.
  For example, "<code>family_name</code> = \"Reddy\"".</p> <ul> <li> <p> <i>AttributeName</i>:
  The name of the attribute to search for. You can only search for one attribute at
  a time.</p> </li> <li> <p> <i>Filter-Type</i>: For an exact match, use =, for example,
  "<code>given_name</code> = \"Jon\"". For a prefix ("starts with") match, use ^=,
  for example, "<code>given_name</code> ^= \"Jon\"". </p> </li> <li> <p> <i>AttributeValue</i>:
  The attribute value that must be matched for each user.</p> </li> </ul> <p>If the
  filter string is empty, <code>ListUsers</code> returns all users in the user pool.</p>
  <p>You can only search for the following standard attributes:</p> <ul> <li> <p>
  <code>username</code> (case-sensitive)</p> </li> <li> <p> <code>email</code> </p>
  </li> <li> <p> <code>phone_number</code> </p> </li> <li> <p> <code>name</code> </p>
  </li> <li> <p> <code>given_name</code> </p> </li> <li> <p> <code>family_name</code>
  </p> </li> <li> <p> <code>preferred_username</code> </p> </li> <li> <p> <code>cognito:user_status</code>
  (called <b>Enabled</b> in the Console) (case-sensitive)</p> </li> <li> <p> <code>status</code>
  (case-insensitive)</p> </li> </ul> <p>Custom attributes are not searchable.</p>
  <p>For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-using-listusers-api">Searching
  for Users Using the ListUsers API</a> and <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-listusers-api-examples">Examples
  of Using the ListUsers API</a> in the <i>Amazon Cognito Developer Guide</i>.</p>'
definitions.ListUsersRequest.properties.Limit.$ref: '#/definitions/QueryLimitType'
definitions.ListUsersRequest.properties.Limit.description: Maximum number of users
  to be returned.
definitions.ListUsersRequest.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.ListUsersRequest.properties.PaginationToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUsersRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ListUsersRequest.properties.UserPoolId.description: The user pool ID for
  the user pool on which the search should be performed.
definitions.ListUsersRequest.required.length: 1
definitions.ListUsersRequest.required[0]: UserPoolId
definitions.ListUsersRequest.type: object
definitions.ListUsersResponse.description: The response from the request to list users.
definitions.ListUsersResponse.properties.PaginationToken.$ref: '#/definitions/SearchPaginationTokenType'
definitions.ListUsersResponse.properties.PaginationToken.description: An identifier
  that was returned from the previous call to this operation, which can be used to
  return the next set of items in the list.
definitions.ListUsersResponse.properties.Users.$ref: '#/definitions/UsersListType'
definitions.ListUsersResponse.properties.Users.description: The users returned in
  the request to list users.
definitions.ListUsersResponse.type: object
definitions.LogoutURLsListType.items.$ref: '#/definitions/RedirectUrlType'
definitions.LogoutURLsListType.maxItems: 100
definitions.LogoutURLsListType.minItems: 0
definitions.LogoutURLsListType.type: array
definitions.LongType.type: integer
definitions.MFAMethodNotFoundException.description: This exception is thrown when
  Amazon Cognito cannot find a multi-factor authentication (MFA) method.
definitions.MFAMethodNotFoundException.properties.message.$ref: '#/definitions/MessageType'
definitions.MFAMethodNotFoundException.properties.message.description: The message
  returned when Amazon Cognito throws an MFA method not found exception.
definitions.MFAMethodNotFoundException.type: object
definitions.MFAOptionListType.items.$ref: '#/definitions/MFAOptionType'
definitions.MFAOptionListType.type: array
definitions.MFAOptionType.description: Specifies the different settings for multi-factor
  authentication (MFA).
definitions.MFAOptionType.properties.AttributeName.$ref: '#/definitions/AttributeNameType'
definitions.MFAOptionType.properties.AttributeName.description: The attribute name
  of the MFA option type.
definitions.MFAOptionType.properties.DeliveryMedium.$ref: '#/definitions/DeliveryMediumType'
definitions.MFAOptionType.properties.DeliveryMedium.description: The delivery medium
  (email message or SMS message) to send the MFA code.
definitions.MFAOptionType.type: object
definitions.MessageActionType.enum.length: 2
definitions.MessageActionType.enum[0]: RESEND
definitions.MessageActionType.enum[1]: SUPPRESS
definitions.MessageActionType.type: string
definitions.MessageTemplateType.description: The message template structure.
definitions.MessageTemplateType.properties.EmailMessage.$ref: '#/definitions/EmailVerificationMessageType'
definitions.MessageTemplateType.properties.EmailMessage.description: The message template
  for email messages.
definitions.MessageTemplateType.properties.EmailSubject.$ref: '#/definitions/EmailVerificationSubjectType'
definitions.MessageTemplateType.properties.EmailSubject.description: The subject line
  for email messages.
definitions.MessageTemplateType.properties.SMSMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.MessageTemplateType.properties.SMSMessage.description: The message template
  for SMS messages.
definitions.MessageTemplateType.type: object
definitions.MessageType.type: string
definitions.NewDeviceMetadataType.description: The new device metadata type.
definitions.NewDeviceMetadataType.properties.DeviceGroupKey.$ref: '#/definitions/StringType'
definitions.NewDeviceMetadataType.properties.DeviceGroupKey.description: The device
  group key.
definitions.NewDeviceMetadataType.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.NewDeviceMetadataType.properties.DeviceKey.description: The device key.
definitions.NewDeviceMetadataType.type: object
definitions.NotAuthorizedException.description: This exception is thrown when a user
  is not authorized.
definitions.NotAuthorizedException.properties.message.$ref: '#/definitions/MessageType'
definitions.NotAuthorizedException.properties.message.description: The message returned
  when the Amazon Cognito service returns a not authorized exception.
definitions.NotAuthorizedException.type: object
definitions.NumberAttributeConstraintsType.description: The minimum and maximum value
  of an attribute that is of the number data type.
definitions.NumberAttributeConstraintsType.properties.MaxValue.$ref: '#/definitions/StringType'
definitions.NumberAttributeConstraintsType.properties.MaxValue.description: The maximum
  value of an attribute that is of the number data type.
definitions.NumberAttributeConstraintsType.properties.MinValue.$ref: '#/definitions/StringType'
definitions.NumberAttributeConstraintsType.properties.MinValue.description: The minimum
  value of an attribute that is of the number data type.
definitions.NumberAttributeConstraintsType.type: object
definitions.OAuthFlowType.enum.length: 3
definitions.OAuthFlowType.enum[0]: code
definitions.OAuthFlowType.enum[1]: implicit
definitions.OAuthFlowType.enum[2]: client_credentials
definitions.OAuthFlowType.type: string
definitions.OAuthFlowsType.items.$ref: '#/definitions/OAuthFlowType'
definitions.OAuthFlowsType.maxItems: 3
definitions.OAuthFlowsType.minItems: 0
definitions.OAuthFlowsType.type: array
definitions.PaginationKey.minLength: 1
definitions.PaginationKey.pattern: '[\S]+'
definitions.PaginationKey.type: string
definitions.PaginationKeyType.minLength: 1
definitions.PaginationKeyType.pattern: '[\S]+'
definitions.PaginationKeyType.type: string
definitions.PasswordPolicyMinLengthType.maximum: 99
definitions.PasswordPolicyMinLengthType.minimum: 6
definitions.PasswordPolicyMinLengthType.type: integer
definitions.PasswordPolicyType.description: The password policy type.
definitions.PasswordPolicyType.properties.MinimumLength.$ref: '#/definitions/PasswordPolicyMinLengthType'
definitions.PasswordPolicyType.properties.MinimumLength.description: The minimum length
  of the password policy that you have set. Cannot be less than 6.
definitions.PasswordPolicyType.properties.RequireLowercase.$ref: '#/definitions/BooleanType'
definitions.PasswordPolicyType.properties.RequireLowercase.description: In the password
  policy that you have set, refers to whether you have required users to use at least
  one lowercase letter in their password.
definitions.PasswordPolicyType.properties.RequireNumbers.$ref: '#/definitions/BooleanType'
definitions.PasswordPolicyType.properties.RequireNumbers.description: In the password
  policy that you have set, refers to whether you have required users to use at least
  one number in their password.
definitions.PasswordPolicyType.properties.RequireSymbols.$ref: '#/definitions/BooleanType'
definitions.PasswordPolicyType.properties.RequireSymbols.description: In the password
  policy that you have set, refers to whether you have required users to use at least
  one symbol in their password.
definitions.PasswordPolicyType.properties.RequireUppercase.$ref: '#/definitions/BooleanType'
definitions.PasswordPolicyType.properties.RequireUppercase.description: In the password
  policy that you have set, refers to whether you have required users to use at least
  one uppercase letter in their password.
definitions.PasswordPolicyType.type: object
definitions.PasswordResetRequiredException.description: This exception is thrown when
  a password reset is required.
definitions.PasswordResetRequiredException.properties.message.$ref: '#/definitions/MessageType'
definitions.PasswordResetRequiredException.properties.message.description: The message
  returned when a password reset is required.
definitions.PasswordResetRequiredException.type: object
definitions.PasswordType.format: password
definitions.PasswordType.maxLength: 256
definitions.PasswordType.minLength: 6
definitions.PasswordType.pattern: '[\S]+'
definitions.PasswordType.type: string
definitions.PoolQueryLimitType.maximum: 60
definitions.PoolQueryLimitType.minimum: 1
definitions.PoolQueryLimitType.type: integer
definitions.PreSignedUrlType.maxLength: 2048
definitions.PreSignedUrlType.minLength: 0
definitions.PreSignedUrlType.type: string
definitions.PrecedenceType.minimum: 0
definitions.PrecedenceType.type: integer
definitions.PreconditionNotMetException.description: This exception is thrown when
  a precondition is not met.
definitions.PreconditionNotMetException.properties.message.$ref: '#/definitions/MessageType'
definitions.PreconditionNotMetException.properties.message.description: The message
  returned when a precondition is not met.
definitions.PreconditionNotMetException.type: object
definitions.ProviderDescription.description: A container for identity provider details.
definitions.ProviderDescription.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.ProviderDescription.properties.CreationDate.description: The date the
  provider was added to the user pool.
definitions.ProviderDescription.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.ProviderDescription.properties.LastModifiedDate.description: The date
  the provider was last modified.
definitions.ProviderDescription.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.ProviderDescription.properties.ProviderName.description: The identity
  provider name.
definitions.ProviderDescription.properties.ProviderType.$ref: '#/definitions/IdentityProviderTypeType'
definitions.ProviderDescription.properties.ProviderType.description: The identity
  provider type.
definitions.ProviderDescription.type: object
definitions.ProviderDetailsType.items.properties.key.$ref: '#/definitions/StringType'
definitions.ProviderDetailsType.items.properties.value.$ref: '#/definitions/StringType'
definitions.ProviderDetailsType.items.type: object
definitions.ProviderDetailsType.type: array
definitions.ProviderNameType.maxLength: 32
definitions.ProviderNameType.minLength: 1
definitions.ProviderNameType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.ProviderNameType.type: string
definitions.ProviderNameTypeV1.maxLength: 32
definitions.ProviderNameTypeV1.minLength: 1
definitions.ProviderNameTypeV1.pattern: '[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+'
definitions.ProviderNameTypeV1.type: string
definitions.ProviderUserIdentifierType.description: A container for information about
  an identity provider for a user pool.
definitions.ProviderUserIdentifierType.properties.ProviderAttributeName.$ref: '#/definitions/StringType'
definitions.ProviderUserIdentifierType.properties.ProviderAttributeName.description: The
  name of the provider attribute to link to, for example, <code>NameID</code>.
definitions.ProviderUserIdentifierType.properties.ProviderAttributeValue.$ref: '#/definitions/StringType'
definitions.ProviderUserIdentifierType.properties.ProviderAttributeValue.description: The
  value of the provider attribute to link to, for example, <code>xxxxx_account</code>.
definitions.ProviderUserIdentifierType.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.ProviderUserIdentifierType.properties.ProviderName.description: The name
  of the provider, for example, Facebook, Google, or Login with Amazon.
definitions.ProviderUserIdentifierType.type: object
definitions.ProvidersListType.items.$ref: '#/definitions/ProviderDescription'
definitions.ProvidersListType.maxItems: 50
definitions.ProvidersListType.minItems: 0
definitions.ProvidersListType.type: array
definitions.QueryLimit.maximum: 60
definitions.QueryLimit.minimum: 1
definitions.QueryLimit.type: integer
definitions.QueryLimitType.maximum: 60
definitions.QueryLimitType.minimum: 0
definitions.QueryLimitType.type: integer
definitions.RedirectUrlType.maxLength: 1024
definitions.RedirectUrlType.minLength: 1
definitions.RedirectUrlType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.RedirectUrlType.type: string
definitions.RefreshTokenValidityType.maximum: 3650
definitions.RefreshTokenValidityType.minimum: 0
definitions.RefreshTokenValidityType.type: integer
definitions.ResendConfirmationCodeRequest.description: Represents the request to resend
  the confirmation code.
definitions.ResendConfirmationCodeRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.ResendConfirmationCodeRequest.properties.ClientId.description: The ID
  of the client associated with the user pool.
definitions.ResendConfirmationCodeRequest.properties.SecretHash.$ref: '#/definitions/SecretHashType'
definitions.ResendConfirmationCodeRequest.properties.SecretHash.description: A keyed-hash
  message authentication code (HMAC) calculated using the secret key of a user pool
  client and username plus the client ID in the message.
definitions.ResendConfirmationCodeRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.ResendConfirmationCodeRequest.properties.Username.description: The user
  name of the user to whom you wish to resend a confirmation code.
definitions.ResendConfirmationCodeRequest.required.length: 2
definitions.ResendConfirmationCodeRequest.required[0]: ClientId
definitions.ResendConfirmationCodeRequest.required[1]: Username
definitions.ResendConfirmationCodeRequest.type: object
definitions.ResendConfirmationCodeResponse.description: The response from the server
  when the Amazon Cognito Your User Pools service makes the request to resend a confirmation
  code.
definitions.ResendConfirmationCodeResponse.properties.CodeDeliveryDetails.$ref: '#/definitions/CodeDeliveryDetailsType'
definitions.ResendConfirmationCodeResponse.properties.CodeDeliveryDetails.description: The
  code delivery details returned by the server in response to the request to resend
  the confirmation code.
definitions.ResendConfirmationCodeResponse.type: object
definitions.ResourceNotFoundException.description: This exception is thrown when the
  Amazon Cognito service cannot find the requested resource.
definitions.ResourceNotFoundException.properties.message.$ref: '#/definitions/MessageType'
definitions.ResourceNotFoundException.properties.message.description: The message
  returned when the Amazon Cognito service returns a resource not found exception.
definitions.ResourceNotFoundException.type: object
definitions.ResourceServerIdentifierType.maxLength: 256
definitions.ResourceServerIdentifierType.minLength: 1
definitions.ResourceServerIdentifierType.pattern: '[\x21\x23-\x5B\x5D-\x7E]+'
definitions.ResourceServerIdentifierType.type: string
definitions.ResourceServerNameType.maxLength: 256
definitions.ResourceServerNameType.minLength: 1
definitions.ResourceServerNameType.pattern: '[\w\s+=,.@-]+'
definitions.ResourceServerNameType.type: string
definitions.ResourceServerScopeDescriptionType.maxLength: 256
definitions.ResourceServerScopeDescriptionType.minLength: 1
definitions.ResourceServerScopeDescriptionType.type: string
definitions.ResourceServerScopeListType.items.$ref: '#/definitions/ResourceServerScopeType'
definitions.ResourceServerScopeListType.maxItems: 25
definitions.ResourceServerScopeListType.type: array
definitions.ResourceServerScopeNameType.maxLength: 256
definitions.ResourceServerScopeNameType.minLength: 1
definitions.ResourceServerScopeNameType.pattern: '[\x21\x23-\x2E\x30-\x5B\x5D-\x7E]+'
definitions.ResourceServerScopeNameType.type: string
definitions.ResourceServerScopeType.description: A resource server scope.
definitions.ResourceServerScopeType.properties.ScopeDescription.$ref: '#/definitions/ResourceServerScopeDescriptionType'
definitions.ResourceServerScopeType.properties.ScopeDescription.description: A description
  of the scope.
definitions.ResourceServerScopeType.properties.ScopeName.$ref: '#/definitions/ResourceServerScopeNameType'
definitions.ResourceServerScopeType.properties.ScopeName.description: The name of
  the scope.
definitions.ResourceServerScopeType.required.length: 2
definitions.ResourceServerScopeType.required[0]: ScopeName
definitions.ResourceServerScopeType.required[1]: ScopeDescription
definitions.ResourceServerScopeType.type: object
definitions.ResourceServerType.description: A container for information about a resource
  server for a user pool.
definitions.ResourceServerType.properties.Identifier.$ref: '#/definitions/ResourceServerIdentifierType'
definitions.ResourceServerType.properties.Identifier.description: The identifier for
  the resource server.
definitions.ResourceServerType.properties.Name.$ref: '#/definitions/ResourceServerNameType'
definitions.ResourceServerType.properties.Name.description: The name of the resource
  server.
definitions.ResourceServerType.properties.Scopes.$ref: '#/definitions/ResourceServerScopeListType'
definitions.ResourceServerType.properties.Scopes.description: A list of scopes that
  are defined for the resource server.
definitions.ResourceServerType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.ResourceServerType.properties.UserPoolId.description: The user pool ID
  for the user pool that hosts the resource server.
definitions.ResourceServerType.type: object
definitions.ResourceServersListType.items.$ref: '#/definitions/ResourceServerType'
definitions.ResourceServersListType.type: array
definitions.RespondToAuthChallengeRequest.description: The request to respond to an
  authentication challenge.
definitions.RespondToAuthChallengeRequest.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.RespondToAuthChallengeRequest.properties.ChallengeName.description: <p>The
  challenge name. For more information, see <a href="API_InitiateAuth.html">InitiateAuth</a>.</p>
  <p> <code>ADMIN_NO_SRP_AUTH</code> is not a valid value.</p>
definitions.RespondToAuthChallengeRequest.properties.ChallengeResponses.$ref: '#/definitions/ChallengeResponsesType'
definitions.RespondToAuthChallengeRequest.properties.ChallengeResponses.description: '<p>The
  challenge responses. These are inputs corresponding to the value of <code>ChallengeName</code>,
  for example:</p> <ul> <li> <p> <code>SMS_MFA</code>: <code>SMS_MFA_CODE</code>,
  <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client is configured with
  client secret).</p> </li> <li> <p> <code>PASSWORD_VERIFIER</code>: <code>PASSWORD_CLAIM_SIGNATURE</code>,
  <code>PASSWORD_CLAIM_SECRET_BLOCK</code>, <code>TIMESTAMP</code>, <code>USERNAME</code>,
  <code>SECRET_HASH</code> (if app client is configured with client secret).</p> </li>
  <li> <p> <code>NEW_PASSWORD_REQUIRED</code>: <code>NEW_PASSWORD</code>, any other
  required attributes, <code>USERNAME</code>, <code>SECRET_HASH</code> (if app client
  is configured with client secret). </p> </li> </ul>'
definitions.RespondToAuthChallengeRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.RespondToAuthChallengeRequest.properties.ClientId.description: The app
  client ID.
definitions.RespondToAuthChallengeRequest.properties.Session.$ref: '#/definitions/SessionType'
definitions.RespondToAuthChallengeRequest.properties.Session.description: The session
  which should be passed both ways in challenge-response calls to the service. If
  <code>InitiateAuth</code> or <code>RespondToAuthChallenge</code> API call determines
  that the caller needs to go through another challenge, they return a session with
  other challenge parameters. This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
  API call.
definitions.RespondToAuthChallengeRequest.required.length: 2
definitions.RespondToAuthChallengeRequest.required[0]: ClientId
definitions.RespondToAuthChallengeRequest.required[1]: ChallengeName
definitions.RespondToAuthChallengeRequest.type: object
definitions.RespondToAuthChallengeResponse.description: The response to respond to
  the authentication challenge.
definitions.RespondToAuthChallengeResponse.properties.AuthenticationResult.$ref: '#/definitions/AuthenticationResultType'
definitions.RespondToAuthChallengeResponse.properties.AuthenticationResult.description: The
  result returned by the server in response to the request to respond to the authentication
  challenge.
definitions.RespondToAuthChallengeResponse.properties.ChallengeName.$ref: '#/definitions/ChallengeNameType'
definitions.RespondToAuthChallengeResponse.properties.ChallengeName.description: The
  challenge name. For more information, see <a href="API_InitiateAuth.html">InitiateAuth</a>.
definitions.RespondToAuthChallengeResponse.properties.ChallengeParameters.$ref: '#/definitions/ChallengeParametersType'
definitions.RespondToAuthChallengeResponse.properties.ChallengeParameters.description: The
  challenge parameters. For more information, see <a href="API_InitiateAuth.html">InitiateAuth</a>.
definitions.RespondToAuthChallengeResponse.properties.Session.$ref: '#/definitions/SessionType'
definitions.RespondToAuthChallengeResponse.properties.Session.description: The session
  which should be passed both ways in challenge-response calls to the service. If
  the <a href="API_InitiateAuth.html">InitiateAuth</a> or <a href="API_RespondToAuthChallenge.html">RespondToAuthChallenge</a>
  API call determines that the caller needs to go through another challenge, they
  return a session with other challenge parameters. This session should be passed
  as it is to the next <code>RespondToAuthChallenge</code> API call.
definitions.RespondToAuthChallengeResponse.type: object
definitions.S3BucketType.maxLength: 1024
definitions.S3BucketType.minLength: 3
definitions.S3BucketType.pattern: ^[0-9A-Za-z\.\-_]*\(\?<!\.\)$
definitions.S3BucketType.type: string
definitions.SchemaAttributeType.description: Contains information about the schema
  attribute.
definitions.SchemaAttributeType.properties.AttributeDataType.$ref: '#/definitions/AttributeDataType'
definitions.SchemaAttributeType.properties.AttributeDataType.description: The attribute
  data type.
definitions.SchemaAttributeType.properties.DeveloperOnlyAttribute.$ref: '#/definitions/BooleanType'
definitions.SchemaAttributeType.properties.DeveloperOnlyAttribute.description: Specifies
  whether the attribute type is developer only.
definitions.SchemaAttributeType.properties.Mutable.$ref: '#/definitions/BooleanType'
definitions.SchemaAttributeType.properties.Mutable.description: Specifies whether
  the attribute can be changed once it has been created.
definitions.SchemaAttributeType.properties.Name.$ref: '#/definitions/CustomAttributeNameType'
definitions.SchemaAttributeType.properties.Name.description: A schema attribute of
  the name type.
definitions.SchemaAttributeType.properties.NumberAttributeConstraints.$ref: '#/definitions/NumberAttributeConstraintsType'
definitions.SchemaAttributeType.properties.NumberAttributeConstraints.description: Specifies
  the constraints for an attribute of the number type.
definitions.SchemaAttributeType.properties.Required.$ref: '#/definitions/BooleanType'
definitions.SchemaAttributeType.properties.Required.description: Specifies whether
  a user pool attribute is required. If the attribute is required and the user does
  not provide a value, registration or sign-in will fail.
definitions.SchemaAttributeType.properties.StringAttributeConstraints.$ref: '#/definitions/StringAttributeConstraintsType'
definitions.SchemaAttributeType.properties.StringAttributeConstraints.description: Specifies
  the constraints for an attribute of the string type.
definitions.SchemaAttributeType.type: object
definitions.SchemaAttributesListType.items.$ref: '#/definitions/SchemaAttributeType'
definitions.SchemaAttributesListType.maxItems: 50
definitions.SchemaAttributesListType.minItems: 1
definitions.SchemaAttributesListType.type: array
definitions.ScopeDoesNotExistException.description: This exception is thrown when
  the specified scope does not exist.
definitions.ScopeDoesNotExistException.properties.message.$ref: '#/definitions/MessageType'
definitions.ScopeDoesNotExistException.type: object
definitions.ScopeListType.items.$ref: '#/definitions/ScopeType'
definitions.ScopeListType.maxItems: 25
definitions.ScopeListType.type: array
definitions.ScopeType.maxLength: 256
definitions.ScopeType.minLength: 1
definitions.ScopeType.pattern: '[\x21\x23-\x5B\x5D-\x7E]+'
definitions.ScopeType.type: string
definitions.SearchPaginationTokenType.minLength: 1
definitions.SearchPaginationTokenType.pattern: '[\S]+'
definitions.SearchPaginationTokenType.type: string
definitions.SearchedAttributeNamesListType.items.$ref: '#/definitions/AttributeNameType'
definitions.SearchedAttributeNamesListType.type: array
definitions.SecretHashType.format: password
definitions.SecretHashType.maxLength: 128
definitions.SecretHashType.minLength: 1
definitions.SecretHashType.pattern: '[\w+=/]+'
definitions.SecretHashType.type: string
definitions.SessionType.maxLength: 2048
definitions.SessionType.minLength: 20
definitions.SessionType.type: string
definitions.SetUICustomizationRequest.properties.CSS.$ref: '#/definitions/CSSType'
definitions.SetUICustomizationRequest.properties.CSS.description: The CSS values in
  the UI customization.
definitions.SetUICustomizationRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.SetUICustomizationRequest.properties.ClientId.description: The client
  ID for the client app.
definitions.SetUICustomizationRequest.properties.ImageFile.$ref: '#/definitions/ImageFileType'
definitions.SetUICustomizationRequest.properties.ImageFile.description: The uploaded
  logo image for the UI customization.
definitions.SetUICustomizationRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.SetUICustomizationRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.SetUICustomizationRequest.required.length: 1
definitions.SetUICustomizationRequest.required[0]: UserPoolId
definitions.SetUICustomizationRequest.type: object
definitions.SetUICustomizationResponse.properties.UICustomization.$ref: '#/definitions/UICustomizationType'
definitions.SetUICustomizationResponse.properties.UICustomization.description: The
  UI customization information.
definitions.SetUICustomizationResponse.required.length: 1
definitions.SetUICustomizationResponse.required[0]: UICustomization
definitions.SetUICustomizationResponse.type: object
definitions.SetUserSettingsRequest.description: Represents the request to set user
  settings.
definitions.SetUserSettingsRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.SetUserSettingsRequest.properties.AccessToken.description: The access
  token for the set user settings request.
definitions.SetUserSettingsRequest.properties.MFAOptions.$ref: '#/definitions/MFAOptionListType'
definitions.SetUserSettingsRequest.properties.MFAOptions.description: Specifies the
  options for MFA (e.g., email or phone number).
definitions.SetUserSettingsRequest.required.length: 2
definitions.SetUserSettingsRequest.required[0]: AccessToken
definitions.SetUserSettingsRequest.required[1]: MFAOptions
definitions.SetUserSettingsRequest.type: object
definitions.SetUserSettingsResponse.description: The response from the server for
  a set user settings request.
definitions.SetUserSettingsResponse.type: object
definitions.SignUpRequest.description: Represents the request to register a user.
definitions.SignUpRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.SignUpRequest.properties.ClientId.description: The ID of the client associated
  with the user pool.
definitions.SignUpRequest.properties.Password.$ref: '#/definitions/PasswordType'
definitions.SignUpRequest.properties.Password.description: The password of the user
  you wish to register.
definitions.SignUpRequest.properties.SecretHash.$ref: '#/definitions/SecretHashType'
definitions.SignUpRequest.properties.SecretHash.description: A keyed-hash message
  authentication code (HMAC) calculated using the secret key of a user pool client
  and username plus the client ID in the message.
definitions.SignUpRequest.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.SignUpRequest.properties.UserAttributes.description: <p>An array of name-value
  pairs representing user attributes.</p> <p>For custom attributes, you must prepend
  the <code>custom:</code> prefix to the attribute name.</p>
definitions.SignUpRequest.properties.Username.$ref: '#/definitions/UsernameType'
definitions.SignUpRequest.properties.Username.description: The user name of the user
  you wish to register.
definitions.SignUpRequest.properties.ValidationData.$ref: '#/definitions/AttributeListType'
definitions.SignUpRequest.properties.ValidationData.description: The validation data
  in the request to register a user.
definitions.SignUpRequest.required.length: 3
definitions.SignUpRequest.required[0]: ClientId
definitions.SignUpRequest.required[1]: Username
definitions.SignUpRequest.required[2]: Password
definitions.SignUpRequest.type: object
definitions.SignUpResponse.description: The response from the server for a registration
  request.
definitions.SignUpResponse.properties.CodeDeliveryDetails.$ref: '#/definitions/CodeDeliveryDetailsType'
definitions.SignUpResponse.properties.CodeDeliveryDetails.description: The code delivery
  details returned by the server response to the user registration request.
definitions.SignUpResponse.properties.UserConfirmed.$ref: '#/definitions/BooleanType'
definitions.SignUpResponse.properties.UserConfirmed.description: A response from the
  server indicating that a user registration has been confirmed.
definitions.SignUpResponse.properties.UserSub.$ref: '#/definitions/StringType'
definitions.SignUpResponse.properties.UserSub.description: The UUID of the authenticated
  user. This is not the same as <code>username</code>.
definitions.SignUpResponse.required.length: 2
definitions.SignUpResponse.required[0]: UserConfirmed
definitions.SignUpResponse.required[1]: UserSub
definitions.SignUpResponse.type: object
definitions.SmsConfigurationType.description: The SMS configuration type.
definitions.SmsConfigurationType.properties.ExternalId.$ref: '#/definitions/StringType'
definitions.SmsConfigurationType.properties.ExternalId.description: The external ID.
definitions.SmsConfigurationType.properties.SnsCallerArn.$ref: '#/definitions/ArnType'
definitions.SmsConfigurationType.properties.SnsCallerArn.description: The Amazon Resource
  Name (ARN) of the Amazon Simple Notification Service (SNS) caller.
definitions.SmsConfigurationType.required.length: 1
definitions.SmsConfigurationType.required[0]: SnsCallerArn
definitions.SmsConfigurationType.type: object
definitions.SmsVerificationMessageType.maxLength: 140
definitions.SmsVerificationMessageType.minLength: 6
definitions.SmsVerificationMessageType.pattern: .*\{####\}.*
definitions.SmsVerificationMessageType.type: string
definitions.StartUserImportJobRequest.description: Represents the request to start
  the user import job.
definitions.StartUserImportJobRequest.properties.JobId.$ref: '#/definitions/UserImportJobIdType'
definitions.StartUserImportJobRequest.properties.JobId.description: The job ID for
  the user import job.
definitions.StartUserImportJobRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.StartUserImportJobRequest.properties.UserPoolId.description: The user
  pool ID for the user pool that the users are being imported into.
definitions.StartUserImportJobRequest.required.length: 2
definitions.StartUserImportJobRequest.required[0]: UserPoolId
definitions.StartUserImportJobRequest.required[1]: JobId
definitions.StartUserImportJobRequest.type: object
definitions.StartUserImportJobResponse.description: Represents the response from the
  server to the request to start the user import job.
definitions.StartUserImportJobResponse.properties.UserImportJob.$ref: '#/definitions/UserImportJobType'
definitions.StartUserImportJobResponse.properties.UserImportJob.description: The job
  object that represents the user import job.
definitions.StartUserImportJobResponse.type: object
definitions.StatusType.enum.length: 2
definitions.StatusType.enum[0]: Enabled
definitions.StatusType.enum[1]: Disabled
definitions.StatusType.type: string
definitions.StopUserImportJobRequest.description: Represents the request to stop the
  user import job.
definitions.StopUserImportJobRequest.properties.JobId.$ref: '#/definitions/UserImportJobIdType'
definitions.StopUserImportJobRequest.properties.JobId.description: The job ID for
  the user import job.
definitions.StopUserImportJobRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.StopUserImportJobRequest.properties.UserPoolId.description: The user pool
  ID for the user pool that the users are being imported into.
definitions.StopUserImportJobRequest.required.length: 2
definitions.StopUserImportJobRequest.required[0]: UserPoolId
definitions.StopUserImportJobRequest.required[1]: JobId
definitions.StopUserImportJobRequest.type: object
definitions.StopUserImportJobResponse.description: Represents the response from the
  server to the request to stop the user import job.
definitions.StopUserImportJobResponse.properties.UserImportJob.$ref: '#/definitions/UserImportJobType'
definitions.StopUserImportJobResponse.properties.UserImportJob.description: The job
  object that represents the user import job.
definitions.StopUserImportJobResponse.type: object
definitions.StringAttributeConstraintsType.description: The type of constraints associated
  with an attribute of the string type.
definitions.StringAttributeConstraintsType.properties.MaxLength.$ref: '#/definitions/StringType'
definitions.StringAttributeConstraintsType.properties.MaxLength.description: The maximum
  length of an attribute value of the string type.
definitions.StringAttributeConstraintsType.properties.MinLength.$ref: '#/definitions/StringType'
definitions.StringAttributeConstraintsType.properties.MinLength.description: The minimum
  length of an attribute value of the string type.
definitions.StringAttributeConstraintsType.type: object
definitions.StringType.type: string
definitions.SupportedIdentityProvidersListType.items.$ref: '#/definitions/ProviderNameType'
definitions.SupportedIdentityProvidersListType.type: array
definitions.TokenModelType.format: password
definitions.TokenModelType.pattern: '[A-Za-z0-9-_=.]+'
definitions.TokenModelType.type: string
definitions.TooManyFailedAttemptsException.description: This exception is thrown when
  the user has made too many failed attempts for a given action (e.g., sign in).
definitions.TooManyFailedAttemptsException.properties.message.$ref: '#/definitions/MessageType'
definitions.TooManyFailedAttemptsException.properties.message.description: The message
  returned when the Amazon Cognito service returns a too many failed attempts exception.
definitions.TooManyFailedAttemptsException.type: object
definitions.TooManyRequestsException.description: This exception is thrown when the
  user has made too many requests for a given operation.
definitions.TooManyRequestsException.properties.message.$ref: '#/definitions/MessageType'
definitions.TooManyRequestsException.properties.message.description: The message returned
  when the Amazon Cognito service returns a too many requests exception.
definitions.TooManyRequestsException.type: object
definitions.UICustomizationType.description: A container for the UI customization
  information for a user pool's built-in app UI.
definitions.UICustomizationType.properties.CSS.$ref: '#/definitions/CSSType'
definitions.UICustomizationType.properties.CSS.description: The CSS values in the
  UI customization.
definitions.UICustomizationType.properties.CSSVersion.$ref: '#/definitions/CSSVersionType'
definitions.UICustomizationType.properties.CSSVersion.description: The CSS version
  number.
definitions.UICustomizationType.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.UICustomizationType.properties.ClientId.description: The client ID for
  the client app.
definitions.UICustomizationType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.UICustomizationType.properties.CreationDate.description: The creation
  date for the UI customization.
definitions.UICustomizationType.properties.ImageUrl.$ref: '#/definitions/ImageUrlType'
definitions.UICustomizationType.properties.ImageUrl.description: The logo image for
  the UI customization.
definitions.UICustomizationType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.UICustomizationType.properties.LastModifiedDate.description: The last-modified
  date for the UI customization.
definitions.UICustomizationType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UICustomizationType.properties.UserPoolId.description: The user pool ID
  for the user pool.
definitions.UICustomizationType.type: object
definitions.UnexpectedLambdaException.description: This exception is thrown when the
  Amazon Cognito service encounters an unexpected exception with the AWS Lambda service.
definitions.UnexpectedLambdaException.properties.message.$ref: '#/definitions/MessageType'
definitions.UnexpectedLambdaException.properties.message.description: The message
  returned when the Amazon Cognito service returns an unexpected AWS Lambda exception.
definitions.UnexpectedLambdaException.type: object
definitions.UnsupportedIdentityProviderException.description: This exception is thrown
  when the specified identifier is not supported.
definitions.UnsupportedIdentityProviderException.properties.message.$ref: '#/definitions/MessageType'
definitions.UnsupportedIdentityProviderException.type: object
definitions.UnsupportedUserStateException.description: The request failed because
  the user is in an unsupported state.
definitions.UnsupportedUserStateException.properties.message.$ref: '#/definitions/MessageType'
definitions.UnsupportedUserStateException.properties.message.description: The message
  returned when the user is in an unsupported state.
definitions.UnsupportedUserStateException.type: object
definitions.UpdateDeviceStatusRequest.description: Represents the request to update
  the device status.
definitions.UpdateDeviceStatusRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.UpdateDeviceStatusRequest.properties.AccessToken.description: The access
  token.
definitions.UpdateDeviceStatusRequest.properties.DeviceKey.$ref: '#/definitions/DeviceKeyType'
definitions.UpdateDeviceStatusRequest.properties.DeviceKey.description: The device
  key.
definitions.UpdateDeviceStatusRequest.properties.DeviceRememberedStatus.$ref: '#/definitions/DeviceRememberedStatusType'
definitions.UpdateDeviceStatusRequest.properties.DeviceRememberedStatus.description: The
  status of whether a device is remembered.
definitions.UpdateDeviceStatusRequest.required.length: 2
definitions.UpdateDeviceStatusRequest.required[0]: AccessToken
definitions.UpdateDeviceStatusRequest.required[1]: DeviceKey
definitions.UpdateDeviceStatusRequest.type: object
definitions.UpdateDeviceStatusResponse.description: The response to the request to
  update the device status.
definitions.UpdateDeviceStatusResponse.type: object
definitions.UpdateGroupRequest.properties.Description.$ref: '#/definitions/DescriptionType'
definitions.UpdateGroupRequest.properties.Description.description: A string containing
  the new description of the group.
definitions.UpdateGroupRequest.properties.GroupName.$ref: '#/definitions/GroupNameType'
definitions.UpdateGroupRequest.properties.GroupName.description: The name of the group.
definitions.UpdateGroupRequest.properties.Precedence.$ref: '#/definitions/PrecedenceType'
definitions.UpdateGroupRequest.properties.Precedence.description: The new precedence
  value for the group. For more information about this parameter, see <a href="API_CreateGroup.html">CreateGroup</a>.
definitions.UpdateGroupRequest.properties.RoleArn.$ref: '#/definitions/ArnType'
definitions.UpdateGroupRequest.properties.RoleArn.description: The new role ARN for
  the group. This is used for setting the <code>cognito:roles</code> and <code>cognito:preferred_role</code>
  claims in the token.
definitions.UpdateGroupRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UpdateGroupRequest.properties.UserPoolId.description: The user pool ID
  for the user pool.
definitions.UpdateGroupRequest.required.length: 2
definitions.UpdateGroupRequest.required[0]: GroupName
definitions.UpdateGroupRequest.required[1]: UserPoolId
definitions.UpdateGroupRequest.type: object
definitions.UpdateGroupResponse.properties.Group.$ref: '#/definitions/GroupType'
definitions.UpdateGroupResponse.properties.Group.description: The group object for
  the group.
definitions.UpdateGroupResponse.type: object
definitions.UpdateIdentityProviderRequest.properties.AttributeMapping.$ref: '#/definitions/AttributeMappingType'
definitions.UpdateIdentityProviderRequest.properties.AttributeMapping.description: The
  identity provider attribute mapping to be changed.
definitions.UpdateIdentityProviderRequest.properties.IdpIdentifiers.$ref: '#/definitions/IdpIdentifiersListType'
definitions.UpdateIdentityProviderRequest.properties.IdpIdentifiers.description: A
  list of identity provider identifiers.
definitions.UpdateIdentityProviderRequest.properties.ProviderDetails.$ref: '#/definitions/ProviderDetailsType'
definitions.UpdateIdentityProviderRequest.properties.ProviderDetails.description: The
  identity provider details to be updated, such as <code>MetadataURL</code> and <code>MetadataFile</code>.
definitions.UpdateIdentityProviderRequest.properties.ProviderName.$ref: '#/definitions/ProviderNameType'
definitions.UpdateIdentityProviderRequest.properties.ProviderName.description: The
  identity provider name.
definitions.UpdateIdentityProviderRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UpdateIdentityProviderRequest.properties.UserPoolId.description: The user
  pool ID.
definitions.UpdateIdentityProviderRequest.required.length: 2
definitions.UpdateIdentityProviderRequest.required[0]: UserPoolId
definitions.UpdateIdentityProviderRequest.required[1]: ProviderName
definitions.UpdateIdentityProviderRequest.type: object
definitions.UpdateIdentityProviderResponse.properties.IdentityProvider.$ref: '#/definitions/IdentityProviderType'
definitions.UpdateIdentityProviderResponse.properties.IdentityProvider.description: The
  identity provider object.
definitions.UpdateIdentityProviderResponse.required.length: 1
definitions.UpdateIdentityProviderResponse.required[0]: IdentityProvider
definitions.UpdateIdentityProviderResponse.type: object
definitions.UpdateResourceServerRequest.properties.Identifier.$ref: '#/definitions/ResourceServerIdentifierType'
definitions.UpdateResourceServerRequest.properties.Identifier.description: The identifier
  for the resource server.
definitions.UpdateResourceServerRequest.properties.Name.$ref: '#/definitions/ResourceServerNameType'
definitions.UpdateResourceServerRequest.properties.Name.description: The name of the
  resource server.
definitions.UpdateResourceServerRequest.properties.Scopes.$ref: '#/definitions/ResourceServerScopeListType'
definitions.UpdateResourceServerRequest.properties.Scopes.description: The scope values
  to be set for the resource server.
definitions.UpdateResourceServerRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UpdateResourceServerRequest.properties.UserPoolId.description: The user
  pool ID for the user pool.
definitions.UpdateResourceServerRequest.required.length: 3
definitions.UpdateResourceServerRequest.required[0]: UserPoolId
definitions.UpdateResourceServerRequest.required[1]: Identifier
definitions.UpdateResourceServerRequest.required[2]: Name
definitions.UpdateResourceServerRequest.type: object
definitions.UpdateResourceServerResponse.properties.ResourceServer.$ref: '#/definitions/ResourceServerType'
definitions.UpdateResourceServerResponse.properties.ResourceServer.description: The
  resource server.
definitions.UpdateResourceServerResponse.required.length: 1
definitions.UpdateResourceServerResponse.required[0]: ResourceServer
definitions.UpdateResourceServerResponse.type: object
definitions.UpdateUserAttributesRequest.description: Represents the request to update
  user attributes.
definitions.UpdateUserAttributesRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.UpdateUserAttributesRequest.properties.AccessToken.description: The access
  token for the request to update user attributes.
definitions.UpdateUserAttributesRequest.properties.UserAttributes.$ref: '#/definitions/AttributeListType'
definitions.UpdateUserAttributesRequest.properties.UserAttributes.description: <p>An
  array of name-value pairs representing user attributes.</p> <p>For custom attributes,
  you must prepend the <code>custom:</code> prefix to the attribute name.</p>
definitions.UpdateUserAttributesRequest.required.length: 2
definitions.UpdateUserAttributesRequest.required[0]: UserAttributes
definitions.UpdateUserAttributesRequest.required[1]: AccessToken
definitions.UpdateUserAttributesRequest.type: object
definitions.UpdateUserAttributesResponse.description: Represents the response from
  the server for the request to update user attributes.
definitions.UpdateUserAttributesResponse.properties.CodeDeliveryDetailsList.$ref: '#/definitions/CodeDeliveryDetailsListType'
definitions.UpdateUserAttributesResponse.properties.CodeDeliveryDetailsList.description: The
  code delivery details list from the server for the request to update user attributes.
definitions.UpdateUserAttributesResponse.type: object
definitions.UpdateUserPoolClientRequest.description: Represents the request to update
  the user pool client.
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthFlows.$ref: '#/definitions/OAuthFlowsType'
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthFlows.description: <p>Set
  to <code>code</code> to initiate a code grant flow, which provides an authorization
  code as the response. This code can be exchanged for access tokens with the token
  endpoint.</p> <p>Set to <code>token</code> to specify that the client should get
  the access token (and, optionally, ID token, based on scopes) directly.</p>
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthFlowsUserPoolClient.$ref: '#/definitions/BooleanType'
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthFlowsUserPoolClient.description: Set
  to TRUE if the client is allowed to follow the OAuth protocol when interacting with
  Cognito user pools.
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthScopes.$ref: '#/definitions/ScopeListType'
definitions.UpdateUserPoolClientRequest.properties.AllowedOAuthScopes.description: A
  list of allowed <code>OAuth</code> scopes. Currently supported values are <code>"phone"</code>,
  <code>"email"</code>, <code>"openid"</code>, and <code>"Cognito"</code>.
definitions.UpdateUserPoolClientRequest.properties.CallbackURLs.$ref: '#/definitions/CallbackURLsListType'
definitions.UpdateUserPoolClientRequest.properties.CallbackURLs.description: A list
  of allowed callback URLs for the identity providers.
definitions.UpdateUserPoolClientRequest.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.UpdateUserPoolClientRequest.properties.ClientId.description: The ID of
  the client associated with the user pool.
definitions.UpdateUserPoolClientRequest.properties.ClientName.$ref: '#/definitions/ClientNameType'
definitions.UpdateUserPoolClientRequest.properties.ClientName.description: The client
  name from the update user pool client request.
definitions.UpdateUserPoolClientRequest.properties.DefaultRedirectURI.$ref: '#/definitions/RedirectUrlType'
definitions.UpdateUserPoolClientRequest.properties.DefaultRedirectURI.description: The
  default redirect URI. Must be in the <code>CallbackURLs</code> list.
definitions.UpdateUserPoolClientRequest.properties.ExplicitAuthFlows.$ref: '#/definitions/ExplicitAuthFlowsListType'
definitions.UpdateUserPoolClientRequest.properties.ExplicitAuthFlows.description: Explicit
  authentication flows.
definitions.UpdateUserPoolClientRequest.properties.LogoutURLs.$ref: '#/definitions/LogoutURLsListType'
definitions.UpdateUserPoolClientRequest.properties.LogoutURLs.description: A list
  of allowed logout URLs for the identity providers.
definitions.UpdateUserPoolClientRequest.properties.ReadAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.UpdateUserPoolClientRequest.properties.ReadAttributes.description: The
  read-only attributes of the user pool.
definitions.UpdateUserPoolClientRequest.properties.RefreshTokenValidity.$ref: '#/definitions/RefreshTokenValidityType'
definitions.UpdateUserPoolClientRequest.properties.RefreshTokenValidity.description: The
  time limit, in days, after which the refresh token is no longer valid and cannot
  be used.
definitions.UpdateUserPoolClientRequest.properties.SupportedIdentityProviders.$ref: '#/definitions/SupportedIdentityProvidersListType'
definitions.UpdateUserPoolClientRequest.properties.SupportedIdentityProviders.description: A
  list of provider names for the identity providers that are supported on this client.
definitions.UpdateUserPoolClientRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UpdateUserPoolClientRequest.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to update the user pool client.
definitions.UpdateUserPoolClientRequest.properties.WriteAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.UpdateUserPoolClientRequest.properties.WriteAttributes.description: The
  writeable attributes of the user pool.
definitions.UpdateUserPoolClientRequest.required.length: 2
definitions.UpdateUserPoolClientRequest.required[0]: UserPoolId
definitions.UpdateUserPoolClientRequest.required[1]: ClientId
definitions.UpdateUserPoolClientRequest.type: object
definitions.UpdateUserPoolClientResponse.description: Represents the response from
  the server to the request to update the user pool client.
definitions.UpdateUserPoolClientResponse.properties.UserPoolClient.$ref: '#/definitions/UserPoolClientType'
definitions.UpdateUserPoolClientResponse.properties.UserPoolClient.description: The
  user pool client value from the response from the server when an update user pool
  client request is made.
definitions.UpdateUserPoolClientResponse.type: object
definitions.UpdateUserPoolRequest.description: Represents the request to update the
  user pool.
definitions.UpdateUserPoolRequest.properties.AdminCreateUserConfig.$ref: '#/definitions/AdminCreateUserConfigType'
definitions.UpdateUserPoolRequest.properties.AdminCreateUserConfig.description: The
  configuration for <code>AdminCreateUser</code> requests.
definitions.UpdateUserPoolRequest.properties.AutoVerifiedAttributes.$ref: '#/definitions/VerifiedAttributesListType'
definitions.UpdateUserPoolRequest.properties.AutoVerifiedAttributes.description: The
  attributes that are automatically verified when the Amazon Cognito service makes
  a request to update user pools.
definitions.UpdateUserPoolRequest.properties.DeviceConfiguration.$ref: '#/definitions/DeviceConfigurationType'
definitions.UpdateUserPoolRequest.properties.DeviceConfiguration.description: Device
  configuration.
definitions.UpdateUserPoolRequest.properties.EmailConfiguration.$ref: '#/definitions/EmailConfigurationType'
definitions.UpdateUserPoolRequest.properties.EmailConfiguration.description: Email
  configuration.
definitions.UpdateUserPoolRequest.properties.EmailVerificationMessage.$ref: '#/definitions/EmailVerificationMessageType'
definitions.UpdateUserPoolRequest.properties.EmailVerificationMessage.description: The
  contents of the email verification message.
definitions.UpdateUserPoolRequest.properties.EmailVerificationSubject.$ref: '#/definitions/EmailVerificationSubjectType'
definitions.UpdateUserPoolRequest.properties.EmailVerificationSubject.description: The
  subject of the email verification message.
definitions.UpdateUserPoolRequest.properties.LambdaConfig.$ref: '#/definitions/LambdaConfigType'
definitions.UpdateUserPoolRequest.properties.LambdaConfig.description: The AWS Lambda
  configuration information from the request to update the user pool.
definitions.UpdateUserPoolRequest.properties.MfaConfiguration.$ref: '#/definitions/UserPoolMfaType'
definitions.UpdateUserPoolRequest.properties.MfaConfiguration.description: <p>Can
  be one of the following values:</p> <ul> <li> <p> <code>OFF</code> - MFA tokens
  are not required and cannot be specified during user registration.</p> </li> <li>
  <p> <code>ON</code> - MFA tokens are required for all user registrations. You can
  only specify required when you are initially creating a user pool.</p> </li> <li>
  <p> <code>OPTIONAL</code> - Users have the option when registering to create an
  MFA token.</p> </li> </ul>
definitions.UpdateUserPoolRequest.properties.Policies.$ref: '#/definitions/UserPoolPolicyType'
definitions.UpdateUserPoolRequest.properties.Policies.description: A container with
  the policies you wish to update in a user pool.
definitions.UpdateUserPoolRequest.properties.SmsAuthenticationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.UpdateUserPoolRequest.properties.SmsAuthenticationMessage.description: The
  contents of the SMS authentication message.
definitions.UpdateUserPoolRequest.properties.SmsConfiguration.$ref: '#/definitions/SmsConfigurationType'
definitions.UpdateUserPoolRequest.properties.SmsConfiguration.description: SMS configuration.
definitions.UpdateUserPoolRequest.properties.SmsVerificationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.UpdateUserPoolRequest.properties.SmsVerificationMessage.description: A
  container with information about the SMS verification message.
definitions.UpdateUserPoolRequest.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UpdateUserPoolRequest.properties.UserPoolId.description: The user pool
  ID for the user pool you want to update.
definitions.UpdateUserPoolRequest.properties.UserPoolTags.$ref: '#/definitions/UserPoolTagsType'
definitions.UpdateUserPoolRequest.properties.UserPoolTags.description: 'The cost allocation
  tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
  Cost Allocation Tags to Your User Pool</a> '
definitions.UpdateUserPoolRequest.properties.VerificationMessageTemplate.$ref: '#/definitions/VerificationMessageTemplateType'
definitions.UpdateUserPoolRequest.properties.VerificationMessageTemplate.description: The
  template for verification messages.
definitions.UpdateUserPoolRequest.required.length: 1
definitions.UpdateUserPoolRequest.required[0]: UserPoolId
definitions.UpdateUserPoolRequest.type: object
definitions.UpdateUserPoolResponse.description: Represents the response from the server
  when you make a request to update the user pool.
definitions.UpdateUserPoolResponse.type: object
definitions.UserFilterType.maxLength: 256
definitions.UserFilterType.type: string
definitions.UserImportInProgressException.description: This exception is thrown when
  you are trying to modify a user pool while a user import job is in progress for
  that pool.
definitions.UserImportInProgressException.properties.message.$ref: '#/definitions/MessageType'
definitions.UserImportInProgressException.properties.message.description: The message
  returned when the user pool has an import job running.
definitions.UserImportInProgressException.type: object
definitions.UserImportJobIdType.maxLength: 55
definitions.UserImportJobIdType.minLength: 1
definitions.UserImportJobIdType.pattern: import-[0-9a-zA-Z-]+
definitions.UserImportJobIdType.type: string
definitions.UserImportJobNameType.maxLength: 128
definitions.UserImportJobNameType.minLength: 1
definitions.UserImportJobNameType.pattern: '[\w\s+=,.@-]+'
definitions.UserImportJobNameType.type: string
definitions.UserImportJobStatusType.enum.length: 8
definitions.UserImportJobStatusType.enum[0]: Created
definitions.UserImportJobStatusType.enum[1]: Pending
definitions.UserImportJobStatusType.enum[2]: InProgress
definitions.UserImportJobStatusType.enum[3]: Stopping
definitions.UserImportJobStatusType.enum[4]: Expired
definitions.UserImportJobStatusType.enum[5]: Stopped
definitions.UserImportJobStatusType.enum[6]: Failed
definitions.UserImportJobStatusType.enum[7]: Succeeded
definitions.UserImportJobStatusType.type: string
definitions.UserImportJobType.description: The user import job type.
definitions.UserImportJobType.properties.CloudWatchLogsRoleArn.$ref: '#/definitions/ArnType'
definitions.UserImportJobType.properties.CloudWatchLogsRoleArn.description: The role
  ARN for the Amazon CloudWatch Logging role for the user import job. For more information,
  see "Creating the CloudWatch Logs IAM Role" in the Amazon Cognito Developer Guide.
definitions.UserImportJobType.properties.CompletionDate.$ref: '#/definitions/DateType'
definitions.UserImportJobType.properties.CompletionDate.description: The date when
  the user import job was completed.
definitions.UserImportJobType.properties.CompletionMessage.$ref: '#/definitions/CompletionMessageType'
definitions.UserImportJobType.properties.CompletionMessage.description: The message
  returned when the user import job is completed.
definitions.UserImportJobType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.UserImportJobType.properties.CreationDate.description: The date the user
  import job was created.
definitions.UserImportJobType.properties.FailedUsers.$ref: '#/definitions/LongType'
definitions.UserImportJobType.properties.FailedUsers.description: The number of users
  that could not be imported.
definitions.UserImportJobType.properties.ImportedUsers.$ref: '#/definitions/LongType'
definitions.UserImportJobType.properties.ImportedUsers.description: The number of
  users that were successfully imported.
definitions.UserImportJobType.properties.JobId.$ref: '#/definitions/UserImportJobIdType'
definitions.UserImportJobType.properties.JobId.description: The job ID for the user
  import job.
definitions.UserImportJobType.properties.JobName.$ref: '#/definitions/UserImportJobNameType'
definitions.UserImportJobType.properties.JobName.description: The job name for the
  user import job.
definitions.UserImportJobType.properties.PreSignedUrl.$ref: '#/definitions/PreSignedUrlType'
definitions.UserImportJobType.properties.PreSignedUrl.description: The pre-signed
  URL to be used to upload the <code>.csv</code> file.
definitions.UserImportJobType.properties.SkippedUsers.$ref: '#/definitions/LongType'
definitions.UserImportJobType.properties.SkippedUsers.description: The number of users
  that were skipped.
definitions.UserImportJobType.properties.StartDate.$ref: '#/definitions/DateType'
definitions.UserImportJobType.properties.StartDate.description: The date when the
  user import job was started.
definitions.UserImportJobType.properties.Status.$ref: '#/definitions/UserImportJobStatusType'
definitions.UserImportJobType.properties.Status.description: <p>The status of the
  user import job. One of the following:</p> <ul> <li> <p> <code>Created</code> -
  The job was created but not started.</p> </li> <li> <p> <code>Pending</code> - A
  transition state. You have started the job, but it has not begun importing users
  yet.</p> </li> <li> <p> <code>InProgress</code> - The job has started, and users
  are being imported.</p> </li> <li> <p> <code>Stopping</code> - You have stopped
  the job, but the job has not stopped importing users yet.</p> </li> <li> <p> <code>Stopped</code>
  - You have stopped the job, and the job has stopped importing users.</p> </li> <li>
  <p> <code>Succeeded</code> - The job has completed successfully.</p> </li> <li>
  <p> <code>Failed</code> - The job has stopped due to an error.</p> </li> <li> <p>
  <code>Expired</code> - You created a job, but did not start the job within 24-48
  hours. All data associated with the job was deleted, and the job cannot be started.</p>
  </li> </ul>
definitions.UserImportJobType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UserImportJobType.properties.UserPoolId.description: The user pool ID
  for the user pool that the users are being imported into.
definitions.UserImportJobType.type: object
definitions.UserImportJobsListType.items.$ref: '#/definitions/UserImportJobType'
definitions.UserImportJobsListType.maxItems: 50
definitions.UserImportJobsListType.minItems: 1
definitions.UserImportJobsListType.type: array
definitions.UserLambdaValidationException.description: This exception is thrown when
  the Amazon Cognito service encounters a user validation exception with the AWS Lambda
  service.
definitions.UserLambdaValidationException.properties.message.$ref: '#/definitions/MessageType'
definitions.UserLambdaValidationException.properties.message.description: The message
  returned when the Amazon Cognito service returns a user validation exception with
  the AWS Lambda service.
definitions.UserLambdaValidationException.type: object
definitions.UserNotConfirmedException.description: This exception is thrown when a
  user is not confirmed successfully.
definitions.UserNotConfirmedException.properties.message.$ref: '#/definitions/MessageType'
definitions.UserNotConfirmedException.properties.message.description: The message
  returned when a user is not confirmed successfully.
definitions.UserNotConfirmedException.type: object
definitions.UserNotFoundException.description: This exception is thrown when a user
  is not found.
definitions.UserNotFoundException.properties.message.$ref: '#/definitions/MessageType'
definitions.UserNotFoundException.properties.message.description: The message returned
  when a user is not found.
definitions.UserNotFoundException.type: object
definitions.UserPoolClientDescription.description: The description of the user pool
  client.
definitions.UserPoolClientDescription.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.UserPoolClientDescription.properties.ClientId.description: The ID of the
  client associated with the user pool.
definitions.UserPoolClientDescription.properties.ClientName.$ref: '#/definitions/ClientNameType'
definitions.UserPoolClientDescription.properties.ClientName.description: The client
  name from the user pool client description.
definitions.UserPoolClientDescription.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UserPoolClientDescription.properties.UserPoolId.description: The user
  pool ID for the user pool where you want to describe the user pool client.
definitions.UserPoolClientDescription.type: object
definitions.UserPoolClientListType.items.$ref: '#/definitions/UserPoolClientDescription'
definitions.UserPoolClientListType.type: array
definitions.UserPoolClientType.description: Contains information about a user pool
  client.
definitions.UserPoolClientType.properties.AllowedOAuthFlows.$ref: '#/definitions/OAuthFlowsType'
definitions.UserPoolClientType.properties.AllowedOAuthFlows.description: <p>Set to
  <code>code</code> to initiate a code grant flow, which provides an authorization
  code as the response. This code can be exchanged for access tokens with the token
  endpoint.</p> <p>Set to <code>token</code> to specify that the client should get
  the access token (and, optionally, ID token, based on scopes) directly.</p>
definitions.UserPoolClientType.properties.AllowedOAuthFlowsUserPoolClient.$ref: '#/definitions/BooleanType'
definitions.UserPoolClientType.properties.AllowedOAuthFlowsUserPoolClient.description: Set
  to TRUE if the client is allowed to follow the OAuth protocol when interacting with
  Cognito user pools.
definitions.UserPoolClientType.properties.AllowedOAuthScopes.$ref: '#/definitions/ScopeListType'
definitions.UserPoolClientType.properties.AllowedOAuthScopes.description: A list of
  allowed <code>OAuth</code> scopes. Currently supported values are <code>"phone"</code>,
  <code>"email"</code>, <code>"openid"</code>, and <code>"Cognito"</code>.
definitions.UserPoolClientType.properties.CallbackURLs.$ref: '#/definitions/CallbackURLsListType'
definitions.UserPoolClientType.properties.CallbackURLs.description: A list of allowed
  callback URLs for the identity providers.
definitions.UserPoolClientType.properties.ClientId.$ref: '#/definitions/ClientIdType'
definitions.UserPoolClientType.properties.ClientId.description: The ID of the client
  associated with the user pool.
definitions.UserPoolClientType.properties.ClientName.$ref: '#/definitions/ClientNameType'
definitions.UserPoolClientType.properties.ClientName.description: The client name
  from the user pool request of the client type.
definitions.UserPoolClientType.properties.ClientSecret.$ref: '#/definitions/ClientSecretType'
definitions.UserPoolClientType.properties.ClientSecret.description: The client secret
  from the user pool request of the client type.
definitions.UserPoolClientType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.UserPoolClientType.properties.CreationDate.description: The date the user
  pool client was created.
definitions.UserPoolClientType.properties.DefaultRedirectURI.$ref: '#/definitions/RedirectUrlType'
definitions.UserPoolClientType.properties.DefaultRedirectURI.description: The default
  redirect URI. Must be in the <code>CallbackURLs</code> list.
definitions.UserPoolClientType.properties.ExplicitAuthFlows.$ref: '#/definitions/ExplicitAuthFlowsListType'
definitions.UserPoolClientType.properties.ExplicitAuthFlows.description: The explicit
  authentication flows.
definitions.UserPoolClientType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.UserPoolClientType.properties.LastModifiedDate.description: The date the
  user pool client was last modified.
definitions.UserPoolClientType.properties.LogoutURLs.$ref: '#/definitions/LogoutURLsListType'
definitions.UserPoolClientType.properties.LogoutURLs.description: A list of allowed
  logout URLs for the identity providers.
definitions.UserPoolClientType.properties.ReadAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.UserPoolClientType.properties.ReadAttributes.description: The Read-only
  attributes.
definitions.UserPoolClientType.properties.RefreshTokenValidity.$ref: '#/definitions/RefreshTokenValidityType'
definitions.UserPoolClientType.properties.RefreshTokenValidity.description: The time
  limit, in days, after which the refresh token is no longer valid and cannot be used.
definitions.UserPoolClientType.properties.SupportedIdentityProviders.$ref: '#/definitions/SupportedIdentityProvidersListType'
definitions.UserPoolClientType.properties.SupportedIdentityProviders.description: A
  list of provider names for the identity providers that are supported on this client.
definitions.UserPoolClientType.properties.UserPoolId.$ref: '#/definitions/UserPoolIdType'
definitions.UserPoolClientType.properties.UserPoolId.description: The user pool ID
  for the user pool client.
definitions.UserPoolClientType.properties.WriteAttributes.$ref: '#/definitions/ClientPermissionListType'
definitions.UserPoolClientType.properties.WriteAttributes.description: The writeable
  attributes.
definitions.UserPoolClientType.type: object
definitions.UserPoolDescriptionType.description: A user pool description.
definitions.UserPoolDescriptionType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.UserPoolDescriptionType.properties.CreationDate.description: The date
  the user pool description was created.
definitions.UserPoolDescriptionType.properties.Id.$ref: '#/definitions/UserPoolIdType'
definitions.UserPoolDescriptionType.properties.Id.description: The ID in a user pool
  description.
definitions.UserPoolDescriptionType.properties.LambdaConfig.$ref: '#/definitions/LambdaConfigType'
definitions.UserPoolDescriptionType.properties.LambdaConfig.description: The AWS Lambda
  configuration information in a user pool description.
definitions.UserPoolDescriptionType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.UserPoolDescriptionType.properties.LastModifiedDate.description: The date
  the user pool description was last modified.
definitions.UserPoolDescriptionType.properties.Name.$ref: '#/definitions/UserPoolNameType'
definitions.UserPoolDescriptionType.properties.Name.description: The name in a user
  pool description.
definitions.UserPoolDescriptionType.properties.Status.$ref: '#/definitions/StatusType'
definitions.UserPoolDescriptionType.properties.Status.description: The user pool status
  in a user pool description.
definitions.UserPoolDescriptionType.type: object
definitions.UserPoolIdType.maxLength: 55
definitions.UserPoolIdType.minLength: 1
definitions.UserPoolIdType.pattern: '[\w-]+_[0-9a-zA-Z]+'
definitions.UserPoolIdType.type: string
definitions.UserPoolListType.items.$ref: '#/definitions/UserPoolDescriptionType'
definitions.UserPoolListType.type: array
definitions.UserPoolMfaType.enum.length: 3
definitions.UserPoolMfaType.enum[0]: "OFF"
definitions.UserPoolMfaType.enum[1]: "ON"
definitions.UserPoolMfaType.enum[2]: OPTIONAL
definitions.UserPoolMfaType.type: string
definitions.UserPoolNameType.maxLength: 128
definitions.UserPoolNameType.minLength: 1
definitions.UserPoolNameType.pattern: '[\w\s+=,.@-]+'
definitions.UserPoolNameType.type: string
definitions.UserPoolPolicyType.description: The type of policy in a user pool.
definitions.UserPoolPolicyType.properties.PasswordPolicy.$ref: '#/definitions/PasswordPolicyType'
definitions.UserPoolPolicyType.properties.PasswordPolicy.description: A container
  for information about the user pool password policy.
definitions.UserPoolPolicyType.type: object
definitions.UserPoolTaggingException.description: This exception is thrown when a
  user pool tag cannot be set or updated.
definitions.UserPoolTaggingException.properties.message.$ref: '#/definitions/MessageType'
definitions.UserPoolTaggingException.type: object
definitions.UserPoolTagsType.items.properties.key.$ref: '#/definitions/StringType'
definitions.UserPoolTagsType.items.properties.value.$ref: '#/definitions/StringType'
definitions.UserPoolTagsType.items.type: object
definitions.UserPoolTagsType.type: array
definitions.UserPoolType.description: A container for information about the user pool
  type.
definitions.UserPoolType.properties.AdminCreateUserConfig.$ref: '#/definitions/AdminCreateUserConfigType'
definitions.UserPoolType.properties.AdminCreateUserConfig.description: The configuration
  for <code>AdminCreateUser</code> requests.
definitions.UserPoolType.properties.AliasAttributes.$ref: '#/definitions/AliasAttributesListType'
definitions.UserPoolType.properties.AliasAttributes.description: Specifies the attributes
  that are aliased in a user pool.
definitions.UserPoolType.properties.AutoVerifiedAttributes.$ref: '#/definitions/VerifiedAttributesListType'
definitions.UserPoolType.properties.AutoVerifiedAttributes.description: Specifies
  the attributes that are auto-verified in a user pool.
definitions.UserPoolType.properties.CreationDate.$ref: '#/definitions/DateType'
definitions.UserPoolType.properties.CreationDate.description: The date the user pool
  was created.
definitions.UserPoolType.properties.DeviceConfiguration.$ref: '#/definitions/DeviceConfigurationType'
definitions.UserPoolType.properties.DeviceConfiguration.description: The device configuration.
definitions.UserPoolType.properties.EmailConfiguration.$ref: '#/definitions/EmailConfigurationType'
definitions.UserPoolType.properties.EmailConfiguration.description: The email configuration.
definitions.UserPoolType.properties.EmailConfigurationFailure.$ref: '#/definitions/StringType'
definitions.UserPoolType.properties.EmailConfigurationFailure.description: The reason
  why the email configuration cannot send the messages to your users.
definitions.UserPoolType.properties.EmailVerificationMessage.$ref: '#/definitions/EmailVerificationMessageType'
definitions.UserPoolType.properties.EmailVerificationMessage.description: The contents
  of the email verification message.
definitions.UserPoolType.properties.EmailVerificationSubject.$ref: '#/definitions/EmailVerificationSubjectType'
definitions.UserPoolType.properties.EmailVerificationSubject.description: The subject
  of the email verification message.
definitions.UserPoolType.properties.EstimatedNumberOfUsers.$ref: '#/definitions/IntegerType'
definitions.UserPoolType.properties.EstimatedNumberOfUsers.description: A number estimating
  the size of the user pool.
definitions.UserPoolType.properties.Id.$ref: '#/definitions/UserPoolIdType'
definitions.UserPoolType.properties.Id.description: The ID of the user pool.
definitions.UserPoolType.properties.LambdaConfig.$ref: '#/definitions/LambdaConfigType'
definitions.UserPoolType.properties.LambdaConfig.description: A container for the
  AWS Lambda triggers associated with a user pool.
definitions.UserPoolType.properties.LastModifiedDate.$ref: '#/definitions/DateType'
definitions.UserPoolType.properties.LastModifiedDate.description: The date the user
  pool was last modified.
definitions.UserPoolType.properties.MfaConfiguration.$ref: '#/definitions/UserPoolMfaType'
definitions.UserPoolType.properties.MfaConfiguration.description: <p>Can be one of
  the following values:</p> <ul> <li> <p> <code>OFF</code> - MFA tokens are not required
  and cannot be specified during user registration.</p> </li> <li> <p> <code>ON</code>
  - MFA tokens are required for all user registrations. You can only specify required
  when you are initially creating a user pool.</p> </li> <li> <p> <code>OPTIONAL</code>
  - Users have the option when registering to create an MFA token.</p> </li> </ul>
definitions.UserPoolType.properties.Name.$ref: '#/definitions/UserPoolNameType'
definitions.UserPoolType.properties.Name.description: The name of the user pool.
definitions.UserPoolType.properties.Policies.$ref: '#/definitions/UserPoolPolicyType'
definitions.UserPoolType.properties.Policies.description: A container for the policies
  associated with a user pool.
definitions.UserPoolType.properties.SchemaAttributes.$ref: '#/definitions/SchemaAttributesListType'
definitions.UserPoolType.properties.SchemaAttributes.description: A container with
  the schema attributes of a user pool.
definitions.UserPoolType.properties.SmsAuthenticationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.UserPoolType.properties.SmsAuthenticationMessage.description: The contents
  of the SMS authentication message.
definitions.UserPoolType.properties.SmsConfiguration.$ref: '#/definitions/SmsConfigurationType'
definitions.UserPoolType.properties.SmsConfiguration.description: The SMS configuration.
definitions.UserPoolType.properties.SmsConfigurationFailure.$ref: '#/definitions/StringType'
definitions.UserPoolType.properties.SmsConfigurationFailure.description: The reason
  why the SMS configuration cannot send the messages to your users.
definitions.UserPoolType.properties.SmsVerificationMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.UserPoolType.properties.SmsVerificationMessage.description: The contents
  of the SMS verification message.
definitions.UserPoolType.properties.Status.$ref: '#/definitions/StatusType'
definitions.UserPoolType.properties.Status.description: The status of a user pool.
definitions.UserPoolType.properties.UserPoolTags.$ref: '#/definitions/UserPoolTagsType'
definitions.UserPoolType.properties.UserPoolTags.description: 'The cost allocation
  tags for the user pool. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-cost-allocation-tagging.html">Adding
  Cost Allocation Tags to Your User Pool</a> '
definitions.UserPoolType.properties.UsernameAttributes.$ref: '#/definitions/UsernameAttributesListType'
definitions.UserPoolType.properties.UsernameAttributes.description: Specifies whether
  email addresses or phone numbers can be specified as usernames when a user signs
  up.
definitions.UserPoolType.properties.VerificationMessageTemplate.$ref: '#/definitions/VerificationMessageTemplateType'
definitions.UserPoolType.properties.VerificationMessageTemplate.description: The template
  for verification messages.
definitions.UserPoolType.type: object
definitions.UserStatusType.enum.length: 7
definitions.UserStatusType.enum[0]: UNCONFIRMED
definitions.UserStatusType.enum[1]: CONFIRMED
definitions.UserStatusType.enum[2]: ARCHIVED
definitions.UserStatusType.enum[3]: COMPROMISED
definitions.UserStatusType.enum[4]: UNKNOWN
definitions.UserStatusType.enum[5]: RESET_REQUIRED
definitions.UserStatusType.enum[6]: FORCE_CHANGE_PASSWORD
definitions.UserStatusType.type: string
definitions.UserType.description: The user type.
definitions.UserType.properties.Attributes.$ref: '#/definitions/AttributeListType'
definitions.UserType.properties.Attributes.description: A container with information
  about the user type attributes.
definitions.UserType.properties.Enabled.$ref: '#/definitions/BooleanType'
definitions.UserType.properties.Enabled.description: Specifies whether the user is
  enabled.
definitions.UserType.properties.MFAOptions.$ref: '#/definitions/MFAOptionListType'
definitions.UserType.properties.MFAOptions.description: The MFA options for the user.
definitions.UserType.properties.UserCreateDate.$ref: '#/definitions/DateType'
definitions.UserType.properties.UserCreateDate.description: The creation date of the
  user.
definitions.UserType.properties.UserLastModifiedDate.$ref: '#/definitions/DateType'
definitions.UserType.properties.UserLastModifiedDate.description: The last modified
  date of the user.
definitions.UserType.properties.UserStatus.$ref: '#/definitions/UserStatusType'
definitions.UserType.properties.UserStatus.description: <p>The user status. Can be
  one of the following:</p> <ul> <li> <p>UNCONFIRMED - User has been created but not
  confirmed.</p> </li> <li> <p>CONFIRMED - User has been confirmed.</p> </li> <li>
  <p>ARCHIVED - User is no longer active.</p> </li> <li> <p>COMPROMISED - User is
  disabled due to a potential security threat.</p> </li> <li> <p>UNKNOWN - User status
  is not known.</p> </li> </ul>
definitions.UserType.properties.Username.$ref: '#/definitions/UsernameType'
definitions.UserType.properties.Username.description: The user name of the user you
  wish to describe.
definitions.UserType.type: object
definitions.UsernameAttributeType.enum.length: 2
definitions.UsernameAttributeType.enum[0]: phone_number
definitions.UsernameAttributeType.enum[1]: email
definitions.UsernameAttributeType.type: string
definitions.UsernameAttributesListType.items.$ref: '#/definitions/UsernameAttributeType'
definitions.UsernameAttributesListType.type: array
definitions.UsernameExistsException.description: This exception is thrown when Amazon
  Cognito encounters a user name that already exists in the user pool.
definitions.UsernameExistsException.properties.message.$ref: '#/definitions/MessageType'
definitions.UsernameExistsException.properties.message.description: The message returned
  when Amazon Cognito throws a user name exists exception.
definitions.UsernameExistsException.type: object
definitions.UsernameType.format: password
definitions.UsernameType.maxLength: 128
definitions.UsernameType.minLength: 1
definitions.UsernameType.pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
definitions.UsernameType.type: string
definitions.UsersListType.items.$ref: '#/definitions/UserType'
definitions.UsersListType.type: array
definitions.VerificationMessageTemplateType.description: The template for verification
  messages.
definitions.VerificationMessageTemplateType.properties.DefaultEmailOption.$ref: '#/definitions/DefaultEmailOptionType'
definitions.VerificationMessageTemplateType.properties.DefaultEmailOption.description: The
  default email option.
definitions.VerificationMessageTemplateType.properties.EmailMessage.$ref: '#/definitions/EmailVerificationMessageType'
definitions.VerificationMessageTemplateType.properties.EmailMessage.description: The
  email message template.
definitions.VerificationMessageTemplateType.properties.EmailMessageByLink.$ref: '#/definitions/EmailVerificationMessageByLinkType'
definitions.VerificationMessageTemplateType.properties.EmailMessageByLink.description: The
  email message template for sending a confirmation link to the user.
definitions.VerificationMessageTemplateType.properties.EmailSubject.$ref: '#/definitions/EmailVerificationSubjectType'
definitions.VerificationMessageTemplateType.properties.EmailSubject.description: The
  subject line for the email message template.
definitions.VerificationMessageTemplateType.properties.EmailSubjectByLink.$ref: '#/definitions/EmailVerificationSubjectByLinkType'
definitions.VerificationMessageTemplateType.properties.EmailSubjectByLink.description: The
  subject line for the email message template for sending a confirmation link to the
  user.
definitions.VerificationMessageTemplateType.properties.SmsMessage.$ref: '#/definitions/SmsVerificationMessageType'
definitions.VerificationMessageTemplateType.properties.SmsMessage.description: The
  SMS message template.
definitions.VerificationMessageTemplateType.type: object
definitions.VerifiedAttributeType.enum.length: 2
definitions.VerifiedAttributeType.enum[0]: phone_number
definitions.VerifiedAttributeType.enum[1]: email
definitions.VerifiedAttributeType.type: string
definitions.VerifiedAttributesListType.items.$ref: '#/definitions/VerifiedAttributeType'
definitions.VerifiedAttributesListType.type: array
definitions.VerifyUserAttributeRequest.description: Represents the request to verify
  user attributes.
definitions.VerifyUserAttributeRequest.properties.AccessToken.$ref: '#/definitions/TokenModelType'
definitions.VerifyUserAttributeRequest.properties.AccessToken.description: Represents
  the access token of the request to verify user attributes.
definitions.VerifyUserAttributeRequest.properties.AttributeName.$ref: '#/definitions/AttributeNameType'
definitions.VerifyUserAttributeRequest.properties.AttributeName.description: The attribute
  name in the request to verify user attributes.
definitions.VerifyUserAttributeRequest.properties.Code.$ref: '#/definitions/ConfirmationCodeType'
definitions.VerifyUserAttributeRequest.properties.Code.description: The verification
  code in the request to verify user attributes.
definitions.VerifyUserAttributeRequest.required.length: 3
definitions.VerifyUserAttributeRequest.required[0]: AccessToken
definitions.VerifyUserAttributeRequest.required[1]: AttributeName
definitions.VerifyUserAttributeRequest.required[2]: Code
definitions.VerifyUserAttributeRequest.type: object
definitions.VerifyUserAttributeResponse.description: A container representing the
  response from the server from the request to verify user attributes.
definitions.VerifyUserAttributeResponse.type: object
externalDocs.description: Amazon Web Services documentation
externalDocs.url: https://aws.amazon.com/cognito-idp/
host: cognito-idp.amazonaws.com
info.contact.email: mike.ralphson@gmail.com
info.contact.name: Mike Ralphson
info.contact.url: https://github.com/mermade/aws2openapi
info.description: <p>Using the Amazon Cognito User Pools API, you can create a user
  pool to manage directories and users. You can authenticate a user to obtain tokens
  related to user identity and access policies.</p> <p>This API reference provides
  information about user pools in Amazon Cognito User Pools.</p> <p>For more information,
  see the Amazon Cognito Documentation.</p>
info.license.name: Apache 2.0 License
info.license.url: http://www.apache.org/licenses/
info.termsOfService: https://aws.amazon.com/service-terms/
info.title: Amazon Cognito Identity Provider
info.version: 2016-04-18
info.x-apiClientRegistration.url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: cloud
info.x-logo.backgroundColor: '#FFFFFF'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg
info.x-origin.length: 1
info.x-origin[0].contentType: application/json
info.x-origin[0].converter.url: https://github.com/mermade/aws2openapi
info.x-origin[0].converter.version: 1.0.0
info.x-origin[0].url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cognito-idp-2016-04-18.normal.json
info.x-origin[0].x-apisguru-direct: true
info.x-preferred: true
info.x-providerName: amazonaws.com
info.x-release: v4
info.x-serviceName: cognito-idp
parameters.Action.in: header
parameters.Action.name: Action
parameters.Action.required: true
parameters.Action.type: string
parameters.Version.in: header
parameters.Version.name: Version
parameters.Version.required: true
parameters.Version.type: string
parameters.X-Amz-Algorithm.in: header
parameters.X-Amz-Algorithm.name: X-Amz-Algorithm
parameters.X-Amz-Algorithm.required: false
parameters.X-Amz-Algorithm.type: string
parameters.X-Amz-Content-Sha256.in: header
parameters.X-Amz-Content-Sha256.name: X-Amz-Content-Sha256
parameters.X-Amz-Content-Sha256.required: false
parameters.X-Amz-Content-Sha256.type: string
parameters.X-Amz-Credential.in: header
parameters.X-Amz-Credential.name: X-Amz-Credential
parameters.X-Amz-Credential.required: false
parameters.X-Amz-Credential.type: string
parameters.X-Amz-Date.in: header
parameters.X-Amz-Date.name: X-Amz-Date
parameters.X-Amz-Date.required: false
parameters.X-Amz-Date.type: string
parameters.X-Amz-Security-Token.in: header
parameters.X-Amz-Security-Token.name: X-Amz-Security-Token
parameters.X-Amz-Security-Token.required: false
parameters.X-Amz-Security-Token.type: string
parameters.X-Amz-Signature.in: header
parameters.X-Amz-Signature.name: X-Amz-Signature
parameters.X-Amz-Signature.required: false
parameters.X-Amz-Signature.type: string
parameters.X-Amz-SignedHeaders.in: header
parameters.X-Amz-SignedHeaders.name: X-Amz-SignedHeaders
parameters.X-Amz-SignedHeaders.required: false
parameters.X-Amz-SignedHeaders.type: string
paths./#AdminAddUserToGroup.parameters.length: 9
paths./#AdminAddUserToGroup.parameters[0].$ref: '#/parameters/Action'
paths./#AdminAddUserToGroup.parameters[1].$ref: '#/parameters/Version'
paths./#AdminAddUserToGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminAddUserToGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminAddUserToGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminAddUserToGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminAddUserToGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminAddUserToGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminAddUserToGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminAddUserToGroup.post.description: <p>Adds the specified user to the specified
  group.</p> <p>Requires developer credentials.</p>
paths./#AdminAddUserToGroup.post.operationId: AdminAddUserToGroup
paths./#AdminAddUserToGroup.post.parameters.length: 1
paths./#AdminAddUserToGroup.post.parameters[0].in: body
paths./#AdminAddUserToGroup.post.parameters[0].name: body
paths./#AdminAddUserToGroup.post.parameters[0].required: true
paths./#AdminAddUserToGroup.post.parameters[0].schema.$ref: '#/definitions/AdminAddUserToGroupRequest'
paths./#AdminAddUserToGroup.post.responses.200.description: Success
paths./#AdminAddUserToGroup.post.responses.480.description: InvalidParameterException
paths./#AdminAddUserToGroup.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminAddUserToGroup.post.responses.481.description: ResourceNotFoundException
paths./#AdminAddUserToGroup.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminAddUserToGroup.post.responses.482.description: TooManyRequestsException
paths./#AdminAddUserToGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminAddUserToGroup.post.responses.483.description: NotAuthorizedException
paths./#AdminAddUserToGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminAddUserToGroup.post.responses.484.description: UserNotFoundException
paths./#AdminAddUserToGroup.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminAddUserToGroup.post.responses.485.description: InternalErrorException
paths./#AdminAddUserToGroup.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminConfirmSignUp.parameters.length: 9
paths./#AdminConfirmSignUp.parameters[0].$ref: '#/parameters/Action'
paths./#AdminConfirmSignUp.parameters[1].$ref: '#/parameters/Version'
paths./#AdminConfirmSignUp.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminConfirmSignUp.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminConfirmSignUp.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminConfirmSignUp.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminConfirmSignUp.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminConfirmSignUp.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminConfirmSignUp.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminConfirmSignUp.post.description: <p>Confirms user registration as an admin
  without using a confirmation code. Works on any user.</p> <p>Requires developer
  credentials.</p>
paths./#AdminConfirmSignUp.post.operationId: AdminConfirmSignUp
paths./#AdminConfirmSignUp.post.parameters.length: 1
paths./#AdminConfirmSignUp.post.parameters[0].in: body
paths./#AdminConfirmSignUp.post.parameters[0].name: body
paths./#AdminConfirmSignUp.post.parameters[0].required: true
paths./#AdminConfirmSignUp.post.parameters[0].schema.$ref: '#/definitions/AdminConfirmSignUpRequest'
paths./#AdminConfirmSignUp.post.responses.200.description: Success
paths./#AdminConfirmSignUp.post.responses.200.schema.$ref: '#/definitions/AdminConfirmSignUpResponse'
paths./#AdminConfirmSignUp.post.responses.480.description: ResourceNotFoundException
paths./#AdminConfirmSignUp.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminConfirmSignUp.post.responses.481.description: InvalidParameterException
paths./#AdminConfirmSignUp.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminConfirmSignUp.post.responses.482.description: UnexpectedLambdaException
paths./#AdminConfirmSignUp.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminConfirmSignUp.post.responses.483.description: UserLambdaValidationException
paths./#AdminConfirmSignUp.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminConfirmSignUp.post.responses.484.description: NotAuthorizedException
paths./#AdminConfirmSignUp.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminConfirmSignUp.post.responses.485.description: TooManyFailedAttemptsException
paths./#AdminConfirmSignUp.post.responses.485.schema.$ref: '#/definitions/TooManyFailedAttemptsException'
paths./#AdminConfirmSignUp.post.responses.486.description: InvalidLambdaResponseException
paths./#AdminConfirmSignUp.post.responses.486.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminConfirmSignUp.post.responses.487.description: TooManyRequestsException
paths./#AdminConfirmSignUp.post.responses.487.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminConfirmSignUp.post.responses.488.description: LimitExceededException
paths./#AdminConfirmSignUp.post.responses.488.schema.$ref: '#/definitions/LimitExceededException'
paths./#AdminConfirmSignUp.post.responses.489.description: UserNotFoundException
paths./#AdminConfirmSignUp.post.responses.489.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminConfirmSignUp.post.responses.490.description: InternalErrorException
paths./#AdminConfirmSignUp.post.responses.490.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminCreateUser.parameters.length: 9
paths./#AdminCreateUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminCreateUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminCreateUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminCreateUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminCreateUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminCreateUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminCreateUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminCreateUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminCreateUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminCreateUser.post.description: <p>Creates a new user in the specified user
  pool and sends a welcome message via email or phone (SMS). This message is based
  on a template that you configured in your call to <a href="API_CreateUserPool.html">CreateUserPool</a>
  or <a href="API_UpdateUserPool.html">UpdateUserPool</a>. This template includes
  your custom sign-up instructions and placeholders for user name and temporary password.</p>
  <p>Requires developer credentials.</p>
paths./#AdminCreateUser.post.operationId: AdminCreateUser
paths./#AdminCreateUser.post.parameters.length: 1
paths./#AdminCreateUser.post.parameters[0].in: body
paths./#AdminCreateUser.post.parameters[0].name: body
paths./#AdminCreateUser.post.parameters[0].required: true
paths./#AdminCreateUser.post.parameters[0].schema.$ref: '#/definitions/AdminCreateUserRequest'
paths./#AdminCreateUser.post.responses.200.description: Success
paths./#AdminCreateUser.post.responses.200.schema.$ref: '#/definitions/AdminCreateUserResponse'
paths./#AdminCreateUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminCreateUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminCreateUser.post.responses.481.description: InvalidParameterException
paths./#AdminCreateUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminCreateUser.post.responses.482.description: UserNotFoundException
paths./#AdminCreateUser.post.responses.482.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminCreateUser.post.responses.483.description: UsernameExistsException
paths./#AdminCreateUser.post.responses.483.schema.$ref: '#/definitions/UsernameExistsException'
paths./#AdminCreateUser.post.responses.484.description: InvalidPasswordException
paths./#AdminCreateUser.post.responses.484.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#AdminCreateUser.post.responses.485.description: CodeDeliveryFailureException
paths./#AdminCreateUser.post.responses.485.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#AdminCreateUser.post.responses.486.description: UnexpectedLambdaException
paths./#AdminCreateUser.post.responses.486.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminCreateUser.post.responses.487.description: UserLambdaValidationException
paths./#AdminCreateUser.post.responses.487.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminCreateUser.post.responses.488.description: InvalidLambdaResponseException
paths./#AdminCreateUser.post.responses.488.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminCreateUser.post.responses.489.description: PreconditionNotMetException
paths./#AdminCreateUser.post.responses.489.schema.$ref: '#/definitions/PreconditionNotMetException'
paths./#AdminCreateUser.post.responses.490.description: InvalidSmsRoleAccessPolicyException
paths./#AdminCreateUser.post.responses.490.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#AdminCreateUser.post.responses.491.description: InvalidSmsRoleTrustRelationshipException
paths./#AdminCreateUser.post.responses.491.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#AdminCreateUser.post.responses.492.description: TooManyRequestsException
paths./#AdminCreateUser.post.responses.492.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminCreateUser.post.responses.493.description: NotAuthorizedException
paths./#AdminCreateUser.post.responses.493.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminCreateUser.post.responses.494.description: UnsupportedUserStateException
paths./#AdminCreateUser.post.responses.494.schema.$ref: '#/definitions/UnsupportedUserStateException'
paths./#AdminCreateUser.post.responses.495.description: InternalErrorException
paths./#AdminCreateUser.post.responses.495.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminDeleteUser.parameters.length: 9
paths./#AdminDeleteUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminDeleteUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminDeleteUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminDeleteUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminDeleteUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminDeleteUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminDeleteUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminDeleteUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminDeleteUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminDeleteUser.post.description: <p>Deletes a user as an administrator. Works
  on any user.</p> <p>Requires developer credentials.</p>
paths./#AdminDeleteUser.post.operationId: AdminDeleteUser
paths./#AdminDeleteUser.post.parameters.length: 1
paths./#AdminDeleteUser.post.parameters[0].in: body
paths./#AdminDeleteUser.post.parameters[0].name: body
paths./#AdminDeleteUser.post.parameters[0].required: true
paths./#AdminDeleteUser.post.parameters[0].schema.$ref: '#/definitions/AdminDeleteUserRequest'
paths./#AdminDeleteUser.post.responses.200.description: Success
paths./#AdminDeleteUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminDeleteUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminDeleteUser.post.responses.481.description: InvalidParameterException
paths./#AdminDeleteUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminDeleteUser.post.responses.482.description: TooManyRequestsException
paths./#AdminDeleteUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminDeleteUser.post.responses.483.description: NotAuthorizedException
paths./#AdminDeleteUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminDeleteUser.post.responses.484.description: UserNotFoundException
paths./#AdminDeleteUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminDeleteUser.post.responses.485.description: InternalErrorException
paths./#AdminDeleteUser.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminDeleteUserAttributes.parameters.length: 9
paths./#AdminDeleteUserAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#AdminDeleteUserAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#AdminDeleteUserAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminDeleteUserAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminDeleteUserAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminDeleteUserAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminDeleteUserAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminDeleteUserAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminDeleteUserAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminDeleteUserAttributes.post.description: <p>Deletes the user attributes
  in a user pool as an administrator. Works on any user.</p> <p>Requires developer
  credentials.</p>
paths./#AdminDeleteUserAttributes.post.operationId: AdminDeleteUserAttributes
paths./#AdminDeleteUserAttributes.post.parameters.length: 1
paths./#AdminDeleteUserAttributes.post.parameters[0].in: body
paths./#AdminDeleteUserAttributes.post.parameters[0].name: body
paths./#AdminDeleteUserAttributes.post.parameters[0].required: true
paths./#AdminDeleteUserAttributes.post.parameters[0].schema.$ref: '#/definitions/AdminDeleteUserAttributesRequest'
paths./#AdminDeleteUserAttributes.post.responses.200.description: Success
paths./#AdminDeleteUserAttributes.post.responses.200.schema.$ref: '#/definitions/AdminDeleteUserAttributesResponse'
paths./#AdminDeleteUserAttributes.post.responses.480.description: ResourceNotFoundException
paths./#AdminDeleteUserAttributes.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminDeleteUserAttributes.post.responses.481.description: InvalidParameterException
paths./#AdminDeleteUserAttributes.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminDeleteUserAttributes.post.responses.482.description: TooManyRequestsException
paths./#AdminDeleteUserAttributes.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminDeleteUserAttributes.post.responses.483.description: NotAuthorizedException
paths./#AdminDeleteUserAttributes.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminDeleteUserAttributes.post.responses.484.description: UserNotFoundException
paths./#AdminDeleteUserAttributes.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminDeleteUserAttributes.post.responses.485.description: InternalErrorException
paths./#AdminDeleteUserAttributes.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminDisableProviderForUser.parameters.length: 9
paths./#AdminDisableProviderForUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminDisableProviderForUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminDisableProviderForUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminDisableProviderForUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminDisableProviderForUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminDisableProviderForUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminDisableProviderForUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminDisableProviderForUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminDisableProviderForUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminDisableProviderForUser.post.description: <p>Disables the user from signing
  in with the specified external (SAML or social) identity provider. If the user to
  disable is a Cognito User Pools native username + password user, they are not permitted
  to use their password to sign-in. If the user to disable is a linked external IdP
  user, any link between that user and an existing user is removed. The next time
  the external user (no longer attached to the previously linked <code>DestinationUser</code>)
  signs in, they must create a new user account. See <a href="API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a>.</p>
  <p>This action is enabled only for admin access and requires developer credentials.</p>
  <p>The <code>ProviderName</code> must match the value specified when creating an
  IdP for the pool. </p> <p>To disable a native username + password user, the <code>ProviderName</code>
  value must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must
  be <code>Cognito_Subject</code>, with the <code>ProviderAttributeValue</code> being
  the name that is used in the user pool for the user.</p> <p>The <code>ProviderAttributeName</code>
  must always be <code>Cognito_Subject</code> for social identity providers. The <code>ProviderAttributeValue</code>
  must always be the exact subject that was used when the user was originally linked
  as a source user.</p> <p>For de-linking a SAML identity, there are two scenarios.
  If the linked identity has not yet been used to sign-in, the <code>ProviderAttributeName</code>
  and <code>ProviderAttributeValue</code> must be the same values that were used for
  the <code>SourceUser</code> when the identities were originally linked in the <a
  href="API_AdminLinkProviderForUser.html">AdminLinkProviderForUser</a> call. (If
  the linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>,
  the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code>
  must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must
  be the subject of the SAML assertion.</p>
paths./#AdminDisableProviderForUser.post.operationId: AdminDisableProviderForUser
paths./#AdminDisableProviderForUser.post.parameters.length: 1
paths./#AdminDisableProviderForUser.post.parameters[0].in: body
paths./#AdminDisableProviderForUser.post.parameters[0].name: body
paths./#AdminDisableProviderForUser.post.parameters[0].required: true
paths./#AdminDisableProviderForUser.post.parameters[0].schema.$ref: '#/definitions/AdminDisableProviderForUserRequest'
paths./#AdminDisableProviderForUser.post.responses.200.description: Success
paths./#AdminDisableProviderForUser.post.responses.200.schema.$ref: '#/definitions/AdminDisableProviderForUserResponse'
paths./#AdminDisableProviderForUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminDisableProviderForUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminDisableProviderForUser.post.responses.481.description: InvalidParameterException
paths./#AdminDisableProviderForUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminDisableProviderForUser.post.responses.482.description: TooManyRequestsException
paths./#AdminDisableProviderForUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminDisableProviderForUser.post.responses.483.description: NotAuthorizedException
paths./#AdminDisableProviderForUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminDisableProviderForUser.post.responses.484.description: UserNotFoundException
paths./#AdminDisableProviderForUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminDisableProviderForUser.post.responses.485.description: AliasExistsException
paths./#AdminDisableProviderForUser.post.responses.485.schema.$ref: '#/definitions/AliasExistsException'
paths./#AdminDisableProviderForUser.post.responses.486.description: InternalErrorException
paths./#AdminDisableProviderForUser.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminDisableUser.parameters.length: 9
paths./#AdminDisableUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminDisableUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminDisableUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminDisableUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminDisableUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminDisableUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminDisableUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminDisableUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminDisableUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminDisableUser.post.description: <p>Disables the specified user as an administrator.
  Works on any user.</p> <p>Requires developer credentials.</p>
paths./#AdminDisableUser.post.operationId: AdminDisableUser
paths./#AdminDisableUser.post.parameters.length: 1
paths./#AdminDisableUser.post.parameters[0].in: body
paths./#AdminDisableUser.post.parameters[0].name: body
paths./#AdminDisableUser.post.parameters[0].required: true
paths./#AdminDisableUser.post.parameters[0].schema.$ref: '#/definitions/AdminDisableUserRequest'
paths./#AdminDisableUser.post.responses.200.description: Success
paths./#AdminDisableUser.post.responses.200.schema.$ref: '#/definitions/AdminDisableUserResponse'
paths./#AdminDisableUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminDisableUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminDisableUser.post.responses.481.description: InvalidParameterException
paths./#AdminDisableUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminDisableUser.post.responses.482.description: TooManyRequestsException
paths./#AdminDisableUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminDisableUser.post.responses.483.description: NotAuthorizedException
paths./#AdminDisableUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminDisableUser.post.responses.484.description: UserNotFoundException
paths./#AdminDisableUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminDisableUser.post.responses.485.description: InternalErrorException
paths./#AdminDisableUser.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminEnableUser.parameters.length: 9
paths./#AdminEnableUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminEnableUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminEnableUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminEnableUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminEnableUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminEnableUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminEnableUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminEnableUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminEnableUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminEnableUser.post.description: <p>Enables the specified user as an administrator.
  Works on any user.</p> <p>Requires developer credentials.</p>
paths./#AdminEnableUser.post.operationId: AdminEnableUser
paths./#AdminEnableUser.post.parameters.length: 1
paths./#AdminEnableUser.post.parameters[0].in: body
paths./#AdminEnableUser.post.parameters[0].name: body
paths./#AdminEnableUser.post.parameters[0].required: true
paths./#AdminEnableUser.post.parameters[0].schema.$ref: '#/definitions/AdminEnableUserRequest'
paths./#AdminEnableUser.post.responses.200.description: Success
paths./#AdminEnableUser.post.responses.200.schema.$ref: '#/definitions/AdminEnableUserResponse'
paths./#AdminEnableUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminEnableUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminEnableUser.post.responses.481.description: InvalidParameterException
paths./#AdminEnableUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminEnableUser.post.responses.482.description: TooManyRequestsException
paths./#AdminEnableUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminEnableUser.post.responses.483.description: NotAuthorizedException
paths./#AdminEnableUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminEnableUser.post.responses.484.description: UserNotFoundException
paths./#AdminEnableUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminEnableUser.post.responses.485.description: InternalErrorException
paths./#AdminEnableUser.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminForgetDevice.parameters.length: 9
paths./#AdminForgetDevice.parameters[0].$ref: '#/parameters/Action'
paths./#AdminForgetDevice.parameters[1].$ref: '#/parameters/Version'
paths./#AdminForgetDevice.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminForgetDevice.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminForgetDevice.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminForgetDevice.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminForgetDevice.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminForgetDevice.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminForgetDevice.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminForgetDevice.post.description: <p>Forgets the device, as an administrator.</p>
  <p>Requires developer credentials.</p>
paths./#AdminForgetDevice.post.operationId: AdminForgetDevice
paths./#AdminForgetDevice.post.parameters.length: 1
paths./#AdminForgetDevice.post.parameters[0].in: body
paths./#AdminForgetDevice.post.parameters[0].name: body
paths./#AdminForgetDevice.post.parameters[0].required: true
paths./#AdminForgetDevice.post.parameters[0].schema.$ref: '#/definitions/AdminForgetDeviceRequest'
paths./#AdminForgetDevice.post.responses.200.description: Success
paths./#AdminForgetDevice.post.responses.480.description: ResourceNotFoundException
paths./#AdminForgetDevice.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminForgetDevice.post.responses.481.description: InvalidParameterException
paths./#AdminForgetDevice.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminForgetDevice.post.responses.482.description: InvalidUserPoolConfigurationException
paths./#AdminForgetDevice.post.responses.482.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminForgetDevice.post.responses.483.description: TooManyRequestsException
paths./#AdminForgetDevice.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminForgetDevice.post.responses.484.description: NotAuthorizedException
paths./#AdminForgetDevice.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminForgetDevice.post.responses.485.description: UserNotFoundException
paths./#AdminForgetDevice.post.responses.485.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminForgetDevice.post.responses.486.description: InternalErrorException
paths./#AdminForgetDevice.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminGetDevice.parameters.length: 9
paths./#AdminGetDevice.parameters[0].$ref: '#/parameters/Action'
paths./#AdminGetDevice.parameters[1].$ref: '#/parameters/Version'
paths./#AdminGetDevice.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminGetDevice.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminGetDevice.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminGetDevice.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminGetDevice.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminGetDevice.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminGetDevice.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminGetDevice.post.description: <p>Gets the device, as an administrator.</p>
  <p>Requires developer credentials.</p>
paths./#AdminGetDevice.post.operationId: AdminGetDevice
paths./#AdminGetDevice.post.parameters.length: 1
paths./#AdminGetDevice.post.parameters[0].in: body
paths./#AdminGetDevice.post.parameters[0].name: body
paths./#AdminGetDevice.post.parameters[0].required: true
paths./#AdminGetDevice.post.parameters[0].schema.$ref: '#/definitions/AdminGetDeviceRequest'
paths./#AdminGetDevice.post.responses.200.description: Success
paths./#AdminGetDevice.post.responses.200.schema.$ref: '#/definitions/AdminGetDeviceResponse'
paths./#AdminGetDevice.post.responses.480.description: ResourceNotFoundException
paths./#AdminGetDevice.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminGetDevice.post.responses.481.description: InvalidParameterException
paths./#AdminGetDevice.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminGetDevice.post.responses.482.description: InvalidUserPoolConfigurationException
paths./#AdminGetDevice.post.responses.482.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminGetDevice.post.responses.483.description: TooManyRequestsException
paths./#AdminGetDevice.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminGetDevice.post.responses.484.description: InternalErrorException
paths./#AdminGetDevice.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminGetDevice.post.responses.485.description: NotAuthorizedException
paths./#AdminGetDevice.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminGetUser.parameters.length: 9
paths./#AdminGetUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminGetUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminGetUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminGetUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminGetUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminGetUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminGetUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminGetUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminGetUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminGetUser.post.description: <p>Gets the specified user by user name in
  a user pool as an administrator. Works on any user.</p> <p>Requires developer credentials.</p>
paths./#AdminGetUser.post.operationId: AdminGetUser
paths./#AdminGetUser.post.parameters.length: 1
paths./#AdminGetUser.post.parameters[0].in: body
paths./#AdminGetUser.post.parameters[0].name: body
paths./#AdminGetUser.post.parameters[0].required: true
paths./#AdminGetUser.post.parameters[0].schema.$ref: '#/definitions/AdminGetUserRequest'
paths./#AdminGetUser.post.responses.200.description: Success
paths./#AdminGetUser.post.responses.200.schema.$ref: '#/definitions/AdminGetUserResponse'
paths./#AdminGetUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminGetUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminGetUser.post.responses.481.description: InvalidParameterException
paths./#AdminGetUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminGetUser.post.responses.482.description: TooManyRequestsException
paths./#AdminGetUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminGetUser.post.responses.483.description: NotAuthorizedException
paths./#AdminGetUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminGetUser.post.responses.484.description: UserNotFoundException
paths./#AdminGetUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminGetUser.post.responses.485.description: InternalErrorException
paths./#AdminGetUser.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminInitiateAuth.parameters.length: 9
paths./#AdminInitiateAuth.parameters[0].$ref: '#/parameters/Action'
paths./#AdminInitiateAuth.parameters[1].$ref: '#/parameters/Version'
paths./#AdminInitiateAuth.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminInitiateAuth.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminInitiateAuth.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminInitiateAuth.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminInitiateAuth.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminInitiateAuth.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminInitiateAuth.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminInitiateAuth.post.description: <p>Initiates the authentication flow,
  as an administrator.</p> <p>Requires developer credentials.</p>
paths./#AdminInitiateAuth.post.operationId: AdminInitiateAuth
paths./#AdminInitiateAuth.post.parameters.length: 1
paths./#AdminInitiateAuth.post.parameters[0].in: body
paths./#AdminInitiateAuth.post.parameters[0].name: body
paths./#AdminInitiateAuth.post.parameters[0].required: true
paths./#AdminInitiateAuth.post.parameters[0].schema.$ref: '#/definitions/AdminInitiateAuthRequest'
paths./#AdminInitiateAuth.post.responses.200.description: Success
paths./#AdminInitiateAuth.post.responses.200.schema.$ref: '#/definitions/AdminInitiateAuthResponse'
paths./#AdminInitiateAuth.post.responses.480.description: ResourceNotFoundException
paths./#AdminInitiateAuth.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminInitiateAuth.post.responses.481.description: InvalidParameterException
paths./#AdminInitiateAuth.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminInitiateAuth.post.responses.482.description: NotAuthorizedException
paths./#AdminInitiateAuth.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminInitiateAuth.post.responses.483.description: TooManyRequestsException
paths./#AdminInitiateAuth.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminInitiateAuth.post.responses.484.description: InternalErrorException
paths./#AdminInitiateAuth.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminInitiateAuth.post.responses.485.description: UnexpectedLambdaException
paths./#AdminInitiateAuth.post.responses.485.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminInitiateAuth.post.responses.486.description: InvalidUserPoolConfigurationException
paths./#AdminInitiateAuth.post.responses.486.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminInitiateAuth.post.responses.487.description: UserLambdaValidationException
paths./#AdminInitiateAuth.post.responses.487.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminInitiateAuth.post.responses.488.description: InvalidLambdaResponseException
paths./#AdminInitiateAuth.post.responses.488.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminInitiateAuth.post.responses.489.description: MFAMethodNotFoundException
paths./#AdminInitiateAuth.post.responses.489.schema.$ref: '#/definitions/MFAMethodNotFoundException'
paths./#AdminInitiateAuth.post.responses.490.description: InvalidSmsRoleAccessPolicyException
paths./#AdminInitiateAuth.post.responses.490.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#AdminInitiateAuth.post.responses.491.description: InvalidSmsRoleTrustRelationshipException
paths./#AdminInitiateAuth.post.responses.491.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#AdminInitiateAuth.post.responses.492.description: PasswordResetRequiredException
paths./#AdminInitiateAuth.post.responses.492.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#AdminInitiateAuth.post.responses.493.description: UserNotFoundException
paths./#AdminInitiateAuth.post.responses.493.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminInitiateAuth.post.responses.494.description: UserNotConfirmedException
paths./#AdminInitiateAuth.post.responses.494.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#AdminLinkProviderForUser.parameters.length: 9
paths./#AdminLinkProviderForUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminLinkProviderForUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminLinkProviderForUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminLinkProviderForUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminLinkProviderForUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminLinkProviderForUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminLinkProviderForUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminLinkProviderForUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminLinkProviderForUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminLinkProviderForUser.post.description: <p>Links an existing user account
  in a user pool (<code>DestinationUser</code>) to an identity from an external identity
  provider (<code>SourceUser</code>) based on a specified attribute name and value
  from the external identity provider. This allows you to create a link from the existing
  user account to an external federated user identity that has not yet been used to
  sign in, so that the federated user identity can be used to sign in as the existing
  user account. </p> <p> For example, if there is an existing user with a username
  and password, this API links that user to a federated user identity, so that when
  the federated user identity is used, the user signs in as the existing user account.
  </p> <important> <p>Because this API allows a user with an external federated identity
  to sign in as an existing user in the user pool, it is critical that it only be
  used with external identity providers and provider attributes that have been trusted
  by the application owner.</p> </important> <p>See also <a href="API_AdminDisableProviderForUser.html">AdminDisableProviderForUser</a>.</p>
  <p>This action is enabled only for admin access and requires developer credentials.</p>
paths./#AdminLinkProviderForUser.post.operationId: AdminLinkProviderForUser
paths./#AdminLinkProviderForUser.post.parameters.length: 1
paths./#AdminLinkProviderForUser.post.parameters[0].in: body
paths./#AdminLinkProviderForUser.post.parameters[0].name: body
paths./#AdminLinkProviderForUser.post.parameters[0].required: true
paths./#AdminLinkProviderForUser.post.parameters[0].schema.$ref: '#/definitions/AdminLinkProviderForUserRequest'
paths./#AdminLinkProviderForUser.post.responses.200.description: Success
paths./#AdminLinkProviderForUser.post.responses.200.schema.$ref: '#/definitions/AdminLinkProviderForUserResponse'
paths./#AdminLinkProviderForUser.post.responses.480.description: ResourceNotFoundException
paths./#AdminLinkProviderForUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminLinkProviderForUser.post.responses.481.description: InvalidParameterException
paths./#AdminLinkProviderForUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminLinkProviderForUser.post.responses.482.description: TooManyRequestsException
paths./#AdminLinkProviderForUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminLinkProviderForUser.post.responses.483.description: NotAuthorizedException
paths./#AdminLinkProviderForUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminLinkProviderForUser.post.responses.484.description: UserNotFoundException
paths./#AdminLinkProviderForUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminLinkProviderForUser.post.responses.485.description: AliasExistsException
paths./#AdminLinkProviderForUser.post.responses.485.schema.$ref: '#/definitions/AliasExistsException'
paths./#AdminLinkProviderForUser.post.responses.486.description: InternalErrorException
paths./#AdminLinkProviderForUser.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminListDevices.parameters.length: 9
paths./#AdminListDevices.parameters[0].$ref: '#/parameters/Action'
paths./#AdminListDevices.parameters[1].$ref: '#/parameters/Version'
paths./#AdminListDevices.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminListDevices.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminListDevices.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminListDevices.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminListDevices.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminListDevices.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminListDevices.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminListDevices.post.description: <p>Lists devices, as an administrator.</p>
  <p>Requires developer credentials.</p>
paths./#AdminListDevices.post.operationId: AdminListDevices
paths./#AdminListDevices.post.parameters.length: 1
paths./#AdminListDevices.post.parameters[0].in: body
paths./#AdminListDevices.post.parameters[0].name: body
paths./#AdminListDevices.post.parameters[0].required: true
paths./#AdminListDevices.post.parameters[0].schema.$ref: '#/definitions/AdminListDevicesRequest'
paths./#AdminListDevices.post.responses.200.description: Success
paths./#AdminListDevices.post.responses.200.schema.$ref: '#/definitions/AdminListDevicesResponse'
paths./#AdminListDevices.post.responses.480.description: InvalidParameterException
paths./#AdminListDevices.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminListDevices.post.responses.481.description: ResourceNotFoundException
paths./#AdminListDevices.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminListDevices.post.responses.482.description: InvalidUserPoolConfigurationException
paths./#AdminListDevices.post.responses.482.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminListDevices.post.responses.483.description: TooManyRequestsException
paths./#AdminListDevices.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminListDevices.post.responses.484.description: InternalErrorException
paths./#AdminListDevices.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminListDevices.post.responses.485.description: NotAuthorizedException
paths./#AdminListDevices.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminListGroupsForUser.parameters.length: 9
paths./#AdminListGroupsForUser.parameters[0].$ref: '#/parameters/Action'
paths./#AdminListGroupsForUser.parameters[1].$ref: '#/parameters/Version'
paths./#AdminListGroupsForUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminListGroupsForUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminListGroupsForUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminListGroupsForUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminListGroupsForUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminListGroupsForUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminListGroupsForUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminListGroupsForUser.post.description: <p>Lists the groups that the user
  belongs to.</p> <p>Requires developer credentials.</p>
paths./#AdminListGroupsForUser.post.operationId: AdminListGroupsForUser
paths./#AdminListGroupsForUser.post.parameters.length: 1
paths./#AdminListGroupsForUser.post.parameters[0].in: body
paths./#AdminListGroupsForUser.post.parameters[0].name: body
paths./#AdminListGroupsForUser.post.parameters[0].required: true
paths./#AdminListGroupsForUser.post.parameters[0].schema.$ref: '#/definitions/AdminListGroupsForUserRequest'
paths./#AdminListGroupsForUser.post.responses.200.description: Success
paths./#AdminListGroupsForUser.post.responses.200.schema.$ref: '#/definitions/AdminListGroupsForUserResponse'
paths./#AdminListGroupsForUser.post.responses.480.description: InvalidParameterException
paths./#AdminListGroupsForUser.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminListGroupsForUser.post.responses.481.description: ResourceNotFoundException
paths./#AdminListGroupsForUser.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminListGroupsForUser.post.responses.482.description: TooManyRequestsException
paths./#AdminListGroupsForUser.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminListGroupsForUser.post.responses.483.description: NotAuthorizedException
paths./#AdminListGroupsForUser.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminListGroupsForUser.post.responses.484.description: UserNotFoundException
paths./#AdminListGroupsForUser.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminListGroupsForUser.post.responses.485.description: InternalErrorException
paths./#AdminListGroupsForUser.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminRemoveUserFromGroup.parameters.length: 9
paths./#AdminRemoveUserFromGroup.parameters[0].$ref: '#/parameters/Action'
paths./#AdminRemoveUserFromGroup.parameters[1].$ref: '#/parameters/Version'
paths./#AdminRemoveUserFromGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminRemoveUserFromGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminRemoveUserFromGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminRemoveUserFromGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminRemoveUserFromGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminRemoveUserFromGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminRemoveUserFromGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminRemoveUserFromGroup.post.description: <p>Removes the specified user from
  the specified group.</p> <p>Requires developer credentials.</p>
paths./#AdminRemoveUserFromGroup.post.operationId: AdminRemoveUserFromGroup
paths./#AdminRemoveUserFromGroup.post.parameters.length: 1
paths./#AdminRemoveUserFromGroup.post.parameters[0].in: body
paths./#AdminRemoveUserFromGroup.post.parameters[0].name: body
paths./#AdminRemoveUserFromGroup.post.parameters[0].required: true
paths./#AdminRemoveUserFromGroup.post.parameters[0].schema.$ref: '#/definitions/AdminRemoveUserFromGroupRequest'
paths./#AdminRemoveUserFromGroup.post.responses.200.description: Success
paths./#AdminRemoveUserFromGroup.post.responses.480.description: InvalidParameterException
paths./#AdminRemoveUserFromGroup.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminRemoveUserFromGroup.post.responses.481.description: ResourceNotFoundException
paths./#AdminRemoveUserFromGroup.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminRemoveUserFromGroup.post.responses.482.description: TooManyRequestsException
paths./#AdminRemoveUserFromGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminRemoveUserFromGroup.post.responses.483.description: NotAuthorizedException
paths./#AdminRemoveUserFromGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminRemoveUserFromGroup.post.responses.484.description: UserNotFoundException
paths./#AdminRemoveUserFromGroup.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminRemoveUserFromGroup.post.responses.485.description: InternalErrorException
paths./#AdminRemoveUserFromGroup.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminResetUserPassword.parameters.length: 9
paths./#AdminResetUserPassword.parameters[0].$ref: '#/parameters/Action'
paths./#AdminResetUserPassword.parameters[1].$ref: '#/parameters/Version'
paths./#AdminResetUserPassword.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminResetUserPassword.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminResetUserPassword.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminResetUserPassword.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminResetUserPassword.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminResetUserPassword.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminResetUserPassword.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminResetUserPassword.post.description: <p>Resets the specified user's password
  in a user pool as an administrator. Works on any user.</p> <p>When a developer calls
  this API, the current password is invalidated, so it must be changed. If a user
  tries to sign in after the API is called, the app will get a PasswordResetRequiredException
  exception back and should direct the user down the flow to reset the password, which
  is the same as the forgot password flow. In addition, if the user pool has phone
  verification selected and a verified phone number exists for the user, or if email
  verification is selected and a verified email exists for the user, calling this
  API will also result in sending a message to the end user with the code to change
  their password.</p> <p>Requires developer credentials.</p>
paths./#AdminResetUserPassword.post.operationId: AdminResetUserPassword
paths./#AdminResetUserPassword.post.parameters.length: 1
paths./#AdminResetUserPassword.post.parameters[0].in: body
paths./#AdminResetUserPassword.post.parameters[0].name: body
paths./#AdminResetUserPassword.post.parameters[0].required: true
paths./#AdminResetUserPassword.post.parameters[0].schema.$ref: '#/definitions/AdminResetUserPasswordRequest'
paths./#AdminResetUserPassword.post.responses.200.description: Success
paths./#AdminResetUserPassword.post.responses.200.schema.$ref: '#/definitions/AdminResetUserPasswordResponse'
paths./#AdminResetUserPassword.post.responses.480.description: ResourceNotFoundException
paths./#AdminResetUserPassword.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminResetUserPassword.post.responses.481.description: InvalidParameterException
paths./#AdminResetUserPassword.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminResetUserPassword.post.responses.482.description: UnexpectedLambdaException
paths./#AdminResetUserPassword.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminResetUserPassword.post.responses.483.description: UserLambdaValidationException
paths./#AdminResetUserPassword.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminResetUserPassword.post.responses.484.description: NotAuthorizedException
paths./#AdminResetUserPassword.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminResetUserPassword.post.responses.485.description: InvalidLambdaResponseException
paths./#AdminResetUserPassword.post.responses.485.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminResetUserPassword.post.responses.486.description: TooManyRequestsException
paths./#AdminResetUserPassword.post.responses.486.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminResetUserPassword.post.responses.487.description: LimitExceededException
paths./#AdminResetUserPassword.post.responses.487.schema.$ref: '#/definitions/LimitExceededException'
paths./#AdminResetUserPassword.post.responses.488.description: UserNotFoundException
paths./#AdminResetUserPassword.post.responses.488.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminResetUserPassword.post.responses.489.description: InvalidSmsRoleAccessPolicyException
paths./#AdminResetUserPassword.post.responses.489.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#AdminResetUserPassword.post.responses.490.description: InvalidEmailRoleAccessPolicyException
paths./#AdminResetUserPassword.post.responses.490.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#AdminResetUserPassword.post.responses.491.description: InvalidSmsRoleTrustRelationshipException
paths./#AdminResetUserPassword.post.responses.491.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#AdminResetUserPassword.post.responses.492.description: InternalErrorException
paths./#AdminResetUserPassword.post.responses.492.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminRespondToAuthChallenge.parameters.length: 9
paths./#AdminRespondToAuthChallenge.parameters[0].$ref: '#/parameters/Action'
paths./#AdminRespondToAuthChallenge.parameters[1].$ref: '#/parameters/Version'
paths./#AdminRespondToAuthChallenge.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminRespondToAuthChallenge.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminRespondToAuthChallenge.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminRespondToAuthChallenge.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminRespondToAuthChallenge.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminRespondToAuthChallenge.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminRespondToAuthChallenge.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminRespondToAuthChallenge.post.description: <p>Responds to an authentication
  challenge, as an administrator.</p> <p>Requires developer credentials.</p>
paths./#AdminRespondToAuthChallenge.post.operationId: AdminRespondToAuthChallenge
paths./#AdminRespondToAuthChallenge.post.parameters.length: 1
paths./#AdminRespondToAuthChallenge.post.parameters[0].in: body
paths./#AdminRespondToAuthChallenge.post.parameters[0].name: body
paths./#AdminRespondToAuthChallenge.post.parameters[0].required: true
paths./#AdminRespondToAuthChallenge.post.parameters[0].schema.$ref: '#/definitions/AdminRespondToAuthChallengeRequest'
paths./#AdminRespondToAuthChallenge.post.responses.200.description: Success
paths./#AdminRespondToAuthChallenge.post.responses.200.schema.$ref: '#/definitions/AdminRespondToAuthChallengeResponse'
paths./#AdminRespondToAuthChallenge.post.responses.480.description: ResourceNotFoundException
paths./#AdminRespondToAuthChallenge.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminRespondToAuthChallenge.post.responses.481.description: InvalidParameterException
paths./#AdminRespondToAuthChallenge.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminRespondToAuthChallenge.post.responses.482.description: NotAuthorizedException
paths./#AdminRespondToAuthChallenge.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminRespondToAuthChallenge.post.responses.483.description: CodeMismatchException
paths./#AdminRespondToAuthChallenge.post.responses.483.schema.$ref: '#/definitions/CodeMismatchException'
paths./#AdminRespondToAuthChallenge.post.responses.484.description: ExpiredCodeException
paths./#AdminRespondToAuthChallenge.post.responses.484.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#AdminRespondToAuthChallenge.post.responses.485.description: UnexpectedLambdaException
paths./#AdminRespondToAuthChallenge.post.responses.485.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminRespondToAuthChallenge.post.responses.486.description: InvalidPasswordException
paths./#AdminRespondToAuthChallenge.post.responses.486.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#AdminRespondToAuthChallenge.post.responses.487.description: UserLambdaValidationException
paths./#AdminRespondToAuthChallenge.post.responses.487.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminRespondToAuthChallenge.post.responses.488.description: InvalidLambdaResponseException
paths./#AdminRespondToAuthChallenge.post.responses.488.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminRespondToAuthChallenge.post.responses.489.description: TooManyRequestsException
paths./#AdminRespondToAuthChallenge.post.responses.489.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminRespondToAuthChallenge.post.responses.490.description: InvalidUserPoolConfigurationException
paths./#AdminRespondToAuthChallenge.post.responses.490.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminRespondToAuthChallenge.post.responses.491.description: InternalErrorException
paths./#AdminRespondToAuthChallenge.post.responses.491.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminRespondToAuthChallenge.post.responses.492.description: MFAMethodNotFoundException
paths./#AdminRespondToAuthChallenge.post.responses.492.schema.$ref: '#/definitions/MFAMethodNotFoundException'
paths./#AdminRespondToAuthChallenge.post.responses.493.description: InvalidSmsRoleAccessPolicyException
paths./#AdminRespondToAuthChallenge.post.responses.493.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#AdminRespondToAuthChallenge.post.responses.494.description: InvalidSmsRoleTrustRelationshipException
paths./#AdminRespondToAuthChallenge.post.responses.494.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#AdminRespondToAuthChallenge.post.responses.495.description: AliasExistsException
paths./#AdminRespondToAuthChallenge.post.responses.495.schema.$ref: '#/definitions/AliasExistsException'
paths./#AdminRespondToAuthChallenge.post.responses.496.description: PasswordResetRequiredException
paths./#AdminRespondToAuthChallenge.post.responses.496.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#AdminRespondToAuthChallenge.post.responses.497.description: UserNotFoundException
paths./#AdminRespondToAuthChallenge.post.responses.497.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminRespondToAuthChallenge.post.responses.498.description: UserNotConfirmedException
paths./#AdminRespondToAuthChallenge.post.responses.498.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#AdminSetUserSettings.parameters.length: 9
paths./#AdminSetUserSettings.parameters[0].$ref: '#/parameters/Action'
paths./#AdminSetUserSettings.parameters[1].$ref: '#/parameters/Version'
paths./#AdminSetUserSettings.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminSetUserSettings.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminSetUserSettings.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminSetUserSettings.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminSetUserSettings.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminSetUserSettings.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminSetUserSettings.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminSetUserSettings.post.description: <p>Sets all the user settings for a
  specified user name. Works on any user.</p> <p>Requires developer credentials.</p>
paths./#AdminSetUserSettings.post.operationId: AdminSetUserSettings
paths./#AdminSetUserSettings.post.parameters.length: 1
paths./#AdminSetUserSettings.post.parameters[0].in: body
paths./#AdminSetUserSettings.post.parameters[0].name: body
paths./#AdminSetUserSettings.post.parameters[0].required: true
paths./#AdminSetUserSettings.post.parameters[0].schema.$ref: '#/definitions/AdminSetUserSettingsRequest'
paths./#AdminSetUserSettings.post.responses.200.description: Success
paths./#AdminSetUserSettings.post.responses.200.schema.$ref: '#/definitions/AdminSetUserSettingsResponse'
paths./#AdminSetUserSettings.post.responses.480.description: ResourceNotFoundException
paths./#AdminSetUserSettings.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminSetUserSettings.post.responses.481.description: InvalidParameterException
paths./#AdminSetUserSettings.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminSetUserSettings.post.responses.482.description: NotAuthorizedException
paths./#AdminSetUserSettings.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminSetUserSettings.post.responses.483.description: UserNotFoundException
paths./#AdminSetUserSettings.post.responses.483.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminSetUserSettings.post.responses.484.description: InternalErrorException
paths./#AdminSetUserSettings.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminUpdateDeviceStatus.parameters.length: 9
paths./#AdminUpdateDeviceStatus.parameters[0].$ref: '#/parameters/Action'
paths./#AdminUpdateDeviceStatus.parameters[1].$ref: '#/parameters/Version'
paths./#AdminUpdateDeviceStatus.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminUpdateDeviceStatus.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminUpdateDeviceStatus.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminUpdateDeviceStatus.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminUpdateDeviceStatus.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminUpdateDeviceStatus.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminUpdateDeviceStatus.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminUpdateDeviceStatus.post.description: <p>Updates the device status as
  an administrator.</p> <p>Requires developer credentials.</p>
paths./#AdminUpdateDeviceStatus.post.operationId: AdminUpdateDeviceStatus
paths./#AdminUpdateDeviceStatus.post.parameters.length: 1
paths./#AdminUpdateDeviceStatus.post.parameters[0].in: body
paths./#AdminUpdateDeviceStatus.post.parameters[0].name: body
paths./#AdminUpdateDeviceStatus.post.parameters[0].required: true
paths./#AdminUpdateDeviceStatus.post.parameters[0].schema.$ref: '#/definitions/AdminUpdateDeviceStatusRequest'
paths./#AdminUpdateDeviceStatus.post.responses.200.description: Success
paths./#AdminUpdateDeviceStatus.post.responses.200.schema.$ref: '#/definitions/AdminUpdateDeviceStatusResponse'
paths./#AdminUpdateDeviceStatus.post.responses.480.description: InvalidParameterException
paths./#AdminUpdateDeviceStatus.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminUpdateDeviceStatus.post.responses.481.description: ResourceNotFoundException
paths./#AdminUpdateDeviceStatus.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminUpdateDeviceStatus.post.responses.482.description: InvalidUserPoolConfigurationException
paths./#AdminUpdateDeviceStatus.post.responses.482.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#AdminUpdateDeviceStatus.post.responses.483.description: TooManyRequestsException
paths./#AdminUpdateDeviceStatus.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminUpdateDeviceStatus.post.responses.484.description: NotAuthorizedException
paths./#AdminUpdateDeviceStatus.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminUpdateDeviceStatus.post.responses.485.description: UserNotFoundException
paths./#AdminUpdateDeviceStatus.post.responses.485.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminUpdateDeviceStatus.post.responses.486.description: InternalErrorException
paths./#AdminUpdateDeviceStatus.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminUpdateUserAttributes.parameters.length: 9
paths./#AdminUpdateUserAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#AdminUpdateUserAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#AdminUpdateUserAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminUpdateUserAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminUpdateUserAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminUpdateUserAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminUpdateUserAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminUpdateUserAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminUpdateUserAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminUpdateUserAttributes.post.description: <p>Updates the specified user's
  attributes, including developer attributes, as an administrator. Works on any user.</p>
  <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the
  attribute name.</p> <p>In addition to updating user attributes, this API can also
  be used to mark phone and email as verified.</p> <p>Requires developer credentials.</p>
paths./#AdminUpdateUserAttributes.post.operationId: AdminUpdateUserAttributes
paths./#AdminUpdateUserAttributes.post.parameters.length: 1
paths./#AdminUpdateUserAttributes.post.parameters[0].in: body
paths./#AdminUpdateUserAttributes.post.parameters[0].name: body
paths./#AdminUpdateUserAttributes.post.parameters[0].required: true
paths./#AdminUpdateUserAttributes.post.parameters[0].schema.$ref: '#/definitions/AdminUpdateUserAttributesRequest'
paths./#AdminUpdateUserAttributes.post.responses.200.description: Success
paths./#AdminUpdateUserAttributes.post.responses.200.schema.$ref: '#/definitions/AdminUpdateUserAttributesResponse'
paths./#AdminUpdateUserAttributes.post.responses.480.description: ResourceNotFoundException
paths./#AdminUpdateUserAttributes.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminUpdateUserAttributes.post.responses.481.description: InvalidParameterException
paths./#AdminUpdateUserAttributes.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminUpdateUserAttributes.post.responses.482.description: UnexpectedLambdaException
paths./#AdminUpdateUserAttributes.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#AdminUpdateUserAttributes.post.responses.483.description: UserLambdaValidationException
paths./#AdminUpdateUserAttributes.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#AdminUpdateUserAttributes.post.responses.484.description: InvalidLambdaResponseException
paths./#AdminUpdateUserAttributes.post.responses.484.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#AdminUpdateUserAttributes.post.responses.485.description: AliasExistsException
paths./#AdminUpdateUserAttributes.post.responses.485.schema.$ref: '#/definitions/AliasExistsException'
paths./#AdminUpdateUserAttributes.post.responses.486.description: TooManyRequestsException
paths./#AdminUpdateUserAttributes.post.responses.486.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminUpdateUserAttributes.post.responses.487.description: NotAuthorizedException
paths./#AdminUpdateUserAttributes.post.responses.487.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminUpdateUserAttributes.post.responses.488.description: UserNotFoundException
paths./#AdminUpdateUserAttributes.post.responses.488.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminUpdateUserAttributes.post.responses.489.description: InternalErrorException
paths./#AdminUpdateUserAttributes.post.responses.489.schema.$ref: '#/definitions/InternalErrorException'
paths./#AdminUserGlobalSignOut.parameters.length: 9
paths./#AdminUserGlobalSignOut.parameters[0].$ref: '#/parameters/Action'
paths./#AdminUserGlobalSignOut.parameters[1].$ref: '#/parameters/Version'
paths./#AdminUserGlobalSignOut.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#AdminUserGlobalSignOut.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#AdminUserGlobalSignOut.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#AdminUserGlobalSignOut.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#AdminUserGlobalSignOut.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#AdminUserGlobalSignOut.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#AdminUserGlobalSignOut.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#AdminUserGlobalSignOut.post.description: <p>Signs out users from all devices,
  as an administrator.</p> <p>Requires developer credentials.</p>
paths./#AdminUserGlobalSignOut.post.operationId: AdminUserGlobalSignOut
paths./#AdminUserGlobalSignOut.post.parameters.length: 1
paths./#AdminUserGlobalSignOut.post.parameters[0].in: body
paths./#AdminUserGlobalSignOut.post.parameters[0].name: body
paths./#AdminUserGlobalSignOut.post.parameters[0].required: true
paths./#AdminUserGlobalSignOut.post.parameters[0].schema.$ref: '#/definitions/AdminUserGlobalSignOutRequest'
paths./#AdminUserGlobalSignOut.post.responses.200.description: Success
paths./#AdminUserGlobalSignOut.post.responses.200.schema.$ref: '#/definitions/AdminUserGlobalSignOutResponse'
paths./#AdminUserGlobalSignOut.post.responses.480.description: ResourceNotFoundException
paths./#AdminUserGlobalSignOut.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#AdminUserGlobalSignOut.post.responses.481.description: InvalidParameterException
paths./#AdminUserGlobalSignOut.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#AdminUserGlobalSignOut.post.responses.482.description: TooManyRequestsException
paths./#AdminUserGlobalSignOut.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#AdminUserGlobalSignOut.post.responses.483.description: NotAuthorizedException
paths./#AdminUserGlobalSignOut.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#AdminUserGlobalSignOut.post.responses.484.description: UserNotFoundException
paths./#AdminUserGlobalSignOut.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#AdminUserGlobalSignOut.post.responses.485.description: InternalErrorException
paths./#AdminUserGlobalSignOut.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#ChangePassword.parameters.length: 9
paths./#ChangePassword.parameters[0].$ref: '#/parameters/Action'
paths./#ChangePassword.parameters[1].$ref: '#/parameters/Version'
paths./#ChangePassword.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ChangePassword.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ChangePassword.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ChangePassword.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ChangePassword.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ChangePassword.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ChangePassword.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ChangePassword.post.description: Changes the password for a specified user
  in a user pool.
paths./#ChangePassword.post.operationId: ChangePassword
paths./#ChangePassword.post.parameters.length: 1
paths./#ChangePassword.post.parameters[0].in: body
paths./#ChangePassword.post.parameters[0].name: body
paths./#ChangePassword.post.parameters[0].required: true
paths./#ChangePassword.post.parameters[0].schema.$ref: '#/definitions/ChangePasswordRequest'
paths./#ChangePassword.post.responses.200.description: Success
paths./#ChangePassword.post.responses.200.schema.$ref: '#/definitions/ChangePasswordResponse'
paths./#ChangePassword.post.responses.480.description: ResourceNotFoundException
paths./#ChangePassword.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ChangePassword.post.responses.481.description: InvalidParameterException
paths./#ChangePassword.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ChangePassword.post.responses.482.description: InvalidPasswordException
paths./#ChangePassword.post.responses.482.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#ChangePassword.post.responses.483.description: NotAuthorizedException
paths./#ChangePassword.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ChangePassword.post.responses.484.description: TooManyRequestsException
paths./#ChangePassword.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ChangePassword.post.responses.485.description: LimitExceededException
paths./#ChangePassword.post.responses.485.schema.$ref: '#/definitions/LimitExceededException'
paths./#ChangePassword.post.responses.486.description: PasswordResetRequiredException
paths./#ChangePassword.post.responses.486.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#ChangePassword.post.responses.487.description: UserNotFoundException
paths./#ChangePassword.post.responses.487.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ChangePassword.post.responses.488.description: UserNotConfirmedException
paths./#ChangePassword.post.responses.488.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ChangePassword.post.responses.489.description: InternalErrorException
paths./#ChangePassword.post.responses.489.schema.$ref: '#/definitions/InternalErrorException'
paths./#ConfirmDevice.parameters.length: 9
paths./#ConfirmDevice.parameters[0].$ref: '#/parameters/Action'
paths./#ConfirmDevice.parameters[1].$ref: '#/parameters/Version'
paths./#ConfirmDevice.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ConfirmDevice.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ConfirmDevice.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ConfirmDevice.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ConfirmDevice.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ConfirmDevice.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ConfirmDevice.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ConfirmDevice.post.description: Confirms tracking of the device. This API
  call is the call that begins device tracking.
paths./#ConfirmDevice.post.operationId: ConfirmDevice
paths./#ConfirmDevice.post.parameters.length: 1
paths./#ConfirmDevice.post.parameters[0].in: body
paths./#ConfirmDevice.post.parameters[0].name: body
paths./#ConfirmDevice.post.parameters[0].required: true
paths./#ConfirmDevice.post.parameters[0].schema.$ref: '#/definitions/ConfirmDeviceRequest'
paths./#ConfirmDevice.post.responses.200.description: Success
paths./#ConfirmDevice.post.responses.200.schema.$ref: '#/definitions/ConfirmDeviceResponse'
paths./#ConfirmDevice.post.responses.480.description: ResourceNotFoundException
paths./#ConfirmDevice.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ConfirmDevice.post.responses.481.description: InvalidParameterException
paths./#ConfirmDevice.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ConfirmDevice.post.responses.482.description: NotAuthorizedException
paths./#ConfirmDevice.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ConfirmDevice.post.responses.483.description: InvalidPasswordException
paths./#ConfirmDevice.post.responses.483.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#ConfirmDevice.post.responses.484.description: InvalidLambdaResponseException
paths./#ConfirmDevice.post.responses.484.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#ConfirmDevice.post.responses.485.description: UsernameExistsException
paths./#ConfirmDevice.post.responses.485.schema.$ref: '#/definitions/UsernameExistsException'
paths./#ConfirmDevice.post.responses.486.description: InvalidUserPoolConfigurationException
paths./#ConfirmDevice.post.responses.486.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#ConfirmDevice.post.responses.487.description: TooManyRequestsException
paths./#ConfirmDevice.post.responses.487.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ConfirmDevice.post.responses.488.description: PasswordResetRequiredException
paths./#ConfirmDevice.post.responses.488.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#ConfirmDevice.post.responses.489.description: UserNotFoundException
paths./#ConfirmDevice.post.responses.489.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ConfirmDevice.post.responses.490.description: UserNotConfirmedException
paths./#ConfirmDevice.post.responses.490.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ConfirmDevice.post.responses.491.description: InternalErrorException
paths./#ConfirmDevice.post.responses.491.schema.$ref: '#/definitions/InternalErrorException'
paths./#ConfirmForgotPassword.parameters.length: 9
paths./#ConfirmForgotPassword.parameters[0].$ref: '#/parameters/Action'
paths./#ConfirmForgotPassword.parameters[1].$ref: '#/parameters/Version'
paths./#ConfirmForgotPassword.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ConfirmForgotPassword.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ConfirmForgotPassword.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ConfirmForgotPassword.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ConfirmForgotPassword.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ConfirmForgotPassword.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ConfirmForgotPassword.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ConfirmForgotPassword.post.description: Allows a user to enter a confirmation
  code to reset a forgotten password.
paths./#ConfirmForgotPassword.post.operationId: ConfirmForgotPassword
paths./#ConfirmForgotPassword.post.parameters.length: 1
paths./#ConfirmForgotPassword.post.parameters[0].in: body
paths./#ConfirmForgotPassword.post.parameters[0].name: body
paths./#ConfirmForgotPassword.post.parameters[0].required: true
paths./#ConfirmForgotPassword.post.parameters[0].schema.$ref: '#/definitions/ConfirmForgotPasswordRequest'
paths./#ConfirmForgotPassword.post.responses.200.description: Success
paths./#ConfirmForgotPassword.post.responses.200.schema.$ref: '#/definitions/ConfirmForgotPasswordResponse'
paths./#ConfirmForgotPassword.post.responses.480.description: ResourceNotFoundException
paths./#ConfirmForgotPassword.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ConfirmForgotPassword.post.responses.481.description: UnexpectedLambdaException
paths./#ConfirmForgotPassword.post.responses.481.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#ConfirmForgotPassword.post.responses.482.description: UserLambdaValidationException
paths./#ConfirmForgotPassword.post.responses.482.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#ConfirmForgotPassword.post.responses.483.description: InvalidParameterException
paths./#ConfirmForgotPassword.post.responses.483.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ConfirmForgotPassword.post.responses.484.description: InvalidPasswordException
paths./#ConfirmForgotPassword.post.responses.484.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#ConfirmForgotPassword.post.responses.485.description: NotAuthorizedException
paths./#ConfirmForgotPassword.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ConfirmForgotPassword.post.responses.486.description: CodeMismatchException
paths./#ConfirmForgotPassword.post.responses.486.schema.$ref: '#/definitions/CodeMismatchException'
paths./#ConfirmForgotPassword.post.responses.487.description: ExpiredCodeException
paths./#ConfirmForgotPassword.post.responses.487.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#ConfirmForgotPassword.post.responses.488.description: TooManyFailedAttemptsException
paths./#ConfirmForgotPassword.post.responses.488.schema.$ref: '#/definitions/TooManyFailedAttemptsException'
paths./#ConfirmForgotPassword.post.responses.489.description: InvalidLambdaResponseException
paths./#ConfirmForgotPassword.post.responses.489.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#ConfirmForgotPassword.post.responses.490.description: TooManyRequestsException
paths./#ConfirmForgotPassword.post.responses.490.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ConfirmForgotPassword.post.responses.491.description: LimitExceededException
paths./#ConfirmForgotPassword.post.responses.491.schema.$ref: '#/definitions/LimitExceededException'
paths./#ConfirmForgotPassword.post.responses.492.description: UserNotFoundException
paths./#ConfirmForgotPassword.post.responses.492.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ConfirmForgotPassword.post.responses.493.description: UserNotConfirmedException
paths./#ConfirmForgotPassword.post.responses.493.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ConfirmForgotPassword.post.responses.494.description: InternalErrorException
paths./#ConfirmForgotPassword.post.responses.494.schema.$ref: '#/definitions/InternalErrorException'
paths./#ConfirmSignUp.parameters.length: 9
paths./#ConfirmSignUp.parameters[0].$ref: '#/parameters/Action'
paths./#ConfirmSignUp.parameters[1].$ref: '#/parameters/Version'
paths./#ConfirmSignUp.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ConfirmSignUp.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ConfirmSignUp.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ConfirmSignUp.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ConfirmSignUp.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ConfirmSignUp.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ConfirmSignUp.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ConfirmSignUp.post.description: Confirms registration of a user and handles
  the existing alias from a previous user.
paths./#ConfirmSignUp.post.operationId: ConfirmSignUp
paths./#ConfirmSignUp.post.parameters.length: 1
paths./#ConfirmSignUp.post.parameters[0].in: body
paths./#ConfirmSignUp.post.parameters[0].name: body
paths./#ConfirmSignUp.post.parameters[0].required: true
paths./#ConfirmSignUp.post.parameters[0].schema.$ref: '#/definitions/ConfirmSignUpRequest'
paths./#ConfirmSignUp.post.responses.200.description: Success
paths./#ConfirmSignUp.post.responses.200.schema.$ref: '#/definitions/ConfirmSignUpResponse'
paths./#ConfirmSignUp.post.responses.480.description: ResourceNotFoundException
paths./#ConfirmSignUp.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ConfirmSignUp.post.responses.481.description: InvalidParameterException
paths./#ConfirmSignUp.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ConfirmSignUp.post.responses.482.description: UnexpectedLambdaException
paths./#ConfirmSignUp.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#ConfirmSignUp.post.responses.483.description: UserLambdaValidationException
paths./#ConfirmSignUp.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#ConfirmSignUp.post.responses.484.description: NotAuthorizedException
paths./#ConfirmSignUp.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ConfirmSignUp.post.responses.485.description: TooManyFailedAttemptsException
paths./#ConfirmSignUp.post.responses.485.schema.$ref: '#/definitions/TooManyFailedAttemptsException'
paths./#ConfirmSignUp.post.responses.486.description: CodeMismatchException
paths./#ConfirmSignUp.post.responses.486.schema.$ref: '#/definitions/CodeMismatchException'
paths./#ConfirmSignUp.post.responses.487.description: ExpiredCodeException
paths./#ConfirmSignUp.post.responses.487.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#ConfirmSignUp.post.responses.488.description: InvalidLambdaResponseException
paths./#ConfirmSignUp.post.responses.488.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#ConfirmSignUp.post.responses.489.description: AliasExistsException
paths./#ConfirmSignUp.post.responses.489.schema.$ref: '#/definitions/AliasExistsException'
paths./#ConfirmSignUp.post.responses.490.description: TooManyRequestsException
paths./#ConfirmSignUp.post.responses.490.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ConfirmSignUp.post.responses.491.description: LimitExceededException
paths./#ConfirmSignUp.post.responses.491.schema.$ref: '#/definitions/LimitExceededException'
paths./#ConfirmSignUp.post.responses.492.description: UserNotFoundException
paths./#ConfirmSignUp.post.responses.492.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ConfirmSignUp.post.responses.493.description: InternalErrorException
paths./#ConfirmSignUp.post.responses.493.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateGroup.parameters.length: 9
paths./#CreateGroup.parameters[0].$ref: '#/parameters/Action'
paths./#CreateGroup.parameters[1].$ref: '#/parameters/Version'
paths./#CreateGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateGroup.post.description: <p>Creates a new group in the specified user
  pool.</p> <p>Requires developer credentials.</p>
paths./#CreateGroup.post.operationId: CreateGroup
paths./#CreateGroup.post.parameters.length: 1
paths./#CreateGroup.post.parameters[0].in: body
paths./#CreateGroup.post.parameters[0].name: body
paths./#CreateGroup.post.parameters[0].required: true
paths./#CreateGroup.post.parameters[0].schema.$ref: '#/definitions/CreateGroupRequest'
paths./#CreateGroup.post.responses.200.description: Success
paths./#CreateGroup.post.responses.200.schema.$ref: '#/definitions/CreateGroupResponse'
paths./#CreateGroup.post.responses.480.description: InvalidParameterException
paths./#CreateGroup.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateGroup.post.responses.481.description: GroupExistsException
paths./#CreateGroup.post.responses.481.schema.$ref: '#/definitions/GroupExistsException'
paths./#CreateGroup.post.responses.482.description: ResourceNotFoundException
paths./#CreateGroup.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateGroup.post.responses.483.description: TooManyRequestsException
paths./#CreateGroup.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateGroup.post.responses.484.description: LimitExceededException
paths./#CreateGroup.post.responses.484.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateGroup.post.responses.485.description: NotAuthorizedException
paths./#CreateGroup.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateGroup.post.responses.486.description: InternalErrorException
paths./#CreateGroup.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateIdentityProvider.parameters.length: 9
paths./#CreateIdentityProvider.parameters[0].$ref: '#/parameters/Action'
paths./#CreateIdentityProvider.parameters[1].$ref: '#/parameters/Version'
paths./#CreateIdentityProvider.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateIdentityProvider.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateIdentityProvider.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateIdentityProvider.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateIdentityProvider.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateIdentityProvider.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateIdentityProvider.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateIdentityProvider.post.description: Creates an identity provider for
  a user pool.
paths./#CreateIdentityProvider.post.operationId: CreateIdentityProvider
paths./#CreateIdentityProvider.post.parameters.length: 1
paths./#CreateIdentityProvider.post.parameters[0].in: body
paths./#CreateIdentityProvider.post.parameters[0].name: body
paths./#CreateIdentityProvider.post.parameters[0].required: true
paths./#CreateIdentityProvider.post.parameters[0].schema.$ref: '#/definitions/CreateIdentityProviderRequest'
paths./#CreateIdentityProvider.post.responses.200.description: Success
paths./#CreateIdentityProvider.post.responses.200.schema.$ref: '#/definitions/CreateIdentityProviderResponse'
paths./#CreateIdentityProvider.post.responses.480.description: InvalidParameterException
paths./#CreateIdentityProvider.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateIdentityProvider.post.responses.481.description: DuplicateProviderException
paths./#CreateIdentityProvider.post.responses.481.schema.$ref: '#/definitions/DuplicateProviderException'
paths./#CreateIdentityProvider.post.responses.482.description: ResourceNotFoundException
paths./#CreateIdentityProvider.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateIdentityProvider.post.responses.483.description: NotAuthorizedException
paths./#CreateIdentityProvider.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateIdentityProvider.post.responses.484.description: TooManyRequestsException
paths./#CreateIdentityProvider.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateIdentityProvider.post.responses.485.description: LimitExceededException
paths./#CreateIdentityProvider.post.responses.485.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateIdentityProvider.post.responses.486.description: InternalErrorException
paths./#CreateIdentityProvider.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateResourceServer.parameters.length: 9
paths./#CreateResourceServer.parameters[0].$ref: '#/parameters/Action'
paths./#CreateResourceServer.parameters[1].$ref: '#/parameters/Version'
paths./#CreateResourceServer.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateResourceServer.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateResourceServer.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateResourceServer.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateResourceServer.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateResourceServer.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateResourceServer.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateResourceServer.post.description: Creates a new OAuth2.0 resource server
  and defines custom scopes in it.
paths./#CreateResourceServer.post.operationId: CreateResourceServer
paths./#CreateResourceServer.post.parameters.length: 1
paths./#CreateResourceServer.post.parameters[0].in: body
paths./#CreateResourceServer.post.parameters[0].name: body
paths./#CreateResourceServer.post.parameters[0].required: true
paths./#CreateResourceServer.post.parameters[0].schema.$ref: '#/definitions/CreateResourceServerRequest'
paths./#CreateResourceServer.post.responses.200.description: Success
paths./#CreateResourceServer.post.responses.200.schema.$ref: '#/definitions/CreateResourceServerResponse'
paths./#CreateResourceServer.post.responses.480.description: InvalidParameterException
paths./#CreateResourceServer.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateResourceServer.post.responses.481.description: ResourceNotFoundException
paths./#CreateResourceServer.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateResourceServer.post.responses.482.description: NotAuthorizedException
paths./#CreateResourceServer.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateResourceServer.post.responses.483.description: TooManyRequestsException
paths./#CreateResourceServer.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateResourceServer.post.responses.484.description: LimitExceededException
paths./#CreateResourceServer.post.responses.484.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateResourceServer.post.responses.485.description: InternalErrorException
paths./#CreateResourceServer.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateUserImportJob.parameters.length: 9
paths./#CreateUserImportJob.parameters[0].$ref: '#/parameters/Action'
paths./#CreateUserImportJob.parameters[1].$ref: '#/parameters/Version'
paths./#CreateUserImportJob.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateUserImportJob.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateUserImportJob.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateUserImportJob.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateUserImportJob.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateUserImportJob.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateUserImportJob.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateUserImportJob.post.description: Creates the user import job.
paths./#CreateUserImportJob.post.operationId: CreateUserImportJob
paths./#CreateUserImportJob.post.parameters.length: 1
paths./#CreateUserImportJob.post.parameters[0].in: body
paths./#CreateUserImportJob.post.parameters[0].name: body
paths./#CreateUserImportJob.post.parameters[0].required: true
paths./#CreateUserImportJob.post.parameters[0].schema.$ref: '#/definitions/CreateUserImportJobRequest'
paths./#CreateUserImportJob.post.responses.200.description: Success
paths./#CreateUserImportJob.post.responses.200.schema.$ref: '#/definitions/CreateUserImportJobResponse'
paths./#CreateUserImportJob.post.responses.480.description: ResourceNotFoundException
paths./#CreateUserImportJob.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateUserImportJob.post.responses.481.description: InvalidParameterException
paths./#CreateUserImportJob.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateUserImportJob.post.responses.482.description: TooManyRequestsException
paths./#CreateUserImportJob.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateUserImportJob.post.responses.483.description: PreconditionNotMetException
paths./#CreateUserImportJob.post.responses.483.schema.$ref: '#/definitions/PreconditionNotMetException'
paths./#CreateUserImportJob.post.responses.484.description: NotAuthorizedException
paths./#CreateUserImportJob.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateUserImportJob.post.responses.485.description: LimitExceededException
paths./#CreateUserImportJob.post.responses.485.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateUserImportJob.post.responses.486.description: InternalErrorException
paths./#CreateUserImportJob.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateUserPool.parameters.length: 9
paths./#CreateUserPool.parameters[0].$ref: '#/parameters/Action'
paths./#CreateUserPool.parameters[1].$ref: '#/parameters/Version'
paths./#CreateUserPool.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateUserPool.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateUserPool.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateUserPool.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateUserPool.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateUserPool.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateUserPool.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateUserPool.post.description: Creates a new Amazon Cognito user pool and
  sets the password policy for the pool.
paths./#CreateUserPool.post.operationId: CreateUserPool
paths./#CreateUserPool.post.parameters.length: 1
paths./#CreateUserPool.post.parameters[0].in: body
paths./#CreateUserPool.post.parameters[0].name: body
paths./#CreateUserPool.post.parameters[0].required: true
paths./#CreateUserPool.post.parameters[0].schema.$ref: '#/definitions/CreateUserPoolRequest'
paths./#CreateUserPool.post.responses.200.description: Success
paths./#CreateUserPool.post.responses.200.schema.$ref: '#/definitions/CreateUserPoolResponse'
paths./#CreateUserPool.post.responses.480.description: InvalidParameterException
paths./#CreateUserPool.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateUserPool.post.responses.481.description: TooManyRequestsException
paths./#CreateUserPool.post.responses.481.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateUserPool.post.responses.482.description: LimitExceededException
paths./#CreateUserPool.post.responses.482.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateUserPool.post.responses.483.description: InvalidSmsRoleAccessPolicyException
paths./#CreateUserPool.post.responses.483.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#CreateUserPool.post.responses.484.description: InvalidSmsRoleTrustRelationshipException
paths./#CreateUserPool.post.responses.484.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#CreateUserPool.post.responses.485.description: InvalidEmailRoleAccessPolicyException
paths./#CreateUserPool.post.responses.485.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#CreateUserPool.post.responses.486.description: NotAuthorizedException
paths./#CreateUserPool.post.responses.486.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateUserPool.post.responses.487.description: UserPoolTaggingException
paths./#CreateUserPool.post.responses.487.schema.$ref: '#/definitions/UserPoolTaggingException'
paths./#CreateUserPool.post.responses.488.description: InternalErrorException
paths./#CreateUserPool.post.responses.488.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateUserPoolClient.parameters.length: 9
paths./#CreateUserPoolClient.parameters[0].$ref: '#/parameters/Action'
paths./#CreateUserPoolClient.parameters[1].$ref: '#/parameters/Version'
paths./#CreateUserPoolClient.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateUserPoolClient.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateUserPoolClient.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateUserPoolClient.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateUserPoolClient.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateUserPoolClient.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateUserPoolClient.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateUserPoolClient.post.description: Creates the user pool client.
paths./#CreateUserPoolClient.post.operationId: CreateUserPoolClient
paths./#CreateUserPoolClient.post.parameters.length: 1
paths./#CreateUserPoolClient.post.parameters[0].in: body
paths./#CreateUserPoolClient.post.parameters[0].name: body
paths./#CreateUserPoolClient.post.parameters[0].required: true
paths./#CreateUserPoolClient.post.parameters[0].schema.$ref: '#/definitions/CreateUserPoolClientRequest'
paths./#CreateUserPoolClient.post.responses.200.description: Success
paths./#CreateUserPoolClient.post.responses.200.schema.$ref: '#/definitions/CreateUserPoolClientResponse'
paths./#CreateUserPoolClient.post.responses.480.description: InvalidParameterException
paths./#CreateUserPoolClient.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateUserPoolClient.post.responses.481.description: ResourceNotFoundException
paths./#CreateUserPoolClient.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateUserPoolClient.post.responses.482.description: TooManyRequestsException
paths./#CreateUserPoolClient.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#CreateUserPoolClient.post.responses.483.description: LimitExceededException
paths./#CreateUserPoolClient.post.responses.483.schema.$ref: '#/definitions/LimitExceededException'
paths./#CreateUserPoolClient.post.responses.484.description: NotAuthorizedException
paths./#CreateUserPoolClient.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateUserPoolClient.post.responses.485.description: ScopeDoesNotExistException
paths./#CreateUserPoolClient.post.responses.485.schema.$ref: '#/definitions/ScopeDoesNotExistException'
paths./#CreateUserPoolClient.post.responses.486.description: InvalidOAuthFlowException
paths./#CreateUserPoolClient.post.responses.486.schema.$ref: '#/definitions/InvalidOAuthFlowException'
paths./#CreateUserPoolClient.post.responses.487.description: InternalErrorException
paths./#CreateUserPoolClient.post.responses.487.schema.$ref: '#/definitions/InternalErrorException'
paths./#CreateUserPoolDomain.parameters.length: 9
paths./#CreateUserPoolDomain.parameters[0].$ref: '#/parameters/Action'
paths./#CreateUserPoolDomain.parameters[1].$ref: '#/parameters/Version'
paths./#CreateUserPoolDomain.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateUserPoolDomain.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateUserPoolDomain.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateUserPoolDomain.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateUserPoolDomain.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateUserPoolDomain.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateUserPoolDomain.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateUserPoolDomain.post.description: Creates a new domain for a user pool.
paths./#CreateUserPoolDomain.post.operationId: CreateUserPoolDomain
paths./#CreateUserPoolDomain.post.parameters.length: 1
paths./#CreateUserPoolDomain.post.parameters[0].in: body
paths./#CreateUserPoolDomain.post.parameters[0].name: body
paths./#CreateUserPoolDomain.post.parameters[0].required: true
paths./#CreateUserPoolDomain.post.parameters[0].schema.$ref: '#/definitions/CreateUserPoolDomainRequest'
paths./#CreateUserPoolDomain.post.responses.200.description: Success
paths./#CreateUserPoolDomain.post.responses.200.schema.$ref: '#/definitions/CreateUserPoolDomainResponse'
paths./#CreateUserPoolDomain.post.responses.480.description: InvalidParameterException
paths./#CreateUserPoolDomain.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateUserPoolDomain.post.responses.481.description: NotAuthorizedException
paths./#CreateUserPoolDomain.post.responses.481.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#CreateUserPoolDomain.post.responses.482.description: ResourceNotFoundException
paths./#CreateUserPoolDomain.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#CreateUserPoolDomain.post.responses.483.description: InternalErrorException
paths./#CreateUserPoolDomain.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteGroup.parameters.length: 9
paths./#DeleteGroup.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteGroup.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteGroup.post.description: <p>Deletes a group. Currently only groups with
  no members can be deleted.</p> <p>Requires developer credentials.</p>
paths./#DeleteGroup.post.operationId: DeleteGroup
paths./#DeleteGroup.post.parameters.length: 1
paths./#DeleteGroup.post.parameters[0].in: body
paths./#DeleteGroup.post.parameters[0].name: body
paths./#DeleteGroup.post.parameters[0].required: true
paths./#DeleteGroup.post.parameters[0].schema.$ref: '#/definitions/DeleteGroupRequest'
paths./#DeleteGroup.post.responses.200.description: Success
paths./#DeleteGroup.post.responses.480.description: ResourceNotFoundException
paths./#DeleteGroup.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteGroup.post.responses.481.description: InvalidParameterException
paths./#DeleteGroup.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteGroup.post.responses.482.description: TooManyRequestsException
paths./#DeleteGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteGroup.post.responses.483.description: NotAuthorizedException
paths./#DeleteGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteGroup.post.responses.484.description: InternalErrorException
paths./#DeleteGroup.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteIdentityProvider.parameters.length: 9
paths./#DeleteIdentityProvider.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteIdentityProvider.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteIdentityProvider.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteIdentityProvider.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteIdentityProvider.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteIdentityProvider.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteIdentityProvider.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteIdentityProvider.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteIdentityProvider.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteIdentityProvider.post.description: Deletes an identity provider for
  a user pool.
paths./#DeleteIdentityProvider.post.operationId: DeleteIdentityProvider
paths./#DeleteIdentityProvider.post.parameters.length: 1
paths./#DeleteIdentityProvider.post.parameters[0].in: body
paths./#DeleteIdentityProvider.post.parameters[0].name: body
paths./#DeleteIdentityProvider.post.parameters[0].required: true
paths./#DeleteIdentityProvider.post.parameters[0].schema.$ref: '#/definitions/DeleteIdentityProviderRequest'
paths./#DeleteIdentityProvider.post.responses.200.description: Success
paths./#DeleteIdentityProvider.post.responses.480.description: InvalidParameterException
paths./#DeleteIdentityProvider.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteIdentityProvider.post.responses.481.description: UnsupportedIdentityProviderException
paths./#DeleteIdentityProvider.post.responses.481.schema.$ref: '#/definitions/UnsupportedIdentityProviderException'
paths./#DeleteIdentityProvider.post.responses.482.description: ResourceNotFoundException
paths./#DeleteIdentityProvider.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteIdentityProvider.post.responses.483.description: NotAuthorizedException
paths./#DeleteIdentityProvider.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteIdentityProvider.post.responses.484.description: TooManyRequestsException
paths./#DeleteIdentityProvider.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteIdentityProvider.post.responses.485.description: InternalErrorException
paths./#DeleteIdentityProvider.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteResourceServer.parameters.length: 9
paths./#DeleteResourceServer.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteResourceServer.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteResourceServer.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteResourceServer.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteResourceServer.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteResourceServer.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteResourceServer.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteResourceServer.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteResourceServer.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteResourceServer.post.description: Deletes a resource server.
paths./#DeleteResourceServer.post.operationId: DeleteResourceServer
paths./#DeleteResourceServer.post.parameters.length: 1
paths./#DeleteResourceServer.post.parameters[0].in: body
paths./#DeleteResourceServer.post.parameters[0].name: body
paths./#DeleteResourceServer.post.parameters[0].required: true
paths./#DeleteResourceServer.post.parameters[0].schema.$ref: '#/definitions/DeleteResourceServerRequest'
paths./#DeleteResourceServer.post.responses.200.description: Success
paths./#DeleteResourceServer.post.responses.480.description: InvalidParameterException
paths./#DeleteResourceServer.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteResourceServer.post.responses.481.description: ResourceNotFoundException
paths./#DeleteResourceServer.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteResourceServer.post.responses.482.description: NotAuthorizedException
paths./#DeleteResourceServer.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteResourceServer.post.responses.483.description: TooManyRequestsException
paths./#DeleteResourceServer.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteResourceServer.post.responses.484.description: InternalErrorException
paths./#DeleteResourceServer.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteUser.parameters.length: 9
paths./#DeleteUser.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteUser.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteUser.post.description: Allows a user to delete himself or herself.
paths./#DeleteUser.post.operationId: DeleteUser
paths./#DeleteUser.post.parameters.length: 1
paths./#DeleteUser.post.parameters[0].in: body
paths./#DeleteUser.post.parameters[0].name: body
paths./#DeleteUser.post.parameters[0].required: true
paths./#DeleteUser.post.parameters[0].schema.$ref: '#/definitions/DeleteUserRequest'
paths./#DeleteUser.post.responses.200.description: Success
paths./#DeleteUser.post.responses.480.description: ResourceNotFoundException
paths./#DeleteUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteUser.post.responses.481.description: InvalidParameterException
paths./#DeleteUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteUser.post.responses.482.description: NotAuthorizedException
paths./#DeleteUser.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteUser.post.responses.483.description: TooManyRequestsException
paths./#DeleteUser.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteUser.post.responses.484.description: PasswordResetRequiredException
paths./#DeleteUser.post.responses.484.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#DeleteUser.post.responses.485.description: UserNotFoundException
paths./#DeleteUser.post.responses.485.schema.$ref: '#/definitions/UserNotFoundException'
paths./#DeleteUser.post.responses.486.description: UserNotConfirmedException
paths./#DeleteUser.post.responses.486.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#DeleteUser.post.responses.487.description: InternalErrorException
paths./#DeleteUser.post.responses.487.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteUserAttributes.parameters.length: 9
paths./#DeleteUserAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteUserAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteUserAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteUserAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteUserAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteUserAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteUserAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteUserAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteUserAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteUserAttributes.post.description: Deletes the attributes for a user.
paths./#DeleteUserAttributes.post.operationId: DeleteUserAttributes
paths./#DeleteUserAttributes.post.parameters.length: 1
paths./#DeleteUserAttributes.post.parameters[0].in: body
paths./#DeleteUserAttributes.post.parameters[0].name: body
paths./#DeleteUserAttributes.post.parameters[0].required: true
paths./#DeleteUserAttributes.post.parameters[0].schema.$ref: '#/definitions/DeleteUserAttributesRequest'
paths./#DeleteUserAttributes.post.responses.200.description: Success
paths./#DeleteUserAttributes.post.responses.200.schema.$ref: '#/definitions/DeleteUserAttributesResponse'
paths./#DeleteUserAttributes.post.responses.480.description: ResourceNotFoundException
paths./#DeleteUserAttributes.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteUserAttributes.post.responses.481.description: InvalidParameterException
paths./#DeleteUserAttributes.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteUserAttributes.post.responses.482.description: NotAuthorizedException
paths./#DeleteUserAttributes.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteUserAttributes.post.responses.483.description: TooManyRequestsException
paths./#DeleteUserAttributes.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteUserAttributes.post.responses.484.description: PasswordResetRequiredException
paths./#DeleteUserAttributes.post.responses.484.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#DeleteUserAttributes.post.responses.485.description: UserNotFoundException
paths./#DeleteUserAttributes.post.responses.485.schema.$ref: '#/definitions/UserNotFoundException'
paths./#DeleteUserAttributes.post.responses.486.description: UserNotConfirmedException
paths./#DeleteUserAttributes.post.responses.486.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#DeleteUserAttributes.post.responses.487.description: InternalErrorException
paths./#DeleteUserAttributes.post.responses.487.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteUserPool.parameters.length: 9
paths./#DeleteUserPool.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteUserPool.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteUserPool.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteUserPool.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteUserPool.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteUserPool.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteUserPool.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteUserPool.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteUserPool.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteUserPool.post.description: Deletes the specified Amazon Cognito user
  pool.
paths./#DeleteUserPool.post.operationId: DeleteUserPool
paths./#DeleteUserPool.post.parameters.length: 1
paths./#DeleteUserPool.post.parameters[0].in: body
paths./#DeleteUserPool.post.parameters[0].name: body
paths./#DeleteUserPool.post.parameters[0].required: true
paths./#DeleteUserPool.post.parameters[0].schema.$ref: '#/definitions/DeleteUserPoolRequest'
paths./#DeleteUserPool.post.responses.200.description: Success
paths./#DeleteUserPool.post.responses.480.description: ResourceNotFoundException
paths./#DeleteUserPool.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteUserPool.post.responses.481.description: InvalidParameterException
paths./#DeleteUserPool.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteUserPool.post.responses.482.description: TooManyRequestsException
paths./#DeleteUserPool.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteUserPool.post.responses.483.description: NotAuthorizedException
paths./#DeleteUserPool.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteUserPool.post.responses.484.description: UserImportInProgressException
paths./#DeleteUserPool.post.responses.484.schema.$ref: '#/definitions/UserImportInProgressException'
paths./#DeleteUserPool.post.responses.485.description: InternalErrorException
paths./#DeleteUserPool.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteUserPoolClient.parameters.length: 9
paths./#DeleteUserPoolClient.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteUserPoolClient.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteUserPoolClient.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteUserPoolClient.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteUserPoolClient.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteUserPoolClient.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteUserPoolClient.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteUserPoolClient.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteUserPoolClient.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteUserPoolClient.post.description: Allows the developer to delete the
  user pool client.
paths./#DeleteUserPoolClient.post.operationId: DeleteUserPoolClient
paths./#DeleteUserPoolClient.post.parameters.length: 1
paths./#DeleteUserPoolClient.post.parameters[0].in: body
paths./#DeleteUserPoolClient.post.parameters[0].name: body
paths./#DeleteUserPoolClient.post.parameters[0].required: true
paths./#DeleteUserPoolClient.post.parameters[0].schema.$ref: '#/definitions/DeleteUserPoolClientRequest'
paths./#DeleteUserPoolClient.post.responses.200.description: Success
paths./#DeleteUserPoolClient.post.responses.480.description: ResourceNotFoundException
paths./#DeleteUserPoolClient.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteUserPoolClient.post.responses.481.description: InvalidParameterException
paths./#DeleteUserPoolClient.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteUserPoolClient.post.responses.482.description: TooManyRequestsException
paths./#DeleteUserPoolClient.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DeleteUserPoolClient.post.responses.483.description: NotAuthorizedException
paths./#DeleteUserPoolClient.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteUserPoolClient.post.responses.484.description: InternalErrorException
paths./#DeleteUserPoolClient.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DeleteUserPoolDomain.parameters.length: 9
paths./#DeleteUserPoolDomain.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteUserPoolDomain.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteUserPoolDomain.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteUserPoolDomain.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteUserPoolDomain.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteUserPoolDomain.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteUserPoolDomain.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteUserPoolDomain.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteUserPoolDomain.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteUserPoolDomain.post.description: Deletes a domain for a user pool.
paths./#DeleteUserPoolDomain.post.operationId: DeleteUserPoolDomain
paths./#DeleteUserPoolDomain.post.parameters.length: 1
paths./#DeleteUserPoolDomain.post.parameters[0].in: body
paths./#DeleteUserPoolDomain.post.parameters[0].name: body
paths./#DeleteUserPoolDomain.post.parameters[0].required: true
paths./#DeleteUserPoolDomain.post.parameters[0].schema.$ref: '#/definitions/DeleteUserPoolDomainRequest'
paths./#DeleteUserPoolDomain.post.responses.200.description: Success
paths./#DeleteUserPoolDomain.post.responses.200.schema.$ref: '#/definitions/DeleteUserPoolDomainResponse'
paths./#DeleteUserPoolDomain.post.responses.480.description: NotAuthorizedException
paths./#DeleteUserPoolDomain.post.responses.480.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DeleteUserPoolDomain.post.responses.481.description: InvalidParameterException
paths./#DeleteUserPoolDomain.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteUserPoolDomain.post.responses.482.description: ResourceNotFoundException
paths./#DeleteUserPoolDomain.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DeleteUserPoolDomain.post.responses.483.description: InternalErrorException
paths./#DeleteUserPoolDomain.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeIdentityProvider.parameters.length: 9
paths./#DescribeIdentityProvider.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeIdentityProvider.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeIdentityProvider.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeIdentityProvider.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeIdentityProvider.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeIdentityProvider.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeIdentityProvider.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeIdentityProvider.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeIdentityProvider.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeIdentityProvider.post.description: Gets information about a specific
  identity provider.
paths./#DescribeIdentityProvider.post.operationId: DescribeIdentityProvider
paths./#DescribeIdentityProvider.post.parameters.length: 1
paths./#DescribeIdentityProvider.post.parameters[0].in: body
paths./#DescribeIdentityProvider.post.parameters[0].name: body
paths./#DescribeIdentityProvider.post.parameters[0].required: true
paths./#DescribeIdentityProvider.post.parameters[0].schema.$ref: '#/definitions/DescribeIdentityProviderRequest'
paths./#DescribeIdentityProvider.post.responses.200.description: Success
paths./#DescribeIdentityProvider.post.responses.200.schema.$ref: '#/definitions/DescribeIdentityProviderResponse'
paths./#DescribeIdentityProvider.post.responses.480.description: InvalidParameterException
paths./#DescribeIdentityProvider.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeIdentityProvider.post.responses.481.description: ResourceNotFoundException
paths./#DescribeIdentityProvider.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeIdentityProvider.post.responses.482.description: NotAuthorizedException
paths./#DescribeIdentityProvider.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeIdentityProvider.post.responses.483.description: TooManyRequestsException
paths./#DescribeIdentityProvider.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DescribeIdentityProvider.post.responses.484.description: InternalErrorException
paths./#DescribeIdentityProvider.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeResourceServer.parameters.length: 9
paths./#DescribeResourceServer.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeResourceServer.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeResourceServer.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeResourceServer.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeResourceServer.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeResourceServer.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeResourceServer.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeResourceServer.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeResourceServer.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeResourceServer.post.description: Describes a resource server.
paths./#DescribeResourceServer.post.operationId: DescribeResourceServer
paths./#DescribeResourceServer.post.parameters.length: 1
paths./#DescribeResourceServer.post.parameters[0].in: body
paths./#DescribeResourceServer.post.parameters[0].name: body
paths./#DescribeResourceServer.post.parameters[0].required: true
paths./#DescribeResourceServer.post.parameters[0].schema.$ref: '#/definitions/DescribeResourceServerRequest'
paths./#DescribeResourceServer.post.responses.200.description: Success
paths./#DescribeResourceServer.post.responses.200.schema.$ref: '#/definitions/DescribeResourceServerResponse'
paths./#DescribeResourceServer.post.responses.480.description: InvalidParameterException
paths./#DescribeResourceServer.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeResourceServer.post.responses.481.description: ResourceNotFoundException
paths./#DescribeResourceServer.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeResourceServer.post.responses.482.description: NotAuthorizedException
paths./#DescribeResourceServer.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeResourceServer.post.responses.483.description: TooManyRequestsException
paths./#DescribeResourceServer.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DescribeResourceServer.post.responses.484.description: InternalErrorException
paths./#DescribeResourceServer.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeUserImportJob.parameters.length: 9
paths./#DescribeUserImportJob.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeUserImportJob.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeUserImportJob.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeUserImportJob.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeUserImportJob.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeUserImportJob.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeUserImportJob.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeUserImportJob.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeUserImportJob.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeUserImportJob.post.description: Describes the user import job.
paths./#DescribeUserImportJob.post.operationId: DescribeUserImportJob
paths./#DescribeUserImportJob.post.parameters.length: 1
paths./#DescribeUserImportJob.post.parameters[0].in: body
paths./#DescribeUserImportJob.post.parameters[0].name: body
paths./#DescribeUserImportJob.post.parameters[0].required: true
paths./#DescribeUserImportJob.post.parameters[0].schema.$ref: '#/definitions/DescribeUserImportJobRequest'
paths./#DescribeUserImportJob.post.responses.200.description: Success
paths./#DescribeUserImportJob.post.responses.200.schema.$ref: '#/definitions/DescribeUserImportJobResponse'
paths./#DescribeUserImportJob.post.responses.480.description: ResourceNotFoundException
paths./#DescribeUserImportJob.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeUserImportJob.post.responses.481.description: InvalidParameterException
paths./#DescribeUserImportJob.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeUserImportJob.post.responses.482.description: TooManyRequestsException
paths./#DescribeUserImportJob.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DescribeUserImportJob.post.responses.483.description: NotAuthorizedException
paths./#DescribeUserImportJob.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeUserImportJob.post.responses.484.description: InternalErrorException
paths./#DescribeUserImportJob.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeUserPool.parameters.length: 9
paths./#DescribeUserPool.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeUserPool.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeUserPool.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeUserPool.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeUserPool.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeUserPool.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeUserPool.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeUserPool.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeUserPool.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeUserPool.post.description: Returns the configuration information and
  metadata of the specified user pool.
paths./#DescribeUserPool.post.operationId: DescribeUserPool
paths./#DescribeUserPool.post.parameters.length: 1
paths./#DescribeUserPool.post.parameters[0].in: body
paths./#DescribeUserPool.post.parameters[0].name: body
paths./#DescribeUserPool.post.parameters[0].required: true
paths./#DescribeUserPool.post.parameters[0].schema.$ref: '#/definitions/DescribeUserPoolRequest'
paths./#DescribeUserPool.post.responses.200.description: Success
paths./#DescribeUserPool.post.responses.200.schema.$ref: '#/definitions/DescribeUserPoolResponse'
paths./#DescribeUserPool.post.responses.480.description: ResourceNotFoundException
paths./#DescribeUserPool.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeUserPool.post.responses.481.description: InvalidParameterException
paths./#DescribeUserPool.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeUserPool.post.responses.482.description: TooManyRequestsException
paths./#DescribeUserPool.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DescribeUserPool.post.responses.483.description: NotAuthorizedException
paths./#DescribeUserPool.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeUserPool.post.responses.484.description: UserPoolTaggingException
paths./#DescribeUserPool.post.responses.484.schema.$ref: '#/definitions/UserPoolTaggingException'
paths./#DescribeUserPool.post.responses.485.description: InternalErrorException
paths./#DescribeUserPool.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeUserPoolClient.parameters.length: 9
paths./#DescribeUserPoolClient.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeUserPoolClient.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeUserPoolClient.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeUserPoolClient.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeUserPoolClient.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeUserPoolClient.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeUserPoolClient.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeUserPoolClient.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeUserPoolClient.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeUserPoolClient.post.description: Client method for returning the configuration
  information and metadata of the specified user pool client.
paths./#DescribeUserPoolClient.post.operationId: DescribeUserPoolClient
paths./#DescribeUserPoolClient.post.parameters.length: 1
paths./#DescribeUserPoolClient.post.parameters[0].in: body
paths./#DescribeUserPoolClient.post.parameters[0].name: body
paths./#DescribeUserPoolClient.post.parameters[0].required: true
paths./#DescribeUserPoolClient.post.parameters[0].schema.$ref: '#/definitions/DescribeUserPoolClientRequest'
paths./#DescribeUserPoolClient.post.responses.200.description: Success
paths./#DescribeUserPoolClient.post.responses.200.schema.$ref: '#/definitions/DescribeUserPoolClientResponse'
paths./#DescribeUserPoolClient.post.responses.480.description: ResourceNotFoundException
paths./#DescribeUserPoolClient.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeUserPoolClient.post.responses.481.description: InvalidParameterException
paths./#DescribeUserPoolClient.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeUserPoolClient.post.responses.482.description: TooManyRequestsException
paths./#DescribeUserPoolClient.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#DescribeUserPoolClient.post.responses.483.description: NotAuthorizedException
paths./#DescribeUserPoolClient.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeUserPoolClient.post.responses.484.description: InternalErrorException
paths./#DescribeUserPoolClient.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#DescribeUserPoolDomain.parameters.length: 9
paths./#DescribeUserPoolDomain.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeUserPoolDomain.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeUserPoolDomain.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeUserPoolDomain.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeUserPoolDomain.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeUserPoolDomain.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeUserPoolDomain.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeUserPoolDomain.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeUserPoolDomain.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeUserPoolDomain.post.description: Gets information about a domain.
paths./#DescribeUserPoolDomain.post.operationId: DescribeUserPoolDomain
paths./#DescribeUserPoolDomain.post.parameters.length: 1
paths./#DescribeUserPoolDomain.post.parameters[0].in: body
paths./#DescribeUserPoolDomain.post.parameters[0].name: body
paths./#DescribeUserPoolDomain.post.parameters[0].required: true
paths./#DescribeUserPoolDomain.post.parameters[0].schema.$ref: '#/definitions/DescribeUserPoolDomainRequest'
paths./#DescribeUserPoolDomain.post.responses.200.description: Success
paths./#DescribeUserPoolDomain.post.responses.200.schema.$ref: '#/definitions/DescribeUserPoolDomainResponse'
paths./#DescribeUserPoolDomain.post.responses.480.description: NotAuthorizedException
paths./#DescribeUserPoolDomain.post.responses.480.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#DescribeUserPoolDomain.post.responses.481.description: InvalidParameterException
paths./#DescribeUserPoolDomain.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeUserPoolDomain.post.responses.482.description: ResourceNotFoundException
paths./#DescribeUserPoolDomain.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#DescribeUserPoolDomain.post.responses.483.description: InternalErrorException
paths./#DescribeUserPoolDomain.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#ForgetDevice.parameters.length: 9
paths./#ForgetDevice.parameters[0].$ref: '#/parameters/Action'
paths./#ForgetDevice.parameters[1].$ref: '#/parameters/Version'
paths./#ForgetDevice.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ForgetDevice.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ForgetDevice.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ForgetDevice.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ForgetDevice.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ForgetDevice.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ForgetDevice.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ForgetDevice.post.description: Forgets the specified device.
paths./#ForgetDevice.post.operationId: ForgetDevice
paths./#ForgetDevice.post.parameters.length: 1
paths./#ForgetDevice.post.parameters[0].in: body
paths./#ForgetDevice.post.parameters[0].name: body
paths./#ForgetDevice.post.parameters[0].required: true
paths./#ForgetDevice.post.parameters[0].schema.$ref: '#/definitions/ForgetDeviceRequest'
paths./#ForgetDevice.post.responses.200.description: Success
paths./#ForgetDevice.post.responses.480.description: ResourceNotFoundException
paths./#ForgetDevice.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ForgetDevice.post.responses.481.description: InvalidParameterException
paths./#ForgetDevice.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ForgetDevice.post.responses.482.description: NotAuthorizedException
paths./#ForgetDevice.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ForgetDevice.post.responses.483.description: TooManyRequestsException
paths./#ForgetDevice.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ForgetDevice.post.responses.484.description: InvalidUserPoolConfigurationException
paths./#ForgetDevice.post.responses.484.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#ForgetDevice.post.responses.485.description: PasswordResetRequiredException
paths./#ForgetDevice.post.responses.485.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#ForgetDevice.post.responses.486.description: UserNotFoundException
paths./#ForgetDevice.post.responses.486.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ForgetDevice.post.responses.487.description: UserNotConfirmedException
paths./#ForgetDevice.post.responses.487.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ForgetDevice.post.responses.488.description: InternalErrorException
paths./#ForgetDevice.post.responses.488.schema.$ref: '#/definitions/InternalErrorException'
paths./#ForgotPassword.parameters.length: 9
paths./#ForgotPassword.parameters[0].$ref: '#/parameters/Action'
paths./#ForgotPassword.parameters[1].$ref: '#/parameters/Version'
paths./#ForgotPassword.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ForgotPassword.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ForgotPassword.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ForgotPassword.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ForgotPassword.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ForgotPassword.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ForgotPassword.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ForgotPassword.post.description: Calling this API causes a message to be sent
  to the end user with a confirmation code that is required to change the user's password.
  For the <code>Username</code> parameter, you can use the username or user alias.
  If a verified phone number exists for the user, the confirmation code is sent to
  the phone number. Otherwise, if a verified email exists, the confirmation code is
  sent to the email. If neither a verified phone number nor a verified email exists,
  <code>InvalidParameterException</code> is thrown. To use the confirmation code for
  resetting the password, call <a href="API_ConfirmForgotPassword.html">ConfirmForgotPassword</a>.
paths./#ForgotPassword.post.operationId: ForgotPassword
paths./#ForgotPassword.post.parameters.length: 1
paths./#ForgotPassword.post.parameters[0].in: body
paths./#ForgotPassword.post.parameters[0].name: body
paths./#ForgotPassword.post.parameters[0].required: true
paths./#ForgotPassword.post.parameters[0].schema.$ref: '#/definitions/ForgotPasswordRequest'
paths./#ForgotPassword.post.responses.200.description: Success
paths./#ForgotPassword.post.responses.200.schema.$ref: '#/definitions/ForgotPasswordResponse'
paths./#ForgotPassword.post.responses.480.description: ResourceNotFoundException
paths./#ForgotPassword.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ForgotPassword.post.responses.481.description: InvalidParameterException
paths./#ForgotPassword.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ForgotPassword.post.responses.482.description: UnexpectedLambdaException
paths./#ForgotPassword.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#ForgotPassword.post.responses.483.description: UserLambdaValidationException
paths./#ForgotPassword.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#ForgotPassword.post.responses.484.description: NotAuthorizedException
paths./#ForgotPassword.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ForgotPassword.post.responses.485.description: InvalidLambdaResponseException
paths./#ForgotPassword.post.responses.485.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#ForgotPassword.post.responses.486.description: TooManyRequestsException
paths./#ForgotPassword.post.responses.486.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ForgotPassword.post.responses.487.description: LimitExceededException
paths./#ForgotPassword.post.responses.487.schema.$ref: '#/definitions/LimitExceededException'
paths./#ForgotPassword.post.responses.488.description: InvalidSmsRoleAccessPolicyException
paths./#ForgotPassword.post.responses.488.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#ForgotPassword.post.responses.489.description: InvalidSmsRoleTrustRelationshipException
paths./#ForgotPassword.post.responses.489.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#ForgotPassword.post.responses.490.description: InvalidEmailRoleAccessPolicyException
paths./#ForgotPassword.post.responses.490.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#ForgotPassword.post.responses.491.description: CodeDeliveryFailureException
paths./#ForgotPassword.post.responses.491.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#ForgotPassword.post.responses.492.description: UserNotFoundException
paths./#ForgotPassword.post.responses.492.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ForgotPassword.post.responses.493.description: UserNotConfirmedException
paths./#ForgotPassword.post.responses.493.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ForgotPassword.post.responses.494.description: InternalErrorException
paths./#ForgotPassword.post.responses.494.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetCSVHeader.parameters.length: 9
paths./#GetCSVHeader.parameters[0].$ref: '#/parameters/Action'
paths./#GetCSVHeader.parameters[1].$ref: '#/parameters/Version'
paths./#GetCSVHeader.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetCSVHeader.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetCSVHeader.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetCSVHeader.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetCSVHeader.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetCSVHeader.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetCSVHeader.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetCSVHeader.post.description: Gets the header information for the .csv file
  to be used as input for the user import job.
paths./#GetCSVHeader.post.operationId: GetCSVHeader
paths./#GetCSVHeader.post.parameters.length: 1
paths./#GetCSVHeader.post.parameters[0].in: body
paths./#GetCSVHeader.post.parameters[0].name: body
paths./#GetCSVHeader.post.parameters[0].required: true
paths./#GetCSVHeader.post.parameters[0].schema.$ref: '#/definitions/GetCSVHeaderRequest'
paths./#GetCSVHeader.post.responses.200.description: Success
paths./#GetCSVHeader.post.responses.200.schema.$ref: '#/definitions/GetCSVHeaderResponse'
paths./#GetCSVHeader.post.responses.480.description: ResourceNotFoundException
paths./#GetCSVHeader.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetCSVHeader.post.responses.481.description: InvalidParameterException
paths./#GetCSVHeader.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetCSVHeader.post.responses.482.description: TooManyRequestsException
paths./#GetCSVHeader.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetCSVHeader.post.responses.483.description: NotAuthorizedException
paths./#GetCSVHeader.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetCSVHeader.post.responses.484.description: InternalErrorException
paths./#GetCSVHeader.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetDevice.parameters.length: 9
paths./#GetDevice.parameters[0].$ref: '#/parameters/Action'
paths./#GetDevice.parameters[1].$ref: '#/parameters/Version'
paths./#GetDevice.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetDevice.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetDevice.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetDevice.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetDevice.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetDevice.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetDevice.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetDevice.post.description: Gets the device.
paths./#GetDevice.post.operationId: GetDevice
paths./#GetDevice.post.parameters.length: 1
paths./#GetDevice.post.parameters[0].in: body
paths./#GetDevice.post.parameters[0].name: body
paths./#GetDevice.post.parameters[0].required: true
paths./#GetDevice.post.parameters[0].schema.$ref: '#/definitions/GetDeviceRequest'
paths./#GetDevice.post.responses.200.description: Success
paths./#GetDevice.post.responses.200.schema.$ref: '#/definitions/GetDeviceResponse'
paths./#GetDevice.post.responses.480.description: ResourceNotFoundException
paths./#GetDevice.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetDevice.post.responses.481.description: InvalidParameterException
paths./#GetDevice.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetDevice.post.responses.482.description: InvalidUserPoolConfigurationException
paths./#GetDevice.post.responses.482.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#GetDevice.post.responses.483.description: NotAuthorizedException
paths./#GetDevice.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetDevice.post.responses.484.description: TooManyRequestsException
paths./#GetDevice.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetDevice.post.responses.485.description: PasswordResetRequiredException
paths./#GetDevice.post.responses.485.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#GetDevice.post.responses.486.description: UserNotFoundException
paths./#GetDevice.post.responses.486.schema.$ref: '#/definitions/UserNotFoundException'
paths./#GetDevice.post.responses.487.description: UserNotConfirmedException
paths./#GetDevice.post.responses.487.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#GetDevice.post.responses.488.description: InternalErrorException
paths./#GetDevice.post.responses.488.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetGroup.parameters.length: 9
paths./#GetGroup.parameters[0].$ref: '#/parameters/Action'
paths./#GetGroup.parameters[1].$ref: '#/parameters/Version'
paths./#GetGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetGroup.post.description: <p>Gets a group.</p> <p>Requires developer credentials.</p>
paths./#GetGroup.post.operationId: GetGroup
paths./#GetGroup.post.parameters.length: 1
paths./#GetGroup.post.parameters[0].in: body
paths./#GetGroup.post.parameters[0].name: body
paths./#GetGroup.post.parameters[0].required: true
paths./#GetGroup.post.parameters[0].schema.$ref: '#/definitions/GetGroupRequest'
paths./#GetGroup.post.responses.200.description: Success
paths./#GetGroup.post.responses.200.schema.$ref: '#/definitions/GetGroupResponse'
paths./#GetGroup.post.responses.480.description: ResourceNotFoundException
paths./#GetGroup.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetGroup.post.responses.481.description: InvalidParameterException
paths./#GetGroup.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetGroup.post.responses.482.description: TooManyRequestsException
paths./#GetGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetGroup.post.responses.483.description: NotAuthorizedException
paths./#GetGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetGroup.post.responses.484.description: InternalErrorException
paths./#GetGroup.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetIdentityProviderByIdentifier.parameters.length: 9
paths./#GetIdentityProviderByIdentifier.parameters[0].$ref: '#/parameters/Action'
paths./#GetIdentityProviderByIdentifier.parameters[1].$ref: '#/parameters/Version'
paths./#GetIdentityProviderByIdentifier.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetIdentityProviderByIdentifier.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetIdentityProviderByIdentifier.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetIdentityProviderByIdentifier.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetIdentityProviderByIdentifier.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetIdentityProviderByIdentifier.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetIdentityProviderByIdentifier.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetIdentityProviderByIdentifier.post.description: Gets the specified identity
  provider.
paths./#GetIdentityProviderByIdentifier.post.operationId: GetIdentityProviderByIdentifier
paths./#GetIdentityProviderByIdentifier.post.parameters.length: 1
paths./#GetIdentityProviderByIdentifier.post.parameters[0].in: body
paths./#GetIdentityProviderByIdentifier.post.parameters[0].name: body
paths./#GetIdentityProviderByIdentifier.post.parameters[0].required: true
paths./#GetIdentityProviderByIdentifier.post.parameters[0].schema.$ref: '#/definitions/GetIdentityProviderByIdentifierRequest'
paths./#GetIdentityProviderByIdentifier.post.responses.200.description: Success
paths./#GetIdentityProviderByIdentifier.post.responses.200.schema.$ref: '#/definitions/GetIdentityProviderByIdentifierResponse'
paths./#GetIdentityProviderByIdentifier.post.responses.480.description: InvalidParameterException
paths./#GetIdentityProviderByIdentifier.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetIdentityProviderByIdentifier.post.responses.481.description: ResourceNotFoundException
paths./#GetIdentityProviderByIdentifier.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetIdentityProviderByIdentifier.post.responses.482.description: NotAuthorizedException
paths./#GetIdentityProviderByIdentifier.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetIdentityProviderByIdentifier.post.responses.483.description: TooManyRequestsException
paths./#GetIdentityProviderByIdentifier.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetIdentityProviderByIdentifier.post.responses.484.description: InternalErrorException
paths./#GetIdentityProviderByIdentifier.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetUICustomization.parameters.length: 9
paths./#GetUICustomization.parameters[0].$ref: '#/parameters/Action'
paths./#GetUICustomization.parameters[1].$ref: '#/parameters/Version'
paths./#GetUICustomization.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetUICustomization.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetUICustomization.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetUICustomization.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetUICustomization.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetUICustomization.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetUICustomization.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetUICustomization.post.description: Gets the UI Customization information
  for a particular app client's app UI, if there is something set. If nothing is set
  for the particular client, but there is an existing pool level customization (app
  <code>clientId</code> will be <code>ALL</code>), then that is returned. If nothing
  is present, then an empty shape is returned.
paths./#GetUICustomization.post.operationId: GetUICustomization
paths./#GetUICustomization.post.parameters.length: 1
paths./#GetUICustomization.post.parameters[0].in: body
paths./#GetUICustomization.post.parameters[0].name: body
paths./#GetUICustomization.post.parameters[0].required: true
paths./#GetUICustomization.post.parameters[0].schema.$ref: '#/definitions/GetUICustomizationRequest'
paths./#GetUICustomization.post.responses.200.description: Success
paths./#GetUICustomization.post.responses.200.schema.$ref: '#/definitions/GetUICustomizationResponse'
paths./#GetUICustomization.post.responses.480.description: InvalidParameterException
paths./#GetUICustomization.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetUICustomization.post.responses.481.description: ResourceNotFoundException
paths./#GetUICustomization.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetUICustomization.post.responses.482.description: NotAuthorizedException
paths./#GetUICustomization.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetUICustomization.post.responses.483.description: TooManyRequestsException
paths./#GetUICustomization.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetUICustomization.post.responses.484.description: InternalErrorException
paths./#GetUICustomization.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetUser.parameters.length: 9
paths./#GetUser.parameters[0].$ref: '#/parameters/Action'
paths./#GetUser.parameters[1].$ref: '#/parameters/Version'
paths./#GetUser.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetUser.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetUser.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetUser.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetUser.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetUser.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetUser.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetUser.post.description: Gets the user attributes and metadata for a user.
paths./#GetUser.post.operationId: GetUser
paths./#GetUser.post.parameters.length: 1
paths./#GetUser.post.parameters[0].in: body
paths./#GetUser.post.parameters[0].name: body
paths./#GetUser.post.parameters[0].required: true
paths./#GetUser.post.parameters[0].schema.$ref: '#/definitions/GetUserRequest'
paths./#GetUser.post.responses.200.description: Success
paths./#GetUser.post.responses.200.schema.$ref: '#/definitions/GetUserResponse'
paths./#GetUser.post.responses.480.description: ResourceNotFoundException
paths./#GetUser.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetUser.post.responses.481.description: InvalidParameterException
paths./#GetUser.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetUser.post.responses.482.description: NotAuthorizedException
paths./#GetUser.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetUser.post.responses.483.description: TooManyRequestsException
paths./#GetUser.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetUser.post.responses.484.description: PasswordResetRequiredException
paths./#GetUser.post.responses.484.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#GetUser.post.responses.485.description: UserNotFoundException
paths./#GetUser.post.responses.485.schema.$ref: '#/definitions/UserNotFoundException'
paths./#GetUser.post.responses.486.description: UserNotConfirmedException
paths./#GetUser.post.responses.486.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#GetUser.post.responses.487.description: InternalErrorException
paths./#GetUser.post.responses.487.schema.$ref: '#/definitions/InternalErrorException'
paths./#GetUserAttributeVerificationCode.parameters.length: 9
paths./#GetUserAttributeVerificationCode.parameters[0].$ref: '#/parameters/Action'
paths./#GetUserAttributeVerificationCode.parameters[1].$ref: '#/parameters/Version'
paths./#GetUserAttributeVerificationCode.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GetUserAttributeVerificationCode.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GetUserAttributeVerificationCode.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GetUserAttributeVerificationCode.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GetUserAttributeVerificationCode.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GetUserAttributeVerificationCode.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GetUserAttributeVerificationCode.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GetUserAttributeVerificationCode.post.description: Gets the user attribute
  verification code for the specified attribute name.
paths./#GetUserAttributeVerificationCode.post.operationId: GetUserAttributeVerificationCode
paths./#GetUserAttributeVerificationCode.post.parameters.length: 1
paths./#GetUserAttributeVerificationCode.post.parameters[0].in: body
paths./#GetUserAttributeVerificationCode.post.parameters[0].name: body
paths./#GetUserAttributeVerificationCode.post.parameters[0].required: true
paths./#GetUserAttributeVerificationCode.post.parameters[0].schema.$ref: '#/definitions/GetUserAttributeVerificationCodeRequest'
paths./#GetUserAttributeVerificationCode.post.responses.200.description: Success
paths./#GetUserAttributeVerificationCode.post.responses.200.schema.$ref: '#/definitions/GetUserAttributeVerificationCodeResponse'
paths./#GetUserAttributeVerificationCode.post.responses.480.description: ResourceNotFoundException
paths./#GetUserAttributeVerificationCode.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GetUserAttributeVerificationCode.post.responses.481.description: InvalidParameterException
paths./#GetUserAttributeVerificationCode.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GetUserAttributeVerificationCode.post.responses.482.description: TooManyRequestsException
paths./#GetUserAttributeVerificationCode.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GetUserAttributeVerificationCode.post.responses.483.description: NotAuthorizedException
paths./#GetUserAttributeVerificationCode.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GetUserAttributeVerificationCode.post.responses.484.description: UnexpectedLambdaException
paths./#GetUserAttributeVerificationCode.post.responses.484.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#GetUserAttributeVerificationCode.post.responses.485.description: UserLambdaValidationException
paths./#GetUserAttributeVerificationCode.post.responses.485.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#GetUserAttributeVerificationCode.post.responses.486.description: InvalidLambdaResponseException
paths./#GetUserAttributeVerificationCode.post.responses.486.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#GetUserAttributeVerificationCode.post.responses.487.description: InvalidSmsRoleAccessPolicyException
paths./#GetUserAttributeVerificationCode.post.responses.487.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#GetUserAttributeVerificationCode.post.responses.488.description: InvalidSmsRoleTrustRelationshipException
paths./#GetUserAttributeVerificationCode.post.responses.488.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#GetUserAttributeVerificationCode.post.responses.489.description: InvalidEmailRoleAccessPolicyException
paths./#GetUserAttributeVerificationCode.post.responses.489.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#GetUserAttributeVerificationCode.post.responses.490.description: CodeDeliveryFailureException
paths./#GetUserAttributeVerificationCode.post.responses.490.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#GetUserAttributeVerificationCode.post.responses.491.description: LimitExceededException
paths./#GetUserAttributeVerificationCode.post.responses.491.schema.$ref: '#/definitions/LimitExceededException'
paths./#GetUserAttributeVerificationCode.post.responses.492.description: PasswordResetRequiredException
paths./#GetUserAttributeVerificationCode.post.responses.492.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#GetUserAttributeVerificationCode.post.responses.493.description: UserNotFoundException
paths./#GetUserAttributeVerificationCode.post.responses.493.schema.$ref: '#/definitions/UserNotFoundException'
paths./#GetUserAttributeVerificationCode.post.responses.494.description: UserNotConfirmedException
paths./#GetUserAttributeVerificationCode.post.responses.494.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#GetUserAttributeVerificationCode.post.responses.495.description: InternalErrorException
paths./#GetUserAttributeVerificationCode.post.responses.495.schema.$ref: '#/definitions/InternalErrorException'
paths./#GlobalSignOut.parameters.length: 9
paths./#GlobalSignOut.parameters[0].$ref: '#/parameters/Action'
paths./#GlobalSignOut.parameters[1].$ref: '#/parameters/Version'
paths./#GlobalSignOut.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#GlobalSignOut.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#GlobalSignOut.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#GlobalSignOut.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#GlobalSignOut.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#GlobalSignOut.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#GlobalSignOut.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#GlobalSignOut.post.description: Signs out users from all devices.
paths./#GlobalSignOut.post.operationId: GlobalSignOut
paths./#GlobalSignOut.post.parameters.length: 1
paths./#GlobalSignOut.post.parameters[0].in: body
paths./#GlobalSignOut.post.parameters[0].name: body
paths./#GlobalSignOut.post.parameters[0].required: true
paths./#GlobalSignOut.post.parameters[0].schema.$ref: '#/definitions/GlobalSignOutRequest'
paths./#GlobalSignOut.post.responses.200.description: Success
paths./#GlobalSignOut.post.responses.200.schema.$ref: '#/definitions/GlobalSignOutResponse'
paths./#GlobalSignOut.post.responses.480.description: ResourceNotFoundException
paths./#GlobalSignOut.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#GlobalSignOut.post.responses.481.description: InvalidParameterException
paths./#GlobalSignOut.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#GlobalSignOut.post.responses.482.description: NotAuthorizedException
paths./#GlobalSignOut.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#GlobalSignOut.post.responses.483.description: TooManyRequestsException
paths./#GlobalSignOut.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#GlobalSignOut.post.responses.484.description: PasswordResetRequiredException
paths./#GlobalSignOut.post.responses.484.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#GlobalSignOut.post.responses.485.description: UserNotConfirmedException
paths./#GlobalSignOut.post.responses.485.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#GlobalSignOut.post.responses.486.description: InternalErrorException
paths./#GlobalSignOut.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#InitiateAuth.parameters.length: 9
paths./#InitiateAuth.parameters[0].$ref: '#/parameters/Action'
paths./#InitiateAuth.parameters[1].$ref: '#/parameters/Version'
paths./#InitiateAuth.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#InitiateAuth.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#InitiateAuth.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#InitiateAuth.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#InitiateAuth.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#InitiateAuth.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#InitiateAuth.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#InitiateAuth.post.description: Initiates the authentication flow.
paths./#InitiateAuth.post.operationId: InitiateAuth
paths./#InitiateAuth.post.parameters.length: 1
paths./#InitiateAuth.post.parameters[0].in: body
paths./#InitiateAuth.post.parameters[0].name: body
paths./#InitiateAuth.post.parameters[0].required: true
paths./#InitiateAuth.post.parameters[0].schema.$ref: '#/definitions/InitiateAuthRequest'
paths./#InitiateAuth.post.responses.200.description: Success
paths./#InitiateAuth.post.responses.200.schema.$ref: '#/definitions/InitiateAuthResponse'
paths./#InitiateAuth.post.responses.480.description: ResourceNotFoundException
paths./#InitiateAuth.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#InitiateAuth.post.responses.481.description: InvalidParameterException
paths./#InitiateAuth.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#InitiateAuth.post.responses.482.description: NotAuthorizedException
paths./#InitiateAuth.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#InitiateAuth.post.responses.483.description: TooManyRequestsException
paths./#InitiateAuth.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#InitiateAuth.post.responses.484.description: UnexpectedLambdaException
paths./#InitiateAuth.post.responses.484.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#InitiateAuth.post.responses.485.description: InvalidUserPoolConfigurationException
paths./#InitiateAuth.post.responses.485.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#InitiateAuth.post.responses.486.description: UserLambdaValidationException
paths./#InitiateAuth.post.responses.486.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#InitiateAuth.post.responses.487.description: InvalidLambdaResponseException
paths./#InitiateAuth.post.responses.487.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#InitiateAuth.post.responses.488.description: PasswordResetRequiredException
paths./#InitiateAuth.post.responses.488.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#InitiateAuth.post.responses.489.description: UserNotFoundException
paths./#InitiateAuth.post.responses.489.schema.$ref: '#/definitions/UserNotFoundException'
paths./#InitiateAuth.post.responses.490.description: UserNotConfirmedException
paths./#InitiateAuth.post.responses.490.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#InitiateAuth.post.responses.491.description: InternalErrorException
paths./#InitiateAuth.post.responses.491.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListDevices.parameters.length: 9
paths./#ListDevices.parameters[0].$ref: '#/parameters/Action'
paths./#ListDevices.parameters[1].$ref: '#/parameters/Version'
paths./#ListDevices.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListDevices.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListDevices.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListDevices.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListDevices.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListDevices.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListDevices.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListDevices.post.description: Lists the devices.
paths./#ListDevices.post.operationId: ListDevices
paths./#ListDevices.post.parameters.length: 1
paths./#ListDevices.post.parameters[0].in: body
paths./#ListDevices.post.parameters[0].name: body
paths./#ListDevices.post.parameters[0].required: true
paths./#ListDevices.post.parameters[0].schema.$ref: '#/definitions/ListDevicesRequest'
paths./#ListDevices.post.responses.200.description: Success
paths./#ListDevices.post.responses.200.schema.$ref: '#/definitions/ListDevicesResponse'
paths./#ListDevices.post.responses.480.description: InvalidParameterException
paths./#ListDevices.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListDevices.post.responses.481.description: ResourceNotFoundException
paths./#ListDevices.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListDevices.post.responses.482.description: NotAuthorizedException
paths./#ListDevices.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListDevices.post.responses.483.description: InvalidUserPoolConfigurationException
paths./#ListDevices.post.responses.483.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#ListDevices.post.responses.484.description: TooManyRequestsException
paths./#ListDevices.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListDevices.post.responses.485.description: PasswordResetRequiredException
paths./#ListDevices.post.responses.485.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#ListDevices.post.responses.486.description: UserNotFoundException
paths./#ListDevices.post.responses.486.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ListDevices.post.responses.487.description: UserNotConfirmedException
paths./#ListDevices.post.responses.487.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#ListDevices.post.responses.488.description: InternalErrorException
paths./#ListDevices.post.responses.488.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListGroups.parameters.length: 9
paths./#ListGroups.parameters[0].$ref: '#/parameters/Action'
paths./#ListGroups.parameters[1].$ref: '#/parameters/Version'
paths./#ListGroups.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListGroups.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListGroups.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListGroups.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListGroups.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListGroups.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListGroups.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListGroups.post.description: <p>Lists the groups associated with a user pool.</p>
  <p>Requires developer credentials.</p>
paths./#ListGroups.post.operationId: ListGroups
paths./#ListGroups.post.parameters.length: 1
paths./#ListGroups.post.parameters[0].in: body
paths./#ListGroups.post.parameters[0].name: body
paths./#ListGroups.post.parameters[0].required: true
paths./#ListGroups.post.parameters[0].schema.$ref: '#/definitions/ListGroupsRequest'
paths./#ListGroups.post.responses.200.description: Success
paths./#ListGroups.post.responses.200.schema.$ref: '#/definitions/ListGroupsResponse'
paths./#ListGroups.post.responses.480.description: InvalidParameterException
paths./#ListGroups.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListGroups.post.responses.481.description: ResourceNotFoundException
paths./#ListGroups.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListGroups.post.responses.482.description: TooManyRequestsException
paths./#ListGroups.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListGroups.post.responses.483.description: NotAuthorizedException
paths./#ListGroups.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListGroups.post.responses.484.description: InternalErrorException
paths./#ListGroups.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListIdentityProviders.parameters.length: 9
paths./#ListIdentityProviders.parameters[0].$ref: '#/parameters/Action'
paths./#ListIdentityProviders.parameters[1].$ref: '#/parameters/Version'
paths./#ListIdentityProviders.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListIdentityProviders.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListIdentityProviders.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListIdentityProviders.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListIdentityProviders.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListIdentityProviders.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListIdentityProviders.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListIdentityProviders.post.description: Lists information about all identity
  providers for a user pool.
paths./#ListIdentityProviders.post.operationId: ListIdentityProviders
paths./#ListIdentityProviders.post.parameters.length: 1
paths./#ListIdentityProviders.post.parameters[0].in: body
paths./#ListIdentityProviders.post.parameters[0].name: body
paths./#ListIdentityProviders.post.parameters[0].required: true
paths./#ListIdentityProviders.post.parameters[0].schema.$ref: '#/definitions/ListIdentityProvidersRequest'
paths./#ListIdentityProviders.post.responses.200.description: Success
paths./#ListIdentityProviders.post.responses.200.schema.$ref: '#/definitions/ListIdentityProvidersResponse'
paths./#ListIdentityProviders.post.responses.480.description: InvalidParameterException
paths./#ListIdentityProviders.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListIdentityProviders.post.responses.481.description: ResourceNotFoundException
paths./#ListIdentityProviders.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListIdentityProviders.post.responses.482.description: NotAuthorizedException
paths./#ListIdentityProviders.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListIdentityProviders.post.responses.483.description: TooManyRequestsException
paths./#ListIdentityProviders.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListIdentityProviders.post.responses.484.description: InternalErrorException
paths./#ListIdentityProviders.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListResourceServers.parameters.length: 9
paths./#ListResourceServers.parameters[0].$ref: '#/parameters/Action'
paths./#ListResourceServers.parameters[1].$ref: '#/parameters/Version'
paths./#ListResourceServers.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListResourceServers.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListResourceServers.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListResourceServers.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListResourceServers.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListResourceServers.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListResourceServers.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListResourceServers.post.description: Lists the resource servers for a user
  pool.
paths./#ListResourceServers.post.operationId: ListResourceServers
paths./#ListResourceServers.post.parameters.length: 1
paths./#ListResourceServers.post.parameters[0].in: body
paths./#ListResourceServers.post.parameters[0].name: body
paths./#ListResourceServers.post.parameters[0].required: true
paths./#ListResourceServers.post.parameters[0].schema.$ref: '#/definitions/ListResourceServersRequest'
paths./#ListResourceServers.post.responses.200.description: Success
paths./#ListResourceServers.post.responses.200.schema.$ref: '#/definitions/ListResourceServersResponse'
paths./#ListResourceServers.post.responses.480.description: InvalidParameterException
paths./#ListResourceServers.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListResourceServers.post.responses.481.description: ResourceNotFoundException
paths./#ListResourceServers.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListResourceServers.post.responses.482.description: NotAuthorizedException
paths./#ListResourceServers.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListResourceServers.post.responses.483.description: TooManyRequestsException
paths./#ListResourceServers.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListResourceServers.post.responses.484.description: InternalErrorException
paths./#ListResourceServers.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListUserImportJobs.parameters.length: 9
paths./#ListUserImportJobs.parameters[0].$ref: '#/parameters/Action'
paths./#ListUserImportJobs.parameters[1].$ref: '#/parameters/Version'
paths./#ListUserImportJobs.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListUserImportJobs.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListUserImportJobs.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListUserImportJobs.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListUserImportJobs.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListUserImportJobs.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListUserImportJobs.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListUserImportJobs.post.description: Lists the user import jobs.
paths./#ListUserImportJobs.post.operationId: ListUserImportJobs
paths./#ListUserImportJobs.post.parameters.length: 1
paths./#ListUserImportJobs.post.parameters[0].in: body
paths./#ListUserImportJobs.post.parameters[0].name: body
paths./#ListUserImportJobs.post.parameters[0].required: true
paths./#ListUserImportJobs.post.parameters[0].schema.$ref: '#/definitions/ListUserImportJobsRequest'
paths./#ListUserImportJobs.post.responses.200.description: Success
paths./#ListUserImportJobs.post.responses.200.schema.$ref: '#/definitions/ListUserImportJobsResponse'
paths./#ListUserImportJobs.post.responses.480.description: ResourceNotFoundException
paths./#ListUserImportJobs.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListUserImportJobs.post.responses.481.description: InvalidParameterException
paths./#ListUserImportJobs.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListUserImportJobs.post.responses.482.description: TooManyRequestsException
paths./#ListUserImportJobs.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListUserImportJobs.post.responses.483.description: NotAuthorizedException
paths./#ListUserImportJobs.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListUserImportJobs.post.responses.484.description: InternalErrorException
paths./#ListUserImportJobs.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListUserPoolClients.parameters.length: 9
paths./#ListUserPoolClients.parameters[0].$ref: '#/parameters/Action'
paths./#ListUserPoolClients.parameters[1].$ref: '#/parameters/Version'
paths./#ListUserPoolClients.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListUserPoolClients.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListUserPoolClients.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListUserPoolClients.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListUserPoolClients.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListUserPoolClients.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListUserPoolClients.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListUserPoolClients.post.description: Lists the clients that have been created
  for the specified user pool.
paths./#ListUserPoolClients.post.operationId: ListUserPoolClients
paths./#ListUserPoolClients.post.parameters.length: 1
paths./#ListUserPoolClients.post.parameters[0].in: body
paths./#ListUserPoolClients.post.parameters[0].name: body
paths./#ListUserPoolClients.post.parameters[0].required: true
paths./#ListUserPoolClients.post.parameters[0].schema.$ref: '#/definitions/ListUserPoolClientsRequest'
paths./#ListUserPoolClients.post.responses.200.description: Success
paths./#ListUserPoolClients.post.responses.200.schema.$ref: '#/definitions/ListUserPoolClientsResponse'
paths./#ListUserPoolClients.post.responses.480.description: InvalidParameterException
paths./#ListUserPoolClients.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListUserPoolClients.post.responses.481.description: ResourceNotFoundException
paths./#ListUserPoolClients.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListUserPoolClients.post.responses.482.description: TooManyRequestsException
paths./#ListUserPoolClients.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListUserPoolClients.post.responses.483.description: NotAuthorizedException
paths./#ListUserPoolClients.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListUserPoolClients.post.responses.484.description: InternalErrorException
paths./#ListUserPoolClients.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListUserPools.parameters.length: 9
paths./#ListUserPools.parameters[0].$ref: '#/parameters/Action'
paths./#ListUserPools.parameters[1].$ref: '#/parameters/Version'
paths./#ListUserPools.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListUserPools.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListUserPools.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListUserPools.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListUserPools.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListUserPools.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListUserPools.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListUserPools.post.description: Lists the user pools associated with an AWS
  account.
paths./#ListUserPools.post.operationId: ListUserPools
paths./#ListUserPools.post.parameters.length: 1
paths./#ListUserPools.post.parameters[0].in: body
paths./#ListUserPools.post.parameters[0].name: body
paths./#ListUserPools.post.parameters[0].required: true
paths./#ListUserPools.post.parameters[0].schema.$ref: '#/definitions/ListUserPoolsRequest'
paths./#ListUserPools.post.responses.200.description: Success
paths./#ListUserPools.post.responses.200.schema.$ref: '#/definitions/ListUserPoolsResponse'
paths./#ListUserPools.post.responses.480.description: InvalidParameterException
paths./#ListUserPools.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListUserPools.post.responses.481.description: TooManyRequestsException
paths./#ListUserPools.post.responses.481.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListUserPools.post.responses.482.description: NotAuthorizedException
paths./#ListUserPools.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListUserPools.post.responses.483.description: InternalErrorException
paths./#ListUserPools.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListUsers.parameters.length: 9
paths./#ListUsers.parameters[0].$ref: '#/parameters/Action'
paths./#ListUsers.parameters[1].$ref: '#/parameters/Version'
paths./#ListUsers.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListUsers.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListUsers.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListUsers.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListUsers.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListUsers.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListUsers.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListUsers.post.description: Lists the users in the Amazon Cognito user pool.
paths./#ListUsers.post.operationId: ListUsers
paths./#ListUsers.post.parameters.length: 1
paths./#ListUsers.post.parameters[0].in: body
paths./#ListUsers.post.parameters[0].name: body
paths./#ListUsers.post.parameters[0].required: true
paths./#ListUsers.post.parameters[0].schema.$ref: '#/definitions/ListUsersRequest'
paths./#ListUsers.post.responses.200.description: Success
paths./#ListUsers.post.responses.200.schema.$ref: '#/definitions/ListUsersResponse'
paths./#ListUsers.post.responses.480.description: InvalidParameterException
paths./#ListUsers.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListUsers.post.responses.481.description: ResourceNotFoundException
paths./#ListUsers.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListUsers.post.responses.482.description: TooManyRequestsException
paths./#ListUsers.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListUsers.post.responses.483.description: NotAuthorizedException
paths./#ListUsers.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListUsers.post.responses.484.description: InternalErrorException
paths./#ListUsers.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ListUsersInGroup.parameters.length: 9
paths./#ListUsersInGroup.parameters[0].$ref: '#/parameters/Action'
paths./#ListUsersInGroup.parameters[1].$ref: '#/parameters/Version'
paths./#ListUsersInGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListUsersInGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListUsersInGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListUsersInGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListUsersInGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListUsersInGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListUsersInGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListUsersInGroup.post.description: <p>Lists the users in the specified group.</p>
  <p>Requires developer credentials.</p>
paths./#ListUsersInGroup.post.operationId: ListUsersInGroup
paths./#ListUsersInGroup.post.parameters.length: 1
paths./#ListUsersInGroup.post.parameters[0].in: body
paths./#ListUsersInGroup.post.parameters[0].name: body
paths./#ListUsersInGroup.post.parameters[0].required: true
paths./#ListUsersInGroup.post.parameters[0].schema.$ref: '#/definitions/ListUsersInGroupRequest'
paths./#ListUsersInGroup.post.responses.200.description: Success
paths./#ListUsersInGroup.post.responses.200.schema.$ref: '#/definitions/ListUsersInGroupResponse'
paths./#ListUsersInGroup.post.responses.480.description: InvalidParameterException
paths./#ListUsersInGroup.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListUsersInGroup.post.responses.481.description: ResourceNotFoundException
paths./#ListUsersInGroup.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ListUsersInGroup.post.responses.482.description: TooManyRequestsException
paths./#ListUsersInGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ListUsersInGroup.post.responses.483.description: NotAuthorizedException
paths./#ListUsersInGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ListUsersInGroup.post.responses.484.description: InternalErrorException
paths./#ListUsersInGroup.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#ResendConfirmationCode.parameters.length: 9
paths./#ResendConfirmationCode.parameters[0].$ref: '#/parameters/Action'
paths./#ResendConfirmationCode.parameters[1].$ref: '#/parameters/Version'
paths./#ResendConfirmationCode.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ResendConfirmationCode.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ResendConfirmationCode.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ResendConfirmationCode.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ResendConfirmationCode.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ResendConfirmationCode.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ResendConfirmationCode.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ResendConfirmationCode.post.description: Resends the confirmation (for confirmation
  of registration) to a specific user in the user pool.
paths./#ResendConfirmationCode.post.operationId: ResendConfirmationCode
paths./#ResendConfirmationCode.post.parameters.length: 1
paths./#ResendConfirmationCode.post.parameters[0].in: body
paths./#ResendConfirmationCode.post.parameters[0].name: body
paths./#ResendConfirmationCode.post.parameters[0].required: true
paths./#ResendConfirmationCode.post.parameters[0].schema.$ref: '#/definitions/ResendConfirmationCodeRequest'
paths./#ResendConfirmationCode.post.responses.200.description: Success
paths./#ResendConfirmationCode.post.responses.200.schema.$ref: '#/definitions/ResendConfirmationCodeResponse'
paths./#ResendConfirmationCode.post.responses.480.description: ResourceNotFoundException
paths./#ResendConfirmationCode.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#ResendConfirmationCode.post.responses.481.description: InvalidParameterException
paths./#ResendConfirmationCode.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ResendConfirmationCode.post.responses.482.description: UnexpectedLambdaException
paths./#ResendConfirmationCode.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#ResendConfirmationCode.post.responses.483.description: UserLambdaValidationException
paths./#ResendConfirmationCode.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#ResendConfirmationCode.post.responses.484.description: NotAuthorizedException
paths./#ResendConfirmationCode.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#ResendConfirmationCode.post.responses.485.description: InvalidLambdaResponseException
paths./#ResendConfirmationCode.post.responses.485.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#ResendConfirmationCode.post.responses.486.description: TooManyRequestsException
paths./#ResendConfirmationCode.post.responses.486.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#ResendConfirmationCode.post.responses.487.description: LimitExceededException
paths./#ResendConfirmationCode.post.responses.487.schema.$ref: '#/definitions/LimitExceededException'
paths./#ResendConfirmationCode.post.responses.488.description: InvalidSmsRoleAccessPolicyException
paths./#ResendConfirmationCode.post.responses.488.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#ResendConfirmationCode.post.responses.489.description: InvalidSmsRoleTrustRelationshipException
paths./#ResendConfirmationCode.post.responses.489.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#ResendConfirmationCode.post.responses.490.description: InvalidEmailRoleAccessPolicyException
paths./#ResendConfirmationCode.post.responses.490.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#ResendConfirmationCode.post.responses.491.description: CodeDeliveryFailureException
paths./#ResendConfirmationCode.post.responses.491.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#ResendConfirmationCode.post.responses.492.description: UserNotFoundException
paths./#ResendConfirmationCode.post.responses.492.schema.$ref: '#/definitions/UserNotFoundException'
paths./#ResendConfirmationCode.post.responses.493.description: InternalErrorException
paths./#ResendConfirmationCode.post.responses.493.schema.$ref: '#/definitions/InternalErrorException'
paths./#RespondToAuthChallenge.parameters.length: 9
paths./#RespondToAuthChallenge.parameters[0].$ref: '#/parameters/Action'
paths./#RespondToAuthChallenge.parameters[1].$ref: '#/parameters/Version'
paths./#RespondToAuthChallenge.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#RespondToAuthChallenge.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#RespondToAuthChallenge.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#RespondToAuthChallenge.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#RespondToAuthChallenge.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#RespondToAuthChallenge.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#RespondToAuthChallenge.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#RespondToAuthChallenge.post.description: Responds to the authentication challenge.
paths./#RespondToAuthChallenge.post.operationId: RespondToAuthChallenge
paths./#RespondToAuthChallenge.post.parameters.length: 1
paths./#RespondToAuthChallenge.post.parameters[0].in: body
paths./#RespondToAuthChallenge.post.parameters[0].name: body
paths./#RespondToAuthChallenge.post.parameters[0].required: true
paths./#RespondToAuthChallenge.post.parameters[0].schema.$ref: '#/definitions/RespondToAuthChallengeRequest'
paths./#RespondToAuthChallenge.post.responses.200.description: Success
paths./#RespondToAuthChallenge.post.responses.200.schema.$ref: '#/definitions/RespondToAuthChallengeResponse'
paths./#RespondToAuthChallenge.post.responses.480.description: ResourceNotFoundException
paths./#RespondToAuthChallenge.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#RespondToAuthChallenge.post.responses.481.description: InvalidParameterException
paths./#RespondToAuthChallenge.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#RespondToAuthChallenge.post.responses.482.description: NotAuthorizedException
paths./#RespondToAuthChallenge.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#RespondToAuthChallenge.post.responses.483.description: CodeMismatchException
paths./#RespondToAuthChallenge.post.responses.483.schema.$ref: '#/definitions/CodeMismatchException'
paths./#RespondToAuthChallenge.post.responses.484.description: ExpiredCodeException
paths./#RespondToAuthChallenge.post.responses.484.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#RespondToAuthChallenge.post.responses.485.description: UnexpectedLambdaException
paths./#RespondToAuthChallenge.post.responses.485.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#RespondToAuthChallenge.post.responses.486.description: UserLambdaValidationException
paths./#RespondToAuthChallenge.post.responses.486.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#RespondToAuthChallenge.post.responses.487.description: InvalidPasswordException
paths./#RespondToAuthChallenge.post.responses.487.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#RespondToAuthChallenge.post.responses.488.description: InvalidLambdaResponseException
paths./#RespondToAuthChallenge.post.responses.488.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#RespondToAuthChallenge.post.responses.489.description: TooManyRequestsException
paths./#RespondToAuthChallenge.post.responses.489.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#RespondToAuthChallenge.post.responses.490.description: InvalidUserPoolConfigurationException
paths./#RespondToAuthChallenge.post.responses.490.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#RespondToAuthChallenge.post.responses.491.description: MFAMethodNotFoundException
paths./#RespondToAuthChallenge.post.responses.491.schema.$ref: '#/definitions/MFAMethodNotFoundException'
paths./#RespondToAuthChallenge.post.responses.492.description: PasswordResetRequiredException
paths./#RespondToAuthChallenge.post.responses.492.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#RespondToAuthChallenge.post.responses.493.description: UserNotFoundException
paths./#RespondToAuthChallenge.post.responses.493.schema.$ref: '#/definitions/UserNotFoundException'
paths./#RespondToAuthChallenge.post.responses.494.description: UserNotConfirmedException
paths./#RespondToAuthChallenge.post.responses.494.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#RespondToAuthChallenge.post.responses.495.description: InvalidSmsRoleAccessPolicyException
paths./#RespondToAuthChallenge.post.responses.495.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#RespondToAuthChallenge.post.responses.496.description: InvalidSmsRoleTrustRelationshipException
paths./#RespondToAuthChallenge.post.responses.496.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#RespondToAuthChallenge.post.responses.497.description: AliasExistsException
paths./#RespondToAuthChallenge.post.responses.497.schema.$ref: '#/definitions/AliasExistsException'
paths./#RespondToAuthChallenge.post.responses.498.description: InternalErrorException
paths./#RespondToAuthChallenge.post.responses.498.schema.$ref: '#/definitions/InternalErrorException'
paths./#SetUICustomization.parameters.length: 9
paths./#SetUICustomization.parameters[0].$ref: '#/parameters/Action'
paths./#SetUICustomization.parameters[1].$ref: '#/parameters/Version'
paths./#SetUICustomization.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SetUICustomization.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SetUICustomization.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SetUICustomization.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SetUICustomization.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SetUICustomization.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SetUICustomization.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SetUICustomization.post.description: <p>Sets the UI customization information
  for a user pool's built-in app UI.</p> <p>You can specify app UI customization settings
  for a single client (with a specific <code>clientId</code>) or for all clients (by
  setting the <code>clientId</code> to <code>ALL</code>). If you specify <code>ALL</code>,
  the default configuration will be used for every client that has no UI customization
  set previously. If you specify UI customization settings for a particular client,
  it will no longer fall back to the <code>ALL</code> configuration. </p> <note> <p>To
  use this API, your user pool must have a domain associated with it. Otherwise, there
  is no place to host the app's pages, and the service will throw an error.</p> </note>
paths./#SetUICustomization.post.operationId: SetUICustomization
paths./#SetUICustomization.post.parameters.length: 1
paths./#SetUICustomization.post.parameters[0].in: body
paths./#SetUICustomization.post.parameters[0].name: body
paths./#SetUICustomization.post.parameters[0].required: true
paths./#SetUICustomization.post.parameters[0].schema.$ref: '#/definitions/SetUICustomizationRequest'
paths./#SetUICustomization.post.responses.200.description: Success
paths./#SetUICustomization.post.responses.200.schema.$ref: '#/definitions/SetUICustomizationResponse'
paths./#SetUICustomization.post.responses.480.description: InvalidParameterException
paths./#SetUICustomization.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#SetUICustomization.post.responses.481.description: ResourceNotFoundException
paths./#SetUICustomization.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#SetUICustomization.post.responses.482.description: NotAuthorizedException
paths./#SetUICustomization.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#SetUICustomization.post.responses.483.description: TooManyRequestsException
paths./#SetUICustomization.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#SetUICustomization.post.responses.484.description: InternalErrorException
paths./#SetUICustomization.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#SetUserSettings.parameters.length: 9
paths./#SetUserSettings.parameters[0].$ref: '#/parameters/Action'
paths./#SetUserSettings.parameters[1].$ref: '#/parameters/Version'
paths./#SetUserSettings.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SetUserSettings.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SetUserSettings.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SetUserSettings.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SetUserSettings.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SetUserSettings.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SetUserSettings.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SetUserSettings.post.description: Sets the user settings like multi-factor
  authentication (MFA). If MFA is to be removed for a particular attribute pass the
  attribute with code delivery as null. If null list is passed, all MFA options are
  removed.
paths./#SetUserSettings.post.operationId: SetUserSettings
paths./#SetUserSettings.post.parameters.length: 1
paths./#SetUserSettings.post.parameters[0].in: body
paths./#SetUserSettings.post.parameters[0].name: body
paths./#SetUserSettings.post.parameters[0].required: true
paths./#SetUserSettings.post.parameters[0].schema.$ref: '#/definitions/SetUserSettingsRequest'
paths./#SetUserSettings.post.responses.200.description: Success
paths./#SetUserSettings.post.responses.200.schema.$ref: '#/definitions/SetUserSettingsResponse'
paths./#SetUserSettings.post.responses.480.description: ResourceNotFoundException
paths./#SetUserSettings.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#SetUserSettings.post.responses.481.description: InvalidParameterException
paths./#SetUserSettings.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#SetUserSettings.post.responses.482.description: NotAuthorizedException
paths./#SetUserSettings.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#SetUserSettings.post.responses.483.description: PasswordResetRequiredException
paths./#SetUserSettings.post.responses.483.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#SetUserSettings.post.responses.484.description: UserNotFoundException
paths./#SetUserSettings.post.responses.484.schema.$ref: '#/definitions/UserNotFoundException'
paths./#SetUserSettings.post.responses.485.description: UserNotConfirmedException
paths./#SetUserSettings.post.responses.485.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#SetUserSettings.post.responses.486.description: InternalErrorException
paths./#SetUserSettings.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#SignUp.parameters.length: 9
paths./#SignUp.parameters[0].$ref: '#/parameters/Action'
paths./#SignUp.parameters[1].$ref: '#/parameters/Version'
paths./#SignUp.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SignUp.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SignUp.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SignUp.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SignUp.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SignUp.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SignUp.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SignUp.post.description: Registers the user in the specified user pool and
  creates a user name, password, and user attributes.
paths./#SignUp.post.operationId: SignUp
paths./#SignUp.post.parameters.length: 1
paths./#SignUp.post.parameters[0].in: body
paths./#SignUp.post.parameters[0].name: body
paths./#SignUp.post.parameters[0].required: true
paths./#SignUp.post.parameters[0].schema.$ref: '#/definitions/SignUpRequest'
paths./#SignUp.post.responses.200.description: Success
paths./#SignUp.post.responses.200.schema.$ref: '#/definitions/SignUpResponse'
paths./#SignUp.post.responses.480.description: ResourceNotFoundException
paths./#SignUp.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#SignUp.post.responses.481.description: InvalidParameterException
paths./#SignUp.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#SignUp.post.responses.482.description: UnexpectedLambdaException
paths./#SignUp.post.responses.482.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#SignUp.post.responses.483.description: UserLambdaValidationException
paths./#SignUp.post.responses.483.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#SignUp.post.responses.484.description: NotAuthorizedException
paths./#SignUp.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#SignUp.post.responses.485.description: InvalidPasswordException
paths./#SignUp.post.responses.485.schema.$ref: '#/definitions/InvalidPasswordException'
paths./#SignUp.post.responses.486.description: InvalidLambdaResponseException
paths./#SignUp.post.responses.486.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#SignUp.post.responses.487.description: UsernameExistsException
paths./#SignUp.post.responses.487.schema.$ref: '#/definitions/UsernameExistsException'
paths./#SignUp.post.responses.488.description: TooManyRequestsException
paths./#SignUp.post.responses.488.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#SignUp.post.responses.489.description: InternalErrorException
paths./#SignUp.post.responses.489.schema.$ref: '#/definitions/InternalErrorException'
paths./#SignUp.post.responses.490.description: InvalidSmsRoleAccessPolicyException
paths./#SignUp.post.responses.490.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#SignUp.post.responses.491.description: InvalidSmsRoleTrustRelationshipException
paths./#SignUp.post.responses.491.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#SignUp.post.responses.492.description: InvalidEmailRoleAccessPolicyException
paths./#SignUp.post.responses.492.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#SignUp.post.responses.493.description: CodeDeliveryFailureException
paths./#SignUp.post.responses.493.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#StartUserImportJob.parameters.length: 9
paths./#StartUserImportJob.parameters[0].$ref: '#/parameters/Action'
paths./#StartUserImportJob.parameters[1].$ref: '#/parameters/Version'
paths./#StartUserImportJob.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StartUserImportJob.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StartUserImportJob.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StartUserImportJob.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StartUserImportJob.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StartUserImportJob.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StartUserImportJob.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StartUserImportJob.post.description: Starts the user import.
paths./#StartUserImportJob.post.operationId: StartUserImportJob
paths./#StartUserImportJob.post.parameters.length: 1
paths./#StartUserImportJob.post.parameters[0].in: body
paths./#StartUserImportJob.post.parameters[0].name: body
paths./#StartUserImportJob.post.parameters[0].required: true
paths./#StartUserImportJob.post.parameters[0].schema.$ref: '#/definitions/StartUserImportJobRequest'
paths./#StartUserImportJob.post.responses.200.description: Success
paths./#StartUserImportJob.post.responses.200.schema.$ref: '#/definitions/StartUserImportJobResponse'
paths./#StartUserImportJob.post.responses.480.description: ResourceNotFoundException
paths./#StartUserImportJob.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#StartUserImportJob.post.responses.481.description: InvalidParameterException
paths./#StartUserImportJob.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#StartUserImportJob.post.responses.482.description: TooManyRequestsException
paths./#StartUserImportJob.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#StartUserImportJob.post.responses.483.description: InternalErrorException
paths./#StartUserImportJob.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#StartUserImportJob.post.responses.484.description: PreconditionNotMetException
paths./#StartUserImportJob.post.responses.484.schema.$ref: '#/definitions/PreconditionNotMetException'
paths./#StartUserImportJob.post.responses.485.description: NotAuthorizedException
paths./#StartUserImportJob.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#StopUserImportJob.parameters.length: 9
paths./#StopUserImportJob.parameters[0].$ref: '#/parameters/Action'
paths./#StopUserImportJob.parameters[1].$ref: '#/parameters/Version'
paths./#StopUserImportJob.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StopUserImportJob.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StopUserImportJob.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StopUserImportJob.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StopUserImportJob.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StopUserImportJob.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StopUserImportJob.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StopUserImportJob.post.description: Stops the user import job.
paths./#StopUserImportJob.post.operationId: StopUserImportJob
paths./#StopUserImportJob.post.parameters.length: 1
paths./#StopUserImportJob.post.parameters[0].in: body
paths./#StopUserImportJob.post.parameters[0].name: body
paths./#StopUserImportJob.post.parameters[0].required: true
paths./#StopUserImportJob.post.parameters[0].schema.$ref: '#/definitions/StopUserImportJobRequest'
paths./#StopUserImportJob.post.responses.200.description: Success
paths./#StopUserImportJob.post.responses.200.schema.$ref: '#/definitions/StopUserImportJobResponse'
paths./#StopUserImportJob.post.responses.480.description: ResourceNotFoundException
paths./#StopUserImportJob.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#StopUserImportJob.post.responses.481.description: InvalidParameterException
paths./#StopUserImportJob.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#StopUserImportJob.post.responses.482.description: TooManyRequestsException
paths./#StopUserImportJob.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#StopUserImportJob.post.responses.483.description: InternalErrorException
paths./#StopUserImportJob.post.responses.483.schema.$ref: '#/definitions/InternalErrorException'
paths./#StopUserImportJob.post.responses.484.description: PreconditionNotMetException
paths./#StopUserImportJob.post.responses.484.schema.$ref: '#/definitions/PreconditionNotMetException'
paths./#StopUserImportJob.post.responses.485.description: NotAuthorizedException
paths./#StopUserImportJob.post.responses.485.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateDeviceStatus.parameters.length: 9
paths./#UpdateDeviceStatus.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateDeviceStatus.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateDeviceStatus.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateDeviceStatus.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateDeviceStatus.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateDeviceStatus.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateDeviceStatus.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateDeviceStatus.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateDeviceStatus.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateDeviceStatus.post.description: Updates the device status.
paths./#UpdateDeviceStatus.post.operationId: UpdateDeviceStatus
paths./#UpdateDeviceStatus.post.parameters.length: 1
paths./#UpdateDeviceStatus.post.parameters[0].in: body
paths./#UpdateDeviceStatus.post.parameters[0].name: body
paths./#UpdateDeviceStatus.post.parameters[0].required: true
paths./#UpdateDeviceStatus.post.parameters[0].schema.$ref: '#/definitions/UpdateDeviceStatusRequest'
paths./#UpdateDeviceStatus.post.responses.200.description: Success
paths./#UpdateDeviceStatus.post.responses.200.schema.$ref: '#/definitions/UpdateDeviceStatusResponse'
paths./#UpdateDeviceStatus.post.responses.480.description: InvalidParameterException
paths./#UpdateDeviceStatus.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateDeviceStatus.post.responses.481.description: ResourceNotFoundException
paths./#UpdateDeviceStatus.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateDeviceStatus.post.responses.482.description: NotAuthorizedException
paths./#UpdateDeviceStatus.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateDeviceStatus.post.responses.483.description: InvalidUserPoolConfigurationException
paths./#UpdateDeviceStatus.post.responses.483.schema.$ref: '#/definitions/InvalidUserPoolConfigurationException'
paths./#UpdateDeviceStatus.post.responses.484.description: TooManyRequestsException
paths./#UpdateDeviceStatus.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateDeviceStatus.post.responses.485.description: PasswordResetRequiredException
paths./#UpdateDeviceStatus.post.responses.485.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#UpdateDeviceStatus.post.responses.486.description: UserNotFoundException
paths./#UpdateDeviceStatus.post.responses.486.schema.$ref: '#/definitions/UserNotFoundException'
paths./#UpdateDeviceStatus.post.responses.487.description: UserNotConfirmedException
paths./#UpdateDeviceStatus.post.responses.487.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#UpdateDeviceStatus.post.responses.488.description: InternalErrorException
paths./#UpdateDeviceStatus.post.responses.488.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateGroup.parameters.length: 9
paths./#UpdateGroup.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateGroup.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateGroup.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateGroup.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateGroup.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateGroup.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateGroup.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateGroup.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateGroup.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateGroup.post.description: <p>Updates the specified group with the specified
  attributes.</p> <p>Requires developer credentials.</p>
paths./#UpdateGroup.post.operationId: UpdateGroup
paths./#UpdateGroup.post.parameters.length: 1
paths./#UpdateGroup.post.parameters[0].in: body
paths./#UpdateGroup.post.parameters[0].name: body
paths./#UpdateGroup.post.parameters[0].required: true
paths./#UpdateGroup.post.parameters[0].schema.$ref: '#/definitions/UpdateGroupRequest'
paths./#UpdateGroup.post.responses.200.description: Success
paths./#UpdateGroup.post.responses.200.schema.$ref: '#/definitions/UpdateGroupResponse'
paths./#UpdateGroup.post.responses.480.description: ResourceNotFoundException
paths./#UpdateGroup.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateGroup.post.responses.481.description: InvalidParameterException
paths./#UpdateGroup.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateGroup.post.responses.482.description: TooManyRequestsException
paths./#UpdateGroup.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateGroup.post.responses.483.description: NotAuthorizedException
paths./#UpdateGroup.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateGroup.post.responses.484.description: InternalErrorException
paths./#UpdateGroup.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateIdentityProvider.parameters.length: 9
paths./#UpdateIdentityProvider.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateIdentityProvider.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateIdentityProvider.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateIdentityProvider.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateIdentityProvider.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateIdentityProvider.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateIdentityProvider.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateIdentityProvider.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateIdentityProvider.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateIdentityProvider.post.description: Updates identity provider information
  for a user pool.
paths./#UpdateIdentityProvider.post.operationId: UpdateIdentityProvider
paths./#UpdateIdentityProvider.post.parameters.length: 1
paths./#UpdateIdentityProvider.post.parameters[0].in: body
paths./#UpdateIdentityProvider.post.parameters[0].name: body
paths./#UpdateIdentityProvider.post.parameters[0].required: true
paths./#UpdateIdentityProvider.post.parameters[0].schema.$ref: '#/definitions/UpdateIdentityProviderRequest'
paths./#UpdateIdentityProvider.post.responses.200.description: Success
paths./#UpdateIdentityProvider.post.responses.200.schema.$ref: '#/definitions/UpdateIdentityProviderResponse'
paths./#UpdateIdentityProvider.post.responses.480.description: InvalidParameterException
paths./#UpdateIdentityProvider.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateIdentityProvider.post.responses.481.description: UnsupportedIdentityProviderException
paths./#UpdateIdentityProvider.post.responses.481.schema.$ref: '#/definitions/UnsupportedIdentityProviderException'
paths./#UpdateIdentityProvider.post.responses.482.description: ResourceNotFoundException
paths./#UpdateIdentityProvider.post.responses.482.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateIdentityProvider.post.responses.483.description: NotAuthorizedException
paths./#UpdateIdentityProvider.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateIdentityProvider.post.responses.484.description: TooManyRequestsException
paths./#UpdateIdentityProvider.post.responses.484.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateIdentityProvider.post.responses.485.description: InternalErrorException
paths./#UpdateIdentityProvider.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateResourceServer.parameters.length: 9
paths./#UpdateResourceServer.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateResourceServer.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateResourceServer.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateResourceServer.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateResourceServer.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateResourceServer.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateResourceServer.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateResourceServer.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateResourceServer.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateResourceServer.post.description: Updates the name and scopes of resource
  server. All other fields are read-only.
paths./#UpdateResourceServer.post.operationId: UpdateResourceServer
paths./#UpdateResourceServer.post.parameters.length: 1
paths./#UpdateResourceServer.post.parameters[0].in: body
paths./#UpdateResourceServer.post.parameters[0].name: body
paths./#UpdateResourceServer.post.parameters[0].required: true
paths./#UpdateResourceServer.post.parameters[0].schema.$ref: '#/definitions/UpdateResourceServerRequest'
paths./#UpdateResourceServer.post.responses.200.description: Success
paths./#UpdateResourceServer.post.responses.200.schema.$ref: '#/definitions/UpdateResourceServerResponse'
paths./#UpdateResourceServer.post.responses.480.description: InvalidParameterException
paths./#UpdateResourceServer.post.responses.480.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateResourceServer.post.responses.481.description: ResourceNotFoundException
paths./#UpdateResourceServer.post.responses.481.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateResourceServer.post.responses.482.description: NotAuthorizedException
paths./#UpdateResourceServer.post.responses.482.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateResourceServer.post.responses.483.description: TooManyRequestsException
paths./#UpdateResourceServer.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateResourceServer.post.responses.484.description: InternalErrorException
paths./#UpdateResourceServer.post.responses.484.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateUserAttributes.parameters.length: 9
paths./#UpdateUserAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateUserAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateUserAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateUserAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateUserAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateUserAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateUserAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateUserAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateUserAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateUserAttributes.post.description: Allows a user to update a specific
  attribute (one at a time).
paths./#UpdateUserAttributes.post.operationId: UpdateUserAttributes
paths./#UpdateUserAttributes.post.parameters.length: 1
paths./#UpdateUserAttributes.post.parameters[0].in: body
paths./#UpdateUserAttributes.post.parameters[0].name: body
paths./#UpdateUserAttributes.post.parameters[0].required: true
paths./#UpdateUserAttributes.post.parameters[0].schema.$ref: '#/definitions/UpdateUserAttributesRequest'
paths./#UpdateUserAttributes.post.responses.200.description: Success
paths./#UpdateUserAttributes.post.responses.200.schema.$ref: '#/definitions/UpdateUserAttributesResponse'
paths./#UpdateUserAttributes.post.responses.480.description: ResourceNotFoundException
paths./#UpdateUserAttributes.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateUserAttributes.post.responses.481.description: InvalidParameterException
paths./#UpdateUserAttributes.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateUserAttributes.post.responses.482.description: CodeMismatchException
paths./#UpdateUserAttributes.post.responses.482.schema.$ref: '#/definitions/CodeMismatchException'
paths./#UpdateUserAttributes.post.responses.483.description: ExpiredCodeException
paths./#UpdateUserAttributes.post.responses.483.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#UpdateUserAttributes.post.responses.484.description: NotAuthorizedException
paths./#UpdateUserAttributes.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateUserAttributes.post.responses.485.description: UnexpectedLambdaException
paths./#UpdateUserAttributes.post.responses.485.schema.$ref: '#/definitions/UnexpectedLambdaException'
paths./#UpdateUserAttributes.post.responses.486.description: UserLambdaValidationException
paths./#UpdateUserAttributes.post.responses.486.schema.$ref: '#/definitions/UserLambdaValidationException'
paths./#UpdateUserAttributes.post.responses.487.description: InvalidLambdaResponseException
paths./#UpdateUserAttributes.post.responses.487.schema.$ref: '#/definitions/InvalidLambdaResponseException'
paths./#UpdateUserAttributes.post.responses.488.description: TooManyRequestsException
paths./#UpdateUserAttributes.post.responses.488.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateUserAttributes.post.responses.489.description: AliasExistsException
paths./#UpdateUserAttributes.post.responses.489.schema.$ref: '#/definitions/AliasExistsException'
paths./#UpdateUserAttributes.post.responses.490.description: InvalidSmsRoleAccessPolicyException
paths./#UpdateUserAttributes.post.responses.490.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#UpdateUserAttributes.post.responses.491.description: InvalidSmsRoleTrustRelationshipException
paths./#UpdateUserAttributes.post.responses.491.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#UpdateUserAttributes.post.responses.492.description: InvalidEmailRoleAccessPolicyException
paths./#UpdateUserAttributes.post.responses.492.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#UpdateUserAttributes.post.responses.493.description: CodeDeliveryFailureException
paths./#UpdateUserAttributes.post.responses.493.schema.$ref: '#/definitions/CodeDeliveryFailureException'
paths./#UpdateUserAttributes.post.responses.494.description: PasswordResetRequiredException
paths./#UpdateUserAttributes.post.responses.494.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#UpdateUserAttributes.post.responses.495.description: UserNotFoundException
paths./#UpdateUserAttributes.post.responses.495.schema.$ref: '#/definitions/UserNotFoundException'
paths./#UpdateUserAttributes.post.responses.496.description: UserNotConfirmedException
paths./#UpdateUserAttributes.post.responses.496.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#UpdateUserAttributes.post.responses.497.description: InternalErrorException
paths./#UpdateUserAttributes.post.responses.497.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateUserPool.parameters.length: 9
paths./#UpdateUserPool.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateUserPool.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateUserPool.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateUserPool.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateUserPool.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateUserPool.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateUserPool.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateUserPool.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateUserPool.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateUserPool.post.description: Updates the specified user pool with the
  specified attributes.
paths./#UpdateUserPool.post.operationId: UpdateUserPool
paths./#UpdateUserPool.post.parameters.length: 1
paths./#UpdateUserPool.post.parameters[0].in: body
paths./#UpdateUserPool.post.parameters[0].name: body
paths./#UpdateUserPool.post.parameters[0].required: true
paths./#UpdateUserPool.post.parameters[0].schema.$ref: '#/definitions/UpdateUserPoolRequest'
paths./#UpdateUserPool.post.responses.200.description: Success
paths./#UpdateUserPool.post.responses.200.schema.$ref: '#/definitions/UpdateUserPoolResponse'
paths./#UpdateUserPool.post.responses.480.description: ResourceNotFoundException
paths./#UpdateUserPool.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateUserPool.post.responses.481.description: InvalidParameterException
paths./#UpdateUserPool.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateUserPool.post.responses.482.description: ConcurrentModificationException
paths./#UpdateUserPool.post.responses.482.schema.$ref: '#/definitions/ConcurrentModificationException'
paths./#UpdateUserPool.post.responses.483.description: TooManyRequestsException
paths./#UpdateUserPool.post.responses.483.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateUserPool.post.responses.484.description: NotAuthorizedException
paths./#UpdateUserPool.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateUserPool.post.responses.485.description: UserImportInProgressException
paths./#UpdateUserPool.post.responses.485.schema.$ref: '#/definitions/UserImportInProgressException'
paths./#UpdateUserPool.post.responses.486.description: InternalErrorException
paths./#UpdateUserPool.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#UpdateUserPool.post.responses.487.description: InvalidSmsRoleAccessPolicyException
paths./#UpdateUserPool.post.responses.487.schema.$ref: '#/definitions/InvalidSmsRoleAccessPolicyException'
paths./#UpdateUserPool.post.responses.488.description: InvalidSmsRoleTrustRelationshipException
paths./#UpdateUserPool.post.responses.488.schema.$ref: '#/definitions/InvalidSmsRoleTrustRelationshipException'
paths./#UpdateUserPool.post.responses.489.description: UserPoolTaggingException
paths./#UpdateUserPool.post.responses.489.schema.$ref: '#/definitions/UserPoolTaggingException'
paths./#UpdateUserPool.post.responses.490.description: InvalidEmailRoleAccessPolicyException
paths./#UpdateUserPool.post.responses.490.schema.$ref: '#/definitions/InvalidEmailRoleAccessPolicyException'
paths./#UpdateUserPoolClient.parameters.length: 9
paths./#UpdateUserPoolClient.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateUserPoolClient.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateUserPoolClient.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateUserPoolClient.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateUserPoolClient.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateUserPoolClient.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateUserPoolClient.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateUserPoolClient.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateUserPoolClient.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateUserPoolClient.post.description: Allows the developer to update the
  specified user pool client and password policy.
paths./#UpdateUserPoolClient.post.operationId: UpdateUserPoolClient
paths./#UpdateUserPoolClient.post.parameters.length: 1
paths./#UpdateUserPoolClient.post.parameters[0].in: body
paths./#UpdateUserPoolClient.post.parameters[0].name: body
paths./#UpdateUserPoolClient.post.parameters[0].required: true
paths./#UpdateUserPoolClient.post.parameters[0].schema.$ref: '#/definitions/UpdateUserPoolClientRequest'
paths./#UpdateUserPoolClient.post.responses.200.description: Success
paths./#UpdateUserPoolClient.post.responses.200.schema.$ref: '#/definitions/UpdateUserPoolClientResponse'
paths./#UpdateUserPoolClient.post.responses.480.description: ResourceNotFoundException
paths./#UpdateUserPoolClient.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#UpdateUserPoolClient.post.responses.481.description: InvalidParameterException
paths./#UpdateUserPoolClient.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateUserPoolClient.post.responses.482.description: TooManyRequestsException
paths./#UpdateUserPoolClient.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#UpdateUserPoolClient.post.responses.483.description: NotAuthorizedException
paths./#UpdateUserPoolClient.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#UpdateUserPoolClient.post.responses.484.description: ScopeDoesNotExistException
paths./#UpdateUserPoolClient.post.responses.484.schema.$ref: '#/definitions/ScopeDoesNotExistException'
paths./#UpdateUserPoolClient.post.responses.485.description: InvalidOAuthFlowException
paths./#UpdateUserPoolClient.post.responses.485.schema.$ref: '#/definitions/InvalidOAuthFlowException'
paths./#UpdateUserPoolClient.post.responses.486.description: InternalErrorException
paths./#UpdateUserPoolClient.post.responses.486.schema.$ref: '#/definitions/InternalErrorException'
paths./#VerifyUserAttribute.parameters.length: 9
paths./#VerifyUserAttribute.parameters[0].$ref: '#/parameters/Action'
paths./#VerifyUserAttribute.parameters[1].$ref: '#/parameters/Version'
paths./#VerifyUserAttribute.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#VerifyUserAttribute.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#VerifyUserAttribute.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#VerifyUserAttribute.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#VerifyUserAttribute.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#VerifyUserAttribute.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#VerifyUserAttribute.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#VerifyUserAttribute.post.description: Verifies the specified user attributes
  in the user pool.
paths./#VerifyUserAttribute.post.operationId: VerifyUserAttribute
paths./#VerifyUserAttribute.post.parameters.length: 1
paths./#VerifyUserAttribute.post.parameters[0].in: body
paths./#VerifyUserAttribute.post.parameters[0].name: body
paths./#VerifyUserAttribute.post.parameters[0].required: true
paths./#VerifyUserAttribute.post.parameters[0].schema.$ref: '#/definitions/VerifyUserAttributeRequest'
paths./#VerifyUserAttribute.post.responses.200.description: Success
paths./#VerifyUserAttribute.post.responses.200.schema.$ref: '#/definitions/VerifyUserAttributeResponse'
paths./#VerifyUserAttribute.post.responses.480.description: ResourceNotFoundException
paths./#VerifyUserAttribute.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./#VerifyUserAttribute.post.responses.481.description: InvalidParameterException
paths./#VerifyUserAttribute.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#VerifyUserAttribute.post.responses.482.description: CodeMismatchException
paths./#VerifyUserAttribute.post.responses.482.schema.$ref: '#/definitions/CodeMismatchException'
paths./#VerifyUserAttribute.post.responses.483.description: ExpiredCodeException
paths./#VerifyUserAttribute.post.responses.483.schema.$ref: '#/definitions/ExpiredCodeException'
paths./#VerifyUserAttribute.post.responses.484.description: NotAuthorizedException
paths./#VerifyUserAttribute.post.responses.484.schema.$ref: '#/definitions/NotAuthorizedException'
paths./#VerifyUserAttribute.post.responses.485.description: TooManyRequestsException
paths./#VerifyUserAttribute.post.responses.485.schema.$ref: '#/definitions/TooManyRequestsException'
paths./#VerifyUserAttribute.post.responses.486.description: LimitExceededException
paths./#VerifyUserAttribute.post.responses.486.schema.$ref: '#/definitions/LimitExceededException'
paths./#VerifyUserAttribute.post.responses.487.description: PasswordResetRequiredException
paths./#VerifyUserAttribute.post.responses.487.schema.$ref: '#/definitions/PasswordResetRequiredException'
paths./#VerifyUserAttribute.post.responses.488.description: UserNotFoundException
paths./#VerifyUserAttribute.post.responses.488.schema.$ref: '#/definitions/UserNotFoundException'
paths./#VerifyUserAttribute.post.responses.489.description: UserNotConfirmedException
paths./#VerifyUserAttribute.post.responses.489.schema.$ref: '#/definitions/UserNotConfirmedException'
paths./#VerifyUserAttribute.post.responses.490.description: InternalErrorException
paths./#VerifyUserAttribute.post.responses.490.schema.$ref: '#/definitions/InternalErrorException'
paths./.parameters.length: 9
paths./.parameters[0].$ref: '#/parameters/Action'
paths./.parameters[1].$ref: '#/parameters/Version'
paths./.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./.post.description: Adds additional user attributes to the user pool schema.
paths./.post.operationId: AddCustomAttributes
paths./.post.parameters.length: 1
paths./.post.parameters[0].in: body
paths./.post.parameters[0].name: body
paths./.post.parameters[0].required: true
paths./.post.parameters[0].schema.$ref: '#/definitions/AddCustomAttributesRequest'
paths./.post.responses.200.description: Success
paths./.post.responses.200.schema.$ref: '#/definitions/AddCustomAttributesResponse'
paths./.post.responses.480.description: ResourceNotFoundException
paths./.post.responses.480.schema.$ref: '#/definitions/ResourceNotFoundException'
paths./.post.responses.481.description: InvalidParameterException
paths./.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./.post.responses.482.description: TooManyRequestsException
paths./.post.responses.482.schema.$ref: '#/definitions/TooManyRequestsException'
paths./.post.responses.483.description: NotAuthorizedException
paths./.post.responses.483.schema.$ref: '#/definitions/NotAuthorizedException'
paths./.post.responses.484.description: UserImportInProgressException
paths./.post.responses.484.schema.$ref: '#/definitions/UserImportInProgressException'
paths./.post.responses.485.description: InternalErrorException
paths./.post.responses.485.schema.$ref: '#/definitions/InternalErrorException'
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: http
security.length: 1
security[0].hmac.length: 0
securityDefinitions.hmac.description: Amazon Signature authorization v4
securityDefinitions.hmac.in: header
securityDefinitions.hmac.name: Authorization
securityDefinitions.hmac.type: apiKey
securityDefinitions.hmac.x-amazon-apigateway-authtype: awsSigv4
swagger: "2.0"
x-hasEquivalentPaths: true
