swagger: '2.0'
schemes:
  - http
host: clouddirectory.amazonaws.com
basePath: /
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon CloudDirectory
  version: '2016-05-10'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2016-05-10.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: clouddirectory
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/clouddirectory/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /amazonclouddirectory/2017-01-11/batchread:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Performs all the read operations in a batch. '
      operationId: BatchRead
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchReadRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchReadResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
  /amazonclouddirectory/2017-01-11/batchwrite:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Performs all the write operations in a batch. Either all the operations succeed or none. Batch writes supports only object-related operations.
      operationId: BatchWrite
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BatchWriteRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchWriteResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: BatchWriteException
          schema:
            $ref: '#/definitions/BatchWriteException'
  /amazonclouddirectory/2017-01-11/directory:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
      operationId: DeleteDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryNotDisabledException
          schema:
            $ref: '#/definitions/DirectoryNotDisabledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '487':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '488':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
  /amazonclouddirectory/2017-01-11/directory/create:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.
      operationId: CreateDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryAlreadyExistsException
          schema:
            $ref: '#/definitions/DirectoryAlreadyExistsException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/directory/disable:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
      operationId: DisableDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
  /amazonclouddirectory/2017-01-11/directory/enable:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.'
      operationId: EnableDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
  /amazonclouddirectory/2017-01-11/directory/get:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata about a directory.
      operationId: GetDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDirectoryResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /amazonclouddirectory/2017-01-11/directory/list:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists directories created within an account.
      operationId: ListDirectories
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDirectoriesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDirectoriesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/facet:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>'
      operationId: UpdateFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidFacetUpdateException
          schema:
            $ref: '#/definitions/InvalidFacetUpdateException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '489':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
  /amazonclouddirectory/2017-01-11/facet/attributes:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves attributes attached to the facet.
      operationId: ListFacetAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFacetAttributesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFacetAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/facet/create:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.
      operationId: CreateFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          schema:
            $ref: '#/definitions/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/facet/delete:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.
      operationId: DeleteFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '488':
          description: FacetInUseException
          schema:
            $ref: '#/definitions/FacetInUseException'
  /amazonclouddirectory/2017-01-11/facet/list:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the names of facets that exist in a schema.
      operationId: ListFacetNames
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListFacetNamesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFacetNamesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/index:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      operationId: CreateIndex
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateIndexRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
        '489':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '490':
          description: UnsupportedIndexTypeException
          schema:
            $ref: '#/definitions/UnsupportedIndexTypeException'
  /amazonclouddirectory/2017-01-11/index/attach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Attaches the specified object to the specified index.
      operationId: AttachToIndex
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachToIndexRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachToIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '489':
          description: IndexedAttributeMissingException
          schema:
            $ref: '#/definitions/IndexedAttributeMissingException'
        '490':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
  /amazonclouddirectory/2017-01-11/index/detach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Detaches the specified object from the specified index.
      operationId: DetachFromIndex
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DetachFromIndexRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachFromIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: ObjectAlreadyDetachedException
          schema:
            $ref: '#/definitions/ObjectAlreadyDetachedException'
        '489':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
  /amazonclouddirectory/2017-01-11/index/targets:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists objects attached to the specified index.
      operationId: ListIndex
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListIndexRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
  /amazonclouddirectory/2017-01-11/object:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. '
      operationId: CreateObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
        '490':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '491':
          description: UnsupportedIndexTypeException
          schema:
            $ref: '#/definitions/UnsupportedIndexTypeException'
  /amazonclouddirectory/2017-01-11/object/attach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>'
      operationId: AttachObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '489':
          description: InvalidAttachmentException
          schema:
            $ref: '#/definitions/InvalidAttachmentException'
        '490':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '491':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/object/attributes:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists all attributes that are associated with an object. '
      operationId: ListObjectAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectAttributesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '490':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/object/children:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a paginated list of child objects that are associated with a given object.
      operationId: ListObjectChildren
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectChildrenRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectChildrenResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '490':
          description: NotNodeException
          schema:
            $ref: '#/definitions/NotNodeException'
  /amazonclouddirectory/2017-01-11/object/delete:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.
      operationId: DeleteObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: ObjectNotDetachedException
          schema:
            $ref: '#/definitions/ObjectNotDetachedException'
  /amazonclouddirectory/2017-01-11/object/detach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
      operationId: DetachObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DetachObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/object/facets:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Adds a new <a>Facet</a> to an object.
      operationId: AddFacetToObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddFacetToObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddFacetToObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/object/facets/delete:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Removes the specified facet from the specified object.
      operationId: RemoveFacetFromObject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveFacetFromObjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveFacetFromObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/object/indices:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists indices attached to an object.
      operationId: ListAttachedIndices
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedIndicesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedIndicesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/object/information:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves metadata about an object.
      operationId: GetObjectInformation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectInformationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectInformationResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/object/parent:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists parent objects that are associated with a given object in pagination fashion.
      operationId: ListObjectParents
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectParentsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectParentsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '490':
          description: CannotListParentOfRootException
          schema:
            $ref: '#/definitions/CannotListParentOfRootException'
  /amazonclouddirectory/2017-01-11/object/parentpaths:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.</p>'
      operationId: ListObjectParentPaths
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectParentPathsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectParentPathsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/object/policy:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns policies attached to an object in pagination fashion.
      operationId: ListObjectPolicies
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectPoliciesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectPoliciesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/object/update:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates a given object's attributes.
      operationId: UpdateObjectAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateObjectAttributesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateObjectAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/policy/attach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      operationId: AttachPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachPolicyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
  /amazonclouddirectory/2017-01-11/policy/attachment:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      operationId: ListPolicyAttachments
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPolicyAttachmentsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyAttachmentsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '490':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
  /amazonclouddirectory/2017-01-11/policy/detach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Detaches a policy from an object.
      operationId: DetachPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DetachPolicyRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
  /amazonclouddirectory/2017-01-11/policy/lookup:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
      operationId: LookupPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LookupPolicyRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LookupPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/schema:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Deletes a given schema. Schemas in a development and published state can only be deleted. '
      operationId: DeleteSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: StillContainsLinksException
          schema:
            $ref: '#/definitions/StillContainsLinksException'
  /amazonclouddirectory/2017-01-11/schema/applied:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists schemas applied to a directory.
      operationId: ListAppliedSchemaArns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAppliedSchemaArnsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAppliedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/schema/apply:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Copies the input published schema into the <a>Directory</a> with the same name and version as that of the published schema .
      operationId: ApplySchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplySchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplySchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          schema:
            $ref: '#/definitions/InvalidAttachmentException'
  /amazonclouddirectory/2017-01-11/schema/create:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: '<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>'
      operationId: CreateSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: SchemaAlreadyExistsException
          schema:
            $ref: '#/definitions/SchemaAlreadyExistsException'
        '487':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
  /amazonclouddirectory/2017-01-11/schema/development:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
      operationId: ListDevelopmentSchemaArns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDevelopmentSchemaArnsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevelopmentSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/schema/json:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat">JSON Schema Format</a> for more information.'
      operationId: PutSchemaFromJson
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutSchemaFromJsonRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutSchemaFromJsonResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidSchemaDocException
          schema:
            $ref: '#/definitions/InvalidSchemaDocException'
        '487':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
  /amazonclouddirectory/2017-01-11/schema/publish:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Publishes a development schema with a version. If description and attributes are specified, <code>PublishSchema</code> overrides the development schema description and attributes. If not, the development schema description and attributes are used.'
      operationId: PublishSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PublishSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PublishSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: SchemaAlreadyPublishedException
          schema:
            $ref: '#/definitions/SchemaAlreadyPublishedException'
  /amazonclouddirectory/2017-01-11/schema/published:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves each published schema Amazon Resource Name (ARN).
      operationId: ListPublishedSchemaArns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPublishedSchemaArnsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPublishedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/schema/update:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: Updates the schema name with a new name. Only development schema names can be updated.
      operationId: UpdateSchema
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSchemaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/tags:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
      operationId: ListTagsForResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
  /amazonclouddirectory/2017-01-11/tags/add:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: An API operation for adding tags to a resource.
      operationId: TagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
  /amazonclouddirectory/2017-01-11/tags/remove:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: An API operation for removing tags from a resource.
      operationId: UntagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
  /amazonclouddirectory/2017-01-11/typedlink/attach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: AttachTypedLink
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachTypedLinkRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachTypedLinkResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: InvalidAttachmentException
          schema:
            $ref: '#/definitions/InvalidAttachmentException'
        '489':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '490':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/typedlink/detach:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: DetachTypedLink
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DetachTypedLinkRequest'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/typedlink/facet:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Updates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: UpdateTypedLinkFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTypedLinkFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
        '487':
          description: InvalidFacetUpdateException
          schema:
            $ref: '#/definitions/InvalidFacetUpdateException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '490':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: ListTypedLinkFacetAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTypedLinkFacetAttributesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTypedLinkFacetAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/create:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Creates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: CreateTypedLinkFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTypedLinkFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          schema:
            $ref: '#/definitions/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      description: 'Deletes a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: DeleteTypedLinkFacet
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTypedLinkFacetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/get:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: GetTypedLinkFacetInformation
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTypedLinkFacetInformationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTypedLinkFacetInformationResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '488':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/list:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: ListTypedLinkFacetNames
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTypedLinkFacetNamesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTypedLinkFacetNamesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
  /amazonclouddirectory/2017-01-11/typedlink/incoming:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: ListIncomingTypedLinks
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListIncomingTypedLinksRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIncomingTypedLinksResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
  /amazonclouddirectory/2017-01-11/typedlink/outgoing:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      operationId: ListOutgoingTypedLinks
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOutgoingTypedLinksRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOutgoingTypedLinksResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
definitions:
  AccessDeniedException:
    description: Access denied. Check your permissions.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  AddFacetToObjectRequest:
    properties:
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: Attributes on the facet that you are adding to the object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object you are adding the specified facet to.
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: Identifiers for the facet that you are adding to the object.
    required:
      - SchemaFacet
      - ObjectReference
    type: object
  AddFacetToObjectResponse:
    properties: {}
    type: object
  ApplySchemaRequest:
    properties:
      PublishedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <a>arns</a>.'
    required:
      - PublishedSchemaArn
    type: object
  ApplySchemaResponse:
    properties:
      AppliedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The applied schema ARN that is associated with the copied schema in the <a>Directory</a>. You can use this ARN to describe the schema information applied on this directory. For more information, see <a>arns</a>.'
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
    type: object
  Arn:
    type: string
  Arns:
    items:
      $ref: '#/definitions/Arn'
    type: array
  AttachObjectRequest:
    properties:
      ChildReference:
        $ref: '#/definitions/ObjectReference'
        description: The child object reference to be attached to the object.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The link name with which the child object is attached to the parent.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: The parent object reference.
    required:
      - ParentReference
      - ChildReference
      - LinkName
    type: object
  AttachObjectResponse:
    properties:
      AttachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: 'The attached <code>ObjectIdentifier</code>, which is the child <code>ObjectIdentifier</code>.'
    type: object
  AttachPolicyRequest:
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object to which the policy will be attached.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that is associated with the policy object.
    required:
      - PolicyReference
      - ObjectReference
    type: object
  AttachPolicyResponse:
    properties: {}
    type: object
  AttachToIndexRequest:
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index that you are attaching the object to.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object that you are attaching to the index.
    required:
      - IndexReference
      - TargetReference
    type: object
  AttachToIndexResponse:
    properties:
      AttachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was attached to the index.
    type: object
  AttachTypedLinkRequest:
    properties:
      Attributes:
        $ref: '#/definitions/AttributeNameAndValueList'
        description: A set of attributes that are associated with the typed link.
      SourceObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the source object that the typed link will attach to.
      TargetObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the target object that the typed link will attach to.
      TypedLinkFacet:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: Identifies the typed link facet that is associated with the typed link.
    required:
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      - Attributes
    type: object
  AttachTypedLinkResponse:
    properties:
      TypedLinkSpecifier:
        $ref: '#/definitions/TypedLinkSpecifier'
        description: Returns a typed link specifier as output.
    type: object
  AttributeKey:
    description: A unique identifier for an attribute.
    properties:
      FacetName:
        $ref: '#/definitions/FacetName'
        description: The name of the facet that the attribute exists within.
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema that contains the facet and attribute.
    required:
      - SchemaArn
      - FacetName
      - Name
    type: object
  AttributeKeyAndValue:
    description: The combination of an attribute key and an attribute value.
    properties:
      Key:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute.
      Value:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value of the attribute.
    required:
      - Key
      - Value
    type: object
  AttributeKeyAndValueList:
    items:
      $ref: '#/definitions/AttributeKeyAndValue'
    type: array
  AttributeKeyList:
    items:
      $ref: '#/definitions/AttributeKey'
    type: array
  AttributeName:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  AttributeNameAndValue:
    description: Identifies the attribute name and value for a typed link.
    properties:
      AttributeName:
        $ref: '#/definitions/AttributeName'
        description: The attribute name of the typed link.
      Value:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value for the typed link.
    required:
      - AttributeName
      - Value
    type: object
  AttributeNameAndValueList:
    items:
      $ref: '#/definitions/AttributeNameAndValue'
    type: array
  AttributeNameList:
    items:
      $ref: '#/definitions/AttributeName'
    type: array
  BatchAddFacetToObject:
    description: Represents the output of a batch add facet to object operation.
    properties:
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The attributes to set on the object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object being mutated.
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: Represents the facet being added to the object.
    required:
      - SchemaFacet
      - ObjectAttributeList
      - ObjectReference
    type: object
  BatchAddFacetToObjectResponse:
    description: The result of a batch add facet to object operation.
    properties: {}
    type: object
  BatchAttachObject:
    description: Represents the output of an <a>AttachObject</a> operation.
    properties:
      ChildReference:
        $ref: '#/definitions/ObjectReference'
        description: The child object reference that is to be attached to the object.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: The parent object reference.
    required:
      - ParentReference
      - ChildReference
      - LinkName
    type: object
  BatchAttachObjectResponse:
    description: Represents the output batch <a>AttachObject</a> response operation.
    properties:
      attachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that has been attached.
    type: object
  BatchAttachPolicy:
    description: "Attaches a policy object to a regular object inside a <a>BatchRead</a> operation.\_For more information, see <a>AttachPolicy</a> and <a>BatchReadRequest$Operations</a>."
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object to which the policy will be attached.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that is associated with the policy object.
    required:
      - PolicyReference
      - ObjectReference
    type: object
  BatchAttachPolicyResponse:
    description: Represents the output of an <a>AttachPolicy</a> response operation.
    properties: {}
    type: object
  BatchAttachToIndex:
    description: 'Attaches the specified object to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>AttachToIndex</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index that you are attaching the object to.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object that you are attaching to the index.
    required:
      - IndexReference
      - TargetReference
    type: object
  BatchAttachToIndexResponse:
    description: Represents the output of a <a>AttachToIndex</a> response operation.
    properties:
      AttachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was attached to the index.
    type: object
  BatchAttachTypedLink:
    description: 'Attaches a typed link to a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>AttachTypedLink</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      Attributes:
        $ref: '#/definitions/AttributeNameAndValueList'
        description: A set of attributes that are associated with the typed link.
      SourceObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the source object that the typed link will attach to.
      TargetObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the target object that the typed link will attach to.
      TypedLinkFacet:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: Identifies the typed link facet that is associated with the typed link.
    required:
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      - Attributes
    type: object
  BatchAttachTypedLinkResponse:
    description: Represents the output of a <a>AttachTypedLink</a> response operation.
    properties:
      TypedLinkSpecifier:
        $ref: '#/definitions/TypedLinkSpecifier'
        description: Returns a typed link specifier as output.
    type: object
  BatchCreateIndex:
    description: 'Creates an index object inside of a <a>BatchRead</a> operation. For more information, see <a>CreateIndex</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      BatchReferenceName:
        $ref: '#/definitions/BatchReferenceName'
        description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      IsUnique:
        $ref: '#/definitions/Bool'
        description: Indicates whether the attribute that is being indexed has unique values or not.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link between the parent object and the index object.
      OrderedIndexedAttributeList:
        $ref: '#/definitions/AttributeKeyList'
        description: Specifies the attributes that should be indexed on. Currently only a single attribute is supported.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the parent object that contains the index object.
    required:
      - OrderedIndexedAttributeList
      - IsUnique
    type: object
  BatchCreateIndexResponse:
    description: Represents the output of a <a>CreateIndex</a> response operation.
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the index created by this operation.
    type: object
  BatchCreateObject:
    description: Represents the output of a <a>CreateObject</a> operation.
    properties:
      BatchReferenceName:
        $ref: '#/definitions/BatchReferenceName'
        description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: 'An attribute map, which contains an attribute ARN as the key and attribute value as the map value.'
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: 'If specified, the parent reference to which this object will be attached.'
      SchemaFacet:
        $ref: '#/definitions/SchemaFacetList'
        description: 'A list of <code>FacetArns</code> that will be associated with the object. For more information, see <a>arns</a>.'
    required:
      - SchemaFacet
      - ObjectAttributeList
      - ParentReference
      - LinkName
      - BatchReferenceName
    type: object
  BatchCreateObjectResponse:
    description: Represents the output of a <a>CreateObject</a> response operation.
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The ID that is associated with the object.
    type: object
  BatchDeleteObject:
    description: Represents the output of a <a>DeleteObject</a> operation.
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object.
    required:
      - ObjectReference
    type: object
  BatchDeleteObjectResponse:
    description: Represents the output of a <a>DeleteObject</a> response operation.
    properties: {}
    type: object
  BatchDetachFromIndex:
    description: 'Detaches the specified object from the specified index inside a <a>BatchRead</a> operation. For more information, see <a>DetachFromIndex</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index object.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object being detached from the index.
    required:
      - IndexReference
      - TargetReference
    type: object
  BatchDetachFromIndexResponse:
    description: Represents the output of a <a>DetachFromIndex</a> response operation.
    properties:
      DetachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was detached from the index.
    type: object
  BatchDetachObject:
    description: Represents the output of a <a>DetachObject</a> operation.
    properties:
      BatchReferenceName:
        $ref: '#/definitions/BatchReferenceName'
        description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: Parent reference from which the object with the specified link name is detached.
    required:
      - ParentReference
      - LinkName
      - BatchReferenceName
    type: object
  BatchDetachObjectResponse:
    description: Represents the output of a <a>DetachObject</a> response operation.
    properties:
      detachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the detached object.
    type: object
  BatchDetachPolicy:
    description: 'Detaches the specified policy from the specified directory inside a <a>BatchRead</a> operation. For more information, see <a>DetachPolicy</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policy object will be detached.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the policy object.
    required:
      - PolicyReference
      - ObjectReference
    type: object
  BatchDetachPolicyResponse:
    description: Represents the output of a <a>DetachPolicy</a> response operation.
    properties: {}
    type: object
  BatchDetachTypedLink:
    description: 'Detaches a typed link from a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>DetachTypedLink</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      TypedLinkSpecifier:
        $ref: '#/definitions/TypedLinkSpecifier'
        description: Used to accept a typed link specifier as input.
    required:
      - TypedLinkSpecifier
    type: object
  BatchDetachTypedLinkResponse:
    description: Represents the output of a <a>DetachTypedLink</a> response operation.
    properties: {}
    type: object
  BatchGetObjectInformation:
    description: 'Retrieves metadata about an object inside a <a>BatchRead</a> operation. For more information, see <a>GetObjectInformation</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object.
    required:
      - ObjectReference
    type: object
  BatchGetObjectInformationResponse:
    description: Represents the output of a <a>GetObjectInformation</a> response operation.
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the specified object.
      SchemaFacets:
        $ref: '#/definitions/SchemaFacetList'
        description: The facets attached to the specified object.
    type: object
  BatchListAttachedIndices:
    description: 'Lists indices attached to an object inside a <a>BatchRead</a> operation. For more information, see <a>ListAttachedIndices</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object that has indices attached.
    required:
      - TargetReference
    type: object
  BatchListAttachedIndicesResponse:
    description: Represents the output of a <a>ListAttachedIndices</a> response operation.
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The indices attached to the specified object.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListIncomingTypedLinks:
    description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      FilterAttributeRanges:
        $ref: '#/definitions/TypedLinkAttributeRangeList'
        description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
      FilterTypedLink:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: 'Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.'
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  BatchListIncomingTypedLinksResponse:
    description: Represents the output of a <a>ListIncomingTypedLinks</a> response operation.
    properties:
      LinkSpecifiers:
        $ref: '#/definitions/TypedLinkSpecifierList'
        description: Returns one or more typed link specifiers as output.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListIndex:
    description: 'Lists objects attached to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>ListIndex</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference to the index to list.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      RangesOnIndexedValues:
        $ref: '#/definitions/ObjectAttributeRangeList'
        description: Specifies the ranges of indexed values that you want to query.
    required:
      - IndexReference
    type: object
  BatchListIndexResponse:
    description: Represents the output of a <a>ListIndex</a> response operation.
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The objects and indexed values attached to the index.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListObjectAttributes:
    description: Represents the output of a <a>ListObjectAttributes</a> operation.
    properties:
      FacetFilter:
        $ref: '#/definitions/SchemaFacet'
        description: Used to filter the list of object attributes that are associated with a certain facet.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference of the object whose attributes need to be listed.
    required:
      - ObjectReference
    type: object
  BatchListObjectAttributesResponse:
    description: Represents the output of a <a>ListObjectAttributes</a> response operation.
    properties:
      Attributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The attributes map that is associated with the object. <code>AttributeArn</code> is the key; attribute value is the value.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListObjectChildren:
    description: Represents the output of a <a>ListObjectChildren</a> operation.
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference of the object for which child objects are being listed.
    required:
      - ObjectReference
    type: object
  BatchListObjectChildrenResponse:
    description: Represents the output of a <a>ListObjectChildren</a> response operation.
    properties:
      Children:
        $ref: '#/definitions/LinkNameToObjectIdentifierMap'
        description: 'The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListObjectParentPaths:
    description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectParentPaths</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  BatchListObjectParentPathsResponse:
    description: Represents the output of a <a>ListObjectParentPaths</a> response operation.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PathToObjectIdentifiersList:
        $ref: '#/definitions/PathToObjectIdentifiersList'
        description: Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.
    type: object
  BatchListObjectPolicies:
    description: 'Returns policies attached to an object in pagination fashion inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectPolicies</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  BatchListObjectPoliciesResponse:
    description: Represents the output of a <a>ListObjectPolicies</a> response operation.
    properties:
      AttachedPolicyIds:
        $ref: '#/definitions/ObjectIdentifierList'
        description: 'A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  BatchListOutgoingTypedLinks:
    description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListOutgoingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      FilterAttributeRanges:
        $ref: '#/definitions/TypedLinkAttributeRangeList'
        description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
      FilterTypedLink:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: 'Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.'
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  BatchListOutgoingTypedLinksResponse:
    description: Represents the output of a <a>ListOutgoingTypedLinks</a> response operation.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      TypedLinkSpecifiers:
        $ref: '#/definitions/TypedLinkSpecifierList'
        description: Returns a typed link specifier as output.
    type: object
  BatchListPolicyAttachments:
    description: 'Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached inside a <a>BatchRead</a> operation. For more information, see <a>ListPolicyAttachments</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the policy object.
    required:
      - PolicyReference
    type: object
  BatchListPolicyAttachmentsResponse:
    description: Represents the output of a <a>ListPolicyAttachments</a> response operation.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectIdentifiers:
        $ref: '#/definitions/ObjectIdentifierList'
        description: A list of <code>ObjectIdentifiers</code> to which the policy is attached.
    type: object
  BatchLookupPolicy:
    description: 'Lists all policies from the root of the Directory to the object specified inside a <a>BatchRead</a> operation. For more information, see <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>.'
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policies will be looked up.
    required:
      - ObjectReference
    type: object
  BatchLookupPolicyResponse:
    description: Represents the output of a <a>LookupPolicy</a> response operation.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PolicyToPathList:
        $ref: '#/definitions/PolicyToPathList'
        description: 'Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    type: object
  BatchOperationIndex:
    type: integer
  BatchReadException:
    description: 'The batch read exception structure, which contains the exception type and message.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
        description: An exception message that is associated with the failure.
      Type:
        $ref: '#/definitions/BatchReadExceptionType'
        description: 'A type of exception, such as <code>InvalidArnException</code>.'
    type: object
  BatchReadExceptionType:
    enum:
      - ValidationException
      - InvalidArnException
      - ResourceNotFoundException
      - InvalidNextTokenException
      - AccessDeniedException
      - NotNodeException
      - FacetValidationException
      - CannotListParentOfRootException
      - NotIndexException
      - NotPolicyException
      - DirectoryNotEnabledException
      - LimitExceededException
      - InternalServiceException
    type: string
  BatchReadOperation:
    description: Represents the output of a <code>BatchRead</code> operation.
    properties:
      GetObjectInformation:
        $ref: '#/definitions/BatchGetObjectInformation'
        description: Retrieves metadata about an object.
      ListAttachedIndices:
        $ref: '#/definitions/BatchListAttachedIndices'
        description: Lists indices attached to an object.
      ListIncomingTypedLinks:
        $ref: '#/definitions/BatchListIncomingTypedLinks'
        description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      ListIndex:
        $ref: '#/definitions/BatchListIndex'
        description: Lists objects attached to the specified index.
      ListObjectAttributes:
        $ref: '#/definitions/BatchListObjectAttributes'
        description: Lists all attributes that are associated with an object.
      ListObjectChildren:
        $ref: '#/definitions/BatchListObjectChildren'
        description: Returns a paginated list of child objects that are associated with a given object.
      ListObjectParentPaths:
        $ref: '#/definitions/BatchListObjectParentPaths'
        description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.'
      ListObjectPolicies:
        $ref: '#/definitions/BatchListObjectPolicies'
        description: Returns policies attached to an object in pagination fashion.
      ListOutgoingTypedLinks:
        $ref: '#/definitions/BatchListOutgoingTypedLinks'
        description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      ListPolicyAttachments:
        $ref: '#/definitions/BatchListPolicyAttachments'
        description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      LookupPolicy:
        $ref: '#/definitions/BatchLookupPolicy'
        description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    type: object
  BatchReadOperationList:
    items:
      $ref: '#/definitions/BatchReadOperation'
    type: array
  BatchReadOperationResponse:
    description: Represents the output of a <code>BatchRead</code> response operation.
    properties:
      ExceptionResponse:
        $ref: '#/definitions/BatchReadException'
        description: Identifies which operation in a batch has failed.
      SuccessfulResponse:
        $ref: '#/definitions/BatchReadSuccessfulResponse'
        description: Identifies which operation in a batch has succeeded.
    type: object
  BatchReadOperationResponseList:
    items:
      $ref: '#/definitions/BatchReadOperationResponse'
    type: array
  BatchReadRequest:
    properties:
      Operations:
        $ref: '#/definitions/BatchReadOperationList'
        description: A list of operations that are part of the batch.
    required:
      - Operations
    type: object
  BatchReadResponse:
    properties:
      Responses:
        $ref: '#/definitions/BatchReadOperationResponseList'
        description: A list of all the responses for each batch read.
    type: object
  BatchReadSuccessfulResponse:
    description: Represents the output of a <code>BatchRead</code> success response operation.
    properties:
      GetObjectInformation:
        $ref: '#/definitions/BatchGetObjectInformationResponse'
        description: Retrieves metadata about an object.
      ListAttachedIndices:
        $ref: '#/definitions/BatchListAttachedIndicesResponse'
        description: Lists indices attached to an object.
      ListIncomingTypedLinks:
        $ref: '#/definitions/BatchListIncomingTypedLinksResponse'
        description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      ListIndex:
        $ref: '#/definitions/BatchListIndexResponse'
        description: Lists objects attached to the specified index.
      ListObjectAttributes:
        $ref: '#/definitions/BatchListObjectAttributesResponse'
        description: Lists all attributes that are associated with an object.
      ListObjectChildren:
        $ref: '#/definitions/BatchListObjectChildrenResponse'
        description: Returns a paginated list of child objects that are associated with a given object.
      ListObjectParentPaths:
        $ref: '#/definitions/BatchListObjectParentPathsResponse'
        description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.'
      ListObjectPolicies:
        $ref: '#/definitions/BatchListObjectPoliciesResponse'
        description: Returns policies attached to an object in pagination fashion.
      ListOutgoingTypedLinks:
        $ref: '#/definitions/BatchListOutgoingTypedLinksResponse'
        description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      ListPolicyAttachments:
        $ref: '#/definitions/BatchListPolicyAttachmentsResponse'
        description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      LookupPolicy:
        $ref: '#/definitions/BatchLookupPolicyResponse'
        description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    type: object
  BatchReferenceName:
    type: string
  BatchRemoveFacetFromObject:
    description: A batch operation to remove a facet from an object.
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object whose facet will be removed.
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: The facet to remove from the object.
    required:
      - SchemaFacet
      - ObjectReference
    type: object
  BatchRemoveFacetFromObjectResponse:
    description: An empty result that represents success.
    properties: {}
    type: object
  BatchUpdateObjectAttributes:
    description: 'Represents the output of a <code>BatchUpdate</code> operation. '
    properties:
      AttributeUpdates:
        $ref: '#/definitions/ObjectAttributeUpdateList'
        description: Attributes update structure.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object.
    required:
      - ObjectReference
      - AttributeUpdates
    type: object
  BatchUpdateObjectAttributesResponse:
    description: Represents the output of a <code>BatchUpdate</code> response operation.
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: ID that is associated with the object.
    type: object
  BatchWriteException:
    description: A <code>BatchWrite</code> exception has occurred.
    properties:
      Index:
        $ref: '#/definitions/BatchOperationIndex'
      Message:
        $ref: '#/definitions/ExceptionMessage'
      Type:
        $ref: '#/definitions/BatchWriteExceptionType'
    type: object
  BatchWriteExceptionType:
    enum:
      - InternalServiceException
      - ValidationException
      - InvalidArnException
      - LinkNameAlreadyInUseException
      - StillContainsLinksException
      - FacetValidationException
      - ObjectNotDetachedException
      - ResourceNotFoundException
      - AccessDeniedException
      - InvalidAttachmentException
      - NotIndexException
      - IndexedAttributeMissingException
      - ObjectAlreadyDetachedException
      - NotPolicyException
      - DirectoryNotEnabledException
      - LimitExceededException
      - UnsupportedIndexTypeException
    type: string
  BatchWriteOperation:
    description: 'Represents the output of a <code>BatchWrite</code> operation. '
    properties:
      AddFacetToObject:
        $ref: '#/definitions/BatchAddFacetToObject'
        description: A batch operation that adds a facet to an object.
      AttachObject:
        $ref: '#/definitions/BatchAttachObject'
        description: Attaches an object to a <a>Directory</a>.
      AttachPolicy:
        $ref: '#/definitions/BatchAttachPolicy'
        description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      AttachToIndex:
        $ref: '#/definitions/BatchAttachToIndex'
        description: Attaches the specified object to the specified index.
      AttachTypedLink:
        $ref: '#/definitions/BatchAttachTypedLink'
        description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      CreateIndex:
        $ref: '#/definitions/BatchCreateIndex'
        description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      CreateObject:
        $ref: '#/definitions/BatchCreateObject'
        description: Creates an object.
      DeleteObject:
        $ref: '#/definitions/BatchDeleteObject'
        description: Deletes an object in a <a>Directory</a>.
      DetachFromIndex:
        $ref: '#/definitions/BatchDetachFromIndex'
        description: Detaches the specified object from the specified index.
      DetachObject:
        $ref: '#/definitions/BatchDetachObject'
        description: Detaches an object from a <a>Directory</a>.
      DetachPolicy:
        $ref: '#/definitions/BatchDetachPolicy'
        description: Detaches a policy from a <a>Directory</a>.
      DetachTypedLink:
        $ref: '#/definitions/BatchDetachTypedLink'
        description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      RemoveFacetFromObject:
        $ref: '#/definitions/BatchRemoveFacetFromObject'
        description: A batch operation that removes a facet from an object.
      UpdateObjectAttributes:
        $ref: '#/definitions/BatchUpdateObjectAttributes'
        description: Updates a given object's attributes.
    type: object
  BatchWriteOperationList:
    items:
      $ref: '#/definitions/BatchWriteOperation'
    type: array
  BatchWriteOperationResponse:
    description: Represents the output of a <code>BatchWrite</code> response operation.
    properties:
      AddFacetToObject:
        $ref: '#/definitions/BatchAddFacetToObjectResponse'
        description: The result of an add facet to object batch operation.
      AttachObject:
        $ref: '#/definitions/BatchAttachObjectResponse'
        description: Attaches an object to a <a>Directory</a>.
      AttachPolicy:
        $ref: '#/definitions/BatchAttachPolicyResponse'
        description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      AttachToIndex:
        $ref: '#/definitions/BatchAttachToIndexResponse'
        description: Attaches the specified object to the specified index.
      AttachTypedLink:
        $ref: '#/definitions/BatchAttachTypedLinkResponse'
        description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      CreateIndex:
        $ref: '#/definitions/BatchCreateIndexResponse'
        description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      CreateObject:
        $ref: '#/definitions/BatchCreateObjectResponse'
        description: Creates an object in a <a>Directory</a>.
      DeleteObject:
        $ref: '#/definitions/BatchDeleteObjectResponse'
        description: Deletes an object in a <a>Directory</a>.
      DetachFromIndex:
        $ref: '#/definitions/BatchDetachFromIndexResponse'
        description: Detaches the specified object from the specified index.
      DetachObject:
        $ref: '#/definitions/BatchDetachObjectResponse'
        description: Detaches an object from a <a>Directory</a>.
      DetachPolicy:
        $ref: '#/definitions/BatchDetachPolicyResponse'
        description: Detaches a policy from a <a>Directory</a>.
      DetachTypedLink:
        $ref: '#/definitions/BatchDetachTypedLinkResponse'
        description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      RemoveFacetFromObject:
        $ref: '#/definitions/BatchRemoveFacetFromObjectResponse'
        description: The result of a batch remove facet from object operation.
      UpdateObjectAttributes:
        $ref: '#/definitions/BatchUpdateObjectAttributesResponse'
        description: Updates a given object’s attributes.
    type: object
  BatchWriteOperationResponseList:
    items:
      $ref: '#/definitions/BatchWriteOperationResponse'
    type: array
  BatchWriteRequest:
    properties:
      Operations:
        $ref: '#/definitions/BatchWriteOperationList'
        description: A list of operations that are part of the batch.
    required:
      - Operations
    type: object
  BatchWriteResponse:
    properties:
      Responses:
        $ref: '#/definitions/BatchWriteOperationResponseList'
        description: A list of all the responses for each batch write.
    type: object
  BinaryAttributeValue:
    type: string
  Bool:
    type: boolean
  BooleanAttributeValue:
    type: boolean
  CannotListParentOfRootException:
    description: Cannot list the parents of a <a>Directory</a> root.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  ConsistencyLevel:
    enum:
      - SERIALIZABLE
      - EVENTUAL
    type: string
  CreateDirectoryRequest:
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The name of the <a>Directory</a>. Should be unique per account, per region.'
    required:
      - Name
    type: object
  CreateDirectoryResponse:
    properties:
      AppliedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the published schema in the <a>Directory</a>. Once a published schema is copied into the directory, it has its own ARN, which is referred to applied schema ARN. For more information, see <a>arns</a>.'
      DirectoryArn:
        $ref: '#/definitions/DirectoryArn'
        description: 'The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
      Name:
        $ref: '#/definitions/DirectoryName'
        description: The name of the <a>Directory</a>.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The root object node of the created directory.
    required:
      - DirectoryArn
      - Name
      - ObjectIdentifier
      - AppliedSchemaArn
    type: object
  CreateFacetRequest:
    properties:
      Attributes:
        $ref: '#/definitions/FacetAttributeList'
        description: The attributes that are associated with the <a>Facet</a>.
      Name:
        $ref: '#/definitions/FacetName'
        description: 'The name of the <a>Facet</a>, which is unique for a given schema.'
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: '<p>Specifies whether a given object created from this facet is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>'
    required:
      - Name
      - ObjectType
    type: object
  CreateFacetResponse:
    properties: {}
    type: object
  CreateIndexRequest:
    properties:
      IsUnique:
        $ref: '#/definitions/Bool'
        description: Indicates whether the attribute that is being indexed has unique values or not.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link between the parent object and the index object.
      OrderedIndexedAttributeList:
        $ref: '#/definitions/AttributeKeyList'
        description: Specifies the attributes that should be indexed on. Currently only a single attribute is supported.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the parent object that contains the index object.
    required:
      - OrderedIndexedAttributeList
      - IsUnique
    type: object
  CreateIndexResponse:
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the index created by this operation.
    type: object
  CreateObjectRequest:
    properties:
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of link that is used to attach this object to a parent.
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The attribute map whose attribute ARN contains the key and attribute value as the map value.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: 'If specified, the parent reference to which this object will be attached.'
      SchemaFacets:
        $ref: '#/definitions/SchemaFacetList'
        description: 'A list of schema facets to be associated with the object that contains <code>SchemaArn</code> and facet name. For more information, see <a>arns</a>.'
    required:
      - SchemaFacets
    type: object
  CreateObjectResponse:
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The identifier that is associated with the object.
    type: object
  CreateSchemaRequest:
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: The name that is associated with the schema. This is unique to each account and in each region.
    required:
      - Name
    type: object
  CreateSchemaResponse:
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
    type: object
  CreateTypedLinkFacetRequest:
    properties:
      Facet:
        $ref: '#/definitions/TypedLinkFacet'
        description: ' <a>Facet</a> structure that is associated with the typed link facet.'
    required:
      - Facet
    type: object
  CreateTypedLinkFacetResponse:
    properties: {}
    type: object
  Date:
    format: date-time
    type: string
  DatetimeAttributeValue:
    format: date-time
    type: string
  DeleteDirectoryRequest:
    properties: {}
    type: object
  DeleteDirectoryResponse:
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the deleted directory.
    required:
      - DirectoryArn
    type: object
  DeleteFacetRequest:
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet to delete.
    required:
      - Name
    type: object
  DeleteFacetResponse:
    properties: {}
    type: object
  DeleteObjectRequest:
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference that identifies the object.
    required:
      - ObjectReference
    type: object
  DeleteObjectResponse:
    properties: {}
    type: object
  DeleteSchemaRequest:
    properties: {}
    type: object
  DeleteSchemaResponse:
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The input ARN that is returned as part of the response. For more information, see <a>arns</a>.'
    type: object
  DeleteTypedLinkFacetRequest:
    properties:
      Name:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
    required:
      - Name
    type: object
  DeleteTypedLinkFacetResponse:
    properties: {}
    type: object
  DetachFromIndexRequest:
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index object.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object being detached from the index.
    required:
      - IndexReference
      - TargetReference
    type: object
  DetachFromIndexResponse:
    properties:
      DetachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was detached from the index.
    type: object
  DetachObjectRequest:
    properties:
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The link name associated with the object that needs to be detached.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: The parent reference from which the object with the specified link name is detached.
    required:
      - ParentReference
      - LinkName
    type: object
  DetachObjectResponse:
    properties:
      DetachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> that was detached from the object.
    type: object
  DetachPolicyRequest:
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policy object will be detached.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the policy object.
    required:
      - PolicyReference
      - ObjectReference
    type: object
  DetachPolicyResponse:
    properties: {}
    type: object
  DetachTypedLinkRequest:
    properties:
      TypedLinkSpecifier:
        $ref: '#/definitions/TypedLinkSpecifier'
        description: Used to accept a typed link specifier as input.
    required:
      - TypedLinkSpecifier
    type: object
  Directory:
    description: Directory structure that includes the directory name and directory ARN.
    properties:
      CreationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time when the directory was created.
      DirectoryArn:
        $ref: '#/definitions/DirectoryArn'
        description: 'The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <a>arns</a>.'
      Name:
        $ref: '#/definitions/DirectoryName'
        description: The name of the directory.
      State:
        $ref: '#/definitions/DirectoryState'
        description: 'The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.'
    type: object
  DirectoryAlreadyExistsException:
    description: Indicates that a <a>Directory</a> could not be created due to a naming conflict. Choose a different name and try again.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  DirectoryArn:
    type: string
  DirectoryDeletedException:
    description: 'A directory that has been deleted and to which access has been attempted. Note: The requested resource will eventually cease to exist.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  DirectoryList:
    items:
      $ref: '#/definitions/Directory'
    type: array
  DirectoryName:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  DirectoryNotDisabledException:
    description: An operation can only operate on a disabled directory.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  DirectoryNotEnabledException:
    description: An operation can only operate on a directory that is not enabled.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  DirectoryState:
    enum:
      - ENABLED
      - DISABLED
      - DELETED
    type: string
  DisableDirectoryRequest:
    properties: {}
    type: object
  DisableDirectoryResponse:
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the directory that has been disabled.
    required:
      - DirectoryArn
    type: object
  EnableDirectoryRequest:
    properties: {}
    type: object
  EnableDirectoryResponse:
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the enabled directory.
    required:
      - DirectoryArn
    type: object
  ExceptionMessage:
    type: string
  Facet:
    description: 'A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <a>Rule</a>s, and <code>ObjectTypes</code>.'
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the <a>Facet</a>.
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
    type: object
  FacetAlreadyExistsException:
    description: A facet with the same name already exists.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  FacetAttribute:
    description: An attribute that is associated with the <a>Facet</a>.
    properties:
      AttributeDefinition:
        $ref: '#/definitions/FacetAttributeDefinition'
        description: 'A facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      AttributeReference:
        $ref: '#/definitions/FacetAttributeReference'
        description: 'An attribute reference that is associated with the attribute. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the facet attribute.
      RequiredBehavior:
        $ref: '#/definitions/RequiredAttributeBehavior'
        description: The required behavior of the <code>FacetAttribute</code>.
    required:
      - Name
    type: object
  FacetAttributeDefinition:
    description: 'A facet attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
    properties:
      DefaultValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The default value of the attribute (if configured).
      IsImmutable:
        $ref: '#/definitions/Bool'
        description: Whether the attribute is mutable or not.
      Rules:
        $ref: '#/definitions/RuleMap'
        description: Validation rules attached to the attribute definition.
      Type:
        $ref: '#/definitions/FacetAttributeType'
        description: The type of the attribute.
    required:
      - Type
    type: object
  FacetAttributeList:
    items:
      $ref: '#/definitions/FacetAttribute'
    type: array
  FacetAttributeReference:
    description: The facet attribute reference that specifies the attribute definition that contains the attribute facet name and attribute name.
    properties:
      TargetAttributeName:
        $ref: '#/definitions/AttributeName'
        description: 'The target attribute name that is associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      TargetFacetName:
        $ref: '#/definitions/FacetName'
        description: 'The target facet name that is associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
    required:
      - TargetFacetName
      - TargetAttributeName
    type: object
  FacetAttributeType:
    enum:
      - STRING
      - BINARY
      - BOOLEAN
      - NUMBER
      - DATETIME
    type: string
  FacetAttributeUpdate:
    description: A structure that contains information used to update an attribute.
    properties:
      Action:
        $ref: '#/definitions/UpdateActionType'
        description: The action to perform when updating the attribute.
      Attribute:
        $ref: '#/definitions/FacetAttribute'
        description: The attribute to update.
    type: object
  FacetAttributeUpdateList:
    items:
      $ref: '#/definitions/FacetAttributeUpdate'
    type: array
  FacetInUseException:
    description: Occurs when deleting a facet that contains an attribute that is a target to an attribute reference in a different facet.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  FacetName:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  FacetNameList:
    items:
      $ref: '#/definitions/FacetName'
    type: array
  FacetNotFoundException:
    description: The specified <a>Facet</a> could not be found.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  FacetValidationException:
    description: The <a>Facet</a> that you provided was not well formed or could not be validated with the schema.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  GetDirectoryRequest:
    properties: {}
    type: object
  GetDirectoryResponse:
    properties:
      Directory:
        $ref: '#/definitions/Directory'
        description: Metadata about the directory.
    required:
      - Directory
    type: object
  GetFacetRequest:
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet to retrieve.
    required:
      - Name
    type: object
  GetFacetResponse:
    properties:
      Facet:
        $ref: '#/definitions/Facet'
        description: The <a>Facet</a> structure that is associated with the facet.
    type: object
  GetObjectInformationRequest:
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object.
    required:
      - ObjectReference
    type: object
  GetObjectInformationResponse:
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the specified object.
      SchemaFacets:
        $ref: '#/definitions/SchemaFacetList'
        description: The facets attached to the specified object.
    type: object
  GetSchemaAsJsonRequest:
    properties: {}
    type: object
  GetSchemaAsJsonResponse:
    properties:
      Document:
        $ref: '#/definitions/SchemaJsonDocument'
        description: The JSON representation of the schema document.
      Name:
        $ref: '#/definitions/SchemaName'
        description: The name of the retrieved schema.
    type: object
  GetTypedLinkFacetInformationRequest:
    properties:
      Name:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
    required:
      - Name
    type: object
  GetTypedLinkFacetInformationResponse:
    properties:
      IdentityAttributeOrder:
        $ref: '#/definitions/AttributeNameList'
        description: 'The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
    type: object
  IndexAttachment:
    description: Represents an index and an attached object.
    properties:
      IndexedAttributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The indexed attribute values.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object attached to the index.
    type: object
  IndexAttachmentList:
    items:
      $ref: '#/definitions/IndexAttachment'
    type: array
  IndexedAttributeMissingException:
    description: An object has been attempted to be attached to an object that does not have the appropriate attribute value.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InternalServiceException:
    description: 'Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href="http://status.aws.amazon.com/">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidArnException:
    description: Indicates that the provided ARN value is not valid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidAttachmentException:
    description: Indicates that an attempt to attach an object with the same link name or to apply a schema with the same name has occurred. Rename the link or the schema and then try again.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidFacetUpdateException:
    description: An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidNextTokenException:
    description: Indicates that the <code>NextToken</code> value is not valid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidRuleException:
    description: Occurs when any of the rule parameter keys or values are invalid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidSchemaDocException:
    description: Indicates that the provided <code>SchemaDoc</code> value is not valid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  InvalidTaggingRequestException:
    description: Can occur for multiple reasons such as when you tag a resource that doesn’t exist or if you specify a higher number of tags for a resource than the allowed limit. Allowed limit is 50 tags per resource.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  LimitExceededException:
    description: 'Indicates that limits are exceeded. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html">Limits</a> for more information.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  LinkName:
    maxLength: 64
    minLength: 1
    pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
    type: string
  LinkNameAlreadyInUseException:
    description: Indicates that a link could not be created due to a naming conflict. Choose a different name and then try again.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  LinkNameToObjectIdentifierMap:
    items:
      properties:
        key:
          $ref: '#/definitions/LinkName'
        value:
          $ref: '#/definitions/ObjectIdentifier'
      type: object
    type: array
  ListAppliedSchemaArnsRequest:
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the directory you are listing.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    required:
      - DirectoryArn
    type: object
  ListAppliedSchemaArnsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of schemas that are applied to the directory.
    type: object
  ListAttachedIndicesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object that has indices attached.
    required:
      - TargetReference
    type: object
  ListAttachedIndicesResponse:
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The indices attached to the specified object.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListDevelopmentSchemaArnsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListDevelopmentSchemaArnsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of retrieved development schemas.
    type: object
  ListDirectoriesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      state:
        $ref: '#/definitions/DirectoryState'
        description: 'The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.'
    type: object
  ListDirectoriesResponse:
    properties:
      Directories:
        $ref: '#/definitions/DirectoryList'
        description: Lists all directories that are associated with your account in pagination fashion.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    required:
      - Directories
    type: object
  ListFacetAttributesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet whose attributes will be retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    required:
      - Name
    type: object
  ListFacetAttributesResponse:
    properties:
      Attributes:
        $ref: '#/definitions/FacetAttributeList'
        description: The attributes attached to the facet.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListFacetNamesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListFacetNamesResponse:
    properties:
      FacetNames:
        $ref: '#/definitions/FacetNameList'
        description: The names of facets that exist within the schema.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListIncomingTypedLinksRequest:
    properties:
      ConsistencyLevel:
        $ref: '#/definitions/ConsistencyLevel'
        description: The consistency level to execute the request at.
      FilterAttributeRanges:
        $ref: '#/definitions/TypedLinkAttributeRangeList'
        description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
      FilterTypedLink:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: 'Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.'
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  ListIncomingTypedLinksResponse:
    properties:
      LinkSpecifiers:
        $ref: '#/definitions/TypedLinkSpecifierList'
        description: Returns one or more typed link specifiers as output.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListIndexRequest:
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference to the index to list.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve from the index.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      RangesOnIndexedValues:
        $ref: '#/definitions/ObjectAttributeRangeList'
        description: Specifies the ranges of indexed values that you want to query.
    required:
      - IndexReference
    type: object
  ListIndexResponse:
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The objects and indexed values attached to the index.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListObjectAttributesRequest:
    properties:
      FacetFilter:
        $ref: '#/definitions/SchemaFacet'
        description: Used to filter the list of object attributes that are associated with a certain facet.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  ListObjectAttributesResponse:
    properties:
      Attributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: 'Attributes map that is associated with the object. <code>AttributeArn</code> is the key, and attribute value is the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListObjectChildrenRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object for which child objects are being listed.
    required:
      - ObjectReference
    type: object
  ListObjectChildrenResponse:
    properties:
      Children:
        $ref: '#/definitions/LinkNameToObjectIdentifierMap'
        description: 'Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListObjectParentPathsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object whose parent paths are listed.
    required:
      - ObjectReference
    type: object
  ListObjectParentPathsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PathToObjectIdentifiersList:
        $ref: '#/definitions/PathToObjectIdentifiersList'
        description: Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.
    type: object
  ListObjectParentsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object for which parent objects are being listed.
    required:
      - ObjectReference
    type: object
  ListObjectParentsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      Parents:
        $ref: '#/definitions/ObjectIdentifierToLinkNameMap'
        description: 'The parent structure, which is a map with key as the <code>ObjectIdentifier</code> and LinkName as the value.'
    type: object
  ListObjectPoliciesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object for which policies will be listed.
    required:
      - ObjectReference
    type: object
  ListObjectPoliciesResponse:
    properties:
      AttachedPolicyIds:
        $ref: '#/definitions/ObjectIdentifierList'
        description: 'A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListOutgoingTypedLinksRequest:
    properties:
      ConsistencyLevel:
        $ref: '#/definitions/ConsistencyLevel'
        description: The consistency level to execute the request at.
      FilterAttributeRanges:
        $ref: '#/definitions/TypedLinkAttributeRangeList'
        description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
      FilterTypedLink:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: 'Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.'
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference that identifies the object whose attributes will be listed.
    required:
      - ObjectReference
    type: object
  ListOutgoingTypedLinksResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      TypedLinkSpecifiers:
        $ref: '#/definitions/TypedLinkSpecifierList'
        description: Returns a typed link specifier as output.
    type: object
  ListPolicyAttachmentsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the policy object.
    required:
      - PolicyReference
    type: object
  ListPolicyAttachmentsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      ObjectIdentifiers:
        $ref: '#/definitions/ObjectIdentifierList'
        description: A list of <code>ObjectIdentifiers</code> to which the policy is attached.
    type: object
  ListPublishedSchemaArnsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListPublishedSchemaArnsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of published schemas.
    type: object
  ListTagsForResourceRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/TagsNumberResults'
        description: The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token. This is for future use. Currently pagination is not supported for tagging.
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
    required:
      - ResourceArn
    type: object
  ListTagsForResourceResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. This value is null when there are no more results to return.
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tag key value pairs that are associated with the response.
    type: object
  ListTypedLinkFacetAttributesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      Name:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    required:
      - Name
    type: object
  ListTypedLinkFacetAttributesResponse:
    properties:
      Attributes:
        $ref: '#/definitions/TypedLinkAttributeDefinitionList'
        description: An ordered set of attributes associate with the typed link.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListTypedLinkFacetNamesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  ListTypedLinkFacetNamesResponse:
    properties:
      FacetNames:
        $ref: '#/definitions/TypedLinkNameList'
        description: The names of typed link facets that exist within the schema.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    type: object
  LookupPolicyRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of items to be retrieved in a single call. This is an approximate number.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to request the next page of results.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policies will be looked up.
    required:
      - ObjectReference
    type: object
  LookupPolicyResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      PolicyToPathList:
        $ref: '#/definitions/PolicyToPathList'
        description: 'Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    type: object
  NextToken:
    type: string
  NotIndexException:
    description: Indicates that the requested operation can only operate on index objects.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  NotNodeException:
    description: 'Occurs when any invalid operations are performed on an object that is not a node, such as calling <code>ListObjectChildren</code> for a leaf node object.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  NotPolicyException:
    description: Indicates that the requested operation can only operate on policy objects.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  NumberAttributeValue:
    type: string
  NumberResults:
    minimum: 1
    type: integer
  ObjectAlreadyDetachedException:
    description: Indicates that the object is not attached to the index.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  ObjectAttributeAction:
    description: The action to take on the object attribute.
    properties:
      ObjectAttributeActionType:
        $ref: '#/definitions/UpdateActionType'
        description: A type that can be either <code>Update</code> or <code>Delete</code>.
      ObjectAttributeUpdateValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value that you want to update to.
    type: object
  ObjectAttributeRange:
    description: A range of attributes.
    properties:
      AttributeKey:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute that the attribute range covers.
      Range:
        $ref: '#/definitions/TypedAttributeValueRange'
        description: The range of attribute values being selected.
    type: object
  ObjectAttributeRangeList:
    items:
      $ref: '#/definitions/ObjectAttributeRange'
    type: array
  ObjectAttributeUpdate:
    description: Structure that contains attribute update information.
    properties:
      ObjectAttributeAction:
        $ref: '#/definitions/ObjectAttributeAction'
        description: The action to perform as part of the attribute update.
      ObjectAttributeKey:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute being updated.
    type: object
  ObjectAttributeUpdateList:
    items:
      $ref: '#/definitions/ObjectAttributeUpdate'
    type: array
  ObjectIdentifier:
    type: string
  ObjectIdentifierList:
    items:
      $ref: '#/definitions/ObjectIdentifier'
    type: array
  ObjectIdentifierToLinkNameMap:
    items:
      properties:
        key:
          $ref: '#/definitions/ObjectIdentifier'
        value:
          $ref: '#/definitions/LinkName'
      type: object
    type: array
  ObjectNotDetachedException:
    description: Indicates that the requested operation cannot be completed because the object has not been detached from the tree.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  ObjectReference:
    description: The reference that identifies an object.
    properties:
      Selector:
        $ref: '#/definitions/SelectorObjectReference'
        description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    type: object
  ObjectType:
    enum:
      - NODE
      - LEAF_NODE
      - POLICY
      - INDEX
    type: string
  PathString:
    type: string
  PathToObjectIdentifiers:
    description: Returns the path to the <code>ObjectIdentifiers</code> that is associated with the directory.
    properties:
      ObjectIdentifiers:
        $ref: '#/definitions/ObjectIdentifierList'
        description: Lists <code>ObjectIdentifiers</code> starting from directory root to the object in the request.
      Path:
        $ref: '#/definitions/PathString'
        description: The path that is used to identify the object starting from directory root.
    type: object
  PathToObjectIdentifiersList:
    items:
      $ref: '#/definitions/PathToObjectIdentifiers'
    type: array
  PolicyAttachment:
    description: 'Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> that is associated with <code>PolicyAttachment</code>.
      PolicyId:
        $ref: '#/definitions/ObjectIdentifier'
        description: The ID of <code>PolicyAttachment</code>.
      PolicyType:
        $ref: '#/definitions/PolicyType'
        description: The type of policy that can be associated with <code>PolicyAttachment</code>.
    type: object
  PolicyAttachmentList:
    items:
      $ref: '#/definitions/PolicyAttachment'
    type: array
  PolicyToPath:
    description: Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies that are associated with that object and the parent to that object.
    properties:
      Path:
        $ref: '#/definitions/PathString'
        description: The path that is referenced from the root.
      Policies:
        $ref: '#/definitions/PolicyAttachmentList'
        description: List of policy objects.
    type: object
  PolicyToPathList:
    items:
      $ref: '#/definitions/PolicyToPath'
    type: array
  PolicyType:
    type: string
  PublishSchemaRequest:
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: 'The new name under which the schema will be published. If this is not provided, the development schema is considered.'
      Version:
        $ref: '#/definitions/Version'
        description: The version under which the schema will be published.
    required:
      - Version
    type: object
  PublishSchemaResponse:
    properties:
      PublishedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN that is associated with the published schema. For more information, see <a>arns</a>.'
    type: object
  PutSchemaFromJsonRequest:
    properties:
      Document:
        $ref: '#/definitions/SchemaJsonDocument'
        description: The replacement JSON schema.
    required:
      - Document
    type: object
  PutSchemaFromJsonResponse:
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema to update.
    type: object
  RangeMode:
    enum:
      - FIRST
      - LAST
      - LAST_BEFORE_MISSING_VALUES
      - INCLUSIVE
      - EXCLUSIVE
    type: string
  RemoveFacetFromObjectRequest:
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object to remove the facet from.
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: The facet to remove.
    required:
      - SchemaFacet
      - ObjectReference
    type: object
  RemoveFacetFromObjectResponse:
    properties: {}
    type: object
  RequiredAttributeBehavior:
    enum:
      - REQUIRED_ALWAYS
      - NOT_REQUIRED
    type: string
  ResourceNotFoundException:
    description: The specified resource could not be found.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  RetryableConflictException:
    description: 'Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.'
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  Rule:
    description: Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule.
    properties:
      Parameters:
        $ref: '#/definitions/RuleParameterMap'
        description: The minimum and maximum parameters that are associated with the rule.
      Type:
        $ref: '#/definitions/RuleType'
        description: The type of attribute validation rule.
    type: object
  RuleKey:
    maxLength: 64
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  RuleMap:
    items:
      properties:
        key:
          $ref: '#/definitions/RuleKey'
        value:
          $ref: '#/definitions/Rule'
      type: object
    type: array
  RuleParameterKey:
    type: string
  RuleParameterMap:
    items:
      properties:
        key:
          $ref: '#/definitions/RuleParameterKey'
        value:
          $ref: '#/definitions/RuleParameterValue'
      type: object
    type: array
  RuleParameterValue:
    type: string
  RuleType:
    enum:
      - BINARY_LENGTH
      - NUMBER_COMPARISON
      - STRING_FROM_SET
      - STRING_LENGTH
    type: string
  SchemaAlreadyExistsException:
    description: Indicates that a schema could not be created due to a naming conflict. Please select a different name and then try again.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  SchemaAlreadyPublishedException:
    description: Indicates that a schema is already published.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  SchemaFacet:
    description: A facet.
    properties:
      FacetName:
        $ref: '#/definitions/FacetName'
        description: The name of the facet.
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema that contains the facet.
    type: object
  SchemaFacetList:
    items:
      $ref: '#/definitions/SchemaFacet'
    type: array
  SchemaJsonDocument:
    type: string
  SchemaName:
    maxLength: 32
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  SelectorObjectReference:
    type: string
  StillContainsLinksException:
    description: The object could not be deleted because links still exist. Remove the links and then try the operation again.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  StringAttributeValue:
    type: string
  Tag:
    description: The tag structure that contains a tag key and value.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key that is associated with the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value that is associated with the tag.
    type: object
  TagKey:
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TagResourceRequest:
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tag key-value pairs.
    required:
      - ResourceArn
      - Tags
    type: object
  TagResourceResponse:
    properties: {}
    type: object
  TagValue:
    type: string
  TagsNumberResults:
    minimum: 50
    type: integer
  TypedAttributeValue:
    description: 'Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.'
    properties:
      BinaryValue:
        $ref: '#/definitions/BinaryAttributeValue'
        description: A binary data value.
      BooleanValue:
        $ref: '#/definitions/BooleanAttributeValue'
        description: A Boolean data value.
      DatetimeValue:
        $ref: '#/definitions/DatetimeAttributeValue'
        description: A date and time value.
      NumberValue:
        $ref: '#/definitions/NumberAttributeValue'
        description: A number data value.
      StringValue:
        $ref: '#/definitions/StringAttributeValue'
        description: A string data value.
    type: object
  TypedAttributeValueRange:
    description: A range of attribute values.
    properties:
      EndMode:
        $ref: '#/definitions/RangeMode'
        description: The inclusive or exclusive range end.
      EndValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The attribute value to terminate the range at.
      StartMode:
        $ref: '#/definitions/RangeMode'
        description: The inclusive or exclusive range start.
      StartValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value to start the range at.
    required:
      - StartMode
      - EndMode
    type: object
  TypedLinkAttributeDefinition:
    description: A typed link attribute definition.
    properties:
      DefaultValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The default value of the attribute (if configured).
      IsImmutable:
        $ref: '#/definitions/Bool'
        description: Whether the attribute is mutable or not.
      Name:
        $ref: '#/definitions/AttributeName'
        description: The unique name of the typed link attribute.
      RequiredBehavior:
        $ref: '#/definitions/RequiredAttributeBehavior'
        description: The required behavior of the <code>TypedLinkAttributeDefinition</code>.
      Rules:
        $ref: '#/definitions/RuleMap'
        description: Validation rules that are attached to the attribute definition.
      Type:
        $ref: '#/definitions/FacetAttributeType'
        description: The type of the attribute.
    required:
      - Name
      - Type
      - RequiredBehavior
    type: object
  TypedLinkAttributeDefinitionList:
    items:
      $ref: '#/definitions/TypedLinkAttributeDefinition'
    type: array
  TypedLinkAttributeRange:
    description: Identifies the range of attributes that are used by a specified filter.
    properties:
      AttributeName:
        $ref: '#/definitions/AttributeName'
        description: The unique name of the typed link attribute.
      Range:
        $ref: '#/definitions/TypedAttributeValueRange'
        description: The range of attribute values that are being selected.
    required:
      - Range
    type: object
  TypedLinkAttributeRangeList:
    items:
      $ref: '#/definitions/TypedLinkAttributeRange'
    type: array
  TypedLinkFacet:
    description: 'Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.'
    properties:
      Attributes:
        $ref: '#/definitions/TypedLinkAttributeDefinitionList'
        description: 'A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects.'
      IdentityAttributeOrder:
        $ref: '#/definitions/AttributeNameList'
        description: 'The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details.'
      Name:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
    required:
      - Name
      - Attributes
      - IdentityAttributeOrder
    type: object
  TypedLinkFacetAttributeUpdate:
    description: A typed link facet attribute update.
    properties:
      Action:
        $ref: '#/definitions/UpdateActionType'
        description: The action to perform when updating the attribute.
      Attribute:
        $ref: '#/definitions/TypedLinkAttributeDefinition'
        description: The attribute to update.
    required:
      - Attribute
      - Action
    type: object
  TypedLinkFacetAttributeUpdateList:
    items:
      $ref: '#/definitions/TypedLinkFacetAttributeUpdate'
    type: array
  TypedLinkName:
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
  TypedLinkNameList:
    items:
      $ref: '#/definitions/TypedLinkName'
    type: array
  TypedLinkSchemaAndFacetName:
    description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
      TypedLinkName:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
    required:
      - SchemaArn
      - TypedLinkName
    type: object
  TypedLinkSpecifier:
    description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
    properties:
      IdentityAttributeValues:
        $ref: '#/definitions/AttributeNameAndValueList'
        description: Identifies the attribute value to update.
      SourceObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the source object that the typed link will attach to.
      TargetObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Identifies the target object that the typed link will attach to.
      TypedLinkFacet:
        $ref: '#/definitions/TypedLinkSchemaAndFacetName'
        description: Identifies the typed link facet that is associated with the typed link.
    required:
      - TypedLinkFacet
      - SourceObjectReference
      - TargetObjectReference
      - IdentityAttributeValues
    type: object
  TypedLinkSpecifierList:
    items:
      $ref: '#/definitions/TypedLinkSpecifier'
    type: array
  UnsupportedIndexTypeException:
    description: Indicates that the requested index type is not supported.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  UntagResourceRequest:
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: Keys of the tag that need to be removed from the resource.
    required:
      - ResourceArn
      - TagKeys
    type: object
  UntagResourceResponse:
    properties: {}
    type: object
  UpdateActionType:
    enum:
      - CREATE_OR_UPDATE
      - DELETE
    type: string
  UpdateFacetRequest:
    properties:
      AttributeUpdates:
        $ref: '#/definitions/FacetAttributeUpdateList'
        description: 'List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform. '
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet.
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
    required:
      - Name
    type: object
  UpdateFacetResponse:
    properties: {}
    type: object
  UpdateObjectAttributesRequest:
    properties:
      AttributeUpdates:
        $ref: '#/definitions/ObjectAttributeUpdateList'
        description: The attributes update structure.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference that identifies the object.
    required:
      - ObjectReference
      - AttributeUpdates
    type: object
  UpdateObjectAttributesResponse:
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the updated object.
    type: object
  UpdateSchemaRequest:
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: The name of the schema.
    required:
      - Name
    type: object
  UpdateSchemaResponse:
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN that is associated with the updated schema. For more information, see <a>arns</a>.'
    type: object
  UpdateTypedLinkFacetRequest:
    properties:
      AttributeUpdates:
        $ref: '#/definitions/TypedLinkFacetAttributeUpdateList'
        description: Attributes update structure.
      IdentityAttributeOrder:
        $ref: '#/definitions/AttributeNameList'
        description: 'The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      Name:
        $ref: '#/definitions/TypedLinkName'
        description: The unique name of the typed link facet.
    required:
      - Name
      - AttributeUpdates
      - IdentityAttributeOrder
    type: object
  UpdateTypedLinkFacetResponse:
    properties: {}
    type: object
  ValidationException:
    description: Indicates that your request is malformed in some manner. See the exception message.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    type: object
  Version:
    maxLength: 10
    minLength: 1
    pattern: '^[a-zA-Z0-9._-]*$'
    type: string
