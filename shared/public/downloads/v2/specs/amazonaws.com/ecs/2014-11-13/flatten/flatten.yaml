basePath: /
consumes.length: 1
consumes[0]: application/json
definitions.AgentUpdateStatus.enum.length: 6
definitions.AgentUpdateStatus.enum[0]: PENDING
definitions.AgentUpdateStatus.enum[1]: STAGING
definitions.AgentUpdateStatus.enum[2]: STAGED
definitions.AgentUpdateStatus.enum[3]: UPDATING
definitions.AgentUpdateStatus.enum[4]: UPDATED
definitions.AgentUpdateStatus.enum[5]: FAILED
definitions.AgentUpdateStatus.type: string
definitions.Attribute.description: An attribute is a name-value pair associated with
  an Amazon ECS object. Attributes enable you to extend the Amazon ECS data model
  by adding custom metadata to your resources. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
  in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.Attribute.properties.name.$ref: '#/definitions/String'
definitions.Attribute.properties.name.description: The name of the attribute. Up to
  128 letters (uppercase and lowercase), numbers, hyphens, underscores, and periods
  are allowed.
definitions.Attribute.properties.targetId.$ref: '#/definitions/String'
definitions.Attribute.properties.targetId.description: The ID of the target. You can
  specify the short form ID for a resource or the full Amazon Resource Name (ARN).
definitions.Attribute.properties.targetType.$ref: '#/definitions/TargetType'
definitions.Attribute.properties.targetType.description: The type of the target with
  which to attach the attribute. This parameter is required if you use the short form
  ID for a resource instead of the full Amazon Resource Name (ARN).
definitions.Attribute.properties.value.$ref: '#/definitions/String'
definitions.Attribute.properties.value.description: The value of the attribute. Up
  to 128 letters (uppercase and lowercase), numbers, hyphens, underscores, periods,
  at signs (@), forward slashes, colons, and spaces are allowed.
definitions.Attribute.required.length: 1
definitions.Attribute.required[0]: name
definitions.Attribute.type: object
definitions.AttributeLimitExceededException.description: You can apply up to 10 custom
  attributes per resource. You can view the attributes of a resource with <a>ListAttributes</a>.
  You can remove existing attributes on a resource with <a>DeleteAttributes</a>.
definitions.AttributeLimitExceededException.type: object
definitions.Attributes.items.$ref: '#/definitions/Attribute'
definitions.Attributes.type: array
definitions.Boolean.type: boolean
definitions.BoxedBoolean.type: boolean
definitions.BoxedInteger.type: integer
definitions.ClientException.description: These errors are usually caused by a client
  action, such as using an action or resource on behalf of a user that doesn't have
  permission to use the action or resource, or specifying an identifier that is not
  valid.
definitions.ClientException.properties.message.$ref: '#/definitions/String'
definitions.ClientException.type: object
definitions.Cluster.description: A regional grouping of one or more container instances
  on which you can run task requests. Each account receives a default cluster the
  first time you use the Amazon ECS service, but you may also create other clusters.
  Clusters may contain more than one instance type simultaneously.
definitions.Cluster.properties.activeServicesCount.$ref: '#/definitions/Integer'
definitions.Cluster.properties.activeServicesCount.description: The number of services
  that are running on the cluster in an <code>ACTIVE</code> state. You can view these
  services with <a>ListServices</a>.
definitions.Cluster.properties.clusterArn.$ref: '#/definitions/String'
definitions.Cluster.properties.clusterArn.description: The Amazon Resource Name (ARN)
  that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code> namespace,
  followed by the region of the cluster, the AWS account ID of the cluster owner,
  the <code>cluster</code> namespace, and then the cluster name. For example, <code>arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i>
  </code>..
definitions.Cluster.properties.clusterName.$ref: '#/definitions/String'
definitions.Cluster.properties.clusterName.description: A user-generated string that
  you use to identify your cluster.
definitions.Cluster.properties.pendingTasksCount.$ref: '#/definitions/Integer'
definitions.Cluster.properties.pendingTasksCount.description: The number of tasks
  in the cluster that are in the <code>PENDING</code> state.
definitions.Cluster.properties.registeredContainerInstancesCount.$ref: '#/definitions/Integer'
definitions.Cluster.properties.registeredContainerInstancesCount.description: The
  number of container instances registered into the cluster.
definitions.Cluster.properties.runningTasksCount.$ref: '#/definitions/Integer'
definitions.Cluster.properties.runningTasksCount.description: The number of tasks
  in the cluster that are in the <code>RUNNING</code> state.
definitions.Cluster.properties.status.$ref: '#/definitions/String'
definitions.Cluster.properties.status.description: The status of the cluster. The
  valid values are <code>ACTIVE</code> or <code>INACTIVE</code>. <code>ACTIVE</code>
  indicates that you can register container instances with the cluster and the associated
  instances can accept tasks.
definitions.Cluster.type: object
definitions.ClusterContainsContainerInstancesException.description: You cannot delete
  a cluster that has registered container instances. You must first deregister the
  container instances before you can delete the cluster. For more information, see
  <a>DeregisterContainerInstance</a>.
definitions.ClusterContainsContainerInstancesException.type: object
definitions.ClusterContainsServicesException.description: You cannot delete a cluster
  that contains services. You must first update the service to reduce its desired
  task count to 0 and then delete the service. For more information, see <a>UpdateService</a>
  and <a>DeleteService</a>.
definitions.ClusterContainsServicesException.type: object
definitions.ClusterNotFoundException.description: The specified cluster could not
  be found. You can view your available clusters with <a>ListClusters</a>. Amazon
  ECS clusters are region-specific.
definitions.ClusterNotFoundException.type: object
definitions.Clusters.items.$ref: '#/definitions/Cluster'
definitions.Clusters.type: array
definitions.Container.description: A Docker container that is part of a task.
definitions.Container.properties.containerArn.$ref: '#/definitions/String'
definitions.Container.properties.containerArn.description: The Amazon Resource Name
  (ARN) of the container.
definitions.Container.properties.exitCode.$ref: '#/definitions/BoxedInteger'
definitions.Container.properties.exitCode.description: The exit code returned from
  the container.
definitions.Container.properties.lastStatus.$ref: '#/definitions/String'
definitions.Container.properties.lastStatus.description: The last known status of
  the container.
definitions.Container.properties.name.$ref: '#/definitions/String'
definitions.Container.properties.name.description: The name of the container.
definitions.Container.properties.networkBindings.$ref: '#/definitions/NetworkBindings'
definitions.Container.properties.networkBindings.description: The network bindings
  associated with the container.
definitions.Container.properties.reason.$ref: '#/definitions/String'
definitions.Container.properties.reason.description: A short (255 max characters)
  human-readable string to provide additional details about a running or stopped container.
definitions.Container.properties.taskArn.$ref: '#/definitions/String'
definitions.Container.properties.taskArn.description: The Amazon Resource Name (ARN)
  of the task.
definitions.Container.type: object
definitions.ContainerDefinition.description: Container definitions are used in task
  definitions to describe the different containers that are launched as part of a
  task.
definitions.ContainerDefinition.properties.command.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.command.description: The command that is
  passed to the container. This parameter maps to <code>Cmd</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
definitions.ContainerDefinition.properties.cpu.$ref: '#/definitions/Integer'
definitions.ContainerDefinition.properties.cpu.description: <p>The number of <code>cpu</code>
  units reserved for the container. A container instance has 1,024 <code>cpu</code>
  units for every CPU core. This parameter specifies the minimum amount of CPU to
  reserve for a container, and containers share unallocated CPU units with other containers
  on the instance with the same ratio as their allocated amount. This parameter maps
  to <code>CpuShares</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <note> <p>You can determine the number of CPU units that are available
  per EC2 instance type by multiplying the vCPUs listed for that instance type on
  the <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instances</a>
  detail page by 1,024.</p> </note> <p>For example, if you run a single-container
  task on a single-core instance type with 512 CPU units specified for that container,
  and that is the only task running on the container instance, that container could
  use the full 1,024 CPU unit share at any given time. However, if you launched another
  copy of the same task on that container instance, each task would be guaranteed
  a minimum of 512 CPU units when needed, and each container could float to higher
  CPU usage if the other container was not using it, but if both tasks were 100% active
  all of the time, they would be limited to 512 CPU units.</p> <p>The Docker daemon
  on the container instance uses the CPU value to calculate the relative CPU share
  ratios for running containers. For more information, see <a href="https://docs.docker.com/engine/reference/run/#cpu-share-constraint">CPU
  share constraint</a> in the Docker documentation. The minimum valid CPU share value
  that the Linux kernel allows is 2; however, the CPU parameter is not required, and
  you can use CPU values below 2 in your container definitions. For CPU values below
  2 (including null), the behavior varies based on your Amazon ECS container agent
  version:</p> <ul> <li> <p> <b>Agent versions less than or equal to 1.1.0:</b> Null
  and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024
  CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts
  to 2 CPU shares.</p> </li> <li> <p> <b>Agent versions greater than or equal to 1.2.0:</b>
  Null, zero, and CPU values of 1 are passed to Docker as 2.</p> </li> </ul>
definitions.ContainerDefinition.properties.disableNetworking.$ref: '#/definitions/BoxedBoolean'
definitions.ContainerDefinition.properties.disableNetworking.description: When this
  parameter is true, networking is disabled within the container. This parameter maps
  to <code>NetworkDisabled</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a>.
definitions.ContainerDefinition.properties.dnsSearchDomains.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.dnsSearchDomains.description: A list of
  DNS search domains that are presented to the container. This parameter maps to <code>DnsSearch</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--dns-search</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.dnsServers.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.dnsServers.description: A list of DNS servers
  that are presented to the container. This parameter maps to <code>Dns</code> in
  the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--dns</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.dockerLabels.$ref: '#/definitions/DockerLabelsMap'
definitions.ContainerDefinition.properties.dockerLabels.description: 'A key/value
  map of labels to add to the container. This parameter maps to <code>Labels</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--label</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. This parameter requires version 1.18 of the Docker Remote API or greater
  on your container instance. To check the Docker Remote API version on your container
  instance, log into your container instance and run the following command: <code>sudo
  docker version | grep "Server API version"</code> '
definitions.ContainerDefinition.properties.dockerSecurityOptions.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.dockerSecurityOptions.description: <p>A
  list of strings to provide custom labels for SELinux and AppArmor multi-level security
  systems. This parameter maps to <code>SecurityOpt</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--security-opt</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <note> <p>The Amazon ECS container agent running on a container instance
  must register with the <code>ECS_SELINUX_CAPABLE=true</code> or <code>ECS_APPARMOR_CAPABLE=true</code>
  environment variables before containers placed on that instance can use these security
  options. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
  ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
  Guide</i>.</p> </note>
definitions.ContainerDefinition.properties.entryPoint.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.entryPoint.description: <important> <p>Early
  versions of the Amazon ECS container agent do not properly handle <code>entryPoint</code>
  parameters. If you have problems using <code>entryPoint</code>, update your container
  agent or enter your commands and arguments as <code>command</code> array items instead.</p>
  </important> <p>The entry point that is passed to the container. This parameter
  maps to <code>Entrypoint</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--entrypoint</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#entrypoint">https://docs.docker.com/engine/reference/builder/#entrypoint</a>.</p>
definitions.ContainerDefinition.properties.environment.$ref: '#/definitions/EnvironmentVariables'
definitions.ContainerDefinition.properties.environment.description: <p>The environment
  variables to pass to a container. This parameter maps to <code>Env</code> in the
  <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <important> <p>We do not recommend using plain text environment variables
  for sensitive information, such as credential data.</p> </important>
definitions.ContainerDefinition.properties.essential.$ref: '#/definitions/BoxedBoolean'
definitions.ContainerDefinition.properties.essential.description: <p>If the <code>essential</code>
  parameter of a container is marked as <code>true</code>, and that container fails
  or stops for any reason, all other containers that are part of the task are stopped.
  If the <code>essential</code> parameter of a container is marked as <code>false</code>,
  then its failure does not affect the rest of the containers in a task. If this parameter
  is omitted, a container is assumed to be essential.</p> <p>All tasks must have at
  least one essential container. If you have an application that is composed of multiple
  containers, you should group containers that are used for a common purpose into
  components, and separate the different components into multiple task definitions.
  For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
  Architecture</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>
definitions.ContainerDefinition.properties.extraHosts.$ref: '#/definitions/HostEntryList'
definitions.ContainerDefinition.properties.extraHosts.description: A list of hostnames
  and IP address mappings to append to the <code>/etc/hosts</code> file on the container.
  This parameter maps to <code>ExtraHosts</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--add-host</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.hostname.$ref: '#/definitions/String'
definitions.ContainerDefinition.properties.hostname.description: The hostname to use
  for your container. This parameter maps to <code>Hostname</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--hostname</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.image.$ref: '#/definitions/String'
definitions.ContainerDefinition.properties.image.description: <p>The image used to
  start a container. This string is passed directly to the Docker daemon. Images in
  the Docker Hub registry are available by default. Other repositories are specified
  with either <code> <i>repository-url</i>/<i>image</i>:<i>tag</i> </code> or <code>
  <i>repository-url</i>/<i>image</i>@<i>digest</i> </code>. Up to 255 letters (uppercase
  and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes,
  and number signs are allowed. This parameter maps to <code>Image</code> in the <a
  href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <ul> <li> <p>Images in Amazon ECR repositories can be specified by
  either using the full <code>registry/repository:tag</code> or <code>registry/repository@digest</code>.
  For example, <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;:latest</code>
  or <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE</code>.
  </p> </li> <li> <p>Images in official repositories on Docker Hub use a single name
  (for example, <code>ubuntu</code> or <code>mongo</code>).</p> </li> <li> <p>Images
  in other repositories on Docker Hub are qualified with an organization name (for
  example, <code>amazon/amazon-ecs-agent</code>).</p> </li> <li> <p>Images in other
  online repositories are qualified further by a domain name (for example, <code>quay.io/assemblyline/ubuntu</code>).</p>
  </li> </ul>
definitions.ContainerDefinition.properties.links.$ref: '#/definitions/StringList'
definitions.ContainerDefinition.properties.links.description: <p>The <code>link</code>
  parameter allows containers to communicate with each other without the need for
  port mappings, using the <code>name</code> parameter and optionally, an <code>alias</code>
  for the link. This construct is analogous to <code>name:alias</code> in Docker links.
  Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are
  allowed for each <code>name</code> and <code>alias</code>. For more information
  on linking Docker containers, see <a href="https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/">https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/</a>.
  This parameter maps to <code>Links</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--link</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <important> <p>Containers that are collocated on a single container
  instance may be able to communicate with each other without requiring links or host
  port mappings. Network isolation is achieved on the container instance using security
  groups and VPC settings.</p> </important>
definitions.ContainerDefinition.properties.linuxParameters.$ref: '#/definitions/LinuxParameters'
definitions.ContainerDefinition.properties.linuxParameters.description: Linux-specific
  modifications that are applied to the container, such as Linux <a>KernelCapabilities</a>.
definitions.ContainerDefinition.properties.logConfiguration.$ref: '#/definitions/LogConfiguration'
definitions.ContainerDefinition.properties.logConfiguration.description: '<p>The log
  configuration specification for the container. This parameter maps to <code>LogConfig</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. By default, containers use the same logging driver that the Docker daemon
  uses; however the container may use a different logging driver than the Docker daemon
  by specifying a log driver with this parameter in the container definition. To use
  a different logging driver for a container, the log system must be configured properly
  on the container instance (or on a different log server for remote logging options).
  For more information on the options for different supported log drivers, see <a
  href="https://docs.docker.com/engine/admin/logging/overview/">Configure logging
  drivers</a> in the Docker documentation.</p> <note> <p>Amazon ECS currently supports
  a subset of the logging drivers available to the Docker daemon (shown in the <a>LogConfiguration</a>
  data type). Additional log drivers may be available in future releases of the Amazon
  ECS container agent.</p> </note> <p>This parameter requires version 1.18 of the
  Docker Remote API or greater on your container instance. To check the Docker Remote
  API version on your container instance, log into your container instance and run
  the following command: <code>sudo docker version | grep "Server API version"</code>
  </p> <note> <p>The Amazon ECS container agent running on a container instance must
  register the logging drivers available on that instance with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code>
  environment variable before containers placed on that instance can use these log
  configuration options. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
  ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
  Guide</i>.</p> </note>'
definitions.ContainerDefinition.properties.memory.$ref: '#/definitions/BoxedInteger'
definitions.ContainerDefinition.properties.memory.description: <p>The hard limit (in
  MiB) of memory to present to the container. If your container attempts to exceed
  the memory specified here, the container is killed. This parameter maps to <code>Memory</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <p>You must specify a non-zero integer for one or both of <code>memory</code>
  or <code>memoryReservation</code> in container definitions. If you specify both,
  <code>memory</code> must be greater than <code>memoryReservation</code>. If you
  specify <code>memoryReservation</code>, then that value is subtracted from the available
  memory resources for the container instance on which the container is placed; otherwise,
  the value of <code>memory</code> is used.</p> <p>The Docker daemon reserves a minimum
  of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of
  memory for your containers. </p>
definitions.ContainerDefinition.properties.memoryReservation.$ref: '#/definitions/BoxedInteger'
definitions.ContainerDefinition.properties.memoryReservation.description: <p>The soft
  limit (in MiB) of memory to reserve for the container. When system memory is under
  heavy contention, Docker attempts to keep the container memory to this soft limit;
  however, your container can consume more memory when it needs to, up to either the
  hard limit specified with the <code>memory</code> parameter (if applicable), or
  all of the available memory on the container instance, whichever comes first. This
  parameter maps to <code>MemoryReservation</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--memory-reservation</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.</p> <p>You must specify a non-zero integer for one or both of <code>memory</code>
  or <code>memoryReservation</code> in container definitions. If you specify both,
  <code>memory</code> must be greater than <code>memoryReservation</code>. If you
  specify <code>memoryReservation</code>, then that value is subtracted from the available
  memory resources for the container instance on which the container is placed; otherwise,
  the value of <code>memory</code> is used.</p> <p>For example, if your container
  normally uses 128 MiB of memory, but occasionally bursts to 256 MiB of memory for
  short periods of time, you can set a <code>memoryReservation</code> of 128 MiB,
  and a <code>memory</code> hard limit of 300 MiB. This configuration would allow
  the container to only reserve 128 MiB of memory from the remaining resources on
  the container instance, but also allow the container to consume more memory resources
  when needed.</p>
definitions.ContainerDefinition.properties.mountPoints.$ref: '#/definitions/MountPointList'
definitions.ContainerDefinition.properties.mountPoints.description: The mount points
  for data volumes in your container. This parameter maps to <code>Volumes</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.name.$ref: '#/definitions/String'
definitions.ContainerDefinition.properties.name.description: 'The name of a container.
  If you are linking multiple containers together in a task definition, the <code>name</code>
  of one container can be entered in the <code>links</code> of another container to
  connect the containers. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
  and underscores are allowed. This parameter maps to <code>name</code> in the <a
  href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--name</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. '
definitions.ContainerDefinition.properties.portMappings.$ref: '#/definitions/PortMappingList'
definitions.ContainerDefinition.properties.portMappings.description: <p>The list of
  port mappings for the container. Port mappings allow containers to access ports
  on the host container instance to send or receive traffic. This parameter maps to
  <code>PortBindings</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--publish</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. If the network mode of a task definition is set to <code>none</code>, then
  you cannot specify port mappings. If the network mode of a task definition is set
  to <code>host</code>, then host ports must either be undefined or they must match
  the container port in the port mapping.</p> <note> <p>After a task reaches the <code>RUNNING</code>
  status, manual and automatic host and container port assignments are visible in
  the <b>Network Bindings</b> section of a container description of a selected task
  in the Amazon ECS console, or the <code>networkBindings</code> section <a>DescribeTasks</a>
  responses.</p> </note>
definitions.ContainerDefinition.properties.privileged.$ref: '#/definitions/BoxedBoolean'
definitions.ContainerDefinition.properties.privileged.description: When this parameter
  is true, the container is given elevated privileges on the host container instance
  (similar to the <code>root</code> user). This parameter maps to <code>Privileged</code>
  in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--privileged</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.readonlyRootFilesystem.$ref: '#/definitions/BoxedBoolean'
definitions.ContainerDefinition.properties.readonlyRootFilesystem.description: When
  this parameter is true, the container is given read-only access to its root file
  system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--read-only</code> option to <code>docker run</code>.
definitions.ContainerDefinition.properties.ulimits.$ref: '#/definitions/UlimitList'
definitions.ContainerDefinition.properties.ulimits.description: 'A list of <code>ulimits</code>
  to set in the container. This parameter maps to <code>Ulimits</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>. Valid naming values are displayed in the <a>Ulimit</a> data type. This
  parameter requires version 1.18 of the Docker Remote API or greater on your container
  instance. To check the Docker Remote API version on your container instance, log
  into your container instance and run the following command: <code>sudo docker version
  | grep "Server API version"</code> '
definitions.ContainerDefinition.properties.user.$ref: '#/definitions/String'
definitions.ContainerDefinition.properties.user.description: The user name to use
  inside the container. This parameter maps to <code>User</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.volumesFrom.$ref: '#/definitions/VolumeFromList'
definitions.ContainerDefinition.properties.volumesFrom.description: Data volumes to
  mount from another container. This parameter maps to <code>VolumesFrom</code> in
  the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--volumes-from</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.properties.workingDirectory.$ref: '#/definitions/String'
definitions.ContainerDefinition.properties.workingDirectory.description: The working
  directory in which to run commands inside the container. This parameter maps to
  <code>WorkingDir</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--workdir</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.ContainerDefinition.type: object
definitions.ContainerDefinitions.items.$ref: '#/definitions/ContainerDefinition'
definitions.ContainerDefinitions.type: array
definitions.ContainerInstance.description: An EC2 instance that is running the Amazon
  ECS agent and has been registered with a cluster.
definitions.ContainerInstance.properties.agentConnected.$ref: '#/definitions/Boolean'
definitions.ContainerInstance.properties.agentConnected.description: This parameter
  returns <code>true</code> if the agent is actually connected to Amazon ECS. Registered
  instances with an agent that may be unhealthy or stopped return <code>false</code>,
  and instances without a connected agent cannot accept placement requests.
definitions.ContainerInstance.properties.agentUpdateStatus.$ref: '#/definitions/AgentUpdateStatus'
definitions.ContainerInstance.properties.agentUpdateStatus.description: The status
  of the most recent agent update. If an update has never been requested, this value
  is <code>NULL</code>.
definitions.ContainerInstance.properties.attributes.$ref: '#/definitions/Attributes'
definitions.ContainerInstance.properties.attributes.description: The attributes set
  for the container instance, either by the Amazon ECS container agent at instance
  registration or manually with the <a>PutAttributes</a> operation.
definitions.ContainerInstance.properties.containerInstanceArn.$ref: '#/definitions/String'
definitions.ContainerInstance.properties.containerInstanceArn.description: The Amazon
  Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code>
  namespace, followed by the region of the container instance, the AWS account ID
  of the container instance owner, the <code>container-instance</code> namespace,
  and then the container instance ID. For example, <code>arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>
  </code>.
definitions.ContainerInstance.properties.ec2InstanceId.$ref: '#/definitions/String'
definitions.ContainerInstance.properties.ec2InstanceId.description: The EC2 instance
  ID of the container instance.
definitions.ContainerInstance.properties.pendingTasksCount.$ref: '#/definitions/Integer'
definitions.ContainerInstance.properties.pendingTasksCount.description: The number
  of tasks on the container instance that are in the <code>PENDING</code> status.
definitions.ContainerInstance.properties.registeredAt.$ref: '#/definitions/Timestamp'
definitions.ContainerInstance.properties.registeredAt.description: The Unix timestamp
  for when the container instance was registered.
definitions.ContainerInstance.properties.registeredResources.$ref: '#/definitions/Resources'
definitions.ContainerInstance.properties.registeredResources.description: For most
  resource types, this parameter describes the registered resources on the container
  instance that are in use by current tasks. For port resource types, this parameter
  describes the ports that were reserved by the Amazon ECS container agent when it
  registered the container instance with Amazon ECS.
definitions.ContainerInstance.properties.remainingResources.$ref: '#/definitions/Resources'
definitions.ContainerInstance.properties.remainingResources.description: For most
  resource types, this parameter describes the remaining resources of the container
  instance that are available for new tasks. For port resource types, this parameter
  describes the ports that are reserved by the Amazon ECS container agent and any
  containers that have reserved port mappings; any port that is not specified here
  is available for new tasks.
definitions.ContainerInstance.properties.runningTasksCount.$ref: '#/definitions/Integer'
definitions.ContainerInstance.properties.runningTasksCount.description: The number
  of tasks on the container instance that are in the <code>RUNNING</code> status.
definitions.ContainerInstance.properties.status.$ref: '#/definitions/String'
definitions.ContainerInstance.properties.status.description: The status of the container
  instance. The valid values are <code>ACTIVE</code>, <code>INACTIVE</code>, or <code>DRAINING</code>.
  <code>ACTIVE</code> indicates that the container instance can accept tasks. <code>DRAINING</code>
  indicates that new tasks are not placed on the container instance and any service
  tasks running on the container instance are removed if possible. For more information,
  see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html">Container
  Instance Draining</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.ContainerInstance.properties.version.$ref: '#/definitions/Long'
definitions.ContainerInstance.properties.version.description: The version counter
  for the container instance. Every time a container instance experiences a change
  that triggers a CloudWatch event, the version counter is incremented. If you are
  replicating your Amazon ECS container instance state with CloudWatch events, you
  can compare the version of a container instance reported by the Amazon ECS APIs
  with the version reported in CloudWatch events for the container instance (inside
  the <code>detail</code> object) to verify that the version in your event stream
  is current.
definitions.ContainerInstance.properties.versionInfo.$ref: '#/definitions/VersionInfo'
definitions.ContainerInstance.properties.versionInfo.description: The version information
  for the Amazon ECS container agent and Docker daemon running on the container instance.
definitions.ContainerInstance.type: object
definitions.ContainerInstanceStatus.enum.length: 2
definitions.ContainerInstanceStatus.enum[0]: ACTIVE
definitions.ContainerInstanceStatus.enum[1]: DRAINING
definitions.ContainerInstanceStatus.type: string
definitions.ContainerInstances.items.$ref: '#/definitions/ContainerInstance'
definitions.ContainerInstances.type: array
definitions.ContainerOverride.description: The overrides that should be sent to a
  container.
definitions.ContainerOverride.properties.command.$ref: '#/definitions/StringList'
definitions.ContainerOverride.properties.command.description: The command to send
  to the container that overrides the default command from the Docker image or the
  task definition. You must also specify a container name.
definitions.ContainerOverride.properties.cpu.$ref: '#/definitions/BoxedInteger'
definitions.ContainerOverride.properties.cpu.description: The number of <code>cpu</code>
  units reserved for the container, instead of the default value from the task definition.
  You must also specify a container name.
definitions.ContainerOverride.properties.environment.$ref: '#/definitions/EnvironmentVariables'
definitions.ContainerOverride.properties.environment.description: The environment
  variables to send to the container. You can add new environment variables, which
  are added to the container at launch, or you can override the existing environment
  variables from the Docker image or the task definition. You must also specify a
  container name.
definitions.ContainerOverride.properties.memory.$ref: '#/definitions/BoxedInteger'
definitions.ContainerOverride.properties.memory.description: The hard limit (in MiB)
  of memory to present to the container, instead of the default value from the task
  definition. If your container attempts to exceed the memory specified here, the
  container is killed. You must also specify a container name.
definitions.ContainerOverride.properties.memoryReservation.$ref: '#/definitions/BoxedInteger'
definitions.ContainerOverride.properties.memoryReservation.description: The soft limit
  (in MiB) of memory to reserve for the container, instead of the default value from
  the task definition. You must also specify a container name.
definitions.ContainerOverride.properties.name.$ref: '#/definitions/String'
definitions.ContainerOverride.properties.name.description: The name of the container
  that receives the override. This parameter is required if any override is specified.
definitions.ContainerOverride.type: object
definitions.ContainerOverrides.items.$ref: '#/definitions/ContainerOverride'
definitions.ContainerOverrides.type: array
definitions.Containers.items.$ref: '#/definitions/Container'
definitions.Containers.type: array
definitions.CreateClusterRequest.example.clusterName: my_cluster
definitions.CreateClusterRequest.properties.clusterName.$ref: '#/definitions/String'
definitions.CreateClusterRequest.properties.clusterName.description: The name of your
  cluster. If you do not specify a name for your cluster, you create a cluster named
  <code>default</code>. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
  and underscores are allowed.
definitions.CreateClusterRequest.type: object
definitions.CreateClusterResponse.example.cluster.activeServicesCount: 0
definitions.CreateClusterResponse.example.cluster.clusterArn: arn:aws:ecs:us-east-1:012345678910:cluster/my_cluster
definitions.CreateClusterResponse.example.cluster.clusterName: my_cluster
definitions.CreateClusterResponse.example.cluster.pendingTasksCount: 0
definitions.CreateClusterResponse.example.cluster.registeredContainerInstancesCount: 0
definitions.CreateClusterResponse.example.cluster.runningTasksCount: 0
definitions.CreateClusterResponse.example.cluster.status: ACTIVE
definitions.CreateClusterResponse.properties.cluster.$ref: '#/definitions/Cluster'
definitions.CreateClusterResponse.properties.cluster.description: The full description
  of your new cluster.
definitions.CreateClusterResponse.type: object
definitions.CreateServiceRequest.example.desiredCount: 10
definitions.CreateServiceRequest.example.loadBalancers.length: 1
definitions.CreateServiceRequest.example.loadBalancers[0].containerName: simple-app
definitions.CreateServiceRequest.example.loadBalancers[0].containerPort: 80
definitions.CreateServiceRequest.example.loadBalancers[0].loadBalancerName: EC2Contai-EcsElast-15DCDAURT3ZO2
definitions.CreateServiceRequest.example.role: ecsServiceRole
definitions.CreateServiceRequest.example.serviceName: ecs-simple-service-elb
definitions.CreateServiceRequest.example.taskDefinition: console-sample-app-static
definitions.CreateServiceRequest.properties.clientToken.$ref: '#/definitions/String'
definitions.CreateServiceRequest.properties.clientToken.description: Unique, case-sensitive
  identifier you provide to ensure the idempotency of the request. Up to 32 ASCII
  characters are allowed.
definitions.CreateServiceRequest.properties.cluster.$ref: '#/definitions/String'
definitions.CreateServiceRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster on which to run your service. If
  you do not specify a cluster, the default cluster is assumed.
definitions.CreateServiceRequest.properties.deploymentConfiguration.$ref: '#/definitions/DeploymentConfiguration'
definitions.CreateServiceRequest.properties.deploymentConfiguration.description: Optional
  deployment parameters that control how many tasks run during the deployment and
  the ordering of stopping and starting tasks.
definitions.CreateServiceRequest.properties.desiredCount.$ref: '#/definitions/BoxedInteger'
definitions.CreateServiceRequest.properties.desiredCount.description: The number of
  instantiations of the specified task definition to place and keep running on your
  cluster.
definitions.CreateServiceRequest.properties.loadBalancers.$ref: '#/definitions/LoadBalancers'
definitions.CreateServiceRequest.properties.loadBalancers.description: <p>A load balancer
  object representing the load balancer to use with your service. Currently, you are
  limited to one load balancer or target group per service. After you create a service,
  the load balancer name or target group ARN, container name, and container port specified
  in the service definition are immutable.</p> <p>For Classic Load Balancers, this
  object must contain the load balancer name, the container name (as it appears in
  a container definition), and the container port to access from the load balancer.
  When a task from this service is placed on a container instance, the container instance
  is registered with the load balancer specified here.</p> <p>For Application Load
  Balancers and Network Load Balancers, this object must contain the load balancer
  target group ARN, the container name (as it appears in a container definition),
  and the container port to access from the load balancer. When a task from this service
  is placed on a container instance, the container instance and port combination is
  registered as a target in the target group specified here.</p>
definitions.CreateServiceRequest.properties.placementConstraints.$ref: '#/definitions/PlacementConstraints'
definitions.CreateServiceRequest.properties.placementConstraints.description: 'An
  array of placement constraint objects to use for tasks in your service. You can
  specify a maximum of 10 constraints per task (this limit includes constraints in
  the task definition and those specified at run time). '
definitions.CreateServiceRequest.properties.placementStrategy.$ref: '#/definitions/PlacementStrategies'
definitions.CreateServiceRequest.properties.placementStrategy.description: The placement
  strategy objects to use for tasks in your service. You can specify a maximum of
  5 strategy rules per service.
definitions.CreateServiceRequest.properties.role.$ref: '#/definitions/String'
definitions.CreateServiceRequest.properties.role.description: <p>The name or full
  Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS to make calls
  to your load balancer on your behalf. This parameter is required if you are using
  a load balancer with your service. If you specify the <code>role</code> parameter,
  you must also specify a load balancer object with the <code>loadBalancers</code>
  parameter.</p> <p>If your specified role has a path other than <code>/</code>, then
  you must either specify the full role ARN (this is recommended) or prefix the role
  name with the path. For example, if a role with the name <code>bar</code> has a
  path of <code>/foo/</code> then you would specify <code>/foo/bar</code> as the role
  name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly
  Names and Paths</a> in the <i>IAM User Guide</i>.</p>
definitions.CreateServiceRequest.properties.serviceName.$ref: '#/definitions/String'
definitions.CreateServiceRequest.properties.serviceName.description: The name of your
  service. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores
  are allowed. Service names must be unique within a cluster, but you can have similarly
  named services in multiple clusters within a region or across multiple regions.
definitions.CreateServiceRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.CreateServiceRequest.properties.taskDefinition.description: The <code>family</code>
  and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource
  Name (ARN) of the task definition to run in your service. If a <code>revision</code>
  is not specified, the latest <code>ACTIVE</code> revision is used.
definitions.CreateServiceRequest.required.length: 3
definitions.CreateServiceRequest.required[0]: serviceName
definitions.CreateServiceRequest.required[1]: taskDefinition
definitions.CreateServiceRequest.required[2]: desiredCount
definitions.CreateServiceRequest.type: object
definitions.CreateServiceResponse.example.service.clusterArn: arn:aws:ecs:us-east-1:012345678910:cluster/default
definitions.CreateServiceResponse.example.service.createdAt: 2016-08-29T16:02:54.884Z
definitions.CreateServiceResponse.example.service.deploymentConfiguration.maximumPercent: 200
definitions.CreateServiceResponse.example.service.deploymentConfiguration.minimumHealthyPercent: 100
definitions.CreateServiceResponse.example.service.deployments.length: 1
definitions.CreateServiceResponse.example.service.deployments[0].createdAt: 2016-08-29T16:02:54.884Z
definitions.CreateServiceResponse.example.service.deployments[0].desiredCount: 10
definitions.CreateServiceResponse.example.service.deployments[0].id: ecs-svc/9223370564343000923
definitions.CreateServiceResponse.example.service.deployments[0].pendingCount: 0
definitions.CreateServiceResponse.example.service.deployments[0].runningCount: 0
definitions.CreateServiceResponse.example.service.deployments[0].status: PRIMARY
definitions.CreateServiceResponse.example.service.deployments[0].taskDefinition: arn:aws:ecs:us-east-1:012345678910:task-definition/console-sample-app-static:6
definitions.CreateServiceResponse.example.service.deployments[0].updatedAt: 2016-08-29T16:02:54.884Z
definitions.CreateServiceResponse.example.service.desiredCount: 10
definitions.CreateServiceResponse.example.service.events.length: 0
definitions.CreateServiceResponse.example.service.loadBalancers.length: 1
definitions.CreateServiceResponse.example.service.loadBalancers[0].containerName: simple-app
definitions.CreateServiceResponse.example.service.loadBalancers[0].containerPort: 80
definitions.CreateServiceResponse.example.service.loadBalancers[0].loadBalancerName: EC2Contai-EcsElast-15DCDAURT3ZO2
definitions.CreateServiceResponse.example.service.pendingCount: 0
definitions.CreateServiceResponse.example.service.roleArn: arn:aws:iam::012345678910:role/ecsServiceRole
definitions.CreateServiceResponse.example.service.runningCount: 0
definitions.CreateServiceResponse.example.service.serviceArn: arn:aws:ecs:us-east-1:012345678910:service/ecs-simple-service-elb
definitions.CreateServiceResponse.example.service.serviceName: ecs-simple-service-elb
definitions.CreateServiceResponse.example.service.status: ACTIVE
definitions.CreateServiceResponse.example.service.taskDefinition: arn:aws:ecs:us-east-1:012345678910:task-definition/console-sample-app-static:6
definitions.CreateServiceResponse.properties.service.$ref: '#/definitions/Service'
definitions.CreateServiceResponse.properties.service.description: The full description
  of your service following the create call.
definitions.CreateServiceResponse.type: object
definitions.DeleteAttributesRequest.properties.attributes.$ref: '#/definitions/Attributes'
definitions.DeleteAttributesRequest.properties.attributes.description: The attributes
  to delete from your resource. You can specify up to 10 attributes per request. For
  custom attributes, specify the attribute name and target ID, but do not specify
  the value. If you specify the target ID using the short form, you must also specify
  the target type.
definitions.DeleteAttributesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DeleteAttributesRequest.properties.cluster.description: The short name
  or full Amazon Resource Name (ARN) of the cluster that contains the resource to
  delete attributes. If you do not specify a cluster, the default cluster is assumed.
definitions.DeleteAttributesRequest.required.length: 1
definitions.DeleteAttributesRequest.required[0]: attributes
definitions.DeleteAttributesRequest.type: object
definitions.DeleteAttributesResponse.properties.attributes.$ref: '#/definitions/Attributes'
definitions.DeleteAttributesResponse.properties.attributes.description: A list of
  attribute objects that were successfully deleted from your resource.
definitions.DeleteAttributesResponse.type: object
definitions.DeleteClusterRequest.example.cluster: my_cluster
definitions.DeleteClusterRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DeleteClusterRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster to delete.
definitions.DeleteClusterRequest.required.length: 1
definitions.DeleteClusterRequest.required[0]: cluster
definitions.DeleteClusterRequest.type: object
definitions.DeleteClusterResponse.example.cluster.activeServicesCount: 0
definitions.DeleteClusterResponse.example.cluster.clusterArn: arn:aws:ecs:us-east-1:012345678910:cluster/my_cluster
definitions.DeleteClusterResponse.example.cluster.clusterName: my_cluster
definitions.DeleteClusterResponse.example.cluster.pendingTasksCount: 0
definitions.DeleteClusterResponse.example.cluster.registeredContainerInstancesCount: 0
definitions.DeleteClusterResponse.example.cluster.runningTasksCount: 0
definitions.DeleteClusterResponse.example.cluster.status: INACTIVE
definitions.DeleteClusterResponse.properties.cluster.$ref: '#/definitions/Cluster'
definitions.DeleteClusterResponse.properties.cluster.description: The full description
  of the deleted cluster.
definitions.DeleteClusterResponse.type: object
definitions.DeleteServiceRequest.example.service: my-http-service
definitions.DeleteServiceRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DeleteServiceRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster that hosts the service to delete.
  If you do not specify a cluster, the default cluster is assumed.
definitions.DeleteServiceRequest.properties.service.$ref: '#/definitions/String'
definitions.DeleteServiceRequest.properties.service.description: The name of the service
  to delete.
definitions.DeleteServiceRequest.required.length: 1
definitions.DeleteServiceRequest.required[0]: service
definitions.DeleteServiceRequest.type: object
definitions.DeleteServiceResponse.properties.service.$ref: '#/definitions/Service'
definitions.DeleteServiceResponse.properties.service.description: The full description
  of the deleted service.
definitions.DeleteServiceResponse.type: object
definitions.Deployment.description: The details of an Amazon ECS service deployment.
definitions.Deployment.properties.createdAt.$ref: '#/definitions/Timestamp'
definitions.Deployment.properties.createdAt.description: The Unix timestamp for when
  the service was created.
definitions.Deployment.properties.desiredCount.$ref: '#/definitions/Integer'
definitions.Deployment.properties.desiredCount.description: The most recent desired
  count of tasks that was specified for the service to deploy or maintain.
definitions.Deployment.properties.id.$ref: '#/definitions/String'
definitions.Deployment.properties.id.description: The ID of the deployment.
definitions.Deployment.properties.pendingCount.$ref: '#/definitions/Integer'
definitions.Deployment.properties.pendingCount.description: The number of tasks in
  the deployment that are in the <code>PENDING</code> status.
definitions.Deployment.properties.runningCount.$ref: '#/definitions/Integer'
definitions.Deployment.properties.runningCount.description: The number of tasks in
  the deployment that are in the <code>RUNNING</code> status.
definitions.Deployment.properties.status.$ref: '#/definitions/String'
definitions.Deployment.properties.status.description: The status of the deployment.
  Valid values are <code>PRIMARY</code> (for the most recent deployment), <code>ACTIVE</code>
  (for previous deployments that still have tasks running, but are being replaced
  with the <code>PRIMARY</code> deployment), and <code>INACTIVE</code> (for deployments
  that have been completely replaced).
definitions.Deployment.properties.taskDefinition.$ref: '#/definitions/String'
definitions.Deployment.properties.taskDefinition.description: The most recent task
  definition that was specified for the service to use.
definitions.Deployment.properties.updatedAt.$ref: '#/definitions/Timestamp'
definitions.Deployment.properties.updatedAt.description: The Unix timestamp for when
  the service was last updated.
definitions.Deployment.type: object
definitions.DeploymentConfiguration.description: Optional deployment parameters that
  control how many tasks run during the deployment and the ordering of stopping and
  starting tasks.
definitions.DeploymentConfiguration.properties.maximumPercent.$ref: '#/definitions/BoxedInteger'
definitions.DeploymentConfiguration.properties.maximumPercent.description: The upper
  limit (as a percentage of the service's <code>desiredCount</code>) of the number
  of tasks that are allowed in the <code>RUNNING</code> or <code>PENDING</code> state
  in a service during a deployment. The maximum number of tasks during a deployment
  is the <code>desiredCount</code> multiplied by <code>maximumPercent</code>/100,
  rounded down to the nearest integer value.
definitions.DeploymentConfiguration.properties.minimumHealthyPercent.$ref: '#/definitions/BoxedInteger'
definitions.DeploymentConfiguration.properties.minimumHealthyPercent.description: The
  lower limit (as a percentage of the service's <code>desiredCount</code>) of the
  number of running tasks that must remain in the <code>RUNNING</code> state in a
  service during a deployment. The minimum healthy tasks during a deployment is the
  <code>desiredCount</code> multiplied by <code>minimumHealthyPercent</code>/100,
  rounded up to the nearest integer value.
definitions.DeploymentConfiguration.type: object
definitions.Deployments.items.$ref: '#/definitions/Deployment'
definitions.Deployments.type: array
definitions.DeregisterContainerInstanceRequest.example.cluster: default
definitions.DeregisterContainerInstanceRequest.example.containerInstance: container_instance_UUID
definitions.DeregisterContainerInstanceRequest.example.force: true
definitions.DeregisterContainerInstanceRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DeregisterContainerInstanceRequest.properties.cluster.description: The
  short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
  instance to deregister. If you do not specify a cluster, the default cluster is
  assumed.
definitions.DeregisterContainerInstanceRequest.properties.containerInstance.$ref: '#/definitions/String'
definitions.DeregisterContainerInstanceRequest.properties.containerInstance.description: The
  container instance ID or full Amazon Resource Name (ARN) of the container instance
  to deregister. The ARN contains the <code>arn:aws:ecs</code> namespace, followed
  by the region of the container instance, the AWS account ID of the container instance
  owner, the <code>container-instance</code> namespace, and then the container instance
  ID. For example, <code>arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>
  </code>.
definitions.DeregisterContainerInstanceRequest.properties.force.$ref: '#/definitions/BoxedBoolean'
definitions.DeregisterContainerInstanceRequest.properties.force.description: <p>Forces
  the deregistration of the container instance. If you have tasks running on the container
  instance when you deregister it with the <code>force</code> option, these tasks
  remain running until you terminate the instance or the tasks stop through some other
  means, but they are orphaned (no longer monitored or accounted for by Amazon ECS).
  If an orphaned task on your container instance is part of an Amazon ECS service,
  then the service scheduler starts another copy of that task, on a different container
  instance if possible. </p> <p>Any containers in orphaned service tasks that are
  registered with a Classic Load Balancer or an Application Load Balancer target group
  are deregistered, and they will begin connection draining according to the settings
  on the load balancer or target group.</p>
definitions.DeregisterContainerInstanceRequest.required.length: 1
definitions.DeregisterContainerInstanceRequest.required[0]: containerInstance
definitions.DeregisterContainerInstanceRequest.type: object
definitions.DeregisterContainerInstanceResponse.properties.containerInstance.$ref: '#/definitions/ContainerInstance'
definitions.DeregisterContainerInstanceResponse.properties.containerInstance.description: The
  container instance that was deregistered.
definitions.DeregisterContainerInstanceResponse.type: object
definitions.DeregisterTaskDefinitionRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.DeregisterTaskDefinitionRequest.properties.taskDefinition.description: The
  <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
  full Amazon Resource Name (ARN) of the task definition to deregister. You must specify
  a <code>revision</code>.
definitions.DeregisterTaskDefinitionRequest.required.length: 1
definitions.DeregisterTaskDefinitionRequest.required[0]: taskDefinition
definitions.DeregisterTaskDefinitionRequest.type: object
definitions.DeregisterTaskDefinitionResponse.properties.taskDefinition.$ref: '#/definitions/TaskDefinition'
definitions.DeregisterTaskDefinitionResponse.properties.taskDefinition.description: The
  full description of the deregistered task.
definitions.DeregisterTaskDefinitionResponse.type: object
definitions.DescribeClustersRequest.example.clusters.length: 1
definitions.DescribeClustersRequest.example.clusters[0]: default
definitions.DescribeClustersRequest.properties.clusters.$ref: '#/definitions/StringList'
definitions.DescribeClustersRequest.properties.clusters.description: A list of up
  to 100 cluster names or full cluster Amazon Resource Name (ARN) entries. If you
  do not specify a cluster, the default cluster is assumed.
definitions.DescribeClustersRequest.type: object
definitions.DescribeClustersResponse.example.clusters.length: 1
definitions.DescribeClustersResponse.example.clusters[0].clusterArn: arn:aws:ecs:us-east-1:aws_account_id:cluster/default
definitions.DescribeClustersResponse.example.clusters[0].clusterName: default
definitions.DescribeClustersResponse.example.clusters[0].status: ACTIVE
definitions.DescribeClustersResponse.example.failures.length: 0
definitions.DescribeClustersResponse.properties.clusters.$ref: '#/definitions/Clusters'
definitions.DescribeClustersResponse.properties.clusters.description: The list of
  clusters.
definitions.DescribeClustersResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.DescribeClustersResponse.properties.failures.description: Any failures
  associated with the call.
definitions.DescribeClustersResponse.type: object
definitions.DescribeContainerInstancesRequest.example.cluster: default
definitions.DescribeContainerInstancesRequest.example.containerInstances.length: 1
definitions.DescribeContainerInstancesRequest.example.containerInstances[0]: f2756532-8f13-4d53-87c9-aed50dc94cd7
definitions.DescribeContainerInstancesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DescribeContainerInstancesRequest.properties.cluster.description: The
  short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
  instances to describe. If you do not specify a cluster, the default cluster is assumed.
definitions.DescribeContainerInstancesRequest.properties.containerInstances.$ref: '#/definitions/StringList'
definitions.DescribeContainerInstancesRequest.properties.containerInstances.description: A
  list of container instance IDs or full Amazon Resource Name (ARN) entries.
definitions.DescribeContainerInstancesRequest.required.length: 1
definitions.DescribeContainerInstancesRequest.required[0]: containerInstances
definitions.DescribeContainerInstancesRequest.type: object
definitions.DescribeContainerInstancesResponse.example.containerInstances.length: 1
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].agentConnected: true
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].containerInstanceArn: arn:aws:ecs:us-east-1:012345678910:container-instance/f2756532-8f13-4d53-87c9-aed50dc94cd7
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].ec2InstanceId: i-807f3249
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].pendingTasksCount: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources.length: 3
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[0].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[0].integerValue: 2048
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[0].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[0].name: CPU
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[0].type: INTEGER
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[1].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[1].integerValue: 3768
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[1].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[1].name: MEMORY
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[1].type: INTEGER
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].integerValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].name: PORTS
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].stringSetValue.length: 4
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].stringSetValue[0]: "2376"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].stringSetValue[1]: "22"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].stringSetValue[2]: "51678"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].stringSetValue[3]: "2375"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].registeredResources[2].type: STRINGSET
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources.length: 3
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[0].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[0].integerValue: 1948
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[0].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[0].name: CPU
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[0].type: INTEGER
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[1].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[1].integerValue: 3668
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[1].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[1].name: MEMORY
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[1].type: INTEGER
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].doubleValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].integerValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].longValue: 0
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].name: PORTS
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue.length: 5
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue[0]: "2376"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue[1]: "22"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue[2]: "80"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue[3]: "51678"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].stringSetValue[4]: "2375"
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].remainingResources[2].type: STRINGSET
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].runningTasksCount: 1
definitions.DescribeContainerInstancesResponse.example.containerInstances[0].status: ACTIVE
definitions.DescribeContainerInstancesResponse.example.failures.length: 0
definitions.DescribeContainerInstancesResponse.properties.containerInstances.$ref: '#/definitions/ContainerInstances'
definitions.DescribeContainerInstancesResponse.properties.containerInstances.description: The
  list of container instances.
definitions.DescribeContainerInstancesResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.DescribeContainerInstancesResponse.properties.failures.description: Any
  failures associated with the call.
definitions.DescribeContainerInstancesResponse.type: object
definitions.DescribeServicesRequest.example.services.length: 1
definitions.DescribeServicesRequest.example.services[0]: ecs-simple-service
definitions.DescribeServicesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DescribeServicesRequest.properties.cluster.description: The short name
  or full Amazon Resource Name (ARN)the cluster that hosts the service to describe.
  If you do not specify a cluster, the default cluster is assumed.
definitions.DescribeServicesRequest.properties.services.$ref: '#/definitions/StringList'
definitions.DescribeServicesRequest.properties.services.description: A list of services
  to describe. You may specify up to 10 services to describe in a single operation.
definitions.DescribeServicesRequest.required.length: 1
definitions.DescribeServicesRequest.required[0]: services
definitions.DescribeServicesRequest.type: object
definitions.DescribeServicesResponse.example.failures.length: 0
definitions.DescribeServicesResponse.example.services.length: 1
definitions.DescribeServicesResponse.example.services[0].clusterArn: arn:aws:ecs:us-east-1:012345678910:cluster/default
definitions.DescribeServicesResponse.example.services[0].createdAt: 2016-08-29T16:25:52.130Z
definitions.DescribeServicesResponse.example.services[0].deploymentConfiguration.maximumPercent: 200
definitions.DescribeServicesResponse.example.services[0].deploymentConfiguration.minimumHealthyPercent: 100
definitions.DescribeServicesResponse.example.services[0].deployments.length: 1
definitions.DescribeServicesResponse.example.services[0].deployments[0].createdAt: 2016-08-29T16:25:52.130Z
definitions.DescribeServicesResponse.example.services[0].deployments[0].desiredCount: 1
definitions.DescribeServicesResponse.example.services[0].deployments[0].id: ecs-svc/9223370564341623665
definitions.DescribeServicesResponse.example.services[0].deployments[0].pendingCount: 0
definitions.DescribeServicesResponse.example.services[0].deployments[0].runningCount: 0
definitions.DescribeServicesResponse.example.services[0].deployments[0].status: PRIMARY
definitions.DescribeServicesResponse.example.services[0].deployments[0].taskDefinition: arn:aws:ecs:us-east-1:012345678910:task-definition/hello_world:6
definitions.DescribeServicesResponse.example.services[0].deployments[0].updatedAt: 2016-08-29T16:25:52.130Z
definitions.DescribeServicesResponse.example.services[0].desiredCount: 1
definitions.DescribeServicesResponse.example.services[0].events.length: 1
definitions.DescribeServicesResponse.example.services[0].events[0].createdAt: 2016-08-29T16:25:58.520Z
definitions.DescribeServicesResponse.example.services[0].events[0].id: 38c285e5-d335-4b68-8b15-e46dedc8e88d
definitions.DescribeServicesResponse.example.services[0].events[0].message: (service
  ecs-simple-service) was unable to place a task because no container instance met
  all of its requirements. The closest matching (container-instance 3f4de1c5-ffdd-4954-af7e-75b4be0c8841)
  is already using a port required by your task. For more information, see the Troubleshooting
  section of the Amazon ECS Developer Guide.
definitions.DescribeServicesResponse.example.services[0].loadBalancers.length: 0
definitions.DescribeServicesResponse.example.services[0].pendingCount: 0
definitions.DescribeServicesResponse.example.services[0].runningCount: 0
definitions.DescribeServicesResponse.example.services[0].serviceArn: arn:aws:ecs:us-east-1:012345678910:service/ecs-simple-service
definitions.DescribeServicesResponse.example.services[0].serviceName: ecs-simple-service
definitions.DescribeServicesResponse.example.services[0].status: ACTIVE
definitions.DescribeServicesResponse.example.services[0].taskDefinition: arn:aws:ecs:us-east-1:012345678910:task-definition/hello_world:6
definitions.DescribeServicesResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.DescribeServicesResponse.properties.failures.description: Any failures
  associated with the call.
definitions.DescribeServicesResponse.properties.services.$ref: '#/definitions/Services'
definitions.DescribeServicesResponse.properties.services.description: The list of
  services described.
definitions.DescribeServicesResponse.type: object
definitions.DescribeTaskDefinitionRequest.example.taskDefinition: hello_world:8
definitions.DescribeTaskDefinitionRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.DescribeTaskDefinitionRequest.properties.taskDefinition.description: The
  <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code>
  and <code>revision</code> (<code>family:revision</code>) for a specific revision
  in the family, or full Amazon Resource Name (ARN) of the task definition to describe.
definitions.DescribeTaskDefinitionRequest.required.length: 1
definitions.DescribeTaskDefinitionRequest.required[0]: taskDefinition
definitions.DescribeTaskDefinitionRequest.type: object
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions.length: 2
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].cpu: 10
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].environment.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].essential: true
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].image: wordpress
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].links.length: 1
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].links[0]: mysql
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].memory: 500
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].mountPoints.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].name: wordpress
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].portMappings.length: 1
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].portMappings[0].containerPort: 80
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].portMappings[0].hostPort: 80
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].volumesFrom.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].cpu: 10
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].environment.length: 1
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].environment[0].name: MYSQL_ROOT_PASSWORD
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].environment[0].value: password
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].essential: true
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].image: mysql
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].memory: 500
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].mountPoints.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].name: mysql
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].portMappings.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.containerDefinitions[1].volumesFrom.length: 0
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.family: hello_world
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.revision: 8
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.taskDefinitionArn: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/hello_world:8
definitions.DescribeTaskDefinitionResponse.example.taskDefinition.volumes.length: 0
definitions.DescribeTaskDefinitionResponse.properties.taskDefinition.$ref: '#/definitions/TaskDefinition'
definitions.DescribeTaskDefinitionResponse.properties.taskDefinition.description: The
  full task definition description.
definitions.DescribeTaskDefinitionResponse.type: object
definitions.DescribeTasksRequest.example.tasks.length: 1
definitions.DescribeTasksRequest.example.tasks[0]: c5cba4eb-5dad-405e-96db-71ef8eefe6a8
definitions.DescribeTasksRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DescribeTasksRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster that hosts the task to describe.
  If you do not specify a cluster, the default cluster is assumed.
definitions.DescribeTasksRequest.properties.tasks.$ref: '#/definitions/StringList'
definitions.DescribeTasksRequest.properties.tasks.description: A list of up to 100
  task IDs or full Amazon Resource Name (ARN) entries.
definitions.DescribeTasksRequest.required.length: 1
definitions.DescribeTasksRequest.required[0]: tasks
definitions.DescribeTasksRequest.type: object
definitions.DescribeTasksResponse.example.failures.length: 0
definitions.DescribeTasksResponse.example.tasks.length: 1
definitions.DescribeTasksResponse.example.tasks[0].clusterArn: arn:aws:ecs:<region>:<aws_account_id>:cluster/default
definitions.DescribeTasksResponse.example.tasks[0].containerInstanceArn: arn:aws:ecs:<region>:<aws_account_id>:container-instance/18f9eda5-27d7-4c19-b133-45adc516e8fb
definitions.DescribeTasksResponse.example.tasks[0].containers.length: 1
definitions.DescribeTasksResponse.example.tasks[0].containers[0].containerArn: arn:aws:ecs:<region>:<aws_account_id>:container/7c01765b-c588-45b3-8290-4ba38bd6c5a6
definitions.DescribeTasksResponse.example.tasks[0].containers[0].lastStatus: RUNNING
definitions.DescribeTasksResponse.example.tasks[0].containers[0].name: ecs-demo
definitions.DescribeTasksResponse.example.tasks[0].containers[0].networkBindings.length: 1
definitions.DescribeTasksResponse.example.tasks[0].containers[0].networkBindings[0].bindIP: 0.0.0.0
definitions.DescribeTasksResponse.example.tasks[0].containers[0].networkBindings[0].containerPort: 80
definitions.DescribeTasksResponse.example.tasks[0].containers[0].networkBindings[0].hostPort: 80
definitions.DescribeTasksResponse.example.tasks[0].containers[0].taskArn: arn:aws:ecs:<region>:<aws_account_id>:task/c5cba4eb-5dad-405e-96db-71ef8eefe6a8
definitions.DescribeTasksResponse.example.tasks[0].desiredStatus: RUNNING
definitions.DescribeTasksResponse.example.tasks[0].lastStatus: RUNNING
definitions.DescribeTasksResponse.example.tasks[0].overrides.containerOverrides.length: 1
definitions.DescribeTasksResponse.example.tasks[0].overrides.containerOverrides[0].name: ecs-demo
definitions.DescribeTasksResponse.example.tasks[0].startedBy: ecs-svc/9223370608528463088
definitions.DescribeTasksResponse.example.tasks[0].taskArn: arn:aws:ecs:<region>:<aws_account_id>:task/c5cba4eb-5dad-405e-96db-71ef8eefe6a8
definitions.DescribeTasksResponse.example.tasks[0].taskDefinitionArn: arn:aws:ecs:<region>:<aws_account_id>:task-definition/amazon-ecs-sample:1
definitions.DescribeTasksResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.DescribeTasksResponse.properties.failures.description: Any failures associated
  with the call.
definitions.DescribeTasksResponse.properties.tasks.$ref: '#/definitions/Tasks'
definitions.DescribeTasksResponse.properties.tasks.description: The list of tasks.
definitions.DescribeTasksResponse.type: object
definitions.DesiredStatus.enum.length: 3
definitions.DesiredStatus.enum[0]: RUNNING
definitions.DesiredStatus.enum[1]: PENDING
definitions.DesiredStatus.enum[2]: STOPPED
definitions.DesiredStatus.type: string
definitions.DiscoverPollEndpointRequest.properties.cluster.$ref: '#/definitions/String'
definitions.DiscoverPollEndpointRequest.properties.cluster.description: The short
  name or full Amazon Resource Name (ARN) of the cluster that the container instance
  belongs to.
definitions.DiscoverPollEndpointRequest.properties.containerInstance.$ref: '#/definitions/String'
definitions.DiscoverPollEndpointRequest.properties.containerInstance.description: The
  container instance ID or full Amazon Resource Name (ARN) of the container instance.
  The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region
  of the container instance, the AWS account ID of the container instance owner, the
  <code>container-instance</code> namespace, and then the container instance ID. For
  example, <code>arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>
  </code>.
definitions.DiscoverPollEndpointRequest.type: object
definitions.DiscoverPollEndpointResponse.properties.endpoint.$ref: '#/definitions/String'
definitions.DiscoverPollEndpointResponse.properties.endpoint.description: The endpoint
  for the Amazon ECS agent to poll.
definitions.DiscoverPollEndpointResponse.properties.telemetryEndpoint.$ref: '#/definitions/String'
definitions.DiscoverPollEndpointResponse.properties.telemetryEndpoint.description: The
  telemetry endpoint for the Amazon ECS agent.
definitions.DiscoverPollEndpointResponse.type: object
definitions.DockerLabelsMap.items.properties.key.$ref: '#/definitions/String'
definitions.DockerLabelsMap.items.properties.value.$ref: '#/definitions/String'
definitions.DockerLabelsMap.items.type: object
definitions.DockerLabelsMap.type: array
definitions.Double.format: double
definitions.Double.type: number
definitions.EnvironmentVariables.items.$ref: '#/definitions/KeyValuePair'
definitions.EnvironmentVariables.type: array
definitions.Failure.description: A failed resource.
definitions.Failure.properties.arn.$ref: '#/definitions/String'
definitions.Failure.properties.arn.description: The Amazon Resource Name (ARN) of
  the failed resource.
definitions.Failure.properties.reason.$ref: '#/definitions/String'
definitions.Failure.properties.reason.description: The reason for the failure.
definitions.Failure.type: object
definitions.Failures.items.$ref: '#/definitions/Failure'
definitions.Failures.type: array
definitions.HostEntry.description: 'Hostnames and IP address entries that are added
  to the <code>/etc/hosts</code> file of a container via the <code>extraHosts</code>
  parameter of its <a>ContainerDefinition</a>. '
definitions.HostEntry.properties.hostname.$ref: '#/definitions/String'
definitions.HostEntry.properties.hostname.description: The hostname to use in the
  <code>/etc/hosts</code> entry.
definitions.HostEntry.properties.ipAddress.$ref: '#/definitions/String'
definitions.HostEntry.properties.ipAddress.description: The IP address to use in the
  <code>/etc/hosts</code> entry.
definitions.HostEntry.required.length: 2
definitions.HostEntry.required[0]: hostname
definitions.HostEntry.required[1]: ipAddress
definitions.HostEntry.type: object
definitions.HostEntryList.items.$ref: '#/definitions/HostEntry'
definitions.HostEntryList.type: array
definitions.HostVolumeProperties.description: Details on a container instance host
  volume.
definitions.HostVolumeProperties.properties.sourcePath.$ref: '#/definitions/String'
definitions.HostVolumeProperties.properties.sourcePath.description: The path on the
  host container instance that is presented to the container. If this parameter is
  empty, then the Docker daemon has assigned a host path for you. If the <code>host</code>
  parameter contains a <code>sourcePath</code> file location, then the data volume
  persists at the specified location on the host container instance until you delete
  it manually. If the <code>sourcePath</code> value does not exist on the host container
  instance, the Docker daemon creates it. If the location does exist, the contents
  of the source path folder are exported.
definitions.HostVolumeProperties.type: object
definitions.Integer.type: integer
definitions.InvalidParameterException.description: The specified parameter is invalid.
  Review the available parameters for the API request.
definitions.InvalidParameterException.type: object
definitions.KernelCapabilities.description: The Linux capabilities for the container
  that are added to or dropped from the default configuration provided by Docker.
  For more information on the default capabilities and the non-default available capabilities,
  see <a href="https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities">Runtime
  privilege and Linux capabilities</a> in the <i>Docker run reference</i>. For more
  detailed information on these Linux capabilities, see the <a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">capabilities(7)</a>
  Linux manual page.
definitions.KernelCapabilities.properties.add.$ref: '#/definitions/StringList'
definitions.KernelCapabilities.properties.add.description: The Linux capabilities
  for the container that have been added to the default configuration provided by
  Docker. This parameter maps to <code>CapAdd</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--cap-add</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.KernelCapabilities.properties.drop.$ref: '#/definitions/StringList'
definitions.KernelCapabilities.properties.drop.description: The Linux capabilities
  for the container that have been removed from the default configuration provided
  by Docker. This parameter maps to <code>CapDrop</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
  a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
  Remote API</a> and the <code>--cap-drop</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
  run</a>.
definitions.KernelCapabilities.type: object
definitions.KeyValuePair.description: A key and value pair object.
definitions.KeyValuePair.properties.name.$ref: '#/definitions/String'
definitions.KeyValuePair.properties.name.description: The name of the key value pair.
  For environment variables, this is the name of the environment variable.
definitions.KeyValuePair.properties.value.$ref: '#/definitions/String'
definitions.KeyValuePair.properties.value.description: The value of the key value
  pair. For environment variables, this is the value of the environment variable.
definitions.KeyValuePair.type: object
definitions.LinuxParameters.description: Linux-specific options that are applied to
  the container, such as Linux <a>KernelCapabilities</a>.
definitions.LinuxParameters.properties.capabilities.$ref: '#/definitions/KernelCapabilities'
definitions.LinuxParameters.properties.capabilities.description: The Linux capabilities
  for the container that are added to or dropped from the default configuration provided
  by Docker.
definitions.LinuxParameters.type: object
definitions.ListAttributesRequest.properties.attributeName.$ref: '#/definitions/String'
definitions.ListAttributesRequest.properties.attributeName.description: 'The name
  of the attribute with which to filter the results. '
definitions.ListAttributesRequest.properties.attributeValue.$ref: '#/definitions/String'
definitions.ListAttributesRequest.properties.attributeValue.description: The value
  of the attribute with which to filter results. You must also specify an attribute
  name to use this parameter.
definitions.ListAttributesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.ListAttributesRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster to list attributes. If you do not
  specify a cluster, the default cluster is assumed.
definitions.ListAttributesRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListAttributesRequest.properties.maxResults.description: The maximum number
  of cluster results returned by <code>ListAttributes</code> in paginated output.
  When this parameter is used, <code>ListAttributes</code> only returns <code>maxResults</code>
  results in a single page along with a <code>nextToken</code> response element. The
  remaining results of the initial request can be seen by sending another <code>ListAttributes</code>
  request with the returned <code>nextToken</code> value. This value can be between
  1 and 100. If this parameter is not used, then <code>ListAttributes</code> returns
  up to 100 results and a <code>nextToken</code> value if applicable.
definitions.ListAttributesRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListAttributesRequest.properties.nextToken.description: <p>The <code>nextToken</code>
  value returned from a previous paginated <code>ListAttributes</code> request where
  <code>maxResults</code> was used and the results exceeded the value of that parameter.
  Pagination continues from the end of the previous results that returned the <code>nextToken</code>
  value. This value is <code>null</code> when there are no more results to return.</p>
  <note> <p>This token should be treated as an opaque identifier that is only used
  to retrieve the next items in a list and not for other programmatic purposes.</p>
  </note>
definitions.ListAttributesRequest.properties.targetType.$ref: '#/definitions/TargetType'
definitions.ListAttributesRequest.properties.targetType.description: The type of the
  target with which to list attributes.
definitions.ListAttributesRequest.required.length: 1
definitions.ListAttributesRequest.required[0]: targetType
definitions.ListAttributesRequest.type: object
definitions.ListAttributesResponse.properties.attributes.$ref: '#/definitions/Attributes'
definitions.ListAttributesResponse.properties.attributes.description: A list of attribute
  objects that meet the criteria of the request.
definitions.ListAttributesResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListAttributesResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListAttributes</code> request. When the results
  of a <code>ListAttributes</code> request exceed <code>maxResults</code>, this value
  can be used to retrieve the next page of results. This value is <code>null</code>
  when there are no more results to return.
definitions.ListAttributesResponse.type: object
definitions.ListClustersRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListClustersRequest.properties.maxResults.description: The maximum number
  of cluster results returned by <code>ListClusters</code> in paginated output. When
  this parameter is used, <code>ListClusters</code> only returns <code>maxResults</code>
  results in a single page along with a <code>nextToken</code> response element. The
  remaining results of the initial request can be seen by sending another <code>ListClusters</code>
  request with the returned <code>nextToken</code> value. This value can be between
  1 and 100. If this parameter is not used, then <code>ListClusters</code> returns
  up to 100 results and a <code>nextToken</code> value if applicable.
definitions.ListClustersRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListClustersRequest.properties.nextToken.description: <p>The <code>nextToken</code>
  value returned from a previous paginated <code>ListClusters</code> request where
  <code>maxResults</code> was used and the results exceeded the value of that parameter.
  Pagination continues from the end of the previous results that returned the <code>nextToken</code>
  value. This value is <code>null</code> when there are no more results to return.</p>
  <note> <p>This token should be treated as an opaque identifier that is only used
  to retrieve the next items in a list and not for other programmatic purposes.</p>
  </note>
definitions.ListClustersRequest.type: object
definitions.ListClustersResponse.example.clusterArns.length: 2
definitions.ListClustersResponse.example.clusterArns[0]: arn:aws:ecs:us-east-1:<aws_account_id>:cluster/test
definitions.ListClustersResponse.example.clusterArns[1]: arn:aws:ecs:us-east-1:<aws_account_id>:cluster/default
definitions.ListClustersResponse.properties.clusterArns.$ref: '#/definitions/StringList'
definitions.ListClustersResponse.properties.clusterArns.description: The list of full
  Amazon Resource Name (ARN) entries for each cluster associated with your account.
definitions.ListClustersResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListClustersResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListClusters</code> request. When the results
  of a <code>ListClusters</code> request exceed <code>maxResults</code>, this value
  can be used to retrieve the next page of results. This value is <code>null</code>
  when there are no more results to return.
definitions.ListClustersResponse.type: object
definitions.ListContainerInstancesRequest.example.cluster: default
definitions.ListContainerInstancesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.ListContainerInstancesRequest.properties.cluster.description: The short
  name or full Amazon Resource Name (ARN) of the cluster that hosts the container
  instances to list. If you do not specify a cluster, the default cluster is assumed.
definitions.ListContainerInstancesRequest.properties.filter.$ref: '#/definitions/String'
definitions.ListContainerInstancesRequest.properties.filter.description: You can filter
  the results of a <code>ListContainerInstances</code> operation with cluster query
  language statements. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
  Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.ListContainerInstancesRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListContainerInstancesRequest.properties.maxResults.description: The maximum
  number of container instance results returned by <code>ListContainerInstances</code>
  in paginated output. When this parameter is used, <code>ListContainerInstances</code>
  only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
  response element. The remaining results of the initial request can be seen by sending
  another <code>ListContainerInstances</code> request with the returned <code>nextToken</code>
  value. This value can be between 1 and 100. If this parameter is not used, then
  <code>ListContainerInstances</code> returns up to 100 results and a <code>nextToken</code>
  value if applicable.
definitions.ListContainerInstancesRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListContainerInstancesRequest.properties.nextToken.description: <p>The
  <code>nextToken</code> value returned from a previous paginated <code>ListContainerInstances</code>
  request where <code>maxResults</code> was used and the results exceeded the value
  of that parameter. Pagination continues from the end of the previous results that
  returned the <code>nextToken</code> value. This value is <code>null</code> when
  there are no more results to return.</p> <note> <p>This token should be treated
  as an opaque identifier that is only used to retrieve the next items in a list and
  not for other programmatic purposes.</p> </note>
definitions.ListContainerInstancesRequest.properties.status.$ref: '#/definitions/ContainerInstanceStatus'
definitions.ListContainerInstancesRequest.properties.status.description: Filters the
  container instances by status. For example, if you specify the <code>DRAINING</code>
  status, the results include only container instances that have been set to <code>DRAINING</code>
  using <a>UpdateContainerInstancesState</a>. If you do not specify this parameter,
  the default is to include container instances set to <code>ACTIVE</code> and <code>DRAINING</code>.
definitions.ListContainerInstancesRequest.type: object
definitions.ListContainerInstancesResponse.example.containerInstanceArns.length: 2
definitions.ListContainerInstancesResponse.example.containerInstanceArns[0]: arn:aws:ecs:us-east-1:<aws_account_id>:container-instance/f6bbb147-5370-4ace-8c73-c7181ded911f
definitions.ListContainerInstancesResponse.example.containerInstanceArns[1]: arn:aws:ecs:us-east-1:<aws_account_id>:container-instance/ffe3d344-77e2-476c-a4d0-bf560ad50acb
definitions.ListContainerInstancesResponse.properties.containerInstanceArns.$ref: '#/definitions/StringList'
definitions.ListContainerInstancesResponse.properties.containerInstanceArns.description: The
  list of container instances with full Amazon Resource Name (ARN) entries for each
  container instance associated with the specified cluster.
definitions.ListContainerInstancesResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListContainerInstancesResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListContainerInstances</code> request. When the
  results of a <code>ListContainerInstances</code> request exceed <code>maxResults</code>,
  this value can be used to retrieve the next page of results. This value is <code>null</code>
  when there are no more results to return.
definitions.ListContainerInstancesResponse.type: object
definitions.ListServicesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.ListServicesRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster that hosts the services to list.
  If you do not specify a cluster, the default cluster is assumed.
definitions.ListServicesRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListServicesRequest.properties.maxResults.description: The maximum number
  of container instance results returned by <code>ListServices</code> in paginated
  output. When this parameter is used, <code>ListServices</code> only returns <code>maxResults</code>
  results in a single page along with a <code>nextToken</code> response element. The
  remaining results of the initial request can be seen by sending another <code>ListServices</code>
  request with the returned <code>nextToken</code> value. This value can be between
  1 and 10. If this parameter is not used, then <code>ListServices</code> returns
  up to 10 results and a <code>nextToken</code> value if applicable.
definitions.ListServicesRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListServicesRequest.properties.nextToken.description: <p>The <code>nextToken</code>
  value returned from a previous paginated <code>ListServices</code> request where
  <code>maxResults</code> was used and the results exceeded the value of that parameter.
  Pagination continues from the end of the previous results that returned the <code>nextToken</code>
  value. This value is <code>null</code> when there are no more results to return.</p>
  <note> <p>This token should be treated as an opaque identifier that is only used
  to retrieve the next items in a list and not for other programmatic purposes.</p>
  </note>
definitions.ListServicesRequest.type: object
definitions.ListServicesResponse.example.serviceArns.length: 1
definitions.ListServicesResponse.example.serviceArns[0]: arn:aws:ecs:us-east-1:012345678910:service/my-http-service
definitions.ListServicesResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListServicesResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListServices</code> request. When the results
  of a <code>ListServices</code> request exceed <code>maxResults</code>, this value
  can be used to retrieve the next page of results. This value is <code>null</code>
  when there are no more results to return.
definitions.ListServicesResponse.properties.serviceArns.$ref: '#/definitions/StringList'
definitions.ListServicesResponse.properties.serviceArns.description: The list of full
  Amazon Resource Name (ARN) entries for each service associated with the specified
  cluster.
definitions.ListServicesResponse.type: object
definitions.ListTaskDefinitionFamiliesRequest.example.familyPrefix: hpcc
definitions.ListTaskDefinitionFamiliesRequest.properties.familyPrefix.$ref: '#/definitions/String'
definitions.ListTaskDefinitionFamiliesRequest.properties.familyPrefix.description: The
  <code>familyPrefix</code> is a string that is used to filter the results of <code>ListTaskDefinitionFamilies</code>.
  If you specify a <code>familyPrefix</code>, only task definition family names that
  begin with the <code>familyPrefix</code> string are returned.
definitions.ListTaskDefinitionFamiliesRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListTaskDefinitionFamiliesRequest.properties.maxResults.description: The
  maximum number of task definition family results returned by <code>ListTaskDefinitionFamilies</code>
  in paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
  only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
  response element. The remaining results of the initial request can be seen by sending
  another <code>ListTaskDefinitionFamilies</code> request with the returned <code>nextToken</code>
  value. This value can be between 1 and 100. If this parameter is not used, then
  <code>ListTaskDefinitionFamilies</code> returns up to 100 results and a <code>nextToken</code>
  value if applicable.
definitions.ListTaskDefinitionFamiliesRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTaskDefinitionFamiliesRequest.properties.nextToken.description: <p>The
  <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitionFamilies</code>
  request where <code>maxResults</code> was used and the results exceeded the value
  of that parameter. Pagination continues from the end of the previous results that
  returned the <code>nextToken</code> value. This value is <code>null</code> when
  there are no more results to return.</p> <note> <p>This token should be treated
  as an opaque identifier that is only used to retrieve the next items in a list and
  not for other programmatic purposes.</p> </note>
definitions.ListTaskDefinitionFamiliesRequest.properties.status.$ref: '#/definitions/TaskDefinitionFamilyStatus'
definitions.ListTaskDefinitionFamiliesRequest.properties.status.description: The task
  definition family status with which to filter the <code>ListTaskDefinitionFamilies</code>
  results. By default, both <code>ACTIVE</code> and <code>INACTIVE</code> task definition
  families are listed. If this parameter is set to <code>ACTIVE</code>, only task
  definition families that have an <code>ACTIVE</code> task definition revision are
  returned. If this parameter is set to <code>INACTIVE</code>, only task definition
  families that do not have any <code>ACTIVE</code> task definition revisions are
  returned. If you paginate the resulting output, be sure to keep the <code>status</code>
  value constant in each subsequent request.
definitions.ListTaskDefinitionFamiliesRequest.type: object
definitions.ListTaskDefinitionFamiliesResponse.example.families.length: 2
definitions.ListTaskDefinitionFamiliesResponse.example.families[0]: hpcc
definitions.ListTaskDefinitionFamiliesResponse.example.families[1]: hpcc-c4-8xlarge
definitions.ListTaskDefinitionFamiliesResponse.properties.families.$ref: '#/definitions/StringList'
definitions.ListTaskDefinitionFamiliesResponse.properties.families.description: The
  list of task definition family names that match the <code>ListTaskDefinitionFamilies</code>
  request.
definitions.ListTaskDefinitionFamiliesResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTaskDefinitionFamiliesResponse.properties.nextToken.description: The
  <code>nextToken</code> value to include in a future <code>ListTaskDefinitionFamilies</code>
  request. When the results of a <code>ListTaskDefinitionFamilies</code> request exceed
  <code>maxResults</code>, this value can be used to retrieve the next page of results.
  This value is <code>null</code> when there are no more results to return.
definitions.ListTaskDefinitionFamiliesResponse.type: object
definitions.ListTaskDefinitionsRequest.example.familyPrefix: wordpress
definitions.ListTaskDefinitionsRequest.properties.familyPrefix.$ref: '#/definitions/String'
definitions.ListTaskDefinitionsRequest.properties.familyPrefix.description: The full
  family name with which to filter the <code>ListTaskDefinitions</code> results. Specifying
  a <code>familyPrefix</code> limits the listed task definitions to task definition
  revisions that belong to that family.
definitions.ListTaskDefinitionsRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListTaskDefinitionsRequest.properties.maxResults.description: The maximum
  number of task definition results returned by <code>ListTaskDefinitions</code> in
  paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
  only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
  response element. The remaining results of the initial request can be seen by sending
  another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code>
  value. This value can be between 1 and 100. If this parameter is not used, then
  <code>ListTaskDefinitions</code> returns up to 100 results and a <code>nextToken</code>
  value if applicable.
definitions.ListTaskDefinitionsRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTaskDefinitionsRequest.properties.nextToken.description: <p>The <code>nextToken</code>
  value returned from a previous paginated <code>ListTaskDefinitions</code> request
  where <code>maxResults</code> was used and the results exceeded the value of that
  parameter. Pagination continues from the end of the previous results that returned
  the <code>nextToken</code> value. This value is <code>null</code> when there are
  no more results to return.</p> <note> <p>This token should be treated as an opaque
  identifier that is only used to retrieve the next items in a list and not for other
  programmatic purposes.</p> </note>
definitions.ListTaskDefinitionsRequest.properties.sort.$ref: '#/definitions/SortOrder'
definitions.ListTaskDefinitionsRequest.properties.sort.description: The order in which
  to sort the results. Valid values are <code>ASC</code> and <code>DESC</code>. By
  default (<code>ASC</code>), task definitions are listed lexicographically by family
  name and in ascending numerical order by revision so that the newest task definitions
  in a family are listed last. Setting this parameter to <code>DESC</code> reverses
  the sort order on family name and revision so that the newest task definitions in
  a family are listed first.
definitions.ListTaskDefinitionsRequest.properties.status.$ref: '#/definitions/TaskDefinitionStatus'
definitions.ListTaskDefinitionsRequest.properties.status.description: The task definition
  status with which to filter the <code>ListTaskDefinitions</code> results. By default,
  only <code>ACTIVE</code> task definitions are listed. By setting this parameter
  to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code>
  as long as an active task or service still references them. If you paginate the
  resulting output, be sure to keep the <code>status</code> value constant in each
  subsequent request.
definitions.ListTaskDefinitionsRequest.type: object
definitions.ListTaskDefinitionsResponse.example.taskDefinitionArns.length: 4
definitions.ListTaskDefinitionsResponse.example.taskDefinitionArns[0]: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/wordpress:3
definitions.ListTaskDefinitionsResponse.example.taskDefinitionArns[1]: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/wordpress:4
definitions.ListTaskDefinitionsResponse.example.taskDefinitionArns[2]: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/wordpress:5
definitions.ListTaskDefinitionsResponse.example.taskDefinitionArns[3]: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/wordpress:6
definitions.ListTaskDefinitionsResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTaskDefinitionsResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListTaskDefinitions</code> request. When the
  results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>,
  this value can be used to retrieve the next page of results. This value is <code>null</code>
  when there are no more results to return.
definitions.ListTaskDefinitionsResponse.properties.taskDefinitionArns.$ref: '#/definitions/StringList'
definitions.ListTaskDefinitionsResponse.properties.taskDefinitionArns.description: The
  list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefinitions</code>
  request.
definitions.ListTaskDefinitionsResponse.type: object
definitions.ListTasksRequest.example.cluster: default
definitions.ListTasksRequest.example.containerInstance: f6bbb147-5370-4ace-8c73-c7181ded911f
definitions.ListTasksRequest.properties.cluster.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.cluster.description: The short name or full
  Amazon Resource Name (ARN) of the cluster that hosts the tasks to list. If you do
  not specify a cluster, the default cluster is assumed.
definitions.ListTasksRequest.properties.containerInstance.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.containerInstance.description: The container
  instance ID or full Amazon Resource Name (ARN) of the container instance with which
  to filter the <code>ListTasks</code> results. Specifying a <code>containerInstance</code>
  limits the results to tasks that belong to that container instance.
definitions.ListTasksRequest.properties.desiredStatus.$ref: '#/definitions/DesiredStatus'
definitions.ListTasksRequest.properties.desiredStatus.description: <p>The task desired
  status with which to filter the <code>ListTasks</code> results. Specifying a <code>desiredStatus</code>
  of <code>STOPPED</code> limits the results to tasks that ECS has set the desired
  status to <code>STOPPED</code>, which can be useful for debugging tasks that are
  not starting properly or have died or finished. The default status filter is <code>RUNNING</code>,
  which shows tasks that ECS has set the desired status to <code>RUNNING</code>.</p>
  <note> <p>Although you can filter results based on a desired status of <code>PENDING</code>,
  this will not return any results because ECS never sets the desired status of a
  task to that value (only a task's <code>lastStatus</code> may have a value of <code>PENDING</code>).</p>
  </note>
definitions.ListTasksRequest.properties.family.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.family.description: The name of the family
  with which to filter the <code>ListTasks</code> results. Specifying a <code>family</code>
  limits the results to tasks that belong to that family.
definitions.ListTasksRequest.properties.maxResults.$ref: '#/definitions/BoxedInteger'
definitions.ListTasksRequest.properties.maxResults.description: The maximum number
  of task results returned by <code>ListTasks</code> in paginated output. When this
  parameter is used, <code>ListTasks</code> only returns <code>maxResults</code> results
  in a single page along with a <code>nextToken</code> response element. The remaining
  results of the initial request can be seen by sending another <code>ListTasks</code>
  request with the returned <code>nextToken</code> value. This value can be between
  1 and 100. If this parameter is not used, then <code>ListTasks</code> returns up
  to 100 results and a <code>nextToken</code> value if applicable.
definitions.ListTasksRequest.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.nextToken.description: <p>The <code>nextToken</code>
  value returned from a previous paginated <code>ListTasks</code> request where <code>maxResults</code>
  was used and the results exceeded the value of that parameter. Pagination continues
  from the end of the previous results that returned the <code>nextToken</code> value.
  This value is <code>null</code> when there are no more results to return.</p> <note>
  <p>This token should be treated as an opaque identifier that is only used to retrieve
  the next items in a list and not for other programmatic purposes.</p> </note>
definitions.ListTasksRequest.properties.serviceName.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.serviceName.description: The name of the service
  with which to filter the <code>ListTasks</code> results. Specifying a <code>serviceName</code>
  limits the results to tasks that belong to that service.
definitions.ListTasksRequest.properties.startedBy.$ref: '#/definitions/String'
definitions.ListTasksRequest.properties.startedBy.description: The <code>startedBy</code>
  value with which to filter the task results. Specifying a <code>startedBy</code>
  value limits the results to tasks that were started with that value.
definitions.ListTasksRequest.type: object
definitions.ListTasksResponse.example.taskArns.length: 1
definitions.ListTasksResponse.example.taskArns[0]: arn:aws:ecs:us-east-1:012345678910:task/0cc43cdb-3bee-4407-9c26-c0e6ea5bee84
definitions.ListTasksResponse.properties.nextToken.$ref: '#/definitions/String'
definitions.ListTasksResponse.properties.nextToken.description: The <code>nextToken</code>
  value to include in a future <code>ListTasks</code> request. When the results of
  a <code>ListTasks</code> request exceed <code>maxResults</code>, this value can
  be used to retrieve the next page of results. This value is <code>null</code> when
  there are no more results to return.
definitions.ListTasksResponse.properties.taskArns.$ref: '#/definitions/StringList'
definitions.ListTasksResponse.properties.taskArns.description: The list of task Amazon
  Resource Name (ARN) entries for the <code>ListTasks</code> request.
definitions.ListTasksResponse.type: object
definitions.LoadBalancer.description: Details on a load balancer that is used with
  a service.
definitions.LoadBalancer.properties.containerName.$ref: '#/definitions/String'
definitions.LoadBalancer.properties.containerName.description: The name of the container
  (as it appears in a container definition) to associate with the load balancer.
definitions.LoadBalancer.properties.containerPort.$ref: '#/definitions/BoxedInteger'
definitions.LoadBalancer.properties.containerPort.description: The port on the container
  to associate with the load balancer. This port must correspond to a <code>containerPort</code>
  in the service's task definition. Your container instances must allow ingress traffic
  on the <code>hostPort</code> of the port mapping.
definitions.LoadBalancer.properties.loadBalancerName.$ref: '#/definitions/String'
definitions.LoadBalancer.properties.loadBalancerName.description: The name of a load
  balancer.
definitions.LoadBalancer.properties.targetGroupArn.$ref: '#/definitions/String'
definitions.LoadBalancer.properties.targetGroupArn.description: The full Amazon Resource
  Name (ARN) of the Elastic Load Balancing target group associated with a service.
definitions.LoadBalancer.type: object
definitions.LoadBalancers.items.$ref: '#/definitions/LoadBalancer'
definitions.LoadBalancers.type: array
definitions.LogConfiguration.description: Log configuration options to send to a custom
  log driver for the container.
definitions.LogConfiguration.properties.logDriver.$ref: '#/definitions/LogDriver'
definitions.LogConfiguration.properties.logDriver.description: '<p>The log driver
  to use for the container. The valid values listed for this parameter are log drivers
  that the Amazon ECS container agent can communicate with by default. </p> <note>
  <p>If you have a custom driver that is not listed above that you would like to work
  with the Amazon ECS container agent, you can fork the Amazon ECS container agent
  project that is <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a>
  and customize it to work with that driver. We encourage you to submit pull requests
  for changes that you would like to have included. However, Amazon Web Services does
  not currently provide support for running modified copies of this software.</p>
  </note> <p>This parameter requires version 1.18 of the Docker Remote API or greater
  on your container instance. To check the Docker Remote API version on your container
  instance, log into your container instance and run the following command: <code>sudo
  docker version | grep "Server API version"</code> </p>'
definitions.LogConfiguration.properties.options.$ref: '#/definitions/LogConfigurationOptionsMap'
definitions.LogConfiguration.properties.options.description: 'The configuration options
  to send to the log driver. This parameter requires version 1.19 of the Docker Remote
  API or greater on your container instance. To check the Docker Remote API version
  on your container instance, log into your container instance and run the following
  command: <code>sudo docker version | grep "Server API version"</code> '
definitions.LogConfiguration.required.length: 1
definitions.LogConfiguration.required[0]: logDriver
definitions.LogConfiguration.type: object
definitions.LogConfigurationOptionsMap.items.properties.key.$ref: '#/definitions/String'
definitions.LogConfigurationOptionsMap.items.properties.value.$ref: '#/definitions/String'
definitions.LogConfigurationOptionsMap.items.type: object
definitions.LogConfigurationOptionsMap.type: array
definitions.LogDriver.enum.length: 7
definitions.LogDriver.enum[0]: json-file
definitions.LogDriver.enum[1]: syslog
definitions.LogDriver.enum[2]: journald
definitions.LogDriver.enum[3]: gelf
definitions.LogDriver.enum[4]: fluentd
definitions.LogDriver.enum[5]: awslogs
definitions.LogDriver.enum[6]: splunk
definitions.LogDriver.type: string
definitions.Long.type: integer
definitions.MissingVersionException.description: Amazon ECS is unable to determine
  the current version of the Amazon ECS container agent on the container instance
  and does not have enough information to proceed with an update. This could be because
  the agent running on the container instance is an older or custom version that does
  not use our version information.
definitions.MissingVersionException.type: object
definitions.MountPoint.description: Details on a volume mount point that is used in
  a container definition.
definitions.MountPoint.properties.containerPath.$ref: '#/definitions/String'
definitions.MountPoint.properties.containerPath.description: The path on the container
  to mount the host volume at.
definitions.MountPoint.properties.readOnly.$ref: '#/definitions/BoxedBoolean'
definitions.MountPoint.properties.readOnly.description: If this value is <code>true</code>,
  the container has read-only access to the volume. If this value is <code>false</code>,
  then the container can write to the volume. The default value is <code>false</code>.
definitions.MountPoint.properties.sourceVolume.$ref: '#/definitions/String'
definitions.MountPoint.properties.sourceVolume.description: The name of the volume
  to mount.
definitions.MountPoint.type: object
definitions.MountPointList.items.$ref: '#/definitions/MountPoint'
definitions.MountPointList.type: array
definitions.NetworkBinding.description: Details on the network bindings between a
  container and its host container instance. After a task reaches the <code>RUNNING</code>
  status, manual and automatic host and container port assignments are visible in
  the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.
definitions.NetworkBinding.properties.bindIP.$ref: '#/definitions/String'
definitions.NetworkBinding.properties.bindIP.description: The IP address that the
  container is bound to on the container instance.
definitions.NetworkBinding.properties.containerPort.$ref: '#/definitions/BoxedInteger'
definitions.NetworkBinding.properties.containerPort.description: The port number on
  the container that is be used with the network binding.
definitions.NetworkBinding.properties.hostPort.$ref: '#/definitions/BoxedInteger'
definitions.NetworkBinding.properties.hostPort.description: The port number on the
  host that is used with the network binding.
definitions.NetworkBinding.properties.protocol.$ref: '#/definitions/TransportProtocol'
definitions.NetworkBinding.properties.protocol.description: The protocol used for
  the network binding.
definitions.NetworkBinding.type: object
definitions.NetworkBindings.items.$ref: '#/definitions/NetworkBinding'
definitions.NetworkBindings.type: array
definitions.NetworkMode.enum.length: 3
definitions.NetworkMode.enum[0]: bridge
definitions.NetworkMode.enum[1]: host
definitions.NetworkMode.enum[2]: none
definitions.NetworkMode.type: string
definitions.NoUpdateAvailableException.description: There is no update available for
  this Amazon ECS container agent. This could be because the agent is already running
  the latest version, or it is so old that there is no update path to the current
  version.
definitions.NoUpdateAvailableException.type: object
definitions.PlacementConstraint.description: An object representing a constraint on
  task placement. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
  Placement Constraints</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.PlacementConstraint.properties.expression.$ref: '#/definitions/String'
definitions.PlacementConstraint.properties.expression.description: A cluster query
  language expression to apply to the constraint. Note you cannot specify an expression
  if the constraint type is <code>distinctInstance</code>. For more information, see
  <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
  Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.PlacementConstraint.properties.type.$ref: '#/definitions/PlacementConstraintType'
definitions.PlacementConstraint.properties.type.description: The type of constraint.
  Use <code>distinctInstance</code> to ensure that each task in a particular group
  is running on a different container instance. Use <code>memberOf</code> to restrict
  selection to a group of valid candidates. Note that <code>distinctInstance</code>
  is not supported in task definitions.
definitions.PlacementConstraint.type: object
definitions.PlacementConstraintType.enum.length: 2
definitions.PlacementConstraintType.enum[0]: distinctInstance
definitions.PlacementConstraintType.enum[1]: memberOf
definitions.PlacementConstraintType.type: string
definitions.PlacementConstraints.items.$ref: '#/definitions/PlacementConstraint'
definitions.PlacementConstraints.type: array
definitions.PlacementStrategies.items.$ref: '#/definitions/PlacementStrategy'
definitions.PlacementStrategies.type: array
definitions.PlacementStrategy.description: The task placement strategy for a task
  or service. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task
  Placement Strategies</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.PlacementStrategy.properties.field.$ref: '#/definitions/String'
definitions.PlacementStrategy.properties.field.description: The field to apply the
  placement strategy against. For the <code>spread</code> placement strategy, valid
  values are <code>instanceId</code> (or <code>host</code>, which has the same effect),
  or any platform or custom attribute that is applied to a container instance, such
  as <code>attribute:ecs.availability-zone</code>. For the <code>binpack</code> placement
  strategy, valid values are <code>cpu</code> and <code>memory</code>. For the <code>random</code>
  placement strategy, this field is not used.
definitions.PlacementStrategy.properties.type.$ref: '#/definitions/PlacementStrategyType'
definitions.PlacementStrategy.properties.type.description: The type of placement strategy.
  The <code>random</code> placement strategy randomly places tasks on available candidates.
  The <code>spread</code> placement strategy spreads placement across available candidates
  evenly based on the <code>field</code> parameter. The <code>binpack</code> strategy
  places tasks on available candidates that have the least available amount of the
  resource that is specified with the <code>field</code> parameter. For example, if
  you binpack on memory, a task is placed on the instance with the least amount of
  remaining memory (but still enough to run the task).
definitions.PlacementStrategy.type: object
definitions.PlacementStrategyType.enum.length: 3
definitions.PlacementStrategyType.enum[0]: random
definitions.PlacementStrategyType.enum[1]: spread
definitions.PlacementStrategyType.enum[2]: binpack
definitions.PlacementStrategyType.type: string
definitions.PortMapping.description: Port mappings allow containers to access ports
  on the host container instance to send or receive traffic. Port mappings are specified
  as part of the container definition. After a task reaches the <code>RUNNING</code>
  status, manual and automatic host and container port assignments are visible in
  the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.
definitions.PortMapping.properties.containerPort.$ref: '#/definitions/BoxedInteger'
definitions.PortMapping.properties.containerPort.description: The port number on the
  container that is bound to the user-specified or automatically assigned host port.
  If you specify a container port and not a host port, your container automatically
  receives a host port in the ephemeral port range (for more information, see <code>hostPort</code>).
  Port mappings that are automatically assigned in this way do not count toward the
  100 reserved ports limit of a container instance.
definitions.PortMapping.properties.hostPort.$ref: '#/definitions/BoxedInteger'
definitions.PortMapping.properties.hostPort.description: <p>The port number on the
  container instance to reserve for your container. You can specify a non-reserved
  host port for your container port mapping, or you can omit the <code>hostPort</code>
  (or set it to <code>0</code>) while specifying a <code>containerPort</code> and
  your container automatically receives a port in the ephemeral port range for your
  container instance operating system and Docker version.</p> <p>The default ephemeral
  port range for Docker version 1.6.0 and later is listed on the instance under <code>/proc/sys/net/ipv4/ip_local_port_range</code>;
  if this kernel parameter is unavailable, the default ephemeral port range of 49153
  to 65535 is used. You should not attempt to specify a host port in the ephemeral
  port range as these are reserved for automatic assignment. In general, ports below
  32768 are outside of the ephemeral port range.</p> <note> <p>The default ephemeral
  port range of 49153 to 65535 will always be used for Docker versions prior to 1.6.0.</p>
  </note> <p>The default reserved ports are 22 for SSH, the Docker ports 2375 and
  2376, and the Amazon ECS container agent ports 51678 and 51679. Any host port that
  was previously specified in a running task is also reserved while the task is running
  (after a task stops, the host port is released).The current reserved ports are displayed
  in the <code>remainingResources</code> of <a>DescribeContainerInstances</a> output,
  and a container instance may have up to 100 reserved ports at a time, including
  the default reserved ports (automatically assigned ports do not count toward the
  100 reserved ports limit).</p>
definitions.PortMapping.properties.protocol.$ref: '#/definitions/TransportProtocol'
definitions.PortMapping.properties.protocol.description: The protocol used for the
  port mapping. Valid values are <code>tcp</code> and <code>udp</code>. The default
  is <code>tcp</code>.
definitions.PortMapping.type: object
definitions.PortMappingList.items.$ref: '#/definitions/PortMapping'
definitions.PortMappingList.type: array
definitions.PutAttributesRequest.properties.attributes.$ref: '#/definitions/Attributes'
definitions.PutAttributesRequest.properties.attributes.description: The attributes
  to apply to your resource. You can specify up to 10 custom attributes per resource.
  You can specify up to 10 attributes in a single call.
definitions.PutAttributesRequest.properties.cluster.$ref: '#/definitions/String'
definitions.PutAttributesRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster that contains the resource to apply
  attributes. If you do not specify a cluster, the default cluster is assumed.
definitions.PutAttributesRequest.required.length: 1
definitions.PutAttributesRequest.required[0]: attributes
definitions.PutAttributesRequest.type: object
definitions.PutAttributesResponse.properties.attributes.$ref: '#/definitions/Attributes'
definitions.PutAttributesResponse.properties.attributes.description: The attributes
  applied to your resource.
definitions.PutAttributesResponse.type: object
definitions.RegisterContainerInstanceRequest.properties.attributes.$ref: '#/definitions/Attributes'
definitions.RegisterContainerInstanceRequest.properties.attributes.description: The
  container instance attributes that this container instance supports.
definitions.RegisterContainerInstanceRequest.properties.cluster.$ref: '#/definitions/String'
definitions.RegisterContainerInstanceRequest.properties.cluster.description: The short
  name or full Amazon Resource Name (ARN) of the cluster with which to register your
  container instance. If you do not specify a cluster, the default cluster is assumed.
definitions.RegisterContainerInstanceRequest.properties.containerInstanceArn.$ref: '#/definitions/String'
definitions.RegisterContainerInstanceRequest.properties.containerInstanceArn.description: The
  Amazon Resource Name (ARN) of the container instance (if it was previously registered).
definitions.RegisterContainerInstanceRequest.properties.instanceIdentityDocument.$ref: '#/definitions/String'
definitions.RegisterContainerInstanceRequest.properties.instanceIdentityDocument.description: 'The
  instance identity document for the EC2 instance to register. This document can be
  found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/document/</code> '
definitions.RegisterContainerInstanceRequest.properties.instanceIdentityDocumentSignature.$ref: '#/definitions/String'
definitions.RegisterContainerInstanceRequest.properties.instanceIdentityDocumentSignature.description: 'The
  instance identity document signature for the EC2 instance to register. This signature
  can be found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/signature/</code> '
definitions.RegisterContainerInstanceRequest.properties.totalResources.$ref: '#/definitions/Resources'
definitions.RegisterContainerInstanceRequest.properties.totalResources.description: The
  resources available on the instance.
definitions.RegisterContainerInstanceRequest.properties.versionInfo.$ref: '#/definitions/VersionInfo'
definitions.RegisterContainerInstanceRequest.properties.versionInfo.description: The
  version information for the Amazon ECS container agent and Docker daemon running
  on the container instance.
definitions.RegisterContainerInstanceRequest.type: object
definitions.RegisterContainerInstanceResponse.properties.containerInstance.$ref: '#/definitions/ContainerInstance'
definitions.RegisterContainerInstanceResponse.properties.containerInstance.description: The
  container instance that was registered.
definitions.RegisterContainerInstanceResponse.type: object
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions.length: 1
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].command.length: 2
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].command[0]: sleep
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].command[1]: "360"
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].cpu: 10
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].essential: true
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].image: busybox
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].memory: 10
definitions.RegisterTaskDefinitionRequest.example.containerDefinitions[0].name: sleep
definitions.RegisterTaskDefinitionRequest.example.family: sleep360
definitions.RegisterTaskDefinitionRequest.example.taskRoleArn: ""
definitions.RegisterTaskDefinitionRequest.example.volumes.length: 0
definitions.RegisterTaskDefinitionRequest.properties.containerDefinitions.$ref: '#/definitions/ContainerDefinitions'
definitions.RegisterTaskDefinitionRequest.properties.containerDefinitions.description: A
  list of container definitions in JSON format that describe the different containers
  that make up your task.
definitions.RegisterTaskDefinitionRequest.properties.family.$ref: '#/definitions/String'
definitions.RegisterTaskDefinitionRequest.properties.family.description: You must
  specify a <code>family</code> for a task definition, which allows you to track multiple
  versions of the same task definition. The <code>family</code> is used as a name
  for your task definition. Up to 255 letters (uppercase and lowercase), numbers,
  hyphens, and underscores are allowed.
definitions.RegisterTaskDefinitionRequest.properties.networkMode.$ref: '#/definitions/NetworkMode'
definitions.RegisterTaskDefinitionRequest.properties.networkMode.description: <p>The
  Docker networking mode to use for the containers in the task. The valid values are
  <code>none</code>, <code>bridge</code>, and <code>host</code>. </p> <p>The default
  Docker network mode is <code>bridge</code>. If the network mode is set to <code>none</code>,
  you cannot specify port mappings in your container definitions, and the task's containers
  do not have external connectivity. The <code>host</code> network mode offers the
  highest networking performance for containers because they use the host network
  stack instead of the virtualized network stack provided by the <code>bridge</code>
  mode; however, exposed container ports are mapped directly to the corresponding
  host port, so you cannot take advantage of dynamic host port mappings or run multiple
  instantiations of the same task on a single container instance if port mappings
  are used.</p> <p>For more information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
  settings</a> in the <i>Docker run reference</i>.</p>
definitions.RegisterTaskDefinitionRequest.properties.placementConstraints.$ref: '#/definitions/TaskDefinitionPlacementConstraints'
definitions.RegisterTaskDefinitionRequest.properties.placementConstraints.description: An
  array of placement constraint objects to use for the task. You can specify a maximum
  of 10 constraints per task (this limit includes constraints in the task definition
  and those specified at run time).
definitions.RegisterTaskDefinitionRequest.properties.taskRoleArn.$ref: '#/definitions/String'
definitions.RegisterTaskDefinitionRequest.properties.taskRoleArn.description: The
  short name or full Amazon Resource Name (ARN) of the IAM role that containers in
  this task can assume. All containers in this task are granted the permissions that
  are specified in this role. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
  Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.RegisterTaskDefinitionRequest.properties.volumes.$ref: '#/definitions/VolumeList'
definitions.RegisterTaskDefinitionRequest.properties.volumes.description: A list of
  volume definitions in JSON format that containers in your task may use.
definitions.RegisterTaskDefinitionRequest.required.length: 2
definitions.RegisterTaskDefinitionRequest.required[0]: family
definitions.RegisterTaskDefinitionRequest.required[1]: containerDefinitions
definitions.RegisterTaskDefinitionRequest.type: object
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions.length: 1
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].command.length: 2
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].command[0]: sleep
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].command[1]: "360"
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].cpu: 10
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].environment.length: 0
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].essential: true
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].image: busybox
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].memory: 10
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].mountPoints.length: 0
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].name: sleep
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].portMappings.length: 0
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.containerDefinitions[0].volumesFrom.length: 0
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.family: sleep360
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.revision: 1
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.taskDefinitionArn: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/sleep360:19
definitions.RegisterTaskDefinitionResponse.example.taskDefinition.volumes.length: 0
definitions.RegisterTaskDefinitionResponse.properties.taskDefinition.$ref: '#/definitions/TaskDefinition'
definitions.RegisterTaskDefinitionResponse.properties.taskDefinition.description: The
  full description of the registered task definition.
definitions.RegisterTaskDefinitionResponse.type: object
definitions.RequiresAttributes.items.$ref: '#/definitions/Attribute'
definitions.RequiresAttributes.type: array
definitions.Resource.description: Describes the resources available for a container
  instance.
definitions.Resource.properties.doubleValue.$ref: '#/definitions/Double'
definitions.Resource.properties.doubleValue.description: When the <code>doubleValue</code>
  type is set, the value of the resource must be a double precision floating-point
  type.
definitions.Resource.properties.integerValue.$ref: '#/definitions/Integer'
definitions.Resource.properties.integerValue.description: When the <code>integerValue</code>
  type is set, the value of the resource must be an integer.
definitions.Resource.properties.longValue.$ref: '#/definitions/Long'
definitions.Resource.properties.longValue.description: When the <code>longValue</code>
  type is set, the value of the resource must be an extended precision floating-point
  type.
definitions.Resource.properties.name.$ref: '#/definitions/String'
definitions.Resource.properties.name.description: The name of the resource, such as
  <code>cpu</code>, <code>memory</code>, <code>ports</code>, or a user-defined resource.
definitions.Resource.properties.stringSetValue.$ref: '#/definitions/StringList'
definitions.Resource.properties.stringSetValue.description: When the <code>stringSetValue</code>
  type is set, the value of the resource must be a string type.
definitions.Resource.properties.type.$ref: '#/definitions/String'
definitions.Resource.properties.type.description: The type of the resource, such as
  <code>INTEGER</code>, <code>DOUBLE</code>, <code>LONG</code>, or <code>STRINGSET</code>.
definitions.Resource.type: object
definitions.Resources.items.$ref: '#/definitions/Resource'
definitions.Resources.type: array
definitions.RunTaskRequest.example.cluster: default
definitions.RunTaskRequest.example.taskDefinition: sleep360:1
definitions.RunTaskRequest.properties.cluster.$ref: '#/definitions/String'
definitions.RunTaskRequest.properties.cluster.description: The short name or full
  Amazon Resource Name (ARN) of the cluster on which to run your task. If you do not
  specify a cluster, the default cluster is assumed.
definitions.RunTaskRequest.properties.count.$ref: '#/definitions/BoxedInteger'
definitions.RunTaskRequest.properties.count.description: The number of instantiations
  of the specified task to place on your cluster. You can specify up to 10 tasks per
  call.
definitions.RunTaskRequest.properties.group.$ref: '#/definitions/String'
definitions.RunTaskRequest.properties.group.description: The name of the task group
  to associate with the task. The default value is the family name of the task definition
  (for example, family:my-family-name).
definitions.RunTaskRequest.properties.overrides.$ref: '#/definitions/TaskOverride'
definitions.RunTaskRequest.properties.overrides.description: <p>A list of container
  overrides in JSON format that specify the name of a container in the specified task
  definition and the overrides it should receive. You can override the default command
  for a container (that is specified in the task definition or Docker image) with
  a <code>command</code> override. You can also override existing environment variables
  (that are specified in the task definition or Docker image) on a container or add
  new environment variables to it with an <code>environment</code> override.</p> <note>
  <p>A total of 8192 characters are allowed for overrides. This limit includes the
  JSON formatting characters of the override structure.</p> </note>
definitions.RunTaskRequest.properties.placementConstraints.$ref: '#/definitions/PlacementConstraints'
definitions.RunTaskRequest.properties.placementConstraints.description: An array of
  placement constraint objects to use for the task. You can specify up to 10 constraints
  per task (including constraints in the task definition and those specified at run
  time).
definitions.RunTaskRequest.properties.placementStrategy.$ref: '#/definitions/PlacementStrategies'
definitions.RunTaskRequest.properties.placementStrategy.description: The placement
  strategy objects to use for the task. You can specify a maximum of 5 strategy rules
  per task.
definitions.RunTaskRequest.properties.startedBy.$ref: '#/definitions/String'
definitions.RunTaskRequest.properties.startedBy.description: <p>An optional tag specified
  when a task is started. For example if you automatically trigger a task to run a
  batch process job, you could apply a unique identifier for that job to your task
  with the <code>startedBy</code> parameter. You can then identify which tasks belong
  to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code>
  value. Up to 36 letters (uppercase and lowercase), numbers, hyphens, and underscores
  are allowed.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code>
  parameter contains the deployment ID of the service that starts it.</p>
definitions.RunTaskRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.RunTaskRequest.properties.taskDefinition.description: The <code>family</code>
  and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource
  Name (ARN) of the task definition to run. If a <code>revision</code> is not specified,
  the latest <code>ACTIVE</code> revision is used.
definitions.RunTaskRequest.required.length: 1
definitions.RunTaskRequest.required[0]: taskDefinition
definitions.RunTaskRequest.type: object
definitions.RunTaskResponse.example.tasks.length: 1
definitions.RunTaskResponse.example.tasks[0].containerInstanceArn: arn:aws:ecs:us-east-1:<aws_account_id>:container-instance/ffe3d344-77e2-476c-a4d0-bf560ad50acb
definitions.RunTaskResponse.example.tasks[0].containers.length: 1
definitions.RunTaskResponse.example.tasks[0].containers[0].containerArn: arn:aws:ecs:us-east-1:<aws_account_id>:container/58591c8e-be29-4ddf-95aa-ee459d4c59fd
definitions.RunTaskResponse.example.tasks[0].containers[0].lastStatus: PENDING
definitions.RunTaskResponse.example.tasks[0].containers[0].name: sleep
definitions.RunTaskResponse.example.tasks[0].containers[0].taskArn: arn:aws:ecs:us-east-1:<aws_account_id>:task/a9f21ea7-c9f5-44b1-b8e6-b31f50ed33c0
definitions.RunTaskResponse.example.tasks[0].desiredStatus: RUNNING
definitions.RunTaskResponse.example.tasks[0].lastStatus: PENDING
definitions.RunTaskResponse.example.tasks[0].overrides.containerOverrides.length: 1
definitions.RunTaskResponse.example.tasks[0].overrides.containerOverrides[0].name: sleep
definitions.RunTaskResponse.example.tasks[0].taskArn: arn:aws:ecs:us-east-1:<aws_account_id>:task/a9f21ea7-c9f5-44b1-b8e6-b31f50ed33c0
definitions.RunTaskResponse.example.tasks[0].taskDefinitionArn: arn:aws:ecs:us-east-1:<aws_account_id>:task-definition/sleep360:1
definitions.RunTaskResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.RunTaskResponse.properties.failures.description: Any failures associated
  with the call.
definitions.RunTaskResponse.properties.tasks.$ref: '#/definitions/Tasks'
definitions.RunTaskResponse.properties.tasks.description: A full description of the
  tasks that were run. Each task that was successfully placed on your cluster are
  described here.
definitions.RunTaskResponse.type: object
definitions.ServerException.description: These errors are usually caused by a server
  issue.
definitions.ServerException.properties.message.$ref: '#/definitions/String'
definitions.ServerException.type: object
definitions.Service.description: Details on a service within a cluster
definitions.Service.properties.clusterArn.$ref: '#/definitions/String'
definitions.Service.properties.clusterArn.description: The Amazon Resource Name (ARN)
  of the cluster that hosts the service.
definitions.Service.properties.createdAt.$ref: '#/definitions/Timestamp'
definitions.Service.properties.createdAt.description: The Unix timestamp for when
  the service was created.
definitions.Service.properties.deploymentConfiguration.$ref: '#/definitions/DeploymentConfiguration'
definitions.Service.properties.deploymentConfiguration.description: Optional deployment
  parameters that control how many tasks run during the deployment and the ordering
  of stopping and starting tasks.
definitions.Service.properties.deployments.$ref: '#/definitions/Deployments'
definitions.Service.properties.deployments.description: The current state of deployments
  for the service.
definitions.Service.properties.desiredCount.$ref: '#/definitions/Integer'
definitions.Service.properties.desiredCount.description: The desired number of instantiations
  of the task definition to keep running on the service. This value is specified when
  the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.
definitions.Service.properties.events.$ref: '#/definitions/ServiceEvents'
definitions.Service.properties.events.description: The event stream for your service.
  A maximum of 100 of the latest events are displayed.
definitions.Service.properties.loadBalancers.$ref: '#/definitions/LoadBalancers'
definitions.Service.properties.loadBalancers.description: A list of Elastic Load Balancing
  load balancer objects, containing the load balancer name, the container name (as
  it appears in a container definition), and the container port to access from the
  load balancer.
definitions.Service.properties.pendingCount.$ref: '#/definitions/Integer'
definitions.Service.properties.pendingCount.description: The number of tasks in the
  cluster that are in the <code>PENDING</code> state.
definitions.Service.properties.placementConstraints.$ref: '#/definitions/PlacementConstraints'
definitions.Service.properties.placementConstraints.description: The placement constraints
  for the tasks in the service.
definitions.Service.properties.placementStrategy.$ref: '#/definitions/PlacementStrategies'
definitions.Service.properties.placementStrategy.description: The placement strategy
  that determines how tasks for the service are placed.
definitions.Service.properties.roleArn.$ref: '#/definitions/String'
definitions.Service.properties.roleArn.description: The Amazon Resource Name (ARN)
  of the IAM role associated with the service that allows the Amazon ECS container
  agent to register container instances with an Elastic Load Balancing load balancer.
definitions.Service.properties.runningCount.$ref: '#/definitions/Integer'
definitions.Service.properties.runningCount.description: The number of tasks in the
  cluster that are in the <code>RUNNING</code> state.
definitions.Service.properties.serviceArn.$ref: '#/definitions/String'
definitions.Service.properties.serviceArn.description: The Amazon Resource Name (ARN)
  that identifies the service. The ARN contains the <code>arn:aws:ecs</code> namespace,
  followed by the region of the service, the AWS account ID of the service owner,
  the <code>service</code> namespace, and then the service name. For example, <code>arn:aws:ecs:<i>region</i>:<i>012345678910</i>:service/<i>my-service</i>
  </code>.
definitions.Service.properties.serviceName.$ref: '#/definitions/String'
definitions.Service.properties.serviceName.description: The name of your service.
  Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are
  allowed. Service names must be unique within a cluster, but you can have similarly
  named services in multiple clusters within a region or across multiple regions.
definitions.Service.properties.status.$ref: '#/definitions/String'
definitions.Service.properties.status.description: The status of the service. The
  valid values are <code>ACTIVE</code>, <code>DRAINING</code>, or <code>INACTIVE</code>.
definitions.Service.properties.taskDefinition.$ref: '#/definitions/String'
definitions.Service.properties.taskDefinition.description: The task definition to
  use for tasks in the service. This value is specified when the service is created
  with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.
definitions.Service.type: object
definitions.ServiceEvent.description: Details on an event associated with a service.
definitions.ServiceEvent.properties.createdAt.$ref: '#/definitions/Timestamp'
definitions.ServiceEvent.properties.createdAt.description: The Unix timestamp for
  when the event was triggered.
definitions.ServiceEvent.properties.id.$ref: '#/definitions/String'
definitions.ServiceEvent.properties.id.description: The ID string of the event.
definitions.ServiceEvent.properties.message.$ref: '#/definitions/String'
definitions.ServiceEvent.properties.message.description: The event message.
definitions.ServiceEvent.type: object
definitions.ServiceEvents.items.$ref: '#/definitions/ServiceEvent'
definitions.ServiceEvents.type: array
definitions.ServiceNotActiveException.description: The specified service is not active.
  You cannot update a service that is not active. If you have previously deleted a
  service, you can re-create it with <a>CreateService</a>.
definitions.ServiceNotActiveException.type: object
definitions.ServiceNotFoundException.description: The specified service could not
  be found. You can view your available services with <a>ListServices</a>. Amazon
  ECS services are cluster-specific and region-specific.
definitions.ServiceNotFoundException.type: object
definitions.Services.items.$ref: '#/definitions/Service'
definitions.Services.type: array
definitions.SortOrder.enum.length: 2
definitions.SortOrder.enum[0]: ASC
definitions.SortOrder.enum[1]: DESC
definitions.SortOrder.type: string
definitions.StartTaskRequest.properties.cluster.$ref: '#/definitions/String'
definitions.StartTaskRequest.properties.cluster.description: The short name or full
  Amazon Resource Name (ARN) of the cluster on which to start your task. If you do
  not specify a cluster, the default cluster is assumed.
definitions.StartTaskRequest.properties.containerInstances.$ref: '#/definitions/StringList'
definitions.StartTaskRequest.properties.containerInstances.description: The container
  instance IDs or full Amazon Resource Name (ARN) entries for the container instances
  on which you would like to place your task. You can specify up to 10 container instances.
definitions.StartTaskRequest.properties.group.$ref: '#/definitions/String'
definitions.StartTaskRequest.properties.group.description: The name of the task group
  to associate with the task. The default value is the family name of the task definition
  (for example, family:my-family-name).
definitions.StartTaskRequest.properties.overrides.$ref: '#/definitions/TaskOverride'
definitions.StartTaskRequest.properties.overrides.description: <p>A list of container
  overrides in JSON format that specify the name of a container in the specified task
  definition and the overrides it should receive. You can override the default command
  for a container (that is specified in the task definition or Docker image) with
  a <code>command</code> override. You can also override existing environment variables
  (that are specified in the task definition or Docker image) on a container or add
  new environment variables to it with an <code>environment</code> override.</p> <note>
  <p>A total of 8192 characters are allowed for overrides. This limit includes the
  JSON formatting characters of the override structure.</p> </note>
definitions.StartTaskRequest.properties.startedBy.$ref: '#/definitions/String'
definitions.StartTaskRequest.properties.startedBy.description: <p>An optional tag
  specified when a task is started. For example if you automatically trigger a task
  to run a batch process job, you could apply a unique identifier for that job to
  your task with the <code>startedBy</code> parameter. You can then identify which
  tasks belong to that job by filtering the results of a <a>ListTasks</a> call with
  the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase), numbers,
  hyphens, and underscores are allowed.</p> <p>If a task is started by an Amazon ECS
  service, then the <code>startedBy</code> parameter contains the deployment ID of
  the service that starts it.</p>
definitions.StartTaskRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.StartTaskRequest.properties.taskDefinition.description: The <code>family</code>
  and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource
  Name (ARN) of the task definition to start. If a <code>revision</code> is not specified,
  the latest <code>ACTIVE</code> revision is used.
definitions.StartTaskRequest.required.length: 2
definitions.StartTaskRequest.required[0]: taskDefinition
definitions.StartTaskRequest.required[1]: containerInstances
definitions.StartTaskRequest.type: object
definitions.StartTaskResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.StartTaskResponse.properties.failures.description: Any failures associated
  with the call.
definitions.StartTaskResponse.properties.tasks.$ref: '#/definitions/Tasks'
definitions.StartTaskResponse.properties.tasks.description: A full description of
  the tasks that were started. Each task that was successfully placed on your container
  instances are described here.
definitions.StartTaskResponse.type: object
definitions.StopTaskRequest.properties.cluster.$ref: '#/definitions/String'
definitions.StopTaskRequest.properties.cluster.description: The short name or full
  Amazon Resource Name (ARN) of the cluster that hosts the task to stop. If you do
  not specify a cluster, the default cluster is assumed.
definitions.StopTaskRequest.properties.reason.$ref: '#/definitions/String'
definitions.StopTaskRequest.properties.reason.description: An optional message specified
  when a task is stopped. For example, if you are using a custom scheduler, you can
  use this parameter to specify the reason for stopping the task here, and the message
  will appear in subsequent <a>DescribeTasks</a> API operations on this task. Up to
  255 characters are allowed in this message.
definitions.StopTaskRequest.properties.task.$ref: '#/definitions/String'
definitions.StopTaskRequest.properties.task.description: The task ID or full Amazon
  Resource Name (ARN) entry of the task to stop.
definitions.StopTaskRequest.required.length: 1
definitions.StopTaskRequest.required[0]: task
definitions.StopTaskRequest.type: object
definitions.StopTaskResponse.properties.task.$ref: '#/definitions/Task'
definitions.StopTaskResponse.properties.task.description: The task that was stopped.
definitions.StopTaskResponse.type: object
definitions.String.type: string
definitions.StringList.items.$ref: '#/definitions/String'
definitions.StringList.type: array
definitions.SubmitContainerStateChangeRequest.properties.cluster.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeRequest.properties.cluster.description: The
  short name or full Amazon Resource Name (ARN) of the cluster that hosts the container.
definitions.SubmitContainerStateChangeRequest.properties.containerName.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeRequest.properties.containerName.description: The
  name of the container.
definitions.SubmitContainerStateChangeRequest.properties.exitCode.$ref: '#/definitions/BoxedInteger'
definitions.SubmitContainerStateChangeRequest.properties.exitCode.description: The
  exit code returned for the state change request.
definitions.SubmitContainerStateChangeRequest.properties.networkBindings.$ref: '#/definitions/NetworkBindings'
definitions.SubmitContainerStateChangeRequest.properties.networkBindings.description: The
  network bindings of the container.
definitions.SubmitContainerStateChangeRequest.properties.reason.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeRequest.properties.reason.description: The reason
  for the state change request.
definitions.SubmitContainerStateChangeRequest.properties.status.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeRequest.properties.status.description: The status
  of the state change request.
definitions.SubmitContainerStateChangeRequest.properties.task.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeRequest.properties.task.description: The task
  ID or full Amazon Resource Name (ARN) of the task that hosts the container.
definitions.SubmitContainerStateChangeRequest.type: object
definitions.SubmitContainerStateChangeResponse.properties.acknowledgment.$ref: '#/definitions/String'
definitions.SubmitContainerStateChangeResponse.properties.acknowledgment.description: Acknowledgement
  of the state change.
definitions.SubmitContainerStateChangeResponse.type: object
definitions.SubmitTaskStateChangeRequest.properties.cluster.$ref: '#/definitions/String'
definitions.SubmitTaskStateChangeRequest.properties.cluster.description: The short
  name or full Amazon Resource Name (ARN) of the cluster that hosts the task.
definitions.SubmitTaskStateChangeRequest.properties.reason.$ref: '#/definitions/String'
definitions.SubmitTaskStateChangeRequest.properties.reason.description: The reason
  for the state change request.
definitions.SubmitTaskStateChangeRequest.properties.status.$ref: '#/definitions/String'
definitions.SubmitTaskStateChangeRequest.properties.status.description: The status
  of the state change request.
definitions.SubmitTaskStateChangeRequest.properties.task.$ref: '#/definitions/String'
definitions.SubmitTaskStateChangeRequest.properties.task.description: The task ID
  or full Amazon Resource Name (ARN) of the task in the state change request.
definitions.SubmitTaskStateChangeRequest.type: object
definitions.SubmitTaskStateChangeResponse.properties.acknowledgment.$ref: '#/definitions/String'
definitions.SubmitTaskStateChangeResponse.properties.acknowledgment.description: Acknowledgement
  of the state change.
definitions.SubmitTaskStateChangeResponse.type: object
definitions.TargetNotFoundException.description: The specified target could not be
  found. You can view your available container instances with <a>ListContainerInstances</a>.
  Amazon ECS container instances are cluster-specific and region-specific.
definitions.TargetNotFoundException.type: object
definitions.TargetType.enum.length: 1
definitions.TargetType.enum[0]: container-instance
definitions.TargetType.type: string
definitions.Task.description: Details on a task in a cluster.
definitions.Task.properties.clusterArn.$ref: '#/definitions/String'
definitions.Task.properties.clusterArn.description: The Amazon Resource Name (ARN)
  of the cluster that hosts the task.
definitions.Task.properties.containerInstanceArn.$ref: '#/definitions/String'
definitions.Task.properties.containerInstanceArn.description: The Amazon Resource
  Name (ARN) of the container instances that host the task.
definitions.Task.properties.containers.$ref: '#/definitions/Containers'
definitions.Task.properties.containers.description: The containers associated with
  the task.
definitions.Task.properties.createdAt.$ref: '#/definitions/Timestamp'
definitions.Task.properties.createdAt.description: The Unix timestamp for when the
  task was created (the task entered the <code>PENDING</code> state).
definitions.Task.properties.desiredStatus.$ref: '#/definitions/String'
definitions.Task.properties.desiredStatus.description: The desired status of the task.
definitions.Task.properties.group.$ref: '#/definitions/String'
definitions.Task.properties.group.description: The name of the task group associated
  with the task.
definitions.Task.properties.lastStatus.$ref: '#/definitions/String'
definitions.Task.properties.lastStatus.description: The last known status of the task.
definitions.Task.properties.overrides.$ref: '#/definitions/TaskOverride'
definitions.Task.properties.overrides.description: One or more container overrides.
definitions.Task.properties.startedAt.$ref: '#/definitions/Timestamp'
definitions.Task.properties.startedAt.description: The Unix timestamp for when the
  task was started (the task transitioned from the <code>PENDING</code> state to the
  <code>RUNNING</code> state).
definitions.Task.properties.startedBy.$ref: '#/definitions/String'
definitions.Task.properties.startedBy.description: The tag specified when a task is
  started. If the task is started by an Amazon ECS service, then the <code>startedBy</code>
  parameter contains the deployment ID of the service that starts it.
definitions.Task.properties.stoppedAt.$ref: '#/definitions/Timestamp'
definitions.Task.properties.stoppedAt.description: The Unix timestamp for when the
  task was stopped (the task transitioned from the <code>RUNNING</code> state to the
  <code>STOPPED</code> state).
definitions.Task.properties.stoppedReason.$ref: '#/definitions/String'
definitions.Task.properties.stoppedReason.description: The reason the task was stopped.
definitions.Task.properties.taskArn.$ref: '#/definitions/String'
definitions.Task.properties.taskArn.description: The Amazon Resource Name (ARN) of
  the task.
definitions.Task.properties.taskDefinitionArn.$ref: '#/definitions/String'
definitions.Task.properties.taskDefinitionArn.description: The Amazon Resource Name
  (ARN) of the task definition that creates the task.
definitions.Task.properties.version.$ref: '#/definitions/Long'
definitions.Task.properties.version.description: The version counter for the task.
  Every time a task experiences a change that triggers a CloudWatch event, the version
  counter is incremented. If you are replicating your Amazon ECS task state with CloudWatch
  events, you can compare the version of a task reported by the Amazon ECS APIs with
  the version reported in CloudWatch events for the task (inside the <code>detail</code>
  object) to verify that the version in your event stream is current.
definitions.Task.type: object
definitions.TaskDefinition.description: Details of a task definition.
definitions.TaskDefinition.properties.containerDefinitions.$ref: '#/definitions/ContainerDefinitions'
definitions.TaskDefinition.properties.containerDefinitions.description: A list of
  container definitions in JSON format that describe the different containers that
  make up your task. For more information about container definition parameters and
  defaults, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
  ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.TaskDefinition.properties.family.$ref: '#/definitions/String'
definitions.TaskDefinition.properties.family.description: The family of your task
  definition, used as the definition name.
definitions.TaskDefinition.properties.networkMode.$ref: '#/definitions/NetworkMode'
definitions.TaskDefinition.properties.networkMode.description: <p>The Docker networking
  mode to use for the containers in the task. The valid values are <code>none</code>,
  <code>bridge</code>, and <code>host</code>. </p> <p>If the network mode is <code>none</code>,
  the containers do not have external connectivity. The default Docker network mode
  is <code>bridge</code>. The <code>host</code> network mode offers the highest networking
  performance for containers because it uses the host network stack instead of the
  virtualized network stack provided by the <code>bridge</code> mode.</p> <p>For more
  information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
  settings</a> in the <i>Docker run reference</i>.</p>
definitions.TaskDefinition.properties.placementConstraints.$ref: '#/definitions/TaskDefinitionPlacementConstraints'
definitions.TaskDefinition.properties.placementConstraints.description: 'An array
  of placement constraint objects to use for tasks. '
definitions.TaskDefinition.properties.requiresAttributes.$ref: '#/definitions/RequiresAttributes'
definitions.TaskDefinition.properties.requiresAttributes.description: The container
  instance attributes required by your task.
definitions.TaskDefinition.properties.revision.$ref: '#/definitions/Integer'
definitions.TaskDefinition.properties.revision.description: The revision of the task
  in a particular family. The revision is a version number of a task definition in
  a family. When you register a task definition for the first time, the revision is
  <code>1</code>; each time you register a new revision of a task definition in the
  same family, the revision value always increases by one (even if you have deregistered
  previous revisions in this family).
definitions.TaskDefinition.properties.status.$ref: '#/definitions/TaskDefinitionStatus'
definitions.TaskDefinition.properties.status.description: The status of the task definition.
definitions.TaskDefinition.properties.taskDefinitionArn.$ref: '#/definitions/String'
definitions.TaskDefinition.properties.taskDefinitionArn.description: The full Amazon
  Resource Name (ARN) of the task definition.
definitions.TaskDefinition.properties.taskRoleArn.$ref: '#/definitions/String'
definitions.TaskDefinition.properties.taskRoleArn.description: The Amazon Resource
  Name (ARN) of the IAM role that containers in this task can assume. All containers
  in this task are granted the permissions that are specified in this role.
definitions.TaskDefinition.properties.volumes.$ref: '#/definitions/VolumeList'
definitions.TaskDefinition.properties.volumes.description: The list of volumes in
  a task. For more information about volume definition parameters and defaults, see
  <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
  ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.TaskDefinition.type: object
definitions.TaskDefinitionFamilyStatus.enum.length: 3
definitions.TaskDefinitionFamilyStatus.enum[0]: ACTIVE
definitions.TaskDefinitionFamilyStatus.enum[1]: INACTIVE
definitions.TaskDefinitionFamilyStatus.enum[2]: ALL
definitions.TaskDefinitionFamilyStatus.type: string
definitions.TaskDefinitionPlacementConstraint.description: An object representing
  a constraint on task placement in the task definition. For more information, see
  <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
  Placement Constraints</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.TaskDefinitionPlacementConstraint.properties.expression.$ref: '#/definitions/String'
definitions.TaskDefinitionPlacementConstraint.properties.expression.description: A
  cluster query language expression to apply to the constraint. For more information,
  see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
  Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
definitions.TaskDefinitionPlacementConstraint.properties.type.$ref: '#/definitions/TaskDefinitionPlacementConstraintType'
definitions.TaskDefinitionPlacementConstraint.properties.type.description: The type
  of constraint. The <code>DistinctInstance</code> constraint ensures that each task
  in a particular group is running on a different container instance. The <code>MemberOf</code>
  constraint restricts selection to be from a group of valid candidates.
definitions.TaskDefinitionPlacementConstraint.type: object
definitions.TaskDefinitionPlacementConstraintType.enum.length: 1
definitions.TaskDefinitionPlacementConstraintType.enum[0]: memberOf
definitions.TaskDefinitionPlacementConstraintType.type: string
definitions.TaskDefinitionPlacementConstraints.items.$ref: '#/definitions/TaskDefinitionPlacementConstraint'
definitions.TaskDefinitionPlacementConstraints.type: array
definitions.TaskDefinitionStatus.enum.length: 2
definitions.TaskDefinitionStatus.enum[0]: ACTIVE
definitions.TaskDefinitionStatus.enum[1]: INACTIVE
definitions.TaskDefinitionStatus.type: string
definitions.TaskOverride.description: The overrides associated with a task.
definitions.TaskOverride.properties.containerOverrides.$ref: '#/definitions/ContainerOverrides'
definitions.TaskOverride.properties.containerOverrides.description: One or more container
  overrides sent to a task.
definitions.TaskOverride.properties.taskRoleArn.$ref: '#/definitions/String'
definitions.TaskOverride.properties.taskRoleArn.description: The Amazon Resource Name
  (ARN) of the IAM role that containers in this task can assume. All containers in
  this task are granted the permissions that are specified in this role.
definitions.TaskOverride.type: object
definitions.Tasks.items.$ref: '#/definitions/Task'
definitions.Tasks.type: array
definitions.Timestamp.format: date-time
definitions.Timestamp.type: string
definitions.TransportProtocol.enum.length: 2
definitions.TransportProtocol.enum[0]: tcp
definitions.TransportProtocol.enum[1]: udp
definitions.TransportProtocol.type: string
definitions.Ulimit.description: The <code>ulimit</code> settings to pass to the container.
definitions.Ulimit.properties.hardLimit.$ref: '#/definitions/Integer'
definitions.Ulimit.properties.hardLimit.description: The hard limit for the ulimit
  type.
definitions.Ulimit.properties.name.$ref: '#/definitions/UlimitName'
definitions.Ulimit.properties.name.description: The <code>type</code> of the <code>ulimit</code>.
definitions.Ulimit.properties.softLimit.$ref: '#/definitions/Integer'
definitions.Ulimit.properties.softLimit.description: The soft limit for the ulimit
  type.
definitions.Ulimit.required.length: 3
definitions.Ulimit.required[0]: name
definitions.Ulimit.required[1]: softLimit
definitions.Ulimit.required[2]: hardLimit
definitions.Ulimit.type: object
definitions.UlimitList.items.$ref: '#/definitions/Ulimit'
definitions.UlimitList.type: array
definitions.UlimitName.enum.length: 15
definitions.UlimitName.enum[0]: core
definitions.UlimitName.enum[1]: cpu
definitions.UlimitName.enum[2]: data
definitions.UlimitName.enum[3]: fsize
definitions.UlimitName.enum[4]: locks
definitions.UlimitName.enum[5]: memlock
definitions.UlimitName.enum[6]: msgqueue
definitions.UlimitName.enum[7]: nice
definitions.UlimitName.enum[8]: nofile
definitions.UlimitName.enum[9]: nproc
definitions.UlimitName.enum[10]: rss
definitions.UlimitName.enum[11]: rtprio
definitions.UlimitName.enum[12]: rttime
definitions.UlimitName.enum[13]: sigpending
definitions.UlimitName.enum[14]: stack
definitions.UlimitName.type: string
definitions.UpdateContainerAgentRequest.properties.cluster.$ref: '#/definitions/String'
definitions.UpdateContainerAgentRequest.properties.cluster.description: The short
  name or full Amazon Resource Name (ARN) of the cluster that your container instance
  is running on. If you do not specify a cluster, the default cluster is assumed.
definitions.UpdateContainerAgentRequest.properties.containerInstance.$ref: '#/definitions/String'
definitions.UpdateContainerAgentRequest.properties.containerInstance.description: The
  container instance ID or full Amazon Resource Name (ARN) entries for the container
  instance on which you would like to update the Amazon ECS container agent.
definitions.UpdateContainerAgentRequest.required.length: 1
definitions.UpdateContainerAgentRequest.required[0]: containerInstance
definitions.UpdateContainerAgentRequest.type: object
definitions.UpdateContainerAgentResponse.properties.containerInstance.$ref: '#/definitions/ContainerInstance'
definitions.UpdateContainerAgentResponse.properties.containerInstance.description: The
  container instance for which the container agent was updated.
definitions.UpdateContainerAgentResponse.type: object
definitions.UpdateContainerInstancesStateRequest.properties.cluster.$ref: '#/definitions/String'
definitions.UpdateContainerInstancesStateRequest.properties.cluster.description: The
  short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
  instance to update. If you do not specify a cluster, the default cluster is assumed.
definitions.UpdateContainerInstancesStateRequest.properties.containerInstances.$ref: '#/definitions/StringList'
definitions.UpdateContainerInstancesStateRequest.properties.containerInstances.description: A
  list of container instance IDs or full Amazon Resource Name (ARN) entries.
definitions.UpdateContainerInstancesStateRequest.properties.status.$ref: '#/definitions/ContainerInstanceStatus'
definitions.UpdateContainerInstancesStateRequest.properties.status.description: The
  container instance state with which to update the container instance.
definitions.UpdateContainerInstancesStateRequest.required.length: 2
definitions.UpdateContainerInstancesStateRequest.required[0]: containerInstances
definitions.UpdateContainerInstancesStateRequest.required[1]: status
definitions.UpdateContainerInstancesStateRequest.type: object
definitions.UpdateContainerInstancesStateResponse.properties.containerInstances.$ref: '#/definitions/ContainerInstances'
definitions.UpdateContainerInstancesStateResponse.properties.containerInstances.description: The
  list of container instances.
definitions.UpdateContainerInstancesStateResponse.properties.failures.$ref: '#/definitions/Failures'
definitions.UpdateContainerInstancesStateResponse.properties.failures.description: Any
  failures associated with the call.
definitions.UpdateContainerInstancesStateResponse.type: object
definitions.UpdateInProgressException.description: There is already a current Amazon
  ECS container agent update in progress on the specified container instance. If the
  container agent becomes disconnected while it is in a transitional stage, such as
  <code>PENDING</code> or <code>STAGING</code>, the update process can get stuck in
  that state. However, when the agent reconnects, it resumes where it stopped previously.
definitions.UpdateInProgressException.type: object
definitions.UpdateServiceRequest.example.desiredCount: 10
definitions.UpdateServiceRequest.example.service: my-http-service
definitions.UpdateServiceRequest.properties.cluster.$ref: '#/definitions/String'
definitions.UpdateServiceRequest.properties.cluster.description: The short name or
  full Amazon Resource Name (ARN) of the cluster that your service is running on.
  If you do not specify a cluster, the default cluster is assumed.
definitions.UpdateServiceRequest.properties.deploymentConfiguration.$ref: '#/definitions/DeploymentConfiguration'
definitions.UpdateServiceRequest.properties.deploymentConfiguration.description: Optional
  deployment parameters that control how many tasks run during the deployment and
  the ordering of stopping and starting tasks.
definitions.UpdateServiceRequest.properties.desiredCount.$ref: '#/definitions/BoxedInteger'
definitions.UpdateServiceRequest.properties.desiredCount.description: The number of
  instantiations of the task to place and keep running in your service.
definitions.UpdateServiceRequest.properties.service.$ref: '#/definitions/String'
definitions.UpdateServiceRequest.properties.service.description: The name of the service
  to update.
definitions.UpdateServiceRequest.properties.taskDefinition.$ref: '#/definitions/String'
definitions.UpdateServiceRequest.properties.taskDefinition.description: The <code>family</code>
  and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource
  Name (ARN) of the task definition to run in your service. If a <code>revision</code>
  is not specified, the latest <code>ACTIVE</code> revision is used. If you modify
  the task definition with <code>UpdateService</code>, Amazon ECS spawns a task with
  the new version of the task definition and then stops an old task after the new
  version is running.
definitions.UpdateServiceRequest.required.length: 1
definitions.UpdateServiceRequest.required[0]: service
definitions.UpdateServiceRequest.type: object
definitions.UpdateServiceResponse.properties.service.$ref: '#/definitions/Service'
definitions.UpdateServiceResponse.properties.service.description: The full description
  of your service following the update call.
definitions.UpdateServiceResponse.type: object
definitions.VersionInfo.description: The Docker and Amazon ECS container agent version
  information about a container instance.
definitions.VersionInfo.properties.agentHash.$ref: '#/definitions/String'
definitions.VersionInfo.properties.agentHash.description: The Git commit hash for
  the Amazon ECS container agent build on the <a href="https://github.com/aws/amazon-ecs-agent/commits/master">amazon-ecs-agent
  </a> GitHub repository.
definitions.VersionInfo.properties.agentVersion.$ref: '#/definitions/String'
definitions.VersionInfo.properties.agentVersion.description: The version number of
  the Amazon ECS container agent.
definitions.VersionInfo.properties.dockerVersion.$ref: '#/definitions/String'
definitions.VersionInfo.properties.dockerVersion.description: The Docker version running
  on the container instance.
definitions.VersionInfo.type: object
definitions.Volume.description: A data volume used in a task definition.
definitions.Volume.properties.host.$ref: '#/definitions/HostVolumeProperties'
definitions.Volume.properties.host.description: The contents of the <code>host</code>
  parameter determine whether your data volume persists on the host container instance
  and where it is stored. If the host parameter is empty, then the Docker daemon assigns
  a host path for your data volume, but the data is not guaranteed to persist after
  the containers associated with it stop running.
definitions.Volume.properties.name.$ref: '#/definitions/String'
definitions.Volume.properties.name.description: The name of the volume. Up to 255
  letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
  This name is referenced in the <code>sourceVolume</code> parameter of container
  definition <code>mountPoints</code>.
definitions.Volume.type: object
definitions.VolumeFrom.description: Details on a data volume from another container
  in the same task definition.
definitions.VolumeFrom.properties.readOnly.$ref: '#/definitions/BoxedBoolean'
definitions.VolumeFrom.properties.readOnly.description: If this value is <code>true</code>,
  the container has read-only access to the volume. If this value is <code>false</code>,
  then the container can write to the volume. The default value is <code>false</code>.
definitions.VolumeFrom.properties.sourceContainer.$ref: '#/definitions/String'
definitions.VolumeFrom.properties.sourceContainer.description: The name of another
  container within the same task definition to mount volumes from.
definitions.VolumeFrom.type: object
definitions.VolumeFromList.items.$ref: '#/definitions/VolumeFrom'
definitions.VolumeFromList.type: array
definitions.VolumeList.items.$ref: '#/definitions/Volume'
definitions.VolumeList.type: array
externalDocs.description: Amazon Web Services documentation
externalDocs.url: https://aws.amazon.com/ecs/
host: ecs.amazonaws.com
info.contact.email: mike.ralphson@gmail.com
info.contact.name: Mike Ralphson
info.contact.url: https://github.com/mermade/aws2openapi
info.description: <p>Amazon EC2 Container Service (Amazon ECS) is a highly scalable,
  fast, container management service that makes it easy to run, stop, and manage Docker
  containers on a cluster of EC2 instances. Amazon ECS lets you launch and stop container-enabled
  applications with simple API calls, allows you to get the state of your cluster
  from a centralized service, and gives you access to many familiar Amazon EC2 features
  like security groups, Amazon EBS volumes, and IAM roles.</p> <p>You can use Amazon
  ECS to schedule the placement of containers across your cluster based on your resource
  needs, isolation policies, and availability requirements. Amazon EC2 Container Service
  eliminates the need for you to operate your own cluster management and configuration
  management systems or worry about scaling your management infrastructure.</p>
info.license.name: Apache 2.0 License
info.license.url: http://www.apache.org/licenses/
info.termsOfService: https://aws.amazon.com/service-terms/
info.title: Amazon EC2 Container Service
info.version: 2014-11-13
info.x-apiClientRegistration.url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: cloud
info.x-logo.backgroundColor: '#FFFFFF'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg
info.x-origin.length: 1
info.x-origin[0].contentType: application/json
info.x-origin[0].converter.url: https://github.com/mermade/aws2openapi
info.x-origin[0].converter.version: 1.0.0
info.x-origin[0].url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ecs-2014-11-13.normal.json
info.x-origin[0].x-apisguru-direct: true
info.x-preferred: true
info.x-providerName: amazonaws.com
info.x-release: v4
info.x-serviceName: ecs
parameters.Action.in: header
parameters.Action.name: Action
parameters.Action.required: true
parameters.Action.type: string
parameters.Version.in: header
parameters.Version.name: Version
parameters.Version.required: true
parameters.Version.type: string
parameters.X-Amz-Algorithm.in: header
parameters.X-Amz-Algorithm.name: X-Amz-Algorithm
parameters.X-Amz-Algorithm.required: false
parameters.X-Amz-Algorithm.type: string
parameters.X-Amz-Content-Sha256.in: header
parameters.X-Amz-Content-Sha256.name: X-Amz-Content-Sha256
parameters.X-Amz-Content-Sha256.required: false
parameters.X-Amz-Content-Sha256.type: string
parameters.X-Amz-Credential.in: header
parameters.X-Amz-Credential.name: X-Amz-Credential
parameters.X-Amz-Credential.required: false
parameters.X-Amz-Credential.type: string
parameters.X-Amz-Date.in: header
parameters.X-Amz-Date.name: X-Amz-Date
parameters.X-Amz-Date.required: false
parameters.X-Amz-Date.type: string
parameters.X-Amz-Security-Token.in: header
parameters.X-Amz-Security-Token.name: X-Amz-Security-Token
parameters.X-Amz-Security-Token.required: false
parameters.X-Amz-Security-Token.type: string
parameters.X-Amz-Signature.in: header
parameters.X-Amz-Signature.name: X-Amz-Signature
parameters.X-Amz-Signature.required: false
parameters.X-Amz-Signature.type: string
parameters.X-Amz-SignedHeaders.in: header
parameters.X-Amz-SignedHeaders.name: X-Amz-SignedHeaders
parameters.X-Amz-SignedHeaders.required: false
parameters.X-Amz-SignedHeaders.type: string
paths./#CreateService.parameters.length: 9
paths./#CreateService.parameters[0].$ref: '#/parameters/Action'
paths./#CreateService.parameters[1].$ref: '#/parameters/Version'
paths./#CreateService.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#CreateService.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#CreateService.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#CreateService.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#CreateService.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#CreateService.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#CreateService.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#CreateService.post.description: <p>Runs and maintains a desired number of
  tasks from a specified task definition. If the number of tasks running in a service
  drops below <code>desiredCount</code>, Amazon ECS spawns another copy of the task
  in the specified cluster. To update an existing service, see <a>UpdateService</a>.</p>
  <p>In addition to maintaining the desired count of tasks in your service, you can
  optionally run your service behind a load balancer. The load balancer distributes
  traffic across the tasks that are associated with the service. For more information,
  see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
  Load Balancing</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>
  <p>You can optionally specify a deployment configuration for your service. During
  a deployment (which is triggered by changing the task definition or the desired
  count of a service with an <a>UpdateService</a> operation), the service scheduler
  uses the <code>minimumHealthyPercent</code> and <code>maximumPercent</code> parameters
  to determine the deployment strategy.</p> <p>The <code>minimumHealthyPercent</code>
  represents a lower limit on the number of your service's tasks that must remain
  in the <code>RUNNING</code> state during a deployment, as a percentage of the <code>desiredCount</code>
  (rounded up to the nearest integer). This parameter enables you to deploy without
  using additional cluster capacity. For example, if your service has a <code>desiredCount</code>
  of four tasks and a <code>minimumHealthyPercent</code> of 50%, the scheduler can
  stop two existing tasks to free up cluster capacity before starting two new tasks.
  Tasks for services that <i>do not</i> use a load balancer are considered healthy
  if they are in the <code>RUNNING</code> state. Tasks for services that <i>do</i>
  use a load balancer are considered healthy if they are in the <code>RUNNING</code>
  state and the container instance they are hosted on is reported as healthy by the
  load balancer. The default value for <code>minimumHealthyPercent</code> is 50% in
  the console and 100% for the AWS CLI, the AWS SDKs, and the APIs.</p> <p>The <code>maximumPercent</code>
  parameter represents an upper limit on the number of your service's tasks that are
  allowed in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment,
  as a percentage of the <code>desiredCount</code> (rounded down to the nearest integer).
  This parameter enables you to define the deployment batch size. For example, if
  your service has a <code>desiredCount</code> of four tasks and a <code>maximumPercent</code>
  value of 200%, the scheduler can start four new tasks before stopping the four older
  tasks (provided that the cluster resources required to do this are available). The
  default value for <code>maximumPercent</code> is 200%.</p> <p>When the service scheduler
  launches new tasks, it determines task placement in your cluster using the following
  logic:</p> <ul> <li> <p>Determine which of the container instances in your cluster
  can support your service's task definition (for example, they have the required
  CPU, memory, ports, and container instance attributes).</p> </li> <li> <p>By default,
  the service scheduler attempts to balance tasks across Availability Zones in this
  manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
  parameter):</p> <ul> <li> <p>Sort the valid container instances by the fewest number
  of running tasks for this service in the same Availability Zone as the instance.
  For example, if zone A has one running service task and zones B and C each have
  zero, valid container instances in either zone B or C are considered optimal for
  placement.</p> </li> <li> <p>Place the new service task on a valid container instance
  in an optimal Availability Zone (based on the previous steps), favoring container
  instances with the fewest number of running tasks for this service.</p> </li> </ul>
  </li> </ul>
paths./#CreateService.post.operationId: CreateService
paths./#CreateService.post.parameters.length: 1
paths./#CreateService.post.parameters[0].in: body
paths./#CreateService.post.parameters[0].name: body
paths./#CreateService.post.parameters[0].required: true
paths./#CreateService.post.parameters[0].schema.$ref: '#/definitions/CreateServiceRequest'
paths./#CreateService.post.responses.200.description: Success
paths./#CreateService.post.responses.200.schema.$ref: '#/definitions/CreateServiceResponse'
paths./#CreateService.post.responses.480.description: ServerException
paths./#CreateService.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#CreateService.post.responses.481.description: ClientException
paths./#CreateService.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#CreateService.post.responses.482.description: InvalidParameterException
paths./#CreateService.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#CreateService.post.responses.483.description: ClusterNotFoundException
paths./#CreateService.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DeleteAttributes.parameters.length: 9
paths./#DeleteAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteAttributes.post.description: Deletes one or more custom attributes from
  an Amazon ECS resource.
paths./#DeleteAttributes.post.operationId: DeleteAttributes
paths./#DeleteAttributes.post.parameters.length: 1
paths./#DeleteAttributes.post.parameters[0].in: body
paths./#DeleteAttributes.post.parameters[0].name: body
paths./#DeleteAttributes.post.parameters[0].required: true
paths./#DeleteAttributes.post.parameters[0].schema.$ref: '#/definitions/DeleteAttributesRequest'
paths./#DeleteAttributes.post.responses.200.description: Success
paths./#DeleteAttributes.post.responses.200.schema.$ref: '#/definitions/DeleteAttributesResponse'
paths./#DeleteAttributes.post.responses.480.description: ClusterNotFoundException
paths./#DeleteAttributes.post.responses.480.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DeleteAttributes.post.responses.481.description: TargetNotFoundException
paths./#DeleteAttributes.post.responses.481.schema.$ref: '#/definitions/TargetNotFoundException'
paths./#DeleteAttributes.post.responses.482.description: InvalidParameterException
paths./#DeleteAttributes.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteCluster.parameters.length: 9
paths./#DeleteCluster.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteCluster.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteCluster.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteCluster.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteCluster.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteCluster.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteCluster.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteCluster.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteCluster.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteCluster.post.description: Deletes the specified cluster. You must deregister
  all container instances from this cluster before you may delete it. You can list
  the container instances in a cluster with <a>ListContainerInstances</a> and deregister
  them with <a>DeregisterContainerInstance</a>.
paths./#DeleteCluster.post.operationId: DeleteCluster
paths./#DeleteCluster.post.parameters.length: 1
paths./#DeleteCluster.post.parameters[0].in: body
paths./#DeleteCluster.post.parameters[0].name: body
paths./#DeleteCluster.post.parameters[0].required: true
paths./#DeleteCluster.post.parameters[0].schema.$ref: '#/definitions/DeleteClusterRequest'
paths./#DeleteCluster.post.responses.200.description: Success
paths./#DeleteCluster.post.responses.200.schema.$ref: '#/definitions/DeleteClusterResponse'
paths./#DeleteCluster.post.responses.480.description: ServerException
paths./#DeleteCluster.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DeleteCluster.post.responses.481.description: ClientException
paths./#DeleteCluster.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DeleteCluster.post.responses.482.description: InvalidParameterException
paths./#DeleteCluster.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteCluster.post.responses.483.description: ClusterNotFoundException
paths./#DeleteCluster.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DeleteCluster.post.responses.484.description: ClusterContainsContainerInstancesException
paths./#DeleteCluster.post.responses.484.schema.$ref: '#/definitions/ClusterContainsContainerInstancesException'
paths./#DeleteCluster.post.responses.485.description: ClusterContainsServicesException
paths./#DeleteCluster.post.responses.485.schema.$ref: '#/definitions/ClusterContainsServicesException'
paths./#DeleteService.parameters.length: 9
paths./#DeleteService.parameters[0].$ref: '#/parameters/Action'
paths./#DeleteService.parameters[1].$ref: '#/parameters/Version'
paths./#DeleteService.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeleteService.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeleteService.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeleteService.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeleteService.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeleteService.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeleteService.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeleteService.post.description: <p>Deletes a specified service within a cluster.
  You can delete a service if you have no running tasks in it and the desired task
  count is zero. If the service is actively maintaining tasks, you cannot delete it,
  and you must update the service to a desired task count of zero. For more information,
  see <a>UpdateService</a>.</p> <note> <p>When you delete a service, if there are
  still running tasks that require cleanup, the service status moves from <code>ACTIVE</code>
  to <code>DRAINING</code>, and the service is no longer visible in the console or
  in <a>ListServices</a> API operations. After the tasks have stopped, then the service
  status moves from <code>DRAINING</code> to <code>INACTIVE</code>. Services in the
  <code>DRAINING</code> or <code>INACTIVE</code> status can still be viewed with <a>DescribeServices</a>
  API operations; however, in the future, <code>INACTIVE</code> services may be cleaned
  up and purged from Amazon ECS record keeping, and <a>DescribeServices</a> API operations
  on those services will return a <code>ServiceNotFoundException</code> error.</p>
  </note>
paths./#DeleteService.post.operationId: DeleteService
paths./#DeleteService.post.parameters.length: 1
paths./#DeleteService.post.parameters[0].in: body
paths./#DeleteService.post.parameters[0].name: body
paths./#DeleteService.post.parameters[0].required: true
paths./#DeleteService.post.parameters[0].schema.$ref: '#/definitions/DeleteServiceRequest'
paths./#DeleteService.post.responses.200.description: Success
paths./#DeleteService.post.responses.200.schema.$ref: '#/definitions/DeleteServiceResponse'
paths./#DeleteService.post.responses.480.description: ServerException
paths./#DeleteService.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DeleteService.post.responses.481.description: ClientException
paths./#DeleteService.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DeleteService.post.responses.482.description: InvalidParameterException
paths./#DeleteService.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeleteService.post.responses.483.description: ClusterNotFoundException
paths./#DeleteService.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DeleteService.post.responses.484.description: ServiceNotFoundException
paths./#DeleteService.post.responses.484.schema.$ref: '#/definitions/ServiceNotFoundException'
paths./#DeregisterContainerInstance.parameters.length: 9
paths./#DeregisterContainerInstance.parameters[0].$ref: '#/parameters/Action'
paths./#DeregisterContainerInstance.parameters[1].$ref: '#/parameters/Version'
paths./#DeregisterContainerInstance.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeregisterContainerInstance.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeregisterContainerInstance.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeregisterContainerInstance.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeregisterContainerInstance.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeregisterContainerInstance.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeregisterContainerInstance.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeregisterContainerInstance.post.description: <p>Deregisters an Amazon ECS
  container instance from the specified cluster. This instance is no longer available
  to run tasks.</p> <p>If you intend to use the container instance for some other
  purpose after deregistration, you should stop all of the tasks running on the container
  instance before deregistration to avoid any orphaned tasks from consuming resources.</p>
  <p>Deregistering a container instance removes the instance from a cluster, but it
  does not terminate the EC2 instance; if you are finished using the instance, be
  sure to terminate it in the Amazon EC2 console to stop billing.</p> <note> <p>If
  you terminate a running container instance, Amazon ECS automatically deregisters
  the instance from your cluster (stopped container instances or instances with disconnected
  agents are not automatically deregistered when terminated).</p> </note>
paths./#DeregisterContainerInstance.post.operationId: DeregisterContainerInstance
paths./#DeregisterContainerInstance.post.parameters.length: 1
paths./#DeregisterContainerInstance.post.parameters[0].in: body
paths./#DeregisterContainerInstance.post.parameters[0].name: body
paths./#DeregisterContainerInstance.post.parameters[0].required: true
paths./#DeregisterContainerInstance.post.parameters[0].schema.$ref: '#/definitions/DeregisterContainerInstanceRequest'
paths./#DeregisterContainerInstance.post.responses.200.description: Success
paths./#DeregisterContainerInstance.post.responses.200.schema.$ref: '#/definitions/DeregisterContainerInstanceResponse'
paths./#DeregisterContainerInstance.post.responses.480.description: ServerException
paths./#DeregisterContainerInstance.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DeregisterContainerInstance.post.responses.481.description: ClientException
paths./#DeregisterContainerInstance.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DeregisterContainerInstance.post.responses.482.description: InvalidParameterException
paths./#DeregisterContainerInstance.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DeregisterContainerInstance.post.responses.483.description: ClusterNotFoundException
paths./#DeregisterContainerInstance.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DeregisterTaskDefinition.parameters.length: 9
paths./#DeregisterTaskDefinition.parameters[0].$ref: '#/parameters/Action'
paths./#DeregisterTaskDefinition.parameters[1].$ref: '#/parameters/Version'
paths./#DeregisterTaskDefinition.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DeregisterTaskDefinition.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DeregisterTaskDefinition.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DeregisterTaskDefinition.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DeregisterTaskDefinition.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DeregisterTaskDefinition.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DeregisterTaskDefinition.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DeregisterTaskDefinition.post.description: <p>Deregisters the specified task
  definition by family and revision. Upon deregistration, the task definition is marked
  as <code>INACTIVE</code>. Existing tasks and services that reference an <code>INACTIVE</code>
  task definition continue to run without disruption. Existing services that reference
  an <code>INACTIVE</code> task definition can still scale up or down by modifying
  the service's desired count.</p> <p>You cannot use an <code>INACTIVE</code> task
  definition to run new tasks or create new services, and you cannot update an existing
  service to reference an <code>INACTIVE</code> task definition (although there may
  be up to a 10 minute window following deregistration where these restrictions have
  not yet taken effect).</p> <note> <p>At this time, <code>INACTIVE</code> task definitions
  remain discoverable in your account indefinitely; however, this behavior is subject
  to change in the future, so you should not rely on <code>INACTIVE</code> task definitions
  persisting beyond the life cycle of any associated tasks and services.</p> </note>
paths./#DeregisterTaskDefinition.post.operationId: DeregisterTaskDefinition
paths./#DeregisterTaskDefinition.post.parameters.length: 1
paths./#DeregisterTaskDefinition.post.parameters[0].in: body
paths./#DeregisterTaskDefinition.post.parameters[0].name: body
paths./#DeregisterTaskDefinition.post.parameters[0].required: true
paths./#DeregisterTaskDefinition.post.parameters[0].schema.$ref: '#/definitions/DeregisterTaskDefinitionRequest'
paths./#DeregisterTaskDefinition.post.responses.200.description: Success
paths./#DeregisterTaskDefinition.post.responses.200.schema.$ref: '#/definitions/DeregisterTaskDefinitionResponse'
paths./#DeregisterTaskDefinition.post.responses.480.description: ServerException
paths./#DeregisterTaskDefinition.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DeregisterTaskDefinition.post.responses.481.description: ClientException
paths./#DeregisterTaskDefinition.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DeregisterTaskDefinition.post.responses.482.description: InvalidParameterException
paths./#DeregisterTaskDefinition.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeClusters.parameters.length: 9
paths./#DescribeClusters.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeClusters.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeClusters.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeClusters.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeClusters.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeClusters.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeClusters.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeClusters.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeClusters.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeClusters.post.description: Describes one or more of your clusters.
paths./#DescribeClusters.post.operationId: DescribeClusters
paths./#DescribeClusters.post.parameters.length: 1
paths./#DescribeClusters.post.parameters[0].in: body
paths./#DescribeClusters.post.parameters[0].name: body
paths./#DescribeClusters.post.parameters[0].required: true
paths./#DescribeClusters.post.parameters[0].schema.$ref: '#/definitions/DescribeClustersRequest'
paths./#DescribeClusters.post.responses.200.description: Success
paths./#DescribeClusters.post.responses.200.schema.$ref: '#/definitions/DescribeClustersResponse'
paths./#DescribeClusters.post.responses.480.description: ServerException
paths./#DescribeClusters.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DescribeClusters.post.responses.481.description: ClientException
paths./#DescribeClusters.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DescribeClusters.post.responses.482.description: InvalidParameterException
paths./#DescribeClusters.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeContainerInstances.parameters.length: 9
paths./#DescribeContainerInstances.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeContainerInstances.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeContainerInstances.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeContainerInstances.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeContainerInstances.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeContainerInstances.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeContainerInstances.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeContainerInstances.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeContainerInstances.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeContainerInstances.post.description: Describes Amazon EC2 Container
  Service container instances. Returns metadata about registered and remaining resources
  on each container instance requested.
paths./#DescribeContainerInstances.post.operationId: DescribeContainerInstances
paths./#DescribeContainerInstances.post.parameters.length: 1
paths./#DescribeContainerInstances.post.parameters[0].in: body
paths./#DescribeContainerInstances.post.parameters[0].name: body
paths./#DescribeContainerInstances.post.parameters[0].required: true
paths./#DescribeContainerInstances.post.parameters[0].schema.$ref: '#/definitions/DescribeContainerInstancesRequest'
paths./#DescribeContainerInstances.post.responses.200.description: Success
paths./#DescribeContainerInstances.post.responses.200.schema.$ref: '#/definitions/DescribeContainerInstancesResponse'
paths./#DescribeContainerInstances.post.responses.480.description: ServerException
paths./#DescribeContainerInstances.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DescribeContainerInstances.post.responses.481.description: ClientException
paths./#DescribeContainerInstances.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DescribeContainerInstances.post.responses.482.description: InvalidParameterException
paths./#DescribeContainerInstances.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeContainerInstances.post.responses.483.description: ClusterNotFoundException
paths./#DescribeContainerInstances.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DescribeServices.parameters.length: 9
paths./#DescribeServices.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeServices.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeServices.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeServices.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeServices.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeServices.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeServices.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeServices.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeServices.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeServices.post.description: Describes the specified services running
  in your cluster.
paths./#DescribeServices.post.operationId: DescribeServices
paths./#DescribeServices.post.parameters.length: 1
paths./#DescribeServices.post.parameters[0].in: body
paths./#DescribeServices.post.parameters[0].name: body
paths./#DescribeServices.post.parameters[0].required: true
paths./#DescribeServices.post.parameters[0].schema.$ref: '#/definitions/DescribeServicesRequest'
paths./#DescribeServices.post.responses.200.description: Success
paths./#DescribeServices.post.responses.200.schema.$ref: '#/definitions/DescribeServicesResponse'
paths./#DescribeServices.post.responses.480.description: ServerException
paths./#DescribeServices.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DescribeServices.post.responses.481.description: ClientException
paths./#DescribeServices.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DescribeServices.post.responses.482.description: InvalidParameterException
paths./#DescribeServices.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeServices.post.responses.483.description: ClusterNotFoundException
paths./#DescribeServices.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DescribeServices.post.x-waiters.length: 2
paths./#DescribeServices.post.x-waiters[0].acceptors.length: 4
paths./#DescribeServices.post.x-waiters[0].acceptors[0].argument: failures[].reason
paths./#DescribeServices.post.x-waiters[0].acceptors[0].expected: MISSING
paths./#DescribeServices.post.x-waiters[0].acceptors[0].matcher: pathAny
paths./#DescribeServices.post.x-waiters[0].acceptors[0].state: failure
paths./#DescribeServices.post.x-waiters[0].acceptors[1].argument: services[].status
paths./#DescribeServices.post.x-waiters[0].acceptors[1].expected: DRAINING
paths./#DescribeServices.post.x-waiters[0].acceptors[1].matcher: pathAny
paths./#DescribeServices.post.x-waiters[0].acceptors[1].state: failure
paths./#DescribeServices.post.x-waiters[0].acceptors[2].argument: services[].status
paths./#DescribeServices.post.x-waiters[0].acceptors[2].expected: INACTIVE
paths./#DescribeServices.post.x-waiters[0].acceptors[2].matcher: pathAny
paths./#DescribeServices.post.x-waiters[0].acceptors[2].state: failure
paths./#DescribeServices.post.x-waiters[0].acceptors[3].argument: length(services[?!(length(deployments)
  == `1` && runningCount == desiredCount)]) == `0`
paths./#DescribeServices.post.x-waiters[0].acceptors[3].expected: true
paths./#DescribeServices.post.x-waiters[0].acceptors[3].matcher: path
paths./#DescribeServices.post.x-waiters[0].acceptors[3].state: success
paths./#DescribeServices.post.x-waiters[0].delay: 15
paths./#DescribeServices.post.x-waiters[0].maxAttempts: 40
paths./#DescribeServices.post.x-waiters[0].operation: DescribeServices
paths./#DescribeServices.post.x-waiters[1].acceptors.length: 2
paths./#DescribeServices.post.x-waiters[1].acceptors[0].argument: failures[].reason
paths./#DescribeServices.post.x-waiters[1].acceptors[0].expected: MISSING
paths./#DescribeServices.post.x-waiters[1].acceptors[0].matcher: pathAny
paths./#DescribeServices.post.x-waiters[1].acceptors[0].state: failure
paths./#DescribeServices.post.x-waiters[1].acceptors[1].argument: services[].status
paths./#DescribeServices.post.x-waiters[1].acceptors[1].expected: INACTIVE
paths./#DescribeServices.post.x-waiters[1].acceptors[1].matcher: pathAny
paths./#DescribeServices.post.x-waiters[1].acceptors[1].state: success
paths./#DescribeServices.post.x-waiters[1].delay: 15
paths./#DescribeServices.post.x-waiters[1].maxAttempts: 40
paths./#DescribeServices.post.x-waiters[1].operation: DescribeServices
paths./#DescribeTaskDefinition.parameters.length: 9
paths./#DescribeTaskDefinition.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeTaskDefinition.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeTaskDefinition.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeTaskDefinition.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeTaskDefinition.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeTaskDefinition.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeTaskDefinition.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeTaskDefinition.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeTaskDefinition.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeTaskDefinition.post.description: <p>Describes a task definition. You
  can specify a <code>family</code> and <code>revision</code> to find information
  about a specific task definition, or you can simply specify the family to find the
  latest <code>ACTIVE</code> revision in that family.</p> <note> <p>You can only describe
  <code>INACTIVE</code> task definitions while an active task or service references
  them.</p> </note>
paths./#DescribeTaskDefinition.post.operationId: DescribeTaskDefinition
paths./#DescribeTaskDefinition.post.parameters.length: 1
paths./#DescribeTaskDefinition.post.parameters[0].in: body
paths./#DescribeTaskDefinition.post.parameters[0].name: body
paths./#DescribeTaskDefinition.post.parameters[0].required: true
paths./#DescribeTaskDefinition.post.parameters[0].schema.$ref: '#/definitions/DescribeTaskDefinitionRequest'
paths./#DescribeTaskDefinition.post.responses.200.description: Success
paths./#DescribeTaskDefinition.post.responses.200.schema.$ref: '#/definitions/DescribeTaskDefinitionResponse'
paths./#DescribeTaskDefinition.post.responses.480.description: ServerException
paths./#DescribeTaskDefinition.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DescribeTaskDefinition.post.responses.481.description: ClientException
paths./#DescribeTaskDefinition.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DescribeTaskDefinition.post.responses.482.description: InvalidParameterException
paths./#DescribeTaskDefinition.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeTasks.parameters.length: 9
paths./#DescribeTasks.parameters[0].$ref: '#/parameters/Action'
paths./#DescribeTasks.parameters[1].$ref: '#/parameters/Version'
paths./#DescribeTasks.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DescribeTasks.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DescribeTasks.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DescribeTasks.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DescribeTasks.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DescribeTasks.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DescribeTasks.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DescribeTasks.post.description: Describes a specified task or tasks.
paths./#DescribeTasks.post.operationId: DescribeTasks
paths./#DescribeTasks.post.parameters.length: 1
paths./#DescribeTasks.post.parameters[0].in: body
paths./#DescribeTasks.post.parameters[0].name: body
paths./#DescribeTasks.post.parameters[0].required: true
paths./#DescribeTasks.post.parameters[0].schema.$ref: '#/definitions/DescribeTasksRequest'
paths./#DescribeTasks.post.responses.200.description: Success
paths./#DescribeTasks.post.responses.200.schema.$ref: '#/definitions/DescribeTasksResponse'
paths./#DescribeTasks.post.responses.480.description: ServerException
paths./#DescribeTasks.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DescribeTasks.post.responses.481.description: ClientException
paths./#DescribeTasks.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#DescribeTasks.post.responses.482.description: InvalidParameterException
paths./#DescribeTasks.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#DescribeTasks.post.responses.483.description: ClusterNotFoundException
paths./#DescribeTasks.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#DescribeTasks.post.x-waiters.length: 2
paths./#DescribeTasks.post.x-waiters[0].acceptors.length: 3
paths./#DescribeTasks.post.x-waiters[0].acceptors[0].argument: tasks[].lastStatus
paths./#DescribeTasks.post.x-waiters[0].acceptors[0].expected: STOPPED
paths./#DescribeTasks.post.x-waiters[0].acceptors[0].matcher: pathAny
paths./#DescribeTasks.post.x-waiters[0].acceptors[0].state: failure
paths./#DescribeTasks.post.x-waiters[0].acceptors[1].argument: failures[].reason
paths./#DescribeTasks.post.x-waiters[0].acceptors[1].expected: MISSING
paths./#DescribeTasks.post.x-waiters[0].acceptors[1].matcher: pathAny
paths./#DescribeTasks.post.x-waiters[0].acceptors[1].state: failure
paths./#DescribeTasks.post.x-waiters[0].acceptors[2].argument: tasks[].lastStatus
paths./#DescribeTasks.post.x-waiters[0].acceptors[2].expected: RUNNING
paths./#DescribeTasks.post.x-waiters[0].acceptors[2].matcher: pathAll
paths./#DescribeTasks.post.x-waiters[0].acceptors[2].state: success
paths./#DescribeTasks.post.x-waiters[0].delay: 6
paths./#DescribeTasks.post.x-waiters[0].maxAttempts: 100
paths./#DescribeTasks.post.x-waiters[0].operation: DescribeTasks
paths./#DescribeTasks.post.x-waiters[1].acceptors.length: 1
paths./#DescribeTasks.post.x-waiters[1].acceptors[0].argument: tasks[].lastStatus
paths./#DescribeTasks.post.x-waiters[1].acceptors[0].expected: STOPPED
paths./#DescribeTasks.post.x-waiters[1].acceptors[0].matcher: pathAll
paths./#DescribeTasks.post.x-waiters[1].acceptors[0].state: success
paths./#DescribeTasks.post.x-waiters[1].delay: 6
paths./#DescribeTasks.post.x-waiters[1].maxAttempts: 100
paths./#DescribeTasks.post.x-waiters[1].operation: DescribeTasks
paths./#DiscoverPollEndpoint.parameters.length: 9
paths./#DiscoverPollEndpoint.parameters[0].$ref: '#/parameters/Action'
paths./#DiscoverPollEndpoint.parameters[1].$ref: '#/parameters/Version'
paths./#DiscoverPollEndpoint.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#DiscoverPollEndpoint.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#DiscoverPollEndpoint.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#DiscoverPollEndpoint.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#DiscoverPollEndpoint.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#DiscoverPollEndpoint.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#DiscoverPollEndpoint.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#DiscoverPollEndpoint.post.description: <note> <p>This action is only used
  by the Amazon EC2 Container Service agent, and it is not intended for use outside
  of the agent.</p> </note> <p>Returns an endpoint for the Amazon EC2 Container Service
  agent to poll for updates.</p>
paths./#DiscoverPollEndpoint.post.operationId: DiscoverPollEndpoint
paths./#DiscoverPollEndpoint.post.parameters.length: 1
paths./#DiscoverPollEndpoint.post.parameters[0].in: body
paths./#DiscoverPollEndpoint.post.parameters[0].name: body
paths./#DiscoverPollEndpoint.post.parameters[0].required: true
paths./#DiscoverPollEndpoint.post.parameters[0].schema.$ref: '#/definitions/DiscoverPollEndpointRequest'
paths./#DiscoverPollEndpoint.post.responses.200.description: Success
paths./#DiscoverPollEndpoint.post.responses.200.schema.$ref: '#/definitions/DiscoverPollEndpointResponse'
paths./#DiscoverPollEndpoint.post.responses.480.description: ServerException
paths./#DiscoverPollEndpoint.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#DiscoverPollEndpoint.post.responses.481.description: ClientException
paths./#DiscoverPollEndpoint.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListAttributes.parameters.length: 9
paths./#ListAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#ListAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#ListAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListAttributes.post.description: 'Lists the attributes for Amazon ECS resources
  within a specified target type and cluster. When you specify a target type and cluster,
  <code>ListAttributes</code> returns a list of attribute objects, one for each attribute
  on each resource. You can filter the list of results to a single attribute name
  to only return results that have that name. You can also filter the results by attribute
  name and value, for example, to see which container instances in a cluster are running
  a Linux AMI (<code>ecs.os-type=linux</code>). '
paths./#ListAttributes.post.operationId: ListAttributes
paths./#ListAttributes.post.parameters.length: 1
paths./#ListAttributes.post.parameters[0].in: body
paths./#ListAttributes.post.parameters[0].name: body
paths./#ListAttributes.post.parameters[0].required: true
paths./#ListAttributes.post.parameters[0].schema.$ref: '#/definitions/ListAttributesRequest'
paths./#ListAttributes.post.responses.200.description: Success
paths./#ListAttributes.post.responses.200.schema.$ref: '#/definitions/ListAttributesResponse'
paths./#ListAttributes.post.responses.480.description: ClusterNotFoundException
paths./#ListAttributes.post.responses.480.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#ListAttributes.post.responses.481.description: InvalidParameterException
paths./#ListAttributes.post.responses.481.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListClusters.parameters.length: 9
paths./#ListClusters.parameters[0].$ref: '#/parameters/Action'
paths./#ListClusters.parameters[1].$ref: '#/parameters/Version'
paths./#ListClusters.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListClusters.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListClusters.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListClusters.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListClusters.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListClusters.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListClusters.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListClusters.post.description: Returns a list of existing clusters.
paths./#ListClusters.post.operationId: ListClusters
paths./#ListClusters.post.parameters.length: 3
paths./#ListClusters.post.parameters[0].in: body
paths./#ListClusters.post.parameters[0].name: body
paths./#ListClusters.post.parameters[0].required: true
paths./#ListClusters.post.parameters[0].schema.$ref: '#/definitions/ListClustersRequest'
paths./#ListClusters.post.parameters[1].description: Pagination limit
paths./#ListClusters.post.parameters[1].in: query
paths./#ListClusters.post.parameters[1].name: maxResults
paths./#ListClusters.post.parameters[1].required: false
paths./#ListClusters.post.parameters[1].type: string
paths./#ListClusters.post.parameters[2].description: Pagination token
paths./#ListClusters.post.parameters[2].in: query
paths./#ListClusters.post.parameters[2].name: nextToken
paths./#ListClusters.post.parameters[2].required: false
paths./#ListClusters.post.parameters[2].type: string
paths./#ListClusters.post.responses.200.description: Success
paths./#ListClusters.post.responses.200.schema.$ref: '#/definitions/ListClustersResponse'
paths./#ListClusters.post.responses.480.description: ServerException
paths./#ListClusters.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListClusters.post.responses.481.description: ClientException
paths./#ListClusters.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListClusters.post.responses.482.description: InvalidParameterException
paths./#ListClusters.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListContainerInstances.parameters.length: 9
paths./#ListContainerInstances.parameters[0].$ref: '#/parameters/Action'
paths./#ListContainerInstances.parameters[1].$ref: '#/parameters/Version'
paths./#ListContainerInstances.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListContainerInstances.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListContainerInstances.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListContainerInstances.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListContainerInstances.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListContainerInstances.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListContainerInstances.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListContainerInstances.post.description: Returns a list of container instances
  in a specified cluster. You can filter the results of a <code>ListContainerInstances</code>
  operation with cluster query language statements inside the <code>filter</code>
  parameter. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
  Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
paths./#ListContainerInstances.post.operationId: ListContainerInstances
paths./#ListContainerInstances.post.parameters.length: 3
paths./#ListContainerInstances.post.parameters[0].in: body
paths./#ListContainerInstances.post.parameters[0].name: body
paths./#ListContainerInstances.post.parameters[0].required: true
paths./#ListContainerInstances.post.parameters[0].schema.$ref: '#/definitions/ListContainerInstancesRequest'
paths./#ListContainerInstances.post.parameters[1].description: Pagination limit
paths./#ListContainerInstances.post.parameters[1].in: query
paths./#ListContainerInstances.post.parameters[1].name: maxResults
paths./#ListContainerInstances.post.parameters[1].required: false
paths./#ListContainerInstances.post.parameters[1].type: string
paths./#ListContainerInstances.post.parameters[2].description: Pagination token
paths./#ListContainerInstances.post.parameters[2].in: query
paths./#ListContainerInstances.post.parameters[2].name: nextToken
paths./#ListContainerInstances.post.parameters[2].required: false
paths./#ListContainerInstances.post.parameters[2].type: string
paths./#ListContainerInstances.post.responses.200.description: Success
paths./#ListContainerInstances.post.responses.200.schema.$ref: '#/definitions/ListContainerInstancesResponse'
paths./#ListContainerInstances.post.responses.480.description: ServerException
paths./#ListContainerInstances.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListContainerInstances.post.responses.481.description: ClientException
paths./#ListContainerInstances.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListContainerInstances.post.responses.482.description: InvalidParameterException
paths./#ListContainerInstances.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListContainerInstances.post.responses.483.description: ClusterNotFoundException
paths./#ListContainerInstances.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#ListServices.parameters.length: 9
paths./#ListServices.parameters[0].$ref: '#/parameters/Action'
paths./#ListServices.parameters[1].$ref: '#/parameters/Version'
paths./#ListServices.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListServices.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListServices.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListServices.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListServices.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListServices.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListServices.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListServices.post.description: Lists the services that are running in a specified
  cluster.
paths./#ListServices.post.operationId: ListServices
paths./#ListServices.post.parameters.length: 3
paths./#ListServices.post.parameters[0].in: body
paths./#ListServices.post.parameters[0].name: body
paths./#ListServices.post.parameters[0].required: true
paths./#ListServices.post.parameters[0].schema.$ref: '#/definitions/ListServicesRequest'
paths./#ListServices.post.parameters[1].description: Pagination limit
paths./#ListServices.post.parameters[1].in: query
paths./#ListServices.post.parameters[1].name: maxResults
paths./#ListServices.post.parameters[1].required: false
paths./#ListServices.post.parameters[1].type: string
paths./#ListServices.post.parameters[2].description: Pagination token
paths./#ListServices.post.parameters[2].in: query
paths./#ListServices.post.parameters[2].name: nextToken
paths./#ListServices.post.parameters[2].required: false
paths./#ListServices.post.parameters[2].type: string
paths./#ListServices.post.responses.200.description: Success
paths./#ListServices.post.responses.200.schema.$ref: '#/definitions/ListServicesResponse'
paths./#ListServices.post.responses.480.description: ServerException
paths./#ListServices.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListServices.post.responses.481.description: ClientException
paths./#ListServices.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListServices.post.responses.482.description: InvalidParameterException
paths./#ListServices.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListServices.post.responses.483.description: ClusterNotFoundException
paths./#ListServices.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#ListTaskDefinitionFamilies.parameters.length: 9
paths./#ListTaskDefinitionFamilies.parameters[0].$ref: '#/parameters/Action'
paths./#ListTaskDefinitionFamilies.parameters[1].$ref: '#/parameters/Version'
paths./#ListTaskDefinitionFamilies.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListTaskDefinitionFamilies.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListTaskDefinitionFamilies.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListTaskDefinitionFamilies.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListTaskDefinitionFamilies.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListTaskDefinitionFamilies.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListTaskDefinitionFamilies.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListTaskDefinitionFamilies.post.description: <p>Returns a list of task definition
  families that are registered to your account (which may include task definition
  families that no longer have any <code>ACTIVE</code> task definition revisions).</p>
  <p>You can filter out task definition families that do not contain any <code>ACTIVE</code>
  task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
  You can also filter the results with the <code>familyPrefix</code> parameter.</p>
paths./#ListTaskDefinitionFamilies.post.operationId: ListTaskDefinitionFamilies
paths./#ListTaskDefinitionFamilies.post.parameters.length: 3
paths./#ListTaskDefinitionFamilies.post.parameters[0].in: body
paths./#ListTaskDefinitionFamilies.post.parameters[0].name: body
paths./#ListTaskDefinitionFamilies.post.parameters[0].required: true
paths./#ListTaskDefinitionFamilies.post.parameters[0].schema.$ref: '#/definitions/ListTaskDefinitionFamiliesRequest'
paths./#ListTaskDefinitionFamilies.post.parameters[1].description: Pagination limit
paths./#ListTaskDefinitionFamilies.post.parameters[1].in: query
paths./#ListTaskDefinitionFamilies.post.parameters[1].name: maxResults
paths./#ListTaskDefinitionFamilies.post.parameters[1].required: false
paths./#ListTaskDefinitionFamilies.post.parameters[1].type: string
paths./#ListTaskDefinitionFamilies.post.parameters[2].description: Pagination token
paths./#ListTaskDefinitionFamilies.post.parameters[2].in: query
paths./#ListTaskDefinitionFamilies.post.parameters[2].name: nextToken
paths./#ListTaskDefinitionFamilies.post.parameters[2].required: false
paths./#ListTaskDefinitionFamilies.post.parameters[2].type: string
paths./#ListTaskDefinitionFamilies.post.responses.200.description: Success
paths./#ListTaskDefinitionFamilies.post.responses.200.schema.$ref: '#/definitions/ListTaskDefinitionFamiliesResponse'
paths./#ListTaskDefinitionFamilies.post.responses.480.description: ServerException
paths./#ListTaskDefinitionFamilies.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListTaskDefinitionFamilies.post.responses.481.description: ClientException
paths./#ListTaskDefinitionFamilies.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListTaskDefinitionFamilies.post.responses.482.description: InvalidParameterException
paths./#ListTaskDefinitionFamilies.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListTaskDefinitions.parameters.length: 9
paths./#ListTaskDefinitions.parameters[0].$ref: '#/parameters/Action'
paths./#ListTaskDefinitions.parameters[1].$ref: '#/parameters/Version'
paths./#ListTaskDefinitions.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListTaskDefinitions.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListTaskDefinitions.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListTaskDefinitions.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListTaskDefinitions.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListTaskDefinitions.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListTaskDefinitions.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListTaskDefinitions.post.description: Returns a list of task definitions that
  are registered to your account. You can filter the results by family name with the
  <code>familyPrefix</code> parameter or by status with the <code>status</code> parameter.
paths./#ListTaskDefinitions.post.operationId: ListTaskDefinitions
paths./#ListTaskDefinitions.post.parameters.length: 3
paths./#ListTaskDefinitions.post.parameters[0].in: body
paths./#ListTaskDefinitions.post.parameters[0].name: body
paths./#ListTaskDefinitions.post.parameters[0].required: true
paths./#ListTaskDefinitions.post.parameters[0].schema.$ref: '#/definitions/ListTaskDefinitionsRequest'
paths./#ListTaskDefinitions.post.parameters[1].description: Pagination limit
paths./#ListTaskDefinitions.post.parameters[1].in: query
paths./#ListTaskDefinitions.post.parameters[1].name: maxResults
paths./#ListTaskDefinitions.post.parameters[1].required: false
paths./#ListTaskDefinitions.post.parameters[1].type: string
paths./#ListTaskDefinitions.post.parameters[2].description: Pagination token
paths./#ListTaskDefinitions.post.parameters[2].in: query
paths./#ListTaskDefinitions.post.parameters[2].name: nextToken
paths./#ListTaskDefinitions.post.parameters[2].required: false
paths./#ListTaskDefinitions.post.parameters[2].type: string
paths./#ListTaskDefinitions.post.responses.200.description: Success
paths./#ListTaskDefinitions.post.responses.200.schema.$ref: '#/definitions/ListTaskDefinitionsResponse'
paths./#ListTaskDefinitions.post.responses.480.description: ServerException
paths./#ListTaskDefinitions.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListTaskDefinitions.post.responses.481.description: ClientException
paths./#ListTaskDefinitions.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListTaskDefinitions.post.responses.482.description: InvalidParameterException
paths./#ListTaskDefinitions.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListTasks.parameters.length: 9
paths./#ListTasks.parameters[0].$ref: '#/parameters/Action'
paths./#ListTasks.parameters[1].$ref: '#/parameters/Version'
paths./#ListTasks.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#ListTasks.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#ListTasks.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#ListTasks.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#ListTasks.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#ListTasks.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#ListTasks.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#ListTasks.post.description: <p>Returns a list of tasks for a specified cluster.
  You can filter the results by family name, by a particular container instance, or
  by the desired status of the task with the <code>family</code>, <code>containerInstance</code>,
  and <code>desiredStatus</code> parameters.</p> <p>Recently-stopped tasks might appear
  in the returned results. Currently, stopped tasks appear in the returned results
  for at least one hour. </p>
paths./#ListTasks.post.operationId: ListTasks
paths./#ListTasks.post.parameters.length: 3
paths./#ListTasks.post.parameters[0].in: body
paths./#ListTasks.post.parameters[0].name: body
paths./#ListTasks.post.parameters[0].required: true
paths./#ListTasks.post.parameters[0].schema.$ref: '#/definitions/ListTasksRequest'
paths./#ListTasks.post.parameters[1].description: Pagination limit
paths./#ListTasks.post.parameters[1].in: query
paths./#ListTasks.post.parameters[1].name: maxResults
paths./#ListTasks.post.parameters[1].required: false
paths./#ListTasks.post.parameters[1].type: string
paths./#ListTasks.post.parameters[2].description: Pagination token
paths./#ListTasks.post.parameters[2].in: query
paths./#ListTasks.post.parameters[2].name: nextToken
paths./#ListTasks.post.parameters[2].required: false
paths./#ListTasks.post.parameters[2].type: string
paths./#ListTasks.post.responses.200.description: Success
paths./#ListTasks.post.responses.200.schema.$ref: '#/definitions/ListTasksResponse'
paths./#ListTasks.post.responses.480.description: ServerException
paths./#ListTasks.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#ListTasks.post.responses.481.description: ClientException
paths./#ListTasks.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#ListTasks.post.responses.482.description: InvalidParameterException
paths./#ListTasks.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#ListTasks.post.responses.483.description: ClusterNotFoundException
paths./#ListTasks.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#ListTasks.post.responses.484.description: ServiceNotFoundException
paths./#ListTasks.post.responses.484.schema.$ref: '#/definitions/ServiceNotFoundException'
paths./#PutAttributes.parameters.length: 9
paths./#PutAttributes.parameters[0].$ref: '#/parameters/Action'
paths./#PutAttributes.parameters[1].$ref: '#/parameters/Version'
paths./#PutAttributes.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#PutAttributes.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#PutAttributes.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#PutAttributes.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#PutAttributes.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#PutAttributes.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#PutAttributes.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#PutAttributes.post.description: Create or update an attribute on an Amazon
  ECS resource. If the attribute does not exist, it is created. If the attribute exists,
  its value is replaced with the specified value. To delete an attribute, use <a>DeleteAttributes</a>.
  For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
  in the <i>Amazon EC2 Container Service Developer Guide</i>.
paths./#PutAttributes.post.operationId: PutAttributes
paths./#PutAttributes.post.parameters.length: 1
paths./#PutAttributes.post.parameters[0].in: body
paths./#PutAttributes.post.parameters[0].name: body
paths./#PutAttributes.post.parameters[0].required: true
paths./#PutAttributes.post.parameters[0].schema.$ref: '#/definitions/PutAttributesRequest'
paths./#PutAttributes.post.responses.200.description: Success
paths./#PutAttributes.post.responses.200.schema.$ref: '#/definitions/PutAttributesResponse'
paths./#PutAttributes.post.responses.480.description: ClusterNotFoundException
paths./#PutAttributes.post.responses.480.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#PutAttributes.post.responses.481.description: TargetNotFoundException
paths./#PutAttributes.post.responses.481.schema.$ref: '#/definitions/TargetNotFoundException'
paths./#PutAttributes.post.responses.482.description: AttributeLimitExceededException
paths./#PutAttributes.post.responses.482.schema.$ref: '#/definitions/AttributeLimitExceededException'
paths./#PutAttributes.post.responses.483.description: InvalidParameterException
paths./#PutAttributes.post.responses.483.schema.$ref: '#/definitions/InvalidParameterException'
paths./#RegisterContainerInstance.parameters.length: 9
paths./#RegisterContainerInstance.parameters[0].$ref: '#/parameters/Action'
paths./#RegisterContainerInstance.parameters[1].$ref: '#/parameters/Version'
paths./#RegisterContainerInstance.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#RegisterContainerInstance.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#RegisterContainerInstance.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#RegisterContainerInstance.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#RegisterContainerInstance.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#RegisterContainerInstance.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#RegisterContainerInstance.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#RegisterContainerInstance.post.description: <note> <p>This action is only
  used by the Amazon EC2 Container Service agent, and it is not intended for use outside
  of the agent.</p> </note> <p>Registers an EC2 instance into the specified cluster.
  This instance becomes available to place containers on.</p>
paths./#RegisterContainerInstance.post.operationId: RegisterContainerInstance
paths./#RegisterContainerInstance.post.parameters.length: 1
paths./#RegisterContainerInstance.post.parameters[0].in: body
paths./#RegisterContainerInstance.post.parameters[0].name: body
paths./#RegisterContainerInstance.post.parameters[0].required: true
paths./#RegisterContainerInstance.post.parameters[0].schema.$ref: '#/definitions/RegisterContainerInstanceRequest'
paths./#RegisterContainerInstance.post.responses.200.description: Success
paths./#RegisterContainerInstance.post.responses.200.schema.$ref: '#/definitions/RegisterContainerInstanceResponse'
paths./#RegisterContainerInstance.post.responses.480.description: ServerException
paths./#RegisterContainerInstance.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#RegisterContainerInstance.post.responses.481.description: ClientException
paths./#RegisterContainerInstance.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#RegisterTaskDefinition.parameters.length: 9
paths./#RegisterTaskDefinition.parameters[0].$ref: '#/parameters/Action'
paths./#RegisterTaskDefinition.parameters[1].$ref: '#/parameters/Version'
paths./#RegisterTaskDefinition.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#RegisterTaskDefinition.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#RegisterTaskDefinition.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#RegisterTaskDefinition.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#RegisterTaskDefinition.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#RegisterTaskDefinition.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#RegisterTaskDefinition.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#RegisterTaskDefinition.post.description: <p>Registers a new task definition
  from the supplied <code>family</code> and <code>containerDefinitions</code>. Optionally,
  you can add data volumes to your containers with the <code>volumes</code> parameter.
  For more information about task definition parameters and defaults, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
  ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>
  <p>You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
  When you specify an IAM role for a task, its containers can then use the latest
  versions of the AWS CLI or SDKs to make API requests to the AWS services that are
  specified in the IAM policy associated with the role. For more information, see
  <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
  Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>
  <p>You can specify a Docker networking mode for the containers in your task definition
  with the <code>networkMode</code> parameter. The available network modes correspond
  to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
  settings</a> in the Docker run reference.</p>
paths./#RegisterTaskDefinition.post.operationId: RegisterTaskDefinition
paths./#RegisterTaskDefinition.post.parameters.length: 1
paths./#RegisterTaskDefinition.post.parameters[0].in: body
paths./#RegisterTaskDefinition.post.parameters[0].name: body
paths./#RegisterTaskDefinition.post.parameters[0].required: true
paths./#RegisterTaskDefinition.post.parameters[0].schema.$ref: '#/definitions/RegisterTaskDefinitionRequest'
paths./#RegisterTaskDefinition.post.responses.200.description: Success
paths./#RegisterTaskDefinition.post.responses.200.schema.$ref: '#/definitions/RegisterTaskDefinitionResponse'
paths./#RegisterTaskDefinition.post.responses.480.description: ServerException
paths./#RegisterTaskDefinition.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#RegisterTaskDefinition.post.responses.481.description: ClientException
paths./#RegisterTaskDefinition.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#RegisterTaskDefinition.post.responses.482.description: InvalidParameterException
paths./#RegisterTaskDefinition.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#RunTask.parameters.length: 9
paths./#RunTask.parameters[0].$ref: '#/parameters/Action'
paths./#RunTask.parameters[1].$ref: '#/parameters/Version'
paths./#RunTask.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#RunTask.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#RunTask.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#RunTask.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#RunTask.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#RunTask.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#RunTask.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#RunTask.post.description: <p>Starts a new task using the specified task definition.</p>
  <p>You can allow Amazon ECS to place tasks for you, or you can customize how Amazon
  ECS places tasks using placement constraints and placement strategies. For more
  information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
  Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p> <p>Alternatively,
  you can use <a>StartTask</a> to use your own scheduler or place tasks manually on
  specific container instances.</p>
paths./#RunTask.post.operationId: RunTask
paths./#RunTask.post.parameters.length: 1
paths./#RunTask.post.parameters[0].in: body
paths./#RunTask.post.parameters[0].name: body
paths./#RunTask.post.parameters[0].required: true
paths./#RunTask.post.parameters[0].schema.$ref: '#/definitions/RunTaskRequest'
paths./#RunTask.post.responses.200.description: Success
paths./#RunTask.post.responses.200.schema.$ref: '#/definitions/RunTaskResponse'
paths./#RunTask.post.responses.480.description: ServerException
paths./#RunTask.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#RunTask.post.responses.481.description: ClientException
paths./#RunTask.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#RunTask.post.responses.482.description: InvalidParameterException
paths./#RunTask.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#RunTask.post.responses.483.description: ClusterNotFoundException
paths./#RunTask.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#StartTask.parameters.length: 9
paths./#StartTask.parameters[0].$ref: '#/parameters/Action'
paths./#StartTask.parameters[1].$ref: '#/parameters/Version'
paths./#StartTask.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StartTask.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StartTask.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StartTask.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StartTask.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StartTask.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StartTask.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StartTask.post.description: <p>Starts a new task from the specified task definition
  on the specified container instance or instances.</p> <p>Alternatively, you can
  use <a>RunTask</a> to place tasks for you. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
  Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>
paths./#StartTask.post.operationId: StartTask
paths./#StartTask.post.parameters.length: 1
paths./#StartTask.post.parameters[0].in: body
paths./#StartTask.post.parameters[0].name: body
paths./#StartTask.post.parameters[0].required: true
paths./#StartTask.post.parameters[0].schema.$ref: '#/definitions/StartTaskRequest'
paths./#StartTask.post.responses.200.description: Success
paths./#StartTask.post.responses.200.schema.$ref: '#/definitions/StartTaskResponse'
paths./#StartTask.post.responses.480.description: ServerException
paths./#StartTask.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#StartTask.post.responses.481.description: ClientException
paths./#StartTask.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#StartTask.post.responses.482.description: InvalidParameterException
paths./#StartTask.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#StartTask.post.responses.483.description: ClusterNotFoundException
paths./#StartTask.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#StopTask.parameters.length: 9
paths./#StopTask.parameters[0].$ref: '#/parameters/Action'
paths./#StopTask.parameters[1].$ref: '#/parameters/Version'
paths./#StopTask.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#StopTask.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#StopTask.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#StopTask.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#StopTask.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#StopTask.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#StopTask.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#StopTask.post.description: <p>Stops a running task.</p> <p>When <a>StopTask</a>
  is called on a task, the equivalent of <code>docker stop</code> is issued to the
  containers running in the task. This results in a <code>SIGTERM</code> and a default
  30-second timeout, after which <code>SIGKILL</code> is sent and the containers are
  forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully and
  exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.</p>
  <note> <p>The default 30-second timeout can be configured on the Amazon ECS container
  agent with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information,
  see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
  ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
  Guide</i>.</p> </note>
paths./#StopTask.post.operationId: StopTask
paths./#StopTask.post.parameters.length: 1
paths./#StopTask.post.parameters[0].in: body
paths./#StopTask.post.parameters[0].name: body
paths./#StopTask.post.parameters[0].required: true
paths./#StopTask.post.parameters[0].schema.$ref: '#/definitions/StopTaskRequest'
paths./#StopTask.post.responses.200.description: Success
paths./#StopTask.post.responses.200.schema.$ref: '#/definitions/StopTaskResponse'
paths./#StopTask.post.responses.480.description: ServerException
paths./#StopTask.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#StopTask.post.responses.481.description: ClientException
paths./#StopTask.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#StopTask.post.responses.482.description: InvalidParameterException
paths./#StopTask.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#StopTask.post.responses.483.description: ClusterNotFoundException
paths./#StopTask.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#SubmitContainerStateChange.parameters.length: 9
paths./#SubmitContainerStateChange.parameters[0].$ref: '#/parameters/Action'
paths./#SubmitContainerStateChange.parameters[1].$ref: '#/parameters/Version'
paths./#SubmitContainerStateChange.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SubmitContainerStateChange.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SubmitContainerStateChange.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SubmitContainerStateChange.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SubmitContainerStateChange.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SubmitContainerStateChange.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SubmitContainerStateChange.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SubmitContainerStateChange.post.description: <note> <p>This action is only
  used by the Amazon EC2 Container Service agent, and it is not intended for use outside
  of the agent.</p> </note> <p>Sent to acknowledge that a container changed states.</p>
paths./#SubmitContainerStateChange.post.operationId: SubmitContainerStateChange
paths./#SubmitContainerStateChange.post.parameters.length: 1
paths./#SubmitContainerStateChange.post.parameters[0].in: body
paths./#SubmitContainerStateChange.post.parameters[0].name: body
paths./#SubmitContainerStateChange.post.parameters[0].required: true
paths./#SubmitContainerStateChange.post.parameters[0].schema.$ref: '#/definitions/SubmitContainerStateChangeRequest'
paths./#SubmitContainerStateChange.post.responses.200.description: Success
paths./#SubmitContainerStateChange.post.responses.200.schema.$ref: '#/definitions/SubmitContainerStateChangeResponse'
paths./#SubmitContainerStateChange.post.responses.480.description: ServerException
paths./#SubmitContainerStateChange.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#SubmitContainerStateChange.post.responses.481.description: ClientException
paths./#SubmitContainerStateChange.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#SubmitTaskStateChange.parameters.length: 9
paths./#SubmitTaskStateChange.parameters[0].$ref: '#/parameters/Action'
paths./#SubmitTaskStateChange.parameters[1].$ref: '#/parameters/Version'
paths./#SubmitTaskStateChange.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#SubmitTaskStateChange.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#SubmitTaskStateChange.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#SubmitTaskStateChange.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#SubmitTaskStateChange.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#SubmitTaskStateChange.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#SubmitTaskStateChange.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#SubmitTaskStateChange.post.description: <note> <p>This action is only used
  by the Amazon EC2 Container Service agent, and it is not intended for use outside
  of the agent.</p> </note> <p>Sent to acknowledge that a task changed states.</p>
paths./#SubmitTaskStateChange.post.operationId: SubmitTaskStateChange
paths./#SubmitTaskStateChange.post.parameters.length: 1
paths./#SubmitTaskStateChange.post.parameters[0].in: body
paths./#SubmitTaskStateChange.post.parameters[0].name: body
paths./#SubmitTaskStateChange.post.parameters[0].required: true
paths./#SubmitTaskStateChange.post.parameters[0].schema.$ref: '#/definitions/SubmitTaskStateChangeRequest'
paths./#SubmitTaskStateChange.post.responses.200.description: Success
paths./#SubmitTaskStateChange.post.responses.200.schema.$ref: '#/definitions/SubmitTaskStateChangeResponse'
paths./#SubmitTaskStateChange.post.responses.480.description: ServerException
paths./#SubmitTaskStateChange.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#SubmitTaskStateChange.post.responses.481.description: ClientException
paths./#SubmitTaskStateChange.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#UpdateContainerAgent.parameters.length: 9
paths./#UpdateContainerAgent.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateContainerAgent.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateContainerAgent.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateContainerAgent.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateContainerAgent.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateContainerAgent.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateContainerAgent.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateContainerAgent.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateContainerAgent.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateContainerAgent.post.description: <p>Updates the Amazon ECS container
  agent on a specified container instance. Updating the Amazon ECS container agent
  does not interrupt running tasks or services on the container instance. The process
  for updating the agent differs depending on whether your container instance was
  launched with the Amazon ECS-optimized AMI or another operating system.</p> <p>
  <code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon
  Linux with the <code>ecs-init</code> service installed and running. For help updating
  the Amazon ECS container agent on other operating systems, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
  Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service
  Developer Guide</i>.</p>
paths./#UpdateContainerAgent.post.operationId: UpdateContainerAgent
paths./#UpdateContainerAgent.post.parameters.length: 1
paths./#UpdateContainerAgent.post.parameters[0].in: body
paths./#UpdateContainerAgent.post.parameters[0].name: body
paths./#UpdateContainerAgent.post.parameters[0].required: true
paths./#UpdateContainerAgent.post.parameters[0].schema.$ref: '#/definitions/UpdateContainerAgentRequest'
paths./#UpdateContainerAgent.post.responses.200.description: Success
paths./#UpdateContainerAgent.post.responses.200.schema.$ref: '#/definitions/UpdateContainerAgentResponse'
paths./#UpdateContainerAgent.post.responses.480.description: ServerException
paths./#UpdateContainerAgent.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#UpdateContainerAgent.post.responses.481.description: ClientException
paths./#UpdateContainerAgent.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#UpdateContainerAgent.post.responses.482.description: InvalidParameterException
paths./#UpdateContainerAgent.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateContainerAgent.post.responses.483.description: ClusterNotFoundException
paths./#UpdateContainerAgent.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#UpdateContainerAgent.post.responses.484.description: UpdateInProgressException
paths./#UpdateContainerAgent.post.responses.484.schema.$ref: '#/definitions/UpdateInProgressException'
paths./#UpdateContainerAgent.post.responses.485.description: NoUpdateAvailableException
paths./#UpdateContainerAgent.post.responses.485.schema.$ref: '#/definitions/NoUpdateAvailableException'
paths./#UpdateContainerAgent.post.responses.486.description: MissingVersionException
paths./#UpdateContainerAgent.post.responses.486.schema.$ref: '#/definitions/MissingVersionException'
paths./#UpdateContainerInstancesState.parameters.length: 9
paths./#UpdateContainerInstancesState.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateContainerInstancesState.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateContainerInstancesState.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateContainerInstancesState.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateContainerInstancesState.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateContainerInstancesState.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateContainerInstancesState.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateContainerInstancesState.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateContainerInstancesState.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateContainerInstancesState.post.description: <p>Modifies the status of
  an Amazon ECS container instance.</p> <p>You can change the status of a container
  instance to <code>DRAINING</code> to manually remove an instance from a cluster,
  for example to perform system updates, update the Docker daemon, or scale down the
  cluster size. </p> <p>When you set a container instance to <code>DRAINING</code>,
  Amazon ECS prevents new tasks from being scheduled for placement on the container
  instance and replacement service tasks are started on other container instances
  in the cluster if the resources are available. Service tasks on the container instance
  that are in the <code>PENDING</code> state are stopped immediately.</p> <p>Service
  tasks on the container instance that are in the <code>RUNNING</code> state are stopped
  and replaced according the service's deployment configuration parameters, <code>minimumHealthyPercent</code>
  and <code>maximumPercent</code>. Note that you can change the deployment configuration
  of your service using <a>UpdateService</a>.</p> <ul> <li> <p>If <code>minimumHealthyPercent</code>
  is below 100%, the scheduler can ignore <code>desiredCount</code> temporarily during
  task replacement. For example, <code>desiredCount</code> is four tasks, a minimum
  of 50% allows the scheduler to stop two existing tasks before starting two new tasks.
  If the minimum is 100%, the service scheduler can't remove existing tasks until
  the replacement tasks are considered healthy. Tasks for services that do not use
  a load balancer are considered healthy if they are in the <code>RUNNING</code> state.
  Tasks for services that use a load balancer are considered healthy if they are in
  the <code>RUNNING</code> state and the container instance they are hosted on is
  reported as healthy by the load balancer.</p> </li> <li> <p>The <code>maximumPercent</code>
  parameter represents an upper limit on the number of running tasks during task replacement,
  which enables you to define the replacement batch size. For example, if <code>desiredCount</code>
  of four tasks, a maximum of 200% starts four new tasks before stopping the four
  tasks to be drained (provided that the cluster resources required to do this are
  available). If the maximum is 100%, then replacement tasks can't start until the
  draining tasks have stopped.</p> </li> </ul> <p>Any <code>PENDING</code> or <code>RUNNING</code>
  tasks that do not belong to a service are not affected; you must wait for them to
  finish or stop them manually.</p> <p>A container instance has completed draining
  when it has no more <code>RUNNING</code> tasks. You can verify this using <a>ListTasks</a>.</p>
  <p>When you set a container instance to <code>ACTIVE</code>, the Amazon ECS scheduler
  can begin scheduling tasks on the instance again.</p>
paths./#UpdateContainerInstancesState.post.operationId: UpdateContainerInstancesState
paths./#UpdateContainerInstancesState.post.parameters.length: 1
paths./#UpdateContainerInstancesState.post.parameters[0].in: body
paths./#UpdateContainerInstancesState.post.parameters[0].name: body
paths./#UpdateContainerInstancesState.post.parameters[0].required: true
paths./#UpdateContainerInstancesState.post.parameters[0].schema.$ref: '#/definitions/UpdateContainerInstancesStateRequest'
paths./#UpdateContainerInstancesState.post.responses.200.description: Success
paths./#UpdateContainerInstancesState.post.responses.200.schema.$ref: '#/definitions/UpdateContainerInstancesStateResponse'
paths./#UpdateContainerInstancesState.post.responses.480.description: ServerException
paths./#UpdateContainerInstancesState.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#UpdateContainerInstancesState.post.responses.481.description: ClientException
paths./#UpdateContainerInstancesState.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#UpdateContainerInstancesState.post.responses.482.description: InvalidParameterException
paths./#UpdateContainerInstancesState.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateContainerInstancesState.post.responses.483.description: ClusterNotFoundException
paths./#UpdateContainerInstancesState.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#UpdateService.parameters.length: 9
paths./#UpdateService.parameters[0].$ref: '#/parameters/Action'
paths./#UpdateService.parameters[1].$ref: '#/parameters/Version'
paths./#UpdateService.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./#UpdateService.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./#UpdateService.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./#UpdateService.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./#UpdateService.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./#UpdateService.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./#UpdateService.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./#UpdateService.post.description: '<p>Modifies the desired count, deployment
  configuration, or task definition used in a service.</p> <p>You can add to or subtract
  from the number of instantiations of a task definition in a service by specifying
  the cluster that the service is running in and a new <code>desiredCount</code> parameter.</p>
  <p>You can use <a>UpdateService</a> to modify your task definition and deploy a
  new version of your service.</p> <p>You can also update the deployment configuration
  of a service. When a deployment is triggered by updating the task definition of
  a service, the service scheduler uses the deployment configuration parameters, <code>minimumHealthyPercent</code>
  and <code>maximumPercent</code>, to determine the deployment strategy.</p> <ul>
  <li> <p>If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore
  <code>desiredCount</code> temporarily during a deployment. For example, if <code>desiredCount</code>
  is four tasks, a minimum of 50% allows the scheduler to stop two existing tasks
  before starting two new tasks. Tasks for services that do not use a load balancer
  are considered healthy if they are in the <code>RUNNING</code> state. Tasks for
  services that use a load balancer are considered healthy if they are in the <code>RUNNING</code>
  state and the container instance they are hosted on is reported as healthy by the
  load balancer.</p> </li> <li> <p>The <code>maximumPercent</code> parameter represents
  an upper limit on the number of running tasks during a deployment, which enables
  you to define the deployment batch size. For example, if <code>desiredCount</code>
  is four tasks, a maximum of 200% starts four new tasks before stopping the four
  older tasks (provided that the cluster resources required to do this are available).</p>
  </li> </ul> <p>When <a>UpdateService</a> stops a task during a deployment, the equivalent
  of <code>docker stop</code> is issued to the containers running in the task. This
  results in a <code>SIGTERM</code> and a 30-second timeout, after which <code>SIGKILL</code>
  is sent and the containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
  gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
  is sent.</p> <p>When the service scheduler launches new tasks, it determines task
  placement in your cluster with the following logic:</p> <ul> <li> <p>Determine which
  of the container instances in your cluster can support your service''s task definition
  (for example, they have the required CPU, memory, ports, and container instance
  attributes).</p> </li> <li> <p>By default, the service scheduler attempts to balance
  tasks across Availability Zones in this manner (although you can choose a different
  placement strategy):</p> <ul> <li> <p>Sort the valid container instances by the
  fewest number of running tasks for this service in the same Availability Zone as
  the instance. For example, if zone A has one running service task and zones B and
  C each have zero, valid container instances in either zone B or C are considered
  optimal for placement.</p> </li> <li> <p>Place the new service task on a valid container
  instance in an optimal Availability Zone (based on the previous steps), favoring
  container instances with the fewest number of running tasks for this service.</p>
  </li> </ul> </li> </ul> <p>When the service scheduler stops running tasks, it attempts
  to maintain balance across the Availability Zones in your cluster using the following
  logic: </p> <ul> <li> <p>Sort the container instances by the largest number of running
  tasks for this service in the same Availability Zone as the instance. For example,
  if zone A has one running service task and zones B and C each have two, container
  instances in either zone B or C are considered optimal for termination.</p> </li>
  <li> <p>Stop the task on a container instance in an optimal Availability Zone (based
  on the previous steps), favoring container instances with the largest number of
  running tasks for this service.</p> </li> </ul>'
paths./#UpdateService.post.operationId: UpdateService
paths./#UpdateService.post.parameters.length: 1
paths./#UpdateService.post.parameters[0].in: body
paths./#UpdateService.post.parameters[0].name: body
paths./#UpdateService.post.parameters[0].required: true
paths./#UpdateService.post.parameters[0].schema.$ref: '#/definitions/UpdateServiceRequest'
paths./#UpdateService.post.responses.200.description: Success
paths./#UpdateService.post.responses.200.schema.$ref: '#/definitions/UpdateServiceResponse'
paths./#UpdateService.post.responses.480.description: ServerException
paths./#UpdateService.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./#UpdateService.post.responses.481.description: ClientException
paths./#UpdateService.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./#UpdateService.post.responses.482.description: InvalidParameterException
paths./#UpdateService.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
paths./#UpdateService.post.responses.483.description: ClusterNotFoundException
paths./#UpdateService.post.responses.483.schema.$ref: '#/definitions/ClusterNotFoundException'
paths./#UpdateService.post.responses.484.description: ServiceNotFoundException
paths./#UpdateService.post.responses.484.schema.$ref: '#/definitions/ServiceNotFoundException'
paths./#UpdateService.post.responses.485.description: ServiceNotActiveException
paths./#UpdateService.post.responses.485.schema.$ref: '#/definitions/ServiceNotActiveException'
paths./.parameters.length: 9
paths./.parameters[0].$ref: '#/parameters/Action'
paths./.parameters[1].$ref: '#/parameters/Version'
paths./.parameters[2].$ref: '#/parameters/X-Amz-Content-Sha256'
paths./.parameters[3].$ref: '#/parameters/X-Amz-Date'
paths./.parameters[4].$ref: '#/parameters/X-Amz-Algorithm'
paths./.parameters[5].$ref: '#/parameters/X-Amz-Credential'
paths./.parameters[6].$ref: '#/parameters/X-Amz-Security-Token'
paths./.parameters[7].$ref: '#/parameters/X-Amz-Signature'
paths./.parameters[8].$ref: '#/parameters/X-Amz-SignedHeaders'
paths./.post.description: Creates a new Amazon ECS cluster. By default, your account
  receives a <code>default</code> cluster when you launch your first container instance.
  However, you can create your own cluster with a unique name with the <code>CreateCluster</code>
  action.
paths./.post.operationId: CreateCluster
paths./.post.parameters.length: 1
paths./.post.parameters[0].in: body
paths./.post.parameters[0].name: body
paths./.post.parameters[0].required: true
paths./.post.parameters[0].schema.$ref: '#/definitions/CreateClusterRequest'
paths./.post.responses.200.description: Success
paths./.post.responses.200.schema.$ref: '#/definitions/CreateClusterResponse'
paths./.post.responses.480.description: ServerException
paths./.post.responses.480.schema.$ref: '#/definitions/ServerException'
paths./.post.responses.481.description: ClientException
paths./.post.responses.481.schema.$ref: '#/definitions/ClientException'
paths./.post.responses.482.description: InvalidParameterException
paths./.post.responses.482.schema.$ref: '#/definitions/InvalidParameterException'
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: http
security.length: 1
security[0].hmac.length: 0
securityDefinitions.hmac.description: Amazon Signature authorization v4
securityDefinitions.hmac.in: header
securityDefinitions.hmac.name: Authorization
securityDefinitions.hmac.type: apiKey
securityDefinitions.hmac.x-amazon-apigateway-authtype: awsSigv4
swagger: "2.0"
x-hasEquivalentPaths: true
