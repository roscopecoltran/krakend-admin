swagger: '2.0'
schemes:
  - http
host: ds.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>AWS Directory Service</fullname> <p>AWS Directory Service is a web service that makes it easy for you to setup and run directories in the AWS cloud, or connect your AWS resources with an existing on-premises Microsoft Active Directory. This guide provides detailed information about AWS Directory Service operations, data types, parameters, and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS Directory Service and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Directory Service
  version: '2015-04-16'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ds-2015-04-16.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: ds
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/ds/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>If the DNS server for your on-premises domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from your Microsoft AD on AWS to a peer VPC. </p> <p>Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>AddIpRoutes</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      operationId: AddIpRoutes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddIpRoutesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '484':
          description: IpRouteLimitExceededException
          schema:
            $ref: '#/definitions/IpRouteLimitExceededException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#AddTagsToResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.
      operationId: AddTagsToResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: TagLimitExceededException
          schema:
            $ref: '#/definitions/TagLimitExceededException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CancelSchemaExtension':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.'
      operationId: CancelSchemaExtension
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CancelSchemaExtensionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelSchemaExtensionResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#ConnectDirectory':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an AD Connector to connect to an on-premises directory.</p> <p>Before you call <i>ConnectDirectory</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>ConnectDirectory</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      operationId: ConnectDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConnectDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConnectDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>'
      operationId: CreateAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAliasResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateComputer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a computer account in the specified directory, and joins the computer to the directory.'
      operationId: CreateComputer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateComputerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateComputerResult'
        '480':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '483':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '486':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '487':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateConditionalForwarder':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a conditional forwarder associated with your AWS directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.
      operationId: CreateConditionalForwarder
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateConditionalForwarderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConditionalForwarderResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateDirectory':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a Simple AD directory.</p> <p>Before you call <i>CreateDirectory</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateDirectory</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      operationId: CreateDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateMicrosoftAD':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a Microsoft AD in the AWS cloud.</p> <p>Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateMicrosoftAD</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      operationId: CreateMicrosoftAD
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateMicrosoftADRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMicrosoftADResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#CreateSnapshot':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.</p> <note> <p>You cannot take snapshots of AD Connector directories.</p> </note>
      operationId: CreateSnapshot
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSnapshotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: SnapshotLimitExceededException
          schema:
            $ref: '#/definitions/SnapshotLimitExceededException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#CreateTrust':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Microsoft AD in the AWS cloud, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.</p>'
      operationId: CreateTrust
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrustRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrustResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DeleteConditionalForwarder':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a conditional forwarder that has been set up for your AWS directory.
      operationId: DeleteConditionalForwarder
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConditionalForwarderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DeleteDirectory':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes an AWS Directory Service directory.</p> <p>Before you call <i>DeleteDirectory</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>DeleteDirectory</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      operationId: DeleteDirectory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DeleteSnapshot':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a directory snapshot.
      operationId: DeleteSnapshot
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSnapshotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DeleteTrust':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes an existing trust relationship between your Microsoft AD in the AWS cloud and an external domain.
      operationId: DeleteTrust
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTrustRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTrustResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DeregisterEventTopic':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified directory as a publisher to the specified SNS topic.
      operationId: DeregisterEventTopic
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterEventTopicRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DescribeConditionalForwarders':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Obtains information about the conditional forwarders for this account.</p> <p>If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.</p>'
      operationId: DescribeConditionalForwarders
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConditionalForwardersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConditionalForwardersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DescribeDirectories':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>'
      operationId: DescribeDirectories
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDirectoriesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDirectoriesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DescribeDomainControllers':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides information about any domain controllers in your directory.
      operationId: DescribeDomainControllers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDomainControllersRequest'
        - description: Pagination limit
          in: query
          name: Limit
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DescribeEventTopics':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Obtains information about which SNS topics receive status messages from the specified directory.</p> <p>If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.</p>'
      operationId: DescribeEventTopics
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventTopicsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventTopicsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DescribeSnapshots':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>'
      operationId: DescribeSnapshots
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSnapshotsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSnapshotsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DescribeTrusts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Obtains information about the trust relationships for this account.</p> <p>If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.</p>'
      operationId: DescribeTrusts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTrustsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTrustsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DisableRadius':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.
      operationId: DisableRadius
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableRadiusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableRadiusResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#DisableSso':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disables single-sign on for a directory.
      operationId: DisableSso
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisableSsoRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableSsoResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#EnableRadius':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.
      operationId: EnableRadius
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableRadiusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableRadiusResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#EnableSso':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables single sign-on for a directory.
      operationId: EnableSso
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableSsoRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableSsoResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#GetDirectoryLimits':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Obtains directory limit information for the current region.
      operationId: GetDirectoryLimits
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDirectoryLimitsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDirectoryLimitsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#GetSnapshotLimits':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Obtains the manual snapshot limits for a directory.
      operationId: GetSnapshotLimits
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSnapshotLimitsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSnapshotLimitsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#ListIpRoutes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the address blocks that you have added to a directory.
      operationId: ListIpRoutes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListIpRoutesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#ListSchemaExtensions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all schema extensions applied to a Microsoft AD Directory.
      operationId: ListSchemaExtensions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSchemaExtensionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchemaExtensionsResult'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#ListTagsForResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all tags on a directory.
      operationId: ListTagsForResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#RegisterEventTopic':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associates a directory with an SNS topic. This establishes the directory as a publisher to the specified SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.
      operationId: RegisterEventTopic
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterEventTopicRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#RemoveIpRoutes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes IP address blocks from a directory.
      operationId: RemoveIpRoutes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveIpRoutesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#RemoveTagsFromResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes tags from a directory.
      operationId: RemoveTagsFromResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#RestoreFromSnapshot':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>'
      operationId: RestoreFromSnapshot
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RestoreFromSnapshotRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreFromSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#StartSchemaExtension':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Applies a schema extension to a Microsoft AD directory.
      operationId: StartSchemaExtension
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StartSchemaExtensionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartSchemaExtensionResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: SnapshotLimitExceededException
          schema:
            $ref: '#/definitions/SnapshotLimitExceededException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#UpdateConditionalForwarder':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates a conditional forwarder that has been set up for your AWS directory.
      operationId: UpdateConditionalForwarder
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConditionalForwarderRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#UpdateNumberOfDomainControllers':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.'
      operationId: UpdateNumberOfDomainControllers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNumberOfDomainControllersRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNumberOfDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: DomainControllerLimitExceededException
          schema:
            $ref: '#/definitions/DomainControllerLimitExceededException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#UpdateRadius':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector directory.
      operationId: UpdateRadius
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRadiusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRadiusResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
  '/#VerifyTrust':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>AWS Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships.</p> <p>This action verifies a trust relationship between your Microsoft AD in the AWS cloud and an external domain.</p>
      operationId: VerifyTrust
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyTrustRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VerifyTrustResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
definitions:
  AccessUrl:
    maxLength: 128
    minLength: 1
    type: string
  AddIpRoutesRequest:
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory to which to add the address block.
      IpRoutes:
        $ref: '#/definitions/IpRoutes'
        description: 'IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your on-premises domain.'
      UpdateSecurityGroupForDirectoryControllers:
        $ref: '#/definitions/UpdateSecurityGroupForDirectoryControllers'
        description: '<p>If set to true, updates the inbound and outbound rules of the security group that has the description: "AWS created security group for <i>directory ID</i> directory controllers." Following are the new rules: </p> <p>Inbound:</p> <ul> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0</p> </li> </ul> <p/> <p>Outbound:</p> <ul> <li> <p>Type: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0</p> </li> </ul> <p>These security rules impact an internal network interface that is not exposed publicly.</p>'
    required:
      - DirectoryId
      - IpRoutes
    type: object
  AddIpRoutesResult:
    properties: {}
    type: object
  AddTagsToResourceRequest:
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) for the directory to which to add the tag.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be assigned to the directory.
    required:
      - ResourceId
      - Tags
    type: object
  AddTagsToResourceResult:
    properties: {}
    type: object
  AddedDateTime:
    format: date-time
    type: string
  AliasName:
    maxLength: 62
    minLength: 1
    pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*'
    type: string
  Attribute:
    description: Represents a named directory attribute.
    properties:
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      Value:
        $ref: '#/definitions/AttributeValue'
        description: The value of the attribute.
    type: object
  AttributeName:
    minLength: 1
    type: string
  AttributeValue:
    type: string
  Attributes:
    items:
      $ref: '#/definitions/Attribute'
    type: array
  AuthenticationFailedException:
    description: An authentication error occurred.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
        description: The textual message for the exception.
      RequestId:
        $ref: '#/definitions/RequestId'
        description: The identifier of the request that caused the exception.
    type: object
  AvailabilityZone:
    type: string
  AvailabilityZones:
    items:
      $ref: '#/definitions/AvailabilityZone'
    type: array
  CancelSchemaExtensionRequest:
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory whose schema extension will be canceled.
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension that will be canceled.
    required:
      - DirectoryId
      - SchemaExtensionId
    type: object
  CancelSchemaExtensionResult:
    properties: {}
    type: object
  CidrIp:
    pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-9]|[1-2][0-9]|3[0-2]))$'
    type: string
  CidrIps:
    items:
      $ref: '#/definitions/CidrIp'
    type: array
  ClientException:
    description: A client exception has occurred.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  CloudOnlyDirectoriesLimitReached:
    type: boolean
  Computer:
    description: Contains information about a computer account in a directory.
    properties:
      ComputerAttributes:
        $ref: '#/definitions/Attributes'
        description: An array of <a>Attribute</a> objects containing the LDAP attributes that belong to the computer account.
      ComputerId:
        $ref: '#/definitions/SID'
        description: The identifier of the computer.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The computer name.
    type: object
  ComputerName:
    maxLength: 15
    minLength: 1
    type: string
  ComputerPassword:
    format: password
    maxLength: 64
    minLength: 8
    pattern: '[\u0020-\u00FF]+'
    type: string
  ConditionalForwarder:
    description: Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.
    properties:
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder.
      ReplicationScope:
        $ref: '#/definitions/ReplicationScope'
        description: 'The replication scope of the conditional forwarder. The only allowed value is <code>Domain</code>, which will replicate the conditional forwarder to all of the domain controllers for your AWS directory.'
    type: object
  ConditionalForwarders:
    items:
      $ref: '#/definitions/ConditionalForwarder'
    type: array
  ConnectDirectoryRequest:
    description: Contains the inputs for the <a>ConnectDirectory</a> operation.
    properties:
      ConnectSettings:
        $ref: '#/definitions/DirectoryConnectSettings'
        description: A <a>DirectoryConnectSettings</a> object that contains additional information for the operation.
      Description:
        $ref: '#/definitions/Description'
        description: A textual description for the directory.
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>.'
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: The password for the on-premises user account.
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The NetBIOS name of the on-premises directory, such as <code>CORP</code>.'
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The size of the directory.
    required:
      - Name
      - Password
      - Size
      - ConnectSettings
    type: object
  ConnectDirectoryResult:
    description: Contains the results of the <a>ConnectDirectory</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the new directory.
    type: object
  ConnectPassword:
    format: password
    maxLength: 128
    minLength: 1
    type: string
  ConnectedDirectoriesLimitReached:
    type: boolean
  CreateAliasRequest:
    description: Contains the inputs for the <a>CreateAlias</a> operation.
    properties:
      Alias:
        $ref: '#/definitions/AliasName'
        description: <p>The requested alias.</p> <p>The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code> error if the alias already exists.</p>
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to create the alias.
    required:
      - DirectoryId
      - Alias
    type: object
  CreateAliasResult:
    description: Contains the results of the <a>CreateAlias</a> operation.
    properties:
      Alias:
        $ref: '#/definitions/AliasName'
        description: The alias for the directory.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
    type: object
  CreateComputerRequest:
    description: Contains the inputs for the <a>CreateComputer</a> operation.
    properties:
      ComputerAttributes:
        $ref: '#/definitions/Attributes'
        description: An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The name of the computer account.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory in which to create the computer account.
      OrganizationalUnitDistinguishedName:
        $ref: '#/definitions/OrganizationalUnitDN'
        description: The fully-qualified distinguished name of the organizational unit to place the computer account in.
      Password:
        $ref: '#/definitions/ComputerPassword'
        description: 'A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.'
    required:
      - DirectoryId
      - ComputerName
      - Password
    type: object
  CreateComputerResult:
    description: Contains the results for the <a>CreateComputer</a> operation.
    properties:
      Computer:
        $ref: '#/definitions/Computer'
        description: A <a>Computer</a> object that represents the computer account.
    type: object
  CreateConditionalForwarderRequest:
    description: Initiates the creation of a conditional forwarder for your AWS Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID of the AWS directory for which you are creating the conditional forwarder.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
    required:
      - DirectoryId
      - RemoteDomainName
      - DnsIpAddrs
    type: object
  CreateConditionalForwarderResult:
    description: The result of a CreateConditinalForwarder request.
    properties: {}
    type: object
  CreateDirectoryRequest:
    description: 'Contains the inputs for the <a>CreateDirectory</a> operation. '
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A textual description for the directory.
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name for the directory, such as <code>corp.example.com</code>.'
      Password:
        $ref: '#/definitions/Password'
        description: The password for the directory administrator. The directory creation process creates a directory administrator account with the username <code>Administrator</code> and this password.
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The short name of the directory, such as <code>CORP</code>.'
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The size of the directory.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettings'
        description: A <a>DirectoryVpcSettings</a> object that contains additional information for the operation.
    required:
      - Name
      - Password
      - Size
    type: object
  CreateDirectoryResult:
    description: Contains the results of the <a>CreateDirectory</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory that was created.
    type: object
  CreateMicrosoftADRequest:
    description: Creates a Microsoft AD in the AWS cloud.
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A textual description for the directory. This label will appear on the AWS console <code>Directory Details</code> page after the directory is created.
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified domain name for the directory, such as <code>corp.example.com</code>. This name will resolve inside your VPC only. It does not need to be publicly resolvable.'
      Password:
        $ref: '#/definitions/Password'
        description: The password for the default administrative user named <code>Admin</code>.
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The NetBIOS name for your domain. A short identifier for your domain, such as <code>CORP</code>. If you don''t specify a NetBIOS name, it will default to the first part of your directory DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>. '
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettings'
        description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
    required:
      - Name
      - Password
      - VpcSettings
    type: object
  CreateMicrosoftADResult:
    description: Result of a CreateMicrosoftAD request.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory that was created.
    type: object
  CreateSnapshotBeforeSchemaExtension:
    type: boolean
  CreateSnapshotRequest:
    description: Contains the inputs for the <a>CreateSnapshot</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory of which to take a snapshot.
      Name:
        $ref: '#/definitions/SnapshotName'
        description: The descriptive name to apply to the snapshot.
    required:
      - DirectoryId
    type: object
  CreateSnapshotResult:
    description: Contains the results of the <a>CreateSnapshot</a> operation.
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the snapshot that was created.
    type: object
  CreateTrustRequest:
    description: '<p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Microsoft AD in the AWS cloud, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.</p>'
    properties:
      ConditionalForwarderIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the Microsoft AD in the AWS cloud for which to establish the trust relationship.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship.
      TrustDirection:
        $ref: '#/definitions/TrustDirection'
        description: The direction of the trust relationship.
      TrustPassword:
        $ref: '#/definitions/TrustPassword'
        description: The trust password. The must be the same password that was used when creating the trust relationship on the external domain.
      TrustType:
        $ref: '#/definitions/TrustType'
        description: The trust relationship type.
    required:
      - DirectoryId
      - RemoteDomainName
      - TrustPassword
      - TrustDirection
    type: object
  CreateTrustResult:
    description: The result of a CreateTrust request.
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: A unique identifier for the trust relationship that was created.
    type: object
  CreatedDateTime:
    format: date-time
    type: string
  DeleteAssociatedConditionalForwarder:
    type: boolean
  DeleteConditionalForwarderRequest:
    description: Deletes a conditional forwarder.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID for which you are deleting the conditional forwarder.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder.
    required:
      - DirectoryId
      - RemoteDomainName
    type: object
  DeleteConditionalForwarderResult:
    description: The result of a DeleteConditionalForwarder request.
    properties: {}
    type: object
  DeleteDirectoryRequest:
    description: Contains the inputs for the <a>DeleteDirectory</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory to delete.
    required:
      - DirectoryId
    type: object
  DeleteDirectoryResult:
    description: Contains the results of the <a>DeleteDirectory</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
    type: object
  DeleteSnapshotRequest:
    description: Contains the inputs for the <a>DeleteSnapshot</a> operation.
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the directory snapshot to be deleted.
    required:
      - SnapshotId
    type: object
  DeleteSnapshotResult:
    description: Contains the results of the <a>DeleteSnapshot</a> operation.
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the directory snapshot that was deleted.
    type: object
  DeleteTrustRequest:
    description: Deletes the local side of an existing trust relationship between the Microsoft AD in the AWS cloud and the external domain.
    properties:
      DeleteAssociatedConditionalForwarder:
        $ref: '#/definitions/DeleteAssociatedConditionalForwarder'
        description: Delete a conditional forwarder as part of a DeleteTrustRequest.
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The Trust ID of the trust relationship to be deleted.
    required:
      - TrustId
    type: object
  DeleteTrustResult:
    description: The result of a DeleteTrust request.
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The Trust ID of the trust relationship that was deleted.
    type: object
  DeregisterEventTopicRequest:
    description: Removes the specified directory as a publisher to the specified SNS topic.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID to remove as a publisher. This directory will no longer send messages to the specified SNS topic.
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The name of the SNS topic from which to remove the directory as a publisher.
    required:
      - DirectoryId
      - TopicName
    type: object
  DeregisterEventTopicResult:
    description: The result of a DeregisterEventTopic request.
    properties: {}
    type: object
  DescribeConditionalForwardersRequest:
    description: Describes a conditional forwarder.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID for which to get the list of associated conditional forwarders.
      RemoteDomainNames:
        $ref: '#/definitions/RemoteDomainNames'
        description: 'The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.'
    required:
      - DirectoryId
    type: object
  DescribeConditionalForwardersResult:
    description: The result of a DescribeConditionalForwarder request.
    properties:
      ConditionalForwarders:
        $ref: '#/definitions/ConditionalForwarders'
        description: The list of conditional forwarders that have been created.
    type: object
  DescribeDirectoriesRequest:
    description: Contains the inputs for the <a>DescribeDirectories</a> operation.
    properties:
      DirectoryIds:
        $ref: '#/definitions/DirectoryIds'
        description: '<p>A list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
      Limit:
        $ref: '#/definitions/Limit'
        description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call.
    type: object
  DescribeDirectoriesResult:
    description: Contains the results of the <a>DescribeDirectories</a> operation.
    properties:
      DirectoryDescriptions:
        $ref: '#/definitions/DirectoryDescriptions'
        description: '<p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items.'
    type: object
  DescribeDomainControllersRequest:
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory for which to retrieve the domain controller information.
      DomainControllerIds:
        $ref: '#/definitions/DomainControllerIds'
        description: A list of identifiers for the domain controllers whose information will be provided.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <i>DescribeDomainControllers.NextToken</i> value from a previous call to <a>DescribeDomainControllers</a>. Pass null if this is the first call. '
    required:
      - DirectoryId
    type: object
  DescribeDomainControllersResult:
    properties:
      DomainControllers:
        $ref: '#/definitions/DomainControllers'
        description: List of the <a>DomainController</a> objects that were retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeDomainControllers</a> retrieve the next set of items.'
    type: object
  DescribeEventTopicsRequest:
    description: Describes event topics.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'The Directory ID for which to get the list of associated SNS topics. If this member is null, associations for all Directory IDs are returned.'
      TopicNames:
        $ref: '#/definitions/TopicNames'
        description: '<p>A list of SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
    type: object
  DescribeEventTopicsResult:
    description: The result of a DescribeEventTopic request.
    properties:
      EventTopics:
        $ref: '#/definitions/EventTopics'
        description: A list of SNS topic names that receive status messages from the specified Directory ID.
    type: object
  DescribeSnapshotsRequest:
    description: Contains the inputs for the <a>DescribeSnapshots</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to retrieve snapshot information.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of objects to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call.
      SnapshotIds:
        $ref: '#/definitions/SnapshotIds'
        description: 'A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members.'
    type: object
  DescribeSnapshotsResult:
    description: Contains the results of the <a>DescribeSnapshots</a> operation.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>.'
      Snapshots:
        $ref: '#/definitions/Snapshots'
        description: '<p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
    type: object
  DescribeTrustsRequest:
    description: 'Describes the trust relationships for a particular Microsoft AD in the AWS cloud. If no input parameters are are provided, such as directory ID or trust ID, this request describes all the trust relationships.'
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the AWS directory that is a part of the requested trust relationship.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of objects to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>. Pass null if this is the first call.
      TrustIds:
        $ref: '#/definitions/TrustIds'
        description: '<p>A list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
    type: object
  DescribeTrustsResult:
    description: The result of a DescribeTrust request.
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of items.'
      Trusts:
        $ref: '#/definitions/Trusts'
        description: '<p>The list of Trust objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
    type: object
  Description:
    maxLength: 128
    minLength: 0
    pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
    type: string
  DesiredNumberOfDomainControllers:
    minimum: 2
    type: integer
  DirectoryConnectSettings:
    description: Contains information for the <a>ConnectDirectory</a> operation when an AD Connector directory is being created.
    properties:
      CustomerDnsIps:
        $ref: '#/definitions/DnsIpAddrs'
        description: A list of one or more IP addresses of DNS servers or domain controllers in the on-premises directory.
      CustomerUserName:
        $ref: '#/definitions/UserName'
        description: '<p>The username of an account in the on-premises directory that is used to connect to the directory. This account must have the following privileges:</p> <ul> <li> <p>Read users and groups</p> </li> <li> <p>Create computer objects</p> </li> <li> <p>Join computers to the domain</p> </li> </ul>'
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of subnet identifiers in the VPC in which the AD Connector is created.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC in which the AD Connector is created.
    required:
      - VpcId
      - SubnetIds
      - CustomerDnsIps
      - CustomerUserName
    type: object
  DirectoryConnectSettingsDescription:
    description: Contains information about an AD Connector directory.
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: A list of the Availability Zones that the directory is in.
      ConnectIps:
        $ref: '#/definitions/IpAddrs'
        description: The IP addresses of the AD Connector servers.
      CustomerUserName:
        $ref: '#/definitions/UserName'
        description: The username of the service account in the on-premises directory.
      SecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: The security group identifier for the AD Connector directory.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of subnet identifiers in the VPC that the AD connector is in.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that the AD Connector is in.
    type: object
  DirectoryDescription:
    description: Contains information about an AWS Directory Service directory.
    properties:
      AccessUrl:
        $ref: '#/definitions/AccessUrl'
        description: 'The access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. If no alias has been created for the directory, <code>&lt;alias&gt;</code> is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
      Alias:
        $ref: '#/definitions/AliasName'
        description: 'The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
      ConnectSettings:
        $ref: '#/definitions/DirectoryConnectSettingsDescription'
        description: A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.
      Description:
        $ref: '#/definitions/Description'
        description: The textual description for the directory.
      DesiredNumberOfDomainControllers:
        $ref: '#/definitions/DesiredNumberOfDomainControllers'
        description: The desired number of domain controllers in the directory if the directory is Microsoft AD.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: 'The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in the on-premises directory to which the AD Connector is connected.'
      LaunchTime:
        $ref: '#/definitions/LaunchTime'
        description: Specifies when the directory was created.
      Name:
        $ref: '#/definitions/DirectoryName'
        description: The fully-qualified name of the directory.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory.
      RadiusStatus:
        $ref: '#/definitions/RadiusStatus'
        description: The status of the RADIUS MFA server connection.
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: The short name of the directory.
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The directory size.
      SsoEnabled:
        $ref: '#/definitions/SsoEnabled'
        description: 'Indicates if single-sign on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>.'
      Stage:
        $ref: '#/definitions/DirectoryStage'
        description: The current stage of the directory.
      StageLastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the stage was last updated.
      StageReason:
        $ref: '#/definitions/StageReason'
        description: Additional information about the directory stage.
      Type:
        $ref: '#/definitions/DirectoryType'
        description: The directory size.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettingsDescription'
        description: A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed AD directory.
    type: object
  DirectoryDescriptions:
    description: A list of directory descriptions.
    items:
      $ref: '#/definitions/DirectoryDescription'
    type: array
  DirectoryId:
    pattern: '^d-[0-9a-f]{10}$'
    type: string
  DirectoryIds:
    description: A list of directory identifiers.
    items:
      $ref: '#/definitions/DirectoryId'
    type: array
  DirectoryLimitExceededException:
    description: The maximum number of directories in the region has been reached. You can use the <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  DirectoryLimits:
    description: Contains directory limit information for a region.
    properties:
      CloudOnlyDirectoriesCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of cloud directories in the region.
      CloudOnlyDirectoriesLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of cloud directories allowed in the region.
      CloudOnlyDirectoriesLimitReached:
        $ref: '#/definitions/CloudOnlyDirectoriesLimitReached'
        description: Indicates if the cloud directory limit has been reached.
      CloudOnlyMicrosoftADCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of Microsoft AD directories in the region.
      CloudOnlyMicrosoftADLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of Microsoft AD directories allowed in the region.
      CloudOnlyMicrosoftADLimitReached:
        $ref: '#/definitions/CloudOnlyDirectoriesLimitReached'
        description: Indicates if the Microsoft AD directory limit has been reached.
      ConnectedDirectoriesCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of connected directories in the region.
      ConnectedDirectoriesLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of connected directories allowed in the region.
      ConnectedDirectoriesLimitReached:
        $ref: '#/definitions/ConnectedDirectoriesLimitReached'
        description: Indicates if the connected directory limit has been reached.
    type: object
  DirectoryName:
    pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$'
    type: string
  DirectoryShortName:
    pattern: '^[^\\/:*?\"\<\>|.]+[^\\/:*?\"<>|]*$'
    type: string
  DirectorySize:
    enum:
      - Small
      - Large
    type: string
  DirectoryStage:
    enum:
      - Requested
      - Creating
      - Created
      - Active
      - Inoperable
      - Impaired
      - Restoring
      - RestoreFailed
      - Deleting
      - Deleted
      - Failed
    type: string
  DirectoryType:
    enum:
      - SimpleAD
      - ADConnector
      - MicrosoftAD
    type: string
  DirectoryUnavailableException:
    description: The specified directory is unavailable or could not be found.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  DirectoryVpcSettings:
    description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
    properties:
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. AWS Directory Service creates a directory server and a DNS server in each of these subnets.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC in which to create the directory.
    required:
      - VpcId
      - SubnetIds
    type: object
  DirectoryVpcSettingsDescription:
    description: Contains information about the directory.
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The list of Availability Zones that the directory is in.
      SecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: 'The security group identifier for the directory. If the directory was created before 8/1/2014, this is the identifier of the directory members security group that was created when the directory was created. If the directory was created after this date, this value is null.'
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: The identifiers of the subnets for the directory servers.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that the directory is in.
    type: object
  DisableRadiusRequest:
    description: Contains the inputs for the <a>DisableRadius</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to disable MFA.
    required:
      - DirectoryId
    type: object
  DisableRadiusResult:
    description: Contains the results of the <a>DisableRadius</a> operation.
    properties: {}
    type: object
  DisableSsoRequest:
    description: Contains the inputs for the <a>DisableSso</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to disable single-sign on.
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: 'The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
      UserName:
        $ref: '#/definitions/UserName'
        description: '<p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.</p> <p>If the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
    required:
      - DirectoryId
    type: object
  DisableSsoResult:
    description: Contains the results of the <a>DisableSso</a> operation.
    properties: {}
    type: object
  DnsIpAddrs:
    items:
      $ref: '#/definitions/IpAddr'
    type: array
  DomainController:
    description: Contains information about the domain controllers for a specified directory.
    properties:
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
        description: The Availability Zone where the domain controller is located.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory where the domain controller resides.
      DnsIpAddr:
        $ref: '#/definitions/IpAddr'
        description: The IP address of the domain controller.
      DomainControllerId:
        $ref: '#/definitions/DomainControllerId'
        description: Identifies a specific domain controller in the directory.
      LaunchTime:
        $ref: '#/definitions/LaunchTime'
        description: Specifies when the domain controller was created.
      Status:
        $ref: '#/definitions/DomainControllerStatus'
        description: The status of the domain controller.
      StatusLastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the status was last updated.
      StatusReason:
        $ref: '#/definitions/DomainControllerStatusReason'
        description: A description of the domain controller state.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: Identifier of the subnet in the VPC that contains the domain controller.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that contains the domain controller.
    type: object
  DomainControllerId:
    pattern: '^dc-[0-9a-f]{10}$'
    type: string
  DomainControllerIds:
    items:
      $ref: '#/definitions/DomainControllerId'
    type: array
  DomainControllerLimitExceededException:
    description: The maximum allowed number of domain controllers per directory was exceeded. The default limit per directory is 20 domain controllers.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  DomainControllerStatus:
    enum:
      - Creating
      - Active
      - Impaired
      - Restoring
      - Deleting
      - Deleted
      - Failed
    type: string
  DomainControllerStatusReason:
    type: string
  DomainControllers:
    items:
      $ref: '#/definitions/DomainController'
    type: array
  EnableRadiusRequest:
    description: Contains the inputs for the <a>EnableRadius</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to enable MFA.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
    required:
      - DirectoryId
      - RadiusSettings
    type: object
  EnableRadiusResult:
    description: Contains the results of the <a>EnableRadius</a> operation.
    properties: {}
    type: object
  EnableSsoRequest:
    description: Contains the inputs for the <a>EnableSso</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to enable single-sign on.
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: 'The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
      UserName:
        $ref: '#/definitions/UserName'
        description: '<p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.</p> <p>If the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
    required:
      - DirectoryId
    type: object
  EnableSsoResult:
    description: Contains the results of the <a>EnableSso</a> operation.
    properties: {}
    type: object
  EndDateTime:
    format: date-time
    type: string
  EntityAlreadyExistsException:
    description: The specified entity already exists.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  EntityDoesNotExistException:
    description: The specified entity could not be found.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  EventTopic:
    description: Information about SNS topic and AWS Directory Service directory associations.
    properties:
      CreatedDateTime:
        $ref: '#/definitions/CreatedDateTime'
        description: The date and time of when you associated your directory with the SNS topic.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of an AWS Directory Service directory that will publish status messages to an SNS topic.
      Status:
        $ref: '#/definitions/TopicStatus'
        description: The topic registration status.
      TopicArn:
        $ref: '#/definitions/TopicArn'
        description: The SNS topic ARN (Amazon Resource Name).
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The name of an AWS SNS topic the receives status messages from the directory.
    type: object
  EventTopics:
    items:
      $ref: '#/definitions/EventTopic'
    type: array
  ExceptionMessage:
    description: The descriptive message for the exception.
    type: string
  GetDirectoryLimitsRequest:
    description: Contains the inputs for the <a>GetDirectoryLimits</a> operation.
    properties: {}
    type: object
  GetDirectoryLimitsResult:
    description: Contains the results of the <a>GetDirectoryLimits</a> operation.
    properties:
      DirectoryLimits:
        $ref: '#/definitions/DirectoryLimits'
        description: A <a>DirectoryLimits</a> object that contains the directory limits for the current region.
    type: object
  GetSnapshotLimitsRequest:
    description: Contains the inputs for the <a>GetSnapshotLimits</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Contains the identifier of the directory to obtain the limits for.
    required:
      - DirectoryId
    type: object
  GetSnapshotLimitsResult:
    description: Contains the results of the <a>GetSnapshotLimits</a> operation.
    properties:
      SnapshotLimits:
        $ref: '#/definitions/SnapshotLimits'
        description: A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory.
    type: object
  InsufficientPermissionsException:
    description: The account does not have sufficient permission to perform the operation.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  InvalidNextTokenException:
    description: The <i>NextToken</i> value is not valid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  InvalidParameterException:
    description: One or more parameters are not valid.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  IpAddr:
    pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
    type: string
  IpAddrs:
    items:
      $ref: '#/definitions/IpAddr'
    type: array
  IpRoute:
    description: 'IP address block. This is often the address block of the DNS server used for your on-premises domain. '
    properties:
      CidrIp:
        $ref: '#/definitions/CidrIp'
        description: 'IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your on-premises domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32.'
      Description:
        $ref: '#/definitions/Description'
        description: Description of the address block.
    type: object
  IpRouteInfo:
    description: Information about one or more IP address blocks.
    properties:
      AddedDateTime:
        $ref: '#/definitions/AddedDateTime'
        description: The date and time the address block was added to the directory.
      CidrIp:
        $ref: '#/definitions/CidrIp'
        description: IP address block in the <a>IpRoute</a>.
      Description:
        $ref: '#/definitions/Description'
        description: Description of the <a>IpRouteInfo</a>.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory associated with the IP addresses.
      IpRouteStatusMsg:
        $ref: '#/definitions/IpRouteStatusMsg'
        description: The status of the IP address block.
      IpRouteStatusReason:
        $ref: '#/definitions/IpRouteStatusReason'
        description: The reason for the IpRouteStatusMsg.
    type: object
  IpRouteLimitExceededException:
    description: The maximum allowed number of IP addresses was exceeded. The default limit is 100 IP address blocks.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  IpRouteStatusMsg:
    enum:
      - Adding
      - Added
      - Removing
      - Removed
      - AddFailed
      - RemoveFailed
    type: string
  IpRouteStatusReason:
    type: string
  IpRoutes:
    items:
      $ref: '#/definitions/IpRoute'
    type: array
  IpRoutesInfo:
    items:
      $ref: '#/definitions/IpRouteInfo'
    type: array
  LastUpdatedDateTime:
    format: date-time
    type: string
  LaunchTime:
    format: date-time
    type: string
  LdifContent:
    maxLength: 500000
    minLength: 1
    type: string
  Limit:
    minimum: 0
    type: integer
  ListIpRoutesRequest:
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory for which you want to retrieve the IP addresses.
      Limit:
        $ref: '#/definitions/Limit'
        description: 'Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>. Pass null if this is the first call.
    required:
      - DirectoryId
    type: object
  ListIpRoutesResult:
    properties:
      IpRoutesInfo:
        $ref: '#/definitions/IpRoutesInfo'
        description: A list of <a>IpRoute</a>s.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>ListIpRoutes</a> to retrieve the next set of items.'
    type: object
  ListSchemaExtensionsRequest:
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory from which to retrieve the schema extension information.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <code>ListSchemaExtensions.NextToken</code> value from a previous call to <code>ListSchemaExtensions</code>. Pass null if this is the first call.
    required:
      - DirectoryId
    type: object
  ListSchemaExtensionsResult:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <code>ListSchemaExtensions</code> to retrieve the next set of items.'
      SchemaExtensionsInfo:
        $ref: '#/definitions/SchemaExtensionsInfo'
        description: Information about the schema extensions applied to the directory.
    type: object
  ListTagsForResourceRequest:
    properties:
      Limit:
        $ref: '#/definitions/Limit'
        description: Reserved for future use.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) of the directory for which you want to retrieve tags.
    required:
      - ResourceId
    type: object
  ListTagsForResourceResult:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
      Tags:
        $ref: '#/definitions/Tags'
        description: List of tags returned by the ListTagsForResource operation.
    type: object
  ManualSnapshotsLimitReached:
    type: boolean
  NextToken:
    type: string
  OrganizationalUnitDN:
    maxLength: 2000
    minLength: 1
    type: string
  Password:
    format: password
    pattern: '(?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*'
    type: string
  PortNumber:
    maximum: 65535
    minimum: 1025
    type: integer
  RadiusAuthenticationProtocol:
    enum:
      - PAP
      - CHAP
      - MS-CHAPv1
      - MS-CHAPv2
    type: string
  RadiusDisplayLabel:
    maxLength: 64
    minLength: 1
    type: string
  RadiusRetries:
    maximum: 10
    minimum: 0
    type: integer
  RadiusSettings:
    description: Contains information about a Remote Authentication Dial In User Service (RADIUS) server.
    properties:
      AuthenticationProtocol:
        $ref: '#/definitions/RadiusAuthenticationProtocol'
        description: The protocol specified for your RADIUS endpoints.
      DisplayLabel:
        $ref: '#/definitions/RadiusDisplayLabel'
        description: Not currently used.
      RadiusPort:
        $ref: '#/definitions/PortNumber'
        description: The port that your RADIUS server is using for communications. Your on-premises network must allow inbound traffic over this port from the AWS Directory Service servers.
      RadiusRetries:
        $ref: '#/definitions/RadiusRetries'
        description: The maximum number of times that communication with the RADIUS server is attempted.
      RadiusServers:
        $ref: '#/definitions/Servers'
        description: 'An array of strings that contains the IP addresses of the RADIUS server endpoints, or the IP addresses of your RADIUS server load balancer.'
      RadiusTimeout:
        $ref: '#/definitions/RadiusTimeout'
        description: 'The amount of time, in seconds, to wait for the RADIUS server to respond.'
      SharedSecret:
        $ref: '#/definitions/RadiusSharedSecret'
        description: Not currently used.
      UseSameUsername:
        $ref: '#/definitions/UseSameUsername'
        description: Not currently used.
    type: object
  RadiusSharedSecret:
    format: password
    maxLength: 512
    minLength: 8
    type: string
  RadiusStatus:
    enum:
      - Creating
      - Completed
      - Failed
    type: string
  RadiusTimeout:
    maximum: 20
    minimum: 1
    type: integer
  RegisterEventTopicRequest:
    description: Registers a new event topic.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID that will publish status messages to the SNS topic.
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The SNS topic name to which the directory will publish status messages. This SNS topic must be in the same region as the specified Directory ID.
    required:
      - DirectoryId
      - TopicName
    type: object
  RegisterEventTopicResult:
    description: The result of a RegisterEventTopic request.
    properties: {}
    type: object
  RemoteDomainName:
    pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+[.]?$'
    type: string
  RemoteDomainNames:
    items:
      $ref: '#/definitions/RemoteDomainName'
    type: array
  RemoveIpRoutesRequest:
    properties:
      CidrIps:
        $ref: '#/definitions/CidrIps'
        description: IP address blocks that you want to remove.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory from which you want to remove the IP addresses.
    required:
      - DirectoryId
      - CidrIps
    type: object
  RemoveIpRoutesResult:
    properties: {}
    type: object
  RemoveTagsFromResourceRequest:
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) of the directory from which to remove the tag.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The tag key (name) of the tag to be removed.
    required:
      - ResourceId
      - TagKeys
    type: object
  RemoveTagsFromResourceResult:
    properties: {}
    type: object
  ReplicationScope:
    enum:
      - Domain
    type: string
  RequestId:
    description: The AWS request identifier.
    pattern: '^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$'
    type: string
  ResourceId:
    pattern: '^[d]-[0-9a-f]{10}$'
    type: string
  RestoreFromSnapshotRequest:
    description: An object representing the inputs for the <a>RestoreFromSnapshot</a> operation.
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the snapshot to restore from.
    required:
      - SnapshotId
    type: object
  RestoreFromSnapshotResult:
    description: Contains the results of the <a>RestoreFromSnapshot</a> operation.
    properties: {}
    type: object
  SID:
    maxLength: 256
    minLength: 1
    pattern: '[&\w+-.@]+'
    type: string
  SchemaExtensionId:
    pattern: '^e-[0-9a-f]{10}$'
    type: string
  SchemaExtensionInfo:
    description: Information about a schema extension.
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A description of the schema extension.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory to which the schema extension is applied.
      EndDateTime:
        $ref: '#/definitions/EndDateTime'
        description: The date and time that the schema extension was completed.
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension.
      SchemaExtensionStatus:
        $ref: '#/definitions/SchemaExtensionStatus'
        description: The current status of the schema extension.
      SchemaExtensionStatusReason:
        $ref: '#/definitions/SchemaExtensionStatusReason'
        description: The reason for the <code>SchemaExtensionStatus</code>.
      StartDateTime:
        $ref: '#/definitions/StartDateTime'
        description: The date and time that the schema extension started being applied to the directory.
    type: object
  SchemaExtensionStatus:
    enum:
      - Initializing
      - CreatingSnapshot
      - UpdatingSchema
      - Replicating
      - CancelInProgress
      - RollbackInProgress
      - Cancelled
      - Failed
      - Completed
    type: string
  SchemaExtensionStatusReason:
    type: string
  SchemaExtensionsInfo:
    items:
      $ref: '#/definitions/SchemaExtensionInfo'
    type: array
  SecurityGroupId:
    pattern: '^(sg-[0-9a-f]{8})$'
    type: string
  Server:
    maxLength: 256
    minLength: 1
    type: string
  Servers:
    items:
      $ref: '#/definitions/Server'
    type: array
  ServiceException:
    description: An exception has occurred in AWS Directory Service.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  Snapshot:
    description: Describes a directory snapshot.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
      Name:
        $ref: '#/definitions/SnapshotName'
        description: The descriptive name of the snapshot.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The snapshot identifier.
      StartTime:
        $ref: '#/definitions/StartTime'
        description: The date and time that the snapshot was taken.
      Status:
        $ref: '#/definitions/SnapshotStatus'
        description: The snapshot status.
      Type:
        $ref: '#/definitions/SnapshotType'
        description: The snapshot type.
    type: object
  SnapshotId:
    pattern: '^s-[0-9a-f]{10}$'
    type: string
  SnapshotIds:
    description: A list of directory snapshot identifiers.
    items:
      $ref: '#/definitions/SnapshotId'
    type: array
  SnapshotLimitExceededException:
    description: The maximum number of manual snapshots for the directory has been reached. You can use the <a>GetSnapshotLimits</a> operation to determine the snapshot limits for a directory.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  SnapshotLimits:
    description: Contains manual snapshot limit information for a directory.
    properties:
      ManualSnapshotsCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of manual snapshots of the directory.
      ManualSnapshotsLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of manual snapshots allowed.
      ManualSnapshotsLimitReached:
        $ref: '#/definitions/ManualSnapshotsLimitReached'
        description: Indicates if the manual snapshot limit has been reached.
    type: object
  SnapshotName:
    maxLength: 128
    minLength: 0
    pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
    type: string
  SnapshotStatus:
    enum:
      - Creating
      - Completed
      - Failed
    type: string
  SnapshotType:
    enum:
      - Auto
      - Manual
    type: string
  Snapshots:
    description: A list of descriptions of directory snapshots.
    items:
      $ref: '#/definitions/Snapshot'
    type: array
  SsoEnabled:
    type: boolean
  StageReason:
    type: string
  StartDateTime:
    format: date-time
    type: string
  StartSchemaExtensionRequest:
    properties:
      CreateSnapshotBeforeSchemaExtension:
        $ref: '#/definitions/CreateSnapshotBeforeSchemaExtension'
        description: 'If true, creates a snapshot of the directory before applying the schema extension.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the schema extension.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which the schema extension will be applied to.
      LdifContent:
        $ref: '#/definitions/LdifContent'
        description: 'The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \n. See the example request below for more details. The file size can be no larger than 1MB.'
    required:
      - DirectoryId
      - CreateSnapshotBeforeSchemaExtension
      - LdifContent
      - Description
    type: object
  StartSchemaExtensionResult:
    properties:
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension that will be applied.
    type: object
  StartTime:
    format: date-time
    type: string
  StateLastUpdatedDateTime:
    format: date-time
    type: string
  SubnetId:
    pattern: '^(subnet-[0-9a-f]{8})$'
    type: string
  SubnetIds:
    items:
      $ref: '#/definitions/SubnetId'
    type: array
  Tag:
    description: Metadata assigned to a directory consisting of a key-value pair.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: 'Required name of the tag. The string value can be Unicode characters and cannot be prefixed with "aws:". The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
      Value:
        $ref: '#/definitions/TagValue'
        description: 'The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeys:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagLimitExceededException:
    description: The maximum allowed number of tags was exceeded.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Tags:
    items:
      $ref: '#/definitions/Tag'
    type: array
  TopicArn:
    type: string
  TopicName:
    maxLength: 256
    minLength: 1
    pattern: '[a-zA-Z0-9_-]+'
    type: string
  TopicNames:
    items:
      $ref: '#/definitions/TopicName'
    type: array
  TopicStatus:
    enum:
      - Registered
      - Topic not found
      - Failed
      - Deleted
    type: string
  Trust:
    description: Describes a trust relationship between an Microsoft AD in the AWS cloud and an external domain.
    properties:
      CreatedDateTime:
        $ref: '#/definitions/CreatedDateTime'
        description: The date and time that the trust relationship was created.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the AWS directory involved in the trust relationship.
      LastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the trust relationship was last updated.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship.
      StateLastUpdatedDateTime:
        $ref: '#/definitions/StateLastUpdatedDateTime'
        description: The date and time that the TrustState was last updated.
      TrustDirection:
        $ref: '#/definitions/TrustDirection'
        description: The trust relationship direction.
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique ID of the trust relationship.
      TrustState:
        $ref: '#/definitions/TrustState'
        description: The trust relationship state.
      TrustStateReason:
        $ref: '#/definitions/TrustStateReason'
        description: The reason for the TrustState.
      TrustType:
        $ref: '#/definitions/TrustType'
        description: The trust relationship type.
    type: object
  TrustDirection:
    enum:
      - 'One-Way: Outgoing'
      - 'One-Way: Incoming'
      - Two-Way
    type: string
  TrustId:
    pattern: '^t-[0-9a-f]{10}$'
    type: string
  TrustIds:
    items:
      $ref: '#/definitions/TrustId'
    type: array
  TrustPassword:
    format: password
    maxLength: 128
    minLength: 1
    type: string
  TrustState:
    enum:
      - Creating
      - Created
      - Verifying
      - VerifyFailed
      - Verified
      - Deleting
      - Deleted
      - Failed
    type: string
  TrustStateReason:
    type: string
  TrustType:
    enum:
      - Forest
    type: string
  Trusts:
    items:
      $ref: '#/definitions/Trust'
    type: array
  UnsupportedOperationException:
    description: The operation is not supported.
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
      RequestId:
        $ref: '#/definitions/RequestId'
    type: object
  UpdateConditionalForwarderRequest:
    description: Updates a conditional forwarder.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID of the AWS directory for which to update the conditional forwarder.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The updated IP addresses of the remote DNS server associated with the conditional forwarder.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
    required:
      - DirectoryId
      - RemoteDomainName
      - DnsIpAddrs
    type: object
  UpdateConditionalForwarderResult:
    description: The result of an UpdateConditionalForwarder request.
    properties: {}
    type: object
  UpdateNumberOfDomainControllersRequest:
    properties:
      DesiredNumber:
        $ref: '#/definitions/DesiredNumberOfDomainControllers'
        description: The number of domain controllers desired in the directory.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory to which the domain controllers will be added or removed.
    required:
      - DirectoryId
      - DesiredNumber
    type: object
  UpdateNumberOfDomainControllersResult:
    properties: {}
    type: object
  UpdateRadiusRequest:
    description: Contains the inputs for the <a>UpdateRadius</a> operation.
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to update the RADIUS server information.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
    required:
      - DirectoryId
      - RadiusSettings
    type: object
  UpdateRadiusResult:
    description: Contains the results of the <a>UpdateRadius</a> operation.
    properties: {}
    type: object
  UpdateSecurityGroupForDirectoryControllers:
    type: boolean
  UseSameUsername:
    type: boolean
  UserName:
    minLength: 1
    pattern: '[a-zA-Z0-9._-]+'
    type: string
  VerifyTrustRequest:
    description: Initiates the verification of an existing trust relationship between a Microsoft AD in the AWS cloud and an external domain.
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique Trust ID of the trust relationship to verify.
    required:
      - TrustId
    type: object
  VerifyTrustResult:
    description: Result of a VerifyTrust request.
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique Trust ID of the trust relationship that was verified.
    type: object
  VpcId:
    pattern: '^(vpc-[0-9a-f]{8})$'
    type: string
