{
	"basePath": "/",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AccountId.description": "Account Id of the customer. It should be a 12 digit number.",
	"definitions.AccountId.maxLength": 12,
	"definitions.AccountId.minLength": 12,
	"definitions.AccountId.type": "string",
	"definitions.Budget.description": "AWS Budget model",
	"definitions.Budget.properties.BudgetLimit.$ref": "#/definitions/Spend",
	"definitions.Budget.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.Budget.properties.BudgetType.$ref": "#/definitions/BudgetType",
	"definitions.Budget.properties.CalculatedSpend.$ref": "#/definitions/CalculatedSpend",
	"definitions.Budget.properties.CostFilters.$ref": "#/definitions/CostFilters",
	"definitions.Budget.properties.CostTypes.$ref": "#/definitions/CostTypes",
	"definitions.Budget.properties.TimePeriod.$ref": "#/definitions/TimePeriod",
	"definitions.Budget.properties.TimeUnit.$ref": "#/definitions/TimeUnit",
	"definitions.Budget.required.length": 6,
	"definitions.Budget.required[0]": "BudgetName",
	"definitions.Budget.required[1]": "BudgetLimit",
	"definitions.Budget.required[2]": "CostTypes",
	"definitions.Budget.required[3]": "TimeUnit",
	"definitions.Budget.required[4]": "TimePeriod",
	"definitions.Budget.required[5]": "BudgetType",
	"definitions.Budget.type": "object",
	"definitions.BudgetName.description": "A string represents the budget name. No \":\" and \"\\\" character is allowed.",
	"definitions.BudgetName.maxLength": 100,
	"definitions.BudgetName.pattern": "[^:\\\\]+",
	"definitions.BudgetName.type": "string",
	"definitions.BudgetType.description": "The type of a budget. It should be COST, USAGE, or RI_UTILIZATION.",
	"definitions.BudgetType.enum.length": 3,
	"definitions.BudgetType.enum[0]": "USAGE",
	"definitions.BudgetType.enum[1]": "COST",
	"definitions.BudgetType.enum[2]": "RI_UTILIZATION",
	"definitions.BudgetType.type": "string",
	"definitions.Budgets.description": "A list of budgets",
	"definitions.Budgets.items.$ref": "#/definitions/Budget",
	"definitions.Budgets.type": "array",
	"definitions.CalculatedSpend.description": "A structure that holds the actual and forecasted spend for a budget.",
	"definitions.CalculatedSpend.properties.ActualSpend.$ref": "#/definitions/Spend",
	"definitions.CalculatedSpend.properties.ForecastedSpend.$ref": "#/definitions/Spend",
	"definitions.CalculatedSpend.required.length": 1,
	"definitions.CalculatedSpend.required[0]": "ActualSpend",
	"definitions.CalculatedSpend.type": "object",
	"definitions.ComparisonOperator.description": "The comparison operator of a notification. Currently we support less than, equal to and greater than.",
	"definitions.ComparisonOperator.enum.length": 3,
	"definitions.ComparisonOperator.enum[0]": "GREATER_THAN",
	"definitions.ComparisonOperator.enum[1]": "LESS_THAN",
	"definitions.ComparisonOperator.enum[2]": "EQUAL_TO",
	"definitions.ComparisonOperator.type": "string",
	"definitions.CostFilters.description": "A map that represents the cost filters applied to the budget.",
	"definitions.CostFilters.items.properties.key.$ref": "#/definitions/GenericString",
	"definitions.CostFilters.items.properties.value.$ref": "#/definitions/DimensionValues",
	"definitions.CostFilters.items.type": "object",
	"definitions.CostFilters.type": "array",
	"definitions.CostTypes.description": "This includes the options for getting the cost of a budget.",
	"definitions.CostTypes.properties.IncludeSubscription.$ref": "#/definitions/GenericBoolean",
	"definitions.CostTypes.properties.IncludeTax.$ref": "#/definitions/GenericBoolean",
	"definitions.CostTypes.properties.UseBlended.$ref": "#/definitions/GenericBoolean",
	"definitions.CostTypes.required.length": 3,
	"definitions.CostTypes.required[0]": "IncludeTax",
	"definitions.CostTypes.required[1]": "IncludeSubscription",
	"definitions.CostTypes.required[2]": "UseBlended",
	"definitions.CostTypes.type": "object",
	"definitions.CreateBudgetRequest.description": "Request of CreateBudget",
	"definitions.CreateBudgetRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.CreateBudgetRequest.properties.Budget.$ref": "#/definitions/Budget",
	"definitions.CreateBudgetRequest.properties.NotificationsWithSubscribers.$ref": "#/definitions/NotificationWithSubscribersList",
	"definitions.CreateBudgetRequest.required.length": 2,
	"definitions.CreateBudgetRequest.required[0]": "AccountId",
	"definitions.CreateBudgetRequest.required[1]": "Budget",
	"definitions.CreateBudgetRequest.type": "object",
	"definitions.CreateBudgetResponse.description": "Response of CreateBudget",
	"definitions.CreateBudgetResponse.type": "object",
	"definitions.CreateNotificationRequest.description": "Request of CreateNotification",
	"definitions.CreateNotificationRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.CreateNotificationRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.CreateNotificationRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.CreateNotificationRequest.properties.Subscribers.$ref": "#/definitions/Subscribers",
	"definitions.CreateNotificationRequest.required.length": 4,
	"definitions.CreateNotificationRequest.required[0]": "AccountId",
	"definitions.CreateNotificationRequest.required[1]": "BudgetName",
	"definitions.CreateNotificationRequest.required[2]": "Notification",
	"definitions.CreateNotificationRequest.required[3]": "Subscribers",
	"definitions.CreateNotificationRequest.type": "object",
	"definitions.CreateNotificationResponse.description": "Response of CreateNotification",
	"definitions.CreateNotificationResponse.type": "object",
	"definitions.CreateSubscriberRequest.description": "Request of CreateSubscriber",
	"definitions.CreateSubscriberRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.CreateSubscriberRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.CreateSubscriberRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.CreateSubscriberRequest.properties.Subscriber.$ref": "#/definitions/Subscriber",
	"definitions.CreateSubscriberRequest.required.length": 4,
	"definitions.CreateSubscriberRequest.required[0]": "AccountId",
	"definitions.CreateSubscriberRequest.required[1]": "BudgetName",
	"definitions.CreateSubscriberRequest.required[2]": "Notification",
	"definitions.CreateSubscriberRequest.required[3]": "Subscriber",
	"definitions.CreateSubscriberRequest.type": "object",
	"definitions.CreateSubscriberResponse.description": "Response of CreateSubscriber",
	"definitions.CreateSubscriberResponse.type": "object",
	"definitions.CreationLimitExceededException.description": "The exception is thrown when customer tries to create a record (e.g. budget), but the number this record already exceeds the limitation.",
	"definitions.CreationLimitExceededException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.CreationLimitExceededException.type": "object",
	"definitions.DeleteBudgetRequest.description": "Request of DeleteBudget",
	"definitions.DeleteBudgetRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DeleteBudgetRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DeleteBudgetRequest.required.length": 2,
	"definitions.DeleteBudgetRequest.required[0]": "AccountId",
	"definitions.DeleteBudgetRequest.required[1]": "BudgetName",
	"definitions.DeleteBudgetRequest.type": "object",
	"definitions.DeleteBudgetResponse.description": "Response of DeleteBudget",
	"definitions.DeleteBudgetResponse.type": "object",
	"definitions.DeleteNotificationRequest.description": "Request of DeleteNotification",
	"definitions.DeleteNotificationRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DeleteNotificationRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DeleteNotificationRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.DeleteNotificationRequest.required.length": 3,
	"definitions.DeleteNotificationRequest.required[0]": "AccountId",
	"definitions.DeleteNotificationRequest.required[1]": "BudgetName",
	"definitions.DeleteNotificationRequest.required[2]": "Notification",
	"definitions.DeleteNotificationRequest.type": "object",
	"definitions.DeleteNotificationResponse.description": "Response of DeleteNotification",
	"definitions.DeleteNotificationResponse.type": "object",
	"definitions.DeleteSubscriberRequest.description": "Request of DeleteSubscriber",
	"definitions.DeleteSubscriberRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DeleteSubscriberRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DeleteSubscriberRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.DeleteSubscriberRequest.properties.Subscriber.$ref": "#/definitions/Subscriber",
	"definitions.DeleteSubscriberRequest.required.length": 4,
	"definitions.DeleteSubscriberRequest.required[0]": "AccountId",
	"definitions.DeleteSubscriberRequest.required[1]": "BudgetName",
	"definitions.DeleteSubscriberRequest.required[2]": "Notification",
	"definitions.DeleteSubscriberRequest.required[3]": "Subscriber",
	"definitions.DeleteSubscriberRequest.type": "object",
	"definitions.DeleteSubscriberResponse.description": "Response of DeleteSubscriber",
	"definitions.DeleteSubscriberResponse.type": "object",
	"definitions.DescribeBudgetRequest.description": "Request of DescribeBudget",
	"definitions.DescribeBudgetRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DescribeBudgetRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DescribeBudgetRequest.required.length": 2,
	"definitions.DescribeBudgetRequest.required[0]": "AccountId",
	"definitions.DescribeBudgetRequest.required[1]": "BudgetName",
	"definitions.DescribeBudgetRequest.type": "object",
	"definitions.DescribeBudgetResponse.description": "Response of DescribeBudget",
	"definitions.DescribeBudgetResponse.properties.Budget.$ref": "#/definitions/Budget",
	"definitions.DescribeBudgetResponse.type": "object",
	"definitions.DescribeBudgetsRequest.description": "Request of DescribeBudgets",
	"definitions.DescribeBudgetsRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DescribeBudgetsRequest.properties.MaxResults.$ref": "#/definitions/MaxResults",
	"definitions.DescribeBudgetsRequest.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeBudgetsRequest.required.length": 1,
	"definitions.DescribeBudgetsRequest.required[0]": "AccountId",
	"definitions.DescribeBudgetsRequest.type": "object",
	"definitions.DescribeBudgetsResponse.description": "Response of DescribeBudgets",
	"definitions.DescribeBudgetsResponse.properties.Budgets.$ref": "#/definitions/Budgets",
	"definitions.DescribeBudgetsResponse.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeBudgetsResponse.type": "object",
	"definitions.DescribeNotificationsForBudgetRequest.description": "Request of DescribeNotificationsForBudget",
	"definitions.DescribeNotificationsForBudgetRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DescribeNotificationsForBudgetRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DescribeNotificationsForBudgetRequest.properties.MaxResults.$ref": "#/definitions/MaxResults",
	"definitions.DescribeNotificationsForBudgetRequest.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeNotificationsForBudgetRequest.required.length": 2,
	"definitions.DescribeNotificationsForBudgetRequest.required[0]": "AccountId",
	"definitions.DescribeNotificationsForBudgetRequest.required[1]": "BudgetName",
	"definitions.DescribeNotificationsForBudgetRequest.type": "object",
	"definitions.DescribeNotificationsForBudgetResponse.description": "Response of GetNotificationsForBudget",
	"definitions.DescribeNotificationsForBudgetResponse.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeNotificationsForBudgetResponse.properties.Notifications.$ref": "#/definitions/Notifications",
	"definitions.DescribeNotificationsForBudgetResponse.type": "object",
	"definitions.DescribeSubscribersForNotificationRequest.description": "Request of DescribeSubscribersForNotification",
	"definitions.DescribeSubscribersForNotificationRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.DescribeSubscribersForNotificationRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.DescribeSubscribersForNotificationRequest.properties.MaxResults.$ref": "#/definitions/MaxResults",
	"definitions.DescribeSubscribersForNotificationRequest.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeSubscribersForNotificationRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.DescribeSubscribersForNotificationRequest.required.length": 3,
	"definitions.DescribeSubscribersForNotificationRequest.required[0]": "AccountId",
	"definitions.DescribeSubscribersForNotificationRequest.required[1]": "BudgetName",
	"definitions.DescribeSubscribersForNotificationRequest.required[2]": "Notification",
	"definitions.DescribeSubscribersForNotificationRequest.type": "object",
	"definitions.DescribeSubscribersForNotificationResponse.description": "Response of DescribeSubscribersForNotification",
	"definitions.DescribeSubscribersForNotificationResponse.properties.NextToken.$ref": "#/definitions/GenericString",
	"definitions.DescribeSubscribersForNotificationResponse.properties.Subscribers.$ref": "#/definitions/Subscribers",
	"definitions.DescribeSubscribersForNotificationResponse.type": "object",
	"definitions.DimensionValues.items.$ref": "#/definitions/GenericString",
	"definitions.DimensionValues.type": "array",
	"definitions.DuplicateRecordException.description": "The exception is thrown when customer tries to create a record (e.g. budget) that already exists.",
	"definitions.DuplicateRecordException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.DuplicateRecordException.type": "object",
	"definitions.ExpiredNextTokenException.description": "This exception is thrown if the paging token is expired - past its TTL",
	"definitions.ExpiredNextTokenException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.ExpiredNextTokenException.type": "object",
	"definitions.GenericBoolean.description": "A generic boolean value.",
	"definitions.GenericBoolean.type": "boolean",
	"definitions.GenericString.description": "A generic String.",
	"definitions.GenericString.type": "string",
	"definitions.GenericTimestamp.description": "A generic timestamp. In Java it is transformed to a Date object.",
	"definitions.GenericTimestamp.format": "date-time",
	"definitions.GenericTimestamp.type": "string",
	"definitions.InternalErrorException.description": "This exception is thrown on an unknown internal failure.",
	"definitions.InternalErrorException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.InternalErrorException.type": "object",
	"definitions.InvalidNextTokenException.description": "This exception is thrown if paging token signature didn't match the token, or the paging token isn't for this request",
	"definitions.InvalidNextTokenException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.InvalidNextTokenException.type": "object",
	"definitions.InvalidParameterException.description": "This exception is thrown if any request is given an invalid parameter. E.g., if a required Date field is null.",
	"definitions.InvalidParameterException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.InvalidParameterException.type": "object",
	"definitions.MaxResults.description": "An integer to represent how many entries a paginated response contains. Maximum is set to 100.",
	"definitions.MaxResults.maximum": 100,
	"definitions.MaxResults.minimum": 1,
	"definitions.MaxResults.type": "integer",
	"definitions.NotFoundException.description": "This exception is thrown if a requested entity is not found. E.g., if a budget id doesn't exist for an account ID.",
	"definitions.NotFoundException.properties.Message.$ref": "#/definitions/errorMessage",
	"definitions.NotFoundException.type": "object",
	"definitions.Notification.description": "Notification model. Each budget may contain multiple notifications with different settings.",
	"definitions.Notification.properties.ComparisonOperator.$ref": "#/definitions/ComparisonOperator",
	"definitions.Notification.properties.NotificationType.$ref": "#/definitions/NotificationType",
	"definitions.Notification.properties.Threshold.$ref": "#/definitions/NotificationThreshold",
	"definitions.Notification.properties.ThresholdType.$ref": "#/definitions/ThresholdType",
	"definitions.Notification.required.length": 3,
	"definitions.Notification.required[0]": "NotificationType",
	"definitions.Notification.required[1]": "ComparisonOperator",
	"definitions.Notification.required[2]": "Threshold",
	"definitions.Notification.type": "object",
	"definitions.NotificationThreshold.description": "The threshold of a notification. It should be a number between 0 and 1,000,000,000.",
	"definitions.NotificationThreshold.format": "double",
	"definitions.NotificationThreshold.maximum": 1000000000,
	"definitions.NotificationThreshold.minimum": 0.1,
	"definitions.NotificationThreshold.type": "number",
	"definitions.NotificationType.description": "The type of a notification. It should be ACTUAL or FORECASTED.",
	"definitions.NotificationType.enum.length": 2,
	"definitions.NotificationType.enum[0]": "ACTUAL",
	"definitions.NotificationType.enum[1]": "FORECASTED",
	"definitions.NotificationType.type": "string",
	"definitions.NotificationWithSubscribers.description": "A structure to relate notification and a list of subscribers who belong to the notification.",
	"definitions.NotificationWithSubscribers.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.NotificationWithSubscribers.properties.Subscribers.$ref": "#/definitions/Subscribers",
	"definitions.NotificationWithSubscribers.required.length": 2,
	"definitions.NotificationWithSubscribers.required[0]": "Notification",
	"definitions.NotificationWithSubscribers.required[1]": "Subscribers",
	"definitions.NotificationWithSubscribers.type": "object",
	"definitions.NotificationWithSubscribersList.description": "A list of Notifications, each with a list of subscribers.",
	"definitions.NotificationWithSubscribersList.items.$ref": "#/definitions/NotificationWithSubscribers",
	"definitions.NotificationWithSubscribersList.maxItems": 5,
	"definitions.NotificationWithSubscribersList.type": "array",
	"definitions.Notifications.description": "A list of notifications.",
	"definitions.Notifications.items.$ref": "#/definitions/Notification",
	"definitions.Notifications.type": "array",
	"definitions.NumericValue.description": "A string to represent NumericValue.",
	"definitions.NumericValue.pattern": "[0-9]*(\\.)?[0-9]+",
	"definitions.NumericValue.type": "string",
	"definitions.Spend.description": "A structure that represents either a cost spend or usage spend. Contains an amount and a unit.",
	"definitions.Spend.properties.Amount.$ref": "#/definitions/NumericValue",
	"definitions.Spend.properties.Unit.$ref": "#/definitions/UnitValue",
	"definitions.Spend.required.length": 2,
	"definitions.Spend.required[0]": "Amount",
	"definitions.Spend.required[1]": "Unit",
	"definitions.Spend.type": "object",
	"definitions.Subscriber.description": "Subscriber model. Each notification may contain multiple subscribers with different addresses.",
	"definitions.Subscriber.properties.Address.$ref": "#/definitions/GenericString",
	"definitions.Subscriber.properties.SubscriptionType.$ref": "#/definitions/SubscriptionType",
	"definitions.Subscriber.required.length": 2,
	"definitions.Subscriber.required[0]": "SubscriptionType",
	"definitions.Subscriber.required[1]": "Address",
	"definitions.Subscriber.type": "object",
	"definitions.Subscribers.description": "A list of subscribers.",
	"definitions.Subscribers.items.$ref": "#/definitions/Subscriber",
	"definitions.Subscribers.maxItems": 11,
	"definitions.Subscribers.minItems": 1,
	"definitions.Subscribers.type": "array",
	"definitions.SubscriptionType.description": "The subscription type of the subscriber. It can be SMS or EMAIL.",
	"definitions.SubscriptionType.enum.length": 2,
	"definitions.SubscriptionType.enum[0]": "SNS",
	"definitions.SubscriptionType.enum[1]": "EMAIL",
	"definitions.SubscriptionType.type": "string",
	"definitions.ThresholdType.description": "The type of threshold for a notification. It can be PERCENTAGE or ABSOLUTE_VALUE.",
	"definitions.ThresholdType.enum.length": 2,
	"definitions.ThresholdType.enum[0]": "PERCENTAGE",
	"definitions.ThresholdType.enum[1]": "ABSOLUTE_VALUE",
	"definitions.ThresholdType.type": "string",
	"definitions.TimePeriod.description": "A time period indicating the start date and end date of a budget.",
	"definitions.TimePeriod.properties.End.$ref": "#/definitions/GenericTimestamp",
	"definitions.TimePeriod.properties.Start.$ref": "#/definitions/GenericTimestamp",
	"definitions.TimePeriod.required.length": 2,
	"definitions.TimePeriod.required[0]": "Start",
	"definitions.TimePeriod.required[1]": "End",
	"definitions.TimePeriod.type": "object",
	"definitions.TimeUnit.description": "The time unit of the budget. e.g. MONTHLY, QUARTERLY, etc.",
	"definitions.TimeUnit.enum.length": 4,
	"definitions.TimeUnit.enum[0]": "DAILY",
	"definitions.TimeUnit.enum[1]": "MONTHLY",
	"definitions.TimeUnit.enum[2]": "QUARTERLY",
	"definitions.TimeUnit.enum[3]": "ANNUALLY",
	"definitions.TimeUnit.type": "string",
	"definitions.UnitValue.description": "A string to represent budget spend unit. It should be not null and not empty.",
	"definitions.UnitValue.minLength": 1,
	"definitions.UnitValue.type": "string",
	"definitions.UpdateBudgetRequest.description": "Request of UpdateBudget",
	"definitions.UpdateBudgetRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.UpdateBudgetRequest.properties.NewBudget.$ref": "#/definitions/Budget",
	"definitions.UpdateBudgetRequest.required.length": 2,
	"definitions.UpdateBudgetRequest.required[0]": "AccountId",
	"definitions.UpdateBudgetRequest.required[1]": "NewBudget",
	"definitions.UpdateBudgetRequest.type": "object",
	"definitions.UpdateBudgetResponse.description": "Response of UpdateBudget",
	"definitions.UpdateBudgetResponse.type": "object",
	"definitions.UpdateNotificationRequest.description": "Request of UpdateNotification",
	"definitions.UpdateNotificationRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.UpdateNotificationRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.UpdateNotificationRequest.properties.NewNotification.$ref": "#/definitions/Notification",
	"definitions.UpdateNotificationRequest.properties.OldNotification.$ref": "#/definitions/Notification",
	"definitions.UpdateNotificationRequest.required.length": 4,
	"definitions.UpdateNotificationRequest.required[0]": "AccountId",
	"definitions.UpdateNotificationRequest.required[1]": "BudgetName",
	"definitions.UpdateNotificationRequest.required[2]": "OldNotification",
	"definitions.UpdateNotificationRequest.required[3]": "NewNotification",
	"definitions.UpdateNotificationRequest.type": "object",
	"definitions.UpdateNotificationResponse.description": "Response of UpdateNotification",
	"definitions.UpdateNotificationResponse.type": "object",
	"definitions.UpdateSubscriberRequest.description": "Request of UpdateSubscriber",
	"definitions.UpdateSubscriberRequest.properties.AccountId.$ref": "#/definitions/AccountId",
	"definitions.UpdateSubscriberRequest.properties.BudgetName.$ref": "#/definitions/BudgetName",
	"definitions.UpdateSubscriberRequest.properties.NewSubscriber.$ref": "#/definitions/Subscriber",
	"definitions.UpdateSubscriberRequest.properties.Notification.$ref": "#/definitions/Notification",
	"definitions.UpdateSubscriberRequest.properties.OldSubscriber.$ref": "#/definitions/Subscriber",
	"definitions.UpdateSubscriberRequest.required.length": 5,
	"definitions.UpdateSubscriberRequest.required[0]": "AccountId",
	"definitions.UpdateSubscriberRequest.required[1]": "BudgetName",
	"definitions.UpdateSubscriberRequest.required[2]": "Notification",
	"definitions.UpdateSubscriberRequest.required[3]": "OldSubscriber",
	"definitions.UpdateSubscriberRequest.required[4]": "NewSubscriber",
	"definitions.UpdateSubscriberRequest.type": "object",
	"definitions.UpdateSubscriberResponse.description": "Response of UpdateSubscriber",
	"definitions.UpdateSubscriberResponse.type": "object",
	"definitions.errorMessage.description": "The error message the exception carries.",
	"definitions.errorMessage.type": "string",
	"externalDocs.description": "Amazon Web Services documentation",
	"externalDocs.url": "https://aws.amazon.com/budgets/",
	"host": "budgets.amazonaws.com",
	"info.contact.email": "mike.ralphson@gmail.com",
	"info.contact.name": "Mike Ralphson",
	"info.contact.url": "https://github.com/mermade/aws2openapi",
	"info.description": "All public APIs for AWS Budgets",
	"info.license.name": "Apache 2.0 License",
	"info.license.url": "http://www.apache.org/licenses/",
	"info.termsOfService": "https://aws.amazon.com/service-terms/",
	"info.title": "AWS Budgets",
	"info.version": "2016-10-20",
	"info.x-apiClientRegistration.url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].contentType": "application/json",
	"info.x-origin[0].converter.url": "https://github.com/mermade/aws2openapi",
	"info.x-origin[0].converter.version": "1.0.0",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json",
	"info.x-origin[0].x-apisguru-direct": true,
	"info.x-preferred": true,
	"info.x-providerName": "amazonaws.com",
	"info.x-release": "v4",
	"info.x-serviceName": "budgets",
	"parameters.Action.in": "header",
	"parameters.Action.name": "Action",
	"parameters.Action.required": true,
	"parameters.Action.type": "string",
	"parameters.Version.in": "header",
	"parameters.Version.name": "Version",
	"parameters.Version.required": true,
	"parameters.Version.type": "string",
	"parameters.X-Amz-Algorithm.in": "header",
	"parameters.X-Amz-Algorithm.name": "X-Amz-Algorithm",
	"parameters.X-Amz-Algorithm.required": false,
	"parameters.X-Amz-Algorithm.type": "string",
	"parameters.X-Amz-Content-Sha256.in": "header",
	"parameters.X-Amz-Content-Sha256.name": "X-Amz-Content-Sha256",
	"parameters.X-Amz-Content-Sha256.required": false,
	"parameters.X-Amz-Content-Sha256.type": "string",
	"parameters.X-Amz-Credential.in": "header",
	"parameters.X-Amz-Credential.name": "X-Amz-Credential",
	"parameters.X-Amz-Credential.required": false,
	"parameters.X-Amz-Credential.type": "string",
	"parameters.X-Amz-Date.in": "header",
	"parameters.X-Amz-Date.name": "X-Amz-Date",
	"parameters.X-Amz-Date.required": false,
	"parameters.X-Amz-Date.type": "string",
	"parameters.X-Amz-Security-Token.in": "header",
	"parameters.X-Amz-Security-Token.name": "X-Amz-Security-Token",
	"parameters.X-Amz-Security-Token.required": false,
	"parameters.X-Amz-Security-Token.type": "string",
	"parameters.X-Amz-Signature.in": "header",
	"parameters.X-Amz-Signature.name": "X-Amz-Signature",
	"parameters.X-Amz-Signature.required": false,
	"parameters.X-Amz-Signature.type": "string",
	"parameters.X-Amz-SignedHeaders.in": "header",
	"parameters.X-Amz-SignedHeaders.name": "X-Amz-SignedHeaders",
	"parameters.X-Amz-SignedHeaders.required": false,
	"parameters.X-Amz-SignedHeaders.type": "string",
	"paths./#CreateNotification.parameters.length": 9,
	"paths./#CreateNotification.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateNotification.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateNotification.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateNotification.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateNotification.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateNotification.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateNotification.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateNotification.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateNotification.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateNotification.post.description": "Create a new Notification with subscribers for a budget",
	"paths./#CreateNotification.post.operationId": "CreateNotification",
	"paths./#CreateNotification.post.parameters.length": 1,
	"paths./#CreateNotification.post.parameters[0].in": "body",
	"paths./#CreateNotification.post.parameters[0].name": "body",
	"paths./#CreateNotification.post.parameters[0].required": true,
	"paths./#CreateNotification.post.parameters[0].schema.$ref": "#/definitions/CreateNotificationRequest",
	"paths./#CreateNotification.post.responses.200.description": "Success",
	"paths./#CreateNotification.post.responses.200.schema.$ref": "#/definitions/CreateNotificationResponse",
	"paths./#CreateNotification.post.responses.480.description": "InternalErrorException",
	"paths./#CreateNotification.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#CreateNotification.post.responses.481.description": "InvalidParameterException",
	"paths./#CreateNotification.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#CreateNotification.post.responses.482.description": "NotFoundException",
	"paths./#CreateNotification.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#CreateNotification.post.responses.483.description": "CreationLimitExceededException",
	"paths./#CreateNotification.post.responses.483.schema.$ref": "#/definitions/CreationLimitExceededException",
	"paths./#CreateNotification.post.responses.484.description": "DuplicateRecordException",
	"paths./#CreateNotification.post.responses.484.schema.$ref": "#/definitions/DuplicateRecordException",
	"paths./#CreateSubscriber.parameters.length": 9,
	"paths./#CreateSubscriber.parameters[0].$ref": "#/parameters/Action",
	"paths./#CreateSubscriber.parameters[1].$ref": "#/parameters/Version",
	"paths./#CreateSubscriber.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#CreateSubscriber.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#CreateSubscriber.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#CreateSubscriber.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#CreateSubscriber.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#CreateSubscriber.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#CreateSubscriber.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#CreateSubscriber.post.description": "Create a new Subscriber for a notification",
	"paths./#CreateSubscriber.post.operationId": "CreateSubscriber",
	"paths./#CreateSubscriber.post.parameters.length": 1,
	"paths./#CreateSubscriber.post.parameters[0].in": "body",
	"paths./#CreateSubscriber.post.parameters[0].name": "body",
	"paths./#CreateSubscriber.post.parameters[0].required": true,
	"paths./#CreateSubscriber.post.parameters[0].schema.$ref": "#/definitions/CreateSubscriberRequest",
	"paths./#CreateSubscriber.post.responses.200.description": "Success",
	"paths./#CreateSubscriber.post.responses.200.schema.$ref": "#/definitions/CreateSubscriberResponse",
	"paths./#CreateSubscriber.post.responses.480.description": "InternalErrorException",
	"paths./#CreateSubscriber.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#CreateSubscriber.post.responses.481.description": "InvalidParameterException",
	"paths./#CreateSubscriber.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#CreateSubscriber.post.responses.482.description": "CreationLimitExceededException",
	"paths./#CreateSubscriber.post.responses.482.schema.$ref": "#/definitions/CreationLimitExceededException",
	"paths./#CreateSubscriber.post.responses.483.description": "DuplicateRecordException",
	"paths./#CreateSubscriber.post.responses.483.schema.$ref": "#/definitions/DuplicateRecordException",
	"paths./#CreateSubscriber.post.responses.484.description": "NotFoundException",
	"paths./#CreateSubscriber.post.responses.484.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DeleteBudget.parameters.length": 9,
	"paths./#DeleteBudget.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteBudget.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteBudget.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteBudget.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteBudget.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteBudget.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteBudget.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteBudget.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteBudget.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteBudget.post.description": "Delete a budget and related notifications",
	"paths./#DeleteBudget.post.operationId": "DeleteBudget",
	"paths./#DeleteBudget.post.parameters.length": 1,
	"paths./#DeleteBudget.post.parameters[0].in": "body",
	"paths./#DeleteBudget.post.parameters[0].name": "body",
	"paths./#DeleteBudget.post.parameters[0].required": true,
	"paths./#DeleteBudget.post.parameters[0].schema.$ref": "#/definitions/DeleteBudgetRequest",
	"paths./#DeleteBudget.post.responses.200.description": "Success",
	"paths./#DeleteBudget.post.responses.200.schema.$ref": "#/definitions/DeleteBudgetResponse",
	"paths./#DeleteBudget.post.responses.480.description": "InternalErrorException",
	"paths./#DeleteBudget.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DeleteBudget.post.responses.481.description": "InvalidParameterException",
	"paths./#DeleteBudget.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DeleteBudget.post.responses.482.description": "NotFoundException",
	"paths./#DeleteBudget.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DeleteNotification.parameters.length": 9,
	"paths./#DeleteNotification.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteNotification.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteNotification.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteNotification.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteNotification.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteNotification.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteNotification.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteNotification.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteNotification.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteNotification.post.description": "Delete a notification and related subscribers",
	"paths./#DeleteNotification.post.operationId": "DeleteNotification",
	"paths./#DeleteNotification.post.parameters.length": 1,
	"paths./#DeleteNotification.post.parameters[0].in": "body",
	"paths./#DeleteNotification.post.parameters[0].name": "body",
	"paths./#DeleteNotification.post.parameters[0].required": true,
	"paths./#DeleteNotification.post.parameters[0].schema.$ref": "#/definitions/DeleteNotificationRequest",
	"paths./#DeleteNotification.post.responses.200.description": "Success",
	"paths./#DeleteNotification.post.responses.200.schema.$ref": "#/definitions/DeleteNotificationResponse",
	"paths./#DeleteNotification.post.responses.480.description": "InvalidParameterException",
	"paths./#DeleteNotification.post.responses.480.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DeleteNotification.post.responses.481.description": "InternalErrorException",
	"paths./#DeleteNotification.post.responses.481.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DeleteNotification.post.responses.482.description": "NotFoundException",
	"paths./#DeleteNotification.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DeleteSubscriber.parameters.length": 9,
	"paths./#DeleteSubscriber.parameters[0].$ref": "#/parameters/Action",
	"paths./#DeleteSubscriber.parameters[1].$ref": "#/parameters/Version",
	"paths./#DeleteSubscriber.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DeleteSubscriber.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DeleteSubscriber.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DeleteSubscriber.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DeleteSubscriber.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DeleteSubscriber.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DeleteSubscriber.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DeleteSubscriber.post.description": "Delete a Subscriber for a notification",
	"paths./#DeleteSubscriber.post.operationId": "DeleteSubscriber",
	"paths./#DeleteSubscriber.post.parameters.length": 1,
	"paths./#DeleteSubscriber.post.parameters[0].in": "body",
	"paths./#DeleteSubscriber.post.parameters[0].name": "body",
	"paths./#DeleteSubscriber.post.parameters[0].required": true,
	"paths./#DeleteSubscriber.post.parameters[0].schema.$ref": "#/definitions/DeleteSubscriberRequest",
	"paths./#DeleteSubscriber.post.responses.200.description": "Success",
	"paths./#DeleteSubscriber.post.responses.200.schema.$ref": "#/definitions/DeleteSubscriberResponse",
	"paths./#DeleteSubscriber.post.responses.480.description": "InternalErrorException",
	"paths./#DeleteSubscriber.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DeleteSubscriber.post.responses.481.description": "InvalidParameterException",
	"paths./#DeleteSubscriber.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DeleteSubscriber.post.responses.482.description": "NotFoundException",
	"paths./#DeleteSubscriber.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DescribeBudget.parameters.length": 9,
	"paths./#DescribeBudget.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeBudget.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeBudget.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeBudget.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeBudget.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeBudget.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeBudget.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeBudget.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeBudget.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeBudget.post.description": "Get a single budget",
	"paths./#DescribeBudget.post.operationId": "DescribeBudget",
	"paths./#DescribeBudget.post.parameters.length": 1,
	"paths./#DescribeBudget.post.parameters[0].in": "body",
	"paths./#DescribeBudget.post.parameters[0].name": "body",
	"paths./#DescribeBudget.post.parameters[0].required": true,
	"paths./#DescribeBudget.post.parameters[0].schema.$ref": "#/definitions/DescribeBudgetRequest",
	"paths./#DescribeBudget.post.responses.200.description": "Success",
	"paths./#DescribeBudget.post.responses.200.schema.$ref": "#/definitions/DescribeBudgetResponse",
	"paths./#DescribeBudget.post.responses.480.description": "InternalErrorException",
	"paths./#DescribeBudget.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DescribeBudget.post.responses.481.description": "InvalidParameterException",
	"paths./#DescribeBudget.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DescribeBudget.post.responses.482.description": "NotFoundException",
	"paths./#DescribeBudget.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DescribeBudgets.parameters.length": 9,
	"paths./#DescribeBudgets.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeBudgets.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeBudgets.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeBudgets.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeBudgets.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeBudgets.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeBudgets.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeBudgets.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeBudgets.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeBudgets.post.description": "Get all budgets for an account",
	"paths./#DescribeBudgets.post.operationId": "DescribeBudgets",
	"paths./#DescribeBudgets.post.parameters.length": 1,
	"paths./#DescribeBudgets.post.parameters[0].in": "body",
	"paths./#DescribeBudgets.post.parameters[0].name": "body",
	"paths./#DescribeBudgets.post.parameters[0].required": true,
	"paths./#DescribeBudgets.post.parameters[0].schema.$ref": "#/definitions/DescribeBudgetsRequest",
	"paths./#DescribeBudgets.post.responses.200.description": "Success",
	"paths./#DescribeBudgets.post.responses.200.schema.$ref": "#/definitions/DescribeBudgetsResponse",
	"paths./#DescribeBudgets.post.responses.480.description": "InternalErrorException",
	"paths./#DescribeBudgets.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DescribeBudgets.post.responses.481.description": "InvalidParameterException",
	"paths./#DescribeBudgets.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DescribeBudgets.post.responses.482.description": "NotFoundException",
	"paths./#DescribeBudgets.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DescribeBudgets.post.responses.483.description": "InvalidNextTokenException",
	"paths./#DescribeBudgets.post.responses.483.schema.$ref": "#/definitions/InvalidNextTokenException",
	"paths./#DescribeBudgets.post.responses.484.description": "ExpiredNextTokenException",
	"paths./#DescribeBudgets.post.responses.484.schema.$ref": "#/definitions/ExpiredNextTokenException",
	"paths./#DescribeNotificationsForBudget.parameters.length": 9,
	"paths./#DescribeNotificationsForBudget.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeNotificationsForBudget.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeNotificationsForBudget.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeNotificationsForBudget.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeNotificationsForBudget.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeNotificationsForBudget.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeNotificationsForBudget.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeNotificationsForBudget.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeNotificationsForBudget.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeNotificationsForBudget.post.description": "Get notifications of a budget",
	"paths./#DescribeNotificationsForBudget.post.operationId": "DescribeNotificationsForBudget",
	"paths./#DescribeNotificationsForBudget.post.parameters.length": 1,
	"paths./#DescribeNotificationsForBudget.post.parameters[0].in": "body",
	"paths./#DescribeNotificationsForBudget.post.parameters[0].name": "body",
	"paths./#DescribeNotificationsForBudget.post.parameters[0].required": true,
	"paths./#DescribeNotificationsForBudget.post.parameters[0].schema.$ref": "#/definitions/DescribeNotificationsForBudgetRequest",
	"paths./#DescribeNotificationsForBudget.post.responses.200.description": "Success",
	"paths./#DescribeNotificationsForBudget.post.responses.200.schema.$ref": "#/definitions/DescribeNotificationsForBudgetResponse",
	"paths./#DescribeNotificationsForBudget.post.responses.480.description": "InternalErrorException",
	"paths./#DescribeNotificationsForBudget.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DescribeNotificationsForBudget.post.responses.481.description": "InvalidParameterException",
	"paths./#DescribeNotificationsForBudget.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DescribeNotificationsForBudget.post.responses.482.description": "NotFoundException",
	"paths./#DescribeNotificationsForBudget.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DescribeNotificationsForBudget.post.responses.483.description": "InvalidNextTokenException",
	"paths./#DescribeNotificationsForBudget.post.responses.483.schema.$ref": "#/definitions/InvalidNextTokenException",
	"paths./#DescribeNotificationsForBudget.post.responses.484.description": "ExpiredNextTokenException",
	"paths./#DescribeNotificationsForBudget.post.responses.484.schema.$ref": "#/definitions/ExpiredNextTokenException",
	"paths./#DescribeSubscribersForNotification.parameters.length": 9,
	"paths./#DescribeSubscribersForNotification.parameters[0].$ref": "#/parameters/Action",
	"paths./#DescribeSubscribersForNotification.parameters[1].$ref": "#/parameters/Version",
	"paths./#DescribeSubscribersForNotification.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#DescribeSubscribersForNotification.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#DescribeSubscribersForNotification.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#DescribeSubscribersForNotification.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#DescribeSubscribersForNotification.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#DescribeSubscribersForNotification.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#DescribeSubscribersForNotification.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#DescribeSubscribersForNotification.post.description": "Get subscribers of a notification",
	"paths./#DescribeSubscribersForNotification.post.operationId": "DescribeSubscribersForNotification",
	"paths./#DescribeSubscribersForNotification.post.parameters.length": 1,
	"paths./#DescribeSubscribersForNotification.post.parameters[0].in": "body",
	"paths./#DescribeSubscribersForNotification.post.parameters[0].name": "body",
	"paths./#DescribeSubscribersForNotification.post.parameters[0].required": true,
	"paths./#DescribeSubscribersForNotification.post.parameters[0].schema.$ref": "#/definitions/DescribeSubscribersForNotificationRequest",
	"paths./#DescribeSubscribersForNotification.post.responses.200.description": "Success",
	"paths./#DescribeSubscribersForNotification.post.responses.200.schema.$ref": "#/definitions/DescribeSubscribersForNotificationResponse",
	"paths./#DescribeSubscribersForNotification.post.responses.480.description": "InternalErrorException",
	"paths./#DescribeSubscribersForNotification.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#DescribeSubscribersForNotification.post.responses.481.description": "NotFoundException",
	"paths./#DescribeSubscribersForNotification.post.responses.481.schema.$ref": "#/definitions/NotFoundException",
	"paths./#DescribeSubscribersForNotification.post.responses.482.description": "InvalidParameterException",
	"paths./#DescribeSubscribersForNotification.post.responses.482.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#DescribeSubscribersForNotification.post.responses.483.description": "InvalidNextTokenException",
	"paths./#DescribeSubscribersForNotification.post.responses.483.schema.$ref": "#/definitions/InvalidNextTokenException",
	"paths./#DescribeSubscribersForNotification.post.responses.484.description": "ExpiredNextTokenException",
	"paths./#DescribeSubscribersForNotification.post.responses.484.schema.$ref": "#/definitions/ExpiredNextTokenException",
	"paths./#UpdateBudget.parameters.length": 9,
	"paths./#UpdateBudget.parameters[0].$ref": "#/parameters/Action",
	"paths./#UpdateBudget.parameters[1].$ref": "#/parameters/Version",
	"paths./#UpdateBudget.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#UpdateBudget.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#UpdateBudget.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#UpdateBudget.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#UpdateBudget.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#UpdateBudget.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#UpdateBudget.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#UpdateBudget.post.description": "Update the information of a budget already created",
	"paths./#UpdateBudget.post.operationId": "UpdateBudget",
	"paths./#UpdateBudget.post.parameters.length": 1,
	"paths./#UpdateBudget.post.parameters[0].in": "body",
	"paths./#UpdateBudget.post.parameters[0].name": "body",
	"paths./#UpdateBudget.post.parameters[0].required": true,
	"paths./#UpdateBudget.post.parameters[0].schema.$ref": "#/definitions/UpdateBudgetRequest",
	"paths./#UpdateBudget.post.responses.200.description": "Success",
	"paths./#UpdateBudget.post.responses.200.schema.$ref": "#/definitions/UpdateBudgetResponse",
	"paths./#UpdateBudget.post.responses.480.description": "InternalErrorException",
	"paths./#UpdateBudget.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#UpdateBudget.post.responses.481.description": "InvalidParameterException",
	"paths./#UpdateBudget.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#UpdateBudget.post.responses.482.description": "NotFoundException",
	"paths./#UpdateBudget.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#UpdateNotification.parameters.length": 9,
	"paths./#UpdateNotification.parameters[0].$ref": "#/parameters/Action",
	"paths./#UpdateNotification.parameters[1].$ref": "#/parameters/Version",
	"paths./#UpdateNotification.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#UpdateNotification.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#UpdateNotification.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#UpdateNotification.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#UpdateNotification.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#UpdateNotification.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#UpdateNotification.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#UpdateNotification.post.description": "Update the information about a notification already created",
	"paths./#UpdateNotification.post.operationId": "UpdateNotification",
	"paths./#UpdateNotification.post.parameters.length": 1,
	"paths./#UpdateNotification.post.parameters[0].in": "body",
	"paths./#UpdateNotification.post.parameters[0].name": "body",
	"paths./#UpdateNotification.post.parameters[0].required": true,
	"paths./#UpdateNotification.post.parameters[0].schema.$ref": "#/definitions/UpdateNotificationRequest",
	"paths./#UpdateNotification.post.responses.200.description": "Success",
	"paths./#UpdateNotification.post.responses.200.schema.$ref": "#/definitions/UpdateNotificationResponse",
	"paths./#UpdateNotification.post.responses.480.description": "InternalErrorException",
	"paths./#UpdateNotification.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#UpdateNotification.post.responses.481.description": "InvalidParameterException",
	"paths./#UpdateNotification.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#UpdateNotification.post.responses.482.description": "NotFoundException",
	"paths./#UpdateNotification.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#UpdateNotification.post.responses.483.description": "DuplicateRecordException",
	"paths./#UpdateNotification.post.responses.483.schema.$ref": "#/definitions/DuplicateRecordException",
	"paths./#UpdateSubscriber.parameters.length": 9,
	"paths./#UpdateSubscriber.parameters[0].$ref": "#/parameters/Action",
	"paths./#UpdateSubscriber.parameters[1].$ref": "#/parameters/Version",
	"paths./#UpdateSubscriber.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./#UpdateSubscriber.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./#UpdateSubscriber.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./#UpdateSubscriber.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./#UpdateSubscriber.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./#UpdateSubscriber.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./#UpdateSubscriber.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./#UpdateSubscriber.post.description": "Update a subscriber",
	"paths./#UpdateSubscriber.post.operationId": "UpdateSubscriber",
	"paths./#UpdateSubscriber.post.parameters.length": 1,
	"paths./#UpdateSubscriber.post.parameters[0].in": "body",
	"paths./#UpdateSubscriber.post.parameters[0].name": "body",
	"paths./#UpdateSubscriber.post.parameters[0].required": true,
	"paths./#UpdateSubscriber.post.parameters[0].schema.$ref": "#/definitions/UpdateSubscriberRequest",
	"paths./#UpdateSubscriber.post.responses.200.description": "Success",
	"paths./#UpdateSubscriber.post.responses.200.schema.$ref": "#/definitions/UpdateSubscriberResponse",
	"paths./#UpdateSubscriber.post.responses.480.description": "InternalErrorException",
	"paths./#UpdateSubscriber.post.responses.480.schema.$ref": "#/definitions/InternalErrorException",
	"paths./#UpdateSubscriber.post.responses.481.description": "InvalidParameterException",
	"paths./#UpdateSubscriber.post.responses.481.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./#UpdateSubscriber.post.responses.482.description": "NotFoundException",
	"paths./#UpdateSubscriber.post.responses.482.schema.$ref": "#/definitions/NotFoundException",
	"paths./#UpdateSubscriber.post.responses.483.description": "DuplicateRecordException",
	"paths./#UpdateSubscriber.post.responses.483.schema.$ref": "#/definitions/DuplicateRecordException",
	"paths./.parameters.length": 9,
	"paths./.parameters[0].$ref": "#/parameters/Action",
	"paths./.parameters[1].$ref": "#/parameters/Version",
	"paths./.parameters[2].$ref": "#/parameters/X-Amz-Content-Sha256",
	"paths./.parameters[3].$ref": "#/parameters/X-Amz-Date",
	"paths./.parameters[4].$ref": "#/parameters/X-Amz-Algorithm",
	"paths./.parameters[5].$ref": "#/parameters/X-Amz-Credential",
	"paths./.parameters[6].$ref": "#/parameters/X-Amz-Security-Token",
	"paths./.parameters[7].$ref": "#/parameters/X-Amz-Signature",
	"paths./.parameters[8].$ref": "#/parameters/X-Amz-SignedHeaders",
	"paths./.post.description": "Create a new budget",
	"paths./.post.operationId": "CreateBudget",
	"paths./.post.parameters.length": 1,
	"paths./.post.parameters[0].in": "body",
	"paths./.post.parameters[0].name": "body",
	"paths./.post.parameters[0].required": true,
	"paths./.post.parameters[0].schema.$ref": "#/definitions/CreateBudgetRequest",
	"paths./.post.responses.200.description": "Success",
	"paths./.post.responses.200.schema.$ref": "#/definitions/CreateBudgetResponse",
	"paths./.post.responses.480.description": "InvalidParameterException",
	"paths./.post.responses.480.schema.$ref": "#/definitions/InvalidParameterException",
	"paths./.post.responses.481.description": "InternalErrorException",
	"paths./.post.responses.481.schema.$ref": "#/definitions/InternalErrorException",
	"paths./.post.responses.482.description": "CreationLimitExceededException",
	"paths./.post.responses.482.schema.$ref": "#/definitions/CreationLimitExceededException",
	"paths./.post.responses.483.description": "DuplicateRecordException",
	"paths./.post.responses.483.schema.$ref": "#/definitions/DuplicateRecordException",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "http",
	"security.length": 1,
	"securityDefinitions.hmac.description": "Amazon Signature authorization v4",
	"securityDefinitions.hmac.in": "header",
	"securityDefinitions.hmac.name": "Authorization",
	"securityDefinitions.hmac.type": "apiKey",
	"securityDefinitions.hmac.x-amazon-apigateway-authtype": "awsSigv4",
	"security[0].hmac.length": 0,
	"swagger": "2.0",
	"x-hasEquivalentPaths": true
}