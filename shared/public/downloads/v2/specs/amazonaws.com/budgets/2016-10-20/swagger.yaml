swagger: '2.0'
schemes:
  - http
host: budgets.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: All public APIs for AWS Budgets
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Budgets
  version: '2016-10-20'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: budgets
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/budgets/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new budget
      operationId: CreateBudget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateBudgetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBudgetResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '482':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
  '/#CreateNotification':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new Notification with subscribers for a budget
      operationId: CreateNotification
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotificationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '484':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
  '/#CreateSubscriber':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new Subscriber for a notification
      operationId: CreateSubscriber
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSubscriberRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#DeleteBudget':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Delete a budget and related notifications
      operationId: DeleteBudget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBudgetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#DeleteNotification':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Delete a notification and related subscribers
      operationId: DeleteNotification
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotificationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNotificationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#DeleteSubscriber':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Delete a Subscriber for a notification
      operationId: DeleteSubscriber
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSubscriberRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#DescribeBudget':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Get a single budget
      operationId: DescribeBudget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBudgetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#DescribeBudgets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Get all budgets for an account
      operationId: DescribeBudgets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBudgetsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBudgetsResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
  '/#DescribeNotificationsForBudget':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Get notifications of a budget
      operationId: DescribeNotificationsForBudget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotificationsForBudgetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotificationsForBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
  '/#DescribeSubscribersForNotification':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Get subscribers of a notification
      operationId: DescribeSubscribersForNotification
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSubscribersForNotificationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSubscribersForNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
  '/#UpdateBudget':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Update the information of a budget already created
      operationId: UpdateBudget
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBudgetRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
  '/#UpdateNotification':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Update the information about a notification already created
      operationId: UpdateNotification
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotificationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
  '/#UpdateSubscriber':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Update a subscriber
      operationId: UpdateSubscriber
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriberRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
definitions:
  AccountId:
    description: Account Id of the customer. It should be a 12 digit number.
    maxLength: 12
    minLength: 12
    type: string
  Budget:
    description: AWS Budget model
    properties:
      BudgetLimit:
        $ref: '#/definitions/Spend'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      BudgetType:
        $ref: '#/definitions/BudgetType'
      CalculatedSpend:
        $ref: '#/definitions/CalculatedSpend'
      CostFilters:
        $ref: '#/definitions/CostFilters'
      CostTypes:
        $ref: '#/definitions/CostTypes'
      TimePeriod:
        $ref: '#/definitions/TimePeriod'
      TimeUnit:
        $ref: '#/definitions/TimeUnit'
    required:
      - BudgetName
      - BudgetLimit
      - CostTypes
      - TimeUnit
      - TimePeriod
      - BudgetType
    type: object
  BudgetName:
    description: 'A string represents the budget name. No ":" and "\" character is allowed.'
    maxLength: 100
    pattern: '[^:\\]+'
    type: string
  BudgetType:
    description: 'The type of a budget. It should be COST, USAGE, or RI_UTILIZATION.'
    enum:
      - USAGE
      - COST
      - RI_UTILIZATION
    type: string
  Budgets:
    description: A list of budgets
    items:
      $ref: '#/definitions/Budget'
    type: array
  CalculatedSpend:
    description: A structure that holds the actual and forecasted spend for a budget.
    properties:
      ActualSpend:
        $ref: '#/definitions/Spend'
      ForecastedSpend:
        $ref: '#/definitions/Spend'
    required:
      - ActualSpend
    type: object
  ComparisonOperator:
    description: 'The comparison operator of a notification. Currently we support less than, equal to and greater than.'
    enum:
      - GREATER_THAN
      - LESS_THAN
      - EQUAL_TO
    type: string
  CostFilters:
    description: A map that represents the cost filters applied to the budget.
    items:
      properties:
        key:
          $ref: '#/definitions/GenericString'
        value:
          $ref: '#/definitions/DimensionValues'
      type: object
    type: array
  CostTypes:
    description: This includes the options for getting the cost of a budget.
    properties:
      IncludeSubscription:
        $ref: '#/definitions/GenericBoolean'
      IncludeTax:
        $ref: '#/definitions/GenericBoolean'
      UseBlended:
        $ref: '#/definitions/GenericBoolean'
    required:
      - IncludeTax
      - IncludeSubscription
      - UseBlended
    type: object
  CreateBudgetRequest:
    description: Request of CreateBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      Budget:
        $ref: '#/definitions/Budget'
      NotificationsWithSubscribers:
        $ref: '#/definitions/NotificationWithSubscribersList'
    required:
      - AccountId
      - Budget
    type: object
  CreateBudgetResponse:
    description: Response of CreateBudget
    properties: {}
    type: object
  CreateNotificationRequest:
    description: Request of CreateNotification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      Notification:
        $ref: '#/definitions/Notification'
      Subscribers:
        $ref: '#/definitions/Subscribers'
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscribers
    type: object
  CreateNotificationResponse:
    description: Response of CreateNotification
    properties: {}
    type: object
  CreateSubscriberRequest:
    description: Request of CreateSubscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      Notification:
        $ref: '#/definitions/Notification'
      Subscriber:
        $ref: '#/definitions/Subscriber'
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
    type: object
  CreateSubscriberResponse:
    description: Response of CreateSubscriber
    properties: {}
    type: object
  CreationLimitExceededException:
    description: 'The exception is thrown when customer tries to create a record (e.g. budget), but the number this record already exceeds the limitation.'
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  DeleteBudgetRequest:
    description: Request of DeleteBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
    required:
      - AccountId
      - BudgetName
    type: object
  DeleteBudgetResponse:
    description: Response of DeleteBudget
    properties: {}
    type: object
  DeleteNotificationRequest:
    description: Request of DeleteNotification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      Notification:
        $ref: '#/definitions/Notification'
    required:
      - AccountId
      - BudgetName
      - Notification
    type: object
  DeleteNotificationResponse:
    description: Response of DeleteNotification
    properties: {}
    type: object
  DeleteSubscriberRequest:
    description: Request of DeleteSubscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      Notification:
        $ref: '#/definitions/Notification'
      Subscriber:
        $ref: '#/definitions/Subscriber'
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
    type: object
  DeleteSubscriberResponse:
    description: Response of DeleteSubscriber
    properties: {}
    type: object
  DescribeBudgetRequest:
    description: Request of DescribeBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
    required:
      - AccountId
      - BudgetName
    type: object
  DescribeBudgetResponse:
    description: Response of DescribeBudget
    properties:
      Budget:
        $ref: '#/definitions/Budget'
    type: object
  DescribeBudgetsRequest:
    description: Request of DescribeBudgets
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      MaxResults:
        $ref: '#/definitions/MaxResults'
      NextToken:
        $ref: '#/definitions/GenericString'
    required:
      - AccountId
    type: object
  DescribeBudgetsResponse:
    description: Response of DescribeBudgets
    properties:
      Budgets:
        $ref: '#/definitions/Budgets'
      NextToken:
        $ref: '#/definitions/GenericString'
    type: object
  DescribeNotificationsForBudgetRequest:
    description: Request of DescribeNotificationsForBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      MaxResults:
        $ref: '#/definitions/MaxResults'
      NextToken:
        $ref: '#/definitions/GenericString'
    required:
      - AccountId
      - BudgetName
    type: object
  DescribeNotificationsForBudgetResponse:
    description: Response of GetNotificationsForBudget
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
      Notifications:
        $ref: '#/definitions/Notifications'
    type: object
  DescribeSubscribersForNotificationRequest:
    description: Request of DescribeSubscribersForNotification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      MaxResults:
        $ref: '#/definitions/MaxResults'
      NextToken:
        $ref: '#/definitions/GenericString'
      Notification:
        $ref: '#/definitions/Notification'
    required:
      - AccountId
      - BudgetName
      - Notification
    type: object
  DescribeSubscribersForNotificationResponse:
    description: Response of DescribeSubscribersForNotification
    properties:
      NextToken:
        $ref: '#/definitions/GenericString'
      Subscribers:
        $ref: '#/definitions/Subscribers'
    type: object
  DimensionValues:
    items:
      $ref: '#/definitions/GenericString'
    type: array
  DuplicateRecordException:
    description: The exception is thrown when customer tries to create a record (e.g. budget) that already exists.
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  ExpiredNextTokenException:
    description: This exception is thrown if the paging token is expired - past its TTL
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  GenericBoolean:
    description: A generic boolean value.
    type: boolean
  GenericString:
    description: A generic String.
    type: string
  GenericTimestamp:
    description: A generic timestamp. In Java it is transformed to a Date object.
    format: date-time
    type: string
  InternalErrorException:
    description: This exception is thrown on an unknown internal failure.
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  InvalidNextTokenException:
    description: 'This exception is thrown if paging token signature didn''t match the token, or the paging token isn''t for this request'
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  InvalidParameterException:
    description: 'This exception is thrown if any request is given an invalid parameter. E.g., if a required Date field is null.'
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  MaxResults:
    description: An integer to represent how many entries a paginated response contains. Maximum is set to 100.
    maximum: 100
    minimum: 1
    type: integer
  NotFoundException:
    description: 'This exception is thrown if a requested entity is not found. E.g., if a budget id doesn''t exist for an account ID.'
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    type: object
  Notification:
    description: Notification model. Each budget may contain multiple notifications with different settings.
    properties:
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
      NotificationType:
        $ref: '#/definitions/NotificationType'
      Threshold:
        $ref: '#/definitions/NotificationThreshold'
      ThresholdType:
        $ref: '#/definitions/ThresholdType'
    required:
      - NotificationType
      - ComparisonOperator
      - Threshold
    type: object
  NotificationThreshold:
    description: 'The threshold of a notification. It should be a number between 0 and 1,000,000,000.'
    format: double
    maximum: 1000000000
    minimum: 0.1
    type: number
  NotificationType:
    description: The type of a notification. It should be ACTUAL or FORECASTED.
    enum:
      - ACTUAL
      - FORECASTED
    type: string
  NotificationWithSubscribers:
    description: A structure to relate notification and a list of subscribers who belong to the notification.
    properties:
      Notification:
        $ref: '#/definitions/Notification'
      Subscribers:
        $ref: '#/definitions/Subscribers'
    required:
      - Notification
      - Subscribers
    type: object
  NotificationWithSubscribersList:
    description: 'A list of Notifications, each with a list of subscribers.'
    items:
      $ref: '#/definitions/NotificationWithSubscribers'
    maxItems: 5
    type: array
  Notifications:
    description: A list of notifications.
    items:
      $ref: '#/definitions/Notification'
    type: array
  NumericValue:
    description: A string to represent NumericValue.
    pattern: '[0-9]*(\.)?[0-9]+'
    type: string
  Spend:
    description: A structure that represents either a cost spend or usage spend. Contains an amount and a unit.
    properties:
      Amount:
        $ref: '#/definitions/NumericValue'
      Unit:
        $ref: '#/definitions/UnitValue'
    required:
      - Amount
      - Unit
    type: object
  Subscriber:
    description: Subscriber model. Each notification may contain multiple subscribers with different addresses.
    properties:
      Address:
        $ref: '#/definitions/GenericString'
      SubscriptionType:
        $ref: '#/definitions/SubscriptionType'
    required:
      - SubscriptionType
      - Address
    type: object
  Subscribers:
    description: A list of subscribers.
    items:
      $ref: '#/definitions/Subscriber'
    maxItems: 11
    minItems: 1
    type: array
  SubscriptionType:
    description: The subscription type of the subscriber. It can be SMS or EMAIL.
    enum:
      - SNS
      - EMAIL
    type: string
  ThresholdType:
    description: The type of threshold for a notification. It can be PERCENTAGE or ABSOLUTE_VALUE.
    enum:
      - PERCENTAGE
      - ABSOLUTE_VALUE
    type: string
  TimePeriod:
    description: A time period indicating the start date and end date of a budget.
    properties:
      End:
        $ref: '#/definitions/GenericTimestamp'
      Start:
        $ref: '#/definitions/GenericTimestamp'
    required:
      - Start
      - End
    type: object
  TimeUnit:
    description: 'The time unit of the budget. e.g. MONTHLY, QUARTERLY, etc.'
    enum:
      - DAILY
      - MONTHLY
      - QUARTERLY
      - ANNUALLY
    type: string
  UnitValue:
    description: A string to represent budget spend unit. It should be not null and not empty.
    minLength: 1
    type: string
  UpdateBudgetRequest:
    description: Request of UpdateBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      NewBudget:
        $ref: '#/definitions/Budget'
    required:
      - AccountId
      - NewBudget
    type: object
  UpdateBudgetResponse:
    description: Response of UpdateBudget
    properties: {}
    type: object
  UpdateNotificationRequest:
    description: Request of UpdateNotification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      NewNotification:
        $ref: '#/definitions/Notification'
      OldNotification:
        $ref: '#/definitions/Notification'
    required:
      - AccountId
      - BudgetName
      - OldNotification
      - NewNotification
    type: object
  UpdateNotificationResponse:
    description: Response of UpdateNotification
    properties: {}
    type: object
  UpdateSubscriberRequest:
    description: Request of UpdateSubscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BudgetName:
        $ref: '#/definitions/BudgetName'
      NewSubscriber:
        $ref: '#/definitions/Subscriber'
      Notification:
        $ref: '#/definitions/Notification'
      OldSubscriber:
        $ref: '#/definitions/Subscriber'
    required:
      - AccountId
      - BudgetName
      - Notification
      - OldSubscriber
      - NewSubscriber
    type: object
  UpdateSubscriberResponse:
    description: Response of UpdateSubscriber
    properties: {}
    type: object
  errorMessage:
    description: The error message the exception carries.
    type: string
