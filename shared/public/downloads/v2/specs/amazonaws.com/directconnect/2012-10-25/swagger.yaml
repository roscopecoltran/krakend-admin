swagger: '2.0'
schemes:
  - http
host: directconnect.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: 'AWS Direct Connect links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. With this connection in place, you can create virtual interfaces directly to the AWS cloud (for example, to Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3)) and to Amazon Virtual Private Cloud (Amazon VPC), bypassing Internet service providers in your network path. An AWS Direct Connect location provides access to AWS in the region it is associated with, as well as access to other US regions. For example, you can provision a single connection to any AWS Direct Connect location in the US and use it to access public AWS services in all US Regions and AWS GovCloud (US).'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Direct Connect
  version: '2012-10-25'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/directconnect-2012-10-25.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: directconnect
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/directconnect/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deprecated in favor of <a>AllocateHostedConnection</a>.</p> <p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      operationId: AllocateConnectionOnInterconnect
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AllocateConnectionOnInterconnectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AllocateHostedConnection':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a hosted connection on an interconnect or a link aggregation group (LAG).</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect or LAG.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      operationId: AllocateHostedConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AllocateHostedConnectionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AllocatePrivateVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Provisions a private virtual interface to be owned by another AWS customer.</p> <p>Virtual interfaces created using this action must be confirmed by the virtual interface owner by using the <a>ConfirmPrivateVirtualInterface</a> action. Until then, the virtual interface will be in ''Confirming'' state, and will not be available for handling traffic.</p>'
      operationId: AllocatePrivateVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AllocatePrivateVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterface'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AllocatePublicVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Provisions a public virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in ''Confirming'' state, and will not be available for handling traffic.</p> <p>When creating an IPv6 public virtual interface (addressFamily is ''ipv6''), the customer and amazon address fields should be left blank to use auto-assigned IPv6 space. Custom IPv6 Addresses are currently not supported.</p>'
      operationId: AllocatePublicVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AllocatePublicVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterface'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AssociateConnectionWithLag':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Associates an existing connection with a link aggregation group (LAG). The connection is interrupted and re-established as a member of the LAG (connectivity to AWS will be interrupted). The connection must be hosted on the same AWS Direct Connect endpoint as the LAG, and its bandwidth must match the bandwidth for the LAG. You can reassociate a connection that''s currently associated with a different LAG; however, if removing the connection will cause the original LAG to fall below its setting for minimum number of operational connections, the request fails.</p> <p>Any virtual interfaces that are directly associated with the connection are automatically re-associated with the LAG. If the connection was originally associated with a different LAG, the virtual interfaces remain associated with the original LAG.</p> <p>For interconnects, any hosted connections are automatically re-associated with the LAG. If the interconnect was originally associated with a different LAG, the hosted connections remain associated with the original LAG.</p>'
      operationId: AssociateConnectionWithLag
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateConnectionWithLagRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AssociateHostedConnection':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Associates a hosted connection and its virtual interfaces with a link aggregation group (LAG) or interconnect. If the target interconnect or LAG has an existing hosted connection with a conflicting VLAN number or IP address, the operation fails. This action temporarily interrupts the hosted connection''s connectivity to AWS as it is being migrated.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>'
      operationId: AssociateHostedConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateHostedConnectionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#AssociateVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Associates a virtual interface with a specified link aggregation group (LAG) or connection. Connectivity to AWS is temporarily interrupted as the virtual interface is being migrated. If the target connection or LAG has an associated virtual interface with a conflicting VLAN number or a conflicting IP address, the operation fails. </p> <p>Virtual interfaces associated with a hosted connection cannot be associated with a LAG; hosted connections must be migrated along with their virtual interfaces using <a>AssociateHostedConnection</a>.</p> <p>Hosted virtual interfaces (an interface for which the owner of the connection is not the owner of physical connection) can only be reassociated by the owner of the physical connection.</p>'
      operationId: AssociateVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterface'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#ConfirmConnection':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Confirm the creation of a hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the ''Ordering'' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>'
      operationId: ConfirmConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmConnectionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmConnectionResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#ConfirmPrivateVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Accept ownership of a private virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the virtual interface will be created and attached to the given virtual private gateway, and will be available for handling traffic.</p>'
      operationId: ConfirmPrivateVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmPrivateVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmPrivateVirtualInterfaceResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#ConfirmPublicVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Accept ownership of a public virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>'
      operationId: ConfirmPublicVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmPublicVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmPublicVirtualInterfaceResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreateBGPPeer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a new BGP peer on a specified virtual interface. The BGP peer cannot be in the same address family (IPv4/IPv6) of an existing BGP peer on the virtual interface.</p> <p>You must create a BGP peer for the corresponding address family in order to access AWS resources that also use that address family.</p> <p>When creating a IPv6 BGP peer, the Amazon address and customer address fields must be left blank. IPv6 addresses are automatically assigned from Amazon''s pool of IPv6 addresses; you cannot specify custom IPv6 addresses.</p> <p>For a public virtual interface, the Autonomous System Number (ASN) must be private or already whitelisted for the virtual interface.</p>'
      operationId: CreateBGPPeer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateBGPPeerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBGPPeerResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreateConnection':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p> <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p> <p>You can automatically add the new connection to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new connection is allocated on the same AWS Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no connection will be created.</p>'
      operationId: CreateConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateConnectionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreateInterconnect':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a new interconnect between a AWS Direct Connect partner''s network and a specific AWS Direct Connect location.</p> <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner''s network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner''s router, the other to an AWS Direct Connect router.</p> <p>You can automatically add the new interconnect to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new interconnect is allocated on the same AWS Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no interconnect will be created.</p> <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>'
      operationId: CreateInterconnect
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateInterconnectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Interconnect'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreateLag':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a new link aggregation group (LAG) with the specified number of bundled physical connections between the customer network and a specific AWS Direct Connect location. A LAG is a logical interface that uses the Link Aggregation Control Protocol (LACP) to aggregate multiple 1 gigabit or 10 gigabit interfaces, allowing you to treat them as a single interface.</p> <p>All connections in a LAG must use the same bandwidth (for example, 10 Gbps), and must terminate at the same AWS Direct Connect endpoint.</p> <p>You can have up to 10 connections per LAG. Regardless of this limit, if you request more connections for the LAG than AWS Direct Connect can allocate on a single endpoint, no LAG is created.</p> <p>You can specify an existing physical connection or interconnect to include in the LAG (which counts towards the total number of connections). Doing so interrupts the current physical connection or hosted connections, and re-establishes them as a member of the LAG. The LAG will be created on the same AWS Direct Connect endpoint to which the connection terminates. Any virtual interfaces associated with the connection are automatically disassociated and re-associated with the LAG. The connection ID does not change.</p> <p>If the AWS account used to create a LAG is a registered AWS Direct Connect partner, the LAG is automatically enabled to host sub-connections. For a LAG owned by a partner, any associated virtual interfaces cannot be directly configured.</p>'
      operationId: CreateLag
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLagRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lag'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreatePrivateVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).
      operationId: CreatePrivateVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePrivateVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterface'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#CreatePublicVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p> <p>When creating an IPv6 public virtual interface (addressFamily is ''ipv6''), the customer and amazon address fields should be left blank to use auto-assigned IPv6 space. Custom IPv6 Addresses are currently not supported.</p>'
      operationId: CreatePublicVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePublicVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterface'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DeleteBGPPeer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a BGP peer on the specified virtual interface that matches the specified customer address and ASN. You cannot delete the last BGP peer from a virtual interface.
      operationId: DeleteBGPPeer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBGPPeerRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBGPPeerResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DeleteConnection':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the connection.</p> <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>
      operationId: DeleteConnection
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConnectionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DeleteInterconnect':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified interconnect.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      operationId: DeleteInterconnect
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInterconnectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInterconnectResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DeleteLag':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a link aggregation group (LAG). You cannot delete a LAG if it has active virtual interfaces or hosted connections.
      operationId: DeleteLag
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLagRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lag'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DeleteVirtualInterface':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a virtual interface.
      operationId: DeleteVirtualInterface
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVirtualInterfaceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteVirtualInterfaceResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeConnectionLoa':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deprecated in favor of <a>DescribeLoa</a>.</p> <p>Returns the LOA-CFA for a Connection.</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that your APN partner or service provider uses when establishing your cross connect to AWS at the colocation facility. For more information, see <a href="http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>'
      operationId: DescribeConnectionLoa
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConnectionLoaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConnectionLoaResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeConnections':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Displays all connections in this region.</p> <p>If a connection ID is provided, the call returns only that particular connection.</p>'
      operationId: DescribeConnections
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConnectionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connections'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeConnectionsOnInterconnect':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deprecated in favor of <a>DescribeHostedConnections</a>.</p> <p>Returns a list of connections that have been provisioned on the given interconnect.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      operationId: DescribeConnectionsOnInterconnect
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConnectionsOnInterconnectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connections'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeHostedConnections':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Returns a list of hosted connections that have been provisioned on the given interconnect or link aggregation group (LAG).</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      operationId: DescribeHostedConnections
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeHostedConnectionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connections'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeInterconnectLoa':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deprecated in favor of <a>DescribeLoa</a>.</p> <p>Returns the LOA-CFA for an Interconnect.</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to AWS at the colocation facility. For more information, see <a href="http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>'
      operationId: DescribeInterconnectLoa
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInterconnectLoaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInterconnectLoaResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeInterconnects':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a list of interconnects owned by the AWS account.</p> <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>'
      operationId: DescribeInterconnects
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInterconnectsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Interconnects'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeLags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the link aggregation groups (LAGs) in your account. </p> <p>If a LAG ID is provided, only information about the specified LAG is returned.</p>'
      operationId: DescribeLags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lags'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeLoa':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).</p> <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to AWS at the colocation facility. For more information, see <a href="http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>'
      operationId: DescribeLoa
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoaRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Loa'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeLocations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling CreateConnection or CreateInterconnect.
      operationId: DescribeLocations
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Locations'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the tags associated with the specified Direct Connect resources.
      operationId: DescribeTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeVirtualGateways':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a list of virtual private gateways owned by the AWS account.</p> <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html">EC2 CreateVpnGateway</a> action.</p>'
      operationId: DescribeVirtualGateways
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualGateways'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DescribeVirtualInterfaces':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer than 15 minutes before you make the request are also returned. If you specify a connection ID, only the virtual interfaces associated with the connection are returned. If you specify a virtual interface ID, then only a single virtual interface is returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>'
      operationId: DescribeVirtualInterfaces
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeVirtualInterfacesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VirtualInterfaces'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#DisassociateConnectionFromLag':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Disassociates a connection from a link aggregation group (LAG). The connection is interrupted and re-established as a standalone connection (the connection is not deleted; to delete the connection, use the <a>DeleteConnection</a> request). If the LAG has associated virtual interfaces or hosted connections, they remain associated with the LAG. A disassociated connection owned by an AWS Direct Connect partner is automatically converted to an interconnect.</p> <p>If disassociating the connection will cause the LAG to fall below its setting for minimum number of operational connections, the request fails, except when it''s the last member of the LAG. If all connections are disassociated, the LAG continues to exist as an empty LAG with no physical connections. </p>'
      operationId: DisassociateConnectionFromLag
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateConnectionFromLagRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Connection'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#TagResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified tags to the specified Direct Connect resource. Each Direct Connect resource can have a maximum of 50 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the Direct Connect resource, this action updates its value.</p>'
      operationId: TagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '483':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#UntagResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes one or more tags from the specified Direct Connect resource.
      operationId: UntagResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
  '/#UpdateLag':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Updates the attributes of a link aggregation group (LAG). </p> <p>You can update the following attributes: </p> <ul> <li> <p>The name of the LAG.</p> </li> <li> <p>The value for the minimum number of connections that must be operational for the LAG itself to be operational. </p> </li> </ul> <p>When you create a LAG, the default value for the minimum number of operational connections is zero (0). If you update this value, and the number of operational connections falls below the specified value, the LAG will automatically go down to avoid overutilization of the remaining connections. Adjusting this value should be done with care as it could force the LAG down if the value is set higher than the current number of operational connections.</p>'
      operationId: UpdateLag
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLagRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Lag'
        '480':
          description: DirectConnectServerException
          schema:
            $ref: '#/definitions/DirectConnectServerException'
        '481':
          description: DirectConnectClientException
          schema:
            $ref: '#/definitions/DirectConnectClientException'
definitions:
  ASN:
    description: '<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>Example: 65000</p>'
    type: integer
  AddressFamily:
    description: '<p>Indicates the address family for the BGP peer.</p> <ul> <li> <p> <b>ipv4</b>: IPv4 address family</p> </li> <li> <p> <b>ipv6</b>: IPv6 address family</p> </li> </ul>'
    enum:
      - ipv4
      - ipv6
    type: string
  AllocateConnectionOnInterconnectRequest:
    description: Container for the parameters to the AllocateConnectionOnInterconnect operation.
    properties:
      bandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>Bandwidth of the connection.</p> <p>Example: "<i>500Mbps</i>"</p> <p>Default: None</p> <p>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</p>'
      connectionName:
        $ref: '#/definitions/ConnectionName'
        description: '<p>Name of the provisioned connection.</p> <p>Example: "<i>500M Connection to AWS</i>"</p> <p>Default: None</p>'
      interconnectId:
        $ref: '#/definitions/InterconnectId'
        description: '<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: '<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>'
      vlan:
        $ref: '#/definitions/VLAN'
        description: '<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>'
    required:
      - bandwidth
      - connectionName
      - ownerAccount
      - interconnectId
      - vlan
    type: object
  AllocateHostedConnectionRequest:
    description: Container for the parameters to theHostedConnection operation.
    properties:
      bandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>The bandwidth of the connection.</p> <p>Example: <code>500Mbps</code> </p> <p>Default: None</p> <p>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</p>'
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the interconnect or LAG on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78 or dxlag-abc123</p> <p>Default: None</p>'
      connectionName:
        $ref: '#/definitions/ConnectionName'
        description: '<p>The name of the provisioned connection.</p> <p>Example: "<code>500M Connection to AWS</code>"</p> <p>Default: None</p>'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: '<p>The numeric account ID of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>'
      vlan:
        $ref: '#/definitions/VLAN'
        description: '<p>The dedicated VLAN provisioned to the hosted connection.</p> <p>Example: 101</p> <p>Default: None</p>'
    required:
      - connectionId
      - ownerAccount
      - bandwidth
      - connectionName
      - vlan
    type: object
  AllocatePrivateVirtualInterfaceRequest:
    description: Container for the parameters to the AllocatePrivateVirtualInterface operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>'
      newPrivateVirtualInterfaceAllocation:
        $ref: '#/definitions/NewPrivateVirtualInterfaceAllocation'
        description: '<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: '<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>'
    required:
      - connectionId
      - ownerAccount
      - newPrivateVirtualInterfaceAllocation
    type: object
  AllocatePublicVirtualInterfaceRequest:
    description: Container for the parameters to the AllocatePublicVirtualInterface operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>'
      newPublicVirtualInterfaceAllocation:
        $ref: '#/definitions/NewPublicVirtualInterfaceAllocation'
        description: '<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: '<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>'
    required:
      - connectionId
      - ownerAccount
      - newPublicVirtualInterfaceAllocation
    type: object
  AmazonAddress:
    description: '<p>IP address assigned to the Amazon interface.</p> <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>'
    type: string
  AssociateConnectionWithLagRequest:
    description: Container for the parameters to the AssociateConnectionWithLag operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the connection.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>'
      lagId:
        $ref: '#/definitions/LagId'
        description: '<p>The ID of the LAG with which to associate the connection.</p> <p>Example: dxlag-abc123</p> <p>Default: None</p>'
    required:
      - connectionId
      - lagId
    type: object
  AssociateHostedConnectionRequest:
    description: Container for the parameters to the AssociateHostedConnection operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the hosted connection.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>'
      parentConnectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the interconnect or the LAG.</p> <p>Example: dxcon-abc123 or dxlag-abc123</p> <p>Default: None</p>'
    required:
      - connectionId
      - parentConnectionId
    type: object
  AssociateVirtualInterfaceRequest:
    description: Container for the parameters to the AssociateVirtualInterface operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the LAG or connection with which to associate the virtual interface.</p> <p>Example: dxlag-abc123 or dxcon-abc123</p> <p>Default: None</p>'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
        description: '<p>The ID of the virtual interface.</p> <p>Example: dxvif-123dfg56</p> <p>Default: None</p>'
    required:
      - virtualInterfaceId
      - connectionId
    type: object
  AwsDevice:
    description: '<p>An abstract ID for the physical Direct Connect endpoint.</p> <p>Example: EQC50-abcdef123456</p>'
    type: string
  BGPAuthKey:
    description: '<p>The authentication key for BGP configuration.</p> <p>Example: asdf34example</p>'
    type: string
  BGPPeer:
    description: A structure containing information about a BGP peer.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      bgpPeerState:
        $ref: '#/definitions/BGPPeerState'
      bgpStatus:
        $ref: '#/definitions/BGPStatus'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
    type: object
  BGPPeerList:
    description: A list of the BGP peers configured on this virtual interface.
    items:
      $ref: '#/definitions/BGPPeer'
    type: array
  BGPPeerState:
    description: '<p>The state of the BGP peer.</p> <ul> <li> <p> <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p> </li> <li> <p> <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p> </li> <li> <p> <b>Available</b>: The BGP peer can be established.</p> </li> <li> <p> <b>Deleting</b>: The BGP peer is in the process of being deleted.</p> </li> <li> <p> <b>Deleted</b>: The BGP peer has been deleted and cannot be established.</p> </li> </ul>'
    enum:
      - verifying
      - pending
      - available
      - deleting
      - deleted
    type: string
  BGPStatus:
    description: '<p>The Up/Down state of the BGP peer.</p> <ul> <li> <p> <b>Up</b>: The BGP peer is established.</p> </li> <li> <p> <b>Down</b>: The BGP peer is down.</p> </li> </ul>'
    enum:
      - up
      - down
    type: string
  Bandwidth:
    description: '<p>Bandwidth of the connection.</p> <p>Example: 1Gbps</p> <p>Default: None</p>'
    type: string
  BooleanFlag:
    type: boolean
  CIDR:
    type: string
  ConfirmConnectionRequest:
    description: Container for the parameters to the ConfirmConnection operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
    required:
      - connectionId
    type: object
  ConfirmConnectionResponse:
    description: The response received when ConfirmConnection is called.
    properties:
      connectionState:
        $ref: '#/definitions/ConnectionState'
    type: object
  ConfirmPrivateVirtualInterfaceRequest:
    description: Container for the parameters to the ConfirmPrivateVirtualInterface operation.
    properties:
      virtualGatewayId:
        $ref: '#/definitions/VirtualGatewayId'
        description: '<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
    required:
      - virtualInterfaceId
      - virtualGatewayId
    type: object
  ConfirmPrivateVirtualInterfaceResponse:
    description: The response received when ConfirmPrivateVirtualInterface is called.
    properties:
      virtualInterfaceState:
        $ref: '#/definitions/VirtualInterfaceState'
    type: object
  ConfirmPublicVirtualInterfaceRequest:
    description: Container for the parameters to the ConfirmPublicVirtualInterface operation.
    properties:
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
    required:
      - virtualInterfaceId
    type: object
  ConfirmPublicVirtualInterfaceResponse:
    description: The response received when ConfirmPublicVirtualInterface is called.
    properties:
      virtualInterfaceState:
        $ref: '#/definitions/VirtualInterfaceState'
    type: object
  Connection:
    description: A connection represents the physical network connection between the AWS Direct Connect location and the customer.
    properties:
      awsDevice:
        $ref: '#/definitions/AwsDevice'
        description: The Direct Connection endpoint which the physical connection terminates on.
      bandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>Bandwidth of the connection.</p> <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p> <p>Default: None</p>'
      connectionId:
        $ref: '#/definitions/ConnectionId'
      connectionName:
        $ref: '#/definitions/ConnectionName'
      connectionState:
        $ref: '#/definitions/ConnectionState'
      lagId:
        $ref: '#/definitions/LagId'
      loaIssueTime:
        $ref: '#/definitions/LoaIssueTime'
        description: The time of the most recent call to <a>DescribeLoa</a> for this connection.
      location:
        $ref: '#/definitions/LocationCode'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: The AWS account that will own the new connection.
      partnerName:
        $ref: '#/definitions/PartnerName'
        description: The name of the AWS Direct Connect service provider associated with the connection.
      region:
        $ref: '#/definitions/Region'
      vlan:
        $ref: '#/definitions/VLAN'
    type: object
  ConnectionId:
    description: '<p>The ID of the connection. This field is also used as the ID type for operations that use multiple connection types (LAG, interconnect, and/or connection).</p> <p>Example: dxcon-fg5678gh</p> <p>Default: None</p>'
    type: string
  ConnectionList:
    description: A list of connections.
    items:
      $ref: '#/definitions/Connection'
    type: array
  ConnectionName:
    description: '<p>The name of the connection.</p> <p>Example: "<i>My Connection to AWS</i>"</p> <p>Default: None</p>'
    type: string
  ConnectionState:
    description: '<p>State of the connection.</p> <ul> <li> <p> <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <b>Pending</b>: The connection has been approved, and is being initialized.</p> </li> <li> <p> <b>Available</b>: The network link is up, and the connection is ready for use.</p> </li> <li> <p> <b>Down</b>: The network link is down.</p> </li> <li> <p> <b>Deleting</b>: The connection is in the process of being deleted.</p> </li> <li> <p> <b>Deleted</b>: The connection has been deleted.</p> </li> <li> <p> <b>Rejected</b>: A hosted connection in the ''Ordering'' state will enter the ''Rejected'' state if it is deleted by the end customer.</p> </li> </ul>'
    enum:
      - ordering
      - requested
      - pending
      - available
      - down
      - deleting
      - deleted
      - rejected
    type: string
  Connections:
    description: A structure containing a list of connections.
    properties:
      connections:
        $ref: '#/definitions/ConnectionList'
        description: A list of connections.
    type: object
  Count:
    type: integer
  CreateBGPPeerRequest:
    description: Container for the parameters to the CreateBGPPeer operation.
    properties:
      newBGPPeer:
        $ref: '#/definitions/NewBGPPeer'
        description: '<p>Detailed information for the BGP peer to be created.</p> <p>Default: None</p>'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
        description: '<p>The ID of the virtual interface on which the BGP peer will be provisioned.</p> <p>Example: dxvif-456abc78</p> <p>Default: None</p>'
    type: object
  CreateBGPPeerResponse:
    description: The response received when CreateBGPPeer is called.
    properties:
      virtualInterface:
        $ref: '#/definitions/VirtualInterface'
    type: object
  CreateConnectionRequest:
    description: Container for the parameters to the CreateConnection operation.
    properties:
      bandwidth:
        $ref: '#/definitions/Bandwidth'
      connectionName:
        $ref: '#/definitions/ConnectionName'
      lagId:
        $ref: '#/definitions/LagId'
      location:
        $ref: '#/definitions/LocationCode'
    required:
      - location
      - bandwidth
      - connectionName
    type: object
  CreateInterconnectRequest:
    description: Container for the parameters to the CreateInterconnect operation.
    properties:
      bandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>'
      interconnectName:
        $ref: '#/definitions/InterconnectName'
        description: '<p>The name of the interconnect.</p> <p>Example: "<i>1G Interconnect to AWS</i>"</p> <p>Default: None</p>'
      lagId:
        $ref: '#/definitions/LagId'
      location:
        $ref: '#/definitions/LocationCode'
        description: '<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>'
    required:
      - interconnectName
      - bandwidth
      - location
    type: object
  CreateLagRequest:
    description: Container for the parameters to the CreateLag operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of an existing connection to migrate to the LAG.</p> <p>Default: None</p>'
      connectionsBandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>The bandwidth of the individual physical connections bundled by the LAG.</p> <p>Default: None</p> <p>Available values: 1Gbps, 10Gbps</p>'
      lagName:
        $ref: '#/definitions/LagName'
        description: '<p>The name of the LAG.</p> <p>Example: "<code>3x10G LAG to AWS</code>"</p> <p>Default: None</p>'
      location:
        $ref: '#/definitions/LocationCode'
        description: '<p>The AWS Direct Connect location in which the LAG should be allocated.</p> <p>Example: EqSV5</p> <p>Default: None</p>'
      numberOfConnections:
        $ref: '#/definitions/Count'
        description: '<p>The number of physical connections initially provisioned and bundled by the LAG.</p> <p>Default: None</p>'
    required:
      - numberOfConnections
      - location
      - connectionsBandwidth
      - lagName
    type: object
  CreatePrivateVirtualInterfaceRequest:
    description: Container for the parameters to the CreatePrivateVirtualInterface operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
      newPrivateVirtualInterface:
        $ref: '#/definitions/NewPrivateVirtualInterface'
        description: '<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>'
    required:
      - connectionId
      - newPrivateVirtualInterface
    type: object
  CreatePublicVirtualInterfaceRequest:
    description: Container for the parameters to the CreatePublicVirtualInterface operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
      newPublicVirtualInterface:
        $ref: '#/definitions/NewPublicVirtualInterface'
        description: '<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>'
    required:
      - connectionId
      - newPublicVirtualInterface
    type: object
  CustomerAddress:
    description: '<p>IP address assigned to the customer interface.</p> <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>'
    type: string
  DeleteBGPPeerRequest:
    description: Container for the parameters to the DeleteBGPPeer operation.
    properties:
      asn:
        $ref: '#/definitions/ASN'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
        description: '<p>The ID of the virtual interface from which the BGP peer will be deleted.</p> <p>Example: dxvif-456abc78</p> <p>Default: None</p>'
    type: object
  DeleteBGPPeerResponse:
    description: The response received when DeleteBGPPeer is called.
    properties:
      virtualInterface:
        $ref: '#/definitions/VirtualInterface'
    type: object
  DeleteConnectionRequest:
    description: Container for the parameters to the DeleteConnection operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
    required:
      - connectionId
    type: object
  DeleteInterconnectRequest:
    description: Container for the parameters to the DeleteInterconnect operation.
    properties:
      interconnectId:
        $ref: '#/definitions/InterconnectId'
    required:
      - interconnectId
    type: object
  DeleteInterconnectResponse:
    description: The response received when DeleteInterconnect is called.
    properties:
      interconnectState:
        $ref: '#/definitions/InterconnectState'
    type: object
  DeleteLagRequest:
    description: Container for the parameters to the DeleteLag operation.
    properties:
      lagId:
        $ref: '#/definitions/LagId'
        description: '<p>The ID of the LAG to delete.</p> <p>Example: dxlag-abc123</p> <p>Default: None</p>'
    required:
      - lagId
    type: object
  DeleteVirtualInterfaceRequest:
    description: Container for the parameters to the DeleteVirtualInterface operation.
    properties:
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
    required:
      - virtualInterfaceId
    type: object
  DeleteVirtualInterfaceResponse:
    description: The response received when DeleteVirtualInterface is called.
    properties:
      virtualInterfaceState:
        $ref: '#/definitions/VirtualInterfaceState'
    type: object
  DescribeConnectionLoaRequest:
    description: Container for the parameters to the DescribeConnectionLoa operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
      loaContentType:
        $ref: '#/definitions/LoaContentType'
      providerName:
        $ref: '#/definitions/ProviderName'
        description: '<p>The name of the APN partner or service provider who establishes connectivity on your behalf. If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p> <p>Default: None</p>'
    required:
      - connectionId
    type: object
  DescribeConnectionLoaResponse:
    description: The response received when DescribeConnectionLoa is called.
    properties:
      loa:
        $ref: '#/definitions/Loa'
    type: object
  DescribeConnectionsOnInterconnectRequest:
    description: Container for the parameters to the DescribeConnectionsOnInterconnect operation.
    properties:
      interconnectId:
        $ref: '#/definitions/InterconnectId'
        description: '<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>'
    required:
      - interconnectId
    type: object
  DescribeConnectionsRequest:
    description: Container for the parameters to the DescribeConnections operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
    type: object
  DescribeHostedConnectionsRequest:
    description: Container for the parameters to the DescribeHostedConnections operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the interconnect or LAG on which the hosted connections are provisioned.</p> <p>Example: dxcon-abc123 or dxlag-abc123</p> <p>Default: None</p>'
    required:
      - connectionId
    type: object
  DescribeInterconnectLoaRequest:
    description: Container for the parameters to the DescribeInterconnectLoa operation.
    properties:
      interconnectId:
        $ref: '#/definitions/InterconnectId'
      loaContentType:
        $ref: '#/definitions/LoaContentType'
      providerName:
        $ref: '#/definitions/ProviderName'
        description: '<p>The name of the service provider who establishes connectivity on your behalf. If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p> <p>Default: None</p>'
    required:
      - interconnectId
    type: object
  DescribeInterconnectLoaResponse:
    description: The response received when DescribeInterconnectLoa is called.
    properties:
      loa:
        $ref: '#/definitions/Loa'
    type: object
  DescribeInterconnectsRequest:
    description: Container for the parameters to the DescribeInterconnects operation.
    properties:
      interconnectId:
        $ref: '#/definitions/InterconnectId'
    type: object
  DescribeLagsRequest:
    description: Container for the parameters to the DescribeLags operation.
    properties:
      lagId:
        $ref: '#/definitions/LagId'
        description: '<p>The ID of the LAG.</p> <p>Example: dxlag-abc123</p> <p>Default: None</p>'
    type: object
  DescribeLoaRequest:
    description: Container for the parameters to the DescribeLoa operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of a connection, LAG, or interconnect for which to get the LOA-CFA information.</p> <p>Example: dxcon-abc123 or dxlag-abc123</p> <p>Default: None</p>'
      loaContentType:
        $ref: '#/definitions/LoaContentType'
        description: '<p>A standard media type indicating the content type of the LOA-CFA document. Currently, the only supported value is "application/pdf".</p> <p>Default: application/pdf</p>'
      providerName:
        $ref: '#/definitions/ProviderName'
        description: '<p>The name of the service provider who establishes connectivity on your behalf. If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p> <p>Default: None</p>'
    required:
      - connectionId
    type: object
  DescribeTagsRequest:
    description: Container for the parameters to the DescribeTags operation.
    properties:
      resourceArns:
        $ref: '#/definitions/ResourceArnList'
        description: The Amazon Resource Names (ARNs) of the Direct Connect resources.
    required:
      - resourceArns
    type: object
  DescribeTagsResponse:
    description: The response received when DescribeTags is called.
    properties:
      resourceTags:
        $ref: '#/definitions/ResourceTagList'
        description: Information about the tags.
    type: object
  DescribeVirtualInterfacesRequest:
    description: Container for the parameters to the DescribeVirtualInterfaces operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
    type: object
  DirectConnectClientException:
    description: The API was called with invalid parameters. The error message will contain additional details about the cause.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: 'This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.'
    type: object
  DirectConnectServerException:
    description: A server-side error occurred during the API call. The error message will contain additional details about the cause.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: This is an exception thrown when there is a backend issue on the server side.
    type: object
  DisassociateConnectionFromLagRequest:
    description: Container for the parameters to the DisassociateConnectionFromLag operation.
    properties:
      connectionId:
        $ref: '#/definitions/ConnectionId'
        description: '<p>The ID of the connection to disassociate from the LAG.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>'
      lagId:
        $ref: '#/definitions/LagId'
        description: '<p>The ID of the LAG.</p> <p>Example: dxlag-abc123</p> <p>Default: None</p>'
    required:
      - connectionId
      - lagId
    type: object
  DuplicateTagKeysException:
    description: A tag key was specified more than once.
    properties: {}
    type: object
  ErrorMessage:
    type: string
  Interconnect:
    description: '<p>An interconnect is a connection that can host other connections.</p> <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner''s network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p> <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>'
    properties:
      awsDevice:
        $ref: '#/definitions/AwsDevice'
        description: The Direct Connection endpoint which the physical connection terminates on.
      bandwidth:
        $ref: '#/definitions/Bandwidth'
      interconnectId:
        $ref: '#/definitions/InterconnectId'
      interconnectName:
        $ref: '#/definitions/InterconnectName'
      interconnectState:
        $ref: '#/definitions/InterconnectState'
      lagId:
        $ref: '#/definitions/LagId'
      loaIssueTime:
        $ref: '#/definitions/LoaIssueTime'
        description: The time of the most recent call to DescribeInterconnectLoa for this Interconnect.
      location:
        $ref: '#/definitions/LocationCode'
      region:
        $ref: '#/definitions/Region'
    type: object
  InterconnectId:
    description: '<p>The ID of the interconnect.</p> <p>Example: dxcon-abc123</p>'
    type: string
  InterconnectList:
    description: A list of interconnects.
    items:
      $ref: '#/definitions/Interconnect'
    type: array
  InterconnectName:
    description: '<p>The name of the interconnect.</p> <p>Example: "<i>1G Interconnect to AWS</i>"</p>'
    type: string
  InterconnectState:
    description: '<p>State of the interconnect.</p> <ul> <li> <p> <b>Requested</b>: The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <b>Pending</b>: The interconnect has been approved, and is being initialized.</p> </li> <li> <p> <b>Available</b>: The network link is up, and the interconnect is ready for use.</p> </li> <li> <p> <b>Down</b>: The network link is down.</p> </li> <li> <p> <b>Deleting</b>: The interconnect is in the process of being deleted.</p> </li> <li> <p> <b>Deleted</b>: The interconnect has been deleted.</p> </li> </ul>'
    enum:
      - requested
      - pending
      - available
      - down
      - deleting
      - deleted
    type: string
  Interconnects:
    description: A structure containing a list of interconnects.
    properties:
      interconnects:
        $ref: '#/definitions/InterconnectList'
        description: A list of interconnects.
    type: object
  Lag:
    description: 'Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.'
    properties:
      allowsHostedConnections:
        $ref: '#/definitions/BooleanFlag'
        description: <p>Indicates whether the LAG can host other connections.</p> <note> <p>This is intended for use by AWS Direct Connect partners only.</p> </note>
      awsDevice:
        $ref: '#/definitions/AwsDevice'
        description: The AWS Direct Connection endpoint that hosts the LAG.
      connections:
        $ref: '#/definitions/ConnectionList'
        description: A list of connections bundled by this LAG.
      connectionsBandwidth:
        $ref: '#/definitions/Bandwidth'
        description: '<p>The individual bandwidth of the physical connections bundled by the LAG.</p> <p>Available values: 1Gbps, 10Gbps</p>'
      lagId:
        $ref: '#/definitions/LagId'
      lagName:
        $ref: '#/definitions/LagName'
        description: The name of the LAG.
      lagState:
        $ref: '#/definitions/LagState'
      location:
        $ref: '#/definitions/LocationCode'
      minimumLinks:
        $ref: '#/definitions/Count'
        description: 'The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.'
      numberOfConnections:
        $ref: '#/definitions/Count'
        description: 'The number of physical connections bundled by the LAG, up to a maximum of 10.'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: The owner of the LAG.
      region:
        $ref: '#/definitions/Region'
    type: object
  LagId:
    description: '<p>The ID of the LAG.</p> <p>Example: dxlag-fg5678gh</p>'
    type: string
  LagList:
    description: A list of LAGs.
    items:
      $ref: '#/definitions/Lag'
    type: array
  LagName:
    type: string
  LagState:
    description: '<p>The state of the LAG.</p> <ul> <li> <p> <b>Requested</b>: The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.</p> </li> <li> <p> <b>Pending</b>: The LAG has been approved, and is being initialized.</p> </li> <li> <p> <b>Available</b>: The network link is established, and the LAG is ready for use.</p> </li> <li> <p> <b>Down</b>: The network link is down.</p> </li> <li> <p> <b>Deleting</b>: The LAG is in the process of being deleted.</p> </li> <li> <p> <b>Deleted</b>: The LAG has been deleted.</p> </li> </ul>'
    enum:
      - requested
      - pending
      - available
      - down
      - deleting
      - deleted
    type: string
  Lags:
    description: A structure containing a list of LAGs.
    properties:
      lags:
        $ref: '#/definitions/LagList'
        description: A list of LAGs.
    type: object
  Loa:
    description: A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.
    properties:
      loaContent:
        $ref: '#/definitions/LoaContent'
      loaContentType:
        $ref: '#/definitions/LoaContentType'
    type: object
  LoaContent:
    description: The binary contents of the LOA-CFA document.
    type: string
  LoaContentType:
    description: '<p>A standard media type indicating the content type of the LOA-CFA document. Currently, the only supported value is "application/pdf".</p> <p>Default: application/pdf</p>'
    enum:
      - application/pdf
    type: string
  LoaIssueTime:
    format: date-time
    type: string
  Location:
    description: An AWS Direct Connect location where connections and interconnects can be requested.
    properties:
      locationCode:
        $ref: '#/definitions/LocationCode'
        description: The code used to indicate the AWS Direct Connect location.
    type: object
  LocationCode:
    description: '<p>Where the connection is located.</p> <p>Example: EqSV5</p> <p>Default: None</p>'
    type: string
  LocationList:
    items:
      $ref: '#/definitions/Location'
    type: array
  LocationName:
    type: string
  Locations:
    description: 'A location is a network facility where AWS Direct Connect routers are available to be connected. Generally, these are colocation hubs where many network providers have equipment, and where cross connects can be delivered. Locations include a name and facility code, and must be provided when creating a connection.'
    properties:
      locations:
        $ref: '#/definitions/LocationList'
        description: A list of colocation hubs where network providers have equipment. Most regions have multiple locations available.
    type: object
  NewBGPPeer:
    description: A structure containing information about a new BGP peer.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
    type: object
  NewPrivateVirtualInterface:
    description: A structure containing information about a new private virtual interface.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      virtualGatewayId:
        $ref: '#/definitions/VirtualGatewayId'
      virtualInterfaceName:
        $ref: '#/definitions/VirtualInterfaceName'
      vlan:
        $ref: '#/definitions/VLAN'
    required:
      - virtualInterfaceName
      - vlan
      - asn
      - virtualGatewayId
    type: object
  NewPrivateVirtualInterfaceAllocation:
    description: A structure containing information about a private virtual interface that will be provisioned on a connection.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      virtualInterfaceName:
        $ref: '#/definitions/VirtualInterfaceName'
      vlan:
        $ref: '#/definitions/VLAN'
    required:
      - virtualInterfaceName
      - vlan
      - asn
    type: object
  NewPublicVirtualInterface:
    description: A structure containing information about a new public virtual interface.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      routeFilterPrefixes:
        $ref: '#/definitions/RouteFilterPrefixList'
      virtualInterfaceName:
        $ref: '#/definitions/VirtualInterfaceName'
      vlan:
        $ref: '#/definitions/VLAN'
    required:
      - virtualInterfaceName
      - vlan
      - asn
    type: object
  NewPublicVirtualInterfaceAllocation:
    description: A structure containing information about a public virtual interface that will be provisioned on a connection.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      routeFilterPrefixes:
        $ref: '#/definitions/RouteFilterPrefixList'
      virtualInterfaceName:
        $ref: '#/definitions/VirtualInterfaceName'
      vlan:
        $ref: '#/definitions/VLAN'
    required:
      - virtualInterfaceName
      - vlan
      - asn
    type: object
  OwnerAccount:
    type: string
  PartnerName:
    type: string
  ProviderName:
    type: string
  Region:
    description: '<p>The AWS region where the connection is located.</p> <p>Example: us-east-1</p> <p>Default: None</p>'
    type: string
  ResourceArn:
    type: string
  ResourceArnList:
    items:
      $ref: '#/definitions/ResourceArn'
    type: array
  ResourceTag:
    description: The tags associated with a Direct Connect resource.
    properties:
      resourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the Direct Connect resource.
      tags:
        $ref: '#/definitions/TagList'
        description: The tags.
    type: object
  ResourceTagList:
    items:
      $ref: '#/definitions/ResourceTag'
    type: array
  RouteFilterPrefix:
    description: A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.
    properties:
      cidr:
        $ref: '#/definitions/CIDR'
        description: '<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>IPv6 CIDRs must be at least a /64 or shorter</p> <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>'
    type: object
  RouteFilterPrefixList:
    description: A list of routes to be advertised to the AWS network in this region (public virtual interface).
    items:
      $ref: '#/definitions/RouteFilterPrefix'
    type: array
  RouterConfig:
    type: string
  Tag:
    description: Information about a tag.
    properties:
      key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    required:
      - key
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagList:
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    type: array
  TagResourceRequest:
    description: Container for the parameters to the TagResource operation.
    properties:
      resourceArn:
        $ref: '#/definitions/ResourceArn'
        description: '<p>The Amazon Resource Name (ARN) of the Direct Connect resource.</p> <p>Example: arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-fg5678gh</p>'
      tags:
        $ref: '#/definitions/TagList'
        description: The list of tags to add.
    required:
      - resourceArn
      - tags
    type: object
  TagResourceResponse:
    description: The response received when TagResource is called.
    properties: {}
    type: object
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TooManyTagsException:
    description: You have reached the limit on the number of tags that can be assigned to a Direct Connect resource.
    properties: {}
    type: object
  UntagResourceRequest:
    description: Container for the parameters to the UntagResource operation.
    properties:
      resourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the Direct Connect resource.
      tagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The list of tag keys to remove.
    required:
      - resourceArn
      - tagKeys
    type: object
  UntagResourceResponse:
    description: The response received when UntagResource is called.
    properties: {}
    type: object
  UpdateLagRequest:
    description: Container for the parameters to the UpdateLag operation.
    properties:
      lagId:
        $ref: '#/definitions/LagId'
        description: '<p>The ID of the LAG to update.</p> <p>Example: dxlag-abc123</p> <p>Default: None</p>'
      lagName:
        $ref: '#/definitions/LagName'
        description: '<p>The name for the LAG.</p> <p>Example: "<code>3x10G LAG to AWS</code>"</p> <p>Default: None</p>'
      minimumLinks:
        $ref: '#/definitions/Count'
        description: '<p>The minimum number of physical connections that must be operational for the LAG itself to be operational.</p> <p>Default: None</p>'
    required:
      - lagId
    type: object
  VLAN:
    description: '<p>The VLAN ID.</p> <p>Example: 101</p>'
    type: integer
  VirtualGateway:
    description: '<p>You can create one or more AWS Direct Connect private virtual interfaces linking to your virtual private gateway.</p> <p>Virtual private gateways can be managed using the Amazon Virtual Private Cloud (Amazon VPC) console or the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html">Amazon EC2 CreateVpnGateway action</a>.</p>'
    properties:
      virtualGatewayId:
        $ref: '#/definitions/VirtualGatewayId'
      virtualGatewayState:
        $ref: '#/definitions/VirtualGatewayState'
    type: object
  VirtualGatewayId:
    description: '<p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p> <p>Example: vgw-123er56</p>'
    type: string
  VirtualGatewayList:
    description: A list of virtual private gateways.
    items:
      $ref: '#/definitions/VirtualGateway'
    type: array
  VirtualGatewayState:
    description: '<p>State of the virtual private gateway.</p> <ul> <li> <p> <b>Pending</b>: This is the initial state after calling <i>CreateVpnGateway</i>.</p> </li> <li> <p> <b>Available</b>: Ready for use by a private virtual interface.</p> </li> <li> <p> <b>Deleting</b>: This is the initial state after calling <i>DeleteVpnGateway</i>.</p> </li> <li> <p> <b>Deleted</b>: In this state, a private virtual interface is unable to send traffic over this gateway.</p> </li> </ul>'
    type: string
  VirtualGateways:
    description: A structure containing a list of virtual private gateways.
    properties:
      virtualGateways:
        $ref: '#/definitions/VirtualGatewayList'
        description: A list of virtual private gateways.
    type: object
  VirtualInterface:
    description: A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.
    properties:
      addressFamily:
        $ref: '#/definitions/AddressFamily'
      amazonAddress:
        $ref: '#/definitions/AmazonAddress'
      asn:
        $ref: '#/definitions/ASN'
      authKey:
        $ref: '#/definitions/BGPAuthKey'
      bgpPeers:
        $ref: '#/definitions/BGPPeerList'
      connectionId:
        $ref: '#/definitions/ConnectionId'
      customerAddress:
        $ref: '#/definitions/CustomerAddress'
      customerRouterConfig:
        $ref: '#/definitions/RouterConfig'
        description: Information for generating the customer router configuration.
      location:
        $ref: '#/definitions/LocationCode'
      ownerAccount:
        $ref: '#/definitions/OwnerAccount'
        description: The AWS account that will own the new virtual interface.
      routeFilterPrefixes:
        $ref: '#/definitions/RouteFilterPrefixList'
      virtualGatewayId:
        $ref: '#/definitions/VirtualGatewayId'
      virtualInterfaceId:
        $ref: '#/definitions/VirtualInterfaceId'
      virtualInterfaceName:
        $ref: '#/definitions/VirtualInterfaceName'
      virtualInterfaceState:
        $ref: '#/definitions/VirtualInterfaceState'
      virtualInterfaceType:
        $ref: '#/definitions/VirtualInterfaceType'
      vlan:
        $ref: '#/definitions/VLAN'
    type: object
  VirtualInterfaceId:
    description: '<p>The ID of the virtual interface.</p> <p>Example: dxvif-123dfg56</p> <p>Default: None</p>'
    type: string
  VirtualInterfaceList:
    description: A list of virtual interfaces.
    items:
      $ref: '#/definitions/VirtualInterface'
    type: array
  VirtualInterfaceName:
    description: '<p>The name of the virtual interface assigned by the customer.</p> <p>Example: "My VPC"</p>'
    type: string
  VirtualInterfaceState:
    description: '<p>State of the virtual interface.</p> <ul> <li> <p> <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <b>Verifying</b>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <b>Available</b>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <b>Down</b>: A virtual interface that is BGP down.</p> </li> <li> <p> <b>Deleting</b>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <b>Deleted</b>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <b>Rejected</b>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the ''Confirming'' state is deleted by the virtual interface owner, the virtual interface will enter the ''Rejected'' state.</p> </li> </ul>'
    enum:
      - confirming
      - verifying
      - pending
      - available
      - down
      - deleting
      - deleted
      - rejected
    type: string
  VirtualInterfaceType:
    description: '<p>The type of virtual interface.</p> <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>'
    type: string
  VirtualInterfaces:
    description: A structure containing a list of virtual interfaces.
    properties:
      virtualInterfaces:
        $ref: '#/definitions/VirtualInterfaceList'
        description: A list of virtual interfaces.
    type: object
