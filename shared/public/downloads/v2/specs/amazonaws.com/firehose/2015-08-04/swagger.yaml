swagger: '2.0'
schemes:
  - http
host: firehose.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>Amazon Kinesis Firehose API Reference</fullname> <p>Amazon Kinesis Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch Service (Amazon ES), and Amazon Redshift.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon Kinesis Firehose
  version: '2015-08-04'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/firehose-2015-08-04.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: firehose
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/firehose/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a delivery stream.</p> <p>By default, you can create up to 20 delivery streams per region.</p> <p>This is an asynchronous operation that immediately returns. The initial status of the delivery stream is <code>CREATING</code>. After the delivery stream is created, its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to a delivery stream that is not in the <code>ACTIVE</code> state cause an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>A Kinesis Firehose delivery stream can be configured to receive records directly from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured to use an existing Kinesis stream as its source. To specify a Kinesis stream as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>, and provide the Kinesis stream ARN and role ARN in the <code>KinesisStreamSourceConfiguration</code> parameter.</p> <p>A delivery stream is configured with a single destination: Amazon S3, Amazon ES, or Amazon Redshift. You must specify only one of the following destination configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>, <b>ElasticsearchDestinationConfiguration</b>, or <b>RedshiftDestinationConfiguration</b>.</p> <p>When you specify <b>S3DestinationConfiguration</b>, you can also provide the following optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>. By default, if no <b>BufferingHints</b> value is provided, Kinesis Firehose buffers data up to 5 MB or for 5 minutes, whichever condition is satisfied first. Note that <b>BufferingHints</b> is a hint, so there are some cases where the service cannot adhere to these conditions strictly; for example, record boundaries are such that the size is a little over or under the configured buffering size. By default, no encryption is performed. We strongly recommend that you enable encryption to ensure secure data storage in Amazon S3.</p> <p>A few notes about Amazon Redshift as a destination:</p> <ul> <li> <p>An Amazon Redshift destination requires an S3 bucket as intermediate location, as Kinesis Firehose first delivers data to S3 and then uses <code>COPY</code> syntax to load data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b> parameter.</p> </li> <li> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn''t support these compression formats.</p> </li> <li> <p>We strongly recommend that you use the user name and password you provide exclusively with Kinesis Firehose, and that the permissions for the account are restricted for Amazon Redshift <code>INSERT</code> permissions.</p> </li> </ul> <p>Kinesis Firehose assumes the IAM role that is configured as part of the destination. The role should allow the Kinesis Firehose principal to assume the role, and the role should have permissions that allow the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon S3 Bucket Access</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.</p>'
      operationId: CreateDeliveryStream
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeliveryStreamInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeliveryStreamOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
  '/#DeleteDeliveryStream':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes a delivery stream and its data.</p> <p>You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code> state, and not in the <code>CREATING</code> state. While the deletion request is in process, the delivery stream is in the <code>DELETING</code> state.</p> <p>To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>While the delivery stream is <code>DELETING</code> state, the service may continue to accept the records, but the service doesn''t make any guarantees with respect to delivering the data. Therefore, as a best practice, you should first stop any applications that are sending records before deleting a delivery stream.</p>'
      operationId: DeleteDeliveryStream
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDeliveryStreamInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDeliveryStreamOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeDeliveryStream':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the specified delivery stream and gets the status. For example, after your delivery stream is created, call <a>DescribeDeliveryStream</a> to see if the delivery stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.'
      operationId: DescribeDeliveryStream
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeliveryStreamInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#GetKinesisStream':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: ''
      operationId: GetKinesisStream
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetKinesisStreamInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetKinesisStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: InvalidStreamTypeException
          schema:
            $ref: '#/definitions/InvalidStreamTypeException'
  '/#ListDeliveryStreams':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Lists your delivery streams.</p> <p>The number of delivery streams might be too large to return using a single call to <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned, using the <b>Limit</b> parameter. To determine whether there are more delivery streams to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there are more delivery streams to list, you can request them by specifying the name of the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b> parameter of a subsequent call.</p>'
      operationId: ListDeliveryStreams
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDeliveryStreamsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeliveryStreamsOutput'
  '/#PutRecord':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>. </p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data, for example, a segment from a log file, geographic location data, website clickstream data, and so on.</p> <p>Kinesis Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application to parse individual data items when reading the data from the destination.</p> <p>The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string assigned to each record. Producer applications can use this ID for purposes such as auditability and investigation.</p> <p>If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream. </p> <p>Data records sent to Kinesis Firehose are stored for 24 hours from the time they are added to a delivery stream as it attempts to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      operationId: PutRecord
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRecordInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/#PutRecordBatch':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records. To write single data records into a delivery stream, use <a>PutRecord</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>.</p> <p>Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB for the entire request. These limits cannot be changed.</p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data. For example, it could be a segment from a log file, geographic location data, web site clickstream data, and so on.</p> <p>Kinesis Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application to parse individual data items when reading the data from the destination.</p> <p>The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>, and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b> array provides additional information about the processed record. It directly correlates with a record in the request array using the same ordering, from the top to the bottom. The response array always includes the same number of records as the request array. <b>RequestResponses</b> includes both successfully and unsuccessfully processed records. Kinesis Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully processed record includes a <b>RecordId</b> value, which is unique for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b> reflects the type of error, and is one of the following values: <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b> provides more detailed information about the error.</p> <p>If there is an internal server error or a timeout, the write might have completed or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request, resending only those records that might have failed processing. This minimizes the possible duplicate records and also reduces the total bytes sent (and corresponding charges). We recommend that you handle any duplicates at the destination.</p> <p>If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream.</p> <p>Data records sent to Kinesis Firehose are stored for 24 hours from the time they are added to a delivery stream as it attempts to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      operationId: PutRecordBatch
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutRecordBatchInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRecordBatchOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
  '/#UpdateDestination':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Updates the specified destination of the specified delivery stream.</p> <p>You can use this operation to change the destination type (for example, to replace the Amazon S3 destination with Amazon Redshift) or change the parameters associated with a destination (for example, to change the bucket name of the Amazon S3 destination). The update might not occur immediately. The target delivery stream remains active while the configurations are updated, so data writes to the delivery stream can continue during this process. The updated configurations are usually effective within a few minutes.</p> <p>Note that switching between Amazon ES and other services is not supported. For an Amazon ES destination, you can only update to another Amazon ES destination.</p> <p>If the destination type is the same, Kinesis Firehose merges the configuration parameters specified with the destination configuration that already exists on the delivery stream. If any of the parameters are not specified in the call, the existing values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not specified, then the existing <a>EncryptionConfiguration</a> is maintained on the destination.</p> <p>If the destination type is not the same, for example, changing the destination from Amazon S3 to Amazon Redshift, Kinesis Firehose does not merge any parameters. In this case, all parameters must be specified.</p> <p>Kinesis Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting merges. This is a required field, and the service updates the configuration only if the existing configuration has a version ID that matches. After the update is applied successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>. Use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in the next call.</p>'
      operationId: UpdateDestination
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDestinationInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDestinationOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
definitions:
  AWSKMSKeyARN:
    maxLength: 512
    minLength: 1
    pattern: 'arn:.*'
    type: string
  AccessKeyId:
    type: string
  BooleanObject:
    type: boolean
  BucketARN:
    maxLength: 2048
    minLength: 1
    pattern: 'arn:.*'
    type: string
  BufferingHints:
    description: 'Describes hints for the buffering to perform before delivering data to the destination. Please note that these options are treated as hints, and therefore Kinesis Firehose may choose to use different values when it is optimal.'
    properties:
      IntervalInSeconds:
        $ref: '#/definitions/IntervalInSeconds'
        description: 'Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.'
      SizeInMBs:
        $ref: '#/definitions/SizeInMBs'
        description: '<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>'
    type: object
  CloudWatchLoggingOptions:
    description: Describes the Amazon CloudWatch logging options for your delivery stream.
    properties:
      Enabled:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables CloudWatch logging.
      LogGroupName:
        $ref: '#/definitions/LogGroupName'
        description: The CloudWatch group name for logging. This value is required if CloudWatch logging is enabled.
      LogStreamName:
        $ref: '#/definitions/LogStreamName'
        description: The CloudWatch log stream name for logging. This value is required if CloudWatch logging is enabled.
    type: object
  ClusterJDBCURL:
    minLength: 1
    pattern: 'jdbc:\(redshift\|postgresql\)://\(\(\?!-\)[A-Za-z0-9-]\{1,63\}\(\?<!-\)\.\)\+redshift\.amazonaws\.com:\d\{1,5\}/[a-zA-Z0-9_$]\+'
    type: string
  CompressionFormat:
    enum:
      - UNCOMPRESSED
      - GZIP
      - ZIP
      - Snappy
    type: string
  ConcurrentModificationException:
    description: Another modification has already happened. Fetch <b>VersionId</b> again and use it to update the destination.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  CopyCommand:
    description: Describes a <code>COPY</code> command for Amazon Redshift.
    properties:
      CopyOptions:
        $ref: '#/definitions/CopyOptions'
        description: '<p>Optional parameters to use with the Amazon Redshift <code>COPY</code> command. For more information, see the "Optional Parameters" section of <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html">Amazon Redshift COPY command</a>. Some possible examples that would apply to Kinesis Firehose are as follows:</p> <p> <code>delimiter ''\t'' lzop;</code> - fields are delimited with "\t" (TAB character) and compressed using lzop.</p> <p> <code>delimiter ''|''</code> - fields are delimited with "|" (this is the default delimiter).</p> <p> <code>delimiter ''|'' escape</code> - the delimiter should be escaped.</p> <p> <code>fixedwidth ''venueid:3,venuename:25,venuecity:12,venuestate:2,venueseats:6''</code> - fields are fixed width in the source, with each width specified after every column in the table.</p> <p> <code>JSON ''s3://mybucket/jsonpaths.txt''</code> - data is in JSON format, and the path specified is the format of the data.</p> <p>For more examples, see <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY_command_examples.html">Amazon Redshift COPY command examples</a>.</p>'
      DataTableColumns:
        $ref: '#/definitions/DataTableColumns'
        description: A comma-separated list of column names.
      DataTableName:
        $ref: '#/definitions/DataTableName'
        description: The name of the target table. The table must already exist in the database.
    required:
      - DataTableName
    type: object
  CopyOptions:
    type: string
  CreateDeliveryStreamInput:
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: 'The name of the delivery stream. This name must be unique per AWS account in the same region. If the delivery streams are in different accounts or different regions, you can have multiple delivery streams with the same name.'
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This parameter can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis stream as a source.</p> </li> </ul>'
      ElasticsearchDestinationConfiguration:
        $ref: '#/definitions/ElasticsearchDestinationConfiguration'
        description: The destination in Amazon ES. You can specify only one destination.
      ExtendedS3DestinationConfiguration:
        $ref: '#/definitions/ExtendedS3DestinationConfiguration'
        description: The destination in Amazon S3. You can specify only one destination.
      KinesisStreamSourceConfiguration:
        $ref: '#/definitions/KinesisStreamSourceConfiguration'
        description: 'When a Kinesis stream is used as the source for the delivery stream, a <a>KinesisStreamSourceConfiguration</a> containing the Kinesis stream ARN and the role ARN for the source stream.'
      RedshiftDestinationConfiguration:
        $ref: '#/definitions/RedshiftDestinationConfiguration'
        description: The destination in Amazon Redshift. You can specify only one destination.
      S3DestinationConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: '[Deprecated] The destination in Amazon S3. You can specify only one destination.'
    required:
      - DeliveryStreamName
    type: object
  CreateDeliveryStreamOutput:
    properties:
      DeliveryStreamARN:
        $ref: '#/definitions/DeliveryStreamARN'
        description: The ARN of the delivery stream.
    type: object
  Data:
    maxLength: 1024000
    minLength: 0
    type: string
  DataTableColumns:
    type: string
  DataTableName:
    minLength: 1
    type: string
  DeleteDeliveryStreamInput:
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
    required:
      - DeliveryStreamName
    type: object
  DeleteDeliveryStreamOutput:
    properties: {}
    type: object
  DeliveryStartTimestamp:
    format: date-time
    type: string
  DeliveryStreamARN:
    maxLength: 512
    minLength: 1
    pattern: 'arn:.*'
    type: string
  DeliveryStreamDescription:
    description: Contains information about a delivery stream.
    properties:
      CreateTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the delivery stream was created.
      DeliveryStreamARN:
        $ref: '#/definitions/DeliveryStreamARN'
        description: The Amazon Resource Name (ARN) of the delivery stream.
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      DeliveryStreamStatus:
        $ref: '#/definitions/DeliveryStreamStatus'
        description: The status of the delivery stream.
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis stream as a source.</p> </li> </ul>'
      Destinations:
        $ref: '#/definitions/DestinationDescriptionList'
        description: The destinations.
      HasMoreDestinations:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether there are more destinations available to list.
      LastUpdateTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the delivery stream was last updated.
      Source:
        $ref: '#/definitions/SourceDescription'
        description: 'If the <code>DeliveryStreamType</code> parameter is <code>KinesisStreamAsSource</code>, a <a>SourceDescription</a> object describing the source Kinesis stream.'
      VersionId:
        $ref: '#/definitions/DeliveryStreamVersionId'
        description: 'Each time the destination is updated for a delivery stream, the version ID is changed, and the current version ID is required when updating the destination. This is so that the service knows it is applying the changes to the correct version of the delivery stream.'
    required:
      - DeliveryStreamName
      - DeliveryStreamARN
      - DeliveryStreamStatus
      - DeliveryStreamType
      - VersionId
      - Destinations
      - HasMoreDestinations
    type: object
  DeliveryStreamName:
    maxLength: 64
    minLength: 1
    pattern: '[a-zA-Z0-9_.-]+'
    type: string
  DeliveryStreamNameList:
    items:
      $ref: '#/definitions/DeliveryStreamName'
    type: array
  DeliveryStreamStatus:
    enum:
      - CREATING
      - DELETING
      - ACTIVE
    type: string
  DeliveryStreamType:
    enum:
      - DirectPut
      - KinesisStreamAsSource
    type: string
  DeliveryStreamVersionId:
    maxLength: 50
    minLength: 1
    pattern: '[0-9]+'
    type: string
  DescribeDeliveryStreamInput:
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      ExclusiveStartDestinationId:
        $ref: '#/definitions/DestinationId'
        description: 'The ID of the destination to start returning the destination information. Currently, Kinesis Firehose supports one destination per delivery stream.'
      Limit:
        $ref: '#/definitions/DescribeDeliveryStreamInputLimit'
        description: 'The limit on the number of destinations to return. Currently, you can have one destination per delivery stream.'
    required:
      - DeliveryStreamName
    type: object
  DescribeDeliveryStreamInputLimit:
    maximum: 10000
    minimum: 1
    type: integer
  DescribeDeliveryStreamOutput:
    properties:
      DeliveryStreamDescription:
        $ref: '#/definitions/DeliveryStreamDescription'
        description: Information about the delivery stream.
    required:
      - DeliveryStreamDescription
    type: object
  DestinationDescription:
    description: Describes the destination for a delivery stream.
    properties:
      DestinationId:
        $ref: '#/definitions/DestinationId'
        description: The ID of the destination.
      ElasticsearchDestinationDescription:
        $ref: '#/definitions/ElasticsearchDestinationDescription'
        description: The destination in Amazon ES.
      ExtendedS3DestinationDescription:
        $ref: '#/definitions/ExtendedS3DestinationDescription'
        description: The destination in Amazon S3.
      RedshiftDestinationDescription:
        $ref: '#/definitions/RedshiftDestinationDescription'
        description: The destination in Amazon Redshift.
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: '[Deprecated] The destination in Amazon S3.'
    required:
      - DestinationId
    type: object
  DestinationDescriptionList:
    items:
      $ref: '#/definitions/DestinationDescription'
    type: array
  DestinationId:
    maxLength: 100
    minLength: 1
    type: string
  ElasticsearchBufferingHints:
    description: Describes the buffering to perform before delivering data to the Amazon ES destination.
    properties:
      IntervalInSeconds:
        $ref: '#/definitions/ElasticsearchBufferingIntervalInSeconds'
        description: 'Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).'
      SizeInMBs:
        $ref: '#/definitions/ElasticsearchBufferingSizeInMBs'
        description: '<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>'
    type: object
  ElasticsearchBufferingIntervalInSeconds:
    maximum: 900
    minimum: 60
    type: integer
  ElasticsearchBufferingSizeInMBs:
    maximum: 100
    minimum: 1
    type: integer
  ElasticsearchDestinationConfiguration:
    description: Describes the configuration of a destination in Amazon ES.
    properties:
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: 'The buffering options. If no value is specified, the default values for <b>ElasticsearchBufferingHints</b> are used.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: "The ARN of the Amazon ES domain. The IAM role must have permissions for\_<code>DescribeElasticsearchDomain</code>, <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code>\_after assuming the role specified in <b>RoleARN</b>."
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: "The Elasticsearch index rotation period. Index rotation appends a time stamp to the IndexName to facilitate the expiration of old data. For more information, see <a href=\"http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation\">Index Rotation for Amazon Elasticsearch Service Destination</a>. The default value is\_<code>OneDay</code>."
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon ES. The default value is 300 (5 minutes).
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The ARN of the IAM role to be assumed by Kinesis Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon S3 Bucket Access</a>.'
      S3BackupMode:
        $ref: '#/definitions/ElasticsearchS3BackupMode'
        description: 'Defines how documents should be delivered to Amazon S3. When set to FailedDocumentsOnly, Kinesis Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with elasticsearch-failed/ appended to the key prefix. When set to AllDocuments, Kinesis Firehose delivers all incoming records to Amazon S3, and also writes failed documents with elasticsearch-failed/ appended to the prefix. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-s3-backup">Amazon S3 Backup for Amazon Elasticsearch Service Destination</a>. Default value is FailedDocumentsOnly.'
      S3Configuration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for the backup Amazon S3 location.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: The Elasticsearch type name.
    required:
      - RoleARN
      - DomainARN
      - IndexName
      - TypeName
      - S3Configuration
    type: object
  ElasticsearchDestinationDescription:
    description: The destination description in Amazon ES.
    properties:
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: The buffering options.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options.
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: The ARN of the Amazon ES domain.
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: The Elasticsearch index rotation period
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The Amazon ES retry options.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupMode:
        $ref: '#/definitions/ElasticsearchS3BackupMode'
        description: The Amazon S3 backup mode.
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The Amazon S3 destination.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: The Elasticsearch type name.
    type: object
  ElasticsearchDestinationUpdate:
    description: Describes an update for a destination in Amazon ES.
    properties:
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: 'The buffering options. If no value is specified, <b>ElasticsearchBufferingHints</b> object default values are used. '
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: "The ARN of the Amazon ES domain. The IAM role must have permissions for\_<code>DescribeElasticsearchDomain</code>, <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code>\_after assuming the IAM role specified in <b>RoleARN</b>."
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: "The Elasticsearch index rotation period. Index rotation appends a time stamp to IndexName to facilitate the expiration of old data. For more information, see <a href=\"http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation\">Index Rotation for Amazon Elasticsearch Service Destination</a>. Default value is\_<code>OneDay</code>."
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon ES. The default value is 300 (5 minutes).
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The ARN of the IAM role to be assumed by Kinesis Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon S3 Bucket Access</a>.'
      S3Update:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: The Elasticsearch type name.
    type: object
  ElasticsearchDomainARN:
    maxLength: 512
    minLength: 1
    pattern: 'arn:.*'
    type: string
  ElasticsearchIndexName:
    maxLength: 80
    minLength: 1
    type: string
  ElasticsearchIndexRotationPeriod:
    enum:
      - NoRotation
      - OneHour
      - OneDay
      - OneWeek
      - OneMonth
    type: string
  ElasticsearchRetryDurationInSeconds:
    maximum: 7200
    minimum: 0
    type: integer
  ElasticsearchRetryOptions:
    description: Configures retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon ES.
    properties:
      DurationInSeconds:
        $ref: '#/definitions/ElasticsearchRetryDurationInSeconds'
        description: 'After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Firehose re-attempts delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.'
    type: object
  ElasticsearchS3BackupMode:
    enum:
      - FailedDocumentsOnly
      - AllDocuments
    type: string
  ElasticsearchTypeName:
    maxLength: 100
    minLength: 1
    type: string
  EncryptionConfiguration:
    description: Describes the encryption for a destination in Amazon S3.
    properties:
      KMSEncryptionConfig:
        $ref: '#/definitions/KMSEncryptionConfig'
        description: The encryption key.
      NoEncryptionConfig:
        $ref: '#/definitions/NoEncryptionConfig'
        description: Specifically override existing encryption information to ensure that no encryption is used.
    type: object
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
  ExtendedS3DestinationConfiguration:
    description: Describes the configuration of a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is UNCOMPRESSED.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for backup in Amazon S3.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: The Amazon S3 backup mode.
    required:
      - RoleARN
      - BucketARN
    type: object
  ExtendedS3DestinationDescription:
    description: Describes a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The configuration for backup in Amazon S3.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: The Amazon S3 backup mode.
    required:
      - RoleARN
      - BucketARN
      - BufferingHints
      - CompressionFormat
      - EncryptionConfiguration
    type: object
  ExtendedS3DestinationUpdate:
    description: Describes an update for a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>. '
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: Enables or disables Amazon S3 backup mode.
      S3BackupUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination for backup.
    type: object
  FirehoseSource:
    type: string
  GetKinesisStreamInput:
    properties:
      DeliveryStreamARN:
        $ref: '#/definitions/DeliveryStreamARN'
    required:
      - DeliveryStreamARN
    type: object
  GetKinesisStreamOutput:
    properties:
      CredentialsForReadingKinesisStream:
        $ref: '#/definitions/SessionCredentials'
      KinesisStreamARN:
        $ref: '#/definitions/KinesisStreamARN'
    type: object
  IntervalInSeconds:
    maximum: 900
    minimum: 60
    type: integer
  InvalidArgumentException:
    description: The specified input parameter has a value that is not valid.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  InvalidStreamTypeException:
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
      source:
        $ref: '#/definitions/FirehoseSource'
    type: object
  KMSEncryptionConfig:
    description: Describes an encryption key for a destination in Amazon S3.
    properties:
      AWSKMSKeyARN:
        $ref: '#/definitions/AWSKMSKeyARN'
        description: The ARN of the encryption key. Must belong to the same region as the destination Amazon S3 bucket.
    required:
      - AWSKMSKeyARN
    type: object
  KinesisStreamARN:
    maxLength: 512
    minLength: 1
    pattern: 'arn:.*'
    type: string
  KinesisStreamSourceConfiguration:
    description: The stream and role ARNs for a Kinesis stream used as the source for a delivery stream.
    properties:
      KinesisStreamARN:
        $ref: '#/definitions/KinesisStreamARN'
        description: The ARN of the source Kinesis stream.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the role that provides access to the source Kinesis stream.
    required:
      - KinesisStreamARN
      - RoleARN
    type: object
  KinesisStreamSourceDescription:
    description: Details about a Kinesis stream used as the source for a Kinesis Firehose delivery stream.
    properties:
      DeliveryStartTimestamp:
        $ref: '#/definitions/DeliveryStartTimestamp'
        description: Kinesis Firehose starts retrieving records from the Kinesis stream starting with this time stamp.
      KinesisStreamARN:
        $ref: '#/definitions/KinesisStreamARN'
        description: The ARN of the source Kinesis stream.
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the role used by the source Kinesis stream.
    type: object
  LimitExceededException:
    description: You have already reached the limit for a requested resource.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  ListDeliveryStreamsInput:
    properties:
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis stream as a source.</p> </li> </ul> <p>This parameter is optional. If this parameter is omitted, delivery streams of all types are returned.</p>'
      ExclusiveStartDeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream to start the list with.
      Limit:
        $ref: '#/definitions/ListDeliveryStreamsInputLimit'
        description: The maximum number of delivery streams to list.
    type: object
  ListDeliveryStreamsInputLimit:
    maximum: 10000
    minimum: 1
    type: integer
  ListDeliveryStreamsOutput:
    properties:
      DeliveryStreamNames:
        $ref: '#/definitions/DeliveryStreamNameList'
        description: The names of the delivery streams.
      HasMoreDeliveryStreams:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether there are more delivery streams available to list.
    required:
      - DeliveryStreamNames
      - HasMoreDeliveryStreams
    type: object
  LogGroupName:
    type: string
  LogStreamName:
    type: string
  NoEncryptionConfig:
    enum:
      - NoEncryption
    type: string
  NonNegativeIntegerObject:
    minimum: 0
    type: integer
  Password:
    format: password
    minLength: 6
    type: string
  Prefix:
    type: string
  ProcessingConfiguration:
    description: Describes a data processing configuration.
    properties:
      Enabled:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables data processing.
      Processors:
        $ref: '#/definitions/ProcessorList'
        description: The data processors.
    type: object
  Processor:
    description: Describes a data processor.
    properties:
      Parameters:
        $ref: '#/definitions/ProcessorParameterList'
        description: The processor parameters.
      Type:
        $ref: '#/definitions/ProcessorType'
        description: The type of processor.
    required:
      - Type
    type: object
  ProcessorList:
    items:
      $ref: '#/definitions/Processor'
    type: array
  ProcessorParameter:
    description: Describes the processor parameter.
    properties:
      ParameterName:
        $ref: '#/definitions/ProcessorParameterName'
        description: The name of the parameter.
      ParameterValue:
        $ref: '#/definitions/ProcessorParameterValue'
        description: The parameter value.
    required:
      - ParameterName
      - ParameterValue
    type: object
  ProcessorParameterList:
    items:
      $ref: '#/definitions/ProcessorParameter'
    type: array
  ProcessorParameterName:
    enum:
      - LambdaArn
      - NumberOfRetries
    type: string
  ProcessorParameterValue:
    maxLength: 512
    minLength: 1
    type: string
  ProcessorType:
    enum:
      - Lambda
    type: string
  PutRecordBatchInput:
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      Records:
        $ref: '#/definitions/PutRecordBatchRequestEntryList'
        description: One or more records.
    required:
      - DeliveryStreamName
      - Records
    type: object
  PutRecordBatchOutput:
    properties:
      FailedPutCount:
        $ref: '#/definitions/NonNegativeIntegerObject'
        description: The number of records that might have failed processing.
      RequestResponses:
        $ref: '#/definitions/PutRecordBatchResponseEntryList'
        description: 'The results array. For each record, the index of the response element is the same as the index used in the request array.'
    required:
      - FailedPutCount
      - RequestResponses
    type: object
  PutRecordBatchRequestEntryList:
    items:
      $ref: '#/definitions/Record'
    maxItems: 500
    minItems: 1
    type: array
  PutRecordBatchResponseEntry:
    description: 'Contains the result for an individual record from a <a>PutRecordBatch</a> request. If the record is successfully added to your delivery stream, it receives a record ID. If the record fails to be added to your delivery stream, the result includes an error code and an error message.'
    properties:
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The error code for an individual record result.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message for an individual record result.
      RecordId:
        $ref: '#/definitions/PutResponseRecordId'
        description: The ID of the record.
    type: object
  PutRecordBatchResponseEntryList:
    items:
      $ref: '#/definitions/PutRecordBatchResponseEntry'
    maxItems: 500
    minItems: 1
    type: array
  PutRecordInput:
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      Record:
        $ref: '#/definitions/Record'
        description: The record.
    required:
      - DeliveryStreamName
      - Record
    type: object
  PutRecordOutput:
    properties:
      RecordId:
        $ref: '#/definitions/PutResponseRecordId'
        description: The ID of the record.
    required:
      - RecordId
    type: object
  PutResponseRecordId:
    minLength: 1
    type: string
  Record:
    description: The unit of data in a delivery stream.
    properties:
      Data:
        $ref: '#/definitions/Data'
        description: 'The data blob, which is base64-encoded when the blob is serialized. The maximum size of the data blob, before base64-encoding, is 1,000 KB.'
    required:
      - Data
    type: object
  RedshiftDestinationConfiguration:
    description: Describes the configuration of a destination in Amazon Redshift.
    properties:
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      Password:
        $ref: '#/definitions/Password'
        description: The user password.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for backup in Amazon S3.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3Configuration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: <p>The configuration for the intermediate Amazon S3 location from which Amazon Redshift obtains data. Restrictions are described in the topic for <a>CreateDeliveryStream</a>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression formats.</p>
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
    required:
      - RoleARN
      - ClusterJDBCURL
      - CopyCommand
      - Username
      - Password
      - S3Configuration
    type: object
  RedshiftDestinationDescription:
    description: Describes a destination in Amazon Redshift.
    properties:
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The configuration for backup in Amazon S3.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The Amazon S3 destination.
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
    required:
      - RoleARN
      - ClusterJDBCURL
      - CopyCommand
      - Username
      - S3DestinationDescription
    type: object
  RedshiftDestinationUpdate:
    description: Describes an update for a destination in Amazon Redshift.
    properties:
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      Password:
        $ref: '#/definitions/Password'
        description: The user password.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination for backup.
      S3Update:
        $ref: '#/definitions/S3DestinationUpdate'
        description: <p>The Amazon S3 destination.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <b>RedshiftDestinationUpdate.S3Update</b> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression formats.</p>
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
    type: object
  RedshiftRetryDurationInSeconds:
    maximum: 7200
    minimum: 0
    type: integer
  RedshiftRetryOptions:
    description: Configures retry behavior in case Kinesis Firehose is unable to deliver documents to Amazon Redshift.
    properties:
      DurationInSeconds:
        $ref: '#/definitions/RedshiftRetryDurationInSeconds'
        description: 'The length of time during which Kinesis Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.'
    type: object
  RedshiftS3BackupMode:
    enum:
      - Disabled
      - Enabled
    type: string
  ResourceInUseException:
    description: The resource is already in use and not available for this operation.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  ResourceNotFoundException:
    description: The specified resource could not be found.
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  RoleARN:
    maxLength: 512
    minLength: 1
    pattern: 'arn:.*'
    type: string
  S3BackupMode:
    enum:
      - Disabled
      - Enabled
    type: string
  S3DestinationConfiguration:
    description: Describes the configuration of a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <b>BufferingHints</b> object default values are used.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: '<p>The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified for Amazon Redshift destinations because they are not supported by the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket.</p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
    required:
      - RoleARN
      - BucketARN
    type: object
  S3DestinationDescription:
    description: Describes a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <b>BufferingHints</b> object default values are used.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
    required:
      - RoleARN
      - BucketARN
      - BufferingHints
      - CompressionFormat
      - EncryptionConfiguration
    type: object
  S3DestinationUpdate:
    description: Describes an update for a destination in Amazon S3.
    properties:
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: The ARN of the S3 bucket.
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <b>BufferingHints</b> object default values are used.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: '<p>The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified for Amazon Redshift destinations because they are not supported by the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket.</p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.'
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: The ARN of the AWS credentials.
    type: object
  SecretAccessKey:
    type: string
  ServiceUnavailableException:
    description: 'The service is unavailable, back off and retry the operation. If you continue to see the exception, throughput limits for the delivery stream may have been exceeded. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>.'
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    type: object
  SessionCredentials:
    properties:
      AccessKeyId:
        $ref: '#/definitions/AccessKeyId'
      Expiration:
        $ref: '#/definitions/Timestamp'
      SecretAccessKey:
        $ref: '#/definitions/SecretAccessKey'
      SessionToken:
        $ref: '#/definitions/SessionToken'
    required:
      - AccessKeyId
      - SecretAccessKey
      - SessionToken
      - Expiration
    type: object
  SessionToken:
    type: string
  SizeInMBs:
    maximum: 128
    minimum: 1
    type: integer
  SourceDescription:
    description: Details about a Kinesis stream used as the source for a Kinesis Firehose delivery stream.
    properties:
      KinesisStreamSourceDescription:
        $ref: '#/definitions/KinesisStreamSourceDescription'
        description: The <a>KinesisStreamSourceDescription</a> value for the source Kinesis stream.
    type: object
  Timestamp:
    format: date-time
    type: string
  UpdateDestinationInput:
    properties:
      CurrentDeliveryStreamVersionId:
        $ref: '#/definitions/DeliveryStreamVersionId'
        description: 'Obtain this value from the <b>VersionId</b> result of <a>DeliveryStreamDescription</a>. This value is required, and helps the service to perform conditional operations. For example, if there is an interleaving update and this value is null, then the update destination fails. After the update is successful, the <b>VersionId</b> value is updated. The service then performs a merge of the old configuration with the new configuration.'
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      DestinationId:
        $ref: '#/definitions/DestinationId'
        description: The ID of the destination.
      ElasticsearchDestinationUpdate:
        $ref: '#/definitions/ElasticsearchDestinationUpdate'
        description: Describes an update for a destination in Amazon ES.
      ExtendedS3DestinationUpdate:
        $ref: '#/definitions/ExtendedS3DestinationUpdate'
        description: Describes an update for a destination in Amazon S3.
      RedshiftDestinationUpdate:
        $ref: '#/definitions/RedshiftDestinationUpdate'
        description: Describes an update for a destination in Amazon Redshift.
      S3DestinationUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: '[Deprecated] Describes an update for a destination in Amazon S3.'
    required:
      - DeliveryStreamName
      - CurrentDeliveryStreamVersionId
      - DestinationId
    type: object
  UpdateDestinationOutput:
    properties: {}
    type: object
  Username:
    format: password
    minLength: 1
    type: string
