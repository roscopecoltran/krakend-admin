syntax = "proto3";

import "google/api/annotations.proto";

package awsstoragegateway;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ActivateGatewayInput body = 10;
}

message Post#AddCacheRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddCacheInput body = 10;
}

message Post#AddTagsToResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsToResourceInput body = 10;
}

message Post#AddUploadBufferRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddUploadBufferInput body = 10;
}

message Post#AddWorkingStorageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddWorkingStorageInput body = 10;
}

message Post#CancelArchivalRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelArchivalInput body = 10;
}

message Post#CancelRetrievalRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelRetrievalInput body = 10;
}

message Post#CreateCachediSCSIVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateCachediSCSIVolumeInput body = 10;
}

message Post#CreateNFSFileShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateNFSFileShareInput body = 10;
}

message Post#CreateSnapshotRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSnapshotInput body = 10;
}

message Post#CreateSnapshotFromVolumeRecoveryPointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateSnapshotFromVolumeRecoveryPointInput body = 10;
}

message Post#CreateStorediSCSIVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateStorediSCSIVolumeInput body = 10;
}

message Post#CreateTapeWithBarcodeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateTapeWithBarcodeInput body = 10;
}

message Post#CreateTapesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateTapesInput body = 10;
}

message Post#DeleteBandwidthRateLimitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteBandwidthRateLimitInput body = 10;
}

message Post#DeleteChapCredentialsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteChapCredentialsInput body = 10;
}

message Post#DeleteFileShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteFileShareInput body = 10;
}

message Post#DeleteGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteGatewayInput body = 10;
}

message Post#DeleteSnapshotScheduleRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteSnapshotScheduleInput body = 10;
}

message Post#DeleteTapeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteTapeInput body = 10;
}

message Post#DeleteTapeArchiveRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteTapeArchiveInput body = 10;
}

message Post#DeleteVolumeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteVolumeInput body = 10;
}

message Post#DescribeBandwidthRateLimitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeBandwidthRateLimitInput body = 10;
}

message Post#DescribeCacheRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCacheInput body = 10;
}

message Post#DescribeCachediSCSIVolumesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCachediSCSIVolumesInput body = 10;
}

message Post#DescribeChapCredentialsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeChapCredentialsInput body = 10;
}

message Post#DescribeGatewayInformationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeGatewayInformationInput body = 10;
}

message Post#DescribeMaintenanceStartTimeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeMaintenanceStartTimeInput body = 10;
}

message Post#DescribeNFSFileSharesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeNFSFileSharesInput body = 10;
}

message Post#DescribeSnapshotScheduleRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeSnapshotScheduleInput body = 10;
}

message Post#DescribeStorediSCSIVolumesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeStorediSCSIVolumesInput body = 10;
}

message Post#DescribeTapeArchivesRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTapeArchivesInput body = 12;
}

message Post#DescribeTapeRecoveryPointsRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTapeRecoveryPointsInput body = 12;
}

message Post#DescribeTapesRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTapesInput body = 12;
}

message Post#DescribeUploadBufferRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeUploadBufferInput body = 10;
}

message Post#DescribeVTLDevicesRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeVTLDevicesInput body = 12;
}

message Post#DescribeWorkingStorageRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeWorkingStorageInput body = 10;
}

message Post#DisableGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisableGatewayInput body = 10;
}

message Post#ListFileSharesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListFileSharesInput body = 10;
}

message Post#ListGatewaysRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListGatewaysInput body = 12;
}

message Post#ListLocalDisksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListLocalDisksInput body = 10;
}

message Post#ListTagsForResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsForResourceInput body = 10;
}

message Post#ListTapesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTapesInput body = 10;
}

message Post#ListVolumeInitiatorsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListVolumeInitiatorsInput body = 10;
}

message Post#ListVolumeRecoveryPointsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListVolumeRecoveryPointsInput body = 10;
}

message Post#ListVolumesRequest {
    string Action = 1;
    // Pagination limit
    string Limit = 2;
    // Pagination token
    string Marker = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListVolumesInput body = 12;
}

message Post#RefreshCacheRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RefreshCacheInput body = 10;
}

message Post#RemoveTagsFromResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsFromResourceInput body = 10;
}

message Post#ResetCacheRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ResetCacheInput body = 10;
}

message Post#RetrieveTapeArchiveRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RetrieveTapeArchiveInput body = 10;
}

message Post#RetrieveTapeRecoveryPointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RetrieveTapeRecoveryPointInput body = 10;
}

message Post#SetLocalConsolePasswordRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    SetLocalConsolePasswordInput body = 10;
}

message Post#ShutdownGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ShutdownGatewayInput body = 10;
}

message Post#StartGatewayRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    StartGatewayInput body = 10;
}

message Post#UpdateBandwidthRateLimitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateBandwidthRateLimitInput body = 10;
}

message Post#UpdateChapCredentialsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateChapCredentialsInput body = 10;
}

message Post#UpdateGatewayInformationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateGatewayInformationInput body = 10;
}

message Post#UpdateGatewaySoftwareNowRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateGatewaySoftwareNowInput body = 10;
}

message Post#UpdateMaintenanceStartTimeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateMaintenanceStartTimeInput body = 10;
}

message Post#UpdateNFSFileShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateNFSFileShareInput body = 10;
}

message Post#UpdateSnapshotScheduleRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateSnapshotScheduleInput body = 10;
}

message Post#UpdateVTLDeviceTypeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateVTLDeviceTypeInput body = 10;
}

message ActivateGatewayInput {
    // Your gateway activation key. You can obtain the activation key by sending an HTTP GET request with redirects enabled to the gateway IP address (port 80). The redirect URL returned in the response provides you the activation key for your gateway in the query string parameter <code>activationKey</code>. It may also include other activation-related parameters, however, these are merely defaults -- the arguments you pass to the <code>ActivateGateway</code> API call determine the actual configuration of your gateway.
    string ActivationKey = 1;
    // The name you configured for your gateway.
    string GatewayName = 2;
    // <p>A value that indicates the region where you want to store your data. The gateway region specified must be the same region as the region in your <code>Host</code> header in the request. For more information about available regions and endpoints for AWS Storage Gateway, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sg_region">Regions and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p> <p> Valid Values: "us-east-1", "us-east-2", "us-west-1", "us-west-2", "ca-central-1", "eu-west-1", "eu-central-1", "eu-west-2", "ap-northeast-1", "ap-northeast-2", "ap-southeast-1", "ap-southeast-2", "ap-south-1", "sa-east-1"</p>
    string GatewayRegion = 3;
    // A value that indicates the time zone you want to set for the gateway. The time zone is of the format "GMT-hr:mm" or "GMT+hr:mm". For example, GMT-4:00 indicates the time is 4 hours behind GMT. GMT+2:00 indicates the time is 2 hours ahead of GMT. The time zone is used, for example, for scheduling snapshots and your gateway's maintenance schedule.
    string GatewayTimezone = 4;
    // <p>A value that defines the type of gateway to activate. The type specified is critical to all later functions of the gateway and cannot be changed after activation. The default value is <code>STORED</code>. </p> <p> Valid Values: "STORED", "CACHED", "VTL", "FILE_S3"</p>
    string GatewayType = 5;
    // <p>The value that indicates the type of medium changer to use for tape gateway. This field is optional.</p> <p> Valid Values: "STK-L700", "AWS-Gateway-VTL"</p>
    string MediumChangerType = 6;
    // <p>The value that indicates the type of tape drive to use for tape gateway. This field is optional.</p> <p> Valid Values: "IBM-ULT3580-TD5" </p>
    string TapeDriveType = 7;
}

message ActivateGatewayOutput {
    string GatewayARN = 1;
}

message AddCacheInput {
    array DiskIds = 1;
    string GatewayARN = 2;
}

message AddCacheOutput {
    string GatewayARN = 1;
}

message AddTagsToResourceInput {
    // The Amazon Resource Name (ARN) of the resource you want to add tags to.
    string ResourceARN = 1;
    // <p>The key-value pair that represents the tag you want to add to the resource. The value can be an empty string.</p> <note> <p>Valid characters for key and value are letters, spaces, and numbers representable in UTF-8 format, and the following special characters: + - = . _ : / @.</p> </note>
    array Tags = 2;
}

message AddTagsToResourceOutput {
    // The Amazon Resource Name (ARN) of the resource you want to add tags to.
    string ResourceARN = 1;
}

message AddUploadBufferInput {
    array DiskIds = 1;
    string GatewayARN = 2;
}

message AddUploadBufferOutput {
    string GatewayARN = 1;
}

message AddWorkingStorageInput {
    // An array of strings that identify disks that are to be configured as working storage. Each string have a minimum length of 1 and maximum length of 300. You can get the disk IDs from the <a>ListLocalDisks</a> API.
    array DiskIds = 1;
    string GatewayARN = 2;
}

message AddWorkingStorageOutput {
    string GatewayARN = 1;
}

message CachediSCSIVolume {
    // The date the volume was created. Volumes created prior to March 28, 2017 don’t have this time stamp.
    string CreatedDate = 1;
    // If the cached volume was created from a snapshot, this field contains the snapshot ID used, e.g. snap-78e22663. Otherwise, this field is not included.
    string SourceSnapshotId = 2;
    // The Amazon Resource Name (ARN) of the storage volume.
    string VolumeARN = 3;
    // The unique identifier of the volume, e.g. vol-AE4B946D.
    string VolumeId = 4;
    // Represents the percentage complete if the volume is restoring or bootstrapping that represents the percent of data transferred. This field does not appear in the response if the cached volume is not restoring or bootstrapping.
    number VolumeProgress = 5;
    // The size, in bytes, of the volume capacity.
    integer VolumeSizeInBytes = 6;
    // One of the VolumeStatus values that indicates the state of the storage volume.
    string VolumeStatus = 7;
    // One of the VolumeType enumeration values that describes the type of the volume.
    string VolumeType = 8;
    // An <a>VolumeiSCSIAttributes</a> object that represents a collection of iSCSI attributes for one stored volume.
    VolumeiSCSIAttributes VolumeiSCSIAttributes = 9;
}

repeated CachediSCSIVolume CachediSCSIVolumes = 1

message CancelArchivalInput {
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of the virtual tape you want to cancel archiving for.
    string TapeARN = 2;
}

message CancelArchivalOutput {
    // The Amazon Resource Name (ARN) of the virtual tape for which archiving was canceled.
    string TapeARN = 1;
}

message CancelRetrievalInput {
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of the virtual tape you want to cancel retrieval for.
    string TapeARN = 2;
}

message CancelRetrievalOutput {
    // The Amazon Resource Name (ARN) of the virtual tape for which retrieval was canceled.
    string TapeARN = 1;
}

repeated ChapInfo ChapCredentials = 1

message ChapInfo {
    // The iSCSI initiator that connects to the target.
    string InitiatorName = 1;
    // The secret key that the initiator (for example, the Windows client) must provide to participate in mutual CHAP with the target.
    string SecretToAuthenticateInitiator = 2;
    // The secret key that the target must provide to participate in mutual CHAP with the initiator (e.g. Windows client).
    string SecretToAuthenticateTarget = 3;
    // <p>The Amazon Resource Name (ARN) of the volume.</p> <p> Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    string TargetARN = 4;
}

message CreateCachediSCSIVolumeInput {
    string ClientToken = 1;
    string GatewayARN = 2;
    string NetworkInterfaceId = 3;
    string SnapshotId = 4;
    // The ARN for an existing volume. Specifying this ARN makes the new volume into an exact copy of the specified existing volume's latest recovery point. The <code>VolumeSizeInBytes</code> value for this new volume must be equal to or larger than the size of the existing volume, in bytes.
    string SourceVolumeARN = 5;
    string TargetName = 6;
    integer VolumeSizeInBytes = 7;
}

message CreateCachediSCSIVolumeOutput {
    string TargetARN = 1;
    string VolumeARN = 2;
}

message CreateNFSFileShareInput {
    // The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks.
    array ClientList = 1;
    // A unique string value that you supply that is used by file gateway to ensure idempotent file share creation.
    string ClientToken = 2;
    // The default storage class for objects put into an Amazon S3 bucket by file gateway. Possible values are S3_STANDARD or S3_STANDARD_IA. If this field is not populated, the default value S3_STANDARD is used. Optional.
    string DefaultStorageClass = 3;
    // The Amazon Resource Name (ARN) of the file gateway on which you want to create a file share.
    string GatewayARN = 4;
    // True to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3. Optional.
    boolean KMSEncrypted = 5;
    // The KMS key used for Amazon S3 server side encryption. This value can only be set when KmsEncrypted is true. Optional.
    string KMSKey = 6;
    // The ARN of the backed storage used for storing file data.
    string LocationARN = 7;
    // File share default values. Optional.
    NFSFileShareDefaults NFSFileShareDefaults = 8;
    // Sets the write status of a file share: "true" if the write status is read-only, and otherwise "false".
    boolean ReadOnly = 9;
    // The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
    string Role = 10;
    // <p>Maps a user to anonymous user. Valid options are the following: </p> <ul> <li> <p>"RootSquash" - Only root is mapped to anonymous user.</p> </li> <li> <p>"NoSquash" - No one is mapped to anonymous user.</p> </li> <li> <p>"AllSquash" - Everyone is mapped to anonymous user.</p> </li> </ul>
    string Squash = 11;
}

message CreateNFSFileShareOutput {
    // The Amazon Resource Name (ARN) of the newly created file share.
    string FileShareARN = 1;
}

message CreateSnapshotFromVolumeRecoveryPointInput {
    string SnapshotDescription = 1;
    string VolumeARN = 2;
}

message CreateSnapshotFromVolumeRecoveryPointOutput {
    string SnapshotId = 1;
    string VolumeARN = 2;
    string VolumeRecoveryPointTime = 3;
}

message CreateSnapshotInput {
    // Textual description of the snapshot that appears in the Amazon EC2 console, Elastic Block Store snapshots panel in the <b>Description</b> field, and in the AWS Storage Gateway snapshot <b>Details</b> pane, <b>Description</b> field
    string SnapshotDescription = 1;
    // The Amazon Resource Name (ARN) of the volume. Use the <a>ListVolumes</a> operation to return a list of gateway volumes.
    string VolumeARN = 2;
}

message CreateSnapshotOutput {
    // The snapshot ID that is used to refer to the snapshot in future operations such as describing snapshots (Amazon Elastic Compute Cloud API <code>DescribeSnapshots</code>) or creating a volume from a snapshot (<a>CreateStorediSCSIVolume</a>).
    string SnapshotId = 1;
    // The Amazon Resource Name (ARN) of the volume of which the snapshot was taken.
    string VolumeARN = 2;
}

message CreateStorediSCSIVolumeInput {
    // The unique identifier for the gateway local disk that is configured as a stored volume. Use <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/API_ListLocalDisks.html">ListLocalDisks</a> to list disk IDs for a gateway.
    string DiskId = 1;
    string GatewayARN = 2;
    // <p>The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted. Use <a>DescribeGatewayInformation</a> to get a list of the network interfaces available on a gateway.</p> <p> Valid Values: A valid IP address.</p>
    string NetworkInterfaceId = 3;
    // <p>Specify this field as true if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume.</p> <p> Valid Values: true, false</p>
    boolean PreserveExistingData = 4;
    // The snapshot ID (e.g. "snap-1122aabb") of the snapshot to restore as the new stored volume. Specify this field if you want to create the iSCSI storage volume from a snapshot otherwise do not include this field. To list snapshots for your account use <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html">DescribeSnapshots</a> in the <i>Amazon Elastic Compute Cloud API Reference</i>.
    string SnapshotId = 5;
    // The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. For example, specifying <code>TargetName</code> as <i>myvolume</i> results in the target ARN of arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/target/iqn.1997-05.com.amazon:myvolume. The target name must be unique across all volumes of a gateway.
    string TargetName = 6;
}

message CreateStorediSCSIVolumeOutput {
    // he Amazon Resource Name (ARN) of the volume target that includes the iSCSI name that initiators can use to connect to the target.
    string TargetARN = 1;
    // The Amazon Resource Name (ARN) of the configured volume.
    string VolumeARN = 2;
    // The size of the volume in bytes.
    integer VolumeSizeInBytes = 3;
}

message CreateTapeWithBarcodeInput {
    // The unique Amazon Resource Name (ARN) that represents the gateway to associate the virtual tape with. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.
    string GatewayARN = 1;
    // <p>The barcode that you want to assign to the tape.</p> <note> <p>Barcodes cannot be reused. This includes barcodes used for tapes that have been deleted.</p> </note>
    string TapeBarcode = 2;
    // <p>The size, in bytes, of the virtual tape that you want to create.</p> <note> <p>The size must be aligned by gigabyte (1024*1024*1024 byte).</p> </note>
    integer TapeSizeInBytes = 3;
}

message CreateTapeWithBarcodeOutput {
    // A unique Amazon Resource Name (ARN) that represents the virtual tape that was created.
    string TapeARN = 1;
}

message CreateTapesInput {
    // <p>A unique identifier that you use to retry a request. If you retry a request, use the same <code>ClientToken</code> you specified in the initial request.</p> <note> <p>Using the same <code>ClientToken</code> prevents creating the tape multiple times.</p> </note>
    string ClientToken = 1;
    // The unique Amazon Resource Name (ARN) that represents the gateway to associate the virtual tapes with. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.
    string GatewayARN = 2;
    // The number of virtual tapes that you want to create.
    integer NumTapesToCreate = 3;
    // <p>A prefix that you append to the barcode of the virtual tape you are creating. This prefix makes the barcode unique.</p> <note> <p>The prefix must be 1 to 4 characters in length and must be one of the uppercase letters from A to Z.</p> </note>
    string TapeBarcodePrefix = 4;
    // <p>The size, in bytes, of the virtual tapes that you want to create.</p> <note> <p>The size must be aligned by gigabyte (1024*1024*1024 byte).</p> </note>
    integer TapeSizeInBytes = 5;
}

message CreateTapesOutput {
    // A list of unique Amazon Resource Names (ARNs) that represents the virtual tapes that were created.
    array TapeARNs = 1;
}

message DeleteBandwidthRateLimitInput {
    // <p>One of the BandwidthType values that indicates the gateway bandwidth rate limit to delete.</p> <p>Valid Values: <code>Upload</code>, <code>Download</code>, <code>All</code>.</p>
    string BandwidthType = 1;
    string GatewayARN = 2;
}

message DeleteBandwidthRateLimitOutput {
    string GatewayARN = 1;
}

message DeleteChapCredentialsInput {
    // The iSCSI initiator that connects to the target.
    string InitiatorName = 1;
    // The Amazon Resource Name (ARN) of the iSCSI volume target. Use the <a>DescribeStorediSCSIVolumes</a> operation to return to retrieve the TargetARN for specified VolumeARN.
    string TargetARN = 2;
}

message DeleteChapCredentialsOutput {
    // The iSCSI initiator that connects to the target.
    string InitiatorName = 1;
    // The Amazon Resource Name (ARN) of the target.
    string TargetARN = 2;
}

message DeleteFileShareInput {
    // The Amazon Resource Name (ARN) of the file share to be deleted.
    string FileShareARN = 1;
    // If set to true, deletes a file share immediately and aborts all data uploads to AWS. Otherwise the file share is not deleted until all data is uploaded to AWS. This process aborts the data upload process and the file share enters the FORCE_DELETING status.
    boolean ForceDelete = 2;
}

message DeleteFileShareOutput {
    // The Amazon Resource Name (ARN) of the deleted file share.
    string FileShareARN = 1;
}

message DeleteGatewayInput {
    string GatewayARN = 1;
}

message DeleteGatewayOutput {
    string GatewayARN = 1;
}

message DeleteSnapshotScheduleInput {
    string VolumeARN = 1;
}

message DeleteSnapshotScheduleOutput {
    string VolumeARN = 1;
}

message DeleteTapeArchiveInput {
    // The Amazon Resource Name (ARN) of the virtual tape to delete from the virtual tape shelf (VTS).
    string TapeARN = 1;
}

message DeleteTapeArchiveOutput {
    // The Amazon Resource Name (ARN) of the virtual tape that was deleted from the virtual tape shelf (VTS).
    string TapeARN = 1;
}

message DeleteTapeInput {
    // The unique Amazon Resource Name (ARN) of the gateway that the virtual tape to delete is associated with. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of the virtual tape to delete.
    string TapeARN = 2;
}

message DeleteTapeOutput {
    // The Amazon Resource Name (ARN) of the deleted virtual tape.
    string TapeARN = 1;
}

message DeleteVolumeInput {
    // The Amazon Resource Name (ARN) of the volume. Use the <a>ListVolumes</a> operation to return a list of gateway volumes.
    string VolumeARN = 1;
}

message DeleteVolumeOutput {
    // The Amazon Resource Name (ARN) of the storage volume that was deleted. It is the same ARN you provided in the request.
    string VolumeARN = 1;
}

message DescribeBandwidthRateLimitInput {
    string GatewayARN = 1;
}

message DescribeBandwidthRateLimitOutput {
    // The average download bandwidth rate limit in bits per second. This field does not appear in the response if the download rate limit is not set.
    integer AverageDownloadRateLimitInBitsPerSec = 1;
    // The average upload bandwidth rate limit in bits per second. This field does not appear in the response if the upload rate limit is not set.
    integer AverageUploadRateLimitInBitsPerSec = 2;
    string GatewayARN = 3;
}

message DescribeCacheInput {
    string GatewayARN = 1;
}

message DescribeCacheOutput {
    integer CacheAllocatedInBytes = 1;
    number CacheDirtyPercentage = 2;
    number CacheHitPercentage = 3;
    number CacheMissPercentage = 4;
    number CacheUsedPercentage = 5;
    array DiskIds = 6;
    string GatewayARN = 7;
}

message DescribeCachediSCSIVolumesInput {
    array VolumeARNs = 1;
}

message DescribeCachediSCSIVolumesOutput {
    // An array of objects where each object contains metadata about one cached volume.
    array CachediSCSIVolumes = 1;
}

message DescribeChapCredentialsInput {
    // The Amazon Resource Name (ARN) of the iSCSI volume target. Use the <a>DescribeStorediSCSIVolumes</a> operation to return to retrieve the TargetARN for specified VolumeARN.
    string TargetARN = 1;
}

message DescribeChapCredentialsOutput {
    // <p>An array of <a>ChapInfo</a> objects that represent CHAP credentials. Each object in the array contains CHAP credential information for one target-initiator pair. If no CHAP credentials are set, an empty array is returned. CHAP credential information is provided in a JSON object with the following fields:</p> <ul> <li> <p> <b>InitiatorName</b>: The iSCSI initiator that connects to the target.</p> </li> <li> <p> <b>SecretToAuthenticateInitiator</b>: The secret key that the initiator (for example, the Windows client) must provide to participate in mutual CHAP with the target.</p> </li> <li> <p> <b>SecretToAuthenticateTarget</b>: The secret key that the target must provide to participate in mutual CHAP with the initiator (e.g. Windows client).</p> </li> <li> <p> <b>TargetARN</b>: The Amazon Resource Name (ARN) of the storage volume.</p> </li> </ul>
    array ChapCredentials = 1;
}

message DescribeGatewayInformationInput {
    string GatewayARN = 1;
}

message DescribeGatewayInformationOutput {
    string GatewayARN = 1;
    // The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.
    string GatewayId = 2;
    // The name you configured for your gateway.
    string GatewayName = 3;
    // A <a>NetworkInterface</a> array that contains descriptions of the gateway network interfaces.
    array GatewayNetworkInterfaces = 4;
    // A value that indicates the operating state of the gateway.
    string GatewayState = 5;
    // A value that indicates the time zone configured for the gateway.
    string GatewayTimezone = 6;
    // The type of the gateway.
    string GatewayType = 7;
    // The date on which the last software update was applied to the gateway. If the gateway has never been updated, this field does not return a value in the response.
    string LastSoftwareUpdate = 8;
    // The date on which an update to the gateway is available. This date is in the time zone of the gateway. If the gateway is not available for an update this field is not returned in the response.
    string NextUpdateAvailabilityDate = 9;
}

message DescribeMaintenanceStartTimeInput {
    string GatewayARN = 1;
}

message DescribeMaintenanceStartTimeOutput {
    // An ordinal number between 0 and 6 that represents the day of the week, where 0 represents Sunday and 6 represents Saturday. The day of week is in the time zone of the gateway.
    integer DayOfWeek = 1;
    string GatewayARN = 2;
    // The hour component of the maintenance start time represented as <i>hh</i>, where <i>hh</i> is the hour (0 to 23). The hour of the day is in the time zone of the gateway.
    integer HourOfDay = 3;
    // The minute component of the maintenance start time represented as <i>mm</i>, where <i>mm</i> is the minute (0 to 59). The minute of the hour is in the time zone of the gateway.
    integer MinuteOfHour = 4;
    string Timezone = 5;
}

message DescribeNFSFileSharesInput {
    // An array containing the Amazon Resource Name (ARN) of each file share to be described.
    array FileShareARNList = 1;
}

message DescribeNFSFileSharesOutput {
    // An array containing a description for each requested file share.
    array NFSFileShareInfoList = 1;
}

message DescribeSnapshotScheduleInput {
    // The Amazon Resource Name (ARN) of the volume. Use the <a>ListVolumes</a> operation to return a list of gateway volumes.
    string VolumeARN = 1;
}

message DescribeSnapshotScheduleOutput {
    string Description = 1;
    integer RecurrenceInHours = 2;
    integer StartAt = 3;
    string Timezone = 4;
    string VolumeARN = 5;
}

message DescribeStorediSCSIVolumesInput {
    // An array of strings where each string represents the Amazon Resource Name (ARN) of a stored volume. All of the specified stored volumes must from the same gateway. Use <a>ListVolumes</a> to get volume ARNs for a gateway.
    array VolumeARNs = 1;
}

message DescribeStorediSCSIVolumesOutput {
    array StorediSCSIVolumes = 1;
}

message DescribeTapeArchivesInput {
    // Specifies that the number of virtual tapes descried be limited to the specified number.
    integer Limit = 1;
    // An opaque string that indicates the position at which to begin describing virtual tapes.
    string Marker = 2;
    // Specifies one or more unique Amazon Resource Names (ARNs) that represent the virtual tapes you want to describe.
    array TapeARNs = 3;
}

message DescribeTapeArchivesOutput {
    // An opaque string that indicates the position at which the virtual tapes that were fetched for description ended. Use this marker in your next request to fetch the next set of virtual tapes in the virtual tape shelf (VTS). If there are no more virtual tapes to describe, this field does not appear in the response.
    string Marker = 1;
    // An array of virtual tape objects in the virtual tape shelf (VTS). The description includes of the Amazon Resource Name(ARN) of the virtual tapes. The information returned includes the Amazon Resource Names (ARNs) of the tapes, size of the tapes, status of the tapes, progress of the description and tape barcode.
    array TapeArchives = 2;
}

message DescribeTapeRecoveryPointsInput {
    string GatewayARN = 1;
    // Specifies that the number of virtual tape recovery points that are described be limited to the specified number.
    integer Limit = 2;
    // An opaque string that indicates the position at which to begin describing the virtual tape recovery points.
    string Marker = 3;
}

message DescribeTapeRecoveryPointsOutput {
    string GatewayARN = 1;
    // <p>An opaque string that indicates the position at which the virtual tape recovery points that were listed for description ended.</p> <p>Use this marker in your next request to list the next set of virtual tape recovery points in the list. If there are no more recovery points to describe, this field does not appear in the response.</p>
    string Marker = 2;
    // An array of TapeRecoveryPointInfos that are available for the specified gateway.
    array TapeRecoveryPointInfos = 3;
}

message DescribeTapesInput {
    string GatewayARN = 1;
    // <p>Specifies that the number of virtual tapes described be limited to the specified number.</p> <note> <p>Amazon Web Services may impose its own limit, if this field is not set.</p> </note>
    integer Limit = 2;
    // <p>A marker value, obtained in a previous call to <code>DescribeTapes</code>. This marker indicates which page of results to retrieve. </p> <p>If not specified, the first page of results is retrieved.</p>
    string Marker = 3;
    // Specifies one or more unique Amazon Resource Names (ARNs) that represent the virtual tapes you want to describe. If this parameter is not specified, Tape gateway returns a description of all virtual tapes associated with the specified gateway.
    array TapeARNs = 4;
}

message DescribeTapesOutput {
    // <p>An opaque string which can be used as part of a subsequent DescribeTapes call to retrieve the next page of results.</p> <p>If a response does not contain a marker, then there are no more results to be retrieved.</p>
    string Marker = 1;
    // An array of virtual tape descriptions.
    array Tapes = 2;
}

message DescribeUploadBufferInput {
    string GatewayARN = 1;
}

message DescribeUploadBufferOutput {
    array DiskIds = 1;
    string GatewayARN = 2;
    integer UploadBufferAllocatedInBytes = 3;
    integer UploadBufferUsedInBytes = 4;
}

message DescribeVTLDevicesInput {
    string GatewayARN = 1;
    // Specifies that the number of VTL devices described be limited to the specified number.
    integer Limit = 2;
    // An opaque string that indicates the position at which to begin describing the VTL devices.
    string Marker = 3;
    // <p>An array of strings, where each string represents the Amazon Resource Name (ARN) of a VTL device.</p> <note> <p>All of the specified VTL devices must be from the same gateway. If no VTL devices are specified, the result will contain all devices on the specified gateway.</p> </note>
    array VTLDeviceARNs = 4;
}

message DescribeVTLDevicesOutput {
    string GatewayARN = 1;
    // An opaque string that indicates the position at which the VTL devices that were fetched for description ended. Use the marker in your next request to fetch the next set of VTL devices in the list. If there are no more VTL devices to describe, this field does not appear in the response.
    string Marker = 2;
    // An array of VTL device objects composed of the Amazon Resource Name(ARN) of the VTL devices.
    array VTLDevices = 3;
}

message DescribeWorkingStorageInput {
    string GatewayARN = 1;
}

message DescribeWorkingStorageOutput {
    // An array of the gateway's local disk IDs that are configured as working storage. Each local disk ID is specified as a string (minimum length of 1 and maximum length of 300). If no local disks are configured as working storage, then the DiskIds array is empty.
    array DiskIds = 1;
    string GatewayARN = 2;
    // The total working storage in bytes allocated for the gateway. If no working storage is configured for the gateway, this field returns 0.
    integer WorkingStorageAllocatedInBytes = 3;
    // The total working storage in bytes in use by the gateway. If no working storage is configured for the gateway, this field returns 0.
    integer WorkingStorageUsedInBytes = 4;
}

message DeviceiSCSIAttributes {
    // Indicates whether mutual CHAP is enabled for the iSCSI target.
    boolean ChapEnabled = 1;
    // The network interface identifier of the VTL device.
    string NetworkInterfaceId = 2;
    // The port used to communicate with iSCSI VTL device targets.
    integer NetworkInterfacePort = 3;
    // Specifies the unique Amazon Resource Name(ARN) that encodes the iSCSI qualified name(iqn) of a tape drive or media changer target.
    string TargetARN = 4;
}

message DisableGatewayInput {
    string GatewayARN = 1;
}

message DisableGatewayOutput {
    // The unique Amazon Resource Name of the disabled gateway.
    string GatewayARN = 1;
}

message Disk {
    string DiskAllocationResource = 1;
    string DiskAllocationType = 2;
    string DiskId = 3;
    string DiskNode = 4;
    string DiskPath = 5;
    integer DiskSizeInBytes = 6;
    string DiskStatus = 7;
}





repeated string DiskIds = 1

repeated Disk Disks = 1



enum ErrorCode {
    ACTIVATIONKEYEXPIRED = 0;
    ACTIVATIONKEYINVALID = 1;
    ACTIVATIONKEYNOTFOUND = 2;
    GATEWAYINTERNALERROR = 3;
    GATEWAYNOTCONNECTED = 4;
    GATEWAYNOTFOUND = 5;
    GATEWAYPROXYNETWORKCONNECTIONBUSY = 6;
    AUTHENTICATIONFAILURE = 7;
    BANDWIDTHTHROTTLESCHEDULENOTFOUND = 8;
    BLOCKED = 9;
    CANNOTEXPORTSNAPSHOT = 10;
    CHAPCREDENTIALNOTFOUND = 11;
    DISKALREADYALLOCATED = 12;
    DISKDOESNOTEXIST = 13;
    DISKSIZEGREATERTHANVOLUMEMAXSIZE = 14;
    DISKSIZELESSTHANVOLUMESIZE = 15;
    DISKSIZENOTGIGALIGNED = 16;
    DUPLICATECERTIFICATEINFO = 17;
    DUPLICATESCHEDULE = 18;
    ENDPOINTNOTFOUND = 19;
    IAMNOTSUPPORTED = 20;
    INITIATORINVALID = 21;
    INITIATORNOTFOUND = 22;
    INTERNALERROR = 23;
    INVALIDGATEWAY = 24;
    INVALIDENDPOINT = 25;
    INVALIDPARAMETERS = 26;
    INVALIDSCHEDULE = 27;
    LOCALSTORAGELIMITEXCEEDED = 28;
    LUNALREADYALLOCATED_ = 29;
    LUNINVALID = 30;
    MAXIMUMCONTENTLENGTHEXCEEDED = 31;
    MAXIMUMTAPECARTRIDGECOUNTEXCEEDED = 32;
    MAXIMUMVOLUMECOUNTEXCEEDED = 33;
    NETWORKCONFIGURATIONCHANGED = 34;
    NODISKSAVAILABLE = 35;
    NOTIMPLEMENTED = 36;
    NOTSUPPORTED = 37;
    OPERATIONABORTED = 38;
    OUTDATEDGATEWAY = 39;
    PARAMETERSNOTIMPLEMENTED = 40;
    REGIONINVALID = 41;
    REQUESTTIMEOUT = 42;
    SERVICEUNAVAILABLE = 43;
    SNAPSHOTDELETED = 44;
    SNAPSHOTIDINVALID = 45;
    SNAPSHOTINPROGRESS = 46;
    SNAPSHOTNOTFOUND = 47;
    SNAPSHOTSCHEDULENOTFOUND = 48;
    STAGINGAREAFULL = 49;
    STORAGEFAILURE = 50;
    TAPECARTRIDGENOTFOUND = 51;
    TARGETALREADYEXISTS = 52;
    TARGETINVALID = 53;
    TARGETNOTFOUND = 54;
    UNAUTHORIZEDOPERATION = 55;
    VOLUMEALREADYEXISTS = 56;
    VOLUMEIDINVALID = 57;
    VOLUMEINUSE = 58;
    VOLUMENOTFOUND = 59;
    VOLUMENOTREADY = 60;
}



repeated string FileShareARNList = 1

repeated string FileShareClientList = 1



message FileShareInfo {
    string FileShareARN = 1;
    string FileShareId = 2;
    string FileShareStatus = 3;
    string GatewayARN = 4;
}

repeated FileShareInfo FileShareInfoList = 1







message GatewayInfo {
    // The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.
    string GatewayARN = 1;
    // The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.
    string GatewayId = 2;
    // The name of the gateway.
    string GatewayName = 3;
    // <p>The state of the gateway.</p> <p>Valid Values: DISABLED or ACTIVE</p>
    string GatewayOperationalState = 4;
    // The type of the gateway.
    string GatewayType = 5;
}



repeated NetworkInterface GatewayNetworkInterfaces = 1









repeated GatewayInfo Gateways = 1







repeated string Initiators = 1

message InternalServerError {
    // A <a>StorageGatewayError</a> that provides more information about the cause of the error.
    StorageGatewayError error = 1;
    // A human-readable message describing the error that occurred.
    string message = 2;
}

message InvalidGatewayRequestException {
    // A <a>StorageGatewayError</a> that provides more detail about the cause of the error.
    StorageGatewayError error = 1;
    // A human-readable message describing the error that occurred.
    string message = 2;
}

message ListFileSharesInput {
    // The Amazon resource Name (ARN) of the gateway whose file shares you want to list. If this field is not present, all file shares under your account are listed.
    string GatewayARN = 1;
    // The maximum number of file shares to return in the response. The value must be an integer with a value greater than zero. Optional.
    integer Limit = 2;
    // Opaque pagination token returned from a previous ListFileShares operation. If present, <code>Marker</code> specifies where to continue the list from after a previous call to ListFileShares. Optional.
    string Marker = 3;
}

message ListFileSharesOutput {
    // An array of information about the file gateway's file shares.
    array FileShareInfoList = 1;
    // If the request includes <code>Marker</code>, the response returns that value in this field.
    string Marker = 2;
    // If a value is present, there are more file shares to return. In a subsequent request, use <code>NextMarker</code> as the value for <code>Marker</code> to retrieve the next set of file shares.
    string NextMarker = 3;
}

message ListGatewaysInput {
    // Specifies that the list of gateways returned be limited to the specified number of items.
    integer Limit = 1;
    // An opaque string that indicates the position at which to begin the returned list of gateways.
    string Marker = 2;
}

message ListGatewaysOutput {
    array Gateways = 1;
    string Marker = 2;
}

message ListLocalDisksInput {
    string GatewayARN = 1;
}

message ListLocalDisksOutput {
    array Disks = 1;
    string GatewayARN = 2;
}

message ListTagsForResourceInput {
    // Specifies that the list of tags returned be limited to the specified number of items.
    integer Limit = 1;
    // An opaque string that indicates the position at which to begin returning the list of tags.
    string Marker = 2;
    // The Amazon Resource Name (ARN) of the resource for which you want to list tags.
    string ResourceARN = 3;
}

message ListTagsForResourceOutput {
    // An opaque string that indicates the position at which to stop returning the list of tags.
    string Marker = 1;
    // he Amazon Resource Name (ARN) of the resource for which you want to list tags.
    string ResourceARN = 2;
    // An array that contains the tags for the specified resource.
    array Tags = 3;
}

message ListTapesInput {
    // An optional number limit for the tapes in the list returned by this call.
    integer Limit = 1;
    // A string that indicates the position at which to begin the returned list of tapes.
    string Marker = 2;
    array TapeARNs = 3;
}

message ListTapesOutput {
    // A string that indicates the position at which to begin returning the next list of tapes. Use the marker in your next request to continue pagination of tapes. If there are no more tapes to list, this element does not appear in the response body.
    string Marker = 1;
    array TapeInfos = 2;
}

message ListVolumeInitiatorsInput {
    // The Amazon Resource Name (ARN) of the volume. Use the <a>ListVolumes</a> operation to return a list of gateway volumes for the gateway.
    string VolumeARN = 1;
}

message ListVolumeInitiatorsOutput {
    // The host names and port numbers of all iSCSI initiators that are connected to the gateway.
    array Initiators = 1;
}

message ListVolumeRecoveryPointsInput {
    string GatewayARN = 1;
}

message ListVolumeRecoveryPointsOutput {
    string GatewayARN = 1;
    array VolumeRecoveryPointInfos = 2;
}

message ListVolumesInput {
    string GatewayARN = 1;
    // Specifies that the list of volumes returned be limited to the specified number of items.
    integer Limit = 2;
    // A string that indicates the position at which to begin the returned list of volumes. Obtain the marker from the response of a previous List iSCSI Volumes request.
    string Marker = 3;
}

message ListVolumesOutput {
    string GatewayARN = 1;
    string Marker = 2;
    array VolumeInfos = 3;
}

message NFSFileShareDefaults {
    // The Unix directory mode in the form "nnnn". For example, "0666" represents the default access mode for all directories inside the file share. The default value is 0777.
    string DirectoryMode = 1;
    // The Unix file mode in the form "nnnn". For example, "0666" represents the default file mode inside the file share. The default value is 0666.
    string FileMode = 2;
    // The default group ID for the file share (unless the files have another group ID specified). The default value is nfsnobody.
    integer GroupId = 3;
    // The default owner ID for files in the file share (unless the files have another owner ID specified). The default value is nfsnobody.
    integer OwnerId = 4;
}

message NFSFileShareInfo {
    array ClientList = 1;
    // The default storage class for objects put into an Amazon S3 bucket by file gateway. Possible values are S3_STANDARD or S3_STANDARD_IA. If this field is not populated, the default value S3_STANDARD is used. Optional.
    string DefaultStorageClass = 2;
    string FileShareARN = 3;
    string FileShareId = 4;
    string FileShareStatus = 5;
    string GatewayARN = 6;
    // True to use Amazon S3 server side encryption with your own KMS key, or false to use a key managed by Amazon S3. Optional.
    boolean KMSEncrypted = 7;
    string KMSKey = 8;
    string LocationARN = 9;
    NFSFileShareDefaults NFSFileShareDefaults = 10;
    string Path = 11;
    boolean ReadOnly = 12;
    string Role = 13;
    string Squash = 14;
}

repeated NFSFileShareInfo NFSFileShareInfoList = 1

message NetworkInterface {
    // The Internet Protocol version 4 (IPv4) address of the interface.
    string Ipv4Address = 1;
    // The Internet Protocol version 6 (IPv6) address of the interface. <i>Currently not supported</i>.
    string Ipv6Address = 2;
    // <p>The Media Access Control (MAC) address of the interface.</p> <note> <p>This is currently unsupported and will not be returned in output.</p> </note>
    string MacAddress = 3;
}

message RefreshCacheInput {
    string FileShareARN = 1;
}

message RefreshCacheOutput {
    string FileShareARN = 1;
}

message RemoveTagsFromResourceInput {
    // The Amazon Resource Name (ARN) of the resource you want to remove the tags from.
    string ResourceARN = 1;
    // The keys of the tags you want to remove from the specified resource. A tag is composed of a key/value pair.
    array TagKeys = 2;
}

message RemoveTagsFromResourceOutput {
    // The Amazon Resource Name (ARN) of the resource that the tags were removed from.
    string ResourceARN = 1;
}

message ResetCacheInput {
    string GatewayARN = 1;
}

message ResetCacheOutput {
    string GatewayARN = 1;
}

message RetrieveTapeArchiveInput {
    // <p>The Amazon Resource Name (ARN) of the gateway you want to retrieve the virtual tape to. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.</p> <p>You retrieve archived virtual tapes to only one gateway and the gateway must be a tape gateway.</p>
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of the virtual tape you want to retrieve from the virtual tape shelf (VTS).
    string TapeARN = 2;
}

message RetrieveTapeArchiveOutput {
    // The Amazon Resource Name (ARN) of the retrieved virtual tape.
    string TapeARN = 1;
}

message RetrieveTapeRecoveryPointInput {
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of the virtual tape for which you want to retrieve the recovery point.
    string TapeARN = 2;
}

message RetrieveTapeRecoveryPointOutput {
    // The Amazon Resource Name (ARN) of the virtual tape for which the recovery point was retrieved.
    string TapeARN = 1;
}

message ServiceUnavailableError {
    // A <a>StorageGatewayError</a> that provides more information about the cause of the error.
    StorageGatewayError error = 1;
    // A human-readable message describing the error that occurred.
    string message = 2;
}

message SetLocalConsolePasswordInput {
    string GatewayARN = 1;
    // The password you want to set for your VM local console.
    string LocalConsolePassword = 2;
}

message SetLocalConsolePasswordOutput {
    string GatewayARN = 1;
}

message ShutdownGatewayInput {
    string GatewayARN = 1;
}

message ShutdownGatewayOutput {
    string GatewayARN = 1;
}

message StartGatewayInput {
    string GatewayARN = 1;
}

message StartGatewayOutput {
    string GatewayARN = 1;
}

message StorageGatewayError {
    // Additional information about the error.
    ErrorCode errorCode = 1;
    // Human-readable text that provides detail about the error that occurred.
    array errorDetails = 2;
}

message StorediSCSIVolume {
    // The date the volume was created. Volumes created prior to March 28, 2017 don’t have this time stamp.
    string CreatedDate = 1;
    // <p>Indicates if when the stored volume was created, existing data on the underlying local disk was preserved.</p> <p> Valid Values: true, false</p>
    boolean PreservedExistingData = 2;
    // If the stored volume was created from a snapshot, this field contains the snapshot ID used, e.g. snap-78e22663. Otherwise, this field is not included.
    string SourceSnapshotId = 3;
    // The Amazon Resource Name (ARN) of the storage volume.
    string VolumeARN = 4;
    // The ID of the local disk that was specified in the <a>CreateStorediSCSIVolume</a> operation.
    string VolumeDiskId = 5;
    // The unique identifier of the volume, e.g. vol-AE4B946D.
    string VolumeId = 6;
    // Represents the percentage complete if the volume is restoring or bootstrapping that represents the percent of data transferred. This field does not appear in the response if the stored volume is not restoring or bootstrapping.
    number VolumeProgress = 7;
    // The size of the volume in bytes.
    integer VolumeSizeInBytes = 8;
    // One of the VolumeStatus values that indicates the state of the storage volume.
    string VolumeStatus = 9;
    // One of the VolumeType enumeration values describing the type of the volume.
    string VolumeType = 10;
    // An <a>VolumeiSCSIAttributes</a> object that represents a collection of iSCSI attributes for one stored volume.
    VolumeiSCSIAttributes VolumeiSCSIAttributes = 11;
}

repeated StorediSCSIVolume StorediSCSIVolumes = 1

message Tag {
    string Key = 1;
    string Value = 2;
}



repeated string TagKeys = 1



repeated Tag Tags = 1

message Tape {
    // <p>For archiving virtual tapes, indicates how much data remains to be uploaded before archiving is complete.</p> <p>Range: 0 (not started) to 100 (complete).</p>
    number Progress = 1;
    // The Amazon Resource Name (ARN) of the virtual tape.
    string TapeARN = 2;
    // The barcode that identifies a specific virtual tape.
    string TapeBarcode = 3;
    // The date the virtual tape was created.
    string TapeCreatedDate = 4;
    // The size, in bytes, of the virtual tape capacity.
    integer TapeSizeInBytes = 5;
    // The current state of the virtual tape.
    string TapeStatus = 6;
    // <p>The size, in bytes, of data written to the virtual tape.</p> <note> <p>This value is not available for tapes created prior to May 13, 2015.</p> </note>
    integer TapeUsedInBytes = 7;
    // The virtual tape library (VTL) device that the virtual tape is associated with.
    string VTLDevice = 8;
}



repeated string TapeARNs = 1

message TapeArchive {
    // <p>The time that the archiving of the virtual tape was completed.</p> <p>The string format of the completion time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    string CompletionTime = 1;
    // <p>The Amazon Resource Name (ARN) of the tape gateway that the virtual tape is being retrieved to.</p> <p>The virtual tape is retrieved from the virtual tape shelf (VTS).</p>
    string RetrievedTo = 2;
    // The Amazon Resource Name (ARN) of an archived virtual tape.
    string TapeARN = 3;
    // The barcode that identifies the archived virtual tape.
    string TapeBarcode = 4;
    string TapeCreatedDate = 5;
    // The size, in bytes, of the archived virtual tape.
    integer TapeSizeInBytes = 6;
    // The current state of the archived virtual tape.
    string TapeStatus = 7;
    // <p>The size, in bytes, of data written to the virtual tape.</p> <note> <p>This value is not available for tapes created prior to May 13, 2015.</p> </note>
    integer TapeUsedInBytes = 8;
}



repeated TapeArchive TapeArchives = 1







message TapeInfo {
    // The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and region.
    string GatewayARN = 1;
    // The Amazon Resource Name (ARN) of a virtual tape.
    string TapeARN = 2;
    // The barcode that identifies a specific virtual tape.
    string TapeBarcode = 3;
    // The size, in bytes, of a virtual tape.
    integer TapeSizeInBytes = 4;
    // The status of the tape.
    string TapeStatus = 5;
}

repeated TapeInfo TapeInfos = 1

message TapeRecoveryPointInfo {
    // The Amazon Resource Name (ARN) of the virtual tape.
    string TapeARN = 1;
    // <p>The time when the point-in-time view of the virtual tape was replicated for later recovery.</p> <p>The string format of the tape recovery point time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    string TapeRecoveryPointTime = 2;
    // The size, in bytes, of the virtual tapes to recover.
    integer TapeSizeInBytes = 3;
    string TapeStatus = 4;
}

repeated TapeRecoveryPointInfo TapeRecoveryPointInfos = 1









repeated Tape Tapes = 1







message UpdateBandwidthRateLimitInput {
    // The average download bandwidth rate limit in bits per second.
    integer AverageDownloadRateLimitInBitsPerSec = 1;
    // The average upload bandwidth rate limit in bits per second.
    integer AverageUploadRateLimitInBitsPerSec = 2;
    string GatewayARN = 3;
}

message UpdateBandwidthRateLimitOutput {
    string GatewayARN = 1;
}

message UpdateChapCredentialsInput {
    // The iSCSI initiator that connects to the target.
    string InitiatorName = 1;
    // <p>The secret key that the initiator (for example, the Windows client) must provide to participate in mutual CHAP with the target.</p> <note> <p>The secret key must be between 12 and 16 bytes when encoded in UTF-8.</p> </note>
    string SecretToAuthenticateInitiator = 2;
    // <p>The secret key that the target must provide to participate in mutual CHAP with the initiator (e.g. Windows client).</p> <p>Byte constraints: Minimum bytes of 12. Maximum bytes of 16.</p> <note> <p>The secret key must be between 12 and 16 bytes when encoded in UTF-8.</p> </note>
    string SecretToAuthenticateTarget = 3;
    // The Amazon Resource Name (ARN) of the iSCSI volume target. Use the <a>DescribeStorediSCSIVolumes</a> operation to return the TargetARN for specified VolumeARN.
    string TargetARN = 4;
}

message UpdateChapCredentialsOutput {
    // The iSCSI initiator that connects to the target. This is the same initiator name specified in the request.
    string InitiatorName = 1;
    // The Amazon Resource Name (ARN) of the target. This is the same target specified in the request.
    string TargetARN = 2;
}

message UpdateGatewayInformationInput {
    string GatewayARN = 1;
    string GatewayName = 2;
    string GatewayTimezone = 3;
}

message UpdateGatewayInformationOutput {
    string GatewayARN = 1;
    string GatewayName = 2;
}

message UpdateGatewaySoftwareNowInput {
    string GatewayARN = 1;
}

message UpdateGatewaySoftwareNowOutput {
    string GatewayARN = 1;
}

message UpdateMaintenanceStartTimeInput {
    // The maintenance start time day of the week represented as an ordinal number from 0 to 6, where 0 represents Sunday and 6 Saturday.
    integer DayOfWeek = 1;
    string GatewayARN = 2;
    // The hour component of the maintenance start time represented as <i>hh</i>, where <i>hh</i> is the hour (00 to 23). The hour of the day is in the time zone of the gateway.
    integer HourOfDay = 3;
    // The minute component of the maintenance start time represented as <i>mm</i>, where <i>mm</i> is the minute (00 to 59). The minute of the hour is in the time zone of the gateway.
    integer MinuteOfHour = 4;
}

message UpdateMaintenanceStartTimeOutput {
    string GatewayARN = 1;
}

message UpdateNFSFileShareInput {
    // The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks.
    array ClientList = 1;
    // The default storage class for objects put into an Amazon S3 bucket by a file gateway. Possible values are S3_STANDARD or S3_STANDARD_IA. If this field is not populated, the default value S3_STANDARD is used. Optional.
    string DefaultStorageClass = 2;
    // The Amazon Resource Name (ARN) of the file share to be updated.
    string FileShareARN = 3;
    // True to use Amazon S3 server side encryption with your own AWS KMS key, or false to use a key managed by Amazon S3. Optional.
    boolean KMSEncrypted = 4;
    // The KMS key used for Amazon S3 server side encryption. This value can only be set when KmsEncrypted is true. Optional.
    string KMSKey = 5;
    // The default values for the file share. Optional.
    NFSFileShareDefaults NFSFileShareDefaults = 6;
    // Sets the write status of a file share: "true" if the write status is read-only, otherwise "false".
    boolean ReadOnly = 7;
    // <p>The user mapped to anonymous user. Valid options are the following:</p> <ul> <li> <p>"RootSquash" - Only root is mapped to anonymous user.</p> </li> <li> <p>"NoSquash" - No one is mapped to anonymous user</p> </li> <li> <p>"AllSquash" - Everyone is mapped to anonymous user.</p> </li> </ul>
    string Squash = 8;
}

message UpdateNFSFileShareOutput {
    // The Amazon Resource Name (ARN) of the updated file share.
    string FileShareARN = 1;
}

message UpdateSnapshotScheduleInput {
    // Optional description of the snapshot that overwrites the existing description.
    string Description = 1;
    // Frequency of snapshots. Specify the number of hours between snapshots.
    integer RecurrenceInHours = 2;
    // The hour of the day at which the snapshot schedule begins represented as <i>hh</i>, where <i>hh</i> is the hour (0 to 23). The hour of the day is in the time zone of the gateway.
    integer StartAt = 3;
    // The Amazon Resource Name (ARN) of the volume. Use the <a>ListVolumes</a> operation to return a list of gateway volumes.
    string VolumeARN = 4;
}

message UpdateSnapshotScheduleOutput {
    // <p/>
    string VolumeARN = 1;
}

message UpdateVTLDeviceTypeInput {
    // <p>The type of medium changer you want to select.</p> <p> Valid Values: "STK-L700", "AWS-Gateway-VTL"</p>
    string DeviceType = 1;
    // The Amazon Resource Name (ARN) of the medium changer you want to select.
    string VTLDeviceARN = 2;
}

message UpdateVTLDeviceTypeOutput {
    // The Amazon Resource Name (ARN) of the medium changer you have selected.
    string VTLDeviceARN = 1;
}

message VTLDevice {
    // A list of iSCSI information about a VTL device.
    DeviceiSCSIAttributes DeviceiSCSIAttributes = 1;
    // Specifies the unique Amazon Resource Name (ARN) of the device (tape drive or media changer).
    string VTLDeviceARN = 2;
    string VTLDeviceProductIdentifier = 3;
    string VTLDeviceType = 4;
    string VTLDeviceVendor = 5;
}



repeated string VTLDeviceARNs = 1







repeated VTLDevice VTLDevices = 1





repeated string VolumeARNs = 1



message VolumeInfo {
    string GatewayARN = 1;
    // <p>The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.</p> <p> Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    string GatewayId = 2;
    // <p>The Amazon Resource Name (ARN) for the storage volume. For example, the following is a valid ARN:</p> <p> <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABB</code> </p> <p> Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    string VolumeARN = 3;
    // <p>The unique identifier assigned to the volume. This ID becomes part of the volume Amazon Resource Name (ARN), which you use as input for other operations.</p> <p> Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    string VolumeId = 4;
    // <p>The size of the volume in bytes.</p> <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    integer VolumeSizeInBytes = 5;
    string VolumeType = 6;
}

repeated VolumeInfo VolumeInfos = 1

message VolumeRecoveryPointInfo {
    string VolumeARN = 1;
    string VolumeRecoveryPointTime = 2;
    integer VolumeSizeInBytes = 3;
    integer VolumeUsageInBytes = 4;
}

repeated VolumeRecoveryPointInfo VolumeRecoveryPointInfos = 1





message VolumeiSCSIAttributes {
    // Indicates whether mutual CHAP is enabled for the iSCSI target.
    boolean ChapEnabled = 1;
    // The logical disk number.
    integer LunNumber = 2;
    // The network interface identifier.
    string NetworkInterfaceId = 3;
    // The port used to communicate with iSCSI targets.
    integer NetworkInterfacePort = 4;
    // The Amazon Resource Name (ARN) of the volume target.
    string TargetARN = 5;
}

message ErrorDetail {
    string key = 1;
    string value = 2;
}
repeated ErrorDetail errorDetails = 1







service AWSStorageGatewayService {
    // <p>Activates the gateway you previously deployed on your host. For more information, see <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/GettingStartedActivateGateway-common.html"> Activate the AWS Storage Gateway</a>. In the activation process, you specify information such as the region you want to use for storing snapshots or tapes, the time zone for scheduled snapshots the gateway snapshot schedule window, an activation key, and a name for your gateway. The activation process also associates your gateway with your account; for more information, see <a>UpdateGatewayInformation</a>.</p> <note> <p>You must turn on the gateway VM before you can activate your gateway.</p> </note>
    rpc Post(PostRequest) returns (ActivateGatewayOutput) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Configures one or more gateway local disks as cache for a gateway. This operation is only supported in the cached volume, tape and file gateway architectures (see <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/StorageGatewayConcepts.html">Storage Gateway Concepts</a>).</p> <p>In the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add cache, and one or more disk IDs that you want to configure as cache.</p>
    rpc Post#AddCache(Post#AddCacheRequest) returns (AddCacheOutput) {
      option (google.api.http) = {
        post: "//#AddCache"
        body: "body"
      };
    }
    // <p>Adds one or more tags to the specified resource. You use tags to add metadata to resources, which you can use to categorize these resources. For example, you can categorize resources by purpose, owner, environment, or team. Each tag consists of a key and a value, which you define. You can add tags to the following AWS Storage Gateway resources:</p> <ul> <li> <p>Storage gateways of all types</p> </li> </ul> <ul> <li> <p>Storage Volumes</p> </li> </ul> <ul> <li> <p>Virtual Tapes</p> </li> </ul> <p>You can create a maximum of 10 tags for each resource. Virtual tapes and storage volumes that are recovered to a new gateway maintain their tags.</p>
    rpc Post#AddTagsToResource(Post#AddTagsToResourceRequest) returns (AddTagsToResourceOutput) {
      option (google.api.http) = {
        post: "//#AddTagsToResource"
        body: "body"
      };
    }
    // <p>Configures one or more gateway local disks as upload buffer for a specified gateway. This operation is supported for the stored volume, cached volume and tape gateway architectures.</p> <p>In the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add upload buffer, and one or more disk IDs that you want to configure as upload buffer.</p>
    rpc Post#AddUploadBuffer(Post#AddUploadBufferRequest) returns (AddUploadBufferOutput) {
      option (google.api.http) = {
        post: "//#AddUploadBuffer"
        body: "body"
      };
    }
    // <p>Configures one or more gateway local disks as working storage for a gateway. This operation is only supported in the stored volume gateway architecture. This operation is deprecated in cached volume API version 20120630. Use <a>AddUploadBuffer</a> instead.</p> <note> <p>Working storage is also referred to as upload buffer. You can also use the <a>AddUploadBuffer</a> operation to add upload buffer to a stored volume gateway.</p> </note> <p>In the request, you specify the gateway Amazon Resource Name (ARN) to which you want to add working storage, and one or more disk IDs that you want to configure as working storage.</p>
    rpc Post#AddWorkingStorage(Post#AddWorkingStorageRequest) returns (AddWorkingStorageOutput) {
      option (google.api.http) = {
        post: "//#AddWorkingStorage"
        body: "body"
      };
    }
    // Cancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated. This operation is only supported in the tape gateway architecture.
    rpc Post#CancelArchival(Post#CancelArchivalRequest) returns (CancelArchivalOutput) {
      option (google.api.http) = {
        post: "//#CancelArchival"
        body: "body"
      };
    }
    // Cancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated. The virtual tape is returned to the VTS.
    rpc Post#CancelRetrieval(Post#CancelRetrievalRequest) returns (CancelRetrievalOutput) {
      option (google.api.http) = {
        post: "//#CancelRetrieval"
        body: "body"
      };
    }
    // <p>Creates a cached volume on a specified cached volume gateway. This operation is only supported in the cached volume gateway architecture.</p> <note> <p>Cache storage must be allocated to the gateway before you can create a cached volume. Use the <a>AddCache</a> operation to add cache storage to a gateway. </p> </note> <p>In the request, you must specify the gateway, size of the volume in bytes, the iSCSI target name, an IP address on which to expose the target, and a unique client token. In response, the gateway creates the volume and returns information about it. This information includes the volume Amazon Resource Name (ARN), its size, and the iSCSI target ARN that initiators can use to connect to the volume target.</p> <p>Optionally, you can provide the ARN for an existing volume as the <code>SourceVolumeARN</code> for this cached volume, which creates an exact copy of the existing volume’s latest recovery point. The <code>VolumeSizeInBytes</code> value must be equal to or larger than the size of the copied volume, in bytes.</p>
    rpc Post#CreateCachediSCSIVolume(Post#CreateCachediSCSIVolumeRequest) returns (CreateCachediSCSIVolumeOutput) {
      option (google.api.http) = {
        post: "//#CreateCachediSCSIVolume"
        body: "body"
      };
    }
    // <p>Creates a file share on an existing file gateway. In Storage Gateway, a file share is a file system mount point backed by Amazon S3 cloud storage. Storage Gateway exposes file shares using a Network File System (NFS) interface. This operation is only supported in the file gateway architecture.</p> <important> <p>File gateway requires AWS Security Token Service (AWS STS) to be activated to enable you create a file share. Make sure AWS STS is activated in the region you are creating your file gateway in. If AWS STS is not activated in the region, activate it. For information about how to activate AWS STS, see Activating and Deactivating AWS STS in an AWS Region in the AWS Identity and Access Management User Guide. </p> <p>File gateway does not support creating hard or symbolic links on a file share.</p> </important>
    rpc Post#CreateNFSFileShare(Post#CreateNFSFileShareRequest) returns (CreateNFSFileShareOutput) {
      option (google.api.http) = {
        post: "//#CreateNFSFileShare"
        body: "body"
      };
    }
    // <p>Initiates a snapshot of a volume.</p> <p>AWS Storage Gateway provides the ability to back up point-in-time snapshots of your data to Amazon Simple Storage (S3) for durable off-site recovery, as well as import the data to an Amazon Elastic Block Store (EBS) volume in Amazon Elastic Compute Cloud (EC2). You can take snapshots of your gateway volume on a scheduled or ad-hoc basis. This API enables you to take ad-hoc snapshot. For more information, see <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/managing-volumes.html#SchedulingSnapshot">Editing a Snapshot Schedule</a>.</p> <p>In the CreateSnapshot request you identify the volume by providing its Amazon Resource Name (ARN). You must also provide description for the snapshot. When AWS Storage Gateway takes the snapshot of specified volume, the snapshot and description appears in the AWS Storage Gateway Console. In response, AWS Storage Gateway returns you a snapshot ID. You can use this snapshot ID to check the snapshot progress or later use it when you want to create a volume from a snapshot. This operation is only supported in stored and cached volume gateway architecture.</p> <note> <p>To list or delete a snapshot, you must use the Amazon EC2 API. For more information, see DescribeSnapshots or DeleteSnapshot in the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Operations.html">EC2 API reference</a>.</p> </note> <important> <p>Volume and snapshot IDs are changing to a longer length ID format. For more information, see the important note on the <a href="http://docs.aws.amazon.com/storagegateway/latest/APIReference/Welcome.html">Welcome</a> page.</p> </important>
    rpc Post#CreateSnapshot(Post#CreateSnapshotRequest) returns (CreateSnapshotOutput) {
      option (google.api.http) = {
        post: "//#CreateSnapshot"
        body: "body"
      };
    }
    // <p>Initiates a snapshot of a gateway from a volume recovery point. This operation is only supported in the cached volume gateway architecture.</p> <p>A volume recovery point is a point in time at which all data of the volume is consistent and from which you can create a snapshot. To get a list of volume recovery point for cached volume gateway, use <a>ListVolumeRecoveryPoints</a>.</p> <p>In the <code>CreateSnapshotFromVolumeRecoveryPoint</code> request, you identify the volume by providing its Amazon Resource Name (ARN). You must also provide a description for the snapshot. When the gateway takes a snapshot of the specified volume, the snapshot and its description appear in the AWS Storage Gateway console. In response, the gateway returns you a snapshot ID. You can use this snapshot ID to check the snapshot progress or later use it when you want to create a volume from a snapshot.</p> <note> <p>To list or delete a snapshot, you must use the Amazon EC2 API. For more information, in <i>Amazon Elastic Compute Cloud API Reference</i>.</p> </note>
    rpc Post#CreateSnapshotFromVolumeRecoveryPoint(Post#CreateSnapshotFromVolumeRecoveryPointRequest) returns (CreateSnapshotFromVolumeRecoveryPointOutput) {
      option (google.api.http) = {
        post: "//#CreateSnapshotFromVolumeRecoveryPoint"
        body: "body"
      };
    }
    // <p>Creates a volume on a specified gateway. This operation is only supported in the stored volume gateway architecture.</p> <p>The size of the volume to create is inferred from the disk size. You can choose to preserve existing data on the disk, create volume from an existing snapshot, or create an empty volume. If you choose to create an empty gateway volume, then any existing data on the disk is erased.</p> <p>In the request you must specify the gateway and the disk information on which you are creating the volume. In response, the gateway creates the volume and returns volume information such as the volume Amazon Resource Name (ARN), its size, and the iSCSI target ARN that initiators can use to connect to the volume target.</p>
    rpc Post#CreateStorediSCSIVolume(Post#CreateStorediSCSIVolumeRequest) returns (CreateStorediSCSIVolumeOutput) {
      option (google.api.http) = {
        post: "//#CreateStorediSCSIVolume"
        body: "body"
      };
    }
    // <p>Creates a virtual tape by using your own barcode. You write data to the virtual tape and then archive the tape. A barcode is unique and can not be reused if it has already been used on a tape . This applies to barcodes used on deleted tapes. This operation is only supported in the tape gateway. architecture.</p> <note> <p>Cache storage must be allocated to the gateway before you can create a virtual tape. Use the <a>AddCache</a> operation to add cache storage to a gateway.</p> </note>
    rpc Post#CreateTapeWithBarcode(Post#CreateTapeWithBarcodeRequest) returns (CreateTapeWithBarcodeOutput) {
      option (google.api.http) = {
        post: "//#CreateTapeWithBarcode"
        body: "body"
      };
    }
    // <p>Creates one or more virtual tapes. You write data to the virtual tapes and then archive the tapes. This operation is only supported in the tape gateway architecture.</p> <note> <p>Cache storage must be allocated to the gateway before you can create virtual tapes. Use the <a>AddCache</a> operation to add cache storage to a gateway. </p> </note>
    rpc Post#CreateTapes(Post#CreateTapesRequest) returns (CreateTapesOutput) {
      option (google.api.http) = {
        post: "//#CreateTapes"
        body: "body"
      };
    }
    // Deletes the bandwidth rate limits of a gateway. You can delete either the upload and download bandwidth rate limit, or you can delete both. If you delete only one of the limits, the other limit remains unchanged. To specify which gateway to work with, use the Amazon Resource Name (ARN) of the gateway in your request.
    rpc Post#DeleteBandwidthRateLimit(Post#DeleteBandwidthRateLimitRequest) returns (DeleteBandwidthRateLimitOutput) {
      option (google.api.http) = {
        post: "//#DeleteBandwidthRateLimit"
        body: "body"
      };
    }
    // Deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair.
    rpc Post#DeleteChapCredentials(Post#DeleteChapCredentialsRequest) returns (DeleteChapCredentialsOutput) {
      option (google.api.http) = {
        post: "//#DeleteChapCredentials"
        body: "body"
      };
    }
    // Deletes a file share from a file gateway. This operation is only supported in the file gateway architecture.
    rpc Post#DeleteFileShare(Post#DeleteFileShareRequest) returns (DeleteFileShareOutput) {
      option (google.api.http) = {
        post: "//#DeleteFileShare"
        body: "body"
      };
    }
    // <p>Deletes a gateway. To specify which gateway to delete, use the Amazon Resource Name (ARN) of the gateway in your request. The operation deletes the gateway; however, it does not delete the gateway virtual machine (VM) from your host computer.</p> <p>After you delete a gateway, you cannot reactivate it. Completed snapshots of the gateway volumes are not deleted upon deleting the gateway, however, pending snapshots will not complete. After you delete a gateway, your next step is to remove it from your environment.</p> <important> <p>You no longer pay software charges after the gateway is deleted; however, your existing Amazon EBS snapshots persist and you will continue to be billed for these snapshots. You can choose to remove all remaining Amazon EBS snapshots by canceling your Amazon EC2 subscription.  If you prefer not to cancel your Amazon EC2 subscription, you can delete your snapshots using the Amazon EC2 console. For more information, see the <a href="http://aws.amazon.com/storagegateway"> AWS Storage Gateway Detail Page</a>. </p> </important>
    rpc Post#DeleteGateway(Post#DeleteGatewayRequest) returns (DeleteGatewayOutput) {
      option (google.api.http) = {
        post: "//#DeleteGateway"
        body: "body"
      };
    }
    // <p>Deletes a snapshot of a volume.</p> <p>You can take snapshots of your gateway volumes on a scheduled or ad hoc basis. This API action enables you to delete a snapshot schedule for a volume. For more information, see <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/WorkingWithSnapshots.html">Working with Snapshots</a>. In the <code>DeleteSnapshotSchedule</code> request, you identify the volume by providing its Amazon Resource Name (ARN). </p> <note> <p>To list or delete a snapshot, you must use the Amazon EC2 API. in <i>Amazon Elastic Compute Cloud API Reference</i>.</p> </note>
    rpc Post#DeleteSnapshotSchedule(Post#DeleteSnapshotScheduleRequest) returns (DeleteSnapshotScheduleOutput) {
      option (google.api.http) = {
        post: "//#DeleteSnapshotSchedule"
        body: "body"
      };
    }
    // Deletes the specified virtual tape. This operation is only supported in the tape gateway architecture.
    rpc Post#DeleteTape(Post#DeleteTapeRequest) returns (DeleteTapeOutput) {
      option (google.api.http) = {
        post: "//#DeleteTape"
        body: "body"
      };
    }
    // Deletes the specified virtual tape from the virtual tape shelf (VTS). This operation is only supported in the tape gateway architecture.
    rpc Post#DeleteTapeArchive(Post#DeleteTapeArchiveRequest) returns (DeleteTapeArchiveOutput) {
      option (google.api.http) = {
        post: "//#DeleteTapeArchive"
        body: "body"
      };
    }
    // <p>Deletes the specified storage volume that you previously created using the <a>CreateCachediSCSIVolume</a> or <a>CreateStorediSCSIVolume</a> API. This operation is only supported in the cached volume and stored volume architectures. For stored volume gateways, the local disk that was configured as the storage volume is not deleted. You can reuse the local disk to create another storage volume. </p> <p>Before you delete a volume, make sure there are no iSCSI connections to the volume you are deleting. You should also make sure there is no snapshot in progress. You can use the Amazon Elastic Compute Cloud (Amazon EC2) API to query snapshots on the volume you are deleting and check the snapshot status. For more information, go to <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html">DescribeSnapshots</a> in the <i>Amazon Elastic Compute Cloud API Reference</i>.</p> <p>In the request, you must provide the Amazon Resource Name (ARN) of the storage volume you want to delete.</p>
    rpc Post#DeleteVolume(Post#DeleteVolumeRequest) returns (DeleteVolumeOutput) {
      option (google.api.http) = {
        post: "//#DeleteVolume"
        body: "body"
      };
    }
    // <p>Returns the bandwidth rate limits of a gateway. By default, these limits are not set, which means no bandwidth rate limiting is in effect.</p> <p>This operation only returns a value for a bandwidth rate limit only if the limit is set. If no limits are set for the gateway, then this operation returns only the gateway ARN in the response body. To specify which gateway to describe, use the Amazon Resource Name (ARN) of the gateway in your request.</p>
    rpc Post#DescribeBandwidthRateLimit(Post#DescribeBandwidthRateLimitRequest) returns (DescribeBandwidthRateLimitOutput) {
      option (google.api.http) = {
        post: "//#DescribeBandwidthRateLimit"
        body: "body"
      };
    }
    // <p>Returns information about the cache of a gateway. This operation is only supported in the cached volume,tape and file gateway architectures.</p> <p>The response includes disk IDs that are configured as cache, and it includes the amount of cache allocated and used.</p>
    rpc Post#DescribeCache(Post#DescribeCacheRequest) returns (DescribeCacheOutput) {
      option (google.api.http) = {
        post: "//#DescribeCache"
        body: "body"
      };
    }
    // <p>Returns a description of the gateway volumes specified in the request. This operation is only supported in the cached volume gateway architecture.</p> <p>The list of gateway volumes in the request must be from one gateway. In the response Amazon Storage Gateway returns volume information sorted by volume Amazon Resource Name (ARN).</p>
    rpc Post#DescribeCachediSCSIVolumes(Post#DescribeCachediSCSIVolumesRequest) returns (DescribeCachediSCSIVolumesOutput) {
      option (google.api.http) = {
        post: "//#DescribeCachediSCSIVolumes"
        body: "body"
      };
    }
    // Returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair.
    rpc Post#DescribeChapCredentials(Post#DescribeChapCredentialsRequest) returns (DescribeChapCredentialsOutput) {
      option (google.api.http) = {
        post: "//#DescribeChapCredentials"
        body: "body"
      };
    }
    // Returns metadata about a gateway such as its name, network interfaces, configured time zone, and the state (whether the gateway is running or not). To specify which gateway to describe, use the Amazon Resource Name (ARN) of the gateway in your request.
    rpc Post#DescribeGatewayInformation(Post#DescribeGatewayInformationRequest) returns (DescribeGatewayInformationOutput) {
      option (google.api.http) = {
        post: "//#DescribeGatewayInformation"
        body: "body"
      };
    }
    // Returns your gateway's weekly maintenance start time including the day and time of the week. Note that values are in terms of the gateway's time zone.
    rpc Post#DescribeMaintenanceStartTime(Post#DescribeMaintenanceStartTimeRequest) returns (DescribeMaintenanceStartTimeOutput) {
      option (google.api.http) = {
        post: "//#DescribeMaintenanceStartTime"
        body: "body"
      };
    }
    // Gets a description for one or more file shares from a file gateway. This operation is only supported in file gateways.
    rpc Post#DescribeNFSFileShares(Post#DescribeNFSFileSharesRequest) returns (DescribeNFSFileSharesOutput) {
      option (google.api.http) = {
        post: "//#DescribeNFSFileShares"
        body: "body"
      };
    }
    // Describes the snapshot schedule for the specified gateway volume. The snapshot schedule information includes intervals at which snapshots are automatically initiated on the volume. This operation is only supported in the cached volume and stored volume architectures.
    rpc Post#DescribeSnapshotSchedule(Post#DescribeSnapshotScheduleRequest) returns (DescribeSnapshotScheduleOutput) {
      option (google.api.http) = {
        post: "//#DescribeSnapshotSchedule"
        body: "body"
      };
    }
    // Returns the description of the gateway volumes specified in the request. The list of gateway volumes in the request must be from one gateway. In the response Amazon Storage Gateway returns volume information sorted by volume ARNs. This operation is only supported in stored volume gateway architecture.
    rpc Post#DescribeStorediSCSIVolumes(Post#DescribeStorediSCSIVolumesRequest) returns (DescribeStorediSCSIVolumesOutput) {
      option (google.api.http) = {
        post: "//#DescribeStorediSCSIVolumes"
        body: "body"
      };
    }
    // <p>Returns a description of specified virtual tapes in the virtual tape shelf (VTS). This operation is only supported in the tape gateway architecture.</p> <p>If a specific <code>TapeARN</code> is not specified, AWS Storage Gateway returns a description of all virtual tapes found in the VTS associated with your account.</p>
    rpc Post#DescribeTapeArchives(Post#DescribeTapeArchivesRequest) returns (DescribeTapeArchivesOutput) {
      option (google.api.http) = {
        post: "//#DescribeTapeArchives"
        body: "body"
      };
    }
    // <p>Returns a list of virtual tape recovery points that are available for the specified tape gateway.</p> <p>A recovery point is a point-in-time view of a virtual tape at which all the data on the virtual tape is consistent. If your gateway crashes, virtual tapes that have recovery points can be recovered to a new gateway. This operation is only supported in the tape gateway architecture.</p>
    rpc Post#DescribeTapeRecoveryPoints(Post#DescribeTapeRecoveryPointsRequest) returns (DescribeTapeRecoveryPointsOutput) {
      option (google.api.http) = {
        post: "//#DescribeTapeRecoveryPoints"
        body: "body"
      };
    }
    // Returns a description of the specified Amazon Resource Name (ARN) of virtual tapes. If a <code>TapeARN</code> is not specified, returns a description of all virtual tapes associated with the specified gateway. This operation is only supported in the tape gateway architecture.
    rpc Post#DescribeTapes(Post#DescribeTapesRequest) returns (DescribeTapesOutput) {
      option (google.api.http) = {
        post: "//#DescribeTapes"
        body: "body"
      };
    }
    // <p>Returns information about the upload buffer of a gateway. This operation is supported for the stored volume, cached volume and tape gateway architectures.</p> <p>The response includes disk IDs that are configured as upload buffer space, and it includes the amount of upload buffer space allocated and used.</p>
    rpc Post#DescribeUploadBuffer(Post#DescribeUploadBufferRequest) returns (DescribeUploadBufferOutput) {
      option (google.api.http) = {
        post: "//#DescribeUploadBuffer"
        body: "body"
      };
    }
    // <p>Returns a description of virtual tape library (VTL) devices for the specified tape gateway. In the response, AWS Storage Gateway returns VTL device information.</p> <p>This operation is only supported in the tape gateway architecture.</p>
    rpc Post#DescribeVTLDevices(Post#DescribeVTLDevicesRequest) returns (DescribeVTLDevicesOutput) {
      option (google.api.http) = {
        post: "//#DescribeVTLDevices"
        body: "body"
      };
    }
    // <p>Returns information about the working storage of a gateway. This operation is only supported in the stored volumes gateway architecture. This operation is deprecated in cached volumes API version (20120630). Use DescribeUploadBuffer instead.</p> <note> <p>Working storage is also referred to as upload buffer. You can also use the DescribeUploadBuffer operation to add upload buffer to a stored volume gateway.</p> </note> <p>The response includes disk IDs that are configured as working storage, and it includes the amount of working storage allocated and used.</p>
    rpc Post#DescribeWorkingStorage(Post#DescribeWorkingStorageRequest) returns (DescribeWorkingStorageOutput) {
      option (google.api.http) = {
        post: "//#DescribeWorkingStorage"
        body: "body"
      };
    }
    // <p>Disables a tape gateway when the gateway is no longer functioning. For example, if your gateway VM is damaged, you can disable the gateway so you can recover virtual tapes.</p> <p>Use this operation for a tape gateway that is not reachable or not functioning. This operation is only supported in the tape gateway architectures.</p> <important> <p>Once a gateway is disabled it cannot be enabled.</p> </important>
    rpc Post#DisableGateway(Post#DisableGatewayRequest) returns (DisableGatewayOutput) {
      option (google.api.http) = {
        post: "//#DisableGateway"
        body: "body"
      };
    }
    // Gets a list of the file shares for a specific file gateway, or the list of file shares that belong to the calling user account. This operation is only supported in the file gateway architecture.
    rpc Post#ListFileShares(Post#ListFileSharesRequest) returns (ListFileSharesOutput) {
      option (google.api.http) = {
        post: "//#ListFileShares"
        body: "body"
      };
    }
    // <p>Lists gateways owned by an AWS account in a region specified in the request. The returned list is ordered by gateway Amazon Resource Name (ARN).</p> <p>By default, the operation returns a maximum of 100 gateways. This operation supports pagination that allows you to optionally reduce the number of gateways returned in a response.</p> <p>If you have more gateways than are returned in a response (that is, the response returns only a truncated list of your gateways), the response contains a marker that you can specify in your next request to fetch the next page of gateways.</p>
    rpc Post#ListGateways(Post#ListGatewaysRequest) returns (ListGatewaysOutput) {
      option (google.api.http) = {
        post: "//#ListGateways"
        body: "body"
      };
    }
    // <p>Returns a list of the gateway's local disks. To specify which gateway to describe, you use the Amazon Resource Name (ARN) of the gateway in the body of the request.</p> <p>The request returns a list of all disks, specifying which are configured as working storage, cache storage, or stored volume or not configured at all. The response includes a <code>DiskStatus</code> field. This field can have a value of present (the disk is available to use), missing (the disk is no longer connected to the gateway), or mismatch (the disk node is occupied by a disk that has incorrect metadata or the disk content is corrupted).</p>
    rpc Post#ListLocalDisks(Post#ListLocalDisksRequest) returns (ListLocalDisksOutput) {
      option (google.api.http) = {
        post: "//#ListLocalDisks"
        body: "body"
      };
    }
    // Lists the tags that have been added to the specified resource. This operation is only supported in the cached volume, stored volume and tape gateway architecture.
    rpc Post#ListTagsForResource(Post#ListTagsForResourceRequest) returns (ListTagsForResourceOutput) {
      option (google.api.http) = {
        post: "//#ListTagsForResource"
        body: "body"
      };
    }
    // <p>Lists virtual tapes in your virtual tape library (VTL) and your virtual tape shelf (VTS). You specify the tapes to list by specifying one or more tape Amazon Resource Names (ARNs). If you don't specify a tape ARN, the operation lists all virtual tapes in both your VTL and VTS.</p> <p>This operation supports pagination. By default, the operation returns a maximum of up to 100 tapes. You can optionally specify the <code>Limit</code> parameter in the body to limit the number of tapes in the response. If the number of tapes returned in the response is truncated, the response includes a <code>Marker</code> element that you can use in your subsequent request to retrieve the next set of tapes. This operation is only supported in the tape gateway architecture.</p>
    rpc Post#ListTapes(Post#ListTapesRequest) returns (ListTapesOutput) {
      option (google.api.http) = {
        post: "//#ListTapes"
        body: "body"
      };
    }
    // Lists iSCSI initiators that are connected to a volume. You can use this operation to determine whether a volume is being used or not. This operation is only supported in the cached volume and stored volume gateway architecture.
    rpc Post#ListVolumeInitiators(Post#ListVolumeInitiatorsRequest) returns (ListVolumeInitiatorsOutput) {
      option (google.api.http) = {
        post: "//#ListVolumeInitiators"
        body: "body"
      };
    }
    // <p>Lists the recovery points for a specified gateway. This operation is only supported in the cached volume gateway architecture.</p> <p>Each cache volume has one recovery point. A volume recovery point is a point in time at which all data of the volume is consistent and from which you can create a snapshot or clone a new cached volume from a source volume. To create a snapshot from a volume recovery point use the <a>CreateSnapshotFromVolumeRecoveryPoint</a> operation.</p>
    rpc Post#ListVolumeRecoveryPoints(Post#ListVolumeRecoveryPointsRequest) returns (ListVolumeRecoveryPointsOutput) {
      option (google.api.http) = {
        post: "//#ListVolumeRecoveryPoints"
        body: "body"
      };
    }
    // <p>Lists the iSCSI stored volumes of a gateway. Results are sorted by volume ARN. The response includes only the volume ARNs. If you want additional volume information, use the <a>DescribeStorediSCSIVolumes</a> or the <a>DescribeCachediSCSIVolumes</a> API.</p> <p>The operation supports pagination. By default, the operation returns a maximum of up to 100 volumes. You can optionally specify the <code>Limit</code> field in the body to limit the number of volumes in the response. If the number of volumes returned in the response is truncated, the response includes a Marker field. You can use this Marker value in your subsequent request to retrieve the next set of volumes. This operation is only supported in the cached volume and stored volume gateway architectures.</p>
    rpc Post#ListVolumes(Post#ListVolumesRequest) returns (ListVolumesOutput) {
      option (google.api.http) = {
        post: "//#ListVolumes"
        body: "body"
      };
    }
    // Refreshes the cache for the specified file share. This operation finds objects in the Amazon S3 bucket that were added, removed or replaced since the gateway last listed the bucket's contents and cached the results.
    rpc Post#RefreshCache(Post#RefreshCacheRequest) returns (RefreshCacheOutput) {
      option (google.api.http) = {
        post: "//#RefreshCache"
        body: "body"
      };
    }
    // Removes one or more tags from the specified resource. This operation is only supported in the cached volume, stored volume and tape gateway architectures.
    rpc Post#RemoveTagsFromResource(Post#RemoveTagsFromResourceRequest) returns (RemoveTagsFromResourceOutput) {
      option (google.api.http) = {
        post: "//#RemoveTagsFromResource"
        body: "body"
      };
    }
    // <p>Resets all cache disks that have encountered a error and makes the disks available for reconfiguration as cache storage. If your cache disk encounters a error, the gateway prevents read and write operations on virtual tapes in the gateway. For example, an error can occur when a disk is corrupted or removed from the gateway. When a cache is reset, the gateway loses its cache storage. At this point you can reconfigure the disks as cache disks. This operation is only supported in the cached volume,tape and file gateway architectures.</p> <important> <p>If the cache disk you are resetting contains data that has not been uploaded to Amazon S3 yet, that data can be lost. After you reset cache disks, there will be no configured cache disks left in the gateway, so you must configure at least one new cache disk for your gateway to function properly.</p> </important>
    rpc Post#ResetCache(Post#ResetCacheRequest) returns (ResetCacheOutput) {
      option (google.api.http) = {
        post: "//#ResetCache"
        body: "body"
      };
    }
    // <p>Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a tape gateway. Virtual tapes archived in the VTS are not associated with any gateway. However after a tape is retrieved, it is associated with a gateway, even though it is also listed in the VTS, that is, archive. This operation is only supported in the tape gateway architecture.</p> <p>Once a tape is successfully retrieved to a gateway, it cannot be retrieved again to another gateway. You must archive the tape again before you can retrieve it to another gateway. This operation is only supported in the tape gateway architecture.</p>
    rpc Post#RetrieveTapeArchive(Post#RetrieveTapeArchiveRequest) returns (RetrieveTapeArchiveOutput) {
      option (google.api.http) = {
        post: "//#RetrieveTapeArchive"
        body: "body"
      };
    }
    // <p>Retrieves the recovery point for the specified virtual tape. This operation is only supported in the tape gateway architecture.</p> <p>A recovery point is a point in time view of a virtual tape at which all the data on the tape is consistent. If your gateway crashes, virtual tapes that have recovery points can be recovered to a new gateway.</p> <note> <p>The virtual tape can be retrieved to only one gateway. The retrieved tape is read-only. The virtual tape can be retrieved to only a tape gateway. There is no charge for retrieving recovery points.</p> </note>
    rpc Post#RetrieveTapeRecoveryPoint(Post#RetrieveTapeRecoveryPointRequest) returns (RetrieveTapeRecoveryPointOutput) {
      option (google.api.http) = {
        post: "//#RetrieveTapeRecoveryPoint"
        body: "body"
      };
    }
    // Sets the password for your VM local console. When you log in to the local console for the first time, you log in to the VM with the default credentials. We recommend that you set a new password. You don't need to know the default password to set a new password.
    rpc Post#SetLocalConsolePassword(Post#SetLocalConsolePasswordRequest) returns (SetLocalConsolePasswordOutput) {
      option (google.api.http) = {
        post: "//#SetLocalConsolePassword"
        body: "body"
      };
    }
    // <p>Shuts down a gateway. To specify which gateway to shut down, use the Amazon Resource Name (ARN) of the gateway in the body of your request.</p> <p>The operation shuts down the gateway service component running in the gateway's virtual machine (VM) and not the host VM.</p> <note> <p>If you want to shut down the VM, it is recommended that you first shut down the gateway component in the VM to avoid unpredictable conditions.</p> </note> <p>After the gateway is shutdown, you cannot call any other API except <a>StartGateway</a>, <a>DescribeGatewayInformation</a>, and <a>ListGateways</a>. For more information, see <a>ActivateGateway</a>. Your applications cannot read from or write to the gateway's storage volumes, and there are no snapshots taken.</p> <note> <p>When you make a shutdown request, you will get a <code>200 OK</code> success response immediately. However, it might take some time for the gateway to shut down. You can call the <a>DescribeGatewayInformation</a> API to check the status. For more information, see <a>ActivateGateway</a>.</p> </note> <p>If do not intend to use the gateway again, you must delete the gateway (using <a>DeleteGateway</a>) to no longer pay software charges associated with the gateway.</p>
    rpc Post#ShutdownGateway(Post#ShutdownGatewayRequest) returns (ShutdownGatewayOutput) {
      option (google.api.http) = {
        post: "//#ShutdownGateway"
        body: "body"
      };
    }
    // <p>Starts a gateway that you previously shut down (see <a>ShutdownGateway</a>). After the gateway starts, you can then make other API calls, your applications can read from or write to the gateway's storage volumes and you will be able to take snapshot backups.</p> <note> <p>When you make a request, you will get a 200 OK success response immediately. However, it might take some time for the gateway to be ready. You should call <a>DescribeGatewayInformation</a> and check the status before making any additional API calls. For more information, see <a>ActivateGateway</a>.</p> </note> <p>To specify which gateway to start, use the Amazon Resource Name (ARN) of the gateway in your request.</p>
    rpc Post#StartGateway(Post#StartGatewayRequest) returns (StartGatewayOutput) {
      option (google.api.http) = {
        post: "//#StartGateway"
        body: "body"
      };
    }
    // <p>Updates the bandwidth rate limits of a gateway. You can update both the upload and download bandwidth rate limit or specify only one of the two. If you don't set a bandwidth rate limit, the existing rate limit remains.</p> <p>By default, a gateway's bandwidth rate limits are not set. If you don't set any limit, the gateway does not have any limitations on its bandwidth usage and could potentially use the maximum available bandwidth.</p> <p>To specify which gateway to update, use the Amazon Resource Name (ARN) of the gateway in your request.</p>
    rpc Post#UpdateBandwidthRateLimit(Post#UpdateBandwidthRateLimitRequest) returns (UpdateBandwidthRateLimitOutput) {
      option (google.api.http) = {
        post: "//#UpdateBandwidthRateLimit"
        body: "body"
      };
    }
    // <p>Updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target. By default, a gateway does not have CHAP enabled; however, for added security, you might use it.</p> <important> <p>When you update CHAP credentials, all existing connections on the target are closed and initiators must reconnect with the new credentials.</p> </important>
    rpc Post#UpdateChapCredentials(Post#UpdateChapCredentialsRequest) returns (UpdateChapCredentialsOutput) {
      option (google.api.http) = {
        post: "//#UpdateChapCredentials"
        body: "body"
      };
    }
    // <p>Updates a gateway's metadata, which includes the gateway's name and time zone. To specify which gateway to update, use the Amazon Resource Name (ARN) of the gateway in your request.</p> <note> <p>For Gateways activated after September 2, 2015, the gateway's ARN contains the gateway ID rather than the gateway name. However, changing the name of the gateway has no effect on the gateway's ARN.</p> </note>
    rpc Post#UpdateGatewayInformation(Post#UpdateGatewayInformationRequest) returns (UpdateGatewayInformationOutput) {
      option (google.api.http) = {
        post: "//#UpdateGatewayInformation"
        body: "body"
      };
    }
    // <p>Updates the gateway virtual machine (VM) software. The request immediately triggers the software update.</p> <note> <p>When you make this request, you get a <code>200 OK</code> success response immediately. However, it might take some time for the update to complete. You can call <a>DescribeGatewayInformation</a> to verify the gateway is in the <code>STATE_RUNNING</code> state.</p> </note> <important> <p>A software update forces a system restart of your gateway. You can minimize the chance of any disruption to your applications by increasing your iSCSI Initiators' timeouts. For more information about increasing iSCSI Initiator timeouts for Windows and Linux, see <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/ConfiguringiSCSIClientInitiatorWindowsClient.html#CustomizeWindowsiSCSISettings">Customizing Your Windows iSCSI Settings</a> and <a href="http://docs.aws.amazon.com/storagegateway/latest/userguide/ConfiguringiSCSIClientInitiatorRedHatClient.html#CustomizeLinuxiSCSISettings">Customizing Your Linux iSCSI Settings</a>, respectively.</p> </important>
    rpc Post#UpdateGatewaySoftwareNow(Post#UpdateGatewaySoftwareNowRequest) returns (UpdateGatewaySoftwareNowOutput) {
      option (google.api.http) = {
        post: "//#UpdateGatewaySoftwareNow"
        body: "body"
      };
    }
    // Updates a gateway's weekly maintenance start time information, including day and time of the week. The maintenance time is the time in your gateway's time zone.
    rpc Post#UpdateMaintenanceStartTime(Post#UpdateMaintenanceStartTimeRequest) returns (UpdateMaintenanceStartTimeOutput) {
      option (google.api.http) = {
        post: "//#UpdateMaintenanceStartTime"
        body: "body"
      };
    }
    // <p>Updates a file share. This operation is only supported in the file gateway architecture.</p> <note> <p>To leave a file share field unchanged, set the corresponding input field to null.</p> </note> <p>Updates the following file share setting:</p> <ul> <li> <p>Default storage class for your S3 bucket</p> </li> <li> <p>Metadata defaults for your S3 bucket</p> </li> <li> <p>Allowed NFS clients for your file share</p> </li> <li> <p>Squash settings</p> </li> <li> <p>Write status of your file share</p> </li> </ul> <note> <p>To leave a file share field unchanged, set the corresponding input field to null. This operation is only supported in file gateways.</p> </note>
    rpc Post#UpdateNFSFileShare(Post#UpdateNFSFileShareRequest) returns (UpdateNFSFileShareOutput) {
      option (google.api.http) = {
        post: "//#UpdateNFSFileShare"
        body: "body"
      };
    }
    // <p>Updates a snapshot schedule configured for a gateway volume. This operation is only supported in the cached volume and stored volume gateway architectures.</p> <p>The default snapshot schedule for volume is once every 24 hours, starting at the creation time of the volume. You can use this API to change the snapshot schedule configured for the volume.</p> <p>In the request you must identify the gateway volume whose snapshot schedule you want to update, and the schedule information, including when you want the snapshot to begin on a day and the frequency (in hours) of snapshots.</p>
    rpc Post#UpdateSnapshotSchedule(Post#UpdateSnapshotScheduleRequest) returns (UpdateSnapshotScheduleOutput) {
      option (google.api.http) = {
        post: "//#UpdateSnapshotSchedule"
        body: "body"
      };
    }
    // Updates the type of medium changer in a tape gateway. When you activate a tape gateway, you select a medium changer type for the tape gateway. This operation enables you to select a different type of medium changer after a tape gateway is activated. This operation is only supported in the tape gateway architecture.
    rpc Post#UpdateVTLDeviceType(Post#UpdateVTLDeviceTypeRequest) returns (UpdateVTLDeviceTypeOutput) {
      option (google.api.http) = {
        post: "//#UpdateVTLDeviceType"
        body: "body"
      };
    }
}
