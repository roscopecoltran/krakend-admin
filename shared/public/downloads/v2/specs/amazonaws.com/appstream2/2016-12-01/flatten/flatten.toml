basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.AccountName.format" = "password"
"definitions.AccountName.minLength" = 1.0
"definitions.AccountName.type" = "string"
"definitions.AccountPassword.format" = "password"
"definitions.AccountPassword.maxLength" = 127.0
"definitions.AccountPassword.minLength" = 1.0
"definitions.AccountPassword.type" = "string"
"definitions.Application.description" = "Describes an application in the application catalog."
"definitions.Application.properties.DisplayName.$ref" = "#/definitions/String"
"definitions.Application.properties.DisplayName.description" = "The application name displayed to end users."
"definitions.Application.properties.Enabled.$ref" = "#/definitions/Boolean"
"definitions.Application.properties.Enabled.description" = "If there is a problem, the application can be disabled after image creation."
"definitions.Application.properties.IconURL.$ref" = "#/definitions/String"
"definitions.Application.properties.IconURL.description" = "The URL for the application icon. This URL might be time-limited."
"definitions.Application.properties.LaunchParameters.$ref" = "#/definitions/String"
"definitions.Application.properties.LaunchParameters.description" = "The arguments that are passed to the application at launch."
"definitions.Application.properties.LaunchPath.$ref" = "#/definitions/String"
"definitions.Application.properties.LaunchPath.description" = "The path to the application executable in the instance."
"definitions.Application.properties.Metadata.$ref" = "#/definitions/Metadata"
"definitions.Application.properties.Metadata.description" = "Additional attributes that describe the application."
"definitions.Application.properties.Name.$ref" = "#/definitions/String"
"definitions.Application.properties.Name.description" = "The name of the application."
"definitions.Application.type" = "object"
"definitions.Applications.items.$ref" = "#/definitions/Application"
"definitions.Applications.type" = "array"
"definitions.Arn.pattern" = "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
"definitions.Arn.type" = "string"
"definitions.AssociateFleetRequest.properties.FleetName.$ref" = "#/definitions/String"
"definitions.AssociateFleetRequest.properties.FleetName.description" = "The name of the fleet."
"definitions.AssociateFleetRequest.properties.StackName.$ref" = "#/definitions/String"
"definitions.AssociateFleetRequest.properties.StackName.description" = "The name of the stack."
"definitions.AssociateFleetRequest.required.length" = 2
"definitions.AssociateFleetRequest.required[0]" = "FleetName"
"definitions.AssociateFleetRequest.required[1]" = "StackName"
"definitions.AssociateFleetRequest.type" = "object"
"definitions.AssociateFleetResult.type" = "object"
"definitions.AuthenticationType.enum.length" = 3
"definitions.AuthenticationType.enum[0]" = "API"
"definitions.AuthenticationType.enum[1]" = "SAML"
"definitions.AuthenticationType.enum[2]" = "USERPOOL"
"definitions.AuthenticationType.type" = "string"
"definitions.Boolean.type" = "boolean"
"definitions.BooleanObject.type" = "boolean"
"definitions.ComputeCapacity.description" = "Describes the capacity for a fleet."
"definitions.ComputeCapacity.properties.DesiredInstances.$ref" = "#/definitions/Integer"
"definitions.ComputeCapacity.properties.DesiredInstances.description" = "The desired number of streaming instances."
"definitions.ComputeCapacity.required.length" = 1
"definitions.ComputeCapacity.required[0]" = "DesiredInstances"
"definitions.ComputeCapacity.type" = "object"
"definitions.ComputeCapacityStatus.description" = "Describes the capacity status for a fleet."
"definitions.ComputeCapacityStatus.properties.Available.$ref" = "#/definitions/Integer"
"definitions.ComputeCapacityStatus.properties.Available.description" = "The number of currently available instances that can be used to stream sessions."
"definitions.ComputeCapacityStatus.properties.Desired.$ref" = "#/definitions/Integer"
"definitions.ComputeCapacityStatus.properties.Desired.description" = "The desired number of streaming instances."
"definitions.ComputeCapacityStatus.properties.InUse.$ref" = "#/definitions/Integer"
"definitions.ComputeCapacityStatus.properties.InUse.description" = "The number of instances in use for streaming."
"definitions.ComputeCapacityStatus.properties.Running.$ref" = "#/definitions/Integer"
"definitions.ComputeCapacityStatus.properties.Running.description" = "The total number of simultaneous streaming instances that are running."
"definitions.ComputeCapacityStatus.required.length" = 1
"definitions.ComputeCapacityStatus.required[0]" = "Desired"
"definitions.ComputeCapacityStatus.type" = "object"
"definitions.ConcurrentModificationException.description" = "An API error occurred. Wait a few minutes and try again."
"definitions.ConcurrentModificationException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.ConcurrentModificationException.type" = "object"
"definitions.CreateDirectoryConfigRequest.properties.DirectoryName.$ref" = "#/definitions/DirectoryName"
"definitions.CreateDirectoryConfigRequest.properties.DirectoryName.description" = "The fully qualified name of the directory (for example, corp.example.com)."
"definitions.CreateDirectoryConfigRequest.properties.OrganizationalUnitDistinguishedNames.$ref" = "#/definitions/OrganizationalUnitDistinguishedNamesList"
"definitions.CreateDirectoryConfigRequest.properties.OrganizationalUnitDistinguishedNames.description" = "The distinguished names of the organizational units for computer accounts."
"definitions.CreateDirectoryConfigRequest.properties.ServiceAccountCredentials.$ref" = "#/definitions/ServiceAccountCredentials"
"definitions.CreateDirectoryConfigRequest.properties.ServiceAccountCredentials.description" = "The credentials for the service account used by the streaming instance to connect to the directory."
"definitions.CreateDirectoryConfigRequest.required.length" = 3
"definitions.CreateDirectoryConfigRequest.required[0]" = "DirectoryName"
"definitions.CreateDirectoryConfigRequest.required[1]" = "OrganizationalUnitDistinguishedNames"
"definitions.CreateDirectoryConfigRequest.required[2]" = "ServiceAccountCredentials"
"definitions.CreateDirectoryConfigRequest.type" = "object"
"definitions.CreateDirectoryConfigResult.properties.DirectoryConfig.$ref" = "#/definitions/DirectoryConfig"
"definitions.CreateDirectoryConfigResult.properties.DirectoryConfig.description" = "Information about the directory configuration."
"definitions.CreateDirectoryConfigResult.type" = "object"
"definitions.CreateFleetRequest.properties.ComputeCapacity.$ref" = "#/definitions/ComputeCapacity"
"definitions.CreateFleetRequest.properties.ComputeCapacity.description" = "The desired capacity for the fleet."
"definitions.CreateFleetRequest.properties.Description.$ref" = "#/definitions/Description"
"definitions.CreateFleetRequest.properties.Description.description" = "The description displayed to end users."
"definitions.CreateFleetRequest.properties.DisconnectTimeoutInSeconds.$ref" = "#/definitions/Integer"
"definitions.CreateFleetRequest.properties.DisconnectTimeoutInSeconds.description" = "The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600."
"definitions.CreateFleetRequest.properties.DisplayName.$ref" = "#/definitions/DisplayName"
"definitions.CreateFleetRequest.properties.DisplayName.description" = "The fleet name displayed to end users."
"definitions.CreateFleetRequest.properties.DomainJoinInfo.$ref" = "#/definitions/DomainJoinInfo"
"definitions.CreateFleetRequest.properties.DomainJoinInfo.description" = "The information needed for streaming instances to join a domain."
"definitions.CreateFleetRequest.properties.EnableDefaultInternetAccess.$ref" = "#/definitions/BooleanObject"
"definitions.CreateFleetRequest.properties.EnableDefaultInternetAccess.description" = "Enables or disables default internet access for the fleet."
"definitions.CreateFleetRequest.properties.FleetType.$ref" = "#/definitions/FleetType"
"definitions.CreateFleetRequest.properties.ImageName.$ref" = "#/definitions/String"
"definitions.CreateFleetRequest.properties.ImageName.description" = "The name of the image used by the fleet."
"definitions.CreateFleetRequest.properties.InstanceType.$ref" = "#/definitions/String"
"definitions.CreateFleetRequest.properties.InstanceType.description" = "<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>"
"definitions.CreateFleetRequest.properties.MaxUserDurationInSeconds.$ref" = "#/definitions/Integer"
"definitions.CreateFleetRequest.properties.MaxUserDurationInSeconds.description" = "The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600."
"definitions.CreateFleetRequest.properties.Name.$ref" = "#/definitions/Name"
"definitions.CreateFleetRequest.properties.Name.description" = "A unique name for the fleet."
"definitions.CreateFleetRequest.properties.VpcConfig.$ref" = "#/definitions/VpcConfig"
"definitions.CreateFleetRequest.properties.VpcConfig.description" = "The VPC configuration for the fleet."
"definitions.CreateFleetRequest.required.length" = 4
"definitions.CreateFleetRequest.required[0]" = "Name"
"definitions.CreateFleetRequest.required[1]" = "ImageName"
"definitions.CreateFleetRequest.required[2]" = "InstanceType"
"definitions.CreateFleetRequest.required[3]" = "ComputeCapacity"
"definitions.CreateFleetRequest.type" = "object"
"definitions.CreateFleetResult.properties.Fleet.$ref" = "#/definitions/Fleet"
"definitions.CreateFleetResult.properties.Fleet.description" = "Information about the fleet."
"definitions.CreateFleetResult.type" = "object"
"definitions.CreateImageBuilderRequest.properties.Description.$ref" = "#/definitions/Description"
"definitions.CreateImageBuilderRequest.properties.DisplayName.$ref" = "#/definitions/DisplayName"
"definitions.CreateImageBuilderRequest.properties.DomainJoinInfo.$ref" = "#/definitions/DomainJoinInfo"
"definitions.CreateImageBuilderRequest.properties.EnableDefaultInternetAccess.$ref" = "#/definitions/BooleanObject"
"definitions.CreateImageBuilderRequest.properties.ImageName.$ref" = "#/definitions/String"
"definitions.CreateImageBuilderRequest.properties.InstanceType.$ref" = "#/definitions/String"
"definitions.CreateImageBuilderRequest.properties.Name.$ref" = "#/definitions/Name"
"definitions.CreateImageBuilderRequest.properties.VpcConfig.$ref" = "#/definitions/VpcConfig"
"definitions.CreateImageBuilderRequest.required.length" = 3
"definitions.CreateImageBuilderRequest.required[0]" = "Name"
"definitions.CreateImageBuilderRequest.required[1]" = "ImageName"
"definitions.CreateImageBuilderRequest.required[2]" = "InstanceType"
"definitions.CreateImageBuilderRequest.type" = "object"
"definitions.CreateImageBuilderResult.properties.ImageBuilder.$ref" = "#/definitions/ImageBuilder"
"definitions.CreateImageBuilderResult.type" = "object"
"definitions.CreateImageBuilderStreamingURLRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.CreateImageBuilderStreamingURLRequest.properties.Validity.$ref" = "#/definitions/Long"
"definitions.CreateImageBuilderStreamingURLRequest.required.length" = 1
"definitions.CreateImageBuilderStreamingURLRequest.required[0]" = "Name"
"definitions.CreateImageBuilderStreamingURLRequest.type" = "object"
"definitions.CreateImageBuilderStreamingURLResult.properties.Expires.$ref" = "#/definitions/Timestamp"
"definitions.CreateImageBuilderStreamingURLResult.properties.StreamingURL.$ref" = "#/definitions/String"
"definitions.CreateImageBuilderStreamingURLResult.type" = "object"
"definitions.CreateStackRequest.properties.Description.$ref" = "#/definitions/Description"
"definitions.CreateStackRequest.properties.Description.description" = "The description displayed to end users."
"definitions.CreateStackRequest.properties.DisplayName.$ref" = "#/definitions/DisplayName"
"definitions.CreateStackRequest.properties.DisplayName.description" = "The stack name displayed to end users."
"definitions.CreateStackRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.CreateStackRequest.properties.Name.description" = "The name of the stack."
"definitions.CreateStackRequest.properties.StorageConnectors.$ref" = "#/definitions/StorageConnectorList"
"definitions.CreateStackRequest.properties.StorageConnectors.description" = "The storage connectors to enable."
"definitions.CreateStackRequest.required.length" = 1
"definitions.CreateStackRequest.required[0]" = "Name"
"definitions.CreateStackRequest.type" = "object"
"definitions.CreateStackResult.properties.Stack.$ref" = "#/definitions/Stack"
"definitions.CreateStackResult.properties.Stack.description" = "Information about the stack."
"definitions.CreateStackResult.type" = "object"
"definitions.CreateStreamingURLRequest.properties.ApplicationId.$ref" = "#/definitions/String"
"definitions.CreateStreamingURLRequest.properties.ApplicationId.description" = "The ID of the application that must be launched after the session starts."
"definitions.CreateStreamingURLRequest.properties.FleetName.$ref" = "#/definitions/String"
"definitions.CreateStreamingURLRequest.properties.FleetName.description" = "The name of the fleet."
"definitions.CreateStreamingURLRequest.properties.SessionContext.$ref" = "#/definitions/String"
"definitions.CreateStreamingURLRequest.properties.SessionContext.description" = "The session context of the streaming URL."
"definitions.CreateStreamingURLRequest.properties.StackName.$ref" = "#/definitions/String"
"definitions.CreateStreamingURLRequest.properties.StackName.description" = "The name of the stack."
"definitions.CreateStreamingURLRequest.properties.UserId.$ref" = "#/definitions/StreamingUrlUserId"
"definitions.CreateStreamingURLRequest.properties.UserId.description" = "The ID of the user."
"definitions.CreateStreamingURLRequest.properties.Validity.$ref" = "#/definitions/Long"
"definitions.CreateStreamingURLRequest.properties.Validity.description" = "The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds."
"definitions.CreateStreamingURLRequest.required.length" = 3
"definitions.CreateStreamingURLRequest.required[0]" = "StackName"
"definitions.CreateStreamingURLRequest.required[1]" = "FleetName"
"definitions.CreateStreamingURLRequest.required[2]" = "UserId"
"definitions.CreateStreamingURLRequest.type" = "object"
"definitions.CreateStreamingURLResult.properties.Expires.$ref" = "#/definitions/Timestamp"
"definitions.CreateStreamingURLResult.properties.Expires.description" = "The elapsed time, in seconds after the Unix epoch, when this URL expires."
"definitions.CreateStreamingURLResult.properties.StreamingURL.$ref" = "#/definitions/String"
"definitions.CreateStreamingURLResult.properties.StreamingURL.description" = "The URL to start the AppStream 2.0 streaming session."
"definitions.CreateStreamingURLResult.type" = "object"
"definitions.DeleteDirectoryConfigRequest.properties.DirectoryName.$ref" = "#/definitions/DirectoryName"
"definitions.DeleteDirectoryConfigRequest.properties.DirectoryName.description" = "The name of the directory configuration."
"definitions.DeleteDirectoryConfigRequest.required.length" = 1
"definitions.DeleteDirectoryConfigRequest.required[0]" = "DirectoryName"
"definitions.DeleteDirectoryConfigRequest.type" = "object"
"definitions.DeleteDirectoryConfigResult.type" = "object"
"definitions.DeleteFleetRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.DeleteFleetRequest.properties.Name.description" = "The name of the fleet."
"definitions.DeleteFleetRequest.required.length" = 1
"definitions.DeleteFleetRequest.required[0]" = "Name"
"definitions.DeleteFleetRequest.type" = "object"
"definitions.DeleteFleetResult.type" = "object"
"definitions.DeleteImageBuilderRequest.properties.Name.$ref" = "#/definitions/Name"
"definitions.DeleteImageBuilderRequest.required.length" = 1
"definitions.DeleteImageBuilderRequest.required[0]" = "Name"
"definitions.DeleteImageBuilderRequest.type" = "object"
"definitions.DeleteImageBuilderResult.properties.ImageBuilder.$ref" = "#/definitions/ImageBuilder"
"definitions.DeleteImageBuilderResult.type" = "object"
"definitions.DeleteImageRequest.properties.Name.$ref" = "#/definitions/Name"
"definitions.DeleteImageRequest.required.length" = 1
"definitions.DeleteImageRequest.required[0]" = "Name"
"definitions.DeleteImageRequest.type" = "object"
"definitions.DeleteImageResult.properties.Image.$ref" = "#/definitions/Image"
"definitions.DeleteImageResult.type" = "object"
"definitions.DeleteStackRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.DeleteStackRequest.properties.Name.description" = "The name of the stack."
"definitions.DeleteStackRequest.required.length" = 1
"definitions.DeleteStackRequest.required[0]" = "Name"
"definitions.DeleteStackRequest.type" = "object"
"definitions.DeleteStackResult.type" = "object"
"definitions.DescribeDirectoryConfigsRequest.properties.DirectoryNames.$ref" = "#/definitions/DirectoryNameList"
"definitions.DescribeDirectoryConfigsRequest.properties.DirectoryNames.description" = "The directory names."
"definitions.DescribeDirectoryConfigsRequest.properties.MaxResults.$ref" = "#/definitions/Integer"
"definitions.DescribeDirectoryConfigsRequest.properties.MaxResults.description" = "The maximum size of each page of results."
"definitions.DescribeDirectoryConfigsRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeDirectoryConfigsRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.DescribeDirectoryConfigsRequest.type" = "object"
"definitions.DescribeDirectoryConfigsResult.properties.DirectoryConfigs.$ref" = "#/definitions/DirectoryConfigList"
"definitions.DescribeDirectoryConfigsResult.properties.DirectoryConfigs.description" = "Information about the directory configurations."
"definitions.DescribeDirectoryConfigsResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeDirectoryConfigsResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.DescribeDirectoryConfigsResult.type" = "object"
"definitions.DescribeFleetsRequest.properties.Names.$ref" = "#/definitions/StringList"
"definitions.DescribeFleetsRequest.properties.Names.description" = "The names of the fleets to describe."
"definitions.DescribeFleetsRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeFleetsRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.DescribeFleetsRequest.type" = "object"
"definitions.DescribeFleetsResult.properties.Fleets.$ref" = "#/definitions/FleetList"
"definitions.DescribeFleetsResult.properties.Fleets.description" = "Information about the fleets."
"definitions.DescribeFleetsResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeFleetsResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.DescribeFleetsResult.type" = "object"
"definitions.DescribeImageBuildersRequest.properties.MaxResults.$ref" = "#/definitions/Integer"
"definitions.DescribeImageBuildersRequest.properties.Names.$ref" = "#/definitions/StringList"
"definitions.DescribeImageBuildersRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeImageBuildersRequest.type" = "object"
"definitions.DescribeImageBuildersResult.properties.ImageBuilders.$ref" = "#/definitions/ImageBuilderList"
"definitions.DescribeImageBuildersResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeImageBuildersResult.type" = "object"
"definitions.DescribeImagesRequest.properties.Names.$ref" = "#/definitions/StringList"
"definitions.DescribeImagesRequest.properties.Names.description" = "The names of the images to describe."
"definitions.DescribeImagesRequest.type" = "object"
"definitions.DescribeImagesResult.properties.Images.$ref" = "#/definitions/ImageList"
"definitions.DescribeImagesResult.properties.Images.description" = "Information about the images."
"definitions.DescribeImagesResult.type" = "object"
"definitions.DescribeSessionsRequest.properties.AuthenticationType.$ref" = "#/definitions/AuthenticationType"
"definitions.DescribeSessionsRequest.properties.AuthenticationType.description" = "The authentication method. Specify <code>API</code> for a user authenticated using a streaming URL or <code>SAML</code> for a SAML federated user. The default is to authenticate users using a streaming URL."
"definitions.DescribeSessionsRequest.properties.FleetName.$ref" = "#/definitions/String"
"definitions.DescribeSessionsRequest.properties.FleetName.description" = "The name of the fleet."
"definitions.DescribeSessionsRequest.properties.Limit.$ref" = "#/definitions/Integer"
"definitions.DescribeSessionsRequest.properties.Limit.description" = "The size of each page of results. The default value is 20 and the maximum value is 50."
"definitions.DescribeSessionsRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeSessionsRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.DescribeSessionsRequest.properties.StackName.$ref" = "#/definitions/String"
"definitions.DescribeSessionsRequest.properties.StackName.description" = "The name of the stack."
"definitions.DescribeSessionsRequest.properties.UserId.$ref" = "#/definitions/UserId"
"definitions.DescribeSessionsRequest.properties.UserId.description" = "The user ID."
"definitions.DescribeSessionsRequest.required.length" = 2
"definitions.DescribeSessionsRequest.required[0]" = "StackName"
"definitions.DescribeSessionsRequest.required[1]" = "FleetName"
"definitions.DescribeSessionsRequest.type" = "object"
"definitions.DescribeSessionsResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeSessionsResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.DescribeSessionsResult.properties.Sessions.$ref" = "#/definitions/SessionList"
"definitions.DescribeSessionsResult.properties.Sessions.description" = "Information about the streaming sessions."
"definitions.DescribeSessionsResult.type" = "object"
"definitions.DescribeStacksRequest.properties.Names.$ref" = "#/definitions/StringList"
"definitions.DescribeStacksRequest.properties.Names.description" = "The names of the stacks to describe."
"definitions.DescribeStacksRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeStacksRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.DescribeStacksRequest.type" = "object"
"definitions.DescribeStacksResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.DescribeStacksResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.DescribeStacksResult.properties.Stacks.$ref" = "#/definitions/StackList"
"definitions.DescribeStacksResult.properties.Stacks.description" = "Information about the stacks."
"definitions.DescribeStacksResult.type" = "object"
"definitions.Description.maxLength" = 256.0
"definitions.Description.type" = "string"
"definitions.DirectoryConfig.description" = "Configuration information for the directory used to join domains."
"definitions.DirectoryConfig.properties.CreatedTime.$ref" = "#/definitions/Timestamp"
"definitions.DirectoryConfig.properties.CreatedTime.description" = "The time the directory configuration was created."
"definitions.DirectoryConfig.properties.DirectoryName.$ref" = "#/definitions/DirectoryName"
"definitions.DirectoryConfig.properties.DirectoryName.description" = "The fully qualified name of the directory (for example, corp.example.com)."
"definitions.DirectoryConfig.properties.OrganizationalUnitDistinguishedNames.$ref" = "#/definitions/OrganizationalUnitDistinguishedNamesList"
"definitions.DirectoryConfig.properties.OrganizationalUnitDistinguishedNames.description" = "The distinguished names of the organizational units for computer accounts."
"definitions.DirectoryConfig.properties.ServiceAccountCredentials.$ref" = "#/definitions/ServiceAccountCredentials"
"definitions.DirectoryConfig.properties.ServiceAccountCredentials.description" = "The credentials for the service account used by the streaming instance to connect to the directory."
"definitions.DirectoryConfig.required.length" = 1
"definitions.DirectoryConfig.required[0]" = "DirectoryName"
"definitions.DirectoryConfig.type" = "object"
"definitions.DirectoryConfigList.items.$ref" = "#/definitions/DirectoryConfig"
"definitions.DirectoryConfigList.type" = "array"
"definitions.DirectoryName.type" = "string"
"definitions.DirectoryNameList.items.$ref" = "#/definitions/DirectoryName"
"definitions.DirectoryNameList.type" = "array"
"definitions.DisassociateFleetRequest.properties.FleetName.$ref" = "#/definitions/String"
"definitions.DisassociateFleetRequest.properties.FleetName.description" = "The name of the fleet."
"definitions.DisassociateFleetRequest.properties.StackName.$ref" = "#/definitions/String"
"definitions.DisassociateFleetRequest.properties.StackName.description" = "The name of the stack."
"definitions.DisassociateFleetRequest.required.length" = 2
"definitions.DisassociateFleetRequest.required[0]" = "FleetName"
"definitions.DisassociateFleetRequest.required[1]" = "StackName"
"definitions.DisassociateFleetRequest.type" = "object"
"definitions.DisassociateFleetResult.type" = "object"
"definitions.DisplayName.maxLength" = 100.0
"definitions.DisplayName.type" = "string"
"definitions.DomainJoinInfo.description" = "Contains the information needed for streaming instances to join a domain."
"definitions.DomainJoinInfo.properties.DirectoryName.$ref" = "#/definitions/DirectoryName"
"definitions.DomainJoinInfo.properties.DirectoryName.description" = "The fully qualified name of the directory (for example, corp.example.com)."
"definitions.DomainJoinInfo.properties.OrganizationalUnitDistinguishedName.$ref" = "#/definitions/OrganizationalUnitDistinguishedName"
"definitions.DomainJoinInfo.properties.OrganizationalUnitDistinguishedName.description" = "The distinguished name of the organizational unit for computer accounts."
"definitions.DomainJoinInfo.type" = "object"
"definitions.ErrorMessage.description" = "The error message in the exception."
"definitions.ErrorMessage.type" = "string"
"definitions.ExpireSessionRequest.properties.SessionId.$ref" = "#/definitions/String"
"definitions.ExpireSessionRequest.properties.SessionId.description" = "The ID of the streaming session."
"definitions.ExpireSessionRequest.required.length" = 1
"definitions.ExpireSessionRequest.required[0]" = "SessionId"
"definitions.ExpireSessionRequest.type" = "object"
"definitions.ExpireSessionResult.type" = "object"
"definitions.Fleet.description" = "Contains the parameters for a fleet."
"definitions.Fleet.properties.Arn.$ref" = "#/definitions/Arn"
"definitions.Fleet.properties.Arn.description" = "The ARN for the fleet."
"definitions.Fleet.properties.ComputeCapacityStatus.$ref" = "#/definitions/ComputeCapacityStatus"
"definitions.Fleet.properties.ComputeCapacityStatus.description" = "The capacity status for the fleet."
"definitions.Fleet.properties.CreatedTime.$ref" = "#/definitions/Timestamp"
"definitions.Fleet.properties.CreatedTime.description" = "The time the fleet was created."
"definitions.Fleet.properties.Description.$ref" = "#/definitions/String"
"definitions.Fleet.properties.Description.description" = "The description displayed to end users."
"definitions.Fleet.properties.DisconnectTimeoutInSeconds.$ref" = "#/definitions/Integer"
"definitions.Fleet.properties.DisconnectTimeoutInSeconds.description" = "The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600."
"definitions.Fleet.properties.DisplayName.$ref" = "#/definitions/String"
"definitions.Fleet.properties.DisplayName.description" = "The fleet name displayed to end users."
"definitions.Fleet.properties.DomainJoinInfo.$ref" = "#/definitions/DomainJoinInfo"
"definitions.Fleet.properties.DomainJoinInfo.description" = "The information needed for streaming instances to join a domain."
"definitions.Fleet.properties.EnableDefaultInternetAccess.$ref" = "#/definitions/BooleanObject"
"definitions.Fleet.properties.EnableDefaultInternetAccess.description" = "Indicates whether default internet access is enabled for the fleet."
"definitions.Fleet.properties.FleetErrors.$ref" = "#/definitions/FleetErrors"
"definitions.Fleet.properties.FleetErrors.description" = "The fleet errors."
"definitions.Fleet.properties.FleetType.$ref" = "#/definitions/FleetType"
"definitions.Fleet.properties.ImageName.$ref" = "#/definitions/String"
"definitions.Fleet.properties.ImageName.description" = "The image used by the fleet."
"definitions.Fleet.properties.InstanceType.$ref" = "#/definitions/String"
"definitions.Fleet.properties.InstanceType.description" = "The instance type to use when launching fleet instances."
"definitions.Fleet.properties.MaxUserDurationInSeconds.$ref" = "#/definitions/Integer"
"definitions.Fleet.properties.MaxUserDurationInSeconds.description" = "The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600."
"definitions.Fleet.properties.Name.$ref" = "#/definitions/String"
"definitions.Fleet.properties.Name.description" = "The name of the fleet."
"definitions.Fleet.properties.State.$ref" = "#/definitions/FleetState"
"definitions.Fleet.properties.State.description" = "The current state for the fleet."
"definitions.Fleet.properties.VpcConfig.$ref" = "#/definitions/VpcConfig"
"definitions.Fleet.properties.VpcConfig.description" = "The VPC configuration for the fleet."
"definitions.Fleet.required.length" = 6
"definitions.Fleet.required[0]" = "Arn"
"definitions.Fleet.required[1]" = "Name"
"definitions.Fleet.required[2]" = "ImageName"
"definitions.Fleet.required[3]" = "InstanceType"
"definitions.Fleet.required[4]" = "ComputeCapacityStatus"
"definitions.Fleet.required[5]" = "State"
"definitions.Fleet.type" = "object"
"definitions.FleetAttribute.description" = "The fleet attribute."
"definitions.FleetAttribute.enum.length" = 3
"definitions.FleetAttribute.enum[0]" = "VPC_CONFIGURATION"
"definitions.FleetAttribute.enum[1]" = "VPC_CONFIGURATION_SECURITY_GROUP_IDS"
"definitions.FleetAttribute.enum[2]" = "DOMAIN_JOIN_INFO"
"definitions.FleetAttribute.type" = "string"
"definitions.FleetAttributes.description" = "The fleet attributes."
"definitions.FleetAttributes.items.$ref" = "#/definitions/FleetAttribute"
"definitions.FleetAttributes.type" = "array"
"definitions.FleetError.description" = "Describes a fleet error."
"definitions.FleetError.properties.ErrorCode.$ref" = "#/definitions/FleetErrorCode"
"definitions.FleetError.properties.ErrorCode.description" = "The error code."
"definitions.FleetError.properties.ErrorMessage.$ref" = "#/definitions/String"
"definitions.FleetError.properties.ErrorMessage.description" = "The error message."
"definitions.FleetError.type" = "object"
"definitions.FleetErrorCode.enum.length" = 26
"definitions.FleetErrorCode.enum[0]" = "IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION"
"definitions.FleetErrorCode.enum[10]" = "INVALID_SUBNET_CONFIGURATION"
"definitions.FleetErrorCode.enum[11]" = "SECURITY_GROUPS_NOT_FOUND"
"definitions.FleetErrorCode.enum[12]" = "IGW_NOT_ATTACHED"
"definitions.FleetErrorCode.enum[13]" = "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION"
"definitions.FleetErrorCode.enum[14]" = "DOMAIN_JOIN_ERROR_FILE_NOT_FOUND"
"definitions.FleetErrorCode.enum[15]" = "DOMAIN_JOIN_ERROR_ACCESS_DENIED"
"definitions.FleetErrorCode.enum[16]" = "DOMAIN_JOIN_ERROR_LOGON_FAILURE"
"definitions.FleetErrorCode.enum[17]" = "DOMAIN_JOIN_ERROR_INVALID_PARAMETER"
"definitions.FleetErrorCode.enum[18]" = "DOMAIN_JOIN_ERROR_MORE_DATA"
"definitions.FleetErrorCode.enum[19]" = "DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN"
"definitions.FleetErrorCode.enum[1]" = "IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION"
"definitions.FleetErrorCode.enum[20]" = "DOMAIN_JOIN_ERROR_NOT_SUPPORTED"
"definitions.FleetErrorCode.enum[21]" = "DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME"
"definitions.FleetErrorCode.enum[22]" = "DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED"
"definitions.FleetErrorCode.enum[23]" = "DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED"
"definitions.FleetErrorCode.enum[24]" = "DOMAIN_JOIN_NERR_PASSWORD_EXPIRED"
"definitions.FleetErrorCode.enum[25]" = "DOMAIN_JOIN_INTERNAL_SERVICE_ERROR"
"definitions.FleetErrorCode.enum[2]" = "IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION"
"definitions.FleetErrorCode.enum[3]" = "NETWORK_INTERFACE_LIMIT_EXCEEDED"
"definitions.FleetErrorCode.enum[4]" = "INTERNAL_SERVICE_ERROR"
"definitions.FleetErrorCode.enum[5]" = "IAM_SERVICE_ROLE_IS_MISSING"
"definitions.FleetErrorCode.enum[6]" = "SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES"
"definitions.FleetErrorCode.enum[7]" = "IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION"
"definitions.FleetErrorCode.enum[8]" = "SUBNET_NOT_FOUND"
"definitions.FleetErrorCode.enum[9]" = "IMAGE_NOT_FOUND"
"definitions.FleetErrorCode.type" = "string"
"definitions.FleetErrors.items.$ref" = "#/definitions/FleetError"
"definitions.FleetErrors.type" = "array"
"definitions.FleetList.description" = "The fleets."
"definitions.FleetList.items.$ref" = "#/definitions/Fleet"
"definitions.FleetList.type" = "array"
"definitions.FleetState.enum.length" = 4
"definitions.FleetState.enum[0]" = "STARTING"
"definitions.FleetState.enum[1]" = "RUNNING"
"definitions.FleetState.enum[2]" = "STOPPING"
"definitions.FleetState.enum[3]" = "STOPPED"
"definitions.FleetState.type" = "string"
"definitions.FleetType.enum.length" = 2
"definitions.FleetType.enum[0]" = "ALWAYS_ON"
"definitions.FleetType.enum[1]" = "ON_DEMAND"
"definitions.FleetType.type" = "string"
"definitions.Image.description" = "Describes an image."
"definitions.Image.properties.Applications.$ref" = "#/definitions/Applications"
"definitions.Image.properties.Applications.description" = "The applications associated with the image."
"definitions.Image.properties.Arn.$ref" = "#/definitions/Arn"
"definitions.Image.properties.Arn.description" = "The ARN of the image."
"definitions.Image.properties.BaseImageArn.$ref" = "#/definitions/Arn"
"definitions.Image.properties.BaseImageArn.description" = "The ARN of the image from which this image was created."
"definitions.Image.properties.CreatedTime.$ref" = "#/definitions/Timestamp"
"definitions.Image.properties.CreatedTime.description" = "The time the image was created."
"definitions.Image.properties.Description.$ref" = "#/definitions/String"
"definitions.Image.properties.Description.description" = "The description displayed to end users."
"definitions.Image.properties.DisplayName.$ref" = "#/definitions/String"
"definitions.Image.properties.DisplayName.description" = "The image name displayed to end users."
"definitions.Image.properties.ImageBuilderSupported.$ref" = "#/definitions/Boolean"
"definitions.Image.properties.ImageBuilderSupported.description" = "Indicates whether an image builder can be launched from this image."
"definitions.Image.properties.Name.$ref" = "#/definitions/String"
"definitions.Image.properties.Name.description" = "The name of the image."
"definitions.Image.properties.Platform.$ref" = "#/definitions/PlatformType"
"definitions.Image.properties.Platform.description" = "The operating system platform of the image."
"definitions.Image.properties.PublicBaseImageReleasedDate.$ref" = "#/definitions/Timestamp"
"definitions.Image.properties.PublicBaseImageReleasedDate.description" = "The release date of the public base image. For private images, this date is the release date of the base image from which the image was created."
"definitions.Image.properties.State.$ref" = "#/definitions/ImageState"
"definitions.Image.properties.State.description" = "The image starts in the <code>PENDING</code> state. If image creation succeeds, the state is <code>AVAILABLE</code>. If image creation fails, the state is <code>FAILED</code>."
"definitions.Image.properties.StateChangeReason.$ref" = "#/definitions/ImageStateChangeReason"
"definitions.Image.properties.StateChangeReason.description" = "The reason why the last state change occurred."
"definitions.Image.properties.Visibility.$ref" = "#/definitions/VisibilityType"
"definitions.Image.properties.Visibility.description" = "Indicates whether the image is public or private."
"definitions.Image.required.length" = 1
"definitions.Image.required[0]" = "Name"
"definitions.Image.type" = "object"
"definitions.ImageBuilder.properties.Arn.$ref" = "#/definitions/Arn"
"definitions.ImageBuilder.properties.CreatedTime.$ref" = "#/definitions/Timestamp"
"definitions.ImageBuilder.properties.Description.$ref" = "#/definitions/String"
"definitions.ImageBuilder.properties.DisplayName.$ref" = "#/definitions/String"
"definitions.ImageBuilder.properties.DomainJoinInfo.$ref" = "#/definitions/DomainJoinInfo"
"definitions.ImageBuilder.properties.EnableDefaultInternetAccess.$ref" = "#/definitions/BooleanObject"
"definitions.ImageBuilder.properties.ImageArn.$ref" = "#/definitions/Arn"
"definitions.ImageBuilder.properties.ImageBuilderErrors.$ref" = "#/definitions/ResourceErrors"
"definitions.ImageBuilder.properties.InstanceType.$ref" = "#/definitions/String"
"definitions.ImageBuilder.properties.Name.$ref" = "#/definitions/String"
"definitions.ImageBuilder.properties.Platform.$ref" = "#/definitions/PlatformType"
"definitions.ImageBuilder.properties.State.$ref" = "#/definitions/ImageBuilderState"
"definitions.ImageBuilder.properties.StateChangeReason.$ref" = "#/definitions/ImageBuilderStateChangeReason"
"definitions.ImageBuilder.properties.VpcConfig.$ref" = "#/definitions/VpcConfig"
"definitions.ImageBuilder.required.length" = 1
"definitions.ImageBuilder.required[0]" = "Name"
"definitions.ImageBuilder.type" = "object"
"definitions.ImageBuilderList.items.$ref" = "#/definitions/ImageBuilder"
"definitions.ImageBuilderList.type" = "array"
"definitions.ImageBuilderState.enum.length" = 8
"definitions.ImageBuilderState.enum[0]" = "PENDING"
"definitions.ImageBuilderState.enum[1]" = "RUNNING"
"definitions.ImageBuilderState.enum[2]" = "STOPPING"
"definitions.ImageBuilderState.enum[3]" = "STOPPED"
"definitions.ImageBuilderState.enum[4]" = "REBOOTING"
"definitions.ImageBuilderState.enum[5]" = "SNAPSHOTTING"
"definitions.ImageBuilderState.enum[6]" = "DELETING"
"definitions.ImageBuilderState.enum[7]" = "FAILED"
"definitions.ImageBuilderState.type" = "string"
"definitions.ImageBuilderStateChangeReason.properties.Code.$ref" = "#/definitions/ImageBuilderStateChangeReasonCode"
"definitions.ImageBuilderStateChangeReason.properties.Message.$ref" = "#/definitions/String"
"definitions.ImageBuilderStateChangeReason.type" = "object"
"definitions.ImageBuilderStateChangeReasonCode.enum.length" = 2
"definitions.ImageBuilderStateChangeReasonCode.enum[0]" = "INTERNAL_ERROR"
"definitions.ImageBuilderStateChangeReasonCode.enum[1]" = "IMAGE_UNAVAILABLE"
"definitions.ImageBuilderStateChangeReasonCode.type" = "string"
"definitions.ImageList.items.$ref" = "#/definitions/Image"
"definitions.ImageList.type" = "array"
"definitions.ImageState.enum.length" = 4
"definitions.ImageState.enum[0]" = "PENDING"
"definitions.ImageState.enum[1]" = "AVAILABLE"
"definitions.ImageState.enum[2]" = "FAILED"
"definitions.ImageState.enum[3]" = "DELETING"
"definitions.ImageState.type" = "string"
"definitions.ImageStateChangeReason.description" = "Describes the reason why the last state change occurred."
"definitions.ImageStateChangeReason.properties.Code.$ref" = "#/definitions/ImageStateChangeReasonCode"
"definitions.ImageStateChangeReason.properties.Code.description" = "The state change reason code."
"definitions.ImageStateChangeReason.properties.Message.$ref" = "#/definitions/String"
"definitions.ImageStateChangeReason.properties.Message.description" = "The state change reason message."
"definitions.ImageStateChangeReason.type" = "object"
"definitions.ImageStateChangeReasonCode.enum.length" = 2
"definitions.ImageStateChangeReasonCode.enum[0]" = "INTERNAL_ERROR"
"definitions.ImageStateChangeReasonCode.enum[1]" = "IMAGE_BUILDER_NOT_AVAILABLE"
"definitions.ImageStateChangeReasonCode.type" = "string"
"definitions.IncompatibleImageException.description" = "The image does not support storage connectors."
"definitions.IncompatibleImageException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.IncompatibleImageException.type" = "object"
"definitions.Integer.type" = "integer"
"definitions.InvalidParameterCombinationException.description" = "Indicates an incorrect combination of parameters, or a missing parameter."
"definitions.InvalidParameterCombinationException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.InvalidParameterCombinationException.type" = "object"
"definitions.InvalidRoleException.description" = "The specified role is invalid."
"definitions.InvalidRoleException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.InvalidRoleException.type" = "object"
"definitions.LimitExceededException.description" = "The requested limit exceeds the permitted limit for an account."
"definitions.LimitExceededException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.LimitExceededException.type" = "object"
"definitions.ListAssociatedFleetsRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.ListAssociatedFleetsRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.ListAssociatedFleetsRequest.properties.StackName.$ref" = "#/definitions/String"
"definitions.ListAssociatedFleetsRequest.properties.StackName.description" = "The name of the stack."
"definitions.ListAssociatedFleetsRequest.required.length" = 1
"definitions.ListAssociatedFleetsRequest.required[0]" = "StackName"
"definitions.ListAssociatedFleetsRequest.type" = "object"
"definitions.ListAssociatedFleetsResult.properties.Names.$ref" = "#/definitions/StringList"
"definitions.ListAssociatedFleetsResult.properties.Names.description" = "The names of the fleets."
"definitions.ListAssociatedFleetsResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.ListAssociatedFleetsResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.ListAssociatedFleetsResult.type" = "object"
"definitions.ListAssociatedStacksRequest.properties.FleetName.$ref" = "#/definitions/String"
"definitions.ListAssociatedStacksRequest.properties.FleetName.description" = "The name of the fleet."
"definitions.ListAssociatedStacksRequest.properties.NextToken.$ref" = "#/definitions/String"
"definitions.ListAssociatedStacksRequest.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page."
"definitions.ListAssociatedStacksRequest.required.length" = 1
"definitions.ListAssociatedStacksRequest.required[0]" = "FleetName"
"definitions.ListAssociatedStacksRequest.type" = "object"
"definitions.ListAssociatedStacksResult.properties.Names.$ref" = "#/definitions/StringList"
"definitions.ListAssociatedStacksResult.properties.Names.description" = "The names of the stacks."
"definitions.ListAssociatedStacksResult.properties.NextToken.$ref" = "#/definitions/String"
"definitions.ListAssociatedStacksResult.properties.NextToken.description" = "The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null."
"definitions.ListAssociatedStacksResult.type" = "object"
"definitions.Long.type" = "integer"
"definitions.Metadata.items.properties.key.$ref" = "#/definitions/String"
"definitions.Metadata.items.properties.value.$ref" = "#/definitions/String"
"definitions.Metadata.items.type" = "object"
"definitions.Metadata.type" = "array"
"definitions.Name.pattern" = "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$"
"definitions.Name.type" = "string"
"definitions.OperationNotPermittedException.description" = "The attempted operation is not permitted."
"definitions.OperationNotPermittedException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.OperationNotPermittedException.type" = "object"
"definitions.OrganizationalUnitDistinguishedName.maxLength" = 2000.0
"definitions.OrganizationalUnitDistinguishedName.type" = "string"
"definitions.OrganizationalUnitDistinguishedNamesList.items.$ref" = "#/definitions/OrganizationalUnitDistinguishedName"
"definitions.OrganizationalUnitDistinguishedNamesList.type" = "array"
"definitions.PlatformType.enum.length" = 1
"definitions.PlatformType.enum[0]" = "WINDOWS"
"definitions.PlatformType.type" = "string"
"definitions.ResourceAlreadyExistsException.description" = "The specified resource already exists."
"definitions.ResourceAlreadyExistsException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.ResourceAlreadyExistsException.type" = "object"
"definitions.ResourceError.properties.ErrorCode.$ref" = "#/definitions/FleetErrorCode"
"definitions.ResourceError.properties.ErrorMessage.$ref" = "#/definitions/String"
"definitions.ResourceError.properties.ErrorTimestamp.$ref" = "#/definitions/Timestamp"
"definitions.ResourceError.type" = "object"
"definitions.ResourceErrors.items.$ref" = "#/definitions/ResourceError"
"definitions.ResourceErrors.type" = "array"
"definitions.ResourceIdentifier.description" = "The ARN of the resource."
"definitions.ResourceIdentifier.minLength" = 1.0
"definitions.ResourceIdentifier.type" = "string"
"definitions.ResourceInUseException.description" = "The specified resource is in use."
"definitions.ResourceInUseException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.ResourceInUseException.type" = "object"
"definitions.ResourceNotAvailableException.description" = "The specified resource exists and is not in use, but isn't available."
"definitions.ResourceNotAvailableException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.ResourceNotAvailableException.type" = "object"
"definitions.ResourceNotFoundException.description" = "The specified resource was not found."
"definitions.ResourceNotFoundException.properties.Message.$ref" = "#/definitions/ErrorMessage"
"definitions.ResourceNotFoundException.type" = "object"
"definitions.SecurityGroupIdList.description" = "The security group IDs."
"definitions.SecurityGroupIdList.items.$ref" = "#/definitions/String"
"definitions.SecurityGroupIdList.maxItems" = 5.0
"definitions.SecurityGroupIdList.type" = "array"
"definitions.ServiceAccountCredentials.description" = "Describes the credentials for the service account used by the streaming instance to connect to the directory."
"definitions.ServiceAccountCredentials.properties.AccountName.$ref" = "#/definitions/AccountName"
"definitions.ServiceAccountCredentials.properties.AccountName.description" = "The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified."
"definitions.ServiceAccountCredentials.properties.AccountPassword.$ref" = "#/definitions/AccountPassword"
"definitions.ServiceAccountCredentials.properties.AccountPassword.description" = "The password for the account."
"definitions.ServiceAccountCredentials.required.length" = 2
"definitions.ServiceAccountCredentials.required[0]" = "AccountName"
"definitions.ServiceAccountCredentials.required[1]" = "AccountPassword"
"definitions.ServiceAccountCredentials.type" = "object"
"definitions.Session.description" = "Describes a streaming session."
"definitions.Session.properties.AuthenticationType.$ref" = "#/definitions/AuthenticationType"
"definitions.Session.properties.AuthenticationType.description" = "The authentication method. The user is authenticated using a streaming URL (<code>API</code>) or SAML federation (<code>SAML</code>)."
"definitions.Session.properties.FleetName.$ref" = "#/definitions/String"
"definitions.Session.properties.FleetName.description" = "The name of the fleet for the streaming session."
"definitions.Session.properties.Id.$ref" = "#/definitions/String"
"definitions.Session.properties.Id.description" = "The ID of the streaming session."
"definitions.Session.properties.StackName.$ref" = "#/definitions/String"
"definitions.Session.properties.StackName.description" = "The name of the stack for the streaming session."
"definitions.Session.properties.State.$ref" = "#/definitions/SessionState"
"definitions.Session.properties.State.description" = "The current state of the streaming session."
"definitions.Session.properties.UserId.$ref" = "#/definitions/UserId"
"definitions.Session.properties.UserId.description" = "The identifier of the user for whom the session was created."
"definitions.Session.required.length" = 5
"definitions.Session.required[0]" = "Id"
"definitions.Session.required[1]" = "UserId"
"definitions.Session.required[2]" = "StackName"
"definitions.Session.required[3]" = "FleetName"
"definitions.Session.required[4]" = "State"
"definitions.Session.type" = "object"
"definitions.SessionList.description" = "List of sessions."
"definitions.SessionList.items.$ref" = "#/definitions/Session"
"definitions.SessionList.type" = "array"
"definitions.SessionState.description" = "Possible values for the state of a streaming session."
"definitions.SessionState.enum.length" = 3
"definitions.SessionState.enum[0]" = "ACTIVE"
"definitions.SessionState.enum[1]" = "PENDING"
"definitions.SessionState.enum[2]" = "EXPIRED"
"definitions.SessionState.type" = "string"
"definitions.Stack.description" = "Describes a stack."
"definitions.Stack.properties.Arn.$ref" = "#/definitions/Arn"
"definitions.Stack.properties.Arn.description" = "The ARN of the stack."
"definitions.Stack.properties.CreatedTime.$ref" = "#/definitions/Timestamp"
"definitions.Stack.properties.CreatedTime.description" = "The time the stack was created."
"definitions.Stack.properties.Description.$ref" = "#/definitions/String"
"definitions.Stack.properties.Description.description" = "The description displayed to end users."
"definitions.Stack.properties.DisplayName.$ref" = "#/definitions/String"
"definitions.Stack.properties.DisplayName.description" = "The stack name displayed to end users."
"definitions.Stack.properties.Name.$ref" = "#/definitions/String"
"definitions.Stack.properties.Name.description" = "The name of the stack."
"definitions.Stack.properties.StackErrors.$ref" = "#/definitions/StackErrors"
"definitions.Stack.properties.StackErrors.description" = "The errors for the stack."
"definitions.Stack.properties.StorageConnectors.$ref" = "#/definitions/StorageConnectorList"
"definitions.Stack.properties.StorageConnectors.description" = "The storage connectors to enable."
"definitions.Stack.required.length" = 1
"definitions.Stack.required[0]" = "Name"
"definitions.Stack.type" = "object"
"definitions.StackError.description" = "Describes a stack error."
"definitions.StackError.properties.ErrorCode.$ref" = "#/definitions/StackErrorCode"
"definitions.StackError.properties.ErrorCode.description" = "The error code."
"definitions.StackError.properties.ErrorMessage.$ref" = "#/definitions/String"
"definitions.StackError.properties.ErrorMessage.description" = "The error message."
"definitions.StackError.type" = "object"
"definitions.StackErrorCode.enum.length" = 2
"definitions.StackErrorCode.enum[0]" = "STORAGE_CONNECTOR_ERROR"
"definitions.StackErrorCode.enum[1]" = "INTERNAL_SERVICE_ERROR"
"definitions.StackErrorCode.type" = "string"
"definitions.StackErrors.description" = "The stack errors."
"definitions.StackErrors.items.$ref" = "#/definitions/StackError"
"definitions.StackErrors.type" = "array"
"definitions.StackList.description" = "The stacks."
"definitions.StackList.items.$ref" = "#/definitions/Stack"
"definitions.StackList.type" = "array"
"definitions.StartFleetRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.StartFleetRequest.properties.Name.description" = "The name of the fleet."
"definitions.StartFleetRequest.required.length" = 1
"definitions.StartFleetRequest.required[0]" = "Name"
"definitions.StartFleetRequest.type" = "object"
"definitions.StartFleetResult.type" = "object"
"definitions.StartImageBuilderRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.StartImageBuilderRequest.required.length" = 1
"definitions.StartImageBuilderRequest.required[0]" = "Name"
"definitions.StartImageBuilderRequest.type" = "object"
"definitions.StartImageBuilderResult.properties.ImageBuilder.$ref" = "#/definitions/ImageBuilder"
"definitions.StartImageBuilderResult.type" = "object"
"definitions.StopFleetRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.StopFleetRequest.properties.Name.description" = "The name of the fleet."
"definitions.StopFleetRequest.required.length" = 1
"definitions.StopFleetRequest.required[0]" = "Name"
"definitions.StopFleetRequest.type" = "object"
"definitions.StopFleetResult.type" = "object"
"definitions.StopImageBuilderRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.StopImageBuilderRequest.required.length" = 1
"definitions.StopImageBuilderRequest.required[0]" = "Name"
"definitions.StopImageBuilderRequest.type" = "object"
"definitions.StopImageBuilderResult.properties.ImageBuilder.$ref" = "#/definitions/ImageBuilder"
"definitions.StopImageBuilderResult.type" = "object"
"definitions.StorageConnector.description" = "Describes a storage connector."
"definitions.StorageConnector.properties.ConnectorType.$ref" = "#/definitions/StorageConnectorType"
"definitions.StorageConnector.properties.ConnectorType.description" = "The type of storage connector."
"definitions.StorageConnector.properties.ResourceIdentifier.$ref" = "#/definitions/ResourceIdentifier"
"definitions.StorageConnector.properties.ResourceIdentifier.description" = "The ARN of the storage connector."
"definitions.StorageConnector.required.length" = 1
"definitions.StorageConnector.required[0]" = "ConnectorType"
"definitions.StorageConnector.type" = "object"
"definitions.StorageConnectorList.description" = "The storage connectors."
"definitions.StorageConnectorList.items.$ref" = "#/definitions/StorageConnector"
"definitions.StorageConnectorList.type" = "array"
"definitions.StorageConnectorType.description" = "The type of storage connector."
"definitions.StorageConnectorType.enum.length" = 1
"definitions.StorageConnectorType.enum[0]" = "HOMEFOLDERS"
"definitions.StorageConnectorType.type" = "string"
"definitions.StreamingUrlUserId.maxLength" = 32.0
"definitions.StreamingUrlUserId.minLength" = 2.0
"definitions.StreamingUrlUserId.pattern" = "[\\w+=,.@-]*"
"definitions.StreamingUrlUserId.type" = "string"
"definitions.String.minLength" = 1.0
"definitions.String.type" = "string"
"definitions.StringList.items.$ref" = "#/definitions/String"
"definitions.StringList.type" = "array"
"definitions.SubnetIdList.description" = "The subnet IDs."
"definitions.SubnetIdList.items.$ref" = "#/definitions/String"
"definitions.SubnetIdList.type" = "array"
"definitions.Timestamp.format" = "date-time"
"definitions.Timestamp.type" = "string"
"definitions.UpdateDirectoryConfigRequest.properties.DirectoryName.$ref" = "#/definitions/DirectoryName"
"definitions.UpdateDirectoryConfigRequest.properties.DirectoryName.description" = "The name of the directory configuration."
"definitions.UpdateDirectoryConfigRequest.properties.OrganizationalUnitDistinguishedNames.$ref" = "#/definitions/OrganizationalUnitDistinguishedNamesList"
"definitions.UpdateDirectoryConfigRequest.properties.OrganizationalUnitDistinguishedNames.description" = "The distinguished names of the organizational units for computer accounts."
"definitions.UpdateDirectoryConfigRequest.properties.ServiceAccountCredentials.$ref" = "#/definitions/ServiceAccountCredentials"
"definitions.UpdateDirectoryConfigRequest.properties.ServiceAccountCredentials.description" = "The credentials for the service account used by the streaming instance to connect to the directory."
"definitions.UpdateDirectoryConfigRequest.required.length" = 1
"definitions.UpdateDirectoryConfigRequest.required[0]" = "DirectoryName"
"definitions.UpdateDirectoryConfigRequest.type" = "object"
"definitions.UpdateDirectoryConfigResult.properties.DirectoryConfig.$ref" = "#/definitions/DirectoryConfig"
"definitions.UpdateDirectoryConfigResult.properties.DirectoryConfig.description" = "Information about the directory configuration."
"definitions.UpdateDirectoryConfigResult.type" = "object"
"definitions.UpdateFleetRequest.properties.AttributesToDelete.$ref" = "#/definitions/FleetAttributes"
"definitions.UpdateFleetRequest.properties.AttributesToDelete.description" = "The fleet attributes to delete."
"definitions.UpdateFleetRequest.properties.ComputeCapacity.$ref" = "#/definitions/ComputeCapacity"
"definitions.UpdateFleetRequest.properties.ComputeCapacity.description" = "The desired capacity for the fleet."
"definitions.UpdateFleetRequest.properties.DeleteVpcConfig.$ref" = "#/definitions/Boolean"
"definitions.UpdateFleetRequest.properties.DeleteVpcConfig.description" = "Deletes the VPC association for the specified fleet."
"definitions.UpdateFleetRequest.properties.Description.$ref" = "#/definitions/Description"
"definitions.UpdateFleetRequest.properties.Description.description" = "The description displayed to end users."
"definitions.UpdateFleetRequest.properties.DisconnectTimeoutInSeconds.$ref" = "#/definitions/Integer"
"definitions.UpdateFleetRequest.properties.DisconnectTimeoutInSeconds.description" = "The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600."
"definitions.UpdateFleetRequest.properties.DisplayName.$ref" = "#/definitions/DisplayName"
"definitions.UpdateFleetRequest.properties.DisplayName.description" = "The fleet name displayed to end users."
"definitions.UpdateFleetRequest.properties.DomainJoinInfo.$ref" = "#/definitions/DomainJoinInfo"
"definitions.UpdateFleetRequest.properties.DomainJoinInfo.description" = "The information needed for streaming instances to join a domain."
"definitions.UpdateFleetRequest.properties.EnableDefaultInternetAccess.$ref" = "#/definitions/BooleanObject"
"definitions.UpdateFleetRequest.properties.EnableDefaultInternetAccess.description" = "Enables or disables default internet access for the fleet."
"definitions.UpdateFleetRequest.properties.ImageName.$ref" = "#/definitions/String"
"definitions.UpdateFleetRequest.properties.ImageName.description" = "The name of the image used by the fleet."
"definitions.UpdateFleetRequest.properties.InstanceType.$ref" = "#/definitions/String"
"definitions.UpdateFleetRequest.properties.InstanceType.description" = "<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>"
"definitions.UpdateFleetRequest.properties.MaxUserDurationInSeconds.$ref" = "#/definitions/Integer"
"definitions.UpdateFleetRequest.properties.MaxUserDurationInSeconds.description" = "The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600."
"definitions.UpdateFleetRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.UpdateFleetRequest.properties.Name.description" = "A unique name for the fleet."
"definitions.UpdateFleetRequest.properties.VpcConfig.$ref" = "#/definitions/VpcConfig"
"definitions.UpdateFleetRequest.properties.VpcConfig.description" = "The VPC configuration for the fleet."
"definitions.UpdateFleetRequest.required.length" = 1
"definitions.UpdateFleetRequest.required[0]" = "Name"
"definitions.UpdateFleetRequest.type" = "object"
"definitions.UpdateFleetResult.properties.Fleet.$ref" = "#/definitions/Fleet"
"definitions.UpdateFleetResult.properties.Fleet.description" = "Information about the fleet."
"definitions.UpdateFleetResult.type" = "object"
"definitions.UpdateStackRequest.properties.DeleteStorageConnectors.$ref" = "#/definitions/Boolean"
"definitions.UpdateStackRequest.properties.DeleteStorageConnectors.description" = "Deletes the storage connectors currently enabled for the stack."
"definitions.UpdateStackRequest.properties.Description.$ref" = "#/definitions/Description"
"definitions.UpdateStackRequest.properties.Description.description" = "The description displayed to end users."
"definitions.UpdateStackRequest.properties.DisplayName.$ref" = "#/definitions/DisplayName"
"definitions.UpdateStackRequest.properties.DisplayName.description" = "The stack name displayed to end users."
"definitions.UpdateStackRequest.properties.Name.$ref" = "#/definitions/String"
"definitions.UpdateStackRequest.properties.Name.description" = "The name of the stack."
"definitions.UpdateStackRequest.properties.StorageConnectors.$ref" = "#/definitions/StorageConnectorList"
"definitions.UpdateStackRequest.properties.StorageConnectors.description" = "The storage connectors to enable."
"definitions.UpdateStackRequest.required.length" = 1
"definitions.UpdateStackRequest.required[0]" = "Name"
"definitions.UpdateStackRequest.type" = "object"
"definitions.UpdateStackResult.properties.Stack.$ref" = "#/definitions/Stack"
"definitions.UpdateStackResult.properties.Stack.description" = "Information about the stack."
"definitions.UpdateStackResult.type" = "object"
"definitions.UserId.maxLength" = 32.0
"definitions.UserId.minLength" = 2.0
"definitions.UserId.type" = "string"
"definitions.VisibilityType.enum.length" = 2
"definitions.VisibilityType.enum[0]" = "PUBLIC"
"definitions.VisibilityType.enum[1]" = "PRIVATE"
"definitions.VisibilityType.type" = "string"
"definitions.VpcConfig.description" = "Describes VPC configuration information."
"definitions.VpcConfig.properties.SecurityGroupIds.$ref" = "#/definitions/SecurityGroupIdList"
"definitions.VpcConfig.properties.SecurityGroupIds.description" = "The security groups for the fleet."
"definitions.VpcConfig.properties.SubnetIds.$ref" = "#/definitions/SubnetIdList"
"definitions.VpcConfig.properties.SubnetIds.description" = "The subnets to which a network interface is established from the fleet instance."
"definitions.VpcConfig.type" = "object"
"externalDocs.description" = "Amazon Web Services documentation"
"externalDocs.url" = "https://aws.amazon.com/appstream2/"
host = "appstream2.amazonaws.com"
"info.contact.email" = "mike.ralphson@gmail.com"
"info.contact.name" = "Mike Ralphson"
"info.contact.url" = "https://github.com/mermade/aws2openapi"
"info.description" = "<fullname>Amazon AppStream 2.0</fullname> <p>You can use Amazon AppStream 2.0 to stream desktop applications to any device running a web browser, without rewriting them.</p>"
"info.license.name" = "Apache 2.0 License"
"info.license.url" = "http://www.apache.org/licenses/"
"info.termsOfService" = "https://aws.amazon.com/service-terms/"
"info.title" = "Amazon AppStream"
"info.version" = "2016-12-01"
"info.x-apiClientRegistration.url" = "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "cloud"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
"info.x-origin.length" = 1
"info.x-origin[0].contentType" = "application/json"
"info.x-origin[0].converter.url" = "https://github.com/mermade/aws2openapi"
"info.x-origin[0].converter.version" = "1.0.0"
"info.x-origin[0].url" = "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json"
"info.x-origin[0].x-apisguru-direct" = true
"info.x-preferred" = true
"info.x-providerName" = "amazonaws.com"
"info.x-release" = "v4"
"info.x-serviceName" = "appstream2"
"parameters.Action.in" = "header"
"parameters.Action.name" = "Action"
"parameters.Action.required" = true
"parameters.Action.type" = "string"
"parameters.Version.in" = "header"
"parameters.Version.name" = "Version"
"parameters.Version.required" = true
"parameters.Version.type" = "string"
"parameters.X-Amz-Algorithm.in" = "header"
"parameters.X-Amz-Algorithm.name" = "X-Amz-Algorithm"
"parameters.X-Amz-Algorithm.required" = false
"parameters.X-Amz-Algorithm.type" = "string"
"parameters.X-Amz-Content-Sha256.in" = "header"
"parameters.X-Amz-Content-Sha256.name" = "X-Amz-Content-Sha256"
"parameters.X-Amz-Content-Sha256.required" = false
"parameters.X-Amz-Content-Sha256.type" = "string"
"parameters.X-Amz-Credential.in" = "header"
"parameters.X-Amz-Credential.name" = "X-Amz-Credential"
"parameters.X-Amz-Credential.required" = false
"parameters.X-Amz-Credential.type" = "string"
"parameters.X-Amz-Date.in" = "header"
"parameters.X-Amz-Date.name" = "X-Amz-Date"
"parameters.X-Amz-Date.required" = false
"parameters.X-Amz-Date.type" = "string"
"parameters.X-Amz-Security-Token.in" = "header"
"parameters.X-Amz-Security-Token.name" = "X-Amz-Security-Token"
"parameters.X-Amz-Security-Token.required" = false
"parameters.X-Amz-Security-Token.type" = "string"
"parameters.X-Amz-Signature.in" = "header"
"parameters.X-Amz-Signature.name" = "X-Amz-Signature"
"parameters.X-Amz-Signature.required" = false
"parameters.X-Amz-Signature.type" = "string"
"parameters.X-Amz-SignedHeaders.in" = "header"
"parameters.X-Amz-SignedHeaders.name" = "X-Amz-SignedHeaders"
"parameters.X-Amz-SignedHeaders.required" = false
"parameters.X-Amz-SignedHeaders.type" = "string"
"paths./#CreateDirectoryConfig.parameters.length" = 9
"paths./#CreateDirectoryConfig.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateDirectoryConfig.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateDirectoryConfig.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateDirectoryConfig.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateDirectoryConfig.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateDirectoryConfig.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateDirectoryConfig.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateDirectoryConfig.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateDirectoryConfig.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateDirectoryConfig.post.description" = "Creates a directory configuration."
"paths./#CreateDirectoryConfig.post.operationId" = "CreateDirectoryConfig"
"paths./#CreateDirectoryConfig.post.parameters.length" = 1
"paths./#CreateDirectoryConfig.post.parameters[0].in" = "body"
"paths./#CreateDirectoryConfig.post.parameters[0].name" = "body"
"paths./#CreateDirectoryConfig.post.parameters[0].required" = true
"paths./#CreateDirectoryConfig.post.parameters[0].schema.$ref" = "#/definitions/CreateDirectoryConfigRequest"
"paths./#CreateDirectoryConfig.post.responses.200.description" = "Success"
"paths./#CreateDirectoryConfig.post.responses.200.schema.$ref" = "#/definitions/CreateDirectoryConfigResult"
"paths./#CreateDirectoryConfig.post.responses.480.description" = "ResourceAlreadyExistsException"
"paths./#CreateDirectoryConfig.post.responses.480.schema.$ref" = "#/definitions/ResourceAlreadyExistsException"
"paths./#CreateDirectoryConfig.post.responses.481.description" = "LimitExceededException"
"paths./#CreateDirectoryConfig.post.responses.481.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#CreateFleet.parameters.length" = 9
"paths./#CreateFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateFleet.post.description" = "Creates a fleet."
"paths./#CreateFleet.post.operationId" = "CreateFleet"
"paths./#CreateFleet.post.parameters.length" = 1
"paths./#CreateFleet.post.parameters[0].in" = "body"
"paths./#CreateFleet.post.parameters[0].name" = "body"
"paths./#CreateFleet.post.parameters[0].required" = true
"paths./#CreateFleet.post.parameters[0].schema.$ref" = "#/definitions/CreateFleetRequest"
"paths./#CreateFleet.post.responses.200.description" = "Success"
"paths./#CreateFleet.post.responses.200.schema.$ref" = "#/definitions/CreateFleetResult"
"paths./#CreateFleet.post.responses.480.description" = "ResourceAlreadyExistsException"
"paths./#CreateFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceAlreadyExistsException"
"paths./#CreateFleet.post.responses.481.description" = "ResourceNotAvailableException"
"paths./#CreateFleet.post.responses.481.schema.$ref" = "#/definitions/ResourceNotAvailableException"
"paths./#CreateFleet.post.responses.482.description" = "ResourceNotFoundException"
"paths./#CreateFleet.post.responses.482.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#CreateFleet.post.responses.483.description" = "LimitExceededException"
"paths./#CreateFleet.post.responses.483.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#CreateFleet.post.responses.484.description" = "InvalidRoleException"
"paths./#CreateFleet.post.responses.484.schema.$ref" = "#/definitions/InvalidRoleException"
"paths./#CreateFleet.post.responses.485.description" = "ConcurrentModificationException"
"paths./#CreateFleet.post.responses.485.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#CreateFleet.post.responses.486.description" = "InvalidParameterCombinationException"
"paths./#CreateFleet.post.responses.486.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#CreateFleet.post.responses.487.description" = "IncompatibleImageException"
"paths./#CreateFleet.post.responses.487.schema.$ref" = "#/definitions/IncompatibleImageException"
"paths./#CreateImageBuilder.parameters.length" = 9
"paths./#CreateImageBuilder.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateImageBuilder.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateImageBuilder.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateImageBuilder.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateImageBuilder.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateImageBuilder.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateImageBuilder.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateImageBuilder.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateImageBuilder.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateImageBuilder.post.description" = ""
"paths./#CreateImageBuilder.post.operationId" = "CreateImageBuilder"
"paths./#CreateImageBuilder.post.parameters.length" = 1
"paths./#CreateImageBuilder.post.parameters[0].in" = "body"
"paths./#CreateImageBuilder.post.parameters[0].name" = "body"
"paths./#CreateImageBuilder.post.parameters[0].required" = true
"paths./#CreateImageBuilder.post.parameters[0].schema.$ref" = "#/definitions/CreateImageBuilderRequest"
"paths./#CreateImageBuilder.post.responses.200.description" = "Success"
"paths./#CreateImageBuilder.post.responses.200.schema.$ref" = "#/definitions/CreateImageBuilderResult"
"paths./#CreateImageBuilder.post.responses.480.description" = "LimitExceededException"
"paths./#CreateImageBuilder.post.responses.480.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#CreateImageBuilder.post.responses.481.description" = "ResourceAlreadyExistsException"
"paths./#CreateImageBuilder.post.responses.481.schema.$ref" = "#/definitions/ResourceAlreadyExistsException"
"paths./#CreateImageBuilder.post.responses.482.description" = "ResourceNotAvailableException"
"paths./#CreateImageBuilder.post.responses.482.schema.$ref" = "#/definitions/ResourceNotAvailableException"
"paths./#CreateImageBuilder.post.responses.483.description" = "ResourceNotFoundException"
"paths./#CreateImageBuilder.post.responses.483.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#CreateImageBuilder.post.responses.484.description" = "InvalidRoleException"
"paths./#CreateImageBuilder.post.responses.484.schema.$ref" = "#/definitions/InvalidRoleException"
"paths./#CreateImageBuilder.post.responses.485.description" = "ConcurrentModificationException"
"paths./#CreateImageBuilder.post.responses.485.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#CreateImageBuilder.post.responses.486.description" = "InvalidParameterCombinationException"
"paths./#CreateImageBuilder.post.responses.486.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#CreateImageBuilder.post.responses.487.description" = "IncompatibleImageException"
"paths./#CreateImageBuilder.post.responses.487.schema.$ref" = "#/definitions/IncompatibleImageException"
"paths./#CreateImageBuilderStreamingURL.parameters.length" = 9
"paths./#CreateImageBuilderStreamingURL.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateImageBuilderStreamingURL.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateImageBuilderStreamingURL.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateImageBuilderStreamingURL.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateImageBuilderStreamingURL.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateImageBuilderStreamingURL.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateImageBuilderStreamingURL.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateImageBuilderStreamingURL.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateImageBuilderStreamingURL.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateImageBuilderStreamingURL.post.description" = ""
"paths./#CreateImageBuilderStreamingURL.post.operationId" = "CreateImageBuilderStreamingURL"
"paths./#CreateImageBuilderStreamingURL.post.parameters.length" = 1
"paths./#CreateImageBuilderStreamingURL.post.parameters[0].in" = "body"
"paths./#CreateImageBuilderStreamingURL.post.parameters[0].name" = "body"
"paths./#CreateImageBuilderStreamingURL.post.parameters[0].required" = true
"paths./#CreateImageBuilderStreamingURL.post.parameters[0].schema.$ref" = "#/definitions/CreateImageBuilderStreamingURLRequest"
"paths./#CreateImageBuilderStreamingURL.post.responses.200.description" = "Success"
"paths./#CreateImageBuilderStreamingURL.post.responses.200.schema.$ref" = "#/definitions/CreateImageBuilderStreamingURLResult"
"paths./#CreateImageBuilderStreamingURL.post.responses.480.description" = "OperationNotPermittedException"
"paths./#CreateImageBuilderStreamingURL.post.responses.480.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#CreateImageBuilderStreamingURL.post.responses.481.description" = "ResourceNotFoundException"
"paths./#CreateImageBuilderStreamingURL.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#CreateStack.parameters.length" = 9
"paths./#CreateStack.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateStack.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateStack.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateStack.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateStack.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateStack.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateStack.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateStack.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateStack.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateStack.post.description" = "Creates a stack."
"paths./#CreateStack.post.operationId" = "CreateStack"
"paths./#CreateStack.post.parameters.length" = 1
"paths./#CreateStack.post.parameters[0].in" = "body"
"paths./#CreateStack.post.parameters[0].name" = "body"
"paths./#CreateStack.post.parameters[0].required" = true
"paths./#CreateStack.post.parameters[0].schema.$ref" = "#/definitions/CreateStackRequest"
"paths./#CreateStack.post.responses.200.description" = "Success"
"paths./#CreateStack.post.responses.200.schema.$ref" = "#/definitions/CreateStackResult"
"paths./#CreateStack.post.responses.480.description" = "LimitExceededException"
"paths./#CreateStack.post.responses.480.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#CreateStack.post.responses.481.description" = "ResourceAlreadyExistsException"
"paths./#CreateStack.post.responses.481.schema.$ref" = "#/definitions/ResourceAlreadyExistsException"
"paths./#CreateStack.post.responses.482.description" = "ConcurrentModificationException"
"paths./#CreateStack.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#CreateStack.post.responses.483.description" = "InvalidRoleException"
"paths./#CreateStack.post.responses.483.schema.$ref" = "#/definitions/InvalidRoleException"
"paths./#CreateStack.post.responses.484.description" = "ResourceNotFoundException"
"paths./#CreateStack.post.responses.484.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#CreateStack.post.responses.485.description" = "InvalidParameterCombinationException"
"paths./#CreateStack.post.responses.485.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#CreateStreamingURL.parameters.length" = 9
"paths./#CreateStreamingURL.parameters[0].$ref" = "#/parameters/Action"
"paths./#CreateStreamingURL.parameters[1].$ref" = "#/parameters/Version"
"paths./#CreateStreamingURL.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#CreateStreamingURL.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#CreateStreamingURL.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#CreateStreamingURL.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#CreateStreamingURL.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#CreateStreamingURL.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#CreateStreamingURL.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#CreateStreamingURL.post.description" = "<p>Creates a URL to start a streaming session for the specified user.</p> <p>By default, the URL is valid only for one minute from the time that it is generated.</p>"
"paths./#CreateStreamingURL.post.operationId" = "CreateStreamingURL"
"paths./#CreateStreamingURL.post.parameters.length" = 1
"paths./#CreateStreamingURL.post.parameters[0].in" = "body"
"paths./#CreateStreamingURL.post.parameters[0].name" = "body"
"paths./#CreateStreamingURL.post.parameters[0].required" = true
"paths./#CreateStreamingURL.post.parameters[0].schema.$ref" = "#/definitions/CreateStreamingURLRequest"
"paths./#CreateStreamingURL.post.responses.200.description" = "Success"
"paths./#CreateStreamingURL.post.responses.200.schema.$ref" = "#/definitions/CreateStreamingURLResult"
"paths./#CreateStreamingURL.post.responses.480.description" = "ResourceNotFoundException"
"paths./#CreateStreamingURL.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#CreateStreamingURL.post.responses.481.description" = "ResourceNotAvailableException"
"paths./#CreateStreamingURL.post.responses.481.schema.$ref" = "#/definitions/ResourceNotAvailableException"
"paths./#CreateStreamingURL.post.responses.482.description" = "OperationNotPermittedException"
"paths./#CreateStreamingURL.post.responses.482.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#CreateStreamingURL.post.responses.483.description" = "InvalidParameterCombinationException"
"paths./#CreateStreamingURL.post.responses.483.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#DeleteDirectoryConfig.parameters.length" = 9
"paths./#DeleteDirectoryConfig.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteDirectoryConfig.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteDirectoryConfig.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteDirectoryConfig.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteDirectoryConfig.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteDirectoryConfig.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteDirectoryConfig.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteDirectoryConfig.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteDirectoryConfig.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteDirectoryConfig.post.description" = "Deletes the specified directory configuration."
"paths./#DeleteDirectoryConfig.post.operationId" = "DeleteDirectoryConfig"
"paths./#DeleteDirectoryConfig.post.parameters.length" = 1
"paths./#DeleteDirectoryConfig.post.parameters[0].in" = "body"
"paths./#DeleteDirectoryConfig.post.parameters[0].name" = "body"
"paths./#DeleteDirectoryConfig.post.parameters[0].required" = true
"paths./#DeleteDirectoryConfig.post.parameters[0].schema.$ref" = "#/definitions/DeleteDirectoryConfigRequest"
"paths./#DeleteDirectoryConfig.post.responses.200.description" = "Success"
"paths./#DeleteDirectoryConfig.post.responses.200.schema.$ref" = "#/definitions/DeleteDirectoryConfigResult"
"paths./#DeleteDirectoryConfig.post.responses.480.description" = "ResourceInUseException"
"paths./#DeleteDirectoryConfig.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#DeleteDirectoryConfig.post.responses.481.description" = "ResourceNotFoundException"
"paths./#DeleteDirectoryConfig.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DeleteFleet.parameters.length" = 9
"paths./#DeleteFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteFleet.post.description" = "Deletes the specified fleet."
"paths./#DeleteFleet.post.operationId" = "DeleteFleet"
"paths./#DeleteFleet.post.parameters.length" = 1
"paths./#DeleteFleet.post.parameters[0].in" = "body"
"paths./#DeleteFleet.post.parameters[0].name" = "body"
"paths./#DeleteFleet.post.parameters[0].required" = true
"paths./#DeleteFleet.post.parameters[0].schema.$ref" = "#/definitions/DeleteFleetRequest"
"paths./#DeleteFleet.post.responses.200.description" = "Success"
"paths./#DeleteFleet.post.responses.200.schema.$ref" = "#/definitions/DeleteFleetResult"
"paths./#DeleteFleet.post.responses.480.description" = "ResourceInUseException"
"paths./#DeleteFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#DeleteFleet.post.responses.481.description" = "ResourceNotFoundException"
"paths./#DeleteFleet.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DeleteFleet.post.responses.482.description" = "ConcurrentModificationException"
"paths./#DeleteFleet.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#DeleteImage.parameters.length" = 9
"paths./#DeleteImage.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteImage.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteImage.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteImage.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteImage.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteImage.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteImage.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteImage.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteImage.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteImage.post.description" = ""
"paths./#DeleteImage.post.operationId" = "DeleteImage"
"paths./#DeleteImage.post.parameters.length" = 1
"paths./#DeleteImage.post.parameters[0].in" = "body"
"paths./#DeleteImage.post.parameters[0].name" = "body"
"paths./#DeleteImage.post.parameters[0].required" = true
"paths./#DeleteImage.post.parameters[0].schema.$ref" = "#/definitions/DeleteImageRequest"
"paths./#DeleteImage.post.responses.200.description" = "Success"
"paths./#DeleteImage.post.responses.200.schema.$ref" = "#/definitions/DeleteImageResult"
"paths./#DeleteImage.post.responses.480.description" = "ResourceInUseException"
"paths./#DeleteImage.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#DeleteImage.post.responses.481.description" = "ResourceNotFoundException"
"paths./#DeleteImage.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DeleteImage.post.responses.482.description" = "OperationNotPermittedException"
"paths./#DeleteImage.post.responses.482.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#DeleteImage.post.responses.483.description" = "ConcurrentModificationException"
"paths./#DeleteImage.post.responses.483.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#DeleteImageBuilder.parameters.length" = 9
"paths./#DeleteImageBuilder.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteImageBuilder.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteImageBuilder.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteImageBuilder.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteImageBuilder.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteImageBuilder.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteImageBuilder.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteImageBuilder.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteImageBuilder.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteImageBuilder.post.description" = ""
"paths./#DeleteImageBuilder.post.operationId" = "DeleteImageBuilder"
"paths./#DeleteImageBuilder.post.parameters.length" = 1
"paths./#DeleteImageBuilder.post.parameters[0].in" = "body"
"paths./#DeleteImageBuilder.post.parameters[0].name" = "body"
"paths./#DeleteImageBuilder.post.parameters[0].required" = true
"paths./#DeleteImageBuilder.post.parameters[0].schema.$ref" = "#/definitions/DeleteImageBuilderRequest"
"paths./#DeleteImageBuilder.post.responses.200.description" = "Success"
"paths./#DeleteImageBuilder.post.responses.200.schema.$ref" = "#/definitions/DeleteImageBuilderResult"
"paths./#DeleteImageBuilder.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DeleteImageBuilder.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DeleteImageBuilder.post.responses.481.description" = "OperationNotPermittedException"
"paths./#DeleteImageBuilder.post.responses.481.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#DeleteImageBuilder.post.responses.482.description" = "ConcurrentModificationException"
"paths./#DeleteImageBuilder.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#DeleteStack.parameters.length" = 9
"paths./#DeleteStack.parameters[0].$ref" = "#/parameters/Action"
"paths./#DeleteStack.parameters[1].$ref" = "#/parameters/Version"
"paths./#DeleteStack.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DeleteStack.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DeleteStack.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DeleteStack.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DeleteStack.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DeleteStack.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DeleteStack.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DeleteStack.post.description" = "Deletes the specified stack. After this operation completes, the environment can no longer be activated and any reservations made for the stack are released."
"paths./#DeleteStack.post.operationId" = "DeleteStack"
"paths./#DeleteStack.post.parameters.length" = 1
"paths./#DeleteStack.post.parameters[0].in" = "body"
"paths./#DeleteStack.post.parameters[0].name" = "body"
"paths./#DeleteStack.post.parameters[0].required" = true
"paths./#DeleteStack.post.parameters[0].schema.$ref" = "#/definitions/DeleteStackRequest"
"paths./#DeleteStack.post.responses.200.description" = "Success"
"paths./#DeleteStack.post.responses.200.schema.$ref" = "#/definitions/DeleteStackResult"
"paths./#DeleteStack.post.responses.480.description" = "ResourceInUseException"
"paths./#DeleteStack.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#DeleteStack.post.responses.481.description" = "ResourceNotFoundException"
"paths./#DeleteStack.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DeleteStack.post.responses.482.description" = "ConcurrentModificationException"
"paths./#DeleteStack.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#DescribeDirectoryConfigs.parameters.length" = 9
"paths./#DescribeDirectoryConfigs.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeDirectoryConfigs.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeDirectoryConfigs.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeDirectoryConfigs.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeDirectoryConfigs.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeDirectoryConfigs.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeDirectoryConfigs.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeDirectoryConfigs.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeDirectoryConfigs.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeDirectoryConfigs.post.description" = "Describes the specified directory configurations."
"paths./#DescribeDirectoryConfigs.post.operationId" = "DescribeDirectoryConfigs"
"paths./#DescribeDirectoryConfigs.post.parameters.length" = 1
"paths./#DescribeDirectoryConfigs.post.parameters[0].in" = "body"
"paths./#DescribeDirectoryConfigs.post.parameters[0].name" = "body"
"paths./#DescribeDirectoryConfigs.post.parameters[0].required" = true
"paths./#DescribeDirectoryConfigs.post.parameters[0].schema.$ref" = "#/definitions/DescribeDirectoryConfigsRequest"
"paths./#DescribeDirectoryConfigs.post.responses.200.description" = "Success"
"paths./#DescribeDirectoryConfigs.post.responses.200.schema.$ref" = "#/definitions/DescribeDirectoryConfigsResult"
"paths./#DescribeDirectoryConfigs.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DescribeDirectoryConfigs.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DescribeFleets.parameters.length" = 9
"paths./#DescribeFleets.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeFleets.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeFleets.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeFleets.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeFleets.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeFleets.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeFleets.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeFleets.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeFleets.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeFleets.post.description" = "Describes the specified fleets or all fleets in the account."
"paths./#DescribeFleets.post.operationId" = "DescribeFleets"
"paths./#DescribeFleets.post.parameters.length" = 1
"paths./#DescribeFleets.post.parameters[0].in" = "body"
"paths./#DescribeFleets.post.parameters[0].name" = "body"
"paths./#DescribeFleets.post.parameters[0].required" = true
"paths./#DescribeFleets.post.parameters[0].schema.$ref" = "#/definitions/DescribeFleetsRequest"
"paths./#DescribeFleets.post.responses.200.description" = "Success"
"paths./#DescribeFleets.post.responses.200.schema.$ref" = "#/definitions/DescribeFleetsResult"
"paths./#DescribeFleets.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DescribeFleets.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DescribeFleets.post.x-waiters.length" = 2
"paths./#DescribeFleets.post.x-waiters[0].acceptors.length" = 3
"paths./#DescribeFleets.post.x-waiters[0].acceptors[0].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[0].expected" = "ACTIVE"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[0].matcher" = "pathAll"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[0].state" = "success"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[1].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[1].expected" = "PENDING_DEACTIVATE"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[1].matcher" = "pathAny"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[1].state" = "failure"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[2].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[2].expected" = "INACTIVE"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[2].matcher" = "pathAny"
"paths./#DescribeFleets.post.x-waiters[0].acceptors[2].state" = "failure"
"paths./#DescribeFleets.post.x-waiters[0].delay" = 30.0
"paths./#DescribeFleets.post.x-waiters[0].maxAttempts" = 40.0
"paths./#DescribeFleets.post.x-waiters[0].operation" = "DescribeFleets"
"paths./#DescribeFleets.post.x-waiters[1].acceptors.length" = 3
"paths./#DescribeFleets.post.x-waiters[1].acceptors[0].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[0].expected" = "INACTIVE"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[0].matcher" = "pathAll"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[0].state" = "success"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[1].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[1].expected" = "PENDING_ACTIVATE"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[1].matcher" = "pathAny"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[1].state" = "failure"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[2].argument" = "Fleets[].State"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[2].expected" = "ACTIVE"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[2].matcher" = "pathAny"
"paths./#DescribeFleets.post.x-waiters[1].acceptors[2].state" = "failure"
"paths./#DescribeFleets.post.x-waiters[1].delay" = 30.0
"paths./#DescribeFleets.post.x-waiters[1].maxAttempts" = 40.0
"paths./#DescribeFleets.post.x-waiters[1].operation" = "DescribeFleets"
"paths./#DescribeImageBuilders.parameters.length" = 9
"paths./#DescribeImageBuilders.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeImageBuilders.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeImageBuilders.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeImageBuilders.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeImageBuilders.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeImageBuilders.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeImageBuilders.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeImageBuilders.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeImageBuilders.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeImageBuilders.post.description" = ""
"paths./#DescribeImageBuilders.post.operationId" = "DescribeImageBuilders"
"paths./#DescribeImageBuilders.post.parameters.length" = 1
"paths./#DescribeImageBuilders.post.parameters[0].in" = "body"
"paths./#DescribeImageBuilders.post.parameters[0].name" = "body"
"paths./#DescribeImageBuilders.post.parameters[0].required" = true
"paths./#DescribeImageBuilders.post.parameters[0].schema.$ref" = "#/definitions/DescribeImageBuildersRequest"
"paths./#DescribeImageBuilders.post.responses.200.description" = "Success"
"paths./#DescribeImageBuilders.post.responses.200.schema.$ref" = "#/definitions/DescribeImageBuildersResult"
"paths./#DescribeImageBuilders.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DescribeImageBuilders.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DescribeImages.parameters.length" = 9
"paths./#DescribeImages.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeImages.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeImages.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeImages.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeImages.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeImages.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeImages.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeImages.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeImages.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeImages.post.description" = "Describes the specified images or all images in the account."
"paths./#DescribeImages.post.operationId" = "DescribeImages"
"paths./#DescribeImages.post.parameters.length" = 1
"paths./#DescribeImages.post.parameters[0].in" = "body"
"paths./#DescribeImages.post.parameters[0].name" = "body"
"paths./#DescribeImages.post.parameters[0].required" = true
"paths./#DescribeImages.post.parameters[0].schema.$ref" = "#/definitions/DescribeImagesRequest"
"paths./#DescribeImages.post.responses.200.description" = "Success"
"paths./#DescribeImages.post.responses.200.schema.$ref" = "#/definitions/DescribeImagesResult"
"paths./#DescribeImages.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DescribeImages.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DescribeSessions.parameters.length" = 9
"paths./#DescribeSessions.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeSessions.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeSessions.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeSessions.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeSessions.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeSessions.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeSessions.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeSessions.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeSessions.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeSessions.post.description" = "Describes the streaming sessions for the specified stack and fleet. If a user ID is provided, only the streaming sessions for only that user are returned. If an authentication type is not provided, the default is to authenticate users using a streaming URL."
"paths./#DescribeSessions.post.operationId" = "DescribeSessions"
"paths./#DescribeSessions.post.parameters.length" = 1
"paths./#DescribeSessions.post.parameters[0].in" = "body"
"paths./#DescribeSessions.post.parameters[0].name" = "body"
"paths./#DescribeSessions.post.parameters[0].required" = true
"paths./#DescribeSessions.post.parameters[0].schema.$ref" = "#/definitions/DescribeSessionsRequest"
"paths./#DescribeSessions.post.responses.200.description" = "Success"
"paths./#DescribeSessions.post.responses.200.schema.$ref" = "#/definitions/DescribeSessionsResult"
"paths./#DescribeSessions.post.responses.480.description" = "InvalidParameterCombinationException"
"paths./#DescribeSessions.post.responses.480.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#DescribeStacks.parameters.length" = 9
"paths./#DescribeStacks.parameters[0].$ref" = "#/parameters/Action"
"paths./#DescribeStacks.parameters[1].$ref" = "#/parameters/Version"
"paths./#DescribeStacks.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DescribeStacks.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DescribeStacks.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DescribeStacks.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DescribeStacks.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DescribeStacks.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DescribeStacks.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DescribeStacks.post.description" = "Describes the specified stacks or all stacks in the account."
"paths./#DescribeStacks.post.operationId" = "DescribeStacks"
"paths./#DescribeStacks.post.parameters.length" = 1
"paths./#DescribeStacks.post.parameters[0].in" = "body"
"paths./#DescribeStacks.post.parameters[0].name" = "body"
"paths./#DescribeStacks.post.parameters[0].required" = true
"paths./#DescribeStacks.post.parameters[0].schema.$ref" = "#/definitions/DescribeStacksRequest"
"paths./#DescribeStacks.post.responses.200.description" = "Success"
"paths./#DescribeStacks.post.responses.200.schema.$ref" = "#/definitions/DescribeStacksResult"
"paths./#DescribeStacks.post.responses.480.description" = "ResourceNotFoundException"
"paths./#DescribeStacks.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DisassociateFleet.parameters.length" = 9
"paths./#DisassociateFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#DisassociateFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#DisassociateFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#DisassociateFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#DisassociateFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#DisassociateFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#DisassociateFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#DisassociateFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#DisassociateFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#DisassociateFleet.post.description" = "Disassociates the specified fleet from the specified stack."
"paths./#DisassociateFleet.post.operationId" = "DisassociateFleet"
"paths./#DisassociateFleet.post.parameters.length" = 1
"paths./#DisassociateFleet.post.parameters[0].in" = "body"
"paths./#DisassociateFleet.post.parameters[0].name" = "body"
"paths./#DisassociateFleet.post.parameters[0].required" = true
"paths./#DisassociateFleet.post.parameters[0].schema.$ref" = "#/definitions/DisassociateFleetRequest"
"paths./#DisassociateFleet.post.responses.200.description" = "Success"
"paths./#DisassociateFleet.post.responses.200.schema.$ref" = "#/definitions/DisassociateFleetResult"
"paths./#DisassociateFleet.post.responses.480.description" = "ResourceInUseException"
"paths./#DisassociateFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#DisassociateFleet.post.responses.481.description" = "ResourceNotFoundException"
"paths./#DisassociateFleet.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#DisassociateFleet.post.responses.482.description" = "ConcurrentModificationException"
"paths./#DisassociateFleet.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#ExpireSession.parameters.length" = 9
"paths./#ExpireSession.parameters[0].$ref" = "#/parameters/Action"
"paths./#ExpireSession.parameters[1].$ref" = "#/parameters/Version"
"paths./#ExpireSession.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#ExpireSession.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#ExpireSession.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#ExpireSession.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#ExpireSession.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#ExpireSession.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#ExpireSession.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#ExpireSession.post.description" = "Stops the specified streaming session."
"paths./#ExpireSession.post.operationId" = "ExpireSession"
"paths./#ExpireSession.post.parameters.length" = 1
"paths./#ExpireSession.post.parameters[0].in" = "body"
"paths./#ExpireSession.post.parameters[0].name" = "body"
"paths./#ExpireSession.post.parameters[0].required" = true
"paths./#ExpireSession.post.parameters[0].schema.$ref" = "#/definitions/ExpireSessionRequest"
"paths./#ExpireSession.post.responses.200.description" = "Success"
"paths./#ExpireSession.post.responses.200.schema.$ref" = "#/definitions/ExpireSessionResult"
"paths./#ListAssociatedFleets.parameters.length" = 9
"paths./#ListAssociatedFleets.parameters[0].$ref" = "#/parameters/Action"
"paths./#ListAssociatedFleets.parameters[1].$ref" = "#/parameters/Version"
"paths./#ListAssociatedFleets.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#ListAssociatedFleets.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#ListAssociatedFleets.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#ListAssociatedFleets.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#ListAssociatedFleets.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#ListAssociatedFleets.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#ListAssociatedFleets.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#ListAssociatedFleets.post.description" = "Lists the fleets associated with the specified stack."
"paths./#ListAssociatedFleets.post.operationId" = "ListAssociatedFleets"
"paths./#ListAssociatedFleets.post.parameters.length" = 1
"paths./#ListAssociatedFleets.post.parameters[0].in" = "body"
"paths./#ListAssociatedFleets.post.parameters[0].name" = "body"
"paths./#ListAssociatedFleets.post.parameters[0].required" = true
"paths./#ListAssociatedFleets.post.parameters[0].schema.$ref" = "#/definitions/ListAssociatedFleetsRequest"
"paths./#ListAssociatedFleets.post.responses.200.description" = "Success"
"paths./#ListAssociatedFleets.post.responses.200.schema.$ref" = "#/definitions/ListAssociatedFleetsResult"
"paths./#ListAssociatedStacks.parameters.length" = 9
"paths./#ListAssociatedStacks.parameters[0].$ref" = "#/parameters/Action"
"paths./#ListAssociatedStacks.parameters[1].$ref" = "#/parameters/Version"
"paths./#ListAssociatedStacks.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#ListAssociatedStacks.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#ListAssociatedStacks.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#ListAssociatedStacks.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#ListAssociatedStacks.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#ListAssociatedStacks.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#ListAssociatedStacks.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#ListAssociatedStacks.post.description" = "Lists the stacks associated with the specified fleet."
"paths./#ListAssociatedStacks.post.operationId" = "ListAssociatedStacks"
"paths./#ListAssociatedStacks.post.parameters.length" = 1
"paths./#ListAssociatedStacks.post.parameters[0].in" = "body"
"paths./#ListAssociatedStacks.post.parameters[0].name" = "body"
"paths./#ListAssociatedStacks.post.parameters[0].required" = true
"paths./#ListAssociatedStacks.post.parameters[0].schema.$ref" = "#/definitions/ListAssociatedStacksRequest"
"paths./#ListAssociatedStacks.post.responses.200.description" = "Success"
"paths./#ListAssociatedStacks.post.responses.200.schema.$ref" = "#/definitions/ListAssociatedStacksResult"
"paths./#StartFleet.parameters.length" = 9
"paths./#StartFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartFleet.post.description" = "Starts the specified fleet."
"paths./#StartFleet.post.operationId" = "StartFleet"
"paths./#StartFleet.post.parameters.length" = 1
"paths./#StartFleet.post.parameters[0].in" = "body"
"paths./#StartFleet.post.parameters[0].name" = "body"
"paths./#StartFleet.post.parameters[0].required" = true
"paths./#StartFleet.post.parameters[0].schema.$ref" = "#/definitions/StartFleetRequest"
"paths./#StartFleet.post.responses.200.description" = "Success"
"paths./#StartFleet.post.responses.200.schema.$ref" = "#/definitions/StartFleetResult"
"paths./#StartFleet.post.responses.480.description" = "ResourceNotFoundException"
"paths./#StartFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#StartFleet.post.responses.481.description" = "OperationNotPermittedException"
"paths./#StartFleet.post.responses.481.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#StartFleet.post.responses.482.description" = "LimitExceededException"
"paths./#StartFleet.post.responses.482.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#StartFleet.post.responses.483.description" = "ConcurrentModificationException"
"paths./#StartFleet.post.responses.483.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#StartImageBuilder.parameters.length" = 9
"paths./#StartImageBuilder.parameters[0].$ref" = "#/parameters/Action"
"paths./#StartImageBuilder.parameters[1].$ref" = "#/parameters/Version"
"paths./#StartImageBuilder.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StartImageBuilder.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StartImageBuilder.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StartImageBuilder.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StartImageBuilder.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StartImageBuilder.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StartImageBuilder.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StartImageBuilder.post.description" = ""
"paths./#StartImageBuilder.post.operationId" = "StartImageBuilder"
"paths./#StartImageBuilder.post.parameters.length" = 1
"paths./#StartImageBuilder.post.parameters[0].in" = "body"
"paths./#StartImageBuilder.post.parameters[0].name" = "body"
"paths./#StartImageBuilder.post.parameters[0].required" = true
"paths./#StartImageBuilder.post.parameters[0].schema.$ref" = "#/definitions/StartImageBuilderRequest"
"paths./#StartImageBuilder.post.responses.200.description" = "Success"
"paths./#StartImageBuilder.post.responses.200.schema.$ref" = "#/definitions/StartImageBuilderResult"
"paths./#StartImageBuilder.post.responses.480.description" = "ResourceNotAvailableException"
"paths./#StartImageBuilder.post.responses.480.schema.$ref" = "#/definitions/ResourceNotAvailableException"
"paths./#StartImageBuilder.post.responses.481.description" = "ResourceNotFoundException"
"paths./#StartImageBuilder.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#StartImageBuilder.post.responses.482.description" = "ConcurrentModificationException"
"paths./#StartImageBuilder.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#StopFleet.parameters.length" = 9
"paths./#StopFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#StopFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#StopFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StopFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StopFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StopFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StopFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StopFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StopFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StopFleet.post.description" = "Stops the specified fleet."
"paths./#StopFleet.post.operationId" = "StopFleet"
"paths./#StopFleet.post.parameters.length" = 1
"paths./#StopFleet.post.parameters[0].in" = "body"
"paths./#StopFleet.post.parameters[0].name" = "body"
"paths./#StopFleet.post.parameters[0].required" = true
"paths./#StopFleet.post.parameters[0].schema.$ref" = "#/definitions/StopFleetRequest"
"paths./#StopFleet.post.responses.200.description" = "Success"
"paths./#StopFleet.post.responses.200.schema.$ref" = "#/definitions/StopFleetResult"
"paths./#StopFleet.post.responses.480.description" = "ResourceNotFoundException"
"paths./#StopFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#StopFleet.post.responses.481.description" = "ConcurrentModificationException"
"paths./#StopFleet.post.responses.481.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#StopImageBuilder.parameters.length" = 9
"paths./#StopImageBuilder.parameters[0].$ref" = "#/parameters/Action"
"paths./#StopImageBuilder.parameters[1].$ref" = "#/parameters/Version"
"paths./#StopImageBuilder.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#StopImageBuilder.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#StopImageBuilder.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#StopImageBuilder.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#StopImageBuilder.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#StopImageBuilder.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#StopImageBuilder.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#StopImageBuilder.post.description" = ""
"paths./#StopImageBuilder.post.operationId" = "StopImageBuilder"
"paths./#StopImageBuilder.post.parameters.length" = 1
"paths./#StopImageBuilder.post.parameters[0].in" = "body"
"paths./#StopImageBuilder.post.parameters[0].name" = "body"
"paths./#StopImageBuilder.post.parameters[0].required" = true
"paths./#StopImageBuilder.post.parameters[0].schema.$ref" = "#/definitions/StopImageBuilderRequest"
"paths./#StopImageBuilder.post.responses.200.description" = "Success"
"paths./#StopImageBuilder.post.responses.200.schema.$ref" = "#/definitions/StopImageBuilderResult"
"paths./#StopImageBuilder.post.responses.480.description" = "ResourceNotFoundException"
"paths./#StopImageBuilder.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#StopImageBuilder.post.responses.481.description" = "OperationNotPermittedException"
"paths./#StopImageBuilder.post.responses.481.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#StopImageBuilder.post.responses.482.description" = "ConcurrentModificationException"
"paths./#StopImageBuilder.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#UpdateDirectoryConfig.parameters.length" = 9
"paths./#UpdateDirectoryConfig.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateDirectoryConfig.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateDirectoryConfig.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateDirectoryConfig.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateDirectoryConfig.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateDirectoryConfig.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateDirectoryConfig.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateDirectoryConfig.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateDirectoryConfig.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateDirectoryConfig.post.description" = "Updates the specified directory configuration."
"paths./#UpdateDirectoryConfig.post.operationId" = "UpdateDirectoryConfig"
"paths./#UpdateDirectoryConfig.post.parameters.length" = 1
"paths./#UpdateDirectoryConfig.post.parameters[0].in" = "body"
"paths./#UpdateDirectoryConfig.post.parameters[0].name" = "body"
"paths./#UpdateDirectoryConfig.post.parameters[0].required" = true
"paths./#UpdateDirectoryConfig.post.parameters[0].schema.$ref" = "#/definitions/UpdateDirectoryConfigRequest"
"paths./#UpdateDirectoryConfig.post.responses.200.description" = "Success"
"paths./#UpdateDirectoryConfig.post.responses.200.schema.$ref" = "#/definitions/UpdateDirectoryConfigResult"
"paths./#UpdateDirectoryConfig.post.responses.480.description" = "ResourceInUseException"
"paths./#UpdateDirectoryConfig.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#UpdateDirectoryConfig.post.responses.481.description" = "ResourceNotFoundException"
"paths./#UpdateDirectoryConfig.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#UpdateDirectoryConfig.post.responses.482.description" = "ConcurrentModificationException"
"paths./#UpdateDirectoryConfig.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#UpdateFleet.parameters.length" = 9
"paths./#UpdateFleet.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateFleet.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateFleet.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateFleet.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateFleet.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateFleet.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateFleet.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateFleet.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateFleet.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateFleet.post.description" = "<p>Updates the specified fleet.</p> <p>If the fleet is in the <code>STOPPED</code> state, you can update any attribute except the fleet name. If the fleet is in the <code>RUNNING</code> state, you can update the <code>DisplayName</code> and <code>ComputeCapacity</code> attributes. If the fleet is in the <code>STARTING</code> or <code>STOPPING</code> state, you can't update it.</p>"
"paths./#UpdateFleet.post.operationId" = "UpdateFleet"
"paths./#UpdateFleet.post.parameters.length" = 1
"paths./#UpdateFleet.post.parameters[0].in" = "body"
"paths./#UpdateFleet.post.parameters[0].name" = "body"
"paths./#UpdateFleet.post.parameters[0].required" = true
"paths./#UpdateFleet.post.parameters[0].schema.$ref" = "#/definitions/UpdateFleetRequest"
"paths./#UpdateFleet.post.responses.200.description" = "Success"
"paths./#UpdateFleet.post.responses.200.schema.$ref" = "#/definitions/UpdateFleetResult"
"paths./#UpdateFleet.post.responses.480.description" = "ResourceInUseException"
"paths./#UpdateFleet.post.responses.480.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#UpdateFleet.post.responses.481.description" = "LimitExceededException"
"paths./#UpdateFleet.post.responses.481.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#UpdateFleet.post.responses.482.description" = "InvalidRoleException"
"paths./#UpdateFleet.post.responses.482.schema.$ref" = "#/definitions/InvalidRoleException"
"paths./#UpdateFleet.post.responses.483.description" = "ResourceNotFoundException"
"paths./#UpdateFleet.post.responses.483.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#UpdateFleet.post.responses.484.description" = "ResourceNotAvailableException"
"paths./#UpdateFleet.post.responses.484.schema.$ref" = "#/definitions/ResourceNotAvailableException"
"paths./#UpdateFleet.post.responses.485.description" = "InvalidParameterCombinationException"
"paths./#UpdateFleet.post.responses.485.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#UpdateFleet.post.responses.486.description" = "ConcurrentModificationException"
"paths./#UpdateFleet.post.responses.486.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./#UpdateFleet.post.responses.487.description" = "IncompatibleImageException"
"paths./#UpdateFleet.post.responses.487.schema.$ref" = "#/definitions/IncompatibleImageException"
"paths./#UpdateFleet.post.responses.488.description" = "OperationNotPermittedException"
"paths./#UpdateFleet.post.responses.488.schema.$ref" = "#/definitions/OperationNotPermittedException"
"paths./#UpdateStack.parameters.length" = 9
"paths./#UpdateStack.parameters[0].$ref" = "#/parameters/Action"
"paths./#UpdateStack.parameters[1].$ref" = "#/parameters/Version"
"paths./#UpdateStack.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./#UpdateStack.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./#UpdateStack.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./#UpdateStack.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./#UpdateStack.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./#UpdateStack.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./#UpdateStack.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./#UpdateStack.post.description" = "Updates the specified stack."
"paths./#UpdateStack.post.operationId" = "UpdateStack"
"paths./#UpdateStack.post.parameters.length" = 1
"paths./#UpdateStack.post.parameters[0].in" = "body"
"paths./#UpdateStack.post.parameters[0].name" = "body"
"paths./#UpdateStack.post.parameters[0].required" = true
"paths./#UpdateStack.post.parameters[0].schema.$ref" = "#/definitions/UpdateStackRequest"
"paths./#UpdateStack.post.responses.200.description" = "Success"
"paths./#UpdateStack.post.responses.200.schema.$ref" = "#/definitions/UpdateStackResult"
"paths./#UpdateStack.post.responses.480.description" = "ResourceNotFoundException"
"paths./#UpdateStack.post.responses.480.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./#UpdateStack.post.responses.481.description" = "ResourceInUseException"
"paths./#UpdateStack.post.responses.481.schema.$ref" = "#/definitions/ResourceInUseException"
"paths./#UpdateStack.post.responses.482.description" = "InvalidRoleException"
"paths./#UpdateStack.post.responses.482.schema.$ref" = "#/definitions/InvalidRoleException"
"paths./#UpdateStack.post.responses.483.description" = "InvalidParameterCombinationException"
"paths./#UpdateStack.post.responses.483.schema.$ref" = "#/definitions/InvalidParameterCombinationException"
"paths./#UpdateStack.post.responses.484.description" = "LimitExceededException"
"paths./#UpdateStack.post.responses.484.schema.$ref" = "#/definitions/LimitExceededException"
"paths./#UpdateStack.post.responses.485.description" = "IncompatibleImageException"
"paths./#UpdateStack.post.responses.485.schema.$ref" = "#/definitions/IncompatibleImageException"
"paths./.parameters.length" = 9
"paths./.parameters[0].$ref" = "#/parameters/Action"
"paths./.parameters[1].$ref" = "#/parameters/Version"
"paths./.parameters[2].$ref" = "#/parameters/X-Amz-Content-Sha256"
"paths./.parameters[3].$ref" = "#/parameters/X-Amz-Date"
"paths./.parameters[4].$ref" = "#/parameters/X-Amz-Algorithm"
"paths./.parameters[5].$ref" = "#/parameters/X-Amz-Credential"
"paths./.parameters[6].$ref" = "#/parameters/X-Amz-Security-Token"
"paths./.parameters[7].$ref" = "#/parameters/X-Amz-Signature"
"paths./.parameters[8].$ref" = "#/parameters/X-Amz-SignedHeaders"
"paths./.post.description" = "Associates the specified fleet with the specified stack."
"paths./.post.operationId" = "AssociateFleet"
"paths./.post.parameters.length" = 1
"paths./.post.parameters[0].in" = "body"
"paths./.post.parameters[0].name" = "body"
"paths./.post.parameters[0].required" = true
"paths./.post.parameters[0].schema.$ref" = "#/definitions/AssociateFleetRequest"
"paths./.post.responses.200.description" = "Success"
"paths./.post.responses.200.schema.$ref" = "#/definitions/AssociateFleetResult"
"paths./.post.responses.480.description" = "LimitExceededException"
"paths./.post.responses.480.schema.$ref" = "#/definitions/LimitExceededException"
"paths./.post.responses.481.description" = "ResourceNotFoundException"
"paths./.post.responses.481.schema.$ref" = "#/definitions/ResourceNotFoundException"
"paths./.post.responses.482.description" = "ConcurrentModificationException"
"paths./.post.responses.482.schema.$ref" = "#/definitions/ConcurrentModificationException"
"paths./.post.responses.483.description" = "IncompatibleImageException"
"paths./.post.responses.483.schema.$ref" = "#/definitions/IncompatibleImageException"
"paths./.post.responses.484.description" = "OperationNotPermittedException"
"paths./.post.responses.484.schema.$ref" = "#/definitions/OperationNotPermittedException"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "http"
"security.length" = 1
"securityDefinitions.hmac.description" = "Amazon Signature authorization v4"
"securityDefinitions.hmac.in" = "header"
"securityDefinitions.hmac.name" = "Authorization"
"securityDefinitions.hmac.type" = "apiKey"
"securityDefinitions.hmac.x-amazon-apigateway-authtype" = "awsSigv4"
"security[0].hmac.length" = 0
swagger = "2.0"
x-hasEquivalentPaths = true
