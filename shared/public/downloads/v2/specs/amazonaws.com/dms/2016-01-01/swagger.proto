syntax = "proto3";

import "google/api/annotations.proto";

package awsdatabasemigrationservice;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AddTagsToResourceMessage body = 10;
}

message Post#CreateEndpointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateEndpointMessage body = 10;
}

message Post#CreateEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateEventSubscriptionMessage body = 10;
}

message Post#CreateReplicationInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateReplicationInstanceMessage body = 10;
}

message Post#CreateReplicationSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateReplicationSubnetGroupMessage body = 10;
}

message Post#CreateReplicationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateReplicationTaskMessage body = 10;
}

message Post#DeleteCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteCertificateMessage body = 10;
}

message Post#DeleteEndpointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteEndpointMessage body = 10;
}

message Post#DeleteEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteEventSubscriptionMessage body = 10;
}

message Post#DeleteReplicationInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteReplicationInstanceMessage body = 10;
}

message Post#DeleteReplicationSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteReplicationSubnetGroupMessage body = 10;
}

message Post#DeleteReplicationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteReplicationTaskMessage body = 10;
}

message Post#DescribeAccountAttributesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAccountAttributesMessage body = 10;
}

message Post#DescribeCertificatesRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeCertificatesMessage body = 12;
}

message Post#DescribeConnectionsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeConnectionsMessage body = 12;
}

message Post#DescribeEndpointTypesRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEndpointTypesMessage body = 12;
}

message Post#DescribeEndpointsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEndpointsMessage body = 12;
}

message Post#DescribeEventCategoriesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEventCategoriesMessage body = 10;
}

message Post#DescribeEventSubscriptionsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEventSubscriptionsMessage body = 12;
}

message Post#DescribeEventsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEventsMessage body = 12;
}

message Post#DescribeOrderableReplicationInstancesRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeOrderableReplicationInstancesMessage body = 12;
}

message Post#DescribeRefreshSchemasStatusRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeRefreshSchemasStatusMessage body = 10;
}

message Post#DescribeReplicationInstancesRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReplicationInstancesMessage body = 12;
}

message Post#DescribeReplicationSubnetGroupsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReplicationSubnetGroupsMessage body = 12;
}

message Post#DescribeReplicationTasksRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeReplicationTasksMessage body = 12;
}

message Post#DescribeSchemasRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeSchemasMessage body = 12;
}

message Post#DescribeTableStatisticsRequest {
    string Action = 1;
    // Pagination token
    string Marker = 2;
    // Pagination limit
    string MaxRecords = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeTableStatisticsMessage body = 12;
}

message Post#ImportCertificateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ImportCertificateMessage body = 10;
}

message Post#ListTagsForResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListTagsForResourceMessage body = 10;
}

message Post#ModifyEndpointRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyEndpointMessage body = 10;
}

message Post#ModifyEventSubscriptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyEventSubscriptionMessage body = 10;
}

message Post#ModifyReplicationInstanceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyReplicationInstanceMessage body = 10;
}

message Post#ModifyReplicationSubnetGroupRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyReplicationSubnetGroupMessage body = 10;
}

message Post#ModifyReplicationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ModifyReplicationTaskMessage body = 10;
}

message Post#RefreshSchemasRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RefreshSchemasMessage body = 10;
}

message Post#ReloadTablesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ReloadTablesMessage body = 10;
}

message Post#RemoveTagsFromResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveTagsFromResourceMessage body = 10;
}

message Post#StartReplicationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    StartReplicationTaskMessage body = 10;
}

message Post#StopReplicationTaskRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    StopReplicationTaskMessage body = 10;
}

message Post#TestConnectionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TestConnectionMessage body = 10;
}

message AccessDeniedFault {
    // <p/>
    string message = 1;
}

message AccountQuota {
    // The name of the AWS DMS quota for this AWS account.
    string AccountQuotaName = 1;
    // The maximum allowed value for the quota.
    integer Max = 2;
    // The amount currently used toward the quota maximum.
    integer Used = 3;
}

repeated AccountQuota AccountQuotaList = 1



message AddTagsToResourceMessage {
    // The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task.
    string ResourceArn = 1;
    // The tag to be assigned to the DMS resource.
    array Tags = 2;
}

message AddTagsToResourceResponse {
}

enum AuthMechanismValue {
    DEFAULT = 0;
    MONGODB_CR = 1;
    SCRAM_SHA_1 = 2;
}

enum AuthTypeValue {
    NO = 0;
    PASSWORD = 1;
}

message AvailabilityZone {
    // The name of the availability zone.
    string Name = 1;
}

message Certificate {
    // The Amazon Resource Name (ARN) for the certificate.
    string CertificateArn = 1;
    // The date that the certificate was created.
    string CertificateCreationDate = 2;
    // The customer-assigned name of the certificate. Valid characters are A-z and 0-9.
    string CertificateIdentifier = 3;
    // The owner of the certificate.
    string CertificateOwner = 4;
    // The contents of the .pem X.509 certificate file for the certificate.
    string CertificatePem = 5;
    // The location of the imported Oracle Wallet certificate for use with SSL.
    string CertificateWallet = 6;
    // The key length of the cryptographic algorithm being used.
    integer KeyLength = 7;
    // The signing algorithm for the certificate.
    string SigningAlgorithm = 8;
    // The beginning date that the certificate is valid.
    string ValidFromDate = 9;
    // The final date that the certificate is valid.
    string ValidToDate = 10;
}

repeated Certificate CertificateList = 1



enum CompressionTypeValue {
    NONE = 0;
    GZIP = 1;
}

message Connection {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
    // The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
    string EndpointIdentifier = 2;
    // The error message when the connection last failed.
    string LastFailureMessage = 3;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 4;
    // The replication instance identifier. This parameter is stored as a lowercase string.
    string ReplicationInstanceIdentifier = 5;
    // The connection status.
    string Status = 6;
}

repeated Connection ConnectionList = 1

message CreateEndpointMessage {
    // The Amazon Resource Number (ARN) for the certificate.
    string CertificateArn = 1;
    // The name of the endpoint database.
    string DatabaseName = 2;
    // Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>.
    DynamoDbSettings DynamoDbSettings = 3;
    // The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
    string EndpointIdentifier = 4;
    // The type of endpoint.
    ReplicationEndpointTypeValue EndpointType = 5;
    // The type of engine for the endpoint. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER.
    string EngineName = 6;
    // Additional attributes associated with the connection.
    string ExtraConnectionAttributes = 7;
    // The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    string KmsKeyId = 8;
    // Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>.
    MongoDbSettings MongoDbSettings = 9;
    // The password to be used to login to the endpoint database.
    string Password = 10;
    // The port used by the endpoint database.
    integer Port = 11;
    // Settings in JSON format for the target S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>.
    S3Settings S3Settings = 12;
    // The name of the server where the endpoint database resides.
    string ServerName = 13;
    // <p>The SSL mode to use for the SSL connection.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>
    DmsSslModeValue SslMode = 14;
    // Tags to be added to the endpoint.
    array Tags = 15;
    // The user name to be used to login to the endpoint database.
    string Username = 16;
}

message CreateEndpointResponse {
    // The endpoint that was created.
    Endpoint Endpoint = 1;
}

message CreateEventSubscriptionMessage {
    //  A Boolean value; set to <b>true</b> to activate the subscription, or set to <b>false</b> to create the subscription but not activate it.
    boolean Enabled = 1;
    //  A list of event categories for a source type that you want to subscribe to. You can see a list of the categories for a given source type by calling the <b>DescribeEventCategories</b> action or in the topic <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications</a> in the AWS Database Migration Service User Guide.
    array EventCategories = 2;
    //  The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
    string SnsTopicArn = 3;
    //  The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens.
    array SourceIds = 4;
    // <p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value is not specified, all events are returned. </p> <p>Valid values: replication-instance | migration-task</p>
    string SourceType = 5;
    // <p>The name of the DMS event notification subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>
    string SubscriptionName = 6;
    // A tag to be attached to the event subscription.
    array Tags = 7;
}

message CreateEventSubscriptionResponse {
    // The event subscription that was created.
    EventSubscription EventSubscription = 1;
}

message CreateReplicationInstanceMessage {
    // The amount of storage (in gigabytes) to be initially allocated for the replication instance.
    integer AllocatedStorage = 1;
    // <p>Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.</p> <p>Default: <code>true</code> </p>
    boolean AutoMinorVersionUpgrade = 2;
    // <p>The EC2 Availability Zone that the replication instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's region.</p> <p> Example: <code>us-east-1d</code> </p>
    string AvailabilityZone = 3;
    // The engine version number of the replication instance.
    string EngineVersion = 4;
    // The KMS key identifier that will be used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    string KmsKeyId = 5;
    //  Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>.
    boolean MultiAZ = 6;
    // <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>
    string PreferredMaintenanceWindow = 7;
    //  Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>.
    boolean PubliclyAccessible = 8;
    // <p>The compute and memory capacity of the replication instance as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>
    string ReplicationInstanceClass = 9;
    // <p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>
    string ReplicationInstanceIdentifier = 10;
    // A subnet group to associate with the replication instance.
    string ReplicationSubnetGroupIdentifier = 11;
    // Tags to be associated with the replication instance.
    array Tags = 12;
    //  Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.
    array VpcSecurityGroupIds = 13;
}

message CreateReplicationInstanceResponse {
    // The replication instance that was created.
    ReplicationInstance ReplicationInstance = 1;
}

message CreateReplicationSubnetGroupMessage {
    // The description for the subnet group.
    string ReplicationSubnetGroupDescription = 1;
    // <p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be "default".</p> <p>Example: <code>mySubnetgroup</code> </p>
    string ReplicationSubnetGroupIdentifier = 2;
    // The EC2 subnet IDs for the subnet group.
    array SubnetIds = 3;
    // The tag to be assigned to the subnet group.
    array Tags = 4;
}

message CreateReplicationSubnetGroupResponse {
    // The replication subnet group that was created.
    ReplicationSubnetGroup ReplicationSubnetGroup = 1;
}

message CreateReplicationTaskMessage {
    // The start time for the Change Data Capture (CDC) operation.
    string CdcStartTime = 1;
    // The migration type.
    MigrationTypeValue MigrationType = 2;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 3;
    // <p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
    string ReplicationTaskIdentifier = 4;
    // Settings for the task, such as target metadata settings. For a complete list of task settings, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html">Task Settings for AWS Database Migration Service Tasks</a>.
    string ReplicationTaskSettings = 5;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string SourceEndpointArn = 6;
    // <p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with "file://". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>
    string TableMappings = 7;
    // Tags to be added to the replication instance.
    array Tags = 8;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string TargetEndpointArn = 9;
}

message CreateReplicationTaskResponse {
    // The replication task that was created.
    ReplicationTask ReplicationTask = 1;
}

message DeleteCertificateMessage {
    // The Amazon Resource Name (ARN) of the deleted certificate.
    string CertificateArn = 1;
}

message DeleteCertificateResponse {
    // The Secure Sockets Layer (SSL) certificate.
    Certificate Certificate = 1;
}

message DeleteEndpointMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
}

message DeleteEndpointResponse {
    // The endpoint that was deleted.
    Endpoint Endpoint = 1;
}

message DeleteEventSubscriptionMessage {
    // The name of the DMS event notification subscription to be deleted.
    string SubscriptionName = 1;
}

message DeleteEventSubscriptionResponse {
    // The event subscription that was deleted.
    EventSubscription EventSubscription = 1;
}

message DeleteReplicationInstanceMessage {
    // The Amazon Resource Name (ARN) of the replication instance to be deleted.
    string ReplicationInstanceArn = 1;
}

message DeleteReplicationInstanceResponse {
    // The replication instance that was deleted.
    ReplicationInstance ReplicationInstance = 1;
}

message DeleteReplicationSubnetGroupMessage {
    // The subnet group name of the replication instance.
    string ReplicationSubnetGroupIdentifier = 1;
}

message DeleteReplicationSubnetGroupResponse {
}

message DeleteReplicationTaskMessage {
    // The Amazon Resource Name (ARN) of the replication task to be deleted.
    string ReplicationTaskArn = 1;
}

message DeleteReplicationTaskResponse {
    // The deleted replication task.
    ReplicationTask ReplicationTask = 1;
}

message DescribeAccountAttributesMessage {
}

message DescribeAccountAttributesResponse {
    // Account quota information.
    array AccountQuotas = 1;
}

message DescribeCertificatesMessage {
    // Filters applied to the certificate described in the form of key-value pairs.
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>
    integer MaxRecords = 3;
}

message DescribeCertificatesResponse {
    // The Secure Sockets Layer (SSL) certificates associated with the replication instance.
    array Certificates = 1;
    // The pagination token.
    string Marker = 2;
}

message DescribeConnectionsMessage {
    // <p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeConnectionsResponse {
    // A description of the connections.
    array Connections = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
}

message DescribeEndpointTypesMessage {
    // <p>Filters applied to the describe action.</p> <p>Valid filter names: engine-name | endpoint-type</p>
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeEndpointTypesResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // The type of endpoints that are supported.
    array SupportedEndpointTypes = 2;
}

message DescribeEndpointsMessage {
    // <p>Filters applied to the describe action.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeEndpointsResponse {
    // Endpoint description.
    array Endpoints = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
}

message DescribeEventCategoriesMessage {
    // Filters applied to the action.
    array Filters = 1;
    // <p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | migration-task</p>
    string SourceType = 2;
}

message DescribeEventCategoriesResponse {
    // A list of event categories.
    array EventCategoryGroupList = 1;
}

message DescribeEventSubscriptionsMessage {
    // Filters applied to the action.
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
    // The name of the AWS DMS event subscription to be described.
    string SubscriptionName = 4;
}

message DescribeEventSubscriptionsResponse {
    // A list of event subscriptions.
    array EventSubscriptionsList = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
}

message DescribeEventsMessage {
    // The duration of the events to be listed.
    integer Duration = 1;
    // The end time for the events to be listed.
    string EndTime = 2;
    // A list of event categories for a source type that you want to subscribe to.
    array EventCategories = 3;
    // Filters applied to the action.
    array Filters = 4;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 5;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 6;
    //  The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It cannot end with a hyphen or contain two consecutive hyphens.
    string SourceIdentifier = 7;
    // <p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | migration-task</p>
    SourceType SourceType = 8;
    // The start time for the events to be listed.
    string StartTime = 9;
}

message DescribeEventsResponse {
    // The events described.
    array Events = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
}

message DescribeOrderableReplicationInstancesMessage {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 2;
}

message DescribeOrderableReplicationInstancesResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // The order-able replication instances available.
    array OrderableReplicationInstances = 2;
}

message DescribeRefreshSchemasStatusMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
}

message DescribeRefreshSchemasStatusResponse {
    // The status of the schema.
    RefreshSchemasStatus RefreshSchemasStatus = 1;
}

message DescribeReplicationInstancesMessage {
    // <p>Filters applied to the describe action.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeReplicationInstancesResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // The replication instances described.
    array ReplicationInstances = 2;
}

message DescribeReplicationSubnetGroupsMessage {
    // Filters applied to the describe action.
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeReplicationSubnetGroupsResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // A description of the replication subnet groups.
    array ReplicationSubnetGroups = 2;
}

message DescribeReplicationTasksMessage {
    // <p>Filters applied to the describe action.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>
    array Filters = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeReplicationTasksResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // A description of the replication tasks.
    array ReplicationTasks = 2;
}

message DescribeSchemasMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 2;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 3;
}

message DescribeSchemasResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // The described schema.
    array Schemas = 2;
}

message DescribeTableStatisticsMessage {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>
    integer MaxRecords = 2;
    // The Amazon Resource Name (ARN) of the replication task.
    string ReplicationTaskArn = 3;
}

message DescribeTableStatisticsResponse {
    //  An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
    string Marker = 1;
    // The Amazon Resource Name (ARN) of the replication task.
    string ReplicationTaskArn = 2;
    // The table statistics.
    array TableStatistics = 3;
}

enum DmsSslModeValue {
    NONE = 0;
    REQUIRE = 1;
    VERIFYCA = 2;
    VERIFYFULL = 3;
}

message DynamoDbSettings {
    //  The Amazon Resource Name (ARN) used by the service access IAM role.
    string ServiceAccessRoleArn = 1;
}

message Endpoint {
    // The Amazon Resource Name (ARN) used for SSL connection to the endpoint.
    string CertificateArn = 1;
    // The name of the database at the endpoint.
    string DatabaseName = 2;
    // The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.
    DynamoDbSettings DynamoDbSettings = 3;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 4;
    // The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
    string EndpointIdentifier = 5;
    // The type of endpoint.
    ReplicationEndpointTypeValue EndpointType = 6;
    // The database engine name. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER.
    string EngineName = 7;
    //  Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account.
    string ExternalId = 8;
    // Additional connection attributes used to connect to the endpoint.
    string ExtraConnectionAttributes = 9;
    // The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    string KmsKeyId = 10;
    // The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.
    MongoDbSettings MongoDbSettings = 11;
    // The port value used to access the endpoint.
    integer Port = 12;
    // The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.
    S3Settings S3Settings = 13;
    // The name of the server at the endpoint.
    string ServerName = 14;
    // <p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>
    DmsSslModeValue SslMode = 15;
    // The status of the endpoint.
    string Status = 16;
    // The user name used to connect to the endpoint.
    string Username = 17;
}

repeated Endpoint EndpointList = 1

message Event {
    // The date of the event.
    string Date = 1;
    // The event categories available for the specified source type.
    array EventCategories = 2;
    // The event message.
    string Message = 3;
    // <p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>
    string SourceIdentifier = 4;
    // <p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>
    SourceType SourceType = 5;
}

repeated string EventCategoriesList = 1

message EventCategoryGroup {
    //  A list of event categories for a <code>SourceType</code> that you want to subscribe to.
    array EventCategories = 1;
    // <p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>
    string SourceType = 2;
}

repeated EventCategoryGroup EventCategoryGroupList = 1

repeated Event EventList = 1

message EventSubscription {
    // The AWS DMS event notification subscription Id.
    string CustSubscriptionId = 1;
    // The AWS customer account associated with the AWS DMS event notification subscription.
    string CustomerAwsId = 2;
    // Boolean value that indicates if the event subscription is enabled.
    boolean Enabled = 3;
    // A lists of event categories.
    array EventCategoriesList = 4;
    // The topic ARN of the AWS DMS event notification subscription.
    string SnsTopicArn = 5;
    // A list of source Ids for the event subscription.
    array SourceIdsList = 6;
    // <p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>
    string SourceType = 7;
    // <p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status "no-permission" indicates that AWS DMS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.</p>
    string Status = 8;
    // The time the RDS event notification subscription was created.
    string SubscriptionCreationTime = 9;
}

repeated EventSubscription EventSubscriptionsList = 1



message Filter {
    // The name of the filter.
    string Name = 1;
    // The filter value.
    array Values = 2;
}

repeated Filter FilterList = 1

repeated string FilterValueList = 1

message ImportCertificateMessage {
    // The customer-assigned name of the certificate. Valid characters are A-z and 0-9.
    string CertificateIdentifier = 1;
    // The contents of the .pem X.509 certificate file for the certificate.
    string CertificatePem = 2;
    // The location of the imported Oracle Wallet certificate for use with SSL.
    string CertificateWallet = 3;
    // The tags associated with the certificate.
    array Tags = 4;
}

message ImportCertificateResponse {
    // The certificate to be uploaded.
    Certificate Certificate = 1;
}

message InsufficientResourceCapacityFault {
    // <p/>
    string message = 1;
}

message InvalidCertificateFault {
    string message = 1;
}

message InvalidResourceStateFault {
    // <p/>
    string message = 1;
}

message InvalidSubnet {
    // <p/>
    string message = 1;
}

message KMSKeyNotAccessibleFault {
    // <p/>
    string message = 1;
}

repeated string KeyList = 1

message ListTagsForResourceMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource.
    string ResourceArn = 1;
}

message ListTagsForResourceResponse {
    // A list of tags for the resource.
    array TagList = 1;
}

enum MigrationTypeValue {
    FULLLOAD = 0;
    CDC = 1;
    FULLLOADANDCDC = 2;
}

message ModifyEndpointMessage {
    // The Amazon Resource Name (ARN) of the certificate used for SSL connection.
    string CertificateArn = 1;
    // The name of the endpoint database.
    string DatabaseName = 2;
    // Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>.
    DynamoDbSettings DynamoDbSettings = 3;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 4;
    // The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.
    string EndpointIdentifier = 5;
    // The type of endpoint.
    ReplicationEndpointTypeValue EndpointType = 6;
    // The type of engine for the endpoint. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, DYNAMODB, MONGODB, SYBASE, and SQLSERVER.
    string EngineName = 7;
    // Additional attributes associated with the connection.
    string ExtraConnectionAttributes = 8;
    // Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>.
    MongoDbSettings MongoDbSettings = 9;
    // The password to be used to login to the endpoint database.
    string Password = 10;
    // The port used by the endpoint database.
    integer Port = 11;
    // Settings in JSON format for the target S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>.
    S3Settings S3Settings = 12;
    // The name of the server where the endpoint database resides.
    string ServerName = 13;
    // <p>The SSL mode to be used.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>
    DmsSslModeValue SslMode = 14;
    // The user name to be used to login to the endpoint database.
    string Username = 15;
}

message ModifyEndpointResponse {
    // The modified endpoint.
    Endpoint Endpoint = 1;
}

message ModifyEventSubscriptionMessage {
    //  A Boolean value; set to <b>true</b> to activate the subscription.
    boolean Enabled = 1;
    //  A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories.
    array EventCategories = 2;
    //  The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
    string SnsTopicArn = 3;
    // <p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | migration-task</p>
    string SourceType = 4;
    // The name of the AWS DMS event notification subscription to be modified.
    string SubscriptionName = 5;
}

message ModifyEventSubscriptionResponse {
    // The modified event subscription.
    EventSubscription EventSubscription = 1;
}

message ModifyReplicationInstanceMessage {
    // The amount of storage (in gigabytes) to be allocated for the replication instance.
    integer AllocatedStorage = 1;
    // <p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>
    boolean AllowMajorVersionUpgrade = 2;
    // Indicates whether the changes should be applied immediately or during the next maintenance window.
    boolean ApplyImmediately = 3;
    //  Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version.
    boolean AutoMinorVersionUpgrade = 4;
    // The engine version number of the replication instance.
    string EngineVersion = 5;
    //  Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>.
    boolean MultiAZ = 6;
    // <p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>
    string PreferredMaintenanceWindow = 7;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 8;
    // <p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>
    string ReplicationInstanceClass = 9;
    // The replication instance identifier. This parameter is stored as a lowercase string.
    string ReplicationInstanceIdentifier = 10;
    //  Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.
    array VpcSecurityGroupIds = 11;
}

message ModifyReplicationInstanceResponse {
    // The modified replication instance.
    ReplicationInstance ReplicationInstance = 1;
}

message ModifyReplicationSubnetGroupMessage {
    // The description of the replication instance subnet group.
    string ReplicationSubnetGroupDescription = 1;
    // The name of the replication instance subnet group.
    string ReplicationSubnetGroupIdentifier = 2;
    // A list of subnet IDs.
    array SubnetIds = 3;
}

message ModifyReplicationSubnetGroupResponse {
    // The modified replication subnet group.
    ReplicationSubnetGroup ReplicationSubnetGroup = 1;
}

message ModifyReplicationTaskMessage {
    // The start time for the Change Data Capture (CDC) operation.
    string CdcStartTime = 1;
    // <p>The migration type.</p> <p>Valid values: full-load | cdc | full-load-and-cdc</p>
    MigrationTypeValue MigrationType = 2;
    // The Amazon Resource Name (ARN) of the replication task.
    string ReplicationTaskArn = 3;
    // <p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
    string ReplicationTaskIdentifier = 4;
    // JSON file that contains settings for the task, such as target metadata settings.
    string ReplicationTaskSettings = 5;
    // <p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with "file://". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>
    string TableMappings = 6;
}

message ModifyReplicationTaskResponse {
    // The replication task that was modified.
    ReplicationTask ReplicationTask = 1;
}

message MongoDbSettings {
    // <p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>
    AuthMechanismValue AuthMechanism = 1;
    // <p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>
    string AuthSource = 2;
    // <p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>
    AuthTypeValue AuthType = 3;
    //  The database name on the MongoDB source endpoint.
    string DatabaseName = 4;
    // <p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>
    string DocsToInvestigate = 5;
    // <p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>
    string ExtractDocId = 6;
    // <p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>
    NestingLevelValue NestingLevel = 7;
    //  The password for the user account you use to access the MongoDB source endpoint.
    string Password = 8;
    //  The port value for the MongoDB source endpoint.
    integer Port = 9;
    //  The name of the server on the MongoDB source endpoint.
    string ServerName = 10;
    // The user name you use to access the MongoDB source endpoint.
    string Username = 11;
}

enum NestingLevelValue {
    NONE = 0;
    ONE = 1;
}

message OrderableReplicationInstance {
    // The default amount of storage (in gigabytes) that is allocated for the replication instance.
    integer DefaultAllocatedStorage = 1;
    // The version of the replication engine.
    string EngineVersion = 2;
    // The amount of storage (in gigabytes) that is allocated for the replication instance.
    integer IncludedAllocatedStorage = 3;
    // The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.
    integer MaxAllocatedStorage = 4;
    // The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.
    integer MinAllocatedStorage = 5;
    // <p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>
    string ReplicationInstanceClass = 6;
    // The type of storage used by the replication instance.
    string StorageType = 7;
}

repeated OrderableReplicationInstance OrderableReplicationInstanceList = 1

message RefreshSchemasMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 2;
}

message RefreshSchemasResponse {
    // The status of the refreshed schema.
    RefreshSchemasStatus RefreshSchemasStatus = 1;
}

message RefreshSchemasStatus {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
    // The last failure message for the schema.
    string LastFailureMessage = 2;
    // The date the schema was last refreshed.
    string LastRefreshDate = 3;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 4;
    // The status of the schema.
    RefreshSchemasStatusTypeValue Status = 5;
}

enum RefreshSchemasStatusTypeValue {
    SUCCESSFUL = 0;
    FAILED = 1;
    REFRESHING = 2;
}

message ReloadTablesMessage {
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationTaskArn = 1;
    // The name and schema of the table to be reloaded.
    array TablesToReload = 2;
}

message ReloadTablesResponse {
    // The Amazon Resource Name (ARN) of the replication task.
    string ReplicationTaskArn = 1;
}

message RemoveTagsFromResourceMessage {
    // &gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from.
    string ResourceArn = 1;
    // The tag key (name) of the tag to be removed.
    array TagKeys = 2;
}

message RemoveTagsFromResourceResponse {
}

enum ReplicationEndpointTypeValue {
    SOURCE = 0;
    TARGET = 1;
}

message ReplicationInstance {
    // The amount of storage (in gigabytes) that is allocated for the replication instance.
    integer AllocatedStorage = 1;
    // Boolean value indicating if minor version upgrades will be automatically applied to the instance.
    boolean AutoMinorVersionUpgrade = 2;
    // The Availability Zone for the instance.
    string AvailabilityZone = 3;
    // The engine version number of the replication instance.
    string EngineVersion = 4;
    // The time the replication instance was created.
    string InstanceCreateTime = 5;
    // The KMS key identifier that is used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    string KmsKeyId = 6;
    //  Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>.
    boolean MultiAZ = 7;
    // The pending modification values.
    ReplicationPendingModifiedValues PendingModifiedValues = 8;
    // The maintenance window times for the replication instance.
    string PreferredMaintenanceWindow = 9;
    //  Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>.
    boolean PubliclyAccessible = 10;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 11;
    // <p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>
    string ReplicationInstanceClass = 12;
    // <p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>
    string ReplicationInstanceIdentifier = 13;
    // The private IP address of the replication instance.
    string ReplicationInstancePrivateIpAddress = 14;
    // The private IP address of the replication instance.
    array ReplicationInstancePrivateIpAddresses = 15;
    // The public IP address of the replication instance.
    string ReplicationInstancePublicIpAddress = 16;
    // The public IP address of the replication instance.
    array ReplicationInstancePublicIpAddresses = 17;
    // The status of the replication instance.
    string ReplicationInstanceStatus = 18;
    // The subnet group for the replication instance.
    ReplicationSubnetGroup ReplicationSubnetGroup = 19;
    // The availability zone of the standby replication instance in a Multi-AZ deployment.
    string SecondaryAvailabilityZone = 20;
    // The VPC security group for the instance.
    array VpcSecurityGroups = 21;
}

repeated ReplicationInstance ReplicationInstanceList = 1

repeated string ReplicationInstancePrivateIpAddressList = 1

repeated string ReplicationInstancePublicIpAddressList = 1

message ReplicationPendingModifiedValues {
    // The amount of storage (in gigabytes) that is allocated for the replication instance.
    integer AllocatedStorage = 1;
    // The engine version number of the replication instance.
    string EngineVersion = 2;
    //  Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>.
    boolean MultiAZ = 3;
    // <p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>
    string ReplicationInstanceClass = 4;
}

message ReplicationSubnetGroup {
    // The description of the replication subnet group.
    string ReplicationSubnetGroupDescription = 1;
    // The identifier of the replication instance subnet group.
    string ReplicationSubnetGroupIdentifier = 2;
    // The status of the subnet group.
    string SubnetGroupStatus = 3;
    // The subnets that are in the subnet group.
    array Subnets = 4;
    // The ID of the VPC.
    string VpcId = 5;
}

message ReplicationSubnetGroupDoesNotCoverEnoughAZs {
    // <p/>
    string message = 1;
}

repeated ReplicationSubnetGroup ReplicationSubnetGroups = 1

message ReplicationTask {
    // The last error (failure) message generated for the replication instance.
    string LastFailureMessage = 1;
    // The type of migration.
    MigrationTypeValue MigrationType = 2;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 3;
    // The Amazon Resource Name (ARN) of the replication task.
    string ReplicationTaskArn = 4;
    // The date the replication task was created.
    string ReplicationTaskCreationDate = 5;
    // <p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>
    string ReplicationTaskIdentifier = 6;
    // The settings for the replication task.
    string ReplicationTaskSettings = 7;
    // The date the replication task is scheduled to start.
    string ReplicationTaskStartDate = 8;
    // The statistics for the task, including elapsed time, tables loaded, and table errors.
    ReplicationTaskStats ReplicationTaskStats = 9;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string SourceEndpointArn = 10;
    // The status of the replication task.
    string Status = 11;
    // The reason the replication task was stopped.
    string StopReason = 12;
    // Table mappings specified in the task.
    string TableMappings = 13;
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string TargetEndpointArn = 14;
}

repeated ReplicationTask ReplicationTaskList = 1

message ReplicationTaskStats {
    // The elapsed time of the task, in milliseconds.
    integer ElapsedTimeMillis = 1;
    // The percent complete for the full load migration task.
    integer FullLoadProgressPercent = 2;
    // The number of errors that have occurred during this task.
    integer TablesErrored = 3;
    // The number of tables loaded for this task.
    integer TablesLoaded = 4;
    // The number of tables currently loading for this task.
    integer TablesLoading = 5;
    // The number of tables queued for this task.
    integer TablesQueued = 6;
}

message ResourceAlreadyExistsFault {
    // <p/>
    string message = 1;
}

message ResourceNotFoundFault {
    // <p/>
    string message = 1;
}

message ResourceQuotaExceededFault {
    // <p/>
    string message = 1;
}

message S3Settings {
    //  An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/.
    string BucketFolder = 1;
    //  The name of the S3 bucket.
    string BucketName = 2;
    //  An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.
    CompressionTypeValue CompressionType = 3;
    //  The delimiter used to separate columns in the source files. The default is a comma.
    string CsvDelimiter = 4;
    //  The delimiter used to separate rows in the source files. The default is a carriage return (\n).
    string CsvRowDelimiter = 5;

    string ExternalTableDefinition = 6;
    //  The Amazon Resource Name (ARN) used by the service access IAM role.
    string ServiceAccessRoleArn = 7;
}

message SNSInvalidTopicFault {
    // <p/>
    string message = 1;
}

message SNSNoAuthorizationFault {
    // <p/>
    string message = 1;
}

repeated string SchemaList = 1



repeated string SourceIdsList = 1

enum SourceType {
    REPLICATIONINSTANCE = 0;
}

message StartReplicationTaskMessage {
    // The start time for the Change Data Capture (CDC) operation.
    string CdcStartTime = 1;
    // The Amazon Resource Number (ARN) of the replication task to be started.
    string ReplicationTaskArn = 2;
    // The type of replication task.
    StartReplicationTaskTypeValue StartReplicationTaskType = 3;
}

message StartReplicationTaskResponse {
    // The replication task started.
    ReplicationTask ReplicationTask = 1;
}

enum StartReplicationTaskTypeValue {
    STARTREPLICATION = 0;
    RESUMEPROCESSING = 1;
    RELOADTARGET = 2;
}

message StopReplicationTaskMessage {
    // The Amazon Resource Number(ARN) of the replication task to be stopped.
    string ReplicationTaskArn = 1;
}

message StopReplicationTaskResponse {
    // The replication task stopped.
    ReplicationTask ReplicationTask = 1;
}

message StorageQuotaExceededFault {
    // <p/>
    string message = 1;
}

message Subnet {
    // The Availability Zone of the subnet.
    AvailabilityZone SubnetAvailabilityZone = 1;
    // The subnet identifier.
    string SubnetIdentifier = 2;
    // The status of the subnet.
    string SubnetStatus = 3;
}

message SubnetAlreadyInUse {
    // <p/>
    string message = 1;
}

repeated string SubnetIdentifierList = 1

repeated Subnet SubnetList = 1

message SupportedEndpointType {
    // The type of endpoint.
    ReplicationEndpointTypeValue EndpointType = 1;
    // The database engine name. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER.
    string EngineName = 2;
    // Indicates if Change Data Capture (CDC) is supported.
    boolean SupportsCDC = 3;
}

repeated SupportedEndpointType SupportedEndpointTypeList = 1



repeated TableToReload TableListToReload = 1

message TableStatistics {
    // The Data Definition Language (DDL) used to build and modify the structure of your tables.
    integer Ddls = 1;
    // The number of delete actions performed on a table.
    integer Deletes = 2;
    // The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).
    integer FullLoadCondtnlChkFailedRows = 3;
    // The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).
    integer FullLoadErrorRows = 4;
    // The number of rows added during the Full Load operation.
    integer FullLoadRows = 5;
    // The number of insert actions performed on a table.
    integer Inserts = 6;
    // The last time the table was updated.
    string LastUpdateTime = 7;
    // The schema name.
    string SchemaName = 8;
    // The name of the table.
    string TableName = 9;
    // The state of the table.
    string TableState = 10;
    // The number of update actions performed on a table.
    integer Updates = 11;
}

repeated TableStatistics TableStatisticsList = 1

message TableToReload {
    // The schema name of the table to be reloaded.
    string SchemaName = 1;
    // The table name of the table to be reloaded.
    string TableName = 2;
}

message Tag {
    // A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with "aws:" or "dms:". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    string Key = 1;
    // A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with "aws:" or "dms:". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
    string Value = 2;
}

repeated Tag TagList = 1

message TestConnectionMessage {
    // The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    string EndpointArn = 1;
    // The Amazon Resource Name (ARN) of the replication instance.
    string ReplicationInstanceArn = 2;
}

message TestConnectionResponse {
    // The connection tested.
    Connection Connection = 1;
}

message UpgradeDependencyFailureFault {
    // <p/>
    string message = 1;
}



repeated string VpcSecurityGroupIdList = 1

message VpcSecurityGroupMembership {
    // The status of the VPC security group.
    string Status = 1;
    // The VPC security group Id.
    string VpcSecurityGroupId = 2;
}

repeated VpcSecurityGroupMembership VpcSecurityGroupMembershipList = 1















service AWSDatabaseMigrationServiceService {
    // Adds metadata tags to a DMS resource, including replication instance, endpoint, security group, and migration task. These tags can also be used with cost allocation reporting to track cost associated with DMS resources, or used in a Condition statement in an IAM policy for DMS.
    rpc Post(PostRequest) returns (AddTagsToResourceResponse) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Creates an endpoint using the provided settings.
    rpc Post#CreateEndpoint(Post#CreateEndpointRequest) returns (CreateEndpointResponse) {
      option (google.api.http) = {
        post: "//#CreateEndpoint"
        body: "body"
      };
    }
    // <p> Creates an AWS DMS event notification subscription. </p> <p>You can specify the type of source (<code>SourceType</code>) you want to be notified of, provide a list of AWS DMS source IDs (<code>SourceIds</code>) that triggers the events, and provide a list of event categories (<code>EventCategories</code>) for events you want to be notified of. If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType = replication-instance</code> and <code>SourceIdentifier = my-replinstance</code>, you will be notified of all the replication instance events for the specified source. If you specify a <code>SourceType</code> but don't specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your AWS DMS sources. If you don't specify either <code>SourceType</code> nor <code>SourceIdentifier</code>, you will be notified of events generated from all AWS DMS sources belonging to your customer account.</p> <p>For more information about AWS DMS events, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a> in the AWS Database MIgration Service User Guide.</p>
    rpc Post#CreateEventSubscription(Post#CreateEventSubscriptionRequest) returns (CreateEventSubscriptionResponse) {
      option (google.api.http) = {
        post: "//#CreateEventSubscription"
        body: "body"
      };
    }
    // Creates the replication instance using the specified parameters.
    rpc Post#CreateReplicationInstance(Post#CreateReplicationInstanceRequest) returns (CreateReplicationInstanceResponse) {
      option (google.api.http) = {
        post: "//#CreateReplicationInstance"
        body: "body"
      };
    }
    // Creates a replication subnet group given a list of the subnet IDs in a VPC.
    rpc Post#CreateReplicationSubnetGroup(Post#CreateReplicationSubnetGroupRequest) returns (CreateReplicationSubnetGroupResponse) {
      option (google.api.http) = {
        post: "//#CreateReplicationSubnetGroup"
        body: "body"
      };
    }
    // Creates a replication task using the specified parameters.
    rpc Post#CreateReplicationTask(Post#CreateReplicationTaskRequest) returns (CreateReplicationTaskResponse) {
      option (google.api.http) = {
        post: "//#CreateReplicationTask"
        body: "body"
      };
    }
    // Deletes the specified certificate.
    rpc Post#DeleteCertificate(Post#DeleteCertificateRequest) returns (DeleteCertificateResponse) {
      option (google.api.http) = {
        post: "//#DeleteCertificate"
        body: "body"
      };
    }
    // <p>Deletes the specified endpoint.</p> <note> <p>All tasks associated with the endpoint must be deleted before you can delete the endpoint.</p> </note> <p/>
    rpc Post#DeleteEndpoint(Post#DeleteEndpointRequest) returns (DeleteEndpointResponse) {
      option (google.api.http) = {
        post: "//#DeleteEndpoint"
        body: "body"
      };
    }
    //  Deletes an AWS DMS event subscription.
    rpc Post#DeleteEventSubscription(Post#DeleteEventSubscriptionRequest) returns (DeleteEventSubscriptionResponse) {
      option (google.api.http) = {
        post: "//#DeleteEventSubscription"
        body: "body"
      };
    }
    // <p>Deletes the specified replication instance.</p> <note> <p>You must delete any migration tasks that are associated with the replication instance before you can delete it.</p> </note> <p/>
    rpc Post#DeleteReplicationInstance(Post#DeleteReplicationInstanceRequest) returns (DeleteReplicationInstanceResponse) {
      option (google.api.http) = {
        post: "//#DeleteReplicationInstance"
        body: "body"
      };
    }
    // Deletes a subnet group.
    rpc Post#DeleteReplicationSubnetGroup(Post#DeleteReplicationSubnetGroupRequest) returns (DeleteReplicationSubnetGroupResponse) {
      option (google.api.http) = {
        post: "//#DeleteReplicationSubnetGroup"
        body: "body"
      };
    }
    // Deletes the specified replication task.
    rpc Post#DeleteReplicationTask(Post#DeleteReplicationTaskRequest) returns (DeleteReplicationTaskResponse) {
      option (google.api.http) = {
        post: "//#DeleteReplicationTask"
        body: "body"
      };
    }
    // <p>Lists all of the AWS DMS attributes for a customer account. The attributes include AWS DMS quotas for the account, such as the number of replication instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command does not take any parameters.</p>
    rpc Post#DescribeAccountAttributes(Post#DescribeAccountAttributesRequest) returns (DescribeAccountAttributesResponse) {
      option (google.api.http) = {
        post: "//#DescribeAccountAttributes"
        body: "body"
      };
    }
    // Provides a description of the certificate.
    rpc Post#DescribeCertificates(Post#DescribeCertificatesRequest) returns (DescribeCertificatesResponse) {
      option (google.api.http) = {
        post: "//#DescribeCertificates"
        body: "body"
      };
    }
    // Describes the status of the connections that have been made between the replication instance and an endpoint. Connections are created when you test an endpoint.
    rpc Post#DescribeConnections(Post#DescribeConnectionsRequest) returns (DescribeConnectionsResponse) {
      option (google.api.http) = {
        post: "//#DescribeConnections"
        body: "body"
      };
    }
    // Returns information about the type of endpoints available.
    rpc Post#DescribeEndpointTypes(Post#DescribeEndpointTypesRequest) returns (DescribeEndpointTypesResponse) {
      option (google.api.http) = {
        post: "//#DescribeEndpointTypes"
        body: "body"
      };
    }
    // Returns information about the endpoints for your account in the current region.
    rpc Post#DescribeEndpoints(Post#DescribeEndpointsRequest) returns (DescribeEndpointsResponse) {
      option (google.api.http) = {
        post: "//#DescribeEndpoints"
        body: "body"
      };
    }
    // Lists categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a> in the AWS Database Migration Service User Guide.
    rpc Post#DescribeEventCategories(Post#DescribeEventCategoriesRequest) returns (DescribeEventCategoriesResponse) {
      option (google.api.http) = {
        post: "//#DescribeEventCategories"
        body: "body"
      };
    }
    // <p>Lists all the event subscriptions for a customer account. The description of a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>. </p> <p>If you specify <code>SubscriptionName</code>, this action lists the description for that subscription.</p>
    rpc Post#DescribeEventSubscriptions(Post#DescribeEventSubscriptionsRequest) returns (DescribeEventSubscriptionsResponse) {
      option (google.api.http) = {
        post: "//#DescribeEventSubscriptions"
        body: "body"
      };
    }
    //  Lists events for a given source identifier and source type. You can also specify a start and end time. For more information on AWS DMS events, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a>.
    rpc Post#DescribeEvents(Post#DescribeEventsRequest) returns (DescribeEventsResponse) {
      option (google.api.http) = {
        post: "//#DescribeEvents"
        body: "body"
      };
    }
    // Returns information about the replication instance types that can be created in the specified region.
    rpc Post#DescribeOrderableReplicationInstances(Post#DescribeOrderableReplicationInstancesRequest) returns (DescribeOrderableReplicationInstancesResponse) {
      option (google.api.http) = {
        post: "//#DescribeOrderableReplicationInstances"
        body: "body"
      };
    }
    // Returns the status of the RefreshSchemas operation.
    rpc Post#DescribeRefreshSchemasStatus(Post#DescribeRefreshSchemasStatusRequest) returns (DescribeRefreshSchemasStatusResponse) {
      option (google.api.http) = {
        post: "//#DescribeRefreshSchemasStatus"
        body: "body"
      };
    }
    // Returns information about replication instances for your account in the current region.
    rpc Post#DescribeReplicationInstances(Post#DescribeReplicationInstancesRequest) returns (DescribeReplicationInstancesResponse) {
      option (google.api.http) = {
        post: "//#DescribeReplicationInstances"
        body: "body"
      };
    }
    // Returns information about the replication subnet groups.
    rpc Post#DescribeReplicationSubnetGroups(Post#DescribeReplicationSubnetGroupsRequest) returns (DescribeReplicationSubnetGroupsResponse) {
      option (google.api.http) = {
        post: "//#DescribeReplicationSubnetGroups"
        body: "body"
      };
    }
    // Returns information about replication tasks for your account in the current region.
    rpc Post#DescribeReplicationTasks(Post#DescribeReplicationTasksRequest) returns (DescribeReplicationTasksResponse) {
      option (google.api.http) = {
        post: "//#DescribeReplicationTasks"
        body: "body"
      };
    }
    // <p>Returns information about the schema for the specified endpoint.</p> <p/>
    rpc Post#DescribeSchemas(Post#DescribeSchemasRequest) returns (DescribeSchemasResponse) {
      option (google.api.http) = {
        post: "//#DescribeSchemas"
        body: "body"
      };
    }
    // Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted.
    rpc Post#DescribeTableStatistics(Post#DescribeTableStatisticsRequest) returns (DescribeTableStatisticsResponse) {
      option (google.api.http) = {
        post: "//#DescribeTableStatistics"
        body: "body"
      };
    }
    // Uploads the specified certificate.
    rpc Post#ImportCertificate(Post#ImportCertificateRequest) returns (ImportCertificateResponse) {
      option (google.api.http) = {
        post: "//#ImportCertificate"
        body: "body"
      };
    }
    // Lists all tags for an AWS DMS resource.
    rpc Post#ListTagsForResource(Post#ListTagsForResourceRequest) returns (ListTagsForResourceResponse) {
      option (google.api.http) = {
        post: "//#ListTagsForResource"
        body: "body"
      };
    }
    // Modifies the specified endpoint.
    rpc Post#ModifyEndpoint(Post#ModifyEndpointRequest) returns (ModifyEndpointResponse) {
      option (google.api.http) = {
        post: "//#ModifyEndpoint"
        body: "body"
      };
    }
    // Modifies an existing AWS DMS event notification subscription.
    rpc Post#ModifyEventSubscription(Post#ModifyEventSubscriptionRequest) returns (ModifyEventSubscriptionResponse) {
      option (google.api.http) = {
        post: "//#ModifyEventSubscription"
        body: "body"
      };
    }
    // <p>Modifies the replication instance to apply new settings. You can change one or more parameters by specifying these parameters and the new values in the request.</p> <p>Some settings are applied during the maintenance window.</p> <p/>
    rpc Post#ModifyReplicationInstance(Post#ModifyReplicationInstanceRequest) returns (ModifyReplicationInstanceResponse) {
      option (google.api.http) = {
        post: "//#ModifyReplicationInstance"
        body: "body"
      };
    }
    // Modifies the settings for the specified replication subnet group.
    rpc Post#ModifyReplicationSubnetGroup(Post#ModifyReplicationSubnetGroupRequest) returns (ModifyReplicationSubnetGroupResponse) {
      option (google.api.http) = {
        post: "//#ModifyReplicationSubnetGroup"
        body: "body"
      };
    }
    // <p>Modifies the specified replication task.</p> <p>You can't modify the task endpoints. The task must be stopped before you can modify it. </p> <p>For more information about AWS DMS tasks, see the AWS DMS user guide at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html"> Working with Migration Tasks </a> </p>
    rpc Post#ModifyReplicationTask(Post#ModifyReplicationTaskRequest) returns (ModifyReplicationTaskResponse) {
      option (google.api.http) = {
        post: "//#ModifyReplicationTask"
        body: "body"
      };
    }
    // Populates the schema for the specified endpoint. This is an asynchronous operation and can take several minutes. You can check the status of this operation by calling the DescribeRefreshSchemasStatus operation.
    rpc Post#RefreshSchemas(Post#RefreshSchemasRequest) returns (RefreshSchemasResponse) {
      option (google.api.http) = {
        post: "//#RefreshSchemas"
        body: "body"
      };
    }
    // Reloads the target database table with the source data.
    rpc Post#ReloadTables(Post#ReloadTablesRequest) returns (ReloadTablesResponse) {
      option (google.api.http) = {
        post: "//#ReloadTables"
        body: "body"
      };
    }
    // Removes metadata tags from a DMS resource.
    rpc Post#RemoveTagsFromResource(Post#RemoveTagsFromResourceRequest) returns (RemoveTagsFromResourceResponse) {
      option (google.api.http) = {
        post: "//#RemoveTagsFromResource"
        body: "body"
      };
    }
    // <p>Starts the replication task.</p> <p>For more information about AWS DMS tasks, see the AWS DMS user guide at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html"> Working with Migration Tasks </a> </p>
    rpc Post#StartReplicationTask(Post#StartReplicationTaskRequest) returns (StartReplicationTaskResponse) {
      option (google.api.http) = {
        post: "//#StartReplicationTask"
        body: "body"
      };
    }
    // <p>Stops the replication task.</p> <p/>
    rpc Post#StopReplicationTask(Post#StopReplicationTaskRequest) returns (StopReplicationTaskResponse) {
      option (google.api.http) = {
        post: "//#StopReplicationTask"
        body: "body"
      };
    }
    // Tests the connection between the replication instance and the endpoint.
    rpc Post#TestConnection(Post#TestConnectionRequest) returns (TestConnectionResponse) {
      option (google.api.http) = {
        post: "//#TestConnection"
        body: "body"
      };
    }
}
