swagger: '2.0'
schemes:
  - http
host: servicecatalog.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>AWS Service Catalog</fullname> <p> <b>Overview</b> </p> <p> <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> allows organizations to create and manage catalogs of IT services that are approved for use on AWS. This documentation provides reference material for the AWS Service Catalog end user API. To get the most out of this documentation, be familiar with the terminology discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog Concepts</a>.</p> <p> <i>Additional Resources</i> </p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">AWS Service Catalog Administrator Guide</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/servicecatalog/latest/userguide/introduction.html">AWS Service Catalog User Guide</a> </p> </li> </ul>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Service Catalog
  version: '2015-12-10'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: servicecatalog
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/servicecatalog/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Accepts an offer to share a portfolio.
      operationId: AcceptPortfolioShare
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AcceptPortfolioShareInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptPortfolioShareOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#AssociatePrincipalWithPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associates the specified principal ARN with the specified portfolio.
      operationId: AssociatePrincipalWithPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#AssociateProductWithPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associates a product with a portfolio.
      operationId: AssociateProductWithPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#AssociateTagOptionWithResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Associate a TagOption identifier with a resource identifier.
      operationId: AssociateTagOptionWithResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '485':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
  '/#CopyProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy the product to the same account or another account. You can copy the product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>'
      operationId: CopyProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CopyProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#CreateConstraint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Creates a new constraint. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/constraints.html">Using Constraints</a>.'
      operationId: CreateConstraint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateConstraintInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
  '/#CreatePortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new portfolio.
      operationId: CreatePortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#CreatePortfolioShare':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new portfolio share.
      operationId: CreatePortfolioShare
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioShareInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#CreateProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new product.
      operationId: CreateProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#CreateProvisioningArtifact':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new provisioning artifact for the specified product. This operation does not work with a product that has been shared with you.
      operationId: CreateProvisioningArtifact
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#CreateTagOption':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Create a new TagOption.
      operationId: CreateTagOption
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagOptionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
  '/#DeleteConstraint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified constraint.
      operationId: DeleteConstraint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConstraintInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#DeletePortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified portfolio. This operation does not work with a portfolio that has been shared with you or if it has products, users, constraints, or shared accounts associated with it.'
      operationId: DeletePortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#DeletePortfolioShare':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified portfolio share.
      operationId: DeletePortfolioShare
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioShareInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DeleteProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified product. This operation does not work with a product that has been shared with you or is associated with a portfolio. '
      operationId: DeleteProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#DeleteProvisioningArtifact':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified provisioning artifact. This operation does not work on a provisioning artifact associated with a product that has been shared with you, or on the last provisioning artifact associated with a product (a product must have at least one provisioning artifact).'
      operationId: DeleteProvisioningArtifact
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#DescribeConstraint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves detailed information for a specified constraint.
      operationId: DescribeConstraint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConstraintInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeCopyProductStatus':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the status of the specified copy product operation.
      operationId: DescribeCopyProductStatus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribePortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves detailed information and any tags associated with the specified portfolio.
      operationId: DescribePortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribePortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about a specified product.</p> <p>This operation is functionally identical to <a>DescribeProductView</a> except that it takes as input <code>ProductId</code> instead of <code>ProductViewId</code>.</p>
      operationId: DescribeProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#DescribeProductAsAdmin':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves information about a specified product, run with administrator access.'
      operationId: DescribeProductAsAdmin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductAsAdminInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeProductView':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about a specified product.</p> <p>This operation is functionally identical to <a>DescribeProduct</a> except that it takes as input <code>ProductViewId</code> instead of <code>ProductId</code>.</p>
      operationId: DescribeProductView
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductViewInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductViewOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#DescribeProvisionedProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieve detailed information about the provisioned product.
      operationId: DescribeProvisionedProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisionedProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeProvisioningArtifact':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves detailed information about the specified provisioning artifact.
      operationId: DescribeProvisioningArtifact
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeProvisioningParameters':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Provides information about parameters required to provision a specified product in a specified manner. Use this operation to obtain the list of <code>ProvisioningArtifactParameters</code> parameters available to call the <a>ProvisionProduct</a> operation for the specified product.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to the <code>ProvisionProduct</code> operation, do not include conflicted TagOption keys as tags. Calls to <code>ProvisionProduct</code> with empty TagOption values cause the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i> ". Calls to <code>ProvisionProduct</code> with conflicted TagOption keys automatically tag the provisioned product with the conflicted keys with the value "<code>sc-tagoption-conflict-portfolioId-productId</code>".</p>'
      operationId: DescribeProvisioningParameters
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeRecord':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves a paginated list of the full details of a specific request. Use this operation after calling a request operation (<a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). '
      operationId: DescribeRecord
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecordInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DescribeTagOption':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes a TagOption.
      operationId: DescribeTagOption
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagOptionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DisassociatePrincipalFromPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates a previously associated principal ARN from a specified portfolio.
      operationId: DisassociatePrincipalFromPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#DisassociateProductFromPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Disassociates the specified product from the specified portfolio. '
      operationId: DisassociateProductFromPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#DisassociateTagOptionFromResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Disassociates a TagOption from a resource.
      operationId: DisassociateTagOptionFromResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#ListAcceptedPortfolioShares':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists details of all portfolios for which sharing was accepted by this account.
      operationId: ListAcceptedPortfolioShares
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListConstraintsForPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves detailed constraint information for the specified portfolio and product.
      operationId: ListConstraintsForPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListLaunchPaths':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all paths to a specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.'
      operationId: ListLaunchPaths
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListLaunchPathsInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchPathsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#ListPortfolioAccess':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the account IDs that have been authorized sharing of the specified portfolio.
      operationId: ListPortfolioAccess
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfolioAccessInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#ListPortfolios':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all portfolios in the catalog.
      operationId: ListPortfolios
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListPortfoliosForProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all portfolios that the specified product is associated with.
      operationId: ListPortfoliosForProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosForProductInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosForProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#ListPrincipalsForPortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all principal ARNs associated with the specified portfolio.
      operationId: ListPrincipalsForPortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListProvisioningArtifacts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists all provisioning artifacts associated with the specified product.
      operationId: ListProvisioningArtifacts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListRecordHistory':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all performed requests, in the form of RecordDetails objects that are filtered as specified.'
      operationId: ListRecordHistory
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRecordHistoryInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecordHistoryOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListResourcesForTagOption':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists resources associated with a TagOption.
      operationId: ListResourcesForTagOption
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ListTagOptions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists detailed TagOptions information.
      operationId: ListTagOptions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTagOptionsInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagOptionsOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#ProvisionProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Requests a <i>provision</i> of a specified product. A <i>provisioned product</i> is a resourced instance for a product. For example, provisioning a CloudFormation-template-backed product results in launching a CloudFormation stack and all the underlying resources that come with it. </p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation. The error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>" indicates that your request contains a tag which has a tag key but no corresponding tag value (value is empty or null). Your call may have included values returned from a <code>DescribeProvisioningParameters</code> call that resulted in a TagOption key with an empty list. This happens when TagOption keys are in conflict. For more information, see <a>DescribeProvisioningParameters</a>.</p>'
      operationId: ProvisionProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProvisionProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
  '/#RejectPortfolioShare':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Rejects an offer to share a portfolio.
      operationId: RejectPortfolioShare
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RejectPortfolioShareInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectPortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#ScanProvisionedProducts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a paginated list of all the ProvisionedProduct objects that are currently available (not terminated). '
      operationId: ScanProvisionedProducts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScanProvisionedProductsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScanProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#SearchProducts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Returns a paginated list all of the <code>Products</code> objects to which the caller has access. </p> <p>The output of this operation can be used as input for other operations, such as <a>DescribeProductView</a>.</p>'
      operationId: SearchProducts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#SearchProductsAsAdmin':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Retrieves summary and status information about all products created within the caller''s account. If a portfolio ID is provided, this operation retrieves information for only those products that are associated with the specified portfolio.'
      operationId: SearchProductsAsAdmin
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsAsAdminInput'
        - description: Pagination limit
          in: query
          name: PageSize
          required: false
          type: string
        - description: Pagination token
          in: query
          name: PageToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#TerminateProvisionedProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Requests termination of an existing ProvisionedProduct object. If there are <code>Tags</code> associated with the object, they are terminated when the ProvisionedProduct object is terminated. </p> <p>This operation does not delete any records associated with the ProvisionedProduct object.</p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation.</p>'
      operationId: TerminateProvisionedProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TerminateProvisionedProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#UpdateConstraint':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing constraint.
      operationId: UpdateConstraint
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConstraintInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#UpdatePortfolio':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the specified portfolio's details. This operation does not work with a product that has been shared with you.
      operationId: UpdatePortfolio
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePortfolioInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#UpdateProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing product.
      operationId: UpdateProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
  '/#UpdateProvisionedProduct':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Requests updates to the configuration of an existing ProvisionedProduct object. If there are tags associated with the object, they cannot be updated or added with this operation. Depending on the specific updates requested, this operation may update with no interruption, with some interruption, or replace the ProvisionedProduct object entirely. </p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation.</p>'
      operationId: UpdateProvisionedProduct
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisionedProductInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
  '/#UpdateProvisioningArtifact':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing provisioning artifact's information. This operation does not work on a provisioning artifact associated with a product that has been shared with you.
      operationId: UpdateProvisioningArtifact
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
  '/#UpdateTagOption':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates an existing TagOption.
      operationId: UpdateTagOption
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTagOptionInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '483':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
definitions:
  AcceptLanguage:
    type: string
  AcceptPortfolioShareInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
    type: object
  AcceptPortfolioShareOutput:
    properties: {}
    type: object
  AccessLevelFilter:
    description: The access level to limit results.
    properties:
      Key:
        $ref: '#/definitions/AccessLevelFilterKey'
        description: <p>Specifies the access level.</p> <p> <code>Account</code> allows results at the account level. </p> <p> <code>Role</code> allows results based on the federated role of the specified user.</p> <p> <code>User</code> allows results limited to the specified user. </p>
      Value:
        $ref: '#/definitions/AccessLevelFilterValue'
        description: Specifies the user to which the access level applies. A value of <code>Self</code> is currently supported.
    type: object
  AccessLevelFilterKey:
    enum:
      - Account
      - Role
      - User
    type: string
  AccessLevelFilterValue:
    type: string
  AccountId:
    pattern: '^[0-9]{12}$'
    type: string
  AccountIds:
    items:
      $ref: '#/definitions/AccountId'
    type: array
  AddTags:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 20
    type: array
  AllowedValue:
    type: string
  AllowedValues:
    items:
      $ref: '#/definitions/AllowedValue'
    type: array
  ApproximateCount:
    type: integer
  AssociatePrincipalWithPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: 'The principal type. Must be <code>IAM</code> '
    required:
      - PortfolioId
      - PrincipalARN
      - PrincipalType
    type: object
  AssociatePrincipalWithPortfolioOutput:
    properties: {}
    type: object
  AssociateProductWithPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      SourcePortfolioId:
        $ref: '#/definitions/Id'
        description: The identifier of the source portfolio to use with this association.
    required:
      - ProductId
      - PortfolioId
    type: object
  AssociateProductWithPortfolioOutput:
    properties: {}
    type: object
  AssociateTagOptionWithResourceInput:
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource identifier.
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
    required:
      - ResourceId
      - TagOptionId
    type: object
  AssociateTagOptionWithResourceOutput:
    properties: {}
    type: object
  AttributeValue:
    type: string
  ConstraintDescription:
    maxLength: 2000
    type: string
  ConstraintDetail:
    description: Detailed constraint information.
    properties:
      ConstraintId:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
      Owner:
        $ref: '#/definitions/AccountId'
        description: The owner of the constraint.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: The type of the constraint.
    type: object
  ConstraintDetails:
    items:
      $ref: '#/definitions/ConstraintDetail'
    type: array
  ConstraintParameters:
    type: string
  ConstraintSummaries:
    items:
      $ref: '#/definitions/ConstraintSummary'
    type: array
  ConstraintSummary:
    description: An administrator-specified constraint to apply when provisioning a product.
    properties:
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: 'The type of the constraint. '
    type: object
  ConstraintType:
    maxLength: 1024
    minLength: 1
    type: string
  CopyOption:
    enum:
      - CopyTags
    type: string
  CopyOptions:
    items:
      $ref: '#/definitions/CopyOption'
    type: array
  CopyProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      CopyOptions:
        $ref: '#/definitions/CopyOptions'
        description: 'The copy options. If the value is <code>CopyTags</code>, the tags from the source product are copied to the target product.'
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: ' A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request. '
      SourceProductArn:
        $ref: '#/definitions/ProductArn'
        description: The Amazon Resource Name (ARN) of the source product.
      SourceProvisioningArtifactIdentifiers:
        $ref: '#/definitions/SourceProvisioningArtifactProperties'
        description: 'The IDs of the product versions to copy. By default, all provisioning artifacts are copied.'
      TargetProductId:
        $ref: '#/definitions/Id'
        description: 'The ID of the target product. By default, a new product is created.'
      TargetProductName:
        $ref: '#/definitions/ProductViewName'
        description: A name for the target product. The default is the name of the source product.
    required:
      - SourceProductArn
      - IdempotencyToken
    type: object
  CopyProductOutput:
    properties:
      CopyProductToken:
        $ref: '#/definitions/Id'
        description: A unique token to pass to <code>DescribeCopyProductStatus</code> to track the progress of the operation.
    type: object
  CopyProductStatus:
    enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
    type: string
  CreateConstraintInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.'
      Parameters:
        $ref: '#/definitions/ConstraintParameters'
        description: '<p>The constraint parameters. Expected values vary depending on which <b>Type</b> is specified. For more information, see the Examples section.</p> <p>For Type <code>LAUNCH</code>, the <code>RoleArn</code> property is required. </p> <p>For Type <code>NOTIFICATION</code>, the <code>NotificationArns</code> property is required.</p> <p>For Type <code>TEMPLATE</code>, the <code>Rules</code> property is required.</p>'
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: 'The type of the constraint. Case-sensitive valid values are: <code>LAUNCH</code>, <code>NOTIFICATION</code>, or <code>TEMPLATE</code>. '
    required:
      - PortfolioId
      - ProductId
      - Parameters
      - Type
      - IdempotencyToken
    type: object
  CreateConstraintOutput:
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: The resulting detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The resulting constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  CreatePortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The text description of the portfolio.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.'
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
      Tags:
        $ref: '#/definitions/AddTags'
        description: Tags to associate with the new portfolio.
    required:
      - DisplayName
      - ProviderName
      - IdempotencyToken
    type: object
  CreatePortfolioOutput:
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: The resulting detailed portfolio information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags successfully associated with the new portfolio.
    type: object
  CreatePortfolioShareInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The account ID with which to share the portfolio.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
      - AccountId
    type: object
  CreatePortfolioShareOutput:
    properties: {}
    type: object
  CreateProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The text description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The distributor of the product.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.'
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The owner of the product.
      ProductType:
        $ref: '#/definitions/ProductType'
        description: The type of the product to create.
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: Parameters for the provisioning artifact.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: Support information about the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: Contact email for product support.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: Contact URL for product support.
      Tags:
        $ref: '#/definitions/AddTags'
        description: Tags to associate with the new product.
    required:
      - Name
      - Owner
      - ProductType
      - ProvisioningArtifactParameters
      - IdempotencyToken
    type: object
  CreateProductOutput:
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: The resulting detailed product view information.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags successfully associated with the new product.
    type: object
  CreateProvisioningArtifactInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.'
      Parameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: The parameters to use when creating the new provisioning artifact.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
    required:
      - ProductId
      - Parameters
      - IdempotencyToken
    type: object
  CreateProvisioningArtifactOutput:
    properties:
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the creation request for the provisioning artifact.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  CreateTagOptionInput:
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The TagOption value.
    required:
      - Key
      - Value
    type: object
  CreateTagOptionOutput:
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: The resulting detailed TagOption information.
    type: object
  CreatedTime:
    format: date-time
    type: string
  CreationTime:
    format: date-time
    type: string
  DefaultValue:
    type: string
  DeleteConstraintInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint to delete.
    required:
      - Id
    type: object
  DeleteConstraintOutput:
    properties: {}
    type: object
  DeletePortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for the delete request.
    required:
      - Id
    type: object
  DeletePortfolioOutput:
    properties: {}
    type: object
  DeletePortfolioShareInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The account ID associated with the share to delete.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
      - AccountId
    type: object
  DeletePortfolioShareOutput:
    properties: {}
    type: object
  DeleteProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for the delete request.
    required:
      - Id
    type: object
  DeleteProductOutput:
    properties: {}
    type: object
  DeleteProvisioningArtifactInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact for the delete request. This is sometimes referred to as the product version.
    required:
      - ProductId
      - ProvisioningArtifactId
    type: object
  DeleteProvisioningArtifactOutput:
    properties: {}
    type: object
  DescribeConstraintInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
    required:
      - Id
    type: object
  DescribeConstraintOutput:
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: Detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The current parameters associated with the specified constraint.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  DescribeCopyProductStatusInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      CopyProductToken:
        $ref: '#/definitions/Id'
        description: The token returned from the call to <code>CopyProduct</code> that initiated the operation.
    required:
      - CopyProductToken
    type: object
  DescribeCopyProductStatusOutput:
    properties:
      CopyProductStatus:
        $ref: '#/definitions/CopyProductStatus'
        description: The status of the copy product operation.
      StatusDetail:
        $ref: '#/definitions/StatusDetail'
        description: The status message.
      TargetProductId:
        $ref: '#/definitions/Id'
        description: The ID of the copied product.
    type: object
  DescribePortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for which to retrieve information.
    required:
      - Id
    type: object
  DescribePortfolioOutput:
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: Detailed portfolio information.
      TagOptions:
        $ref: '#/definitions/TagOptionDetails'
        description: TagOptions associated with the portfolio.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the portfolio.
    type: object
  DescribeProductAsAdminInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for which to retrieve information.
    required:
      - Id
    type: object
  DescribeProductAsAdminOutput:
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: Detailed product view information.
      ProvisioningArtifactSummaries:
        $ref: '#/definitions/ProvisioningArtifactSummaries'
        description: A list of provisioning artifact summaries for the product.
      TagOptions:
        $ref: '#/definitions/TagOptionDetails'
        description: List of TagOptions associated with the product.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the product.
    type: object
  DescribeProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The <code>ProductId</code> of the product to describe.
    required:
      - Id
    type: object
  DescribeProductOutput:
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: A list of provisioning artifact objects for the specified product. The <code>ProvisioningArtifacts</code> parameter represent the ways the specified product can be provisioned.
    type: object
  DescribeProductViewInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The <code>ProductViewId</code> of the product to describe.
    required:
      - Id
    type: object
  DescribeProductViewOutput:
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: A list of provisioning artifact objects for the specified product. The <code>ProvisioningArtifacts</code> represent the ways in which the specified product can be provisioned.
    type: object
  DescribeProvisionedProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The provisioned product identifier.
    required:
      - Id
    type: object
  DescribeProvisionedProductOutput:
    properties:
      ProvisionedProductDetail:
        $ref: '#/definitions/ProvisionedProductDetail'
        description: Detailed provisioned product information.
    type: object
  DescribeProvisioningArtifactInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact. This is sometimes referred to as the product version.
      Verbose:
        $ref: '#/definitions/Verbose'
        description: Enable a verbose level of details for the provisioning artifact.
    required:
      - ProvisioningArtifactId
      - ProductId
    type: object
  DescribeProvisioningArtifactOutput:
    properties:
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Detailed provisioning artifact information.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  DescribeProvisioningParametersInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PathId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the path for this product''s provisioning. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
    required:
      - ProductId
      - ProvisioningArtifactId
    type: object
  DescribeProvisioningParametersOutput:
    properties:
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: The list of constraint summaries that apply to provisioning this product.
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactParameters'
        description: The list of parameters used to successfully provision the product. Each parameter includes a list of allowable values and additional metadata about each parameter.
      TagOptions:
        $ref: '#/definitions/TagOptionSummaries'
        description: List of TagOptions associated with the provisioned provisioning parameters.
      UsageInstructions:
        $ref: '#/definitions/UsageInstructions'
        description: 'Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.'
    type: object
  DescribeRecordInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The record identifier of the ProvisionedProduct object for which to retrieve output information. This is the <code>RecordDetail.RecordId</code> obtained from the request operation's response.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
    required:
      - Id
    type: object
  DescribeRecordOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: 'Detailed record information for the specified product. '
      RecordOutputs:
        $ref: '#/definitions/RecordOutputs'
        description: 'A list of outputs for the specified Product object created as the result of a request. For example, a CloudFormation-backed product that creates an S3 bucket would have an output for the S3 bucket URL.'
    type: object
  DescribeTagOptionInput:
    properties:
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The identifier of the TagOption.
    required:
      - Id
    type: object
  DescribeTagOptionOutput:
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: The resulting detailed TagOption information.
    type: object
  Description:
    type: string
  DisassociatePrincipalFromPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
    required:
      - PortfolioId
      - PrincipalARN
    type: object
  DisassociatePrincipalFromPortfolioOutput:
    properties: {}
    type: object
  DisassociateProductFromPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
    required:
      - ProductId
      - PortfolioId
    type: object
  DisassociateProductFromPortfolioOutput:
    properties: {}
    type: object
  DisassociateTagOptionFromResourceInput:
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier of the resource from which to disassociate the TagOption.
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: Identifier of the TagOption to disassociate from the resource.
    required:
      - ResourceId
      - TagOptionId
    type: object
  DisassociateTagOptionFromResourceOutput:
    properties: {}
    type: object
  DuplicateResourceException:
    description: The specified resource is a duplicate.
    properties: {}
    type: object
  ErrorCode:
    type: string
  ErrorDescription:
    type: string
  HasDefaultPath:
    type: boolean
  Id:
    maxLength: 100
    minLength: 1
    type: string
  IdempotencyToken:
    maxLength: 128
    minLength: 1
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    type: string
  IgnoreErrors:
    type: boolean
  InstructionType:
    type: string
  InstructionValue:
    type: string
  InvalidParametersException:
    description: One or more parameters provided to the operation are invalid.
    properties: {}
    type: object
  InvalidStateException:
    description: An attempt was made to modify a resource that is in an invalid state. Inspect the resource you are using for this operation to ensure that all resource states are valid before retrying the operation.
    properties: {}
    type: object
  LastRequestId:
    type: string
  LaunchPathSummaries:
    items:
      $ref: '#/definitions/LaunchPathSummary'
    type: array
  LaunchPathSummary:
    description: Summary information about a path for a user to have access to a specified product.
    properties:
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: List of constraints on the portfolio-product relationship.
      Id:
        $ref: '#/definitions/Id'
        description: The unique identifier of the product path.
      Name:
        $ref: '#/definitions/PortfolioName'
        description: Corresponds to the name of the portfolio to which the user was assigned.
      Tags:
        $ref: '#/definitions/Tags'
        description: List of tags used by this launch path.
    type: object
  LimitExceededException:
    description: The current limits of the service would have been exceeded by this operation. Reduce the resource use or increase the service limits and retry the operation.
    properties: {}
    type: object
  ListAcceptedPortfolioSharesInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
    type: object
  ListAcceptedPortfolioSharesOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
    type: object
  ListConstraintsForPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
    required:
      - PortfolioId
    type: object
  ListConstraintsForPortfolioOutput:
    properties:
      ConstraintDetails:
        $ref: '#/definitions/ConstraintDetails'
        description: List of detailed constraint information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  ListLaunchPathsInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier. Identifies the product for which to retrieve <code>LaunchPathSummaries</code> information.
    required:
      - ProductId
    type: object
  ListLaunchPathsOutput:
    properties:
      LaunchPathSummaries:
        $ref: '#/definitions/LaunchPathSummaries'
        description: List of launch path information summaries for the specified <code>PageToken</code>.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  ListPortfolioAccessInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
    type: object
  ListPortfolioAccessOutput:
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: List of account IDs associated with access to the portfolio.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    type: object
  ListPortfoliosForProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
    required:
      - ProductId
    type: object
  ListPortfoliosForProductOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
    type: object
  ListPortfoliosInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
    type: object
  ListPortfoliosOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
    type: object
  ListPrincipalsForPortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
    type: object
  ListPrincipalsForPortfolioOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      Principals:
        $ref: '#/definitions/Principals'
        description: The IAM principals (users or roles) associated with the portfolio.
    type: object
  ListProvisioningArtifactsInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
    required:
      - ProductId
    type: object
  ListProvisioningArtifactsOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      ProvisioningArtifactDetails:
        $ref: '#/definitions/ProvisioningArtifactDetails'
        description: List of detailed provisioning artifact information objects.
    type: object
  ListRecordHistoryInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: 'The access level for obtaining results. If left unspecified, <code>User</code> level access is used.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      SearchFilter:
        $ref: '#/definitions/ListRecordHistorySearchFilter'
        description: 'The filter to limit search results. '
    type: object
  ListRecordHistoryOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      RecordDetails:
        $ref: '#/definitions/RecordDetails'
        description: 'A list of record detail objects, listed in reverse chronological order.'
    type: object
  ListRecordHistorySearchFilter:
    description: The search filter to limit results when listing request history records.
    properties:
      Key:
        $ref: '#/definitions/SearchFilterKey'
        description: The filter key.
      Value:
        $ref: '#/definitions/SearchFilterValue'
        description: The filter value for <code>Key</code>.
    type: object
  ListResourcesForTagOptionInput:
    properties:
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Resource type.
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: Identifier of the TagOption.
    required:
      - TagOptionId
    type: object
  ListResourcesForTagOptionOutput:
    properties:
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      ResourceDetails:
        $ref: '#/definitions/ResourceDetails'
        description: The resulting detailed resource information.
    type: object
  ListTagOptionsFilters:
    description: The ListTagOptions filters.
    properties:
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The ListTagOptionsFilters active state.
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The ListTagOptionsFilters key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The ListTagOptionsFilters value.
    type: object
  ListTagOptionsInput:
    properties:
      Filters:
        $ref: '#/definitions/ListTagOptionsFilters'
        description: 'The list of filters with which to limit search results. If no search filters are specified, the output is all TagOptions. '
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
    type: object
  ListTagOptionsOutput:
    properties:
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      TagOptionDetails:
        $ref: '#/definitions/TagOptionDetails'
        description: The resulting detailed TagOption information.
    type: object
  NoEcho:
    type: boolean
  NotificationArn:
    maxLength: 1224
    minLength: 1
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    type: string
  NotificationArns:
    items:
      $ref: '#/definitions/NotificationArn'
    maxItems: 5
    type: array
  OutputKey:
    type: string
  OutputValue:
    type: string
  PageSize:
    maximum: 20
    minimum: 0
    type: integer
  PageToken:
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
    type: string
  ParameterConstraints:
    description: The constraints that the administrator has put on the parameter.
    properties:
      AllowedValues:
        $ref: '#/definitions/AllowedValues'
        description: The values that the administrator has allowed for the parameter.
    type: object
  ParameterKey:
    maxLength: 1000
    minLength: 1
    type: string
  ParameterType:
    type: string
  ParameterValue:
    maxLength: 4096
    type: string
  PortfolioDescription:
    maxLength: 2000
    type: string
  PortfolioDetail:
    description: Detailed portfolio information.
    properties:
      ARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN assigned to the portfolio.
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC timestamp of the creation time.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The text description of the portfolio.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier for the portfolio.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
    type: object
  PortfolioDetails:
    items:
      $ref: '#/definitions/PortfolioDetail'
    type: array
  PortfolioDisplayName:
    maxLength: 100
    minLength: 1
    type: string
  PortfolioName:
    type: string
  Principal:
    description: A principal's ARN and type.
    properties:
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: 'The principal type. Must be <code>IAM</code> '
    type: object
  PrincipalARN:
    maxLength: 1000
    minLength: 1
    type: string
  PrincipalType:
    enum:
      - IAM
    type: string
  Principals:
    items:
      $ref: '#/definitions/Principal'
    type: array
  ProductArn:
    maxLength: 1224
    minLength: 1
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    type: string
  ProductSource:
    enum:
      - ACCOUNT
    type: string
  ProductType:
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE
    type: string
  ProductViewAggregationType:
    type: string
  ProductViewAggregationValue:
    description: 'A single product view aggregation value/count pair, containing metadata about each product to which the calling user has access.'
    properties:
      ApproximateCount:
        $ref: '#/definitions/ApproximateCount'
        description: An approximate count of the products that match the value.
      Value:
        $ref: '#/definitions/AttributeValue'
        description: The value of the product view aggregation.
    type: object
  ProductViewAggregationValues:
    items:
      $ref: '#/definitions/ProductViewAggregationValue'
    type: array
  ProductViewAggregations:
    items:
      properties:
        key:
          $ref: '#/definitions/ProductViewAggregationType'
        value:
          $ref: '#/definitions/ProductViewAggregationValues'
      type: object
    type: array
  ProductViewDetail:
    description: Detailed product view information.
    properties:
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
      ProductARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN associated with the product.
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product view.
      Status:
        $ref: '#/definitions/Status'
        description: '<p>Current status of the product.</p> <p> <code>AVAILABLE</code> - Product is available for use.</p> <p> <code>CREATING</code> - Creation of product started, not ready for use.</p> <p> <code>FAILED</code> - Action on product failed.</p>'
    type: object
  ProductViewDetails:
    items:
      $ref: '#/definitions/ProductViewDetail'
    type: array
  ProductViewDistributor:
    type: string
  ProductViewFilterBy:
    enum:
      - FullTextSearch
      - Owner
      - ProductType
      - SourceProductId
    type: string
  ProductViewFilterValue:
    type: string
  ProductViewFilterValues:
    items:
      $ref: '#/definitions/ProductViewFilterValue'
    type: array
  ProductViewFilters:
    items:
      properties:
        key:
          $ref: '#/definitions/ProductViewFilterBy'
        value:
          $ref: '#/definitions/ProductViewFilterValues'
      type: object
    type: array
  ProductViewName:
    type: string
  ProductViewOwner:
    type: string
  ProductViewShortDescription:
    type: string
  ProductViewSortBy:
    enum:
      - Title
      - VersionCount
      - CreationDate
    type: string
  ProductViewSummaries:
    items:
      $ref: '#/definitions/ProductViewSummary'
    type: array
  ProductViewSummary:
    description: The summary metadata about the specified product.
    properties:
      Distributor:
        $ref: '#/definitions/ProductViewDistributor'
        description: The distributor of the product. Contact the product administrator for the significance of this value.
      HasDefaultPath:
        $ref: '#/definitions/HasDefaultPath'
        description: 'A value of <code>false</code> indicates that the product does not have a default path, while a value of <code>true</code> indicates that it does. If it''s false, call <a>ListLaunchPaths</a> to disambiguate between paths. If true, <a>ListLaunchPaths</a> is not required, and the output of the <a>ProductViewSummary</a> operation can be used directly with <a>DescribeProvisioningParameters</a>.'
      Id:
        $ref: '#/definitions/Id'
        description: The product view identifier.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The owner of the product. Contact the product administrator for the significance of this value.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ShortDescription:
        $ref: '#/definitions/ProductViewShortDescription'
        description: Short description of the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The description of the support for this Product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The email contact information to obtain support for this Product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The URL information to obtain support for this Product.
      Type:
        $ref: '#/definitions/ProductType'
        description: 'The product type. Contact the product administrator for the significance of this value. If this value is <code>MARKETPLACE</code>, the product was created by AWS Marketplace.'
    type: object
  ProviderName:
    maxLength: 20
    minLength: 1
    type: string
  ProvisionProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      NotificationArns:
        $ref: '#/definitions/NotificationArns'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the path for this product''s provisioning. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'An idempotency token that uniquely identifies the provisioning request. '
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: A user-friendly name to identify the ProvisionedProduct object. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
      ProvisioningParameters:
        $ref: '#/definitions/ProvisioningParameters'
        description: Parameters specified by the administrator that are required for provisioning the product.
      Tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to use as provisioning options.
    required:
      - ProductId
      - ProvisioningArtifactId
      - ProvisionedProductName
      - ProvisionToken
    type: object
  ProvisionProductOutput:
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: 'The detailed result of the <a>ProvisionProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object of the request, and a list of any errors that the request encountered. '
    type: object
  ProvisionedProductDetail:
    description: Detailed information about a ProvisionedProduct object.
    properties:
      Arn:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The ARN associated with the ProvisionedProduct object.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
      Id:
        $ref: '#/definitions/ProvisionedProductId'
        description: The identifier of the ProvisionedProduct object.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.'
      LastRecordId:
        $ref: '#/definitions/LastRequestId'
        description: The record identifier of the last request performed on this ProvisionedProduct object.
      Name:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The user-friendly name of the ProvisionedProduct object.
      Status:
        $ref: '#/definitions/ProvisionedProductStatus'
        description: '<p>The current status of the ProvisionedProduct.</p> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent action request succeeded and completed.</p> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed may or may not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version. </p> <p> <code>ERROR</code> - Something unexpected happened such that the provisioned product exists but the stack is not running. For example, CloudFormation received an invalid parameter value and could not launch the stack.</p>'
      StatusMessage:
        $ref: '#/definitions/ProvisionedProductStatusMessage'
        description: The current status message of the ProvisionedProduct.
      Type:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of the ProvisionedProduct object.
    type: object
  ProvisionedProductDetails:
    items:
      $ref: '#/definitions/ProvisionedProductDetail'
    type: array
  ProvisionedProductId:
    type: string
  ProvisionedProductName:
    maxLength: 128
    minLength: 1
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*'
    type: string
  ProvisionedProductNameOrArn:
    maxLength: 1224
    minLength: 1
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    type: string
  ProvisionedProductStatus:
    enum:
      - AVAILABLE
      - UNDER_CHANGE
      - TAINTED
      - ERROR
    type: string
  ProvisionedProductStatusMessage:
    type: string
  ProvisionedProductType:
    type: string
  ProvisioningArtifact:
    description: Contains information indicating the ways in which a product can be provisioned.
    properties:
      CreatedTime:
        $ref: '#/definitions/ProvisioningArtifactCreatedTime'
        description: The UTC timestamp of the creation time.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The text description of the artifact.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier for the artifact. This is sometimes referred to as the product version.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the artifact.
    type: object
  ProvisioningArtifactCreatedTime:
    format: date-time
    type: string
  ProvisioningArtifactDescription:
    type: string
  ProvisioningArtifactDetail:
    description: Detailed provisioning artifact information.
    properties:
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC timestamp of the creation time.
      Description:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The text description of the provisioning artifact.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact. This is sometimes referred to as the product version.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name assigned to the provisioning artifact.
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: '<p>The type of the provisioning artifact. The following provisioning artifact types are used by AWS Marketplace products:</p> <p> <code>MARKETPLACE_AMI</code> - AMI products.</p> <p> <code>MARKETPLACE_CAR</code> - CAR (Cluster and AWS Resources) products.</p>'
    type: object
  ProvisioningArtifactDetails:
    items:
      $ref: '#/definitions/ProvisioningArtifactDetail'
    type: array
  ProvisioningArtifactInfo:
    items:
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactInfoKey'
        value:
          $ref: '#/definitions/ProvisioningArtifactInfoValue'
      type: object
    maxItems: 100
    minItems: 1
    type: array
  ProvisioningArtifactInfoKey:
    type: string
  ProvisioningArtifactInfoValue:
    type: string
  ProvisioningArtifactName:
    type: string
  ProvisioningArtifactParameter:
    description: 'A parameter used to successfully provision the product. This value includes a list of allowable values and additional metadata. '
    properties:
      DefaultValue:
        $ref: '#/definitions/DefaultValue'
        description: The default value for this parameter.
      Description:
        $ref: '#/definitions/Description'
        description: The text description of the parameter.
      IsNoEcho:
        $ref: '#/definitions/NoEcho'
        description: 'If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.'
      ParameterConstraints:
        $ref: '#/definitions/ParameterConstraints'
        description: The list of constraints that the administrator has put on the parameter.
      ParameterKey:
        $ref: '#/definitions/ParameterKey'
        description: 'The parameter key. '
      ParameterType:
        $ref: '#/definitions/ParameterType'
        description: The parameter type.
    type: object
  ProvisioningArtifactParameters:
    items:
      $ref: '#/definitions/ProvisioningArtifactParameter'
    type: array
  ProvisioningArtifactProperties:
    description: 'Provisioning artifact properties. For example request JSON, see <a>CreateProvisioningArtifact</a>.'
    properties:
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The text description of the provisioning artifact properties.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: 'Additional information about the provisioning artifact properties. When using this element in a request, you must specify <code>LoadTemplateFromURL</code>. For more information, see <a>CreateProvisioningArtifact</a>.'
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name assigned to the provisioning artifact properties.
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: '<p>The type of the provisioning artifact properties. The following provisioning artifact property types are used by AWS Marketplace products:</p> <p> <code>MARKETPLACE_AMI</code> - AMI products.</p> <p> <code>MARKETPLACE_CAR</code> - CAR (Cluster and AWS Resources) products.</p>'
    required:
      - Info
    type: object
  ProvisioningArtifactPropertyName:
    enum:
      - Id
    type: string
  ProvisioningArtifactPropertyValue:
    type: string
  ProvisioningArtifactSummaries:
    items:
      $ref: '#/definitions/ProvisioningArtifactSummary'
    type: array
  ProvisioningArtifactSummary:
    description: Stores summary information about a provisioning artifact.
    properties:
      CreatedTime:
        $ref: '#/definitions/ProvisioningArtifactCreatedTime'
        description: The UTC timestamp of the creation time.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The description of the provisioning artifact.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the provisioning artifact.
      ProvisioningArtifactMetadata:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: The provisioning artifact metadata. This data is used with products created by AWS Marketplace.
    type: object
  ProvisioningArtifactType:
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE_AMI
      - MARKETPLACE_CAR
    type: string
  ProvisioningArtifacts:
    items:
      $ref: '#/definitions/ProvisioningArtifact'
    type: array
  ProvisioningParameter:
    description: The parameter key-value pairs used to provision a product.
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter from <a>DescribeProvisioningParameters</a>.
      Value:
        $ref: '#/definitions/ParameterValue'
        description: The value to use for provisioning. Any constraints on this value can be found in <code>ProvisioningArtifactParameter</code> for <code>Key</code>.
    type: object
  ProvisioningParameters:
    items:
      $ref: '#/definitions/ProvisioningParameter'
    type: array
  RecordDetail:
    description: The full details of a specific ProvisionedProduct object.
    properties:
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
      PathId:
        $ref: '#/definitions/Id'
        description: The identifier of the path for this product's provisioning.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the ProvisionedProduct object.
      ProvisionedProductType:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of the ProvisionedProduct object.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
      RecordErrors:
        $ref: '#/definitions/RecordErrors'
        description: A list of errors that occurred while processing the request.
      RecordId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object record.
      RecordTags:
        $ref: '#/definitions/RecordTags'
        description: List of tags associated with this record.
      RecordType:
        $ref: '#/definitions/RecordType'
        description: The record type for this record.
      Status:
        $ref: '#/definitions/RecordStatus'
        description: '<p>The status of the ProvisionedProduct object.</p> <p> <code>CREATED</code> - Request created but the operation has not yet started.</p> <p> <code>IN_PROGRESS</code> - The requested operation is in-progress.</p> <p> <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the requested operation failed and some remediation is occurring. For example, a rollback.</p> <p> <code>SUCCEEDED</code> - The requested operation has successfully completed.</p> <p> <code>FAILED</code> - The requested operation has completed but has failed. Investigate using the error messages returned.</p>'
      UpdatedTime:
        $ref: '#/definitions/UpdatedTime'
        description: The time when the record for the ProvisionedProduct object was last updated.
    type: object
  RecordDetails:
    items:
      $ref: '#/definitions/RecordDetail'
    type: array
  RecordError:
    description: The error code and description resulting from an operation.
    properties:
      Code:
        $ref: '#/definitions/ErrorCode'
        description: The numeric value of the error.
      Description:
        $ref: '#/definitions/ErrorDescription'
        description: The text description of the error.
    type: object
  RecordErrors:
    items:
      $ref: '#/definitions/RecordError'
    type: array
  RecordOutput:
    description: 'An output for the specified Product object created as the result of a request. For example, a CloudFormation-backed product that creates an S3 bucket would have an output for the S3 bucket URL.'
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: The text description of the output.
      OutputKey:
        $ref: '#/definitions/OutputKey'
        description: The output key.
      OutputValue:
        $ref: '#/definitions/OutputValue'
        description: The output value.
    type: object
  RecordOutputs:
    items:
      $ref: '#/definitions/RecordOutput'
    type: array
  RecordStatus:
    enum:
      - CREATED
      - IN_PROGRESS
      - IN_PROGRESS_IN_ERROR
      - SUCCEEDED
      - FAILED
    type: string
  RecordTag:
    description: 'A tag associated with the record, stored as a key-value pair.'
    properties:
      Key:
        $ref: '#/definitions/RecordTagKey'
        description: The key for this tag.
      Value:
        $ref: '#/definitions/RecordTagValue'
        description: The value for this tag.
    type: object
  RecordTagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  RecordTagValue:
    maxLength: 256
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    type: string
  RecordTags:
    items:
      $ref: '#/definitions/RecordTag'
    maxItems: 50
    type: array
  RecordType:
    type: string
  RejectPortfolioShareInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
    required:
      - PortfolioId
    type: object
  RejectPortfolioShareOutput:
    properties: {}
    type: object
  ResourceARN:
    maxLength: 150
    minLength: 1
    type: string
  ResourceDetail:
    description: Detailed resource information.
    properties:
      ARN:
        $ref: '#/definitions/ResourceDetailARN'
        description: ARN of the resource.
      CreatedTime:
        $ref: '#/definitions/ResourceDetailCreatedTime'
        description: Creation time of the resource.
      Description:
        $ref: '#/definitions/ResourceDetailDescription'
        description: Description of the resource.
      Id:
        $ref: '#/definitions/ResourceDetailId'
        description: Identifier of the resource.
      Name:
        $ref: '#/definitions/ResourceDetailName'
        description: Name of the resource.
    type: object
  ResourceDetailARN:
    type: string
  ResourceDetailCreatedTime:
    format: date-time
    type: string
  ResourceDetailDescription:
    type: string
  ResourceDetailId:
    type: string
  ResourceDetailName:
    type: string
  ResourceDetails:
    items:
      $ref: '#/definitions/ResourceDetail'
    type: array
  ResourceId:
    type: string
  ResourceInUseException:
    description: The operation was requested against a resource that is currently in use. Free the resource from use and retry the operation.
    properties: {}
    type: object
  ResourceNotFoundException:
    description: The specified resource was not found.
    properties: {}
    type: object
  ResourceType:
    type: string
  ScanProvisionedProductsInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: 'The access level for obtaining results. If left unspecified, <code>User</code> level access is used.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
    type: object
  ScanProvisionedProductsOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      ProvisionedProducts:
        $ref: '#/definitions/ProvisionedProductDetails'
        description: A list of ProvisionedProduct detail objects.
    type: object
  SearchFilterKey:
    type: string
  SearchFilterValue:
    type: string
  SearchProductsAsAdminInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: 'The list of filters with which to limit search results. If no search filters are specified, the output is all the products to which the administrator has access.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductSource:
        $ref: '#/definitions/ProductSource'
        description: Access level of the source of the product.
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: 'The sort field specifier. If no value is specified, results are not sorted.'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: 'The sort order specifier. If no value is specified, results are not sorted.'
    type: object
  SearchProductsAsAdminOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      ProductViewDetails:
        $ref: '#/definitions/ProductViewDetails'
        description: List of detailed product view information objects.
    type: object
  SearchProductsInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: 'The list of filters with which to limit search results. If no search filters are specified, the output is all the products to which the calling user has access. '
      PageSize:
        $ref: '#/definitions/PageSize'
        description: 'The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.'
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: 'The sort field specifier. If no value is specified, results are not sorted.'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: 'The sort order specifier. If no value is specified, results are not sorted.'
    type: object
  SearchProductsOutput:
    properties:
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
      ProductViewAggregations:
        $ref: '#/definitions/ProductViewAggregations'
        description: A list of the product view aggregation value objects.
      ProductViewSummaries:
        $ref: '#/definitions/ProductViewSummaries'
        description: A list of the product view summary objects.
    type: object
  SortOrder:
    enum:
      - ASCENDING
      - DESCENDING
    type: string
  SourceProvisioningArtifactProperties:
    items:
      $ref: '#/definitions/SourceProvisioningArtifactPropertiesMap'
    type: array
  SourceProvisioningArtifactPropertiesMap:
    items:
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactPropertyName'
        value:
          $ref: '#/definitions/ProvisioningArtifactPropertyValue'
      type: object
    type: array
  Status:
    enum:
      - AVAILABLE
      - CREATING
      - FAILED
    type: string
  StatusDetail:
    type: string
  SupportDescription:
    type: string
  SupportEmail:
    type: string
  SupportUrl:
    type: string
  Tag:
    description: Key-value pairs to associate with this provisioning. These tags are entirely discretionary and are propagated to the resources created in the provisioning.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The <code>ProvisioningArtifactParameter.TagKey</code> parameter from <a>DescribeProvisioningParameters</a>.
      Value:
        $ref: '#/definitions/TagValue'
        description: The desired value for this key.
    required:
      - Key
      - Value
    type: object
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeys:
    items:
      $ref: '#/definitions/TagKey'
    type: array
  TagOptionActive:
    type: boolean
  TagOptionDetail:
    description: The TagOption details.
    properties:
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The TagOptionDetail active state.
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The TagOptionDetail identifier.
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOptionDetail key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The TagOptionDetail value.
    type: object
  TagOptionDetails:
    items:
      $ref: '#/definitions/TagOptionDetail'
    type: array
  TagOptionId:
    maxLength: 100
    minLength: 1
    type: string
  TagOptionKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagOptionNotMigratedException:
    description: An operation requiring TagOptions failed because the TagOptions migration process has not been performed for this account. Please use the AWS console to perform the migration process before retrying the operation.
    properties: {}
    type: object
  TagOptionSummaries:
    items:
      $ref: '#/definitions/TagOptionSummary'
    type: array
  TagOptionSummary:
    description: The TagOption summary key-value pair.
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOptionSummary key.
      Values:
        $ref: '#/definitions/TagOptionValues'
        description: The TagOptionSummary value.
    type: object
  TagOptionValue:
    maxLength: 256
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagOptionValues:
    items:
      $ref: '#/definitions/TagOptionValue'
    type: array
  TagValue:
    maxLength: 256
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  Tags:
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
    type: array
  TerminateProvisionedProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      IgnoreErrors:
        $ref: '#/definitions/IgnoreErrors'
        description: 'If set to true, AWS Service Catalog stops managing the specified ProvisionedProduct object even if it cannot delete the underlying resources.'
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the ProvisionedProduct object to terminate. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.'
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: 'The name of the ProvisionedProduct object to terminate. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.'
      TerminateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the ProvisionedProduct object is terminated, further requests to terminate the same ProvisionedProduct object always return <b>ResourceNotFound</b> regardless of the value of <code>TerminateToken</code>.'
    required:
      - TerminateToken
    type: object
  TerminateProvisionedProductOutput:
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: 'The detailed result of the <a>TerminateProvisionedProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object that the request is modifying, and a list of any errors that the request encountered.'
    type: object
  UpdateConstraintInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The updated text description of the constraint.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint to update.
    required:
      - Id
    type: object
  UpdateConstraintOutput:
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: The resulting detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The resulting updated constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  UpdatePortfolioInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AddTags:
        $ref: '#/definitions/AddTags'
        description: Tags to add to the existing list of tags associated with the portfolio.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The updated text description of the portfolio.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for the update request.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The updated name of the portfolio provider.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: Tags to remove from the existing list of tags associated with the portfolio.
    required:
      - Id
    type: object
  UpdatePortfolioOutput:
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: The resulting detailed portfolio information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the portfolio.
    type: object
  UpdateProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AddTags:
        $ref: '#/definitions/AddTags'
        description: Tags to add to the existing list of tags associated with the product.
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The updated text description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated distributor of the product.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for the update request.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The updated product name.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated owner of the product.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: Tags to remove from the existing list of tags associated with the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The updated support description for the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The updated support email for the product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The updated support URL for the product.
    required:
      - Id
    type: object
  UpdateProductOutput:
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: The resulting detailed product view information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the product.
    type: object
  UpdateProvisionedProductInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PathId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the path to use in the updated ProvisionedProduct object. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the ProvisionedProduct object to update. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.'
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: 'The updated name of the ProvisionedProduct object. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.'
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
      ProvisioningParameters:
        $ref: '#/definitions/UpdateProvisioningParameters'
        description: A list of <code>ProvisioningParameter</code> objects used to update the ProvisionedProduct object.
      UpdateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: The idempotency token that uniquely identifies the provisioning update request.
    required:
      - UpdateToken
    type: object
  UpdateProvisionedProductOutput:
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: 'The detailed result of the <a>UpdateProvisionedProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object that the request is modifying, and a list of any errors that the request encountered.'
    type: object
  UpdateProvisioningArtifactInput:
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The updated text description of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The updated name of the provisioning artifact.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact for the update request. This is sometimes referred to as the product version.
    required:
      - ProductId
      - ProvisioningArtifactId
    type: object
  UpdateProvisioningArtifactOutput:
    properties:
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact update request.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
    type: object
  UpdateProvisioningParameter:
    description: 'The parameter key-value pair used to update a ProvisionedProduct object. If <code>UsePreviousValue</code> is set to true, <code>Value</code> is ignored and the value for <code>Key</code> is kept as previously set (current value).'
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter from <a>DescribeProvisioningParameters</a>.
      UsePreviousValue:
        $ref: '#/definitions/UsePreviousValue'
        description: 'If true, uses the currently set value for <code>Key</code>, ignoring <code>UpdateProvisioningParameter.Value</code>.'
      Value:
        $ref: '#/definitions/ParameterValue'
        description: The value to use for updating the product provisioning. Any constraints on this value can be found in the <code>ProvisioningArtifactParameter</code> parameter for <code>Key</code>.
    type: object
  UpdateProvisioningParameters:
    items:
      $ref: '#/definitions/UpdateProvisioningParameter'
    type: array
  UpdateTagOptionInput:
    properties:
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The updated active state.
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The identifier of the constraint to update.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The updated value.
    required:
      - Id
    type: object
  UpdateTagOptionOutput:
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: The resulting detailed TagOption information.
    type: object
  UpdatedTime:
    format: date-time
    type: string
  UsageInstruction:
    description: Additional information provided by the administrator.
    properties:
      Type:
        $ref: '#/definitions/InstructionType'
        description: The usage instruction type for the value.
      Value:
        $ref: '#/definitions/InstructionValue'
        description: The usage instruction value for this type.
    type: object
  UsageInstructions:
    items:
      $ref: '#/definitions/UsageInstruction'
    type: array
  UsePreviousValue:
    type: boolean
  Verbose:
    type: boolean
