syntax = "proto3";

import "google/api/annotations.proto";

package awsservicecatalog;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AcceptPortfolioShareInput body = 10;
}

message Post#AssociatePrincipalWithPortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociatePrincipalWithPortfolioInput body = 10;
}

message Post#AssociateProductWithPortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateProductWithPortfolioInput body = 10;
}

message Post#AssociateTagOptionWithResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AssociateTagOptionWithResourceInput body = 10;
}

message Post#CopyProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CopyProductInput body = 10;
}

message Post#CreateConstraintRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateConstraintInput body = 10;
}

message Post#CreatePortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreatePortfolioInput body = 10;
}

message Post#CreatePortfolioShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreatePortfolioShareInput body = 10;
}

message Post#CreateProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateProductInput body = 10;
}

message Post#CreateProvisioningArtifactRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateProvisioningArtifactInput body = 10;
}

message Post#CreateTagOptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateTagOptionInput body = 10;
}

message Post#DeleteConstraintRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteConstraintInput body = 10;
}

message Post#DeletePortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePortfolioInput body = 10;
}

message Post#DeletePortfolioShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePortfolioShareInput body = 10;
}

message Post#DeleteProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteProductInput body = 10;
}

message Post#DeleteProvisioningArtifactRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteProvisioningArtifactInput body = 10;
}

message Post#DescribeConstraintRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeConstraintInput body = 10;
}

message Post#DescribeCopyProductStatusRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCopyProductStatusInput body = 10;
}

message Post#DescribePortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribePortfolioInput body = 10;
}

message Post#DescribeProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProductInput body = 10;
}

message Post#DescribeProductAsAdminRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProductAsAdminInput body = 10;
}

message Post#DescribeProductViewRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProductViewInput body = 10;
}

message Post#DescribeProvisionedProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProvisionedProductInput body = 10;
}

message Post#DescribeProvisioningArtifactRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProvisioningArtifactInput body = 10;
}

message Post#DescribeProvisioningParametersRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeProvisioningParametersInput body = 10;
}

message Post#DescribeRecordRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeRecordInput body = 10;
}

message Post#DescribeTagOptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeTagOptionInput body = 10;
}

message Post#DisassociatePrincipalFromPortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociatePrincipalFromPortfolioInput body = 10;
}

message Post#DisassociateProductFromPortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateProductFromPortfolioInput body = 10;
}

message Post#DisassociateTagOptionFromResourceRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisassociateTagOptionFromResourceInput body = 10;
}

message Post#ListAcceptedPortfolioSharesRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListAcceptedPortfolioSharesInput body = 12;
}

message Post#ListConstraintsForPortfolioRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListConstraintsForPortfolioInput body = 12;
}

message Post#ListLaunchPathsRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListLaunchPathsInput body = 12;
}

message Post#ListPortfolioAccessRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListPortfolioAccessInput body = 10;
}

message Post#ListPortfoliosRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListPortfoliosInput body = 12;
}

message Post#ListPortfoliosForProductRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListPortfoliosForProductInput body = 12;
}

message Post#ListPrincipalsForPortfolioRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListPrincipalsForPortfolioInput body = 12;
}

message Post#ListProvisioningArtifactsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListProvisioningArtifactsInput body = 10;
}

message Post#ListRecordHistoryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListRecordHistoryInput body = 10;
}

message Post#ListResourcesForTagOptionRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListResourcesForTagOptionInput body = 12;
}

message Post#ListTagOptionsRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListTagOptionsInput body = 12;
}

message Post#ProvisionProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ProvisionProductInput body = 10;
}

message Post#RejectPortfolioShareRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RejectPortfolioShareInput body = 10;
}

message Post#ScanProvisionedProductsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ScanProvisionedProductsInput body = 10;
}

message Post#SearchProductsRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    SearchProductsInput body = 12;
}

message Post#SearchProductsAsAdminRequest {
    string Action = 1;
    // Pagination limit
    string PageSize = 2;
    // Pagination token
    string PageToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    SearchProductsAsAdminInput body = 12;
}

message Post#TerminateProvisionedProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TerminateProvisionedProductInput body = 10;
}

message Post#UpdateConstraintRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateConstraintInput body = 10;
}

message Post#UpdatePortfolioRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdatePortfolioInput body = 10;
}

message Post#UpdateProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateProductInput body = 10;
}

message Post#UpdateProvisionedProductRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateProvisionedProductInput body = 10;
}

message Post#UpdateProvisioningArtifactRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateProvisioningArtifactInput body = 10;
}

message Post#UpdateTagOptionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateTagOptionInput body = 10;
}

message AcceptPortfolioShareInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
}

message AcceptPortfolioShareOutput {
}

message AccessLevelFilter {
    // <p>Specifies the access level.</p> <p> <code>Account</code> allows results at the account level. </p> <p> <code>Role</code> allows results based on the federated role of the specified user.</p> <p> <code>User</code> allows results limited to the specified user. </p>
    AccessLevelFilterKey Key = 1;
    // Specifies the user to which the access level applies. A value of <code>Self</code> is currently supported.
    string Value = 2;
}

enum AccessLevelFilterKey {
    ACCOUNT = 0;
    ROLE = 1;
    USER = 2;
}





repeated string AccountIds = 1



repeated Tag AddTags = 1



repeated string AllowedValues = 1



message AssociatePrincipalWithPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
    // The ARN representing the principal (IAM user, role, or group).
    string PrincipalARN = 3;
    // The principal type. Must be <code>IAM</code>
    PrincipalType PrincipalType = 4;
}

message AssociatePrincipalWithPortfolioOutput {
}

message AssociateProductWithPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
    // The product identifier.
    string ProductId = 3;
    // The identifier of the source portfolio to use with this association.
    string SourcePortfolioId = 4;
}

message AssociateProductWithPortfolioOutput {
}

message AssociateTagOptionWithResourceInput {
    // The resource identifier.
    string ResourceId = 1;
    // The TagOption identifier.
    string TagOptionId = 2;
}

message AssociateTagOptionWithResourceOutput {
}

message ConstraintDetail {
    // The identifier of the constraint.
    string ConstraintId = 1;
    // The text description of the constraint.
    string Description = 2;
    // The owner of the constraint.
    string Owner = 3;
    // The type of the constraint.
    string Type = 4;
}

repeated ConstraintDetail ConstraintDetails = 1



repeated ConstraintSummary ConstraintSummaries = 1

message ConstraintSummary {
    // The text description of the constraint.
    string Description = 1;
    // The type of the constraint.
    string Type = 2;
}

enum CopyOption {
    COPYTAGS = 0;
}

repeated CopyOption CopyOptions = 1

message CopyProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The copy options. If the value is <code>CopyTags</code>, the tags from the source product are copied to the target product.
    array CopyOptions = 2;
    //  A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 3;
    // The Amazon Resource Name (ARN) of the source product.
    string SourceProductArn = 4;
    // The IDs of the product versions to copy. By default, all provisioning artifacts are copied.
    array SourceProvisioningArtifactIdentifiers = 5;
    // The ID of the target product. By default, a new product is created.
    string TargetProductId = 6;
    // A name for the target product. The default is the name of the source product.
    string TargetProductName = 7;
}

message CopyProductOutput {
    // A unique token to pass to <code>DescribeCopyProductStatus</code> to track the progress of the operation.
    string CopyProductToken = 1;
}

enum CopyProductStatu {
    SUCCEEDED = 0;
    IN_PROGRESS = 1;
    FAILED = 2;
}

message CreateConstraintInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The text description of the constraint.
    string Description = 2;
    // A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 3;
    // <p>The constraint parameters. Expected values vary depending on which <b>Type</b> is specified. For more information, see the Examples section.</p> <p>For Type <code>LAUNCH</code>, the <code>RoleArn</code> property is required. </p> <p>For Type <code>NOTIFICATION</code>, the <code>NotificationArns</code> property is required.</p> <p>For Type <code>TEMPLATE</code>, the <code>Rules</code> property is required.</p>
    string Parameters = 4;
    // The portfolio identifier.
    string PortfolioId = 5;
    // The product identifier.
    string ProductId = 6;
    // The type of the constraint. Case-sensitive valid values are: <code>LAUNCH</code>, <code>NOTIFICATION</code>, or <code>TEMPLATE</code>.
    string Type = 7;
}

message CreateConstraintOutput {
    // The resulting detailed constraint information.
    ConstraintDetail ConstraintDetail = 1;
    // The resulting constraint parameters.
    string ConstraintParameters = 2;
    // The status of the current request.
    Status Status = 3;
}

message CreatePortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The text description of the portfolio.
    string Description = 2;
    // The name to use for display purposes.
    string DisplayName = 3;
    // A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 4;
    // The name of the portfolio provider.
    string ProviderName = 5;
    // Tags to associate with the new portfolio.
    array Tags = 6;
}

message CreatePortfolioOutput {
    // The resulting detailed portfolio information.
    PortfolioDetail PortfolioDetail = 1;
    // Tags successfully associated with the new portfolio.
    array Tags = 2;
}

message CreatePortfolioShareInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The account ID with which to share the portfolio.
    string AccountId = 2;
    // The portfolio identifier.
    string PortfolioId = 3;
}

message CreatePortfolioShareOutput {
}

message CreateProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The text description of the product.
    string Description = 2;
    // The distributor of the product.
    string Distributor = 3;
    // A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 4;
    // The name of the product.
    string Name = 5;
    // The owner of the product.
    string Owner = 6;
    // The type of the product to create.
    ProductType ProductType = 7;
    // Parameters for the provisioning artifact.
    ProvisioningArtifactProperties ProvisioningArtifactParameters = 8;
    // Support information about the product.
    string SupportDescription = 9;
    // Contact email for product support.
    string SupportEmail = 10;
    // Contact URL for product support.
    string SupportUrl = 11;
    // Tags to associate with the new product.
    array Tags = 12;
}

message CreateProductOutput {
    // The resulting detailed product view information.
    ProductViewDetail ProductViewDetail = 1;
    // The resulting detailed provisioning artifact information.
    ProvisioningArtifactDetail ProvisioningArtifactDetail = 2;
    // Tags successfully associated with the new product.
    array Tags = 3;
}

message CreateProvisioningArtifactInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 2;
    // The parameters to use when creating the new provisioning artifact.
    ProvisioningArtifactProperties Parameters = 3;
    // The product identifier.
    string ProductId = 4;
}

message CreateProvisioningArtifactOutput {
    // Additional information about the creation request for the provisioning artifact.
    array Info = 1;
    // The resulting detailed provisioning artifact information.
    ProvisioningArtifactDetail ProvisioningArtifactDetail = 2;
    // The status of the current request.
    Status Status = 3;
}

message CreateTagOptionInput {
    // The TagOption key.
    string Key = 1;
    // The TagOption value.
    string Value = 2;
}

message CreateTagOptionOutput {
    // The resulting detailed TagOption information.
    TagOptionDetail TagOptionDetail = 1;
}

message DeleteConstraintInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the constraint to delete.
    string Id = 2;
}

message DeleteConstraintOutput {
}

message DeletePortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the portfolio for the delete request.
    string Id = 2;
}

message DeletePortfolioOutput {
}

message DeletePortfolioShareInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The account ID associated with the share to delete.
    string AccountId = 2;
    // The portfolio identifier.
    string PortfolioId = 3;
}

message DeletePortfolioShareOutput {
}

message DeleteProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the product for the delete request.
    string Id = 2;
}

message DeleteProductOutput {
}

message DeleteProvisioningArtifactInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The product identifier.
    string ProductId = 2;
    // The identifier of the provisioning artifact for the delete request. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 3;
}

message DeleteProvisioningArtifactOutput {
}

message DescribeConstraintInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the constraint.
    string Id = 2;
}

message DescribeConstraintOutput {
    // Detailed constraint information.
    ConstraintDetail ConstraintDetail = 1;
    // The current parameters associated with the specified constraint.
    string ConstraintParameters = 2;
    // The status of the current request.
    Status Status = 3;
}

message DescribeCopyProductStatusInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The token returned from the call to <code>CopyProduct</code> that initiated the operation.
    string CopyProductToken = 2;
}

message DescribeCopyProductStatusOutput {
    // The status of the copy product operation.
    CopyProductStatus CopyProductStatus = 1;
    // The status message.
    string StatusDetail = 2;
    // The ID of the copied product.
    string TargetProductId = 3;
}

message DescribePortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the portfolio for which to retrieve information.
    string Id = 2;
}

message DescribePortfolioOutput {
    // Detailed portfolio information.
    PortfolioDetail PortfolioDetail = 1;
    // TagOptions associated with the portfolio.
    array TagOptions = 2;
    // Tags associated with the portfolio.
    array Tags = 3;
}

message DescribeProductAsAdminInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the product for which to retrieve information.
    string Id = 2;
}

message DescribeProductAsAdminOutput {
    // Detailed product view information.
    ProductViewDetail ProductViewDetail = 1;
    // A list of provisioning artifact summaries for the product.
    array ProvisioningArtifactSummaries = 2;
    // List of TagOptions associated with the product.
    array TagOptions = 3;
    // Tags associated with the product.
    array Tags = 4;
}

message DescribeProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The <code>ProductId</code> of the product to describe.
    string Id = 2;
}

message DescribeProductOutput {
    // The summary metadata about the specified product.
    ProductViewSummary ProductViewSummary = 1;
    // A list of provisioning artifact objects for the specified product. The <code>ProvisioningArtifacts</code> parameter represent the ways the specified product can be provisioned.
    array ProvisioningArtifacts = 2;
}

message DescribeProductViewInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The <code>ProductViewId</code> of the product to describe.
    string Id = 2;
}

message DescribeProductViewOutput {
    // The summary metadata about the specified product.
    ProductViewSummary ProductViewSummary = 1;
    // A list of provisioning artifact objects for the specified product. The <code>ProvisioningArtifacts</code> represent the ways in which the specified product can be provisioned.
    array ProvisioningArtifacts = 2;
}

message DescribeProvisionedProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The provisioned product identifier.
    string Id = 2;
}

message DescribeProvisionedProductOutput {
    // Detailed provisioned product information.
    ProvisionedProductDetail ProvisionedProductDetail = 1;
}

message DescribeProvisioningArtifactInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The product identifier.
    string ProductId = 2;
    // The identifier of the provisioning artifact. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 3;
    // Enable a verbose level of details for the provisioning artifact.
    boolean Verbose = 4;
}

message DescribeProvisioningArtifactOutput {
    // Additional information about the provisioning artifact.
    array Info = 1;
    // Detailed provisioning artifact information.
    ProvisioningArtifactDetail ProvisioningArtifactDetail = 2;
    // The status of the current request.
    Status Status = 3;
}

message DescribeProvisioningParametersInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the path for this product's provisioning. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.
    string PathId = 2;
    // The product identifier.
    string ProductId = 3;
    // The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 4;
}

message DescribeProvisioningParametersOutput {
    // The list of constraint summaries that apply to provisioning this product.
    array ConstraintSummaries = 1;
    // The list of parameters used to successfully provision the product. Each parameter includes a list of allowable values and additional metadata about each parameter.
    array ProvisioningArtifactParameters = 2;
    // List of TagOptions associated with the provisioned provisioning parameters.
    array TagOptions = 3;
    // Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.
    array UsageInstructions = 4;
}

message DescribeRecordInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The record identifier of the ProvisionedProduct object for which to retrieve output information. This is the <code>RecordDetail.RecordId</code> obtained from the request operation's response.
    string Id = 2;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 3;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 4;
}

message DescribeRecordOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // Detailed record information for the specified product.
    RecordDetail RecordDetail = 2;
    // A list of outputs for the specified Product object created as the result of a request. For example, a CloudFormation-backed product that creates an S3 bucket would have an output for the S3 bucket URL.
    array RecordOutputs = 3;
}

message DescribeTagOptionInput {
    // The identifier of the TagOption.
    string Id = 1;
}

message DescribeTagOptionOutput {
    // The resulting detailed TagOption information.
    TagOptionDetail TagOptionDetail = 1;
}

message DisassociatePrincipalFromPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
    // The ARN representing the principal (IAM user, role, or group).
    string PrincipalARN = 3;
}

message DisassociatePrincipalFromPortfolioOutput {
}

message DisassociateProductFromPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
    // The product identifier.
    string ProductId = 3;
}

message DisassociateProductFromPortfolioOutput {
}

message DisassociateTagOptionFromResourceInput {
    // Identifier of the resource from which to disassociate the TagOption.
    string ResourceId = 1;
    // Identifier of the TagOption to disassociate from the resource.
    string TagOptionId = 2;
}

message DisassociateTagOptionFromResourceOutput {
}

message DuplicateResourceException {
}

message InvalidParametersException {
}

message InvalidStateException {
}



repeated LaunchPathSummary LaunchPathSummaries = 1

message LaunchPathSummary {
    // List of constraints on the portfolio-product relationship.
    array ConstraintSummaries = 1;
    // The unique identifier of the product path.
    string Id = 2;
    // Corresponds to the name of the portfolio to which the user was assigned.
    string Name = 3;
    // List of tags used by this launch path.
    array Tags = 4;
}

message LimitExceededException {
}

message ListAcceptedPortfolioSharesInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
}

message ListAcceptedPortfolioSharesOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // List of detailed portfolio information objects.
    array PortfolioDetails = 2;
}

message ListConstraintsForPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
    // The portfolio identifier.
    string PortfolioId = 4;
    // The product identifier.
    string ProductId = 5;
}

message ListConstraintsForPortfolioOutput {
    // List of detailed constraint information objects.
    array ConstraintDetails = 1;
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 2;
}

message ListLaunchPathsInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
    // The product identifier. Identifies the product for which to retrieve <code>LaunchPathSummaries</code> information.
    string ProductId = 4;
}

message ListLaunchPathsOutput {
    // List of launch path information summaries for the specified <code>PageToken</code>.
    array LaunchPathSummaries = 1;
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 2;
}

message ListPortfolioAccessInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
}

message ListPortfolioAccessOutput {
    // List of account IDs associated with access to the portfolio.
    array AccountIds = 1;
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 2;
}

message ListPortfoliosForProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
    // The product identifier.
    string ProductId = 4;
}

message ListPortfoliosForProductOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // List of detailed portfolio information objects.
    array PortfolioDetails = 2;
}

message ListPortfoliosInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
}

message ListPortfoliosOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // List of detailed portfolio information objects.
    array PortfolioDetails = 2;
}

message ListPrincipalsForPortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
    // The portfolio identifier.
    string PortfolioId = 4;
}

message ListPrincipalsForPortfolioOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // The IAM principals (users or roles) associated with the portfolio.
    array Principals = 2;
}

message ListProvisioningArtifactsInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The product identifier.
    string ProductId = 2;
}

message ListProvisioningArtifactsOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // List of detailed provisioning artifact information objects.
    array ProvisioningArtifactDetails = 2;
}

message ListRecordHistoryInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The access level for obtaining results. If left unspecified, <code>User</code> level access is used.
    AccessLevelFilter AccessLevelFilter = 2;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 3;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 4;
    // The filter to limit search results.
    ListRecordHistorySearchFilter SearchFilter = 5;
}

message ListRecordHistoryOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // A list of record detail objects, listed in reverse chronological order.
    array RecordDetails = 2;
}

message ListRecordHistorySearchFilter {
    // The filter key.
    string Key = 1;
    // The filter value for <code>Key</code>.
    string Value = 2;
}

message ListResourcesForTagOptionInput {
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 1;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 2;
    // Resource type.
    string ResourceType = 3;
    // Identifier of the TagOption.
    string TagOptionId = 4;
}

message ListResourcesForTagOptionOutput {
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 1;
    // The resulting detailed resource information.
    array ResourceDetails = 2;
}

message ListTagOptionsFilters {
    // The ListTagOptionsFilters active state.
    boolean Active = 1;
    // The ListTagOptionsFilters key.
    string Key = 2;
    // The ListTagOptionsFilters value.
    string Value = 3;
}

message ListTagOptionsInput {
    // The list of filters with which to limit search results. If no search filters are specified, the output is all TagOptions.
    ListTagOptionsFilters Filters = 1;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 2;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 3;
}

message ListTagOptionsOutput {
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 1;
    // The resulting detailed TagOption information.
    array TagOptionDetails = 2;
}





repeated string NotificationArns = 1









message ParameterConstraints {
    // The values that the administrator has allowed for the parameter.
    array AllowedValues = 1;
}

message PortfolioDetail {
    // The ARN assigned to the portfolio.
    string ARN = 1;
    // The UTC timestamp of the creation time.
    string CreatedTime = 2;
    // The text description of the portfolio.
    string Description = 3;
    // The name to use for display purposes.
    string DisplayName = 4;
    // The identifier for the portfolio.
    string Id = 5;
    // The name of the portfolio provider.
    string ProviderName = 6;
}

repeated PortfolioDetail PortfolioDetails = 1





message Principal {
    // The ARN representing the principal (IAM user, role, or group).
    string PrincipalARN = 1;
    // The principal type. Must be <code>IAM</code>
    PrincipalType PrincipalType = 2;
}

enum PrincipalType {
    IAM = 0;
}

repeated Principal Principals = 1



enum ProductSource {
    ACCOUNT = 0;
}

enum ProductType {
    CLOUD_FORMATION_TEMPLATE = 0;
    MARKETPLACE = 1;
}

message ProductViewAggregationValue {
    // An approximate count of the products that match the value.
    integer ApproximateCount = 1;
    // The value of the product view aggregation.
    string Value = 2;
}

repeated ProductViewAggregationValue ProductViewAggregationValues = 1

message ProductViewAggregation {
    string key = 1;
    array value = 2;
}
repeated ProductViewAggregation ProductViewAggregations = 1

message ProductViewDetail {
    // The UTC timestamp of the creation time.
    string CreatedTime = 1;
    // The ARN associated with the product.
    string ProductARN = 2;
    // The summary metadata about the specified product view.
    ProductViewSummary ProductViewSummary = 3;
    // <p>Current status of the product.</p> <p> <code>AVAILABLE</code> - Product is available for use.</p> <p> <code>CREATING</code> - Creation of product started, not ready for use.</p> <p> <code>FAILED</code> - Action on product failed.</p>
    Status Status = 4;
}

repeated ProductViewDetail ProductViewDetails = 1



enum ProductViewFilterBy {
    FULLTEXTSEARCH = 0;
    OWNER = 1;
    PRODUCTTYPE = 2;
    SOURCEPRODUCTID = 3;
}



repeated string ProductViewFilterValues = 1

message ProductViewFilter {
    ProductViewFilterBy key = 1;
    array value = 2;
}
repeated ProductViewFilter ProductViewFilters = 1







enum ProductViewSortBy {
    TITLE = 0;
    VERSIONCOUNT = 1;
    CREATIONDATE = 2;
}

repeated ProductViewSummary ProductViewSummaries = 1

message ProductViewSummary {
    // The distributor of the product. Contact the product administrator for the significance of this value.
    string Distributor = 1;
    // A value of <code>false</code> indicates that the product does not have a default path, while a value of <code>true</code> indicates that it does. If it's false, call <a>ListLaunchPaths</a> to disambiguate between paths. If true, <a>ListLaunchPaths</a> is not required, and the output of the <a>ProductViewSummary</a> operation can be used directly with <a>DescribeProvisioningParameters</a>.
    boolean HasDefaultPath = 2;
    // The product view identifier.
    string Id = 3;
    // The name of the product.
    string Name = 4;
    // The owner of the product. Contact the product administrator for the significance of this value.
    string Owner = 5;
    // The product identifier.
    string ProductId = 6;
    // Short description of the product.
    string ShortDescription = 7;
    // The description of the support for this Product.
    string SupportDescription = 8;
    // The email contact information to obtain support for this Product.
    string SupportEmail = 9;
    // The URL information to obtain support for this Product.
    string SupportUrl = 10;
    // The product type. Contact the product administrator for the significance of this value. If this value is <code>MARKETPLACE</code>, the product was created by AWS Marketplace.
    ProductType Type = 11;
}

message ProvisionProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
    array NotificationArns = 2;
    // The identifier of the path for this product's provisioning. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.
    string PathId = 3;
    // The product identifier.
    string ProductId = 4;
    // An idempotency token that uniquely identifies the provisioning request.
    string ProvisionToken = 5;
    // A user-friendly name to identify the ProvisionedProduct object. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
    string ProvisionedProductName = 6;
    // The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 7;
    // Parameters specified by the administrator that are required for provisioning the product.
    array ProvisioningParameters = 8;
    // A list of tags to use as provisioning options.
    array Tags = 9;
}

message ProvisionProductOutput {
    // The detailed result of the <a>ProvisionProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object of the request, and a list of any errors that the request encountered.
    RecordDetail RecordDetail = 1;
}

message ProvisionedProductDetail {
    // The ARN associated with the ProvisionedProduct object.
    string Arn = 1;
    // The UTC timestamp of the creation time.
    string CreatedTime = 2;
    // The identifier of the ProvisionedProduct object.
    string Id = 3;
    // A token to disambiguate duplicate requests. You can use the same input in multiple requests, provided that you also specify a different idempotency token for each request.
    string IdempotencyToken = 4;
    // The record identifier of the last request performed on this ProvisionedProduct object.
    string LastRecordId = 5;
    // The user-friendly name of the ProvisionedProduct object.
    string Name = 6;
    // <p>The current status of the ProvisionedProduct.</p> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent action request succeeded and completed.</p> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed may or may not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version. </p> <p> <code>ERROR</code> - Something unexpected happened such that the provisioned product exists but the stack is not running. For example, CloudFormation received an invalid parameter value and could not launch the stack.</p>
    ProvisionedProductStatus Status = 7;
    // The current status message of the ProvisionedProduct.
    string StatusMessage = 8;
    // The type of the ProvisionedProduct object.
    string Type = 9;
}

repeated ProvisionedProductDetail ProvisionedProductDetails = 1







enum ProvisionedProductStatu {
    AVAILABLE = 0;
    UNDER_CHANGE = 1;
    TAINTED = 2;
    ERROR = 3;
}

message ProvisioningArtifact {
    // The UTC timestamp of the creation time.
    string CreatedTime = 1;
    // The text description of the artifact.
    string Description = 2;
    // The identifier for the artifact. This is sometimes referred to as the product version.
    string Id = 3;
    // The name of the artifact.
    string Name = 4;
}

message ProvisioningArtifactDetail {
    // The UTC timestamp of the creation time.
    string CreatedTime = 1;
    // The text description of the provisioning artifact.
    string Description = 2;
    // The identifier of the provisioning artifact. This is sometimes referred to as the product version.
    string Id = 3;
    // The name assigned to the provisioning artifact.
    string Name = 4;
    // <p>The type of the provisioning artifact. The following provisioning artifact types are used by AWS Marketplace products:</p> <p> <code>MARKETPLACE_AMI</code> - AMI products.</p> <p> <code>MARKETPLACE_CAR</code> - CAR (Cluster and AWS Resources) products.</p>
    ProvisioningArtifactType Type = 5;
}

repeated ProvisioningArtifactDetail ProvisioningArtifactDetails = 1

message ProvisioningArtifactInfo {
    string key = 1;
    string value = 2;
}
repeated ProvisioningArtifactInfo ProvisioningArtifactInfo = 1







message ProvisioningArtifactParameter {
    // The default value for this parameter.
    string DefaultValue = 1;
    // The text description of the parameter.
    string Description = 2;
    // If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.
    boolean IsNoEcho = 3;
    // The list of constraints that the administrator has put on the parameter.
    ParameterConstraints ParameterConstraints = 4;
    // The parameter key.
    string ParameterKey = 5;
    // The parameter type.
    string ParameterType = 6;
}

repeated ProvisioningArtifactParameter ProvisioningArtifactParameters = 1

message ProvisioningArtifactProperties {
    // The text description of the provisioning artifact properties.
    string Description = 1;
    // Additional information about the provisioning artifact properties. When using this element in a request, you must specify <code>LoadTemplateFromURL</code>. For more information, see <a>CreateProvisioningArtifact</a>.
    array Info = 2;
    // The name assigned to the provisioning artifact properties.
    string Name = 3;
    // <p>The type of the provisioning artifact properties. The following provisioning artifact property types are used by AWS Marketplace products:</p> <p> <code>MARKETPLACE_AMI</code> - AMI products.</p> <p> <code>MARKETPLACE_CAR</code> - CAR (Cluster and AWS Resources) products.</p>
    ProvisioningArtifactType Type = 4;
}

enum ProvisioningArtifactPropertyName {
    ID = 0;
}



repeated ProvisioningArtifactSummary ProvisioningArtifactSummaries = 1

message ProvisioningArtifactSummary {
    // The UTC timestamp of the creation time.
    string CreatedTime = 1;
    // The description of the provisioning artifact.
    string Description = 2;
    // The identifier of the provisioning artifact.
    string Id = 3;
    // The name of the provisioning artifact.
    string Name = 4;
    // The provisioning artifact metadata. This data is used with products created by AWS Marketplace.
    array ProvisioningArtifactMetadata = 5;
}

enum ProvisioningArtifactType {
    CLOUD_FORMATION_TEMPLATE = 0;
    MARKETPLACE_AMI = 1;
    MARKETPLACE_CAR = 2;
}

repeated ProvisioningArtifact ProvisioningArtifacts = 1

message ProvisioningParameter {
    // The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter from <a>DescribeProvisioningParameters</a>.
    string Key = 1;
    // The value to use for provisioning. Any constraints on this value can be found in <code>ProvisioningArtifactParameter</code> for <code>Key</code>.
    string Value = 2;
}

repeated ProvisioningParameter ProvisioningParameters = 1

message RecordDetail {
    // The UTC timestamp of the creation time.
    string CreatedTime = 1;
    // The identifier of the path for this product's provisioning.
    string PathId = 2;
    // The product identifier.
    string ProductId = 3;
    // The identifier of the ProvisionedProduct object.
    string ProvisionedProductId = 4;
    // The user-friendly name of the ProvisionedProduct object.
    string ProvisionedProductName = 5;
    // The type of the ProvisionedProduct object.
    string ProvisionedProductType = 6;
    // The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 7;
    // A list of errors that occurred while processing the request.
    array RecordErrors = 8;
    // The identifier of the ProvisionedProduct object record.
    string RecordId = 9;
    // List of tags associated with this record.
    array RecordTags = 10;
    // The record type for this record.
    string RecordType = 11;
    // <p>The status of the ProvisionedProduct object.</p> <p> <code>CREATED</code> - Request created but the operation has not yet started.</p> <p> <code>IN_PROGRESS</code> - The requested operation is in-progress.</p> <p> <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the requested operation failed and some remediation is occurring. For example, a rollback.</p> <p> <code>SUCCEEDED</code> - The requested operation has successfully completed.</p> <p> <code>FAILED</code> - The requested operation has completed but has failed. Investigate using the error messages returned.</p>
    RecordStatus Status = 12;
    // The time when the record for the ProvisionedProduct object was last updated.
    string UpdatedTime = 13;
}

repeated RecordDetail RecordDetails = 1

message RecordError {
    // The numeric value of the error.
    string Code = 1;
    // The text description of the error.
    string Description = 2;
}

repeated RecordError RecordErrors = 1

message RecordOutput {
    // The text description of the output.
    string Description = 1;
    // The output key.
    string OutputKey = 2;
    // The output value.
    string OutputValue = 3;
}

repeated RecordOutput RecordOutputs = 1

enum RecordStatu {
    CREATED = 0;
    IN_PROGRESS = 1;
    IN_PROGRESS_IN_ERROR = 2;
    SUCCEEDED = 3;
    FAILED = 4;
}

message RecordTag {
    // The key for this tag.
    string Key = 1;
    // The value for this tag.
    string Value = 2;
}





repeated RecordTag RecordTags = 1



message RejectPortfolioShareInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The portfolio identifier.
    string PortfolioId = 2;
}

message RejectPortfolioShareOutput {
}

message ResourceDetail {
    // ARN of the resource.
    string ARN = 1;
    // Creation time of the resource.
    string CreatedTime = 2;
    // Description of the resource.
    string Description = 3;
    // Identifier of the resource.
    string Id = 4;
    // Name of the resource.
    string Name = 5;
}











repeated ResourceDetail ResourceDetails = 1



message ResourceInUseException {
}

message ResourceNotFoundException {
}

message ScanProvisionedProductsInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The access level for obtaining results. If left unspecified, <code>User</code> level access is used.
    AccessLevelFilter AccessLevelFilter = 2;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 3;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 4;
}

message ScanProvisionedProductsOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // A list of ProvisionedProduct detail objects.
    array ProvisionedProducts = 2;
}

message SearchProductsAsAdminInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The list of filters with which to limit search results. If no search filters are specified, the output is all the products to which the administrator has access.
    array Filters = 2;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 3;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 4;
    // The portfolio identifier.
    string PortfolioId = 5;
    // Access level of the source of the product.
    ProductSource ProductSource = 6;
    // The sort field specifier. If no value is specified, results are not sorted.
    ProductViewSortBy SortBy = 7;
    // The sort order specifier. If no value is specified, results are not sorted.
    SortOrder SortOrder = 8;
}

message SearchProductsAsAdminOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // List of detailed product view information objects.
    array ProductViewDetails = 2;
}

message SearchProductsInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The list of filters with which to limit search results. If no search filters are specified, the output is all the products to which the calling user has access.
    array Filters = 2;
    // The maximum number of items to return in the results. If more results exist than fit in the specified <code>PageSize</code>, the value of <code>NextPageToken</code> in the response is non-null.
    integer PageSize = 3;
    // The page token of the first page retrieved. If null, this retrieves the first page of size <code>PageSize</code>.
    string PageToken = 4;
    // The sort field specifier. If no value is specified, results are not sorted.
    ProductViewSortBy SortBy = 5;
    // The sort order specifier. If no value is specified, results are not sorted.
    SortOrder SortOrder = 6;
}

message SearchProductsOutput {
    // The page token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.
    string NextPageToken = 1;
    // A list of the product view aggregation value objects.
    array ProductViewAggregations = 2;
    // A list of the product view summary objects.
    array ProductViewSummaries = 3;
}

enum SortOrder {
    ASCENDING = 0;
    DESCENDING = 1;
}

repeated array SourceProvisioningArtifactProperties = 1

message SourceProvisioningArtifactPropertiesMap {
    ProvisioningArtifactPropertyName key = 1;
    string value = 2;
}
repeated SourceProvisioningArtifactPropertiesMap SourceProvisioningArtifactPropertiesMap = 1

enum Statu {
    AVAILABLE = 0;
    CREATING = 1;
    FAILED = 2;
}

message Tag {
    // The <code>ProvisioningArtifactParameter.TagKey</code> parameter from <a>DescribeProvisioningParameters</a>.
    string Key = 1;
    // The desired value for this key.
    string Value = 2;
}



repeated string TagKeys = 1



message TagOptionDetail {
    // The TagOptionDetail active state.
    boolean Active = 1;
    // The TagOptionDetail identifier.
    string Id = 2;
    // The TagOptionDetail key.
    string Key = 3;
    // The TagOptionDetail value.
    string Value = 4;
}

repeated TagOptionDetail TagOptionDetails = 1





message TagOptionNotMigratedException {
}

repeated TagOptionSummary TagOptionSummaries = 1

message TagOptionSummary {
    // The TagOptionSummary key.
    string Key = 1;
    // The TagOptionSummary value.
    array Values = 2;
}



repeated string TagOptionValues = 1



repeated Tag Tags = 1

message TerminateProvisionedProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // If set to true, AWS Service Catalog stops managing the specified ProvisionedProduct object even if it cannot delete the underlying resources.
    boolean IgnoreErrors = 2;
    // The identifier of the ProvisionedProduct object to terminate. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.
    string ProvisionedProductId = 3;
    // The name of the ProvisionedProduct object to terminate. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.
    string ProvisionedProductName = 4;
    // An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the ProvisionedProduct object is terminated, further requests to terminate the same ProvisionedProduct object always return <b>ResourceNotFound</b> regardless of the value of <code>TerminateToken</code>.
    string TerminateToken = 5;
}

message TerminateProvisionedProductOutput {
    // The detailed result of the <a>TerminateProvisionedProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object that the request is modifying, and a list of any errors that the request encountered.
    RecordDetail RecordDetail = 1;
}

message UpdateConstraintInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The updated text description of the constraint.
    string Description = 2;
    // The identifier of the constraint to update.
    string Id = 3;
}

message UpdateConstraintOutput {
    // The resulting detailed constraint information.
    ConstraintDetail ConstraintDetail = 1;
    // The resulting updated constraint parameters.
    string ConstraintParameters = 2;
    // The status of the current request.
    Status Status = 3;
}

message UpdatePortfolioInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // Tags to add to the existing list of tags associated with the portfolio.
    array AddTags = 2;
    // The updated text description of the portfolio.
    string Description = 3;
    // The name to use for display purposes.
    string DisplayName = 4;
    // The identifier of the portfolio for the update request.
    string Id = 5;
    // The updated name of the portfolio provider.
    string ProviderName = 6;
    // Tags to remove from the existing list of tags associated with the portfolio.
    array RemoveTags = 7;
}

message UpdatePortfolioOutput {
    // The resulting detailed portfolio information.
    PortfolioDetail PortfolioDetail = 1;
    // Tags associated with the portfolio.
    array Tags = 2;
}

message UpdateProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // Tags to add to the existing list of tags associated with the product.
    array AddTags = 2;
    // The updated text description of the product.
    string Description = 3;
    // The updated distributor of the product.
    string Distributor = 4;
    // The identifier of the product for the update request.
    string Id = 5;
    // The updated product name.
    string Name = 6;
    // The updated owner of the product.
    string Owner = 7;
    // Tags to remove from the existing list of tags associated with the product.
    array RemoveTags = 8;
    // The updated support description for the product.
    string SupportDescription = 9;
    // The updated support email for the product.
    string SupportEmail = 10;
    // The updated support URL for the product.
    string SupportUrl = 11;
}

message UpdateProductOutput {
    // The resulting detailed product view information.
    ProductViewDetail ProductViewDetail = 1;
    // Tags associated with the product.
    array Tags = 2;
}

message UpdateProvisionedProductInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The identifier of the path to use in the updated ProvisionedProduct object. This value is optional if the product has a default path, and is required if there is more than one path for the specified product.
    string PathId = 2;
    // The identifier of the ProvisionedProduct object.
    string ProductId = 3;
    // The identifier of the ProvisionedProduct object to update. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.
    string ProvisionedProductId = 4;
    // The updated name of the ProvisionedProduct object. Specify either <code>ProvisionedProductName</code> or <code>ProvisionedProductId</code>, but not both.
    string ProvisionedProductName = 5;
    // The provisioning artifact identifier for this product. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 6;
    // A list of <code>ProvisioningParameter</code> objects used to update the ProvisionedProduct object.
    array ProvisioningParameters = 7;
    // The idempotency token that uniquely identifies the provisioning update request.
    string UpdateToken = 8;
}

message UpdateProvisionedProductOutput {
    // The detailed result of the <a>UpdateProvisionedProduct</a> request, containing the inputs made to that request, the current state of the request, a pointer to the ProvisionedProduct object that the request is modifying, and a list of any errors that the request encountered.
    RecordDetail RecordDetail = 1;
}

message UpdateProvisioningArtifactInput {
    // <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
    string AcceptLanguage = 1;
    // The updated text description of the provisioning artifact.
    string Description = 2;
    // The updated name of the provisioning artifact.
    string Name = 3;
    // The product identifier.
    string ProductId = 4;
    // The identifier of the provisioning artifact for the update request. This is sometimes referred to as the product version.
    string ProvisioningArtifactId = 5;
}

message UpdateProvisioningArtifactOutput {
    // Additional information about the provisioning artifact update request.
    array Info = 1;
    // The resulting detailed provisioning artifact information.
    ProvisioningArtifactDetail ProvisioningArtifactDetail = 2;
    // The status of the current request.
    Status Status = 3;
}

message UpdateProvisioningParameter {
    // The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter from <a>DescribeProvisioningParameters</a>.
    string Key = 1;
    // If true, uses the currently set value for <code>Key</code>, ignoring <code>UpdateProvisioningParameter.Value</code>.
    boolean UsePreviousValue = 2;
    // The value to use for updating the product provisioning. Any constraints on this value can be found in the <code>ProvisioningArtifactParameter</code> parameter for <code>Key</code>.
    string Value = 3;
}

repeated UpdateProvisioningParameter UpdateProvisioningParameters = 1

message UpdateTagOptionInput {
    // The updated active state.
    boolean Active = 1;
    // The identifier of the constraint to update.
    string Id = 2;
    // The updated value.
    string Value = 3;
}

message UpdateTagOptionOutput {
    // The resulting detailed TagOption information.
    TagOptionDetail TagOptionDetail = 1;
}

message UsageInstruction {
    // The usage instruction type for the value.
    string Type = 1;
    // The usage instruction value for this type.
    string Value = 2;
}

repeated UsageInstruction UsageInstructions = 1





















service AWSServiceCatalogService {
    // Accepts an offer to share a portfolio.
    rpc Post(PostRequest) returns (AcceptPortfolioShareOutput) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Associates the specified principal ARN with the specified portfolio.
    rpc Post#AssociatePrincipalWithPortfolio(Post#AssociatePrincipalWithPortfolioRequest) returns (AssociatePrincipalWithPortfolioOutput) {
      option (google.api.http) = {
        post: "//#AssociatePrincipalWithPortfolio"
        body: "body"
      };
    }
    // Associates a product with a portfolio.
    rpc Post#AssociateProductWithPortfolio(Post#AssociateProductWithPortfolioRequest) returns (AssociateProductWithPortfolioOutput) {
      option (google.api.http) = {
        post: "//#AssociateProductWithPortfolio"
        body: "body"
      };
    }
    // Associate a TagOption identifier with a resource identifier.
    rpc Post#AssociateTagOptionWithResource(Post#AssociateTagOptionWithResourceRequest) returns (AssociateTagOptionWithResourceOutput) {
      option (google.api.http) = {
        post: "//#AssociateTagOptionWithResource"
        body: "body"
      };
    }
    // <p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy the product to the same account or another account. You can copy the product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>
    rpc Post#CopyProduct(Post#CopyProductRequest) returns (CopyProductOutput) {
      option (google.api.http) = {
        post: "//#CopyProduct"
        body: "body"
      };
    }
    // Creates a new constraint. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/constraints.html">Using Constraints</a>.
    rpc Post#CreateConstraint(Post#CreateConstraintRequest) returns (CreateConstraintOutput) {
      option (google.api.http) = {
        post: "//#CreateConstraint"
        body: "body"
      };
    }
    // Creates a new portfolio.
    rpc Post#CreatePortfolio(Post#CreatePortfolioRequest) returns (CreatePortfolioOutput) {
      option (google.api.http) = {
        post: "//#CreatePortfolio"
        body: "body"
      };
    }
    // Creates a new portfolio share.
    rpc Post#CreatePortfolioShare(Post#CreatePortfolioShareRequest) returns (CreatePortfolioShareOutput) {
      option (google.api.http) = {
        post: "//#CreatePortfolioShare"
        body: "body"
      };
    }
    // Creates a new product.
    rpc Post#CreateProduct(Post#CreateProductRequest) returns (CreateProductOutput) {
      option (google.api.http) = {
        post: "//#CreateProduct"
        body: "body"
      };
    }
    // Create a new provisioning artifact for the specified product. This operation does not work with a product that has been shared with you.
    rpc Post#CreateProvisioningArtifact(Post#CreateProvisioningArtifactRequest) returns (CreateProvisioningArtifactOutput) {
      option (google.api.http) = {
        post: "//#CreateProvisioningArtifact"
        body: "body"
      };
    }
    // Create a new TagOption.
    rpc Post#CreateTagOption(Post#CreateTagOptionRequest) returns (CreateTagOptionOutput) {
      option (google.api.http) = {
        post: "//#CreateTagOption"
        body: "body"
      };
    }
    // Deletes the specified constraint.
    rpc Post#DeleteConstraint(Post#DeleteConstraintRequest) returns (DeleteConstraintOutput) {
      option (google.api.http) = {
        post: "//#DeleteConstraint"
        body: "body"
      };
    }
    // Deletes the specified portfolio. This operation does not work with a portfolio that has been shared with you or if it has products, users, constraints, or shared accounts associated with it.
    rpc Post#DeletePortfolio(Post#DeletePortfolioRequest) returns (DeletePortfolioOutput) {
      option (google.api.http) = {
        post: "//#DeletePortfolio"
        body: "body"
      };
    }
    // Deletes the specified portfolio share.
    rpc Post#DeletePortfolioShare(Post#DeletePortfolioShareRequest) returns (DeletePortfolioShareOutput) {
      option (google.api.http) = {
        post: "//#DeletePortfolioShare"
        body: "body"
      };
    }
    // Deletes the specified product. This operation does not work with a product that has been shared with you or is associated with a portfolio.
    rpc Post#DeleteProduct(Post#DeleteProductRequest) returns (DeleteProductOutput) {
      option (google.api.http) = {
        post: "//#DeleteProduct"
        body: "body"
      };
    }
    // Deletes the specified provisioning artifact. This operation does not work on a provisioning artifact associated with a product that has been shared with you, or on the last provisioning artifact associated with a product (a product must have at least one provisioning artifact).
    rpc Post#DeleteProvisioningArtifact(Post#DeleteProvisioningArtifactRequest) returns (DeleteProvisioningArtifactOutput) {
      option (google.api.http) = {
        post: "//#DeleteProvisioningArtifact"
        body: "body"
      };
    }
    // Retrieves detailed information for a specified constraint.
    rpc Post#DescribeConstraint(Post#DescribeConstraintRequest) returns (DescribeConstraintOutput) {
      option (google.api.http) = {
        post: "//#DescribeConstraint"
        body: "body"
      };
    }
    // Describes the status of the specified copy product operation.
    rpc Post#DescribeCopyProductStatus(Post#DescribeCopyProductStatusRequest) returns (DescribeCopyProductStatusOutput) {
      option (google.api.http) = {
        post: "//#DescribeCopyProductStatus"
        body: "body"
      };
    }
    // Retrieves detailed information and any tags associated with the specified portfolio.
    rpc Post#DescribePortfolio(Post#DescribePortfolioRequest) returns (DescribePortfolioOutput) {
      option (google.api.http) = {
        post: "//#DescribePortfolio"
        body: "body"
      };
    }
    // <p>Retrieves information about a specified product.</p> <p>This operation is functionally identical to <a>DescribeProductView</a> except that it takes as input <code>ProductId</code> instead of <code>ProductViewId</code>.</p>
    rpc Post#DescribeProduct(Post#DescribeProductRequest) returns (DescribeProductOutput) {
      option (google.api.http) = {
        post: "//#DescribeProduct"
        body: "body"
      };
    }
    // Retrieves information about a specified product, run with administrator access.
    rpc Post#DescribeProductAsAdmin(Post#DescribeProductAsAdminRequest) returns (DescribeProductAsAdminOutput) {
      option (google.api.http) = {
        post: "//#DescribeProductAsAdmin"
        body: "body"
      };
    }
    // <p>Retrieves information about a specified product.</p> <p>This operation is functionally identical to <a>DescribeProduct</a> except that it takes as input <code>ProductViewId</code> instead of <code>ProductId</code>.</p>
    rpc Post#DescribeProductView(Post#DescribeProductViewRequest) returns (DescribeProductViewOutput) {
      option (google.api.http) = {
        post: "//#DescribeProductView"
        body: "body"
      };
    }
    // Retrieve detailed information about the provisioned product.
    rpc Post#DescribeProvisionedProduct(Post#DescribeProvisionedProductRequest) returns (DescribeProvisionedProductOutput) {
      option (google.api.http) = {
        post: "//#DescribeProvisionedProduct"
        body: "body"
      };
    }
    // Retrieves detailed information about the specified provisioning artifact.
    rpc Post#DescribeProvisioningArtifact(Post#DescribeProvisioningArtifactRequest) returns (DescribeProvisioningArtifactOutput) {
      option (google.api.http) = {
        post: "//#DescribeProvisioningArtifact"
        body: "body"
      };
    }
    // <p>Provides information about parameters required to provision a specified product in a specified manner. Use this operation to obtain the list of <code>ProvisioningArtifactParameters</code> parameters available to call the <a>ProvisionProduct</a> operation for the specified product.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to the <code>ProvisionProduct</code> operation, do not include conflicted TagOption keys as tags. Calls to <code>ProvisionProduct</code> with empty TagOption values cause the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i> ". Calls to <code>ProvisionProduct</code> with conflicted TagOption keys automatically tag the provisioned product with the conflicted keys with the value "<code>sc-tagoption-conflict-portfolioId-productId</code>".</p>
    rpc Post#DescribeProvisioningParameters(Post#DescribeProvisioningParametersRequest) returns (DescribeProvisioningParametersOutput) {
      option (google.api.http) = {
        post: "//#DescribeProvisioningParameters"
        body: "body"
      };
    }
    // Retrieves a paginated list of the full details of a specific request. Use this operation after calling a request operation (<a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>).
    rpc Post#DescribeRecord(Post#DescribeRecordRequest) returns (DescribeRecordOutput) {
      option (google.api.http) = {
        post: "//#DescribeRecord"
        body: "body"
      };
    }
    // Describes a TagOption.
    rpc Post#DescribeTagOption(Post#DescribeTagOptionRequest) returns (DescribeTagOptionOutput) {
      option (google.api.http) = {
        post: "//#DescribeTagOption"
        body: "body"
      };
    }
    // Disassociates a previously associated principal ARN from a specified portfolio.
    rpc Post#DisassociatePrincipalFromPortfolio(Post#DisassociatePrincipalFromPortfolioRequest) returns (DisassociatePrincipalFromPortfolioOutput) {
      option (google.api.http) = {
        post: "//#DisassociatePrincipalFromPortfolio"
        body: "body"
      };
    }
    // Disassociates the specified product from the specified portfolio.
    rpc Post#DisassociateProductFromPortfolio(Post#DisassociateProductFromPortfolioRequest) returns (DisassociateProductFromPortfolioOutput) {
      option (google.api.http) = {
        post: "//#DisassociateProductFromPortfolio"
        body: "body"
      };
    }
    // Disassociates a TagOption from a resource.
    rpc Post#DisassociateTagOptionFromResource(Post#DisassociateTagOptionFromResourceRequest) returns (DisassociateTagOptionFromResourceOutput) {
      option (google.api.http) = {
        post: "//#DisassociateTagOptionFromResource"
        body: "body"
      };
    }
    // Lists details of all portfolios for which sharing was accepted by this account.
    rpc Post#ListAcceptedPortfolioShares(Post#ListAcceptedPortfolioSharesRequest) returns (ListAcceptedPortfolioSharesOutput) {
      option (google.api.http) = {
        post: "//#ListAcceptedPortfolioShares"
        body: "body"
      };
    }
    // Retrieves detailed constraint information for the specified portfolio and product.
    rpc Post#ListConstraintsForPortfolio(Post#ListConstraintsForPortfolioRequest) returns (ListConstraintsForPortfolioOutput) {
      option (google.api.http) = {
        post: "//#ListConstraintsForPortfolio"
        body: "body"
      };
    }
    // Returns a paginated list of all paths to a specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.
    rpc Post#ListLaunchPaths(Post#ListLaunchPathsRequest) returns (ListLaunchPathsOutput) {
      option (google.api.http) = {
        post: "//#ListLaunchPaths"
        body: "body"
      };
    }
    // Lists the account IDs that have been authorized sharing of the specified portfolio.
    rpc Post#ListPortfolioAccess(Post#ListPortfolioAccessRequest) returns (ListPortfolioAccessOutput) {
      option (google.api.http) = {
        post: "//#ListPortfolioAccess"
        body: "body"
      };
    }
    // Lists all portfolios in the catalog.
    rpc Post#ListPortfolios(Post#ListPortfoliosRequest) returns (ListPortfoliosOutput) {
      option (google.api.http) = {
        post: "//#ListPortfolios"
        body: "body"
      };
    }
    // Lists all portfolios that the specified product is associated with.
    rpc Post#ListPortfoliosForProduct(Post#ListPortfoliosForProductRequest) returns (ListPortfoliosForProductOutput) {
      option (google.api.http) = {
        post: "//#ListPortfoliosForProduct"
        body: "body"
      };
    }
    // Lists all principal ARNs associated with the specified portfolio.
    rpc Post#ListPrincipalsForPortfolio(Post#ListPrincipalsForPortfolioRequest) returns (ListPrincipalsForPortfolioOutput) {
      option (google.api.http) = {
        post: "//#ListPrincipalsForPortfolio"
        body: "body"
      };
    }
    // Lists all provisioning artifacts associated with the specified product.
    rpc Post#ListProvisioningArtifacts(Post#ListProvisioningArtifactsRequest) returns (ListProvisioningArtifactsOutput) {
      option (google.api.http) = {
        post: "//#ListProvisioningArtifacts"
        body: "body"
      };
    }
    // Returns a paginated list of all performed requests, in the form of RecordDetails objects that are filtered as specified.
    rpc Post#ListRecordHistory(Post#ListRecordHistoryRequest) returns (ListRecordHistoryOutput) {
      option (google.api.http) = {
        post: "//#ListRecordHistory"
        body: "body"
      };
    }
    // Lists resources associated with a TagOption.
    rpc Post#ListResourcesForTagOption(Post#ListResourcesForTagOptionRequest) returns (ListResourcesForTagOptionOutput) {
      option (google.api.http) = {
        post: "//#ListResourcesForTagOption"
        body: "body"
      };
    }
    // Lists detailed TagOptions information.
    rpc Post#ListTagOptions(Post#ListTagOptionsRequest) returns (ListTagOptionsOutput) {
      option (google.api.http) = {
        post: "//#ListTagOptions"
        body: "body"
      };
    }
    // <p>Requests a <i>provision</i> of a specified product. A <i>provisioned product</i> is a resourced instance for a product. For example, provisioning a CloudFormation-template-backed product results in launching a CloudFormation stack and all the underlying resources that come with it. </p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation. The error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>" indicates that your request contains a tag which has a tag key but no corresponding tag value (value is empty or null). Your call may have included values returned from a <code>DescribeProvisioningParameters</code> call that resulted in a TagOption key with an empty list. This happens when TagOption keys are in conflict. For more information, see <a>DescribeProvisioningParameters</a>.</p>
    rpc Post#ProvisionProduct(Post#ProvisionProductRequest) returns (ProvisionProductOutput) {
      option (google.api.http) = {
        post: "//#ProvisionProduct"
        body: "body"
      };
    }
    // Rejects an offer to share a portfolio.
    rpc Post#RejectPortfolioShare(Post#RejectPortfolioShareRequest) returns (RejectPortfolioShareOutput) {
      option (google.api.http) = {
        post: "//#RejectPortfolioShare"
        body: "body"
      };
    }
    // Returns a paginated list of all the ProvisionedProduct objects that are currently available (not terminated).
    rpc Post#ScanProvisionedProducts(Post#ScanProvisionedProductsRequest) returns (ScanProvisionedProductsOutput) {
      option (google.api.http) = {
        post: "//#ScanProvisionedProducts"
        body: "body"
      };
    }
    // <p>Returns a paginated list all of the <code>Products</code> objects to which the caller has access. </p> <p>The output of this operation can be used as input for other operations, such as <a>DescribeProductView</a>.</p>
    rpc Post#SearchProducts(Post#SearchProductsRequest) returns (SearchProductsOutput) {
      option (google.api.http) = {
        post: "//#SearchProducts"
        body: "body"
      };
    }
    // Retrieves summary and status information about all products created within the caller's account. If a portfolio ID is provided, this operation retrieves information for only those products that are associated with the specified portfolio.
    rpc Post#SearchProductsAsAdmin(Post#SearchProductsAsAdminRequest) returns (SearchProductsAsAdminOutput) {
      option (google.api.http) = {
        post: "//#SearchProductsAsAdmin"
        body: "body"
      };
    }
    // <p>Requests termination of an existing ProvisionedProduct object. If there are <code>Tags</code> associated with the object, they are terminated when the ProvisionedProduct object is terminated. </p> <p>This operation does not delete any records associated with the ProvisionedProduct object.</p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation.</p>
    rpc Post#TerminateProvisionedProduct(Post#TerminateProvisionedProductRequest) returns (TerminateProvisionedProductOutput) {
      option (google.api.http) = {
        post: "//#TerminateProvisionedProduct"
        body: "body"
      };
    }
    // Updates an existing constraint.
    rpc Post#UpdateConstraint(Post#UpdateConstraintRequest) returns (UpdateConstraintOutput) {
      option (google.api.http) = {
        post: "//#UpdateConstraint"
        body: "body"
      };
    }
    // Updates the specified portfolio's details. This operation does not work with a product that has been shared with you.
    rpc Post#UpdatePortfolio(Post#UpdatePortfolioRequest) returns (UpdatePortfolioOutput) {
      option (google.api.http) = {
        post: "//#UpdatePortfolio"
        body: "body"
      };
    }
    // Updates an existing product.
    rpc Post#UpdateProduct(Post#UpdateProductRequest) returns (UpdateProductOutput) {
      option (google.api.http) = {
        post: "//#UpdateProduct"
        body: "body"
      };
    }
    // <p>Requests updates to the configuration of an existing ProvisionedProduct object. If there are tags associated with the object, they cannot be updated or added with this operation. Depending on the specific updates requested, this operation may update with no interruption, with some interruption, or replace the ProvisionedProduct object entirely. </p> <p>You can check the status of this request using the <a>DescribeRecord</a> operation.</p>
    rpc Post#UpdateProvisionedProduct(Post#UpdateProvisionedProductRequest) returns (UpdateProvisionedProductOutput) {
      option (google.api.http) = {
        post: "//#UpdateProvisionedProduct"
        body: "body"
      };
    }
    // Updates an existing provisioning artifact's information. This operation does not work on a provisioning artifact associated with a product that has been shared with you.
    rpc Post#UpdateProvisioningArtifact(Post#UpdateProvisioningArtifactRequest) returns (UpdateProvisioningArtifactOutput) {
      option (google.api.http) = {
        post: "//#UpdateProvisioningArtifact"
        body: "body"
      };
    }
    // Updates an existing TagOption.
    rpc Post#UpdateTagOption(Post#UpdateTagOptionRequest) returns (UpdateTagOptionOutput) {
      option (google.api.http) = {
        post: "//#UpdateTagOption"
        body: "body"
      };
    }
}
