swagger: '2.0'
schemes:
  - http
host: devicefarm.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: 'AWS Device Farm is a service that enables mobile app developers to test Android, iOS, and Fire OS apps on physical phones, tablets, and other devices in the cloud.'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: AWS Device Farm
  version: '2015-06-23'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/devicefarm-2015-06-23.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: devicefarm
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/devicefarm/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a device pool.
      operationId: CreateDevicePool
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDevicePoolRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDevicePoolResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#CreateNetworkProfile':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a network profile.
      operationId: CreateNetworkProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNetworkProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNetworkProfileResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#CreateProject':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new project.
      operationId: CreateProject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateProjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProjectResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#CreateRemoteAccessSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Specifies and starts a remote access session.
      operationId: CreateRemoteAccessSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRemoteAccessSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#CreateUpload':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Uploads an app or test scripts.
      operationId: CreateUpload
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUploadRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUploadResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteDevicePool':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system.
      operationId: DeleteDevicePool
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDevicePoolRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDevicePoolResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteNetworkProfile':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a network profile.
      operationId: DeleteNetworkProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNetworkProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNetworkProfileResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteProject':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes an AWS Device Farm project, given the project ARN.</p> <p> <b>Note</b> Deleting this resource does not stop an in-progress run.</p>'
      operationId: DeleteProject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProjectResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteRemoteAccessSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a completed remote access session and its results.
      operationId: DeleteRemoteAccessSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRemoteAccessSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteRun':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the run, given the run ARN.</p> <p> <b>Note</b> Deleting this resource does not stop an in-progress run.</p>'
      operationId: DeleteRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRunRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRunResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#DeleteUpload':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes an upload given the upload ARN.
      operationId: DeleteUpload
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUploadRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUploadResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetAccountSettings':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the number of unmetered iOS and/or unmetered Android devices that have been purchased by the account.
      operationId: GetAccountSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountSettingsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountSettingsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetDevice':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a unique device type.
      operationId: GetDevice
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDeviceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeviceResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetDevicePool':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a device pool.
      operationId: GetDevicePool
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDevicePoolRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDevicePoolResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetDevicePoolCompatibility':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about compatibility with a device pool.
      operationId: GetDevicePoolCompatibility
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetDevicePoolCompatibilityRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDevicePoolCompatibilityResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetJob':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a job.
      operationId: GetJob
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetJobRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetNetworkProfile':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns information about a network profile.
      operationId: GetNetworkProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetNetworkProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetNetworkProfileResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetOfferingStatus':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Gets the current status and future status of all offerings purchased by an AWS account. The response indicates how many offerings are currently available and the offerings that will be available in the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: GetOfferingStatus
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetOfferingStatusRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOfferingStatusResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetProject':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a project.
      operationId: GetProject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetProjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetProjectResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetRemoteAccessSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a link to a currently running remote access session.
      operationId: GetRemoteAccessSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetRemoteAccessSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetRun':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a run.
      operationId: GetRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetRunRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRunResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetSuite':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a suite.
      operationId: GetSuite
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetSuiteRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSuiteResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetTest':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about a test.
      operationId: GetTest
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetTestRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTestResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#GetUpload':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about an upload.
      operationId: GetUpload
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GetUploadRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUploadResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#InstallToRemoteAccessSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Installs an application to the device in a remote access session. For Android applications, the file must be in .apk format. For iOS applications, the file must be in .ipa format.'
      operationId: InstallToRemoteAccessSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InstallToRemoteAccessSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InstallToRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListArtifacts':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about artifacts.
      operationId: ListArtifacts
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListArtifactsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListArtifactsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListDevicePools':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about device pools.
      operationId: ListDevicePools
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDevicePoolsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevicePoolsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListDevices':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about unique device types.
      operationId: ListDevices
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListDevicesRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevicesResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListJobs':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about jobs.
      operationId: ListJobs
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListJobsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListNetworkProfiles':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the list of available network profiles.
      operationId: ListNetworkProfiles
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListNetworkProfilesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNetworkProfilesResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListOfferingPromotions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of offering promotions. Each offering promotion record contains the ID and description of the promotion. The API returns a <code>NotEligible</code> error if the caller is not permitted to invoke the operation. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: ListOfferingPromotions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOfferingPromotionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfferingPromotionsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListOfferingTransactions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account. The list is paginated and ordered by a descending timestamp (most recent transactions are first). The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: ListOfferingTransactions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOfferingTransactionsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfferingTransactionsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListOfferings':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Returns a list of products or offerings that the user can manage through the API. Each offering record indicates the recurring price per unit and the frequency for that offering. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: ListOfferings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOfferingsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOfferingsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListProjects':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about projects.
      operationId: ListProjects
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListProjectsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProjectsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListRemoteAccessSessions':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns a list of all currently running remote access sessions.
      operationId: ListRemoteAccessSessions
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRemoteAccessSessionsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRemoteAccessSessionsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListRuns':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Gets information about runs, given an AWS Device Farm project ARN.'
      operationId: ListRuns
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListRunsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRunsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListSamples':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Gets information about samples, given an AWS Device Farm project ARN'
      operationId: ListSamples
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSamplesRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSamplesResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListSuites':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about suites.
      operationId: ListSuites
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListSuitesRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSuitesResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListTests':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about tests.
      operationId: ListTests
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListTestsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTestsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListUniqueProblems':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Gets information about unique problems.
      operationId: ListUniqueProblems
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListUniqueProblemsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUniqueProblemsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ListUploads':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Gets information about uploads, given an AWS Device Farm project ARN.'
      operationId: ListUploads
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListUploadsRequest'
        - description: Pagination token
          in: query
          name: nextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUploadsResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#PurchaseOffering':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering, unless the renewal was overridden. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: PurchaseOffering
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PurchaseOfferingRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseOfferingResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#RenewOffering':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Explicitly sets the quantity of devices to renew for an offering, starting from the <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.'
      operationId: RenewOffering
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RenewOfferingRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RenewOfferingResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: NotEligibleException
          schema:
            $ref: '#/definitions/NotEligibleException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#ScheduleRun':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Schedules a run.
      operationId: ScheduleRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleRunRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleRunResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: IdempotencyException
          schema:
            $ref: '#/definitions/IdempotencyException'
        '484':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#StopRemoteAccessSession':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Ends a specified remote access session.
      operationId: StopRemoteAccessSession
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopRemoteAccessSessionRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopRemoteAccessSessionResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#StopRun':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Initiates a stop request for the current test run. AWS Device Farm will immediately stop the run on devices where tests have not started executing, and you will not be billed for these devices. On devices where tests have started executing, Setup Suite and Teardown Suite tests will run to completion before stopping execution on those devices. You will be billed for Setup, Teardown, and any tests that were in progress or already completed.'
      operationId: StopRun
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/StopRunRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopRunResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#UpdateDevicePool':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Modifies the name, description, and rules in a device pool given the attributes and the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a whole (or not at all).'
      operationId: UpdateDevicePool
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDevicePoolRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDevicePoolResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#UpdateNetworkProfile':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the network profile with specific settings.
      operationId: UpdateNetworkProfile
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNetworkProfileRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNetworkProfileResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
  '/#UpdateProject':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Modifies the specified project name, given the project ARN and a new name.'
      operationId: UpdateProject
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProjectRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProjectResult'
        '480':
          description: ArgumentException
          schema:
            $ref: '#/definitions/ArgumentException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceAccountException
          schema:
            $ref: '#/definitions/ServiceAccountException'
definitions:
  AWSAccountNumber:
    maxLength: 16
    minLength: 2
    type: string
  AccountSettings:
    description: A container for account-level settings within AWS Device Farm.
    properties:
      awsAccountNumber:
        $ref: '#/definitions/AWSAccountNumber'
        description: The AWS account number specified in the <code>AccountSettings</code> container.
      defaultJobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: The default number of minutes (at the account level) a test run will execute before it times out. Default value is 60 minutes.
      maxJobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: The maximum number of minutes a test run will execute before it times out.
      maxSlots:
        $ref: '#/definitions/MaxSlotMap'
        description: 'The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.'
      trialMinutes:
        $ref: '#/definitions/TrialMinutes'
        description: Information about an AWS account's usage of free trial device minutes.
      unmeteredDevices:
        $ref: '#/definitions/PurchasedDevicesMap'
        description: Returns the unmetered devices you have purchased or want to purchase.
      unmeteredRemoteAccessDevices:
        $ref: '#/definitions/PurchasedDevicesMap'
        description: Returns the unmetered remote access devices you have purchased or want to purchase.
    type: object
  AccountsCleanup:
    type: boolean
  AmazonResourceName:
    minLength: 32
    type: string
  AmazonResourceNames:
    items:
      $ref: '#/definitions/AmazonResourceName'
    type: array
  AndroidPaths:
    items:
      $ref: '#/definitions/String'
    type: array
  AppPackagesCleanup:
    type: boolean
  ArgumentException:
    description: An invalid argument was specified.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: Any additional information about the exception.
    type: object
  Artifact:
    description: Represents the output of a test. Examples of artifacts include logs and screenshots.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The artifact's ARN.
      extension:
        $ref: '#/definitions/String'
        description: The artifact's file extension.
      name:
        $ref: '#/definitions/Name'
        description: The artifact's name.
      type:
        $ref: '#/definitions/ArtifactType'
        description: '<p>The artifact''s type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> </ul>'
      url:
        $ref: '#/definitions/URL'
        description: The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file.
    type: object
  ArtifactCategory:
    enum:
      - SCREENSHOT
      - FILE
      - LOG
    type: string
  ArtifactType:
    enum:
      - UNKNOWN
      - SCREENSHOT
      - DEVICE_LOG
      - MESSAGE_LOG
      - VIDEO_LOG
      - RESULT_LOG
      - SERVICE_LOG
      - WEBKIT_LOG
      - INSTRUMENTATION_OUTPUT
      - EXERCISER_MONKEY_OUTPUT
      - CALABASH_JSON_OUTPUT
      - CALABASH_PRETTY_OUTPUT
      - CALABASH_STANDARD_OUTPUT
      - CALABASH_JAVA_XML_OUTPUT
      - AUTOMATION_OUTPUT
      - APPIUM_SERVER_OUTPUT
      - APPIUM_JAVA_OUTPUT
      - APPIUM_JAVA_XML_OUTPUT
      - APPIUM_PYTHON_OUTPUT
      - APPIUM_PYTHON_XML_OUTPUT
      - EXPLORER_EVENT_LOG
      - EXPLORER_SUMMARY_LOG
      - APPLICATION_CRASH_REPORT
      - XCTEST_LOG
      - VIDEO
      - CUSTOMER_ARTIFACT
      - CUSTOMER_ARTIFACT_LOG
    type: string
  Artifacts:
    items:
      $ref: '#/definitions/Artifact'
    type: array
  BillingMethod:
    enum:
      - METERED
      - UNMETERED
    type: string
  Boolean:
    type: boolean
  CPU:
    description: <p>Represents the amount of CPU that an app is using on a physical device.</p> <p>Note that this does not represent system-wide CPU usage.</p>
    properties:
      architecture:
        $ref: '#/definitions/String'
        description: 'The CPU''s architecture, for example x86 or ARM.'
      clock:
        $ref: '#/definitions/Double'
        description: 'The clock speed of the device''s CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.'
      frequency:
        $ref: '#/definitions/String'
        description: The CPU's frequency.
    type: object
  ClientId:
    maxLength: 64
    minLength: 0
    type: string
  ContentType:
    maxLength: 64
    minLength: 0
    type: string
  Counters:
    description: Represents entity counters.
    properties:
      errored:
        $ref: '#/definitions/Integer'
        description: The number of errored entities.
      failed:
        $ref: '#/definitions/Integer'
        description: The number of failed entities.
      passed:
        $ref: '#/definitions/Integer'
        description: The number of passed entities.
      skipped:
        $ref: '#/definitions/Integer'
        description: The number of skipped entities.
      stopped:
        $ref: '#/definitions/Integer'
        description: The number of stopped entities.
      total:
        $ref: '#/definitions/Integer'
        description: The total number of entities.
      warned:
        $ref: '#/definitions/Integer'
        description: The number of warned entities.
    type: object
  CreateDevicePoolRequest:
    description: Represents a request to the create device pool operation.
    example:
      description: My Android devices
      name: MyDevicePool
      projectArn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      rules: []
    properties:
      description:
        $ref: '#/definitions/Message'
        description: The device pool's description.
      name:
        $ref: '#/definitions/Name'
        description: The device pool's name.
      projectArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the project for the device pool.
      rules:
        $ref: '#/definitions/Rules'
        description: The device pool's rules.
    required:
      - projectArn
      - name
      - rules
    type: object
  CreateDevicePoolResult:
    description: Represents the result of a create device pool request.
    example:
      devicePool: {}
    properties:
      devicePool:
        $ref: '#/definitions/DevicePool'
        description: The newly created device pool.
    type: object
  CreateNetworkProfileRequest:
    properties:
      description:
        $ref: '#/definitions/Message'
        description: The description of the network profile.
      downlinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      downlinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      downlinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      downlinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of received packets that fail to arrive from 0 to 100 percent.
      name:
        $ref: '#/definitions/Name'
        description: The name you wish to specify for the new network profile.
      projectArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to create a network profile.
      type:
        $ref: '#/definitions/NetworkProfileType'
        description: The type of network profile you wish to create. Valid values are listed below.
      uplinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      uplinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      uplinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      uplinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
    required:
      - projectArn
      - name
    type: object
  CreateNetworkProfileResult:
    properties:
      networkProfile:
        $ref: '#/definitions/NetworkProfile'
        description: The network profile that is returned by the create network profile request.
    type: object
  CreateProjectRequest:
    description: Represents a request to the create project operation.
    example:
      name: MyProject
    properties:
      defaultJobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: Sets the execution timeout value (in minutes) for a project. All test runs in this project will use the specified execution timeout value unless overridden when scheduling a run.
      name:
        $ref: '#/definitions/Name'
        description: The project's name.
    required:
      - name
    type: object
  CreateProjectResult:
    description: Represents the result of a create project request.
    example:
      project:
        arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE'
        created: '1472660939.152'
        name: MyProject
    properties:
      project:
        $ref: '#/definitions/Project'
        description: The newly created project.
    type: object
  CreateRemoteAccessSessionConfiguration:
    description: 'Creates the configuration settings for a remote access session, including the device model and type.'
    properties:
      billingMethod:
        $ref: '#/definitions/BillingMethod'
        description: Returns the billing method for purposes of configuring a remote access session.
    type: object
  CreateRemoteAccessSessionRequest:
    description: Creates and submits a request to start a remote access session.
    example:
      configuration:
        billingMethod: METERED
      deviceArn: 'arn:aws:devicefarm:us-west-2::device:123EXAMPLE'
      name: MySession
      projectArn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
    properties:
      clientId:
        $ref: '#/definitions/ClientId'
        description: 'Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This is required only if <code>remoteDebugEnabled</code> is set to true <code>true</code>.'
      configuration:
        $ref: '#/definitions/CreateRemoteAccessSessionConfiguration'
        description: The configuration information for the remote access session request.
      deviceArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the device for which you want to create a remote access session.
      name:
        $ref: '#/definitions/Name'
        description: The name of the remote access session that you wish to create.
      projectArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.
      remoteDebugEnabled:
        $ref: '#/definitions/Boolean'
        description: Set to <code>true</code> if you want to access devices remotely for debugging in your remote access session.
      sshPublicKey:
        $ref: '#/definitions/SshPublicKey'
        description: The public key of the <code>ssh</code> key pair you want to use for connecting to remote devices in your remote debugging session. This is only required if <code>remoteDebugEnabled</code> is set to <code>true</code>.
    required:
      - projectArn
      - deviceArn
    type: object
  CreateRemoteAccessSessionResult:
    description: Represents the server response from a request to create a remote access session.
    example:
      remoteAccessSession: {}
    properties:
      remoteAccessSession:
        $ref: '#/definitions/RemoteAccessSession'
        description: A container that describes the remote access session when the request to create a remote access session is sent.
    type: object
  CreateUploadRequest:
    description: Represents a request to the create upload operation.
    example:
      name: MyAppiumPythonUpload
      projectArn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      type: APPIUM_PYTHON_TEST_PACKAGE
    properties:
      contentType:
        $ref: '#/definitions/ContentType'
        description: 'The upload''s content type (for example, "application/octet-stream").'
      name:
        $ref: '#/definitions/Name'
        description: 'The upload''s file name. The name should not contain the ''/'' character. If uploading an iOS app, the file name needs to end with the <code>.ipa</code> extension. If uploading an Android app, the file name needs to end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension.'
      projectArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the project for the upload.
      type:
        $ref: '#/definitions/UploadType'
        description: '<p>The upload''s upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> </ul> <p> <b>Note</b> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>'
    required:
      - projectArn
      - name
      - type
    type: object
  CreateUploadResult:
    description: Represents the result of a create upload request.
    example:
      upload:
        arn: 'arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE'
        created: '1472661404.186'
        name: MyAppiumPythonUpload
        status: INITIALIZED
        type: APPIUM_PYTHON_TEST_PACKAGE
        url: 'https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE'
    properties:
      upload:
        $ref: '#/definitions/Upload'
        description: The newly created upload.
    type: object
  CurrencyCode:
    enum:
      - USD
    type: string
  CustomerArtifactPaths:
    description: '<p>A JSON object specifying the paths where the artifacts generated by the customer''s tests, on the device or in the test environment, will be pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>'
    properties:
      androidPaths:
        $ref: '#/definitions/AndroidPaths'
        description: Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.
      deviceHostPaths:
        $ref: '#/definitions/DeviceHostPaths'
        description: Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.
      iosPaths:
        $ref: '#/definitions/IosPaths'
        description: Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.
    type: object
  DateTime:
    format: date-time
    type: string
  DeleteDevicePoolRequest:
    description: Represents a request to the delete device pool operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish to delete.
    required:
      - arn
    type: object
  DeleteDevicePoolResult:
    description: Represents the result of a delete device pool request.
    example: {}
    properties: {}
    type: object
  DeleteNetworkProfileRequest:
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the network profile you want to delete.
    required:
      - arn
    type: object
  DeleteNetworkProfileResult:
    properties: {}
    type: object
  DeleteProjectRequest:
    description: Represents a request to the delete project operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to delete.
    required:
      - arn
    type: object
  DeleteProjectResult:
    description: Represents the result of a delete project request.
    example: {}
    properties: {}
    type: object
  DeleteRemoteAccessSessionRequest:
    description: Represents the request to delete the specified remote access session.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote access.
    required:
      - arn
    type: object
  DeleteRemoteAccessSessionResult:
    description: The response from the server when a request is made to delete the remote access session.
    example: {}
    properties: {}
    type: object
  DeleteRunRequest:
    description: Represents a request to the delete run operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) for the run you wish to delete.
    required:
      - arn
    type: object
  DeleteRunResult:
    description: Represents the result of a delete run request.
    example: {}
    properties: {}
    type: object
  DeleteUploadRequest:
    description: Represents a request to the delete upload operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to delete.
    required:
      - arn
    type: object
  DeleteUploadResult:
    description: Represents the result of a delete upload request.
    example: {}
    properties: {}
    type: object
  Device:
    description: Represents a device type that an app is tested against.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The device's ARN.
      carrier:
        $ref: '#/definitions/String'
        description: The device's carrier.
      cpu:
        $ref: '#/definitions/CPU'
        description: Information about the device's CPU.
      fleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet to which this device belongs.
      fleetType:
        $ref: '#/definitions/String'
        description: The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.
      formFactor:
        $ref: '#/definitions/DeviceFormFactor'
        description: '<p>The device''s form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>'
      heapSize:
        $ref: '#/definitions/Long'
        description: 'The device''s heap size, expressed in bytes.'
      image:
        $ref: '#/definitions/String'
        description: The device's image name.
      manufacturer:
        $ref: '#/definitions/String'
        description: The device's manufacturer name.
      memory:
        $ref: '#/definitions/Long'
        description: 'The device''s total memory size, expressed in bytes.'
      model:
        $ref: '#/definitions/String'
        description: The device's model name.
      name:
        $ref: '#/definitions/Name'
        description: The device's display name.
      os:
        $ref: '#/definitions/String'
        description: The device's operating system type.
      platform:
        $ref: '#/definitions/DevicePlatform'
        description: '<p>The device''s platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>'
      radio:
        $ref: '#/definitions/String'
        description: The device's radio.
      remoteAccessEnabled:
        $ref: '#/definitions/Boolean'
        description: Specifies whether remote access has been enabled for the specified device.
      remoteDebugEnabled:
        $ref: '#/definitions/Boolean'
        description: This flag is set to <code>true</code> if remote debugging is enabled for the device.
      resolution:
        $ref: '#/definitions/Resolution'
        description: The resolution of the device.
    type: object
  DeviceAttribute:
    enum:
      - ARN
      - PLATFORM
      - FORM_FACTOR
      - MANUFACTURER
      - REMOTE_ACCESS_ENABLED
      - REMOTE_DEBUG_ENABLED
      - APPIUM_VERSION
    type: string
  DeviceFormFactor:
    enum:
      - PHONE
      - TABLET
    type: string
  DeviceHostPaths:
    items:
      $ref: '#/definitions/String'
    type: array
  DeviceMinutes:
    description: Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.
    properties:
      metered:
        $ref: '#/definitions/Double'
        description: 'When specified, represents only the sum of metered minutes used by the resource to run tests.'
      total:
        $ref: '#/definitions/Double'
        description: 'When specified, represents the total minutes used by the resource to run tests.'
      unmetered:
        $ref: '#/definitions/Double'
        description: 'When specified, represents only the sum of unmetered minutes used by the resource to run tests.'
    type: object
  DevicePlatform:
    enum:
      - ANDROID
      - IOS
    type: string
  DevicePool:
    description: Represents a collection of device types.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The device pool's ARN.
      description:
        $ref: '#/definitions/Message'
        description: The device pool's description.
      name:
        $ref: '#/definitions/Name'
        description: The device pool's name.
      rules:
        $ref: '#/definitions/Rules'
        description: Information about the device pool's rules.
      type:
        $ref: '#/definitions/DevicePoolType'
        description: '<p>The device pool''s type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>'
    type: object
  DevicePoolCompatibilityResult:
    description: Represents a device pool compatibility result.
    properties:
      compatible:
        $ref: '#/definitions/Boolean'
        description: Whether the result was compatible with the device pool.
      device:
        $ref: '#/definitions/Device'
        description: The device (phone or tablet) that you wish to return information about.
      incompatibilityMessages:
        $ref: '#/definitions/IncompatibilityMessages'
        description: Information about the compatibility.
    type: object
  DevicePoolCompatibilityResults:
    items:
      $ref: '#/definitions/DevicePoolCompatibilityResult'
    type: array
  DevicePoolType:
    enum:
      - CURATED
      - PRIVATE
    type: string
  DevicePools:
    items:
      $ref: '#/definitions/DevicePool'
    type: array
  Devices:
    items:
      $ref: '#/definitions/Device'
    type: array
  Double:
    format: double
    type: number
  ExecutionConfiguration:
    description: 'Represents configuration information about a test run, such as the execution timeout (in minutes).'
    properties:
      accountsCleanup:
        $ref: '#/definitions/AccountsCleanup'
        description: 'True if account cleanup is enabled at the beginning of the test; otherwise, false.'
      appPackagesCleanup:
        $ref: '#/definitions/AppPackagesCleanup'
        description: 'True if app package cleanup is enabled at the beginning of the test; otherwise, false.'
      jobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: The number of minutes a test run will execute before it times out.
    type: object
  ExecutionResult:
    enum:
      - PENDING
      - PASSED
      - WARNED
      - FAILED
      - SKIPPED
      - ERRORED
      - STOPPED
    type: string
  ExecutionResultCode:
    enum:
      - PARSING_FAILED
    type: string
  ExecutionStatus:
    enum:
      - PENDING
      - PENDING_CONCURRENCY
      - PENDING_DEVICE
      - PROCESSING
      - SCHEDULING
      - PREPARING
      - RUNNING
      - COMPLETED
      - STOPPING
    type: string
  Filter:
    maxLength: 8192
    minLength: 0
    type: string
  GetAccountSettingsRequest:
    description: Represents the request sent to retrieve the account settings.
    example: {}
    properties: {}
    type: object
  GetAccountSettingsResult:
    description: Represents the account settings return values from the <code>GetAccountSettings</code> request.
    example:
      accountSettings:
        awsAccountNumber: '123456789101'
        unmeteredDevices:
          ANDROID: 1
          IOS: 2
    properties:
      accountSettings:
        $ref: '#/definitions/AccountSettings'
        description: The account settings.
    type: object
  GetDevicePoolCompatibilityRequest:
    description: Represents a request to the get device pool compatibility operation.
    example:
      appArn: 'arn:aws:devicefarm:us-west-2::app:123-456-EXAMPLE-GUID'
      devicePoolArn: 'arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID'
      testType: APPIUM_PYTHON
    properties:
      appArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the app that is associated with the specified device pool.
      devicePoolArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The device pool's ARN.
      test:
        $ref: '#/definitions/ScheduleRunTest'
        description: Information about the uploaded test to be run against the device pool.
      testType:
        $ref: '#/definitions/TestType'
        description: '<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    required:
      - devicePoolArn
    type: object
  GetDevicePoolCompatibilityResult:
    description: Represents the result of describe device pool compatibility request.
    example:
      compatibleDevices: []
      incompatibleDevices: []
    properties:
      compatibleDevices:
        $ref: '#/definitions/DevicePoolCompatibilityResults'
        description: Information about compatible devices.
      incompatibleDevices:
        $ref: '#/definitions/DevicePoolCompatibilityResults'
        description: Information about incompatible devices.
    type: object
  GetDevicePoolRequest:
    description: Represents a request to the get device pool operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The device pool's ARN.
    required:
      - arn
    type: object
  GetDevicePoolResult:
    description: Represents the result of a get device pool request.
    example:
      devicePool: {}
    properties:
      devicePool:
        $ref: '#/definitions/DevicePool'
        description: An object containing information about the requested device pool.
    type: object
  GetDeviceRequest:
    description: Represents a request to the get device request.
    example:
      arn: 'arn:aws:devicefarm:us-west-2::device:123EXAMPLE'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The device type's ARN.
    required:
      - arn
    type: object
  GetDeviceResult:
    description: Represents the result of a get device request.
    example:
      device:
        arn: 'arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C'
        cpu:
          architecture: armeabi-v7a
          clock: 2265.6
          frequency: MHz
        formFactor: PHONE
        heapSize: 256000000
        image: 75B2B7EF6C12345EXAMPLE
        manufacturer: LG
        memory: 16000000000
        model: G2 (Sprint)
        name: LG G2 (Sprint)
        os: 4.2.2
        platform: ANDROID
        resolution:
          height: 1920
          width: 1080
    properties:
      device:
        $ref: '#/definitions/Device'
        description: An object containing information about the requested device.
    type: object
  GetJobRequest:
    description: Represents a request to the get job operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2::job:123-456-EXAMPLE-GUID'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The job's ARN.
    required:
      - arn
    type: object
  GetJobResult:
    description: Represents the result of a get job request.
    example:
      job: {}
    properties:
      job:
        $ref: '#/definitions/Job'
        description: An object containing information about the requested job.
    type: object
  GetNetworkProfileRequest:
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the network profile you want to return information about.
    required:
      - arn
    type: object
  GetNetworkProfileResult:
    properties:
      networkProfile:
        $ref: '#/definitions/NetworkProfile'
        description: The network profile.
    type: object
  GetOfferingStatusRequest:
    description: Represents the request to retrieve the offering status for the specified customer or account.
    example:
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE=
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  GetOfferingStatusResult:
    description: Returns the status result for a device offering.
    example:
      current:
        D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
          offering:
            description: Android Remote Access Unmetered Device Slot
            id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
            platform: ANDROID
            type: RECURRING
          quantity: 1
      nextPeriod:
        D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
          effectiveOn: '1472688000'
          offering:
            description: Android Remote Access Unmetered Device Slot
            id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
            platform: ANDROID
            type: RECURRING
          quantity: 1
    properties:
      current:
        $ref: '#/definitions/OfferingStatusMap'
        description: 'When specified, gets the offering status for the current period.'
      nextPeriod:
        $ref: '#/definitions/OfferingStatusMap'
        description: 'When specified, gets the offering status for the next period.'
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  GetProjectRequest:
    description: Represents a request to the get project operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The project's ARN.
    required:
      - arn
    type: object
  GetProjectResult:
    description: Represents the result of a get project request.
    example:
      project:
        arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE'
        created: '1472660939.152'
        name: My Project
    properties:
      project:
        $ref: '#/definitions/Project'
        description: The project you wish to get information about.
    type: object
  GetRemoteAccessSessionRequest:
    description: Represents the request to get information about the specified remote access session.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the remote access session about which you want to get session information.
    required:
      - arn
    type: object
  GetRemoteAccessSessionResult:
    description: Represents the response from the server that lists detailed information about the remote access session.
    example:
      remoteAccessSession: {}
    properties:
      remoteAccessSession:
        $ref: '#/definitions/RemoteAccessSession'
        description: A container that lists detailed information about the remote access session.
    type: object
  GetRunRequest:
    description: Represents a request to the get run operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The run's ARN.
    required:
      - arn
    type: object
  GetRunResult:
    description: Represents the result of a get run request.
    example:
      run:
        arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
        billingMethod: METERED
        completedJobs: 0
        counters:
          errored: 0
          failed: 0
          passed: 0
          skipped: 0
          stopped: 0
          total: 0
          warned: 0
        created: '1472667509.852'
        deviceMinutes:
          metered: 0
          total: 0
          unmetered: 0
        name: My Test Run
        platform: ANDROID
        result: PENDING
        status: RUNNING
        totalJobs: 3
        type: BUILTIN_EXPLORER
    properties:
      run:
        $ref: '#/definitions/Run'
        description: The run you wish to get results from.
    type: object
  GetSuiteRequest:
    description: Represents a request to the get suite operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:suite:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The suite's ARN.
    required:
      - arn
    type: object
  GetSuiteResult:
    description: Represents the result of a get suite request.
    example:
      suite: {}
    properties:
      suite:
        $ref: '#/definitions/Suite'
        description: A collection of one or more tests.
    type: object
  GetTestRequest:
    description: Represents a request to the get test operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The test's ARN.
    required:
      - arn
    type: object
  GetTestResult:
    description: Represents the result of a get test request.
    example:
      test: {}
    properties:
      test:
        $ref: '#/definitions/Test'
        description: A test condition that is evaluated.
    type: object
  GetUploadRequest:
    description: Represents a request to the get upload operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The upload's ARN.
    required:
      - arn
    type: object
  GetUploadResult:
    description: Represents the result of a get upload request.
    example:
      upload: {}
    properties:
      upload:
        $ref: '#/definitions/Upload'
        description: An app or a set of one or more tests to upload or that have been uploaded.
    type: object
  HostAddress:
    maxLength: 1024
    type: string
  IdempotencyException:
    description: An entity with the same name already exists.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: Any additional information about the exception.
    type: object
  IncompatibilityMessage:
    description: Represents information about incompatibility.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: A message about the incompatibility.
      type:
        $ref: '#/definitions/DeviceAttribute'
        description: '<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>'
    type: object
  IncompatibilityMessages:
    items:
      $ref: '#/definitions/IncompatibilityMessage'
    type: array
  InstallToRemoteAccessSessionRequest:
    description: Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.
    example:
      appArn: 'arn:aws:devicefarm:us-west-2:123456789101:app:EXAMPLE-GUID-123-456'
      remoteAccessSessionArn: 'arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456'
    properties:
      appArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the app about which you are requesting information.
      remoteAccessSessionArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.
    required:
      - remoteAccessSessionArn
      - appArn
    type: object
  InstallToRemoteAccessSessionResult:
    description: Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.
    example:
      appUpload: {}
    properties:
      appUpload:
        $ref: '#/definitions/Upload'
        description: An app to upload or that has been uploaded.
    type: object
  Integer:
    type: integer
  IosPaths:
    items:
      $ref: '#/definitions/String'
    type: array
  Job:
    description: Represents a device.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The job's ARN.
      counters:
        $ref: '#/definitions/Counters'
        description: The job's result counters.
      created:
        $ref: '#/definitions/DateTime'
        description: When the job was created.
      device:
        $ref: '#/definitions/Device'
        description: The device (phone or tablet).
      deviceMinutes:
        $ref: '#/definitions/DeviceMinutes'
        description: Represents the total (metered or unmetered) minutes used by the job.
      message:
        $ref: '#/definitions/Message'
        description: A message about the job's result.
      name:
        $ref: '#/definitions/Name'
        description: The job's name.
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The job''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      started:
        $ref: '#/definitions/DateTime'
        description: The job's start time.
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: '<p>The job''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>'
      stopped:
        $ref: '#/definitions/DateTime'
        description: The job's stop time.
      type:
        $ref: '#/definitions/TestType'
        description: '<p>The job''s type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    type: object
  JobTimeoutMinutes:
    type: integer
  Jobs:
    items:
      $ref: '#/definitions/Job'
    type: array
  LimitExceededException:
    description: A limit was exceeded.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: Any additional information about the exception.
    type: object
  ListArtifactsRequest:
    description: Represents a request to the list artifacts operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456'
      type: SCREENSHOT
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The Run, Job, Suite, or Test ARN.'
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      type:
        $ref: '#/definitions/ArtifactCategory'
        description: '<p>The artifacts'' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE: The artifacts are files.</p> </li> <li> <p>LOG: The artifacts are logs.</p> </li> <li> <p>SCREENSHOT: The artifacts are screenshots.</p> </li> </ul>'
    required:
      - arn
      - type
    type: object
  ListArtifactsResult:
    description: Represents the result of a list artifacts operation.
    properties:
      artifacts:
        $ref: '#/definitions/Artifacts'
        description: Information about the artifacts.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
    type: object
  ListDevicePoolsRequest:
    description: Represents the result of a list device pools request.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      type: PRIVATE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The project ARN.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      type:
        $ref: '#/definitions/DevicePoolType'
        description: '<p>The device pools'' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>'
    required:
      - arn
    type: object
  ListDevicePoolsResult:
    description: Represents the result of a list device pools request.
    example:
      devicePools:
        - arn: 'arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE'
          description: Top devices
          name: Top Devices
          rules:
            - attribute: ARN
              operator: IN
              value: '["arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE"]'
        - arn: 'arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE'
          description: Samsung Galaxy Android devices
          name: My Android Device Pool
          rules:
            - attribute: ARN
              operator: IN
              value: '["arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE","arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE"]'
    properties:
      devicePools:
        $ref: '#/definitions/DevicePools'
        description: Information about the device pools.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
    type: object
  ListDevicesRequest:
    description: Represents the result of a list devices request.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListDevicesResult:
    description: Represents the result of a list devices operation.
    example: {}
    properties:
      devices:
        $ref: '#/definitions/Devices'
        description: Information about the devices.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
    type: object
  ListJobsRequest:
    description: Represents a request to the list jobs operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The jobs' ARNs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListJobsResult:
    description: Represents the result of a list jobs request.
    properties:
      jobs:
        $ref: '#/definitions/Jobs'
        description: Information about the jobs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
    type: object
  ListNetworkProfilesRequest:
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to list network profiles.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      type:
        $ref: '#/definitions/NetworkProfileType'
        description: The type of network profile you wish to return information about. Valid values are listed below.
    required:
      - arn
    type: object
  ListNetworkProfilesResult:
    properties:
      networkProfiles:
        $ref: '#/definitions/NetworkProfiles'
        description: A list of the available network profiles.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListOfferingPromotionsRequest:
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListOfferingPromotionsResult:
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier to be used in the next call to this operation, to return the next set of items in the list.'
      offeringPromotions:
        $ref: '#/definitions/OfferingPromotions'
        description: Information about the offering promotions.
    type: object
  ListOfferingTransactionsRequest:
    description: Represents the request to list the offering transaction history.
    example:
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE=
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListOfferingTransactionsResult:
    description: Returns the transaction log of the specified offerings.
    example:
      offeringTransactions:
        - cost:
            amount: 0
            currencyCode: USD
          createdOn: '1470021420'
          offeringStatus:
            effectiveOn: '1472688000'
            offering:
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
              type: RECURRING
            quantity: 0
            type: RENEW
          transactionId: 03728003-d1ea-4851-abd6-12345EXAMPLE
        - cost:
            amount: 250
            currencyCode: USD
          createdOn: '1470021420'
          offeringStatus:
            effectiveOn: '1470021420'
            offering:
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
              type: RECURRING
            quantity: 1
            type: PURCHASE
          transactionId: 56820b6e-06bd-473a-8ff8-12345EXAMPLE
        - cost:
            amount: 175
            currencyCode: USD
          createdOn: '1465538520'
          offeringStatus:
            effectiveOn: '1465538520'
            offering:
              description: Android Unmetered Device Slot
              id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
              platform: ANDROID
              type: RECURRING
            quantity: 1
            type: PURCHASE
          transactionId: 953ae2c6-d760-4a04-9597-12345EXAMPLE
        - cost:
            amount: 8.07
            currencyCode: USD
          createdOn: '1459344300'
          offeringStatus:
            effectiveOn: '1459344300'
            offering:
              description: iOS Unmetered Device Slot
              id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
              platform: IOS
              type: RECURRING
            quantity: 1
            type: PURCHASE
          transactionId: 2baf9021-ae3e-47f5-ab52-12345EXAMPLE
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      offeringTransactions:
        $ref: '#/definitions/OfferingTransactions'
        description: The audit log of subscriptions you have purchased and modified through AWS Device Farm.
    type: object
  ListOfferingsRequest:
    description: Represents the request to list all offerings.
    example:
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE=
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListOfferingsResult:
    description: Represents the return values of the list of offerings.
    example:
      offerings:
        - description: iOS Unmetered Device Slot
          id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
          platform: IOS
          recurringCharges:
            - cost:
                amount: 250
                currencyCode: USD
              frequency: MONTHLY
          type: RECURRING
        - description: Android Unmetered Device Slot
          id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
          platform: ANDROID
          recurringCharges:
            - cost:
                amount: 250
                currencyCode: USD
              frequency: MONTHLY
          type: RECURRING
        - description: Android Remote Access Unmetered Device Slot
          id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
          platform: ANDROID
          recurringCharges:
            - cost:
                amount: 250
                currencyCode: USD
              frequency: MONTHLY
          type: RECURRING
        - description: iOS Remote Access Unmetered Device Slot
          id: 552B4DAD-A6C9-45C4-94FB-12345EXAMPLE
          platform: IOS
          recurringCharges:
            - cost:
                amount: 250
                currencyCode: USD
              frequency: MONTHLY
          type: RECURRING
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      offerings:
        $ref: '#/definitions/Offerings'
        description: A value representing the list offering results.
    type: object
  ListProjectsRequest:
    description: Represents a request to the list projects operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: 'Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.'
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    type: object
  ListProjectsResult:
    description: Represents the result of a list projects request.
    example:
      projects:
        - arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE'
          created: '1453163262.105'
          name: My Test Project
        - arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE'
          created: '1470350112.439'
          name: Hello World
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      projects:
        $ref: '#/definitions/Projects'
        description: Information about the projects.
    type: object
  ListRemoteAccessSessionsRequest:
    description: Represents the request to return information about the remote access session.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE=
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListRemoteAccessSessionsResult:
    description: Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.
    example:
      remoteAccessSessions: []
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
      remoteAccessSessions:
        $ref: '#/definitions/RemoteAccessSessions'
        description: A container representing the metadata from the service about each remote access session you are requesting.
    type: object
  ListRunsRequest:
    description: Represents a request to the list runs operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to list runs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListRunsResult:
    description: Represents the result of a list runs request.
    example:
      runs:
        - arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE'
          billingMethod: METERED
          completedJobs: 0
          counters:
            errored: 0
            failed: 0
            passed: 0
            skipped: 0
            stopped: 0
            total: 0
            warned: 0
          created: '1472667509.852'
          deviceMinutes:
            metered: 0
            total: 0
            unmetered: 0
          name: My Test Run
          platform: ANDROID
          result: PENDING
          status: RUNNING
          totalJobs: 3
          type: BUILTIN_EXPLORER
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      runs:
        $ref: '#/definitions/Runs'
        description: Information about the runs.
    type: object
  ListSamplesRequest:
    description: Represents a request to the list samples operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to list samples.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListSamplesResult:
    description: Represents the result of a list samples request.
    example:
      samples: []
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      samples:
        $ref: '#/definitions/Samples'
        description: Information about the samples.
    type: object
  ListSuitesRequest:
    description: Represents a request to the list suites operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The suites' ARNs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListSuitesResult:
    description: Represents the result of a list suites request.
    example:
      suites: []
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      suites:
        $ref: '#/definitions/Suites'
        description: Information about the suites.
    type: object
  ListTestsRequest:
    description: Represents a request to the list tests operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The tests' ARNs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListTestsResult:
    description: Represents the result of a list tests request.
    example:
      tests: []
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      tests:
        $ref: '#/definitions/Tests'
        description: Information about the tests.
    type: object
  ListUniqueProblemsRequest:
    description: Represents a request to the list unique problems operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The unique problems' ARNs.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListUniqueProblemsResult:
    description: Represents the result of a list unique problems request.
    example:
      uniqueProblems: {}
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      uniqueProblems:
        $ref: '#/definitions/UniqueProblemsByExecutionResultMap'
        description: '<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
    type: object
  ListUploadsRequest:
    description: Represents a request to the list uploads operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      nextToken: RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project for which you want to list uploads.
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
    required:
      - arn
    type: object
  ListUploadsResult:
    description: Represents the result of a list uploads request.
    example:
      uploads: []
    properties:
      nextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.'
      uploads:
        $ref: '#/definitions/Uploads'
        description: Information about the uploads.
    type: object
  Location:
    description: '<p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>'
    properties:
      latitude:
        $ref: '#/definitions/Double'
        description: The latitude.
      longitude:
        $ref: '#/definitions/Double'
        description: The longitude.
    required:
      - latitude
      - longitude
    type: object
  Long:
    type: integer
  MaxSlotMap:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/Integer'
      type: object
    type: array
  Message:
    maxLength: 16384
    minLength: 0
    type: string
  Metadata:
    maxLength: 8192
    minLength: 0
    type: string
  MonetaryAmount:
    description: A number representing the monetary amount for an offering or transaction.
    properties:
      amount:
        $ref: '#/definitions/Double'
        description: The numerical amount of an offering or transaction.
      currencyCode:
        $ref: '#/definitions/CurrencyCode'
        description: 'The currency code of a monetary amount. For example, <code>USD</code> means "U.S. dollars."'
    type: object
  Name:
    maxLength: 256
    minLength: 0
    type: string
  NetworkProfile:
    description: An array of settings that describes characteristics of a network profile.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the network profile.
      description:
        $ref: '#/definitions/Message'
        description: The description of the network profile.
      downlinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      downlinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      downlinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      downlinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of received packets that fail to arrive from 0 to 100 percent.
      name:
        $ref: '#/definitions/Name'
        description: The name of the network profile.
      type:
        $ref: '#/definitions/NetworkProfileType'
        description: The type of network profile. Valid values are listed below.
      uplinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      uplinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      uplinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      uplinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
    type: object
  NetworkProfileType:
    enum:
      - CURATED
      - PRIVATE
    type: string
  NetworkProfiles:
    items:
      $ref: '#/definitions/NetworkProfile'
    type: array
  NotEligibleException:
    description: Exception gets thrown when a user is not eligible to perform the specified transaction.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: The HTTP response code of a Not Eligible exception.
    type: object
  NotFoundException:
    description: The specified entity was not found.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: Any additional information about the exception.
    type: object
  Offering:
    description: Represents the metadata of a device offering.
    properties:
      description:
        $ref: '#/definitions/Message'
        description: A string describing the offering.
      id:
        $ref: '#/definitions/OfferingIdentifier'
        description: The ID that corresponds to a device offering.
      platform:
        $ref: '#/definitions/DevicePlatform'
        description: 'The platform of the device (e.g., ANDROID or IOS).'
      recurringCharges:
        $ref: '#/definitions/RecurringCharges'
        description: Specifies whether there are recurring charges for the offering.
      type:
        $ref: '#/definitions/OfferingType'
        description: 'The type of offering (e.g., "RECURRING") for a device.'
    type: object
  OfferingIdentifier:
    minLength: 32
    type: string
  OfferingPromotion:
    description: Represents information about an offering promotion.
    properties:
      description:
        $ref: '#/definitions/Message'
        description: A string describing the offering promotion.
      id:
        $ref: '#/definitions/OfferingPromotionIdentifier'
        description: The ID of the offering promotion.
    type: object
  OfferingPromotionIdentifier:
    minLength: 4
    type: string
  OfferingPromotions:
    items:
      $ref: '#/definitions/OfferingPromotion'
    type: array
  OfferingStatus:
    description: The status of the offering.
    properties:
      effectiveOn:
        $ref: '#/definitions/DateTime'
        description: The date on which the offering is effective.
      offering:
        $ref: '#/definitions/Offering'
        description: Represents the metadata of an offering status.
      quantity:
        $ref: '#/definitions/Integer'
        description: The number of available devices in the offering.
      type:
        $ref: '#/definitions/OfferingTransactionType'
        description: The type specified for the offering status.
    type: object
  OfferingStatusMap:
    items:
      properties:
        key:
          $ref: '#/definitions/OfferingIdentifier'
        value:
          $ref: '#/definitions/OfferingStatus'
      type: object
    type: array
  OfferingTransaction:
    description: Represents the metadata of an offering transaction.
    properties:
      cost:
        $ref: '#/definitions/MonetaryAmount'
        description: The cost of an offering transaction.
      createdOn:
        $ref: '#/definitions/DateTime'
        description: The date on which an offering transaction was created.
      offeringPromotionId:
        $ref: '#/definitions/OfferingPromotionIdentifier'
        description: The ID that corresponds to a device offering promotion.
      offeringStatus:
        $ref: '#/definitions/OfferingStatus'
        description: The status of an offering transaction.
      transactionId:
        $ref: '#/definitions/TransactionIdentifier'
        description: The transaction ID of the offering transaction.
    type: object
  OfferingTransactionType:
    enum:
      - PURCHASE
      - RENEW
      - SYSTEM
    type: string
  OfferingTransactions:
    items:
      $ref: '#/definitions/OfferingTransaction'
    type: array
  OfferingType:
    enum:
      - RECURRING
    type: string
  Offerings:
    items:
      $ref: '#/definitions/Offering'
    type: array
  PaginationToken:
    maxLength: 1024
    minLength: 4
    type: string
  PercentInteger:
    maximum: 100
    minimum: 0
    type: integer
  Problem:
    description: Represents a specific warning or failure.
    properties:
      device:
        $ref: '#/definitions/Device'
        description: Information about the associated device.
      job:
        $ref: '#/definitions/ProblemDetail'
        description: Information about the associated job.
      message:
        $ref: '#/definitions/Message'
        description: A message about the problem's result.
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The problem''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      run:
        $ref: '#/definitions/ProblemDetail'
        description: Information about the associated run.
      suite:
        $ref: '#/definitions/ProblemDetail'
        description: Information about the associated suite.
      test:
        $ref: '#/definitions/ProblemDetail'
        description: Information about the associated test.
    type: object
  ProblemDetail:
    description: Information about a problem detail.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The problem detail's ARN.
      name:
        $ref: '#/definitions/Name'
        description: The problem detail's name.
    type: object
  Problems:
    items:
      $ref: '#/definitions/Problem'
    type: array
  Project:
    description: Represents an operating-system neutral workspace for running and managing tests.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The project's ARN.
      created:
        $ref: '#/definitions/DateTime'
        description: When the project was created.
      defaultJobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.
      name:
        $ref: '#/definitions/Name'
        description: The project's name.
    type: object
  Projects:
    items:
      $ref: '#/definitions/Project'
    type: array
  PurchaseOfferingRequest:
    description: Represents a request for a purchase offering.
    example:
      offeringId: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
      quantity: 1
    properties:
      offeringId:
        $ref: '#/definitions/OfferingIdentifier'
        description: The ID of the offering.
      offeringPromotionId:
        $ref: '#/definitions/OfferingPromotionIdentifier'
        description: The ID of the offering promotion to be applied to the purchase.
      quantity:
        $ref: '#/definitions/Integer'
        description: The number of device slots you wish to purchase in an offering request.
    type: object
  PurchaseOfferingResult:
    description: 'The result of the purchase offering (e.g., success or failure).'
    example:
      offeringTransaction:
        cost:
          amount: 8.07
          currencyCode: USD
        createdOn: '1472648340'
        offeringStatus:
          effectiveOn: '1472648340'
          offering:
            description: Android Remote Access Unmetered Device Slot
            id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
            platform: ANDROID
            type: RECURRING
          quantity: 1
          type: PURCHASE
        transactionId: d30614ed-1b03-404c-9893-12345EXAMPLE
    properties:
      offeringTransaction:
        $ref: '#/definitions/OfferingTransaction'
        description: Represents the offering transaction for the purchase result.
    type: object
  PurchasedDevicesMap:
    items:
      properties:
        key:
          $ref: '#/definitions/DevicePlatform'
        value:
          $ref: '#/definitions/Integer'
      type: object
    type: array
  Radios:
    description: 'Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.'
    properties:
      bluetooth:
        $ref: '#/definitions/Boolean'
        description: 'True if Bluetooth is enabled at the beginning of the test; otherwise, false.'
      gps:
        $ref: '#/definitions/Boolean'
        description: 'True if GPS is enabled at the beginning of the test; otherwise, false.'
      nfc:
        $ref: '#/definitions/Boolean'
        description: 'True if NFC is enabled at the beginning of the test; otherwise, false.'
      wifi:
        $ref: '#/definitions/Boolean'
        description: 'True if Wi-Fi is enabled at the beginning of the test; otherwise, false.'
    type: object
  RecurringCharge:
    description: Specifies whether charges for devices will be recurring.
    properties:
      cost:
        $ref: '#/definitions/MonetaryAmount'
        description: The cost of the recurring charge.
      frequency:
        $ref: '#/definitions/RecurringChargeFrequency'
        description: The frequency in which charges will recur.
    type: object
  RecurringChargeFrequency:
    enum:
      - MONTHLY
    type: string
  RecurringCharges:
    items:
      $ref: '#/definitions/RecurringCharge'
    type: array
  RemoteAccessSession:
    description: Represents information about the remote access session.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the remote access session.
      billingMethod:
        $ref: '#/definitions/BillingMethod'
        description: 'The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href="http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology">AWS Device Farm terminology</a>."'
      clientId:
        $ref: '#/definitions/ClientId'
        description: Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.
      created:
        $ref: '#/definitions/DateTime'
        description: The date and time the remote access session was created.
      device:
        $ref: '#/definitions/Device'
        description: The device (phone or tablet) used in the remote access session.
      deviceMinutes:
        $ref: '#/definitions/DeviceMinutes'
        description: The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).
      deviceUdid:
        $ref: '#/definitions/String'
        description: Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.
      endpoint:
        $ref: '#/definitions/String'
        description: The endpoint for the remote access sesssion.
      hostAddress:
        $ref: '#/definitions/HostAddress'
        description: IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.
      message:
        $ref: '#/definitions/Message'
        description: A message about the remote access session.
      name:
        $ref: '#/definitions/Name'
        description: The name of the remote access session.
      remoteDebugEnabled:
        $ref: '#/definitions/Boolean'
        description: This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      started:
        $ref: '#/definitions/DateTime'
        description: The date and time the remote access session was started.
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: '<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>'
      stopped:
        $ref: '#/definitions/DateTime'
        description: The date and time the remote access session was stopped.
    type: object
  RemoteAccessSessions:
    items:
      $ref: '#/definitions/RemoteAccessSession'
    type: array
  RenewOfferingRequest:
    description: A request representing an offering renewal.
    example:
      offeringId: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
      quantity: 1
    properties:
      offeringId:
        $ref: '#/definitions/OfferingIdentifier'
        description: The ID of a request to renew an offering.
      quantity:
        $ref: '#/definitions/Integer'
        description: The quantity requested in an offering renewal.
    type: object
  RenewOfferingResult:
    description: The result of a renewal offering.
    example:
      offeringTransaction:
        cost:
          amount: 250
          currencyCode: USD
        createdOn: '1472648880'
        offeringStatus:
          effectiveOn: '1472688000'
          offering:
            description: Android Remote Access Unmetered Device Slot
            id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
            platform: ANDROID
            type: RECURRING
          quantity: 1
          type: RENEW
        transactionId: e90f1405-8c35-4561-be43-12345EXAMPLE
    properties:
      offeringTransaction:
        $ref: '#/definitions/OfferingTransaction'
        description: Represents the status of the offering transaction for the renewal.
    type: object
  Resolution:
    description: 'Represents the screen resolution of a device in height and width, expressed in pixels.'
    properties:
      height:
        $ref: '#/definitions/Integer'
        description: 'The screen resolution''s height, expressed in pixels.'
      width:
        $ref: '#/definitions/Integer'
        description: 'The screen resolution''s width, expressed in pixels.'
    type: object
  Rule:
    description: Represents a condition for a device pool.
    properties:
      attribute:
        $ref: '#/definitions/DeviceAttribute'
        description: '<p>The rule''s stringified attribute. For example, specify the value as <code>"\"abc\""</code>.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>'
      operator:
        $ref: '#/definitions/RuleOperator'
        description: '<p>The rule''s operator.</p> <ul> <li> <p>EQUALS: The equals operator.</p> </li> <li> <p>GREATER_THAN: The greater-than operator.</p> </li> <li> <p>IN: The in operator.</p> </li> <li> <p>LESS_THAN: The less-than operator.</p> </li> <li> <p>NOT_IN: The not-in operator.</p> </li> <li> <p>CONTAINS: The contains operator.</p> </li> </ul>'
      value:
        $ref: '#/definitions/String'
        description: The rule's value.
    type: object
  RuleOperator:
    enum:
      - EQUALS
      - LESS_THAN
      - GREATER_THAN
      - IN
      - NOT_IN
      - CONTAINS
    type: string
  Rules:
    items:
      $ref: '#/definitions/Rule'
    type: array
  Run:
    description: 'Represents a test run on a set of devices with a given app package, test parameters, etc.'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The run's ARN.
      billingMethod:
        $ref: '#/definitions/BillingMethod'
        description: 'Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.'
      completedJobs:
        $ref: '#/definitions/Integer'
        description: The total number of completed jobs.
      counters:
        $ref: '#/definitions/Counters'
        description: The run's result counters.
      created:
        $ref: '#/definitions/DateTime'
        description: When the run was created.
      customerArtifactPaths:
        $ref: '#/definitions/CustomerArtifactPaths'
        description: Output <code>CustomerArtifactPaths</code> object for the test run.
      deviceMinutes:
        $ref: '#/definitions/DeviceMinutes'
        description: Represents the total (metered or unmetered) minutes used by the test run.
      message:
        $ref: '#/definitions/Message'
        description: A message about the run's result.
      name:
        $ref: '#/definitions/Name'
        description: The run's name.
      networkProfile:
        $ref: '#/definitions/NetworkProfile'
        description: The network profile being used for a test run.
      parsingResultUrl:
        $ref: '#/definitions/String'
        description: 'Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn''t parse, the reason why it doesn''t parse appears in the file that this URL points to.'
      platform:
        $ref: '#/definitions/DevicePlatform'
        description: '<p>The run''s platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>'
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The run''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      resultCode:
        $ref: '#/definitions/ExecutionResultCode'
        description: Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.
      started:
        $ref: '#/definitions/DateTime'
        description: The run's start time.
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: '<p>The run''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>'
      stopped:
        $ref: '#/definitions/DateTime'
        description: The run's stop time.
      totalJobs:
        $ref: '#/definitions/Integer'
        description: The total number of jobs for the run.
      type:
        $ref: '#/definitions/TestType'
        description: '<p>The run''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    type: object
  Runs:
    items:
      $ref: '#/definitions/Run'
    type: array
  Sample:
    description: Represents a sample of performance data.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The sample's ARN.
      type:
        $ref: '#/definitions/SampleType'
        description: '<p>The sample''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>'
      url:
        $ref: '#/definitions/URL'
        description: The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file.
    type: object
  SampleType:
    enum:
      - CPU
      - MEMORY
      - THREADS
      - RX_RATE
      - TX_RATE
      - RX
      - TX
      - NATIVE_FRAMES
      - NATIVE_FPS
      - NATIVE_MIN_DRAWTIME
      - NATIVE_AVG_DRAWTIME
      - NATIVE_MAX_DRAWTIME
      - OPENGL_FRAMES
      - OPENGL_FPS
      - OPENGL_MIN_DRAWTIME
      - OPENGL_AVG_DRAWTIME
      - OPENGL_MAX_DRAWTIME
    type: string
  Samples:
    items:
      $ref: '#/definitions/Sample'
    type: array
  ScheduleRunConfiguration:
    description: 'Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.'
    properties:
      auxiliaryApps:
        $ref: '#/definitions/AmazonResourceNames'
        description: A list of auxiliary apps for the run.
      billingMethod:
        $ref: '#/definitions/BillingMethod'
        description: 'Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.'
      customerArtifactPaths:
        $ref: '#/definitions/CustomerArtifactPaths'
        description: Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.
      extraDataPackageArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.
      locale:
        $ref: '#/definitions/String'
        description: Information about the locale that is used for the run.
      location:
        $ref: '#/definitions/Location'
        description: Information about the location that is used for the run.
      networkProfileArn:
        $ref: '#/definitions/AmazonResourceName'
        description: Reserved for internal use.
      radios:
        $ref: '#/definitions/Radios'
        description: Information about the radio states for the run.
    type: object
  ScheduleRunRequest:
    description: Represents a request to the schedule run operation.
    example:
      devicePoolArn: 'arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456'
      name: MyRun
      projectArn: 'arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456'
      test:
        testPackageArn: 'arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456'
        type: APPIUM_JAVA_JUNIT
    properties:
      appArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the app to schedule a run.
      configuration:
        $ref: '#/definitions/ScheduleRunConfiguration'
        description: Information about the settings for the run to be scheduled.
      devicePoolArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the device pool for the run to be scheduled.
      executionConfiguration:
        $ref: '#/definitions/ExecutionConfiguration'
        description: 'Specifies configuration information about a test run, such as the execution timeout (in minutes).'
      name:
        $ref: '#/definitions/Name'
        description: The name for the run to be scheduled.
      projectArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the project for the run to be scheduled.
      test:
        $ref: '#/definitions/ScheduleRunTest'
        description: Information about the test for the run to be scheduled.
    required:
      - projectArn
      - devicePoolArn
      - test
    type: object
  ScheduleRunResult:
    description: Represents the result of a schedule run request.
    example:
      run: {}
    properties:
      run:
        $ref: '#/definitions/Run'
        description: Information about the scheduled run.
    type: object
  ScheduleRunTest:
    description: Represents additional test settings.
    properties:
      filter:
        $ref: '#/definitions/Filter'
        description: The test's filter.
      parameters:
        $ref: '#/definitions/TestParameters'
        description: '<p>The test''s parameters, such as the following test framework parameters and fixture settings:</p> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, "my_profile_name".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don''t have) certain tags, for example, "@smoke" or "@smoke,~@wip".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are "1.4.16", "1.6.3", "latest", and "default".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.6.3).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.4.16 on Android devices and iOS 9 and earlier, 1.6.3 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: "com.android.abc.Test1"</p> </li> <li> <p>Running a single test: "com.android.abc.Test1#smoke"</p> </li> <li> <p>Running multiple tests: "com.android.abc.Test1,com.android.abc.Test2"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: "LoginTests"</p> </li> <li> <p>Running a multiple test classes: "LoginTests,SmokeTests"</p> </li> <li> <p>Running a single test: "LoginTests/testValid"</p> </li> <li> <p>Running multiple tests: "LoginTests/testValid,LoginTests/testInvalid"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: "com.android.abc.Test1"</p> </li> <li> <p>Running a single test: "com.android.abc.Test1#smoke"</p> </li> <li> <p>Running multiple tests: "com.android.abc.Test1,com.android.abc.Test2"</p> </li> </ul> </li> </ul>'
      testPackageArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the uploaded test that will be run.
      type:
        $ref: '#/definitions/TestType'
        description: '<p>The test''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    required:
      - type
    type: object
  ServiceAccountException:
    description: There was a problem with the service account.
    properties:
      message:
        $ref: '#/definitions/Message'
        description: Any additional information about the exception.
    type: object
  SshPublicKey:
    maxLength: 8192
    minLength: 0
    type: string
  StopRemoteAccessSessionRequest:
    description: Represents the request to stop the remote access session.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the remote access session you wish to stop.
    required:
      - arn
    type: object
  StopRemoteAccessSessionResult:
    description: Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.
    properties:
      remoteAccessSession:
        $ref: '#/definitions/RemoteAccessSession'
        description: A container representing the metadata from the service about the remote access session you are stopping.
    type: object
  StopRunRequest:
    description: Represents the request to stop a specific run.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to stop.
    required:
      - arn
    type: object
  StopRunResult:
    description: Represents the results of your stop run attempt.
    example:
      run: {}
    properties:
      run:
        $ref: '#/definitions/Run'
        description: The run that was stopped.
    type: object
  String:
    type: string
  Suite:
    description: Represents a collection of one or more tests.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The suite's ARN.
      counters:
        $ref: '#/definitions/Counters'
        description: The suite's result counters.
      created:
        $ref: '#/definitions/DateTime'
        description: When the suite was created.
      deviceMinutes:
        $ref: '#/definitions/DeviceMinutes'
        description: Represents the total (metered or unmetered) minutes used by the test suite.
      message:
        $ref: '#/definitions/Message'
        description: A message about the suite's result.
      name:
        $ref: '#/definitions/Name'
        description: The suite's name.
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The suite''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      started:
        $ref: '#/definitions/DateTime'
        description: The suite's start time.
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: '<p>The suite''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>'
      stopped:
        $ref: '#/definitions/DateTime'
        description: The suite's stop time.
      type:
        $ref: '#/definitions/TestType'
        description: '<p>The suite''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    type: object
  Suites:
    items:
      $ref: '#/definitions/Suite'
    type: array
  Test:
    description: Represents a condition that is evaluated.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The test's ARN.
      counters:
        $ref: '#/definitions/Counters'
        description: The test's result counters.
      created:
        $ref: '#/definitions/DateTime'
        description: When the test was created.
      deviceMinutes:
        $ref: '#/definitions/DeviceMinutes'
        description: Represents the total (metered or unmetered) minutes used by the test.
      message:
        $ref: '#/definitions/Message'
        description: A message about the test's result.
      name:
        $ref: '#/definitions/Name'
        description: The test's name.
      result:
        $ref: '#/definitions/ExecutionResult'
        description: '<p>The test''s result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>'
      started:
        $ref: '#/definitions/DateTime'
        description: The test's start time.
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: '<p>The test''s status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>'
      stopped:
        $ref: '#/definitions/DateTime'
        description: The test's stop time.
      type:
        $ref: '#/definitions/TestType'
        description: '<p>The test''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>'
    type: object
  TestParameters:
    items:
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
      type: object
    type: array
  TestType:
    enum:
      - BUILTIN_FUZZ
      - BUILTIN_EXPLORER
      - APPIUM_JAVA_JUNIT
      - APPIUM_JAVA_TESTNG
      - APPIUM_PYTHON
      - APPIUM_WEB_JAVA_JUNIT
      - APPIUM_WEB_JAVA_TESTNG
      - APPIUM_WEB_PYTHON
      - CALABASH
      - INSTRUMENTATION
      - UIAUTOMATION
      - UIAUTOMATOR
      - XCTEST
      - XCTEST_UI
    type: string
  Tests:
    items:
      $ref: '#/definitions/Test'
    type: array
  TransactionIdentifier:
    minLength: 32
    type: string
  TrialMinutes:
    description: Represents information about free trial device minutes for an AWS account.
    properties:
      remaining:
        $ref: '#/definitions/Double'
        description: The number of free trial minutes remaining in the account.
      total:
        $ref: '#/definitions/Double'
        description: The total number of free trial minutes that the account started with.
    type: object
  URL:
    maxLength: 2048
    minLength: 0
    type: string
  UniqueProblem:
    description: 'A collection of one or more problems, grouped by their result.'
    properties:
      message:
        $ref: '#/definitions/Message'
        description: A message about the unique problems' result.
      problems:
        $ref: '#/definitions/Problems'
        description: Information about the problems.
    type: object
  UniqueProblems:
    items:
      $ref: '#/definitions/UniqueProblem'
    type: array
  UniqueProblemsByExecutionResultMap:
    items:
      properties:
        key:
          $ref: '#/definitions/ExecutionResult'
        value:
          $ref: '#/definitions/UniqueProblems'
      type: object
    type: array
  UpdateDevicePoolRequest:
    description: Represents a request to the update device pool operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE'
      description: NewDescription
      name: NewName
      rules:
        - attribute: REMOTE_ACCESS_ENABLED
          operator: EQUALS
          value: 'True'
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to update.
      description:
        $ref: '#/definitions/Message'
        description: A description of the device pool you wish to update.
      name:
        $ref: '#/definitions/Name'
        description: A string representing the name of the device pool you wish to update.
      rules:
        $ref: '#/definitions/Rules'
        description: 'Represents the rules you wish to modify for the device pool. Updating rules is optional; however, if you choose to update rules for your request, the update will replace the existing rules.'
    required:
      - arn
    type: object
  UpdateDevicePoolResult:
    description: Represents the result of an update device pool request.
    example:
      devicePool: {}
    properties:
      devicePool:
        $ref: '#/definitions/DevicePool'
        description: The device pool you just updated.
    type: object
  UpdateNetworkProfileRequest:
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project that you wish to update network profile settings.
      description:
        $ref: '#/definitions/Message'
        description: The descriptoin of the network profile about which you are returning information.
      downlinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      downlinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      downlinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      downlinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of received packets that fail to arrive from 0 to 100 percent.
      name:
        $ref: '#/definitions/Name'
        description: The name of the network profile about which you are returning information.
      type:
        $ref: '#/definitions/NetworkProfileType'
        description: The type of network profile you wish to return information about. Valid values are listed below.
      uplinkBandwidthBits:
        $ref: '#/definitions/Long'
        description: 'The data throughput rate in bits per second, as an integer from 0 to 104857600.'
      uplinkDelayMs:
        $ref: '#/definitions/Long'
        description: Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
      uplinkJitterMs:
        $ref: '#/definitions/Long'
        description: Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
      uplinkLossPercent:
        $ref: '#/definitions/PercentInteger'
        description: Proportion of transmitted packets that fail to arrive from 0 to 100 percent.
    required:
      - arn
    type: object
  UpdateNetworkProfileResult:
    properties:
      networkProfile:
        $ref: '#/definitions/NetworkProfile'
        description: A list of the available network profiles.
    type: object
  UpdateProjectRequest:
    description: Represents a request to the update project operation.
    example:
      arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE'
      name: NewName
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the project whose name you wish to update.
      defaultJobTimeoutMinutes:
        $ref: '#/definitions/JobTimeoutMinutes'
        description: The number of minutes a test run in the project will execute before it times out.
      name:
        $ref: '#/definitions/Name'
        description: A string representing the new name of the project that you are updating.
    required:
      - arn
    type: object
  UpdateProjectResult:
    description: Represents the result of an update project request.
    example:
      project:
        arn: 'arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE'
        created: '1448400709.927'
        name: NewName
    properties:
      project:
        $ref: '#/definitions/Project'
        description: The project you wish to update.
    type: object
  Upload:
    description: An app or a set of one or more tests to upload or that have been uploaded.
    properties:
      arn:
        $ref: '#/definitions/AmazonResourceName'
        description: The upload's ARN.
      contentType:
        $ref: '#/definitions/ContentType'
        description: 'The upload''s content type (for example, "application/octet-stream").'
      created:
        $ref: '#/definitions/DateTime'
        description: When the upload was created.
      message:
        $ref: '#/definitions/Message'
        description: A message about the upload's result.
      metadata:
        $ref: '#/definitions/Metadata'
        description: 'The upload''s metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.'
      name:
        $ref: '#/definitions/Name'
        description: The upload's file name.
      status:
        $ref: '#/definitions/UploadStatus'
        description: '<p>The upload''s status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>'
      type:
        $ref: '#/definitions/UploadType'
        description: '<p>The upload''s type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> </ul>'
      url:
        $ref: '#/definitions/URL'
        description: The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.
    type: object
  UploadStatus:
    enum:
      - INITIALIZED
      - PROCESSING
      - SUCCEEDED
      - FAILED
    type: string
  UploadType:
    enum:
      - ANDROID_APP
      - IOS_APP
      - WEB_APP
      - EXTERNAL_DATA
      - APPIUM_JAVA_JUNIT_TEST_PACKAGE
      - APPIUM_JAVA_TESTNG_TEST_PACKAGE
      - APPIUM_PYTHON_TEST_PACKAGE
      - APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
      - APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
      - APPIUM_WEB_PYTHON_TEST_PACKAGE
      - CALABASH_TEST_PACKAGE
      - INSTRUMENTATION_TEST_PACKAGE
      - UIAUTOMATION_TEST_PACKAGE
      - UIAUTOMATOR_TEST_PACKAGE
      - XCTEST_TEST_PACKAGE
      - XCTEST_UI_TEST_PACKAGE
    type: string
  Uploads:
    items:
      $ref: '#/definitions/Upload'
    type: array
