{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "cloudsearchdomain.amazonaws.com",
  "basePath": "/",
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "description": "<p>You use the AmazonCloudSearch2013 API to upload documents to a search domain and search those documents. </p> <p>The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. You submit suggest requests to the search endpoint. </p> <p>For more information, see the <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide\">Amazon CloudSearch Developer Guide</a>.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Amazon CloudSearch Domain",
    "version": "2013-01-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudsearchdomain-2013-01-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "cloudsearchdomain"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/cloudsearchdomain/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/2013-01-01/documents/batch?format=sdk": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Posts a batch of documents to a search domain for indexing. A document batch is a collection of add and delete operations that represent the documents you want to add, update, or delete from your domain. Batches can be described in either JSON or XML. Each item that you want Amazon CloudSearch to return as a search result (such as a product) is represented as a document. Every document has a unique ID and one or more fields that contain the data that you want to search and return in results. Individual documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5 MB. To get the best possible upload performance, group add and delete operations in batches that are close the 5 MB limit. Submitting a large volume of single-document batches can overload a domain's document service. </p> <p>The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific. To get the document endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain's endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p> <p>For more information about formatting your data for Amazon CloudSearch, see <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html\">Preparing Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information about uploading data for indexing, see <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html\">Uploading Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p>",
        "operationId": "UploadDocuments",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadDocumentsResponse"
            }
          },
          "480": {
            "description": "DocumentServiceException",
            "schema": {
              "$ref": "#/definitions/DocumentServiceException"
            }
          }
        }
      }
    },
    "/2013-01-01/search?format=sdk&pretty=true": {
      "get": {
        "description": "<p>Retrieves a list of documents that match the specified search criteria. How you specify the search criteria depends on which query parser you use. Amazon CloudSearch supports four query parsers:</p> <ul> <li><code>simple</code>: search all <code>text</code> and <code>text-array</code> fields for the specified string. Search for phrases, individual terms, and prefixes. </li> <li><code>structured</code>: search specific fields, construct compound queries using Boolean operators, and use advanced features such as term boosting and proximity searching.</li> <li><code>lucene</code>: specify search criteria using the Apache Lucene query parser syntax.</li> <li><code>dismax</code>: specify search criteria using the simplified subset of the Apache Lucene query parser syntax defined by the DisMax query parser.</li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html\">Searching Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p> <p>The endpoint for submitting <code>Search</code> requests is domain-specific. You submit search requests to a domain's search endpoint. To get the search endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain's endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p>",
        "operationId": "Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            }
          },
          "480": {
            "description": "SearchException",
            "schema": {
              "$ref": "#/definitions/SearchException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2013-01-01/suggest?format=sdk&pretty=true": {
      "get": {
        "description": "<p>Retrieves autocomplete suggestions for a partial query string. You can use suggestions enable you to display likely matches before users finish typing. In Amazon CloudSearch, suggestions are based on the contents of a particular text field. When you request suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester field start with the specified query string. The beginning of the field must match the query string to be considered a match. </p> <p>For more information about configuring suggesters and retrieving suggestions, see <a href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html\">Getting Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p> <p>The endpoint for submitting <code>Suggest</code> requests is domain-specific. You submit suggest requests to a domain's search endpoint. To get the search endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain's endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p>",
        "operationId": "Suggest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuggestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SuggestResponse"
            }
          },
          "480": {
            "description": "SearchException",
            "schema": {
              "$ref": "#/definitions/SearchException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "definitions": {
    "Adds": {
      "type": "integer"
    },
    "Blob": {
      "type": "string"
    },
    "Bucket": {
      "description": "A container for facet information. ",
      "properties": {
        "count": {
          "$ref": "#/definitions/Long",
          "description": "The number of hits that contain the facet value in the specified facet field."
        },
        "value": {
          "$ref": "#/definitions/String",
          "description": "The facet value being counted."
        }
      },
      "type": "object"
    },
    "BucketInfo": {
      "description": "A container for the calculated facet values and counts.",
      "properties": {
        "buckets": {
          "$ref": "#/definitions/BucketList",
          "description": "A list of the calculated facet values and counts."
        }
      },
      "type": "object"
    },
    "BucketList": {
      "items": {
        "$ref": "#/definitions/Bucket"
      },
      "type": "array"
    },
    "ContentType": {
      "enum": [
        "application/json",
        "application/xml"
      ],
      "type": "string"
    },
    "Cursor": {
      "type": "string"
    },
    "Deletes": {
      "type": "integer"
    },
    "DocumentServiceException": {
      "description": "Information about any problems encountered while processing an upload request.",
      "properties": {
        "message": {
          "$ref": "#/definitions/String",
          "description": "The description of the errors returned by the document service."
        },
        "status": {
          "$ref": "#/definitions/String",
          "description": "The return status of a document upload request, <code>error</code> or <code>success</code>."
        }
      },
      "type": "object"
    },
    "DocumentServiceWarning": {
      "description": "A warning returned by the document service when an issue is discovered while processing an upload request.",
      "properties": {
        "message": {
          "$ref": "#/definitions/String",
          "description": "The description for a warning returned by the document service."
        }
      },
      "type": "object"
    },
    "DocumentServiceWarnings": {
      "items": {
        "$ref": "#/definitions/DocumentServiceWarning"
      },
      "type": "array"
    },
    "Double": {
      "format": "double",
      "type": "number"
    },
    "Expr": {
      "type": "string"
    },
    "Exprs": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/String"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "Facet": {
      "type": "string"
    },
    "Facets": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/BucketInfo"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "FieldStats": {
      "description": "The statistics for a field calculated in the request.",
      "properties": {
        "count": {
          "$ref": "#/definitions/Long",
          "description": "The number of documents that contain a value in the specified field in the result set."
        },
        "max": {
          "$ref": "#/definitions/String",
          "description": "<p>The maximum value found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>max</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>max</code> is the string representation of a date with the format specified in <a href=\"http://tools.ietf.org/html/rfc3339\">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>"
        },
        "mean": {
          "$ref": "#/definitions/String",
          "description": "<p>The average of the values found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>mean</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>mean</code> is the string representation of a date with the format specified in <a href=\"http://tools.ietf.org/html/rfc3339\">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>"
        },
        "min": {
          "$ref": "#/definitions/String",
          "description": "<p>The minimum value found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>min</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>min</code> is the string representation of a date with the format specified in <a href=\"http://tools.ietf.org/html/rfc3339\">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>"
        },
        "missing": {
          "$ref": "#/definitions/Long",
          "description": "The number of documents that do not contain a value in the specified field in the result set."
        },
        "stddev": {
          "$ref": "#/definitions/Double",
          "description": "The standard deviation of the values in the specified field in the result set."
        },
        "sum": {
          "$ref": "#/definitions/Double",
          "description": "The sum of the field values across the documents in the result set. <code>null</code> for date fields."
        },
        "sumOfSquares": {
          "$ref": "#/definitions/Double",
          "description": "The sum of all field values in the result set squared."
        }
      },
      "type": "object"
    },
    "FieldValue": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "Fields": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/FieldValue"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "FilterQuery": {
      "type": "string"
    },
    "Highlight": {
      "type": "string"
    },
    "Highlights": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/String"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "Hit": {
      "description": "Information about a document that matches the search request.",
      "properties": {
        "exprs": {
          "$ref": "#/definitions/Exprs",
          "description": "The expressions returned from a document that matches the search request."
        },
        "fields": {
          "$ref": "#/definitions/Fields",
          "description": "The fields returned from a document that matches the search request."
        },
        "highlights": {
          "$ref": "#/definitions/Highlights",
          "description": "The highlights returned from a document that matches the search request."
        },
        "id": {
          "$ref": "#/definitions/String",
          "description": "The document ID of a document that matches the search request."
        }
      },
      "type": "object"
    },
    "HitList": {
      "items": {
        "$ref": "#/definitions/Hit"
      },
      "type": "array"
    },
    "Hits": {
      "description": "The collection of documents that match the search request.",
      "properties": {
        "cursor": {
          "$ref": "#/definitions/String",
          "description": "A cursor that can be used to retrieve the next set of matching documents when you want to page through a large result set."
        },
        "found": {
          "$ref": "#/definitions/Long",
          "description": "The total number of documents that match the search request."
        },
        "hit": {
          "$ref": "#/definitions/HitList",
          "description": "A document that matches the search request."
        },
        "start": {
          "$ref": "#/definitions/Long",
          "description": "The index of the first matching document."
        }
      },
      "type": "object"
    },
    "Long": {
      "type": "integer"
    },
    "Partial": {
      "type": "boolean"
    },
    "Query": {
      "type": "string"
    },
    "QueryOptions": {
      "type": "string"
    },
    "QueryParser": {
      "enum": [
        "simple",
        "structured",
        "lucene",
        "dismax"
      ],
      "type": "string"
    },
    "Return": {
      "type": "string"
    },
    "SearchException": {
      "description": "Information about any problems encountered while processing a search request.",
      "properties": {
        "message": {
          "$ref": "#/definitions/String",
          "description": "A description of the error returned by the search service."
        }
      },
      "type": "object"
    },
    "SearchRequest": {
      "description": "Container for the parameters to the <code>Search</code> request.",
      "properties": {},
      "type": "object"
    },
    "SearchResponse": {
      "description": "The result of a <code>Search</code> request. Contains the documents that match the specified search criteria and any requested fields, highlights, and facet information.",
      "properties": {
        "facets": {
          "$ref": "#/definitions/Facets",
          "description": "The requested facet information."
        },
        "hits": {
          "$ref": "#/definitions/Hits",
          "description": "The documents that match the search criteria."
        },
        "stats": {
          "$ref": "#/definitions/Stats",
          "description": "The requested field statistics information."
        },
        "status": {
          "$ref": "#/definitions/SearchStatus",
          "description": "The status information returned for the search request."
        }
      },
      "type": "object"
    },
    "SearchStatus": {
      "description": "Contains the resource id (<code>rid</code>) and the time it took to process the request (<code>timems</code>).",
      "properties": {
        "rid": {
          "$ref": "#/definitions/String",
          "description": "The encrypted resource ID for the request."
        },
        "timems": {
          "$ref": "#/definitions/Long",
          "description": "How long it took to process the request, in milliseconds."
        }
      },
      "type": "object"
    },
    "Size": {
      "type": "integer"
    },
    "Sort": {
      "type": "string"
    },
    "Start": {
      "type": "integer"
    },
    "Stat": {
      "type": "string"
    },
    "Stats": {
      "description": "The statistics calculated in the request.",
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/FieldStats"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "String": {
      "type": "string"
    },
    "SuggestModel": {
      "description": "Container for the suggestion information returned in a <code>SuggestResponse</code>.",
      "properties": {
        "found": {
          "$ref": "#/definitions/Long",
          "description": "The number of documents that were found to match the query string."
        },
        "query": {
          "$ref": "#/definitions/String",
          "description": "The query string specified in the suggest request."
        },
        "suggestions": {
          "$ref": "#/definitions/Suggestions",
          "description": "The documents that match the query string."
        }
      },
      "type": "object"
    },
    "SuggestRequest": {
      "description": "Container for the parameters to the <code>Suggest</code> request.",
      "properties": {},
      "type": "object"
    },
    "SuggestResponse": {
      "description": "Contains the response to a <code>Suggest</code> request.",
      "properties": {
        "status": {
          "$ref": "#/definitions/SuggestStatus",
          "description": "The status of a <code>SuggestRequest</code>. Contains the resource ID (<code>rid</code>) and how long it took to process the request (<code>timems</code>)."
        },
        "suggest": {
          "$ref": "#/definitions/SuggestModel",
          "description": "Container for the matching search suggestion information."
        }
      },
      "type": "object"
    },
    "SuggestStatus": {
      "description": "Contains the resource id (<code>rid</code>) and the time it took to process the request (<code>timems</code>).",
      "properties": {
        "rid": {
          "$ref": "#/definitions/String",
          "description": "The encrypted resource ID for the request."
        },
        "timems": {
          "$ref": "#/definitions/Long",
          "description": "How long it took to process the request, in milliseconds."
        }
      },
      "type": "object"
    },
    "Suggester": {
      "type": "string"
    },
    "SuggestionMatch": {
      "description": "An autocomplete suggestion that matches the query string specified in a <code>SuggestRequest</code>. ",
      "properties": {
        "id": {
          "$ref": "#/definitions/String",
          "description": "The document ID of the suggested document."
        },
        "score": {
          "$ref": "#/definitions/Long",
          "description": "The relevance score of a suggested match."
        },
        "suggestion": {
          "$ref": "#/definitions/String",
          "description": "The string that matches the query string specified in the <code>SuggestRequest</code>. "
        }
      },
      "type": "object"
    },
    "Suggestions": {
      "items": {
        "$ref": "#/definitions/SuggestionMatch"
      },
      "type": "array"
    },
    "SuggestionsSize": {
      "type": "integer"
    },
    "UploadDocumentsRequest": {
      "description": "Container for the parameters to the <code>UploadDocuments</code> request.",
      "properties": {
        "documents": {
          "$ref": "#/definitions/Blob",
          "description": "A batch of documents formatted in JSON or HTML."
        }
      },
      "required": [
        "documents"
      ],
      "type": "object"
    },
    "UploadDocumentsResponse": {
      "description": "Contains the response to an <code>UploadDocuments</code> request.",
      "properties": {
        "adds": {
          "$ref": "#/definitions/Adds",
          "description": "The number of documents that were added to the search domain."
        },
        "deletes": {
          "$ref": "#/definitions/Deletes",
          "description": "The number of documents that were deleted from the search domain."
        },
        "status": {
          "$ref": "#/definitions/String",
          "description": "The status of an <code>UploadDocumentsRequest</code>."
        },
        "warnings": {
          "$ref": "#/definitions/DocumentServiceWarnings",
          "description": "Any warnings returned by the document service about the documents being uploaded."
        }
      },
      "type": "object"
    }
  }
}
