syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package awselasticbeanstalk;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AbortEnvironmentUpdateMessage body = 10;
}

message Post#ApplyEnvironmentManagedActionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ApplyEnvironmentManagedActionRequest body = 10;
}

message Post#CheckDNSAvailabilityRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CheckDNSAvailabilityMessage body = 10;
}

message Post#ComposeEnvironmentsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ComposeEnvironmentsMessage body = 10;
}

message Post#CreateApplicationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateApplicationMessage body = 10;
}

message Post#CreateApplicationVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateApplicationVersionMessage body = 10;
}

message Post#CreateConfigurationTemplateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateConfigurationTemplateMessage body = 10;
}

message Post#CreateEnvironmentRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateEnvironmentMessage body = 10;
}

message Post#CreatePlatformVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreatePlatformVersionRequest body = 10;
}

message Post#CreateStorageLocationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DeleteApplicationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteApplicationMessage body = 10;
}

message Post#DeleteApplicationVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteApplicationVersionMessage body = 10;
}

message Post#DeleteConfigurationTemplateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteConfigurationTemplateMessage body = 10;
}

message Post#DeleteEnvironmentConfigurationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteEnvironmentConfigurationMessage body = 10;
}

message Post#DeletePlatformVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePlatformVersionRequest body = 10;
}

message Post#DescribeApplicationVersionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeApplicationVersionsMessage body = 10;
}

message Post#DescribeApplicationsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeApplicationsMessage body = 10;
}

message Post#DescribeConfigurationOptionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeConfigurationOptionsMessage body = 10;
}

message Post#DescribeConfigurationSettingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeConfigurationSettingsMessage body = 10;
}

message Post#DescribeEnvironmentHealthRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEnvironmentHealthRequest body = 10;
}

message Post#DescribeEnvironmentManagedActionHistoryRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEnvironmentManagedActionHistoryRequest body = 10;
}

message Post#DescribeEnvironmentManagedActionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEnvironmentManagedActionsRequest body = 10;
}

message Post#DescribeEnvironmentResourcesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEnvironmentResourcesMessage body = 10;
}

message Post#DescribeEnvironmentsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeEnvironmentsMessage body = 10;
}

message Post#DescribeEventsRequest {
    string Action = 1;
    // Pagination limit
    string MaxRecords = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    DescribeEventsMessage body = 12;
}

message Post#DescribeInstancesHealthRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeInstancesHealthRequest body = 10;
}

message Post#DescribePlatformVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribePlatformVersionRequest body = 10;
}

message Post#ListAvailableSolutionStacksRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#ListPlatformVersionsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ListPlatformVersionsRequest body = 10;
}

message Post#RebuildEnvironmentRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RebuildEnvironmentMessage body = 10;
}

message Post#RequestEnvironmentInfoRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RequestEnvironmentInfoMessage body = 10;
}

message Post#RestartAppServerRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RestartAppServerMessage body = 10;
}

message Post#RetrieveEnvironmentInfoRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RetrieveEnvironmentInfoMessage body = 10;
}

message Post#SwapEnvironmentCNAMEsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    SwapEnvironmentCNAMEsMessage body = 10;
}

message Post#TerminateEnvironmentRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    TerminateEnvironmentMessage body = 10;
}

message Post#UpdateApplicationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateApplicationMessage body = 10;
}

message Post#UpdateApplicationResourceLifecycleRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateApplicationResourceLifecycleMessage body = 10;
}

message Post#UpdateApplicationVersionRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateApplicationVersionMessage body = 10;
}

message Post#UpdateConfigurationTemplateRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateConfigurationTemplateMessage body = 10;
}

message Post#UpdateEnvironmentRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateEnvironmentMessage body = 10;
}

message Post#ValidateConfigurationSettingsRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    ValidateConfigurationSettingsMessage body = 10;
}

message AbortEnvironmentUpdateMessage {
    // This specifies the ID of the environment with the in-progress update that you want to cancel.
    string EnvironmentId = 1;
    // This specifies the name of the environment with the in-progress update that you want to cancel.
    string EnvironmentName = 2;
}

enum ActionHistoryStatu {
    COMPLETED = 0;
    FAILED = 1;
    UNKNOWN = 2;
}

enum ActionStatu {
    SCHEDULED = 0;
    PENDING = 1;
    RUNNING = 2;
    UNKNOWN = 3;
}

enum ActionType {
    INSTANCEREFRESH = 0;
    PLATFORMUPDATE = 1;
    UNKNOWN = 2;
}

message ApplicationDescription {
    // The name of the application.
    string ApplicationName = 1;
    // The names of the configuration templates associated with this application.
    array ConfigurationTemplates = 2;
    // The date when the application was created.
    string DateCreated = 3;
    // The date when the application was last modified.
    string DateUpdated = 4;
    // User-defined description of the application.
    string Description = 5;
    // The lifecycle settings for the application.
    ApplicationResourceLifecycleConfig ResourceLifecycleConfig = 6;
    // The names of the versions for this application.
    array Versions = 7;
}

repeated ApplicationDescription ApplicationDescriptionList = 1

message ApplicationDescriptionMessage {
    //  The <a>ApplicationDescription</a> of the application.
    ApplicationDescription Application = 1;
}

message ApplicationDescriptionsMessage {
    // This parameter contains a list of <a>ApplicationDescription</a>.
    array Applications = 1;
}

message ApplicationMetrics {
    // The amount of time that the metrics cover (usually 10 seconds). For example, you might have 5 requests (<code>request_count</code>) within the most recent time slice of 10 seconds (<code>duration</code>).
    integer Duration = 1;
    // Represents the average latency for the slowest X percent of requests over the last 10 seconds. Latencies are in seconds with one millisecond resolution.
    Latency Latency = 2;
    // Average number of requests handled by the web server per second over the last 10 seconds.
    integer RequestCount = 3;
    // Represents the percentage of requests over the last 10 seconds that resulted in each type of status code response.
    StatusCodes StatusCodes = 4;
}



repeated string ApplicationNamesList = 1

message ApplicationResourceLifecycleConfig {
    // The ARN of an IAM service role that Elastic Beanstalk has permission to assume.
    string ServiceRole = 1;
    // The application version lifecycle configuration.
    ApplicationVersionLifecycleConfig VersionLifecycleConfig = 2;
}

message ApplicationResourceLifecycleDescriptionMessage {
    // The name of the application.
    string ApplicationName = 1;
    // The lifecycle configuration.
    ApplicationResourceLifecycleConfig ResourceLifecycleConfig = 2;
}

message ApplicationVersionDescription {
    // The name of the application to which the application version belongs.
    string ApplicationName = 1;
    // Reference to the artifact from the AWS CodeBuild build.
    string BuildArn = 2;
    // The creation date of the application version.
    string DateCreated = 3;
    // The last modified date of the application version.
    string DateUpdated = 4;
    // The description of the application version.
    string Description = 5;
    // If the version's source code was retrieved from AWS CodeCommit, the location of the source code for the application version.
    SourceBuildInformation SourceBuildInformation = 6;
    // The storage location of the application version's source bundle in Amazon S3.
    S3Location SourceBundle = 7;
    // The processing status of the application version.
    ApplicationVersionStatus Status = 8;
    // A unique identifier for the application version.
    string VersionLabel = 9;
}

repeated ApplicationVersionDescription ApplicationVersionDescriptionList = 1

message ApplicationVersionDescriptionMessage {
    //  The <a>ApplicationVersionDescription</a> of the application version.
    ApplicationVersionDescription ApplicationVersion = 1;
}

message ApplicationVersionDescriptionsMessage {
    // List of <code>ApplicationVersionDescription</code> objects sorted in order of creation.
    array ApplicationVersions = 1;
    // In a paginated request, the token that you can pass in a subsequent request to get the next response page.
    string NextToken = 2;
}

message ApplicationVersionLifecycleConfig {
    // Specify a max age rule to restrict the length of time that application versions are retained for an application.
    MaxAgeRule MaxAgeRule = 1;
    // Specify a max count rule to restrict the number of application versions that are retained for an application.
    MaxCountRule MaxCountRule = 2;
}

enum ApplicationVersionStatu {
    PROCESSED = 0;
    UNPROCESSED = 1;
    FAILED = 2;
    PROCESSING = 3;
    BUILDING = 4;
}

message ApplyEnvironmentManagedActionRequest {
    // The action ID of the scheduled managed action to execute.
    string ActionId = 1;
    // The environment ID of the target environment.
    string EnvironmentId = 2;
    // The name of the target environment.
    string EnvironmentName = 3;
}

message ApplyEnvironmentManagedActionResult {
    // A description of the managed action.
    string ActionDescription = 1;
    // The action ID of the managed action.
    string ActionId = 2;
    // The type of managed action.
    ActionType ActionType = 3;
    // The status of the managed action.
    string Status = 4;
}

message AutoScalingGroup {
    // The name of the <code>AutoScalingGroup</code> .
    string Name = 1;
}

repeated AutoScalingGroup AutoScalingGroupList = 1

repeated SolutionStackDescription AvailableSolutionStackDetailsList = 1

repeated string AvailableSolutionStackNamesList = 1





message BuildConfiguration {
    // The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip.
    string ArtifactName = 1;
    // The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
    string CodeBuildServiceRole = 2;
    // <p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>
    ComputeType ComputeType = 3;
    // The ID of the Docker image to use for this build project.
    string Image = 4;
    // How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
    integer TimeoutInMinutes = 5;
}

message Builder {
    // The ARN of the builder.
    string ARN = 1;
}

message CPUUtilization {
    // Percentage of time that the CPU has spent in the <code>I/O Wait</code> state over the last 10 seconds.
    number IOWait = 1;
    // Percentage of time that the CPU has spent in the <code>IRQ</code> state over the last 10 seconds.
    number IRQ = 2;
    // Percentage of time that the CPU has spent in the <code>Idle</code> state over the last 10 seconds.
    number Idle = 3;
    // Percentage of time that the CPU has spent in the <code>Nice</code> state over the last 10 seconds.
    number Nice = 4;
    // Percentage of time that the CPU has spent in the <code>SoftIRQ</code> state over the last 10 seconds.
    number SoftIRQ = 5;
    // Percentage of time that the CPU has spent in the <code>System</code> state over the last 10 seconds.
    number System = 6;
    // Percentage of time that the CPU has spent in the <code>User</code> state over the last 10 seconds.
    number User = 7;
}



repeated string Causes = 1

message CheckDNSAvailabilityMessage {
    // The prefix used when this CNAME is reserved.
    string CNAMEPrefix = 1;
}

message CheckDNSAvailabilityResultMessage {
    // <p>Indicates if the specified CNAME is available:</p> <ul> <li> <p> <code>true</code> : The CNAME is available.</p> </li> <li> <p> <code>false</code> : The CNAME is not available.</p> </li> </ul>
    boolean Available = 1;
    // The fully qualified CNAME to reserve when <a>CreateEnvironment</a> is called with the provided prefix.
    string FullyQualifiedCNAME = 2;
}

message CodeBuildNotInServiceRegionException {
}

message ComposeEnvironmentsMessage {
    // The name of the application to which the specified source bundles belong.
    string ApplicationName = 1;
    // The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment's manifest ends with a + (plus) character. See <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.
    string GroupName = 2;
    // A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.
    array VersionLabels = 3;
}

enum ComputeType {
    BUILD_GENERAL1_SMALL = 0;
    BUILD_GENERAL1_MEDIUM = 1;
    BUILD_GENERAL1_LARGE = 2;
}

enum ConfigurationDeploymentStatu {
    DEPLOYED = 0;
    PENDING = 1;
    FAILED = 2;
}

message ConfigurationOptionDescription {
    // <p>An indication of which action is required if the value for this configuration option changes:</p> <ul> <li> <p> <code>NoInterruption</code> : There is no interruption to the environment or application availability.</p> </li> <li> <p> <code>RestartEnvironment</code> : The environment is entirely restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process.</p> </li> <li> <p> <code>RestartApplicationServer</code> : The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted.</p> </li> </ul>
    string ChangeSeverity = 1;
    // The default value for this configuration option.
    string DefaultValue = 2;
    // If specified, the configuration option must be a string value no longer than this value.
    integer MaxLength = 3;
    // If specified, the configuration option must be a numeric value less than this value.
    integer MaxValue = 4;
    // If specified, the configuration option must be a numeric value greater than this value.
    integer MinValue = 5;
    // The name of the configuration option.
    string Name = 6;
    // A unique namespace identifying the option's associated AWS resource.
    string Namespace = 7;
    // If specified, the configuration option must be a string value that satisfies this regular expression.
    OptionRestrictionRegex Regex = 8;
    // <p>An indication of whether the user defined this configuration option:</p> <ul> <li> <p> <code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying if this as an <code>Option to Remove</code> when updating configuration settings. </p> </li> <li> <p> <code>false</code> : This configuration was not defined by the user.</p> </li> </ul> <p> Constraint: You can remove only <code>UserDefined</code> options from a configuration. </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>
    boolean UserDefined = 9;
    // If specified, values for the configuration option are selected from this list.
    array ValueOptions = 10;
    // <p>An indication of which type of values this option has and whether it is allowable to select one or more than one of the possible values:</p> <ul> <li> <p> <code>Scalar</code> : Values for this option are a single selection from the possible values, or an unformatted string, or numeric value governed by the <code>MIN/MAX/Regex</code> constraints.</p> </li> <li> <p> <code>List</code> : Values for this option are multiple selections from the possible values.</p> </li> <li> <p> <code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> .</p> </li> <li> <p> <code>Json</code> : Values for this option are a JSON representation of a <code>ConfigDocument</code>.</p> </li> </ul>
    ConfigurationOptionValueType ValueType = 11;
}

repeated ConfigurationOptionDescription ConfigurationOptionDescriptionsList = 1





repeated string ConfigurationOptionPossibleValues = 1

message ConfigurationOptionSetting {
    // A unique namespace identifying the option's associated AWS resource.
    string Namespace = 1;
    // The name of the configuration option.
    string OptionName = 2;
    // A unique resource name for a time-based scaling configuration option.
    string ResourceName = 3;
    // The current value for the configuration option.
    string Value = 4;
}

repeated ConfigurationOptionSetting ConfigurationOptionSettingsList = 1





enum ConfigurationOptionValueType {
    SCALAR = 0;
    LIST = 1;
}

message ConfigurationOptionsDescription {
    //  A list of <a>ConfigurationOptionDescription</a>.
    array Options = 1;
    // The ARN of the platform.
    string PlatformArn = 2;
    // The name of the solution stack these configuration options belong to.
    string SolutionStackName = 3;
}

message ConfigurationSettingsDescription {
    // The name of the application associated with this configuration set.
    string ApplicationName = 1;
    // The date (in UTC time) when this configuration set was created.
    string DateCreated = 2;
    // The date (in UTC time) when this configuration set was last modified.
    string DateUpdated = 3;
    // <p> If this configuration set is associated with an environment, the <code>DeploymentStatus</code> parameter indicates the deployment status of this configuration set: </p> <ul> <li> <p> <code>null</code>: This configuration is not associated with a running environment.</p> </li> <li> <p> <code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying.</p> </li> <li> <p> <code>deployed</code>: This is the configuration that is currently deployed to the associated running environment.</p> </li> <li> <p> <code>failed</code>: This is a draft configuration that failed to successfully deploy.</p> </li> </ul>
    ConfigurationDeploymentStatus DeploymentStatus = 4;
    // Describes this configuration set.
    string Description = 5;
    //  If not <code>null</code>, the name of the environment for this configuration set.
    string EnvironmentName = 6;
    // A list of the configuration options and their values in this configuration set.
    array OptionSettings = 7;
    // The ARN of the platform.
    string PlatformArn = 8;
    // The name of the solution stack this configuration set uses.
    string SolutionStackName = 9;
    //  If not <code>null</code>, the name of the configuration template for this configuration set.
    string TemplateName = 10;
}

repeated ConfigurationSettingsDescription ConfigurationSettingsDescriptionList = 1

message ConfigurationSettingsDescriptions {
    //  A list of <a>ConfigurationSettingsDescription</a>.
    array ConfigurationSettings = 1;
}

message ConfigurationSettingsValidationMessages {
    //  A list of <a>ValidationMessage</a>.
    array Messages = 1;
}



repeated string ConfigurationTemplateNamesList = 1

message CreateApplicationMessage {
    // <p>The name of the application.</p> <p>Constraint: This name must be unique within your account. If the specified name already exists, the action returns an <code>InvalidParameterValue</code> error.</p>
    string ApplicationName = 1;
    // Describes the application.
    string Description = 2;
    // Specify an application resource lifecycle configuration to prevent your application from accumulating too many versions.
    ApplicationResourceLifecycleConfig ResourceLifecycleConfig = 3;
}

message CreateApplicationVersionMessage {
    //  The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error.
    string ApplicationName = 1;
    // Set to <code>true</code> to create an application with the specified name if it doesn't already exist.
    boolean AutoCreateApplication = 2;
    // Settings for an AWS CodeBuild build.
    BuildConfiguration BuildConfiguration = 3;
    // Describes this version.
    string Description = 4;
    // Preprocesses and validates the environment manifest and configuration files in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.
    boolean Process = 5;
    // Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.
    SourceBuildInformation SourceBuildInformation = 6;
    // <p>The Amazon S3 bucket and key that identify the location of the source bundle for this version.</p> <note> <p>The Amazon S3 bucket must be in the same region as the environment.</p> </note> <p>Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with <code>SourceBuildInformation</code>), but not both. If neither <code>SourceBundle</code> nor <code>SourceBuildInformation</code> are provided, Elastic Beanstalk uses a sample application.</p>
    S3Location SourceBundle = 7;
    // <p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>
    string VersionLabel = 8;
}

message CreateConfigurationTemplateMessage {
    // The name of the application to associate with this configuration template. If no application is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.
    string ApplicationName = 1;
    // Describes this configuration.
    string Description = 2;
    // The ID of the environment used with this configuration template.
    string EnvironmentId = 3;
    // If specified, AWS Elastic Beanstalk sets the specified configuration option to the requested value. The new value overrides the value obtained from the solution stack or the source configuration template.
    array OptionSettings = 4;
    // The ARN of the custome platform.
    string PlatformArn = 5;
    // <p>The name of the solution stack used by this configuration. The solution stack specifies the operating system, architecture, and application server for a configuration template. It determines the set of configuration options as well as the possible and default values.</p> <p> Use <a>ListAvailableSolutionStacks</a> to obtain a list of available solution stacks. </p> <p> A solution stack name or a source configuration parameter must be specified, otherwise AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>If a solution stack name is not specified and the source configuration parameter is specified, AWS Elastic Beanstalk uses the same solution stack as the source configuration template.</p>
    string SolutionStackName = 6;
    // <p>If specified, AWS Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration.</p> <p> Values specified in the <code>OptionSettings</code> parameter of this call overrides any values obtained from the <code>SourceConfiguration</code>. </p> <p> If no configuration template is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Constraint: If both the solution stack name parameter and the source configuration parameters are specified, the solution stack of the source configuration template must match the specified solution stack name or else AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p>
    SourceConfiguration SourceConfiguration = 7;
    // <p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application.</p> <p>Default: If a configuration template already exists with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>
    string TemplateName = 8;
}

message CreateEnvironmentMessage {
    // <p>The name of the application that contains the version to be deployed.</p> <p> If no application is found with this name, <code>CreateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p>
    string ApplicationName = 1;
    // If specified, the environment attempts to use this value as the prefix for the CNAME. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
    string CNAMEPrefix = 2;
    // Describes this environment.
    string Description = 3;
    // <p>A unique name for the deployment environment. Used in the application URL.</p> <p>Constraint: Must be from 4 to 40 characters in length. The name can contain only letters, numbers, and hyphens. It cannot start or end with a hyphen. This name must be unique within a region in your account. If the specified name already exists in the region, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If the CNAME parameter is not specified, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>
    string EnvironmentName = 4;
    // The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name parameter. See <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.
    string GroupName = 5;
    // If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template.
    array OptionSettings = 6;
    // A list of custom user-defined configuration options to remove from the configuration set for this new environment.
    array OptionsToRemove = 7;
    // The ARN of the platform.
    string PlatformArn = 8;
    // This is an alternative to specifying a template name. If specified, AWS Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack.
    string SolutionStackName = 9;
    // This specifies the tags applied to resources in the environment.
    array Tags = 10;
    //  The name of the configuration template to use in deployment. If no configuration template is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.
    string TemplateName = 11;
    // This specifies the tier to use for creating this environment.
    EnvironmentTier Tier = 12;
    // <p>The name of the application version to deploy.</p> <p> If the specified application has no associated application versions, AWS Elastic Beanstalk <code>UpdateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If not specified, AWS Elastic Beanstalk attempts to launch the sample application in the container.</p>
    string VersionLabel = 13;
}

message CreatePlatformVersionRequest {
    // The name of the builder environment.
    string EnvironmentName = 1;
    // The configuration option settings to apply to the builder environment.
    array OptionSettings = 2;
    // The location of the platform definition archive in Amazon S3.
    S3Location PlatformDefinitionBundle = 3;
    // The name of your custom platform.
    string PlatformName = 4;
    // The number, such as 1.0.2, for the new platform version.
    string PlatformVersion = 5;
}

message CreatePlatformVersionResult {
    // The builder used to create the custom platform.
    Builder Builder = 1;
    // Detailed information about the new version of the custom platform.
    PlatformSummary PlatformSummary = 2;
}

message CreateStorageLocationResultMessage {
    // The name of the Amazon S3 bucket created.
    string S3Bucket = 1;
}

message CustomAmi {
    // THe ID of the image used to create the custom AMI.
    string ImageId = 1;
    // The type of virtualization used to create the custom AMI.
    string VirtualizationType = 2;
}

repeated CustomAmi CustomAmiList = 1





message DeleteApplicationMessage {
    // The name of the application to delete.
    string ApplicationName = 1;
    // When set to true, running environments will be terminated before deleting the application.
    boolean TerminateEnvByForce = 2;
}

message DeleteApplicationVersionMessage {
    // The name of the application to which the version belongs.
    string ApplicationName = 1;
    // Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.
    boolean DeleteSourceBundle = 2;
    // The label of the version to delete.
    string VersionLabel = 3;
}

message DeleteConfigurationTemplateMessage {
    // The name of the application to delete the configuration template from.
    string ApplicationName = 1;
    // The name of the configuration template to delete.
    string TemplateName = 2;
}

message DeleteEnvironmentConfigurationMessage {
    // The name of the application the environment is associated with.
    string ApplicationName = 1;
    // The name of the environment to delete the draft configuration from.
    string EnvironmentName = 2;
}

message DeletePlatformVersionRequest {
    // The ARN of the version of the custom platform.
    string PlatformArn = 1;
}

message DeletePlatformVersionResult {
    // Detailed information about the version of the custom platform.
    PlatformSummary PlatformSummary = 1;
}

message Deployment {
    // The ID of the deployment. This number increases by one each time that you deploy source code or change instance configuration settings.
    integer DeploymentId = 1;
    // <p>For in-progress deployments, the time that the deployment started.</p> <p>For completed deployments, the time that the deployment ended.</p>
    string DeploymentTime = 2;
    // <p>The status of the deployment:</p> <ul> <li> <p> <code>In Progress</code> : The deployment is in progress.</p> </li> <li> <p> <code>Deployed</code> : The deployment succeeded.</p> </li> <li> <p> <code>Failed</code> : The deployment failed.</p> </li> </ul>
    string Status = 3;
    // The version label of the application version in the deployment.
    string VersionLabel = 4;
}

message DescribeApplicationVersionsMessage {
    // Specify an application name to show only application versions for that application.
    string ApplicationName = 1;
    // <p>For a paginated request. Specify a maximum number of application versions to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available application versions are retrieved in a single response.</p>
    integer MaxRecords = 2;
    // <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    string NextToken = 3;
    // Specify a version label to show a specific application version.
    array VersionLabels = 4;
}

message DescribeApplicationsMessage {
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names.
    array ApplicationNames = 1;
}

message DescribeConfigurationOptionsMessage {
    // The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.
    string ApplicationName = 1;
    // The name of the environment whose configuration options you want to describe.
    string EnvironmentName = 2;
    // If specified, restricts the descriptions to only the specified options.
    array Options = 3;
    // The ARN of the custom platform.
    string PlatformArn = 4;
    // The name of the solution stack whose configuration options you want to describe.
    string SolutionStackName = 5;
    // The name of the configuration template whose configuration options you want to describe.
    string TemplateName = 6;
}

message DescribeConfigurationSettingsMessage {
    // The application for the environment or configuration template.
    string ApplicationName = 1;
    // <p>The name of the environment to describe.</p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
    // <p>The name of the configuration template to describe.</p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>
    string TemplateName = 3;
}

message DescribeEnvironmentHealthRequest {
    // Specify the response elements to return. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns the name of the environment.
    array AttributeNames = 1;
    // <p>Specify the environment by ID.</p> <p>You must specify either this or an EnvironmentName, or both.</p>
    string EnvironmentId = 2;
    // <p>Specify the environment by name.</p> <p>You must specify either this or an EnvironmentName, or both.</p>
    string EnvironmentName = 3;
}

message DescribeEnvironmentHealthResult {
    // Application request metrics for the environment.
    ApplicationMetrics ApplicationMetrics = 1;
    // Descriptions of the data that contributed to the environment's current health status.
    array Causes = 2;
    // The <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">health color</a> of the environment.
    string Color = 3;
    // The environment's name.
    string EnvironmentName = 4;
    // The <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">health status</a> of the environment. For example, <code>Ok</code>.
    string HealthStatus = 5;
    // Summary health information for the instances in the environment.
    InstanceHealthSummary InstancesHealth = 6;
    // The date and time that the health information was retrieved.
    string RefreshedAt = 7;
    // The environment's operational status. <code>Ready</code>, <code>Launching</code>, <code>Updating</code>, <code>Terminating</code>, or <code>Terminated</code>.
    EnvironmentHealth Status = 8;
}

message DescribeEnvironmentManagedActionHistoryRequest {
    // The environment ID of the target environment.
    string EnvironmentId = 1;
    // The name of the target environment.
    string EnvironmentName = 2;
    // The maximum number of items to return for a single request.
    integer MaxItems = 3;
    // The pagination token returned by a previous request.
    string NextToken = 4;
}

message DescribeEnvironmentManagedActionHistoryResult {
    // A list of completed and failed managed actions.
    array ManagedActionHistoryItems = 1;
    // A pagination token that you pass to <a>DescribeEnvironmentManagedActionHistory</a> to get the next page of results.
    string NextToken = 2;
}

message DescribeEnvironmentManagedActionsRequest {
    // The environment ID of the target environment.
    string EnvironmentId = 1;
    // The name of the target environment.
    string EnvironmentName = 2;
    // To show only actions with a particular status, specify a status.
    ActionStatus Status = 3;
}

message DescribeEnvironmentManagedActionsResult {
    // A list of upcoming and in-progress managed actions.
    array ManagedActions = 1;
}

message DescribeEnvironmentResourcesMessage {
    // <p>The ID of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 1;
    // <p>The name of the environment to retrieve AWS resource usage data.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
}

message DescribeEnvironmentsMessage {
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.
    string ApplicationName = 1;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.
    array EnvironmentIds = 2;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.
    array EnvironmentNames = 3;
    // <p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>
    boolean IncludeDeleted = 4;
    //  If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed.
    string IncludedDeletedBackTo = 5;
    // <p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
    integer MaxRecords = 6;
    // <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    string NextToken = 7;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.
    string VersionLabel = 8;
}

message DescribeEventsMessage {
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.
    string ApplicationName = 1;
    //  If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>.
    string EndTime = 2;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
    string EnvironmentId = 3;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
    string EnvironmentName = 4;
    // Specifies the maximum number of events that can be returned, beginning with the most recent event.
    integer MaxRecords = 5;
    // Pagination token. If specified, the events return the next batch of results.
    string NextToken = 6;
    // The ARN of the version of the custom platform.
    string PlatformArn = 7;
    // If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.
    string RequestId = 8;
    // If specified, limits the events returned from this call to include only those with the specified severity or higher.
    EventSeverity Severity = 9;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.
    string StartTime = 10;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.
    string TemplateName = 11;
    // If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.
    string VersionLabel = 12;
}

message DescribeInstancesHealthRequest {
    // Specifies the response elements you wish to receive. To retrieve all attributes, set to <code>All</code>. If no attribute names are specified, returns a list of instances.
    array AttributeNames = 1;
    // Specify the AWS Elastic Beanstalk environment by ID.
    string EnvironmentId = 2;
    // Specify the AWS Elastic Beanstalk environment by name.
    string EnvironmentName = 3;
    // Specify the pagination token returned by a previous call.
    string NextToken = 4;
}

message DescribeInstancesHealthResult {
    // Detailed health information about each instance.
    array InstanceHealthList = 1;
    // Pagination token for the next page of results, if available.
    string NextToken = 2;
    // The date and time that the health information was retrieved.
    string RefreshedAt = 3;
}

message DescribePlatformVersionRequest {
    // The ARN of the version of the platform.
    string PlatformArn = 1;
}

message DescribePlatformVersionResult {
    // Detailed information about the version of the platform.
    PlatformDescription PlatformDescription = 1;
}

message ElasticBeanstalkServiceException {
    // The exception error message.
    string message = 1;
}

message EnvironmentDescription {
    // <p>Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel.</p> <p> <code>true:</code> There is an update in progress. </p> <p> <code>false:</code> There are no updates currently in progress. </p>
    boolean AbortableOperationInProgress = 1;
    // The name of the application associated with this environment.
    string ApplicationName = 2;
    // The URL to the CNAME for this environment.
    string CNAME = 3;
    // The creation date for this environment.
    string DateCreated = 4;
    // The last modified date for this environment.
    string DateUpdated = 5;
    // Describes this environment.
    string Description = 6;
    // For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.
    string EndpointURL = 7;
    // The environment's Amazon Resource Name (ARN), which can be used in other API reuqests that require an ARN.
    string EnvironmentArn = 8;
    // The ID of this environment.
    string EnvironmentId = 9;
    // A list of links to other environments in the same group.
    array EnvironmentLinks = 10;
    // The name of this environment.
    string EnvironmentName = 11;
    // <p>Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:</p> <ul> <li> <p> <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment.</p> </li> <li> <p> <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment.</p> </li> <li> <p> <code>Green</code>: Indicates the environment is healthy and fully functional.</p> </li> <li> <p> <code>Grey</code>: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an <code>UpdateEnvironment</code> or <code>RestartEnvironement</code> request.</p> </li> </ul> <p> Default: <code>Grey</code> </p>
    EnvironmentHealth Health = 12;
    // Returns the health status of the application running in your environment. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.
    EnvironmentHealthStatus HealthStatus = 13;
    // The ARN of the platform.
    string PlatformArn = 14;
    // The description of the AWS resources used by this environment.
    EnvironmentResourcesDescription Resources = 15;
    //  The name of the <code>SolutionStack</code> deployed with this environment.
    string SolutionStackName = 16;
    // <p>The current operational status of the environment:</p> <ul> <li> <p> <code>Launching</code>: Environment is in the process of initial deployment.</p> </li> <li> <p> <code>Updating</code>: Environment is in the process of updating its configuration settings or application version.</p> </li> <li> <p> <code>Ready</code>: Environment is available to have an action performed on it, such as update or terminate.</p> </li> <li> <p> <code>Terminating</code>: Environment is in the shut-down process.</p> </li> <li> <p> <code>Terminated</code>: Environment is not running.</p> </li> </ul>
    EnvironmentStatus Status = 17;
    // The name of the configuration template used to originally launch this environment.
    string TemplateName = 18;
    // Describes the current tier of this environment.
    EnvironmentTier Tier = 19;
    // The application version deployed in this environment.
    string VersionLabel = 20;
}

repeated EnvironmentDescription EnvironmentDescriptionsList = 1

message EnvironmentDescriptionsMessage {
    //  Returns an <a>EnvironmentDescription</a> list.
    array Environments = 1;
    // In a paginated request, the token that you can pass in a subsequent request to get the next response page.
    string NextToken = 2;
}

enum EnvironmentHealth {
    GREEN = 0;
    YELLOW = 1;
    RED = 2;
    GREY = 3;
}

enum EnvironmentHealthAttribute {
    STATUS = 0;
    COLOR = 1;
    CAUSES = 2;
    APPLICATIONMETRICS = 3;
    INSTANCESHEALTH = 4;
    ALL = 5;
    HEALTHSTATUS = 6;
    REFRESHEDAT = 7;
}

repeated EnvironmentHealthAttribute EnvironmentHealthAttributes = 1

enum EnvironmentHealthStatu {
    NODATA = 0;
    UNKNOWN = 1;
    PENDING = 2;
    OK = 3;
    INFO = 4;
    WARNING = 5;
    DEGRADED = 6;
    SEVERE = 7;
}



repeated string EnvironmentIdList = 1

message EnvironmentInfoDescription {
    // The Amazon EC2 Instance ID for this information.
    string Ec2InstanceId = 1;
    // The type of information retrieved.
    EnvironmentInfoType InfoType = 2;
    // The retrieved information.
    string Message = 3;
    // The time stamp when this information was retrieved.
    string SampleTimestamp = 4;
}

repeated EnvironmentInfoDescription EnvironmentInfoDescriptionList = 1

enum EnvironmentInfoType {
    TAIL = 0;
    BUNDLE = 1;
}

message EnvironmentLink {
    // The name of the linked environment (the dependency).
    string EnvironmentName = 1;
    // The name of the link.
    string LinkName = 2;
}

repeated EnvironmentLink EnvironmentLinks = 1



repeated string EnvironmentNamesList = 1

message EnvironmentResourceDescription {
    //  The <code>AutoScalingGroups</code> used by this environment.
    array AutoScalingGroups = 1;
    // The name of the environment.
    string EnvironmentName = 2;
    // The Amazon EC2 instances used by this environment.
    array Instances = 3;
    // The Auto Scaling launch configurations in use by this environment.
    array LaunchConfigurations = 4;
    // The LoadBalancers in use by this environment.
    array LoadBalancers = 5;
    // The queues used by this environment.
    array Queues = 6;
    // The <code>AutoScaling</code> triggers in use by this environment.
    array Triggers = 7;
}

message EnvironmentResourceDescriptionsMessage {
    //  A list of <a>EnvironmentResourceDescription</a>.
    EnvironmentResourceDescription EnvironmentResources = 1;
}

message EnvironmentResourcesDescription {
    // Describes the LoadBalancer.
    LoadBalancerDescription LoadBalancer = 1;
}

enum EnvironmentStatu {
    LAUNCHING = 0;
    UPDATING = 1;
    READY = 2;
    TERMINATING = 3;
    TERMINATED = 4;
}

message EnvironmentTier {
    // The name of this environment tier.
    string Name = 1;
    // The type of this environment tier.
    string Type = 2;
    // The version of this environment tier.
    string Version = 3;
}

message EventDescription {
    // The application associated with the event.
    string ApplicationName = 1;
    // The name of the environment associated with this event.
    string EnvironmentName = 2;
    // The date when the event occurred.
    string EventDate = 3;
    // The event message.
    string Message = 4;
    // The ARN of the platform.
    string PlatformArn = 5;
    // The web service request ID for the activity of this event.
    string RequestId = 6;
    // The severity level of this event.
    EventSeverity Severity = 7;
    // The name of the configuration associated with this event.
    string TemplateName = 8;
    // The release label for the application version associated with this event.
    string VersionLabel = 9;
}

repeated EventDescription EventDescriptionList = 1

message EventDescriptionsMessage {
    //  A list of <a>EventDescription</a>.
    array Events = 1;
    //  If returned, this indicates that there are more results to obtain. Use this token in the next <a>DescribeEvents</a> call to get the next batch of events.
    string NextToken = 2;
}

enum EventSeverity {
    TRACE = 0;
    DEBUG = 1;
    INFO = 2;
    WARN = 3;
    ERROR = 4;
    FATAL = 5;
}

enum FailureType {
    UPDATECANCELLED = 0;
    CANCELLATIONFAILED = 1;
    ROLLBACKFAILED = 2;
    ROLLBACKSUCCESSFUL = 3;
    INTERNALFAILURE = 4;
    INVALIDENVIRONMENTSTATE = 5;
    PERMISSIONSERROR = 6;
}

message Instance {
    // The ID of the Amazon EC2 instance.
    string Id = 1;
}

repeated SingleInstanceHealth InstanceHealthList = 1

message InstanceHealthSummary {
    //  <b>Red.</b> The health agent is reporting a high number of request failures or other issues for an instance or environment.
    integer Degraded = 1;
    //  <b>Green.</b> An operation is in progress on an instance.
    integer Info = 2;
    //  <b>Grey.</b> AWS Elastic Beanstalk and the health agent are reporting no data on an instance.
    integer NoData = 3;
    //  <b>Green.</b> An instance is passing health checks and the health agent is not reporting any problems.
    integer Ok = 4;
    //  <b>Grey.</b> An operation is in progress on an instance within the command timeout.
    integer Pending = 5;
    //  <b>Red.</b> The health agent is reporting a very high number of request failures or other issues for an instance or environment.
    integer Severe = 6;
    //  <b>Grey.</b> AWS Elastic Beanstalk and the health agent are reporting an insufficient amount of data on an instance.
    integer Unknown = 7;
    //  <b>Yellow.</b> The health agent is reporting a moderate number of request failures or other issues for an instance or environment.
    integer Warning = 8;
}



repeated Instance InstanceList = 1

enum InstancesHealthAttribute {
    HEALTHSTATUS = 0;
    COLOR = 1;
    CAUSES = 2;
    APPLICATIONMETRICS = 3;
    REFRESHEDAT = 4;
    LAUNCHEDAT = 5;
    SYSTEM = 6;
    DEPLOYMENT = 7;
    AVAILABILITYZONE = 8;
    INSTANCETYPE = 9;
    ALL = 10;
}

repeated InstancesHealthAttribute InstancesHealthAttributes = 1

message InsufficientPrivilegesException {
}

message InvalidRequestException {
}

message Latency {
    // The average latency for the slowest 90 percent of requests over the last 10 seconds.
    number P10 = 1;
    // The average latency for the slowest 50 percent of requests over the last 10 seconds.
    number P50 = 2;
    // The average latency for the slowest 25 percent of requests over the last 10 seconds.
    number P75 = 3;
    // The average latency for the slowest 15 percent of requests over the last 10 seconds.
    number P85 = 4;
    // The average latency for the slowest 10 percent of requests over the last 10 seconds.
    number P90 = 5;
    // The average latency for the slowest 5 percent of requests over the last 10 seconds.
    number P95 = 6;
    // The average latency for the slowest 1 percent of requests over the last 10 seconds.
    number P99 = 7;
    // The average latency for the slowest 0.1 percent of requests over the last 10 seconds.
    number P999 = 8;
}

message LaunchConfiguration {
    // The name of the launch configuration.
    string Name = 1;
}

repeated LaunchConfiguration LaunchConfigurationList = 1



message ListAvailableSolutionStacksResultMessage {
    //  A list of available solution stacks and their <a>SolutionStackDescription</a>.
    array SolutionStackDetails = 1;
    // A list of available solution stacks.
    array SolutionStacks = 2;
}

message ListPlatformVersionsRequest {
    // List only the platforms where the platform member value relates to one of the supplied values.
    array Filters = 1;
    // The maximum number of platform values returned in one call.
    integer MaxRecords = 2;
    // The starting index into the remaining list of platforms. Use the <code>NextToken</code> value from a previous <code>ListPlatformVersion</code> call.
    string NextToken = 3;
}

message ListPlatformVersionsResult {
    // The starting index into the remaining list of platforms. if this value is not <code>null</code>, you can use it in a subsequent <code>ListPlatformVersion</code> call.
    string NextToken = 1;
    // Detailed information about the platforms.
    array PlatformSummaryList = 2;
}

message Listener {
    // The port that is used by the Listener.
    integer Port = 1;
    // The protocol that is used by the Listener.
    string Protocol = 2;
}

repeated number LoadAverage = 1



message LoadBalancer {
    // The name of the LoadBalancer.
    string Name = 1;
}

message LoadBalancerDescription {
    // The domain name of the LoadBalancer.
    string Domain = 1;
    // A list of Listeners used by the LoadBalancer.
    array Listeners = 2;
    // The name of the LoadBalancer.
    string LoadBalancerName = 3;
}

repeated LoadBalancer LoadBalancerList = 1

repeated Listener LoadBalancerListenersDescription = 1



message ManagedAction {
    // A description of the managed action.
    string ActionDescription = 1;
    // A unique identifier for the managed action.
    string ActionId = 2;
    // The type of managed action.
    ActionType ActionType = 3;
    // The status of the managed action. If the action is <code>Scheduled</code>, you can apply it immediately with <a>ApplyEnvironmentManagedAction</a>.
    ActionStatus Status = 4;
    // The start time of the maintenance window in which the managed action will execute.
    string WindowStartTime = 5;
}

message ManagedActionHistoryItem {
    // A description of the managed action.
    string ActionDescription = 1;
    // A unique identifier for the managed action.
    string ActionId = 2;
    // The type of the managed action.
    ActionType ActionType = 3;
    // The date and time that the action started executing.
    string ExecutedTime = 4;
    // If the action failed, a description of the failure.
    string FailureDescription = 5;
    // If the action failed, the type of failure.
    FailureType FailureType = 6;
    // The date and time that the action finished executing.
    string FinishedTime = 7;
    // The status of the action.
    ActionHistoryStatus Status = 8;
}

repeated ManagedActionHistoryItem ManagedActionHistoryItems = 1

message ManagedActionInvalidStateException {
}

repeated ManagedAction ManagedActions = 1

message MaxAgeRule {
    // Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
    boolean DeleteSourceFromS3 = 1;
    // Specify <code>true</code> to apply the rule, or <code>false</code> to disable it.
    boolean Enabled = 2;
    // Specify the number of days to retain an application versions.
    integer MaxAgeInDays = 3;
}

message MaxCountRule {
    // Set to <code>true</code> to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
    boolean DeleteSourceFromS3 = 1;
    // Specify <code>true</code> to apply the rule, or <code>false</code> to disable it.
    boolean Enabled = 2;
    // Specify the maximum number of application versions to retain.
    integer MaxCount = 3;
}

message OperationInProgressException {
}

message OptionRestrictionRegex {
    // A unique name representing this regular expression.
    string Label = 1;
    // The regular expression pattern that a string configuration option value with this restriction must match.
    string Pattern = 2;
}

message OptionSpecification {
    // A unique namespace identifying the option's associated AWS resource.
    string Namespace = 1;
    // The name of the configuration option.
    string OptionName = 2;
    // A unique resource name for a time-based scaling configuration option.
    string ResourceName = 3;
}

repeated OptionSpecification OptionsSpecifierList = 1





message PlatformDescription {
    // The custom AMIs supported by the platform.
    array CustomAmiList = 1;
    // The date when the platform was created.
    string DateCreated = 2;
    // The date when the platform was last updated.
    string DateUpdated = 3;
    // The description of the platform.
    string Description = 4;
    // The frameworks supported by the platform.
    array Frameworks = 5;
    // Information about the maintainer of the platform.
    string Maintainer = 6;
    // The operating system used by the platform.
    string OperatingSystemName = 7;
    // The version of the operating system used by the platform.
    string OperatingSystemVersion = 8;
    // The ARN of the platform.
    string PlatformArn = 9;
    // The category of the platform.
    string PlatformCategory = 10;
    // The name of the platform.
    string PlatformName = 11;
    // The AWS account ID of the person who created the platform.
    string PlatformOwner = 12;
    // The status of the platform.
    PlatformStatus PlatformStatus = 13;
    // The version of the platform.
    string PlatformVersion = 14;
    // The programming languages supported by the platform.
    array ProgrammingLanguages = 15;
    // The name of the solution stack used by the platform.
    string SolutionStackName = 16;
    // The additions supported by the platform.
    array SupportedAddonList = 17;
    // The tiers supported by the platform.
    array SupportedTierList = 18;
}

message PlatformFilter {
    // <p>The operator to apply to the <code>Type</code> with each of the <code>Values</code>.</p> <p> Valid Values: <code>=</code> (equal to) | <code>!=</code> (not equal to) | <code>&lt;</code> (less than) | <code>&lt;=</code> (less than or equal to) | <code>&gt;</code> (greater than) | <code>&gt;=</code> (greater than or equal to) | <code>contains</code> | <code>begins_with</code> | <code>ends_with</code> </p>
    string Operator = 1;
    // <p>The custom platform attribute to which the filter values are applied.</p> <p>Valid Values: <code>PlatformName</code> | <code>PlatformVersion</code> | <code>PlatformStatus</code> | <code>PlatformOwner</code> </p>
    string Type = 2;
    // The list of values applied to the custom platform attribute.
    array Values = 3;
}







repeated string PlatformFilterValueList = 1

repeated PlatformFilter PlatformFilters = 1

message PlatformFramework {
    // The name of the framework.
    string Name = 1;
    // The version of the framework.
    string Version = 2;
}

repeated PlatformFramework PlatformFrameworks = 1







message PlatformProgrammingLanguage {
    // The name of the programming language.
    string Name = 1;
    // The version of the programming language.
    string Version = 2;
}

repeated PlatformProgrammingLanguage PlatformProgrammingLanguages = 1

enum PlatformStatu {
    CREATING = 0;
    FAILED = 1;
    READY = 2;
    DELETING = 3;
    DELETED = 4;
}

message PlatformSummary {
    // The operating system used by the platform.
    string OperatingSystemName = 1;
    // The version of the operating system used by the platform.
    string OperatingSystemVersion = 2;
    // The ARN of the platform.
    string PlatformArn = 3;
    // The category of platform.
    string PlatformCategory = 4;
    // The AWS account ID of the person who created the platform.
    string PlatformOwner = 5;
    // The status of the platform. You can create an environment from the platform once it is ready.
    PlatformStatus PlatformStatus = 6;
    // The additions associated with the platform.
    array SupportedAddonList = 7;
    // The tiers in which the platform runs.
    array SupportedTierList = 8;
}

repeated PlatformSummary PlatformSummaryList = 1



message PlatformVersionStillReferencedException {
}

message Queue {
    // The name of the queue.
    string Name = 1;
    // The URL of the queue.
    string URL = 2;
}

repeated Queue QueueList = 1

message RebuildEnvironmentMessage {
    // <p>The ID of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 1;
    // <p>The name of the environment to rebuild.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
}

message RequestEnvironmentInfoMessage {
    // <p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 1;
    // <p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
    // The type of information to request.
    EnvironmentInfoType InfoType = 3;
}

message RestartAppServerMessage {
    // <p>The ID of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 1;
    // <p>The name of the environment to restart the server for.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
}

message RetrieveEnvironmentInfoMessage {
    // <p>The ID of the data's environment.</p> <p>If no such environment is found, returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.</p>
    string EnvironmentId = 1;
    // <p>The name of the data's environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
    // The type of information to retrieve.
    EnvironmentInfoType InfoType = 3;
}

message RetrieveEnvironmentInfoResultMessage {
    //  The <a>EnvironmentInfoDescription</a> of the environment.
    array EnvironmentInfo = 1;
}

message S3Location {
    // The Amazon S3 bucket where the data is located.
    string S3Bucket = 1;
    // The Amazon S3 key where the data is located.
    string S3Key = 2;
}

message S3LocationNotInServiceRegionException {
}

message S3SubscriptionRequiredException {
}

message SingleInstanceHealth {
    // Request metrics from your application.
    ApplicationMetrics ApplicationMetrics = 1;
    // The availability zone in which the instance runs.
    string AvailabilityZone = 2;
    // Represents the causes, which provide more information about the current health status.
    array Causes = 3;
    // Represents the color indicator that gives you information about the health of the EC2 instance. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.
    string Color = 4;
    // Information about the most recent deployment to an instance.
    Deployment Deployment = 5;
    // Returns the health status of the specified instance. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.
    string HealthStatus = 6;
    // The ID of the Amazon EC2 instance.
    string InstanceId = 7;
    // The instance's type.
    string InstanceType = 8;
    // The time at which the EC2 instance was launched.
    string LaunchedAt = 9;
    // Operating system metrics from the instance.
    SystemStatus System = 10;
}

message SolutionStackDescription {
    // The permitted file types allowed for a solution stack.
    array PermittedFileTypes = 1;
    // The name of the solution stack.
    string SolutionStackName = 2;
}

repeated string SolutionStackFileTypeList = 1



message SourceBuildInformation {
    // <p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>
    string SourceLocation = 1;
    // <p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>
    SourceRepository SourceRepository = 2;
    // <p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>
    SourceType SourceType = 3;
}

message SourceBundleDeletionException {
}

message SourceConfiguration {
    // The name of the application associated with the configuration.
    string ApplicationName = 1;
    // The name of the configuration template.
    string TemplateName = 2;
}

enum SourceRepository {
    CODECOMMIT = 0;
    S3 = 1;
}

enum SourceType {
    GIT = 0;
    ZIP = 1;
}

message StatusCodes {
    // The percentage of requests over the last 10 seconds that resulted in a 2xx (200, 201, etc.) status code.
    integer Status2xx = 1;
    // The percentage of requests over the last 10 seconds that resulted in a 3xx (300, 301, etc.) status code.
    integer Status3xx = 2;
    // The percentage of requests over the last 10 seconds that resulted in a 4xx (400, 401, etc.) status code.
    integer Status4xx = 3;
    // The percentage of requests over the last 10 seconds that resulted in a 5xx (500, 501, etc.) status code.
    integer Status5xx = 4;
}





repeated string SupportedAddonList = 1



repeated string SupportedTierList = 1

message SwapEnvironmentCNAMEsMessage {
    // <p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>
    string DestinationEnvironmentId = 1;
    // <p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>
    string DestinationEnvironmentName = 2;
    // <p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>
    string SourceEnvironmentId = 3;
    // <p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>
    string SourceEnvironmentName = 4;
}

message SystemStatus {
    // CPU utilization metrics for the instance.
    CPUUtilization CPUUtilization = 1;
    // Load average in the last 1-minute, 5-minute, and 15-minute periods. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-metrics.html#health-enhanced-metrics-os">Operating System Metrics</a>.
    array LoadAverage = 2;
}

message Tag {
    // The key of the tag.
    string Key = 1;
    // The value of the tag.
    string Value = 2;
}





repeated Tag Tags = 1



message TerminateEnvironmentMessage {
    // <p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 1;
    // <p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 2;
    // Terminates the target environment even if another environment in the same group is dependent on it.
    boolean ForceTerminate = 3;
    // <p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p> <ul> <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li> </ul> <p> For more information, see the <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>
    boolean TerminateResources = 4;
}

message TooManyApplicationVersionsException {
}

message TooManyApplicationsException {
}

message TooManyBucketsException {
}

message TooManyConfigurationTemplatesException {
}

message TooManyEnvironmentsException {
}

message TooManyPlatformsException {
}

message Trigger {
    // The name of the trigger.
    string Name = 1;
}

repeated Trigger TriggerList = 1

message UpdateApplicationMessage {
    // The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.
    string ApplicationName = 1;
    // <p>A new description for the application.</p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description.</p>
    string Description = 2;
}

message UpdateApplicationResourceLifecycleMessage {
    // The name of the application.
    string ApplicationName = 1;
    // The lifecycle configuration.
    ApplicationResourceLifecycleConfig ResourceLifecycleConfig = 2;
}

message UpdateApplicationVersionMessage {
    // <p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>
    string ApplicationName = 1;
    // A new description for this version.
    string Description = 2;
    // <p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>
    string VersionLabel = 3;
}

message UpdateConfigurationTemplateMessage {
    // <p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>
    string ApplicationName = 1;
    // A new description for the configuration.
    string Description = 2;
    // A list of configuration option settings to update with the new specified option value.
    array OptionSettings = 3;
    // <p>A list of configuration options to remove from the configuration set.</p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>
    array OptionsToRemove = 4;
    // <p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>
    string TemplateName = 5;
}

message UpdateEnvironmentMessage {
    // The name of the application with which the environment is associated.
    string ApplicationName = 1;
    // If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.
    string Description = 2;
    // <p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentId = 3;
    // <p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    string EnvironmentName = 4;
    // The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.
    string GroupName = 5;
    // If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.
    array OptionSettings = 6;
    // A list of custom user-defined configuration options to remove from the configuration set for this environment.
    array OptionsToRemove = 7;
    // The ARN of the platform, if used.
    string PlatformArn = 8;
    // This specifies the platform version that the environment will run after the environment is updated.
    string SolutionStackName = 9;
    // If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.
    string TemplateName = 10;
    // <p>This specifies the tier to use to update the environment.</p> <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>
    EnvironmentTier Tier = 11;
    // If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error.
    string VersionLabel = 12;
}

message ValidateConfigurationSettingsMessage {
    // The name of the application that the configuration template or environment belongs to.
    string ApplicationName = 1;
    // <p>The name of the environment to validate the settings against.</p> <p>Condition: You cannot specify both this and a configuration template name.</p>
    string EnvironmentName = 2;
    // A list of the options and desired values to evaluate.
    array OptionSettings = 3;
    // <p>The name of the configuration template to validate the settings against.</p> <p>Condition: You cannot specify both this and an environment name.</p>
    string TemplateName = 4;
}

message ValidationMessage {
    // A message describing the error or warning.
    string Message = 1;
    // The namespace to which the option belongs.
    string Namespace = 2;
    // The name of the option.
    string OptionName = 3;
    // <p>An indication of the severity of this message:</p> <ul> <li> <p> <code>error</code>: This message indicates that this is not a valid setting for an option.</p> </li> <li> <p> <code>warning</code>: This message is providing information you should take into account.</p> </li> </ul>
    ValidationSeverity Severity = 4;
}



repeated ValidationMessage ValidationMessagesList = 1

enum ValidationSeverity {
    ERROR = 0;
    WARNING = 1;
}





repeated string VersionLabels = 1

repeated string VersionLabelsList = 1

















service AWSElasticBeanstalkService {
    // Cancels in-progress environment configuration update or application version deployment.
    rpc Post(PostRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // Applies a scheduled managed action immediately. A managed action can be applied only if its status is <code>Scheduled</code>. Get the status and action ID of a managed action with <a>DescribeEnvironmentManagedActions</a>.
    rpc Post#ApplyEnvironmentManagedAction(Post#ApplyEnvironmentManagedActionRequest) returns (ApplyEnvironmentManagedActionResult) {
      option (google.api.http) = {
        post: "//#ApplyEnvironmentManagedAction"
        body: "body"
      };
    }
    // Checks if the specified CNAME is available.
    rpc Post#CheckDNSAvailability(Post#CheckDNSAvailabilityRequest) returns (CheckDNSAvailabilityResultMessage) {
      option (google.api.http) = {
        post: "//#CheckDNSAvailability"
        body: "body"
      };
    }
    // Create or update a group of environments that each run a separate component of a single application. Takes a list of version labels that specify application source bundles for each of the environments to create or update. The name of each environment and other required information must be included in the source bundles in an environment manifest named <code>env.yaml</code>. See <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html">Compose Environments</a> for details.
    rpc Post#ComposeEnvironments(Post#ComposeEnvironmentsRequest) returns (EnvironmentDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#ComposeEnvironments"
        body: "body"
      };
    }
    //  Creates an application that has one configuration template named <code>default</code> and no application versions.
    rpc Post#CreateApplication(Post#CreateApplicationRequest) returns (ApplicationDescriptionMessage) {
      option (google.api.http) = {
        post: "//#CreateApplication"
        body: "body"
      };
    }
    // <p>Creates an application version for the specified application. You can create an application version from a source bundle in Amazon S3, a commit in AWS CodeCommit, or the output of an AWS CodeBuild build as follows:</p> <p>Specify a commit in an AWS CodeCommit repository with <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS CodeBuild with <code>SourceBuildInformation</code> and <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3 with <code>SourceBundle</code> </p> <p>Omit both <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use the default sample application.</p> <note> <p>Once you create an application version with a specified Amazon S3 bucket and key location, you cannot change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version.</p> </note>
    rpc Post#CreateApplicationVersion(Post#CreateApplicationVersionRequest) returns (ApplicationVersionDescriptionMessage) {
      option (google.api.http) = {
        post: "//#CreateApplicationVersion"
        body: "body"
      };
    }
    // <p>Creates a configuration template. Templates are associated with a specific application and are used to deploy different versions of the application with the same configuration settings.</p> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p> <a>DescribeConfigurationSettings</a> </p> </li> <li> <p> <a>ListAvailableSolutionStacks</a> </p> </li> </ul>
    rpc Post#CreateConfigurationTemplate(Post#CreateConfigurationTemplateRequest) returns (ConfigurationSettingsDescription) {
      option (google.api.http) = {
        post: "//#CreateConfigurationTemplate"
        body: "body"
      };
    }
    // Launches an environment for the specified application using the specified configuration.
    rpc Post#CreateEnvironment(Post#CreateEnvironmentRequest) returns (EnvironmentDescription) {
      option (google.api.http) = {
        post: "//#CreateEnvironment"
        body: "body"
      };
    }
    // Create a new version of your custom platform.
    rpc Post#CreatePlatformVersion(Post#CreatePlatformVersionRequest) returns (CreatePlatformVersionResult) {
      option (google.api.http) = {
        post: "//#CreatePlatformVersion"
        body: "body"
      };
    }
    // <p>Creates the Amazon S3 storage location for the account.</p> <p>This location is used to store user log files.</p>
    rpc Post#CreateStorageLocation(Post#CreateStorageLocationRequest) returns (CreateStorageLocationResultMessage) {
      option (google.api.http) = {
        post: "//#CreateStorageLocation"
      };
    }
    // <p>Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket.</p> <note> <p>You cannot delete an application that has a running environment.</p> </note>
    rpc Post#DeleteApplication(Post#DeleteApplicationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteApplication"
        body: "body"
      };
    }
    // <p>Deletes the specified version from the specified application.</p> <note> <p>You cannot delete an application version that is associated with a running environment.</p> </note>
    rpc Post#DeleteApplicationVersion(Post#DeleteApplicationVersionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteApplicationVersion"
        body: "body"
      };
    }
    // <p>Deletes the specified configuration template.</p> <note> <p>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</p> </note>
    rpc Post#DeleteConfigurationTemplate(Post#DeleteConfigurationTemplateRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteConfigurationTemplate"
        body: "body"
      };
    }
    // <p>Deletes the draft configuration associated with the running environment.</p> <p>Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action.</p>
    rpc Post#DeleteEnvironmentConfiguration(Post#DeleteEnvironmentConfigurationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteEnvironmentConfiguration"
        body: "body"
      };
    }
    // Deletes the specified version of a custom platform.
    rpc Post#DeletePlatformVersion(Post#DeletePlatformVersionRequest) returns (DeletePlatformVersionResult) {
      option (google.api.http) = {
        post: "//#DeletePlatformVersion"
        body: "body"
      };
    }
    // Retrieve a list of application versions.
    rpc Post#DescribeApplicationVersions(Post#DescribeApplicationVersionsRequest) returns (ApplicationVersionDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeApplicationVersions"
        body: "body"
      };
    }
    // Returns the descriptions of existing applications.
    rpc Post#DescribeApplications(Post#DescribeApplicationsRequest) returns (ApplicationDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeApplications"
        body: "body"
      };
    }
    // Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed.
    rpc Post#DescribeConfigurationOptions(Post#DescribeConfigurationOptionsRequest) returns (ConfigurationOptionsDescription) {
      option (google.api.http) = {
        post: "//#DescribeConfigurationOptions"
        body: "body"
      };
    }
    // <p>Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment.</p> <p>When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li> <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>
    rpc Post#DescribeConfigurationSettings(Post#DescribeConfigurationSettingsRequest) returns (ConfigurationSettingsDescriptions) {
      option (google.api.http) = {
        post: "//#DescribeConfigurationSettings"
        body: "body"
      };
    }
    // Returns information about the overall health of the specified environment. The <b>DescribeEnvironmentHealth</b> operation is only available with AWS Elastic Beanstalk Enhanced Health.
    rpc Post#DescribeEnvironmentHealth(Post#DescribeEnvironmentHealthRequest) returns (DescribeEnvironmentHealthResult) {
      option (google.api.http) = {
        post: "//#DescribeEnvironmentHealth"
        body: "body"
      };
    }
    // Lists an environment's completed and failed managed actions.
    rpc Post#DescribeEnvironmentManagedActionHistory(Post#DescribeEnvironmentManagedActionHistoryRequest) returns (DescribeEnvironmentManagedActionHistoryResult) {
      option (google.api.http) = {
        post: "//#DescribeEnvironmentManagedActionHistory"
        body: "body"
      };
    }
    // Lists an environment's upcoming and in-progress managed actions.
    rpc Post#DescribeEnvironmentManagedActions(Post#DescribeEnvironmentManagedActionsRequest) returns (DescribeEnvironmentManagedActionsResult) {
      option (google.api.http) = {
        post: "//#DescribeEnvironmentManagedActions"
        body: "body"
      };
    }
    // Returns AWS resources for this environment.
    rpc Post#DescribeEnvironmentResources(Post#DescribeEnvironmentResourcesRequest) returns (EnvironmentResourceDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEnvironmentResources"
        body: "body"
      };
    }
    // Returns descriptions for existing environments.
    rpc Post#DescribeEnvironments(Post#DescribeEnvironmentsRequest) returns (EnvironmentDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEnvironments"
        body: "body"
      };
    }
    // <p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> <p>This action returns the most recent 1,000 events from the specified <code>NextToken</code>.</p> </note>
    rpc Post#DescribeEvents(Post#DescribeEventsRequest) returns (EventDescriptionsMessage) {
      option (google.api.http) = {
        post: "//#DescribeEvents"
        body: "body"
      };
    }
    // Retrives detailed information about the health of instances in your AWS Elastic Beanstalk. This operation requires <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html">enhanced health reporting</a>.
    rpc Post#DescribeInstancesHealth(Post#DescribeInstancesHealthRequest) returns (DescribeInstancesHealthResult) {
      option (google.api.http) = {
        post: "//#DescribeInstancesHealth"
        body: "body"
      };
    }
    // Describes the version of the platform.
    rpc Post#DescribePlatformVersion(Post#DescribePlatformVersionRequest) returns (DescribePlatformVersionResult) {
      option (google.api.http) = {
        post: "//#DescribePlatformVersion"
        body: "body"
      };
    }
    // Returns a list of the available solution stack names, with the public version first and then in reverse chronological order.
    rpc Post#ListAvailableSolutionStacks(Post#ListAvailableSolutionStacksRequest) returns (ListAvailableSolutionStacksResultMessage) {
      option (google.api.http) = {
        post: "//#ListAvailableSolutionStacks"
      };
    }
    // Lists the available platforms.
    rpc Post#ListPlatformVersions(Post#ListPlatformVersionsRequest) returns (ListPlatformVersionsResult) {
      option (google.api.http) = {
        post: "//#ListPlatformVersions"
        body: "body"
      };
    }
    // Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart.
    rpc Post#RebuildEnvironment(Post#RebuildEnvironmentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RebuildEnvironment"
        body: "body"
      };
    }
    // <p>Initiates a request to compile the specified type of information of the deployed environment.</p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <p> <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>
    rpc Post#RequestEnvironmentInfo(Post#RequestEnvironmentInfoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RequestEnvironmentInfo"
        body: "body"
      };
    }
    // Causes the environment to restart the application container server running on each Amazon EC2 instance.
    rpc Post#RestartAppServer(Post#RestartAppServerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RestartAppServer"
        body: "body"
      };
    }
    // <p>Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul> <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>
    rpc Post#RetrieveEnvironmentInfo(Post#RetrieveEnvironmentInfoRequest) returns (RetrieveEnvironmentInfoResultMessage) {
      option (google.api.http) = {
        post: "//#RetrieveEnvironmentInfo"
        body: "body"
      };
    }
    // Swaps the CNAMEs of two environments.
    rpc Post#SwapEnvironmentCNAMEs(Post#SwapEnvironmentCNAMEsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#SwapEnvironmentCNAMEs"
        body: "body"
      };
    }
    // Terminates the specified environment.
    rpc Post#TerminateEnvironment(Post#TerminateEnvironmentRequest) returns (EnvironmentDescription) {
      option (google.api.http) = {
        post: "//#TerminateEnvironment"
        body: "body"
      };
    }
    // <p>Updates the specified application to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string.</p> </note>
    rpc Post#UpdateApplication(Post#UpdateApplicationRequest) returns (ApplicationDescriptionMessage) {
      option (google.api.http) = {
        post: "//#UpdateApplication"
        body: "body"
      };
    }
    // Modifies lifecycle settings for an application.
    rpc Post#UpdateApplicationResourceLifecycle(Post#UpdateApplicationResourceLifecycleRequest) returns (ApplicationResourceLifecycleDescriptionMessage) {
      option (google.api.http) = {
        post: "//#UpdateApplicationResourceLifecycle"
        body: "body"
      };
    }
    // <p>Updates the specified application version to have the specified properties.</p> <note> <p>If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string.</p> </note>
    rpc Post#UpdateApplicationVersion(Post#UpdateApplicationVersionRequest) returns (ApplicationVersionDescriptionMessage) {
      option (google.api.http) = {
        post: "//#UpdateApplicationVersion"
        body: "body"
      };
    }
    // <p>Updates the specified configuration template to have the specified properties or configuration option values.</p> <note> <p>If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string.</p> </note> <p>Related Topics</p> <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> </ul>
    rpc Post#UpdateConfigurationTemplate(Post#UpdateConfigurationTemplateRequest) returns (ConfigurationSettingsDescription) {
      option (google.api.http) = {
        post: "//#UpdateConfigurationTemplate"
        body: "body"
      };
    }
    // <p>Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment.</p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>
    rpc Post#UpdateEnvironment(Post#UpdateEnvironmentRequest) returns (EnvironmentDescription) {
      option (google.api.http) = {
        post: "//#UpdateEnvironment"
        body: "body"
      };
    }
    // <p>Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid.</p> <p>This action returns a list of messages indicating any errors or warnings associated with the selection of option values.</p>
    rpc Post#ValidateConfigurationSettings(Post#ValidateConfigurationSettingsRequest) returns (ConfigurationSettingsValidationMessages) {
      option (google.api.http) = {
        post: "//#ValidateConfigurationSettings"
        body: "body"
      };
    }
}
