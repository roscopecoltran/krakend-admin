syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package awsorganizations;

message PostRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AcceptHandshakeRequest body = 10;
}

message Post#AttachPolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    AttachPolicyRequest body = 10;
}

message Post#CancelHandshakeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CancelHandshakeRequest body = 10;
}

message Post#CreateAccountRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateAccountRequest body = 10;
}

message Post#CreateOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateOrganizationRequest body = 10;
}

message Post#CreateOrganizationalUnitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreateOrganizationalUnitRequest body = 10;
}

message Post#CreatePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    CreatePolicyRequest body = 10;
}

message Post#DeclineHandshakeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeclineHandshakeRequest body = 10;
}

message Post#DeleteOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DeleteOrganizationalUnitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeleteOrganizationalUnitRequest body = 10;
}

message Post#DeletePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DeletePolicyRequest body = 10;
}

message Post#DescribeAccountRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeAccountRequest body = 10;
}

message Post#DescribeCreateAccountStatusRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeCreateAccountStatusRequest body = 10;
}

message Post#DescribeHandshakeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeHandshakeRequest body = 10;
}

message Post#DescribeOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#DescribeOrganizationalUnitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribeOrganizationalUnitRequest body = 10;
}

message Post#DescribePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DescribePolicyRequest body = 10;
}

message Post#DetachPolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DetachPolicyRequest body = 10;
}

message Post#DisablePolicyTypeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    DisablePolicyTypeRequest body = 10;
}

message Post#EnableAllFeaturesRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnableAllFeaturesRequest body = 10;
}

message Post#EnablePolicyTypeRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    EnablePolicyTypeRequest body = 10;
}

message Post#InviteAccountToOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    InviteAccountToOrganizationRequest body = 10;
}

message Post#LeaveOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
}

message Post#ListAccountsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListAccountsRequest body = 12;
}

message Post#ListAccountsForParentRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListAccountsForParentRequest body = 12;
}

message Post#ListChildrenRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListChildrenRequest body = 12;
}

message Post#ListCreateAccountStatusRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListCreateAccountStatusRequest body = 12;
}

message Post#ListHandshakesForAccountRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListHandshakesForAccountRequest body = 12;
}

message Post#ListHandshakesForOrganizationRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListHandshakesForOrganizationRequest body = 12;
}

message Post#ListOrganizationalUnitsForParentRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListOrganizationalUnitsForParentRequest body = 12;
}

message Post#ListParentsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListParentsRequest body = 12;
}

message Post#ListPoliciesRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListPoliciesRequest body = 12;
}

message Post#ListPoliciesForTargetRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListPoliciesForTargetRequest body = 12;
}

message Post#ListRootsRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListRootsRequest body = 12;
}

message Post#ListTargetsForPolicyRequest {
    string Action = 1;
    // Pagination limit
    string MaxResults = 2;
    // Pagination token
    string NextToken = 3;
    string Version = 4;
    string X_Amz_Algorithm = 5;
    string X_Amz_Content_Sha256 = 6;
    string X_Amz_Credential = 7;
    string X_Amz_Date = 8;
    string X_Amz_Security_Token = 9;
    string X_Amz_Signature = 10;
    string X_Amz_SignedHeaders = 11;
    ListTargetsForPolicyRequest body = 12;
}

message Post#MoveAccountRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    MoveAccountRequest body = 10;
}

message Post#RemoveAccountFromOrganizationRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    RemoveAccountFromOrganizationRequest body = 10;
}

message Post#UpdateOrganizationalUnitRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdateOrganizationalUnitRequest body = 10;
}

message Post#UpdatePolicyRequest {
    string Action = 1;
    string Version = 2;
    string X_Amz_Algorithm = 3;
    string X_Amz_Content_Sha256 = 4;
    string X_Amz_Credential = 5;
    string X_Amz_Date = 6;
    string X_Amz_Security_Token = 7;
    string X_Amz_Signature = 8;
    string X_Amz_SignedHeaders = 9;
    UpdatePolicyRequest body = 10;
}

message AWSOrganizationsNotInUseException {
    string Message = 1;
}

message AcceptHandshakeRequest {
    // <p>The unique identifier (ID) of the handshake that you want to accept.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string HandshakeId = 1;
}

message AcceptHandshakeResponse {
    // A structure that contains details about the accepted handshake.
    Handshake Handshake = 1;
}

message AccessDeniedException {
    string Message = 1;
}

message Account {
    // <p>The Amazon Resource Name (ARN) of the account.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // <p>The email address associated with the AWS account.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for this parameter is a string of characters that represents a standard Internet email address.</p>
    string Email = 2;
    // <p>The unique identifier (ID) of the account.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string Id = 3;
    // The method by which the account joined the organization.
    AccountJoinedMethod JoinedMethod = 4;
    // The date the account became a part of the organization.
    string JoinedTimestamp = 5;
    // <p>The friendly name of the account.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 6;
    // The status of the account in the organization.
    AccountStatus Status = 7;
}

enum AccountJoinedMethod {
    INVITED = 0;
    CREATED = 1;
}

message AccountNotFoundException {
    string Message = 1;
}

enum AccountStatu {
    ACTIVE = 0;
    SUSPENDED = 1;
}

repeated Account Accounts = 1



enum ActionType {
    INVITE = 0;
    ENABLE_ALL_FEATURES = 1;
    APPROVE_ALL_FEATURES = 2;
}

message AlreadyInOrganizationException {
    string Message = 1;
}

message AttachPolicyRequest {
    // <p>The unique identifier (ID) of the policy that you want to attach to the target. You can get the ID for the policy by calling the <a>ListPolicies</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 1;
    // <p>The unique identifier (ID) of the root, OU, or account that you want to attach the policy to. You can get the ID by calling the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>, or <a>ListAccounts</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string TargetId = 2;
}

message CancelHandshakeRequest {
    // <p>The unique identifier (ID) of the handshake that you want to cancel. You can get the ID from the <a>ListHandshakesForOrganization</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string HandshakeId = 1;
}

message CancelHandshakeResponse {
    // A structure that contains details about the handshake that you canceled.
    Handshake Handshake = 1;
}

message Child {
    // <p>The unique identifier (ID) of this child entity.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a child ID string requires one of the following:</p> <ul> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string Id = 1;
    // The type of this child entity.
    ChildType Type = 2;
}

message ChildNotFoundException {
    string Message = 1;
}

enum ChildType {
    ACCOUNT = 0;
    ORGANIZATIONAL_UNIT = 1;
}

repeated Child Children = 1

message ConcurrentModificationException {
    string Message = 1;
}

message ConstraintViolationException {
    string Message = 1;
    ConstraintViolationExceptionReason Reason = 2;
}

enum ConstraintViolationExceptionReason {
    ACCOUNT_NUMBER_LIMIT_EXCEEDED = 0;
    HANDSHAKE_RATE_LIMIT_EXCEEDED = 1;
    OU_NUMBER_LIMIT_EXCEEDED = 2;
    OU_DEPTH_LIMIT_EXCEEDED = 3;
    POLICY_NUMBER_LIMIT_EXCEEDED = 4;
    MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED = 5;
    MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED = 6;
    ACCOUNT_CANNOT_LEAVE_ORGANIZATION = 7;
    ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA = 8;
    ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION = 9;
    MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED = 10;
    MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED = 11;
    ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED = 12;
    MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE = 13;
    MASTER_ACCOUNT_MISSING_CONTACT_INFO = 14;
}

enum CreateAccountFailureReason {
    ACCOUNT_LIMIT_EXCEEDED = 0;
    EMAIL_ALREADY_EXISTS = 1;
    INVALID_ADDRESS = 2;
    INVALID_EMAIL = 3;
    INTERNAL_FAILURE = 4;
}

message CreateAccountRequest {
    // The friendly name of the member account.
    string AccountName = 1;
    // The email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account. You must use a valid email address to complete account creation. You cannot access the root user of the account or remove an account that was created with an invalid email address.
    string Email = 2;
    // <p>If set to <code>ALLOW</code>, the new account enables IAM users to access account billing information <i>if</i> they have the required permissions. If set to <code>DENY</code>, then only the root user of the new account can access account billing information. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> <p>If you do not specify this parameter, the value defaults to ALLOW, and IAM users and roles with the required permissions can access billing information for the new account.</p>
    IAMUserAccessToBilling IamUserAccessToBilling = 3;
    // <p>(Optional)</p> <p>The name of an IAM role that Organizations automatically preconfigures in the new member account. This role trusts the master account, allowing users in the master account to assume the role, as permitted by the master account administrator. The role has administrator permissions in the new member account.</p> <p>If you do not specify this parameter, the role name defaults to <code>OrganizationAccountAccessRole</code>.</p> <p>For more information about how to use this role to access the member account, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role">Accessing and Administering the Member Accounts in Your Organization</a> in the <i>AWS Organizations User Guide</i>, and steps 2 and 3 in <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html">Tutorial: Delegate Access Across AWS Accounts Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters that can consist of uppercase letters, lowercase letters, digits with no spaces, and any of the following characters: =,.@-</p>
    string RoleName = 4;
}

message CreateAccountResponse {
    // A structure that contains details about the request to create an account. This response structure might not be fully populated when you first receive it because account creation is an asynchronous process. You can pass the returned CreateAccountStatus ID as a parameter to <code> <a>DescribeCreateAccountStatus</a> </code> to get status about the progress of the request at later times.
    CreateAccountStatus CreateAccountStatus = 1;
}

enum CreateAccountState {
    IN_PROGRESS = 0;
    SUCCEEDED = 1;
    FAILED = 2;
}

repeated CreateAccountState CreateAccountStates = 1

message CreateAccountStatus {
    // <p>If the account was created successfully, the unique identifier (ID) of the new account.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string AccountId = 1;
    // The account name given to the account when it was created.
    string AccountName = 2;
    // The date and time that the account was created and the request completed.
    string CompletedTimestamp = 3;
    // <p>If the request failed, a description of the reason for the failure.</p> <ul> <li> <p>ACCOUNT_LIMIT_EXCEEDED: The account could not be created because you have reached the limit on the number of accounts in your organization.</p> </li> <li> <p>EMAIL_ALREADY_EXISTS: The account could not be created because another AWS account with that email address already exists.</p> </li> <li> <p>INVALID_ADDRESS: The account could not be created because the address you provided is not valid.</p> </li> <li> <p>INVALID_EMAIL: The account could not be created because the email address you provided is not valid.</p> </li> <li> <p>INTERNAL_FAILURE: The account could not be created because of an internal failure. Try again later. If the problem persists, contact Customer Support.</p> </li> </ul>
    CreateAccountFailureReason FailureReason = 4;
    // <p>The unique identifier (ID) that references this request. You get this value from the response of the initial <a>CreateAccount</a> request to create the account.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an create account request ID string requires "car-" followed by from 8 to 32 lower-case letters or digits.</p>
    string Id = 5;
    // The date and time that the request was made for the account creation.
    string RequestedTimestamp = 6;
    // The status of the request.
    CreateAccountState State = 7;
}

message CreateAccountStatusNotFoundException {
    string Message = 1;
}

repeated CreateAccountStatus CreateAccountStatuses = 1

message CreateOrganizationRequest {
    // <p>Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.</p> <ul> <li> <p> <i>CONSOLIDATED_BILLING</i>: All member accounts have their bills consolidated to and paid by the master account. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-cb-only">Consolidated Billing</a> in the <i>AWS Organizations User Guide</i>.</p> </li> <li> <p> <i>ALL</i>: In addition to all the features supported by the consolidated billing feature set, the master account can also apply any type of policy to any member account in the organization. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-all">All features</a> in the <i>AWS Organizations User Guide</i>.</p> </li> </ul>
    OrganizationFeatureSet FeatureSet = 1;
}

message CreateOrganizationResponse {
    // A structure that contains details about the newly created organization.
    Organization Organization = 1;
}

message CreateOrganizationalUnitRequest {
    // The friendly name to assign to the new OU.
    string Name = 1;
    // <p>The unique identifier (ID) of the parent root or OU in which you want to create the new OU.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string ParentId = 2;
}

message CreateOrganizationalUnitResponse {
    // A structure that contains details about the newly created OU.
    OrganizationalUnit OrganizationalUnit = 1;
}

message CreatePolicyRequest {
    // The policy content to add to the new policy. For example, if you create a <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">service control policy</a> (SCP), this string must be JSON text that specifies the permissions that admins in attached accounts can delegate to their users, groups, and roles. For more information about the SCP syntax, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service Control Policy Syntax</a> in the <i>AWS Organizations User Guide</i>.
    string Content = 1;
    // An optional description to assign to the policy.
    string Description = 2;
    // <p>The friendly name to assign to the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 3;
    // <p>The type of policy to create.</p> <note> <p>In the current release, the only type of policy that you can create is a service control policy (SCP).</p> </note>
    PolicyType Type = 4;
}

message CreatePolicyResponse {
    // A structure that contains details about the newly created policy.
    Policy Policy = 1;
}

message DeclineHandshakeRequest {
    // <p>The unique identifier (ID) of the handshake that you want to decline. You can get the ID from the <a>ListHandshakesForAccount</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string HandshakeId = 1;
}

message DeclineHandshakeResponse {
    // A structure that contains details about the declined handshake. The state is updated to show the value <code>DECLINED</code>.
    Handshake Handshake = 1;
}

message DeleteOrganizationalUnitRequest {
    // <p>The unique identifier (ID) of the organizational unit that you want to delete. You can get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p>
    string OrganizationalUnitId = 1;
}

message DeletePolicyRequest {
    // <p>The unique identifier (ID) of the policy that you want to delete. You can get the ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 1;
}

message DescribeAccountRequest {
    // <p>The unique identifier (ID) of the AWS account that you want information about. You can get the ID from the <a>ListAccounts</a> or <a>ListAccountsForParent</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string AccountId = 1;
}

message DescribeAccountResponse {
    // A structure that contains information about the requested account.
    Account Account = 1;
}

message DescribeCreateAccountStatusRequest {
    // <p>Specifies the <code>operationId</code> that uniquely identifies the request. You can get the ID from the response to an earlier <a>CreateAccount</a> request, or from the <a>ListCreateAccountStatus</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an create account request ID string requires "car-" followed by from 8 to 32 lower-case letters or digits.</p>
    string CreateAccountRequestId = 1;
}

message DescribeCreateAccountStatusResponse {
    // A structure that contains the current status of an account creation request.
    CreateAccountStatus CreateAccountStatus = 1;
}

message DescribeHandshakeRequest {
    // <p>The unique identifier (ID) of the handshake that you want information about. You can get the ID from the original call to <a>InviteAccountToOrganization</a>, or from a call to <a>ListHandshakesForAccount</a> or <a>ListHandshakesForOrganization</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string HandshakeId = 1;
}

message DescribeHandshakeResponse {
    // A structure that contains information about the specified handshake.
    Handshake Handshake = 1;
}

message DescribeOrganizationResponse {
    // A structure that contains information about the organization.
    Organization Organization = 1;
}

message DescribeOrganizationalUnitRequest {
    // <p>The unique identifier (ID) of the organizational unit that you want details about. You can get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p>
    string OrganizationalUnitId = 1;
}

message DescribeOrganizationalUnitResponse {
    // A structure that contains details about the specified OU.
    OrganizationalUnit OrganizationalUnit = 1;
}

message DescribePolicyRequest {
    // <p>The unique identifier (ID) of the policy that you want details about. You can get the ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 1;
}

message DescribePolicyResponse {
    // A structure that contains details about the specified policy.
    Policy Policy = 1;
}

message DestinationParentNotFoundException {
    string Message = 1;
}

message DetachPolicyRequest {
    // <p>The unique identifier (ID) of the policy you want to detach. You can get the ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 1;
    // <p>The unique identifier (ID) of the root, OU, or account from which you want to detach the policy. You can get the ID from the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>, or <a>ListAccounts</a> operations.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string TargetId = 2;
}

message DisablePolicyTypeRequest {
    // The policy type that you want to disable in this root.
    PolicyType PolicyType = 1;
    // <p>The unique identifier (ID) of the root in which you want to disable a policy type. You can get the ID from the <a>ListRoots</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by from 4 to 32 lower-case letters or digits.</p>
    string RootId = 2;
}

message DisablePolicyTypeResponse {
    // A structure that shows the root with the updated list of enabled policy types.
    Root Root = 1;
}

message DuplicateAccountException {
    string Message = 1;
}

message DuplicateHandshakeException {
    string Message = 1;
}

message DuplicateOrganizationalUnitException {
    string Message = 1;
}

message DuplicatePolicyAttachmentException {
    string Message = 1;
}

message DuplicatePolicyException {
    string Message = 1;
}

message EnableAllFeaturesRequest {
}

message EnableAllFeaturesResponse {
    // A structure that contains details about the handshake created to support this request to enable all features in the organization.
    Handshake Handshake = 1;
}

message EnablePolicyTypeRequest {
    // The policy type that you want to enable.
    PolicyType PolicyType = 1;
    // <p>The unique identifier (ID) of the root in which you want to enable a policy type. You can get the ID from the <a>ListRoots</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by from 4 to 32 lower-case letters or digits.</p>
    string RootId = 2;
}

message EnablePolicyTypeResponse {
    // A structure that shows the root with the updated list of enabled policy types.
    Root Root = 1;
}

message FinalizingOrganizationException {
    string Message = 1;
}

message Handshake {
    // The type of handshake, indicating what action occurs when the recipient accepts the handshake.
    ActionType Action = 1;
    // <p>The Amazon Resource Name (ARN) of a handshake.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 2;
    // The date and time that the handshake expires. If the recipient of the handshake request fails to respond before the specified date and time, the handshake becomes inactive and is no longer valid.
    string ExpirationTimestamp = 3;
    // <p>The unique identifier (ID) of a handshake. The originating account creates the ID when it initiates the handshake.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string Id = 4;
    // Information about the two accounts that are participating in the handshake.
    array Parties = 5;
    // The date and time that the handshake request was made.
    string RequestedTimestamp = 6;
    // Additional information that is needed to process the handshake.
    array Resources = 7;
    // <p>The current state of the handshake. Use the state to trace the flow of the handshake through the process from its creation to its acceptance. The meaning of each of the valid values is as follows:</p> <ul> <li> <p> <b>REQUESTED</b>: This handshake was sent to multiple recipients (applicable to only some handshake types) and not all recipients have responded yet. The request stays in this state until all recipients respond.</p> </li> <li> <p> <b>OPEN</b>: This handshake was sent to multiple recipients (applicable to only some policy types) and all recipients have responded, allowing the originator to complete the handshake action.</p> </li> <li> <p> <b>CANCELED</b>: This handshake is no longer active because it was canceled by the originating account.</p> </li> <li> <p> <b>ACCEPTED</b>: This handshake is complete because it has been accepted by the recipient.</p> </li> <li> <p> <b>DECLINED</b>: This handshake is no longer active because it was declined by the recipient account.</p> </li> <li> <p> <b>EXPIRED</b>: This handshake is no longer active because the originator did not receive a response of any kind from the recipient before the expiration time (15 days).</p> </li> </ul>
    HandshakeState State = 8;
}

message HandshakeAlreadyInStateException {
    string Message = 1;
}

message HandshakeConstraintViolationException {
    string Message = 1;
    HandshakeConstraintViolationExceptionReason Reason = 2;
}

enum HandshakeConstraintViolationExceptionReason {
    ACCOUNT_NUMBER_LIMIT_EXCEEDED = 0;
    HANDSHAKE_RATE_LIMIT_EXCEEDED = 1;
    ALREADY_IN_AN_ORGANIZATION = 2;
    ORGANIZATION_ALREADY_HAS_ALL_FEATURES = 3;
    INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES = 4;
    PAYMENT_INSTRUMENT_REQUIRED = 5;
    ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD = 6;
    ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED = 7;
}

message HandshakeFilter {
    // <p>Specifies the type of handshake action.</p> <p>If you specify <code>ActionType</code>, you cannot also specify <code>ParentHandshakeId</code>.</p>
    ActionType ActionType = 1;
    // <p>Specifies the parent handshake. Only used for handshake types that are a child of another type.</p> <p>If you specify <code>ParentHandshakeId</code>, you cannot also specify <code>ActionType</code>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string ParentHandshakeId = 2;
}

message HandshakeNotFoundException {
    string Message = 1;
}



repeated HandshakeParty HandshakeParties = 1

message HandshakeParty {
    // <p>The unique identifier (ID) for the party.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string requires "h-" followed by from 8 to 32 lower-case letters or digits.</p>
    string Id = 1;
    // The type of party.
    HandshakePartyType Type = 2;
}

enum HandshakePartyType {
    ACCOUNT = 0;
    ORGANIZATION = 1;
    EMAIL = 2;
}

message HandshakeResource {
    // When needed, contains an additional array of <code>HandshakeResource</code> objects.
    array Resources = 1;
    // <p>The type of information being passed, specifying how the value is to be interpreted by the other party:</p> <ul> <li> <p> <code>ACCOUNT</code> - Specifies an AWS account ID number.</p> </li> <li> <p> <code>ORGANIZATION</code> - Specifies an organization ID number.</p> </li> <li> <p> <code>EMAIL</code> - Specifies the email address that is associated with the account that receives the handshake. </p> </li> <li> <p> <code>OWNER_EMAIL</code> - Specifies the email address associated with the master account. Included as information about an organization. </p> </li> <li> <p> <code>OWNER_NAME</code> - Specifies the name associated with the master account. Included as information about an organization. </p> </li> <li> <p> <code>NOTES</code> - Additional text provided by the handshake initiator and intended for the recipient to read.</p> </li> </ul>
    HandshakeResourceType Type = 2;
    // The information that is passed to the other party in the handshake. The format of the value string must match the requirements of the specified type.
    string Value = 3;
}

enum HandshakeResourceType {
    ACCOUNT = 0;
    ORGANIZATION = 1;
    ORGANIZATION_FEATURE_SET = 2;
    EMAIL = 3;
    MASTER_EMAIL = 4;
    MASTER_NAME = 5;
    NOTES = 6;
    PARENT_HANDSHAKE = 7;
}



repeated HandshakeResource HandshakeResources = 1

enum HandshakeState {
    REQUESTED = 0;
    OPEN = 1;
    CANCELED = 2;
    ACCEPTED = 3;
    DECLINED = 4;
    EXPIRED = 5;
}

repeated Handshake Handshakes = 1

enum IAMUserAccessToBilling {
    ALLOW = 0;
    DENY = 1;
}

message InvalidHandshakeTransitionException {
    string Message = 1;
}

message InvalidInputException {
    string Message = 1;
    InvalidInputExceptionReason Reason = 2;
}

enum InvalidInputExceptionReason {
    INVALID_PARTY_TYPE_TARGET = 0;
    INVALID_SYNTAX_ORGANIZATION_ARN = 1;
    INVALID_SYNTAX_POLICY_ID = 2;
    INVALID_ENUM = 3;
    INVALID_LIST_MEMBER = 4;
    MAX_LENGTH_EXCEEDED = 5;
    MAX_VALUE_EXCEEDED = 6;
    MIN_LENGTH_EXCEEDED = 7;
    MIN_VALUE_EXCEEDED = 8;
    IMMUTABLE_POLICY = 9;
    INVALID_PATTERN = 10;
    INVALID_PATTERN_TARGET_ID = 11;
    INPUT_REQUIRED = 12;
    INVALID_NEXT_TOKEN = 13;
    MAX_LIMIT_EXCEEDED_FILTER = 14;
    MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS = 15;
    INVALID_FULL_NAME_TARGET = 16;
}

message InviteAccountToOrganizationRequest {
    // Additional information that you want to include in the generated email to the recipient account owner.
    string Notes = 1;
    // <p>The identifier (ID) of the AWS account that you want to invite to join your organization. This is a JSON object that contains the following elements: </p> <p> <code>{ "Type": "ACCOUNT", "Id": "&lt;<i> <b>account id number</b> </i>&gt;" }</code> </p> <p>If you use the AWS CLI, you can submit this as a single string, similar to the following example:</p> <p> <code>--target Id=123456789012,Type=ACCOUNT</code> </p> <p>If you specify <code>"Type": "ACCOUNT"</code>, then you must provide the AWS account ID number as the <code>Id</code>. If you specify <code>"Type": "EMAIL"</code>, then you must specify the email address that is associated with the account.</p> <p> <code>--target Id=bill@example.com,Type=EMAIL</code> </p>
    HandshakeParty Target = 2;
}

message InviteAccountToOrganizationResponse {
    // A structure that contains details about the handshake that is created to support this invitation request.
    Handshake Handshake = 1;
}

message ListAccountsForParentRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
    // The unique identifier (ID) for the parent root or organization unit (OU) whose accounts you want to list.
    string ParentId = 3;
}

message ListAccountsForParentResponse {
    // A list of the accounts in the specified root or OU.
    array Accounts = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListAccountsRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
}

message ListAccountsResponse {
    // A list of objects in the organization.
    array Accounts = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListChildrenRequest {
    // Filters the output to include only the specified child type.
    ChildType ChildType = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
    // <p>The unique identifier (ID) for the parent root or OU whose children you want to list.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string ParentId = 4;
}

message ListChildrenResponse {
    // The list of children of the specified parent container.
    array Children = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListCreateAccountStatusRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
    // A list of one or more states that you want included in the response. If this parameter is not present, then all requests are included in the response.
    array States = 3;
}

message ListCreateAccountStatusResponse {
    // A list of objects with details about the requests. Certain elements, such as the accountId number, are present in the output only after the account has been successfully created.
    array CreateAccountStatuses = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListHandshakesForAccountRequest {
    // Filters the handshakes that you want included in the response. The default is all types. Use the <code>ActionType</code> element to limit the output to only a specified type, such as <code>INVITE</code>, <code>ENABLE-FULL-CONTROL</code>, or <code>APPROVE-FULL-CONTROL</code>. Alternatively, for the <code>ENABLE-FULL-CONTROL</code> handshake that generates a separate child handshake for each member account, you can specify <code>ParentHandshakeId</code> to see only the handshakes that were generated by that parent request.
    HandshakeFilter Filter = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
}

message ListHandshakesForAccountResponse {
    // A list of <a>Handshake</a> objects with details about each of the handshakes that is associated with the specified account.
    array Handshakes = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListHandshakesForOrganizationRequest {
    // A filter of the handshakes that you want included in the response. The default is all types. Use the <code>ActionType</code> element to limit the output to only a specified type, such as <code>INVITE</code>, <code>ENABLE-ALL-FEATURES</code>, or <code>APPROVE-ALL-FEATURES</code>. Alternatively, for the <code>ENABLE-ALL-FEATURES</code> handshake that generates a separate child handshake for each member account, you can specify the <code>ParentHandshakeId</code> to see only the handshakes that were generated by that parent request.
    HandshakeFilter Filter = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
}

message ListHandshakesForOrganizationResponse {
    // A list of <a>Handshake</a> objects with details about each of the handshakes that are associated with an organization.
    array Handshakes = 1;
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 2;
}

message ListOrganizationalUnitsForParentRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
    // <p>The unique identifier (ID) of the root or OU whose child OUs you want to list.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string ParentId = 3;
}

message ListOrganizationalUnitsForParentResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // A list of the OUs in the specified root or parent OU.
    array OrganizationalUnits = 2;
}

message ListParentsRequest {
    // <p>The unique identifier (ID) of the OU or account whose parent containers you want to list. Do not specify a root.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a child ID string requires one of the following:</p> <ul> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string ChildId = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
}

message ListParentsResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // A list of parents for the specified child account or OU.
    array Parents = 2;
}

message ListPoliciesForTargetRequest {
    // The type of policy that you want to include in the returned list.
    PolicyType Filter = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
    // <p>The unique identifier (ID) of the root, organizational unit, or account whose policies you want to list.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string TargetId = 4;
}

message ListPoliciesForTargetResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // The list of policies that match the criteria in the request.
    array Policies = 2;
}

message ListPoliciesRequest {
    // Specifies the type of policy that you want to include in the response.
    PolicyType Filter = 1;
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 2;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 3;
}

message ListPoliciesResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // A list of policies that match the filter criteria in the request. The output list does not include the policy contents. To see the content for a policy, see <a>DescribePolicy</a>.
    array Policies = 2;
}

message ListRootsRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
}

message ListRootsResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // A list of roots that are defined in an organization.
    array Roots = 2;
}

message ListTargetsForPolicyRequest {
    // (Optional) Use this to limit the number of results you want included in the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.
    integer MaxResults = 1;
    // Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
    string NextToken = 2;
    // <p>The unique identifier (ID) of the policy for which you want to know its attachments.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 3;
}

message ListTargetsForPolicyResponse {
    // If present, this value indicates that there is more output available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.
    string NextToken = 1;
    // A list of structures, each of which contains details about one of the entities to which the specified policy is attached.
    array Targets = 2;
}

message MalformedPolicyDocumentException {
    string Message = 1;
}

message MasterCannotLeaveOrganizationException {
    string Message = 1;
}

message MoveAccountRequest {
    // <p>The unique identifier (ID) of the account that you want to move.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string AccountId = 1;
    // <p>The unique identifier (ID) of the root or organizational unit that you want to move the account to.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string DestinationParentId = 2;
    // <p>The unique identifier (ID) of the root or organizational unit that you want to move the account from.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string SourceParentId = 3;
}

message Organization {
    // <p>The Amazon Resource Name (ARN) of an organization.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // A list of policy types that are enabled for this organization. For example, if your organization has all features enabled, then service control policies (SCPs) are included in the list.
    array AvailablePolicyTypes = 2;
    // Specifies the functionality that currently is available to the organization. If set to "ALL", then all features are enabled and policies can be applied to accounts in the organization. If set to "CONSOLIDATED_BILLING", then only consolidated billing functionality is available. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.
    OrganizationFeatureSet FeatureSet = 3;
    // <p>The unique identifier (ID) of an organization.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organization ID string requires "o-" followed by from 10 to 32 lower-case letters or digits.</p>
    string Id = 4;
    // <p>The Amazon Resource Name (ARN) of the account that is designated as the master account for the organization.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string MasterAccountArn = 5;
    // The email address that is associated with the AWS account that is designated as the master account for the organization.
    string MasterAccountEmail = 6;
    // <p>The unique identifier (ID) of the master account of an organization.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string MasterAccountId = 7;
}

enum OrganizationFeatureSet {
    ALL = 0;
    CONSOLIDATED_BILLING = 1;
}

message OrganizationNotEmptyException {
    string Message = 1;
}

message OrganizationalUnit {
    // <p>The Amazon Resource Name (ARN) of this OU.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // <p>The unique identifier (ID) associated with this OU.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p>
    string Id = 2;
    // <p>The friendly name of this OU.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 3;
}

message OrganizationalUnitNotEmptyException {
    string Message = 1;
}

message OrganizationalUnitNotFoundException {
    string Message = 1;
}

repeated OrganizationalUnit OrganizationalUnits = 1

message Parent {
    // <p>The unique identifier (ID) of the parent entity.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string Id = 1;
    // The type of the parent entity.
    ParentType Type = 2;
}

message ParentNotFoundException {
    string Message = 1;
}

enum ParentType {
    ROOT = 0;
    ORGANIZATIONAL_UNIT = 1;
}

repeated Parent Parents = 1

repeated PolicySummary Policies = 1

message Policy {
    // The text content of the policy.
    string Content = 1;
    // A structure that contains additional details about the policy.
    PolicySummary PolicySummary = 2;
}

message PolicyInUseException {
    string Message = 1;
}

message PolicyNotAttachedException {
    string Message = 1;
}

message PolicyNotFoundException {
    string Message = 1;
}

message PolicySummary {
    // <p>The Amazon Resource Name (ARN) of the policy.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // A boolean value that indicates whether the specified policy is an AWS managed policy. If true, then you can attach the policy to roots, OUs, or accounts, but you cannot edit it.
    boolean AwsManaged = 2;
    // The description of the policy.
    string Description = 3;
    // <p>The unique identifier (ID) of the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string Id = 4;
    // <p>The friendly name of the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 5;
    // The type of policy.
    PolicyType Type = 6;
}

message PolicyTargetSummary {
    // <p>The Amazon Resource Name (ARN) of the policy target.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // <p>The friendly name of the policy target.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 2;
    // <p>The unique identifier (ID) of the policy target.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the following:</p> <ul> <li> <p>Root: a string that begins with "r-" followed by from 4 to 32 lower-case letters or digits.</p> </li> <li> <p>Account: a string that consists of exactly 12 digits.</p> </li> <li> <p>Organizational unit (OU): a string that begins with "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that the OU is in) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p> </li> </ul>
    string TargetId = 3;
    // The type of the policy target.
    TargetType Type = 4;
}

repeated PolicyTargetSummary PolicyTargets = 1

enum PolicyType {
    SERVICE_CONTROL_POLICY = 0;
}

message PolicyTypeAlreadyEnabledException {
    string Message = 1;
}

message PolicyTypeNotAvailableForOrganizationException {
    string Message = 1;
}

message PolicyTypeNotEnabledException {
    string Message = 1;
}

enum PolicyTypeStatu {
    ENABLED = 0;
    PENDING_ENABLE = 1;
    PENDING_DISABLE = 2;
}

message PolicyTypeSummary {
    // The status of the policy type as it relates to the associated root. To attach a policy of the specified type to a root or to an OU or account in that root, it must be available in the organization and enabled for that root.
    PolicyTypeStatus Status = 1;
    // The name of the policy type.
    PolicyType Type = 2;
}

repeated PolicyTypeSummary PolicyTypes = 1

message RemoveAccountFromOrganizationRequest {
    // <p>The unique identifier (ID) of the member account that you want to remove from the organization.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12 digits.</p>
    string AccountId = 1;
}

message Root {
    // <p>The Amazon Resource Name (ARN) of the root.</p> <p>For more information about ARNs in Organizations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_permissions.html#orgs-permissions-arns">ARN Formats Supported by Organizations</a> in the <i>AWS Organizations User Guide</i>.</p>
    string Arn = 1;
    // <p>The unique identifier (ID) for the root.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by from 4 to 32 lower-case letters or digits.</p>
    string Id = 2;
    // <p>The friendly name of the root.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 3;
    // The types of policies that are currently enabled for the root and therefore can be attached to the root or to its OUs or accounts.
    array PolicyTypes = 4;
}

message RootNotFoundException {
    string Message = 1;
}

repeated Root Roots = 1

message ServiceException {
    string Message = 1;
}

message SourceParentNotFoundException {
    string Message = 1;
}

message TargetNotFoundException {
    string Message = 1;
}

enum TargetType {
    ACCOUNT = 0;
    ORGANIZATIONAL_UNIT = 1;
    ROOT = 2;
}

message TooManyRequestsException {
    string Message = 1;
    string Type = 2;
}

message UpdateOrganizationalUnitRequest {
    // <p>The new name that you want to assign to the OU.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 1;
    // <p>The unique identifier (ID) of the OU that you want to rename. You can get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires "ou-" followed by from 4 to 32 lower-case letters or digits (the ID of the root that contains the OU) followed by a second "-" dash and from 8 to 32 additional lower-case letters or digits.</p>
    string OrganizationalUnitId = 2;
}

message UpdateOrganizationalUnitResponse {
    // A structure that contains the details about the specified OU, including its new name.
    OrganizationalUnit OrganizationalUnit = 1;
}

message UpdatePolicyRequest {
    // If provided, the new content for the policy. The text must be correctly formatted JSON that complies with the syntax for the policy's type. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service Control Policy Syntax</a> in the <i>AWS Organizations User Guide</i>.
    string Content = 1;
    // If provided, the new description for the policy.
    string Description = 2;
    // <p>If provided, the new name for the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of any of the characters in the ASCII character range.</p>
    string Name = 3;
    // <p>The unique identifier (ID) of the policy that you want to update.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.</p>
    string PolicyId = 4;
}

message UpdatePolicyResponse {
    // A structure that contains details about the updated policy, showing the requested changes.
    Policy Policy = 1;
}

service AWSOrganizationsService {
    // <p>Sends a response to the originator of a handshake agreeing to the action proposed by the handshake request. </p> <p>This operation can be called only by the following principals when they also have the relevant IAM permissions:</p> <ul> <li> <p> <b>Invitation to join</b> or <b>Approve all features request</b> handshakes: only a principal from the member account. </p> </li> <li> <p> <b>Enable all features final confirmation</b> handshake: only a principal from the master account.</p> <p>For more information about invitations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_invites.html">Inviting an AWS Account to Join Your Organization</a> in the <i>AWS Organizations User Guide</i>. For more information about requests to enable all features in the organization, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> </li> </ul> <p>After you accept a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>
    rpc Post(PostRequest) returns (AcceptHandshakeResponse) {
      option (google.api.http) = {
        post: "//"
        body: "body"
      };
    }
    // <p>Attaches a policy to a root, an organizational unit, or an individual account. How the policy affects accounts depends on the type of policy:</p> <ul> <li> <p> <b>Service control policy (SCP)</b> - An SCP specifies what permissions can be delegated to users in affected member accounts. The scope of influence for a policy depends on what you attach the policy to:</p> <ul> <li> <p>If you attach an SCP to a root, it affects all accounts in the organization.</p> </li> <li> <p>If you attach an SCP to an OU, it affects all accounts in that OU and in any child OUs.</p> </li> <li> <p>If you attach the policy directly to an account, then it affects only that account.</p> </li> </ul> <p>SCPs essentially are permission "filters". When you attach one SCP to a higher level root or OU, and you also attach a different SCP to a child OU or to an account, the child policy can further restrict only the permissions that pass through the parent filter and are available to the child. An SCP that is attached to a child cannot grant a permission that is not already granted by the parent. For example, imagine that the parent SCP allows permissions A, B, C, D, and E. The child SCP allows C, D, E, F, and G. The result is that the accounts affected by the child SCP are allowed to use only C, D, and E. They cannot use A or B because they were filtered out by the child OU. They also cannot use F and G because they were filtered out by the parent OU. They cannot be granted back by the child SCP; child SCPs can only filter the permissions they receive from the parent SCP.</p> <p>AWS Organizations attaches a default SCP named <code>"FullAWSAccess</code> to every root, OU, and account. This default SCP allows all services and actions, enabling any new child OU or account to inherit the permissions of the parent root or OU. If you detach the default policy, you must replace it with a policy that specifies the permissions that you want to allow in that OU or account.</p> <p>For more information about how Organizations policies permissions work, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">Using Service Control Policies</a> in the <i>AWS Organizations User Guide</i>.</p> </li> </ul> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#AttachPolicy(Post#AttachPolicyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#AttachPolicy"
        body: "body"
      };
    }
    // <p>Cancels a handshake. Canceling a handshake sets the handshake state to <code>CANCELED</code>. </p> <p>This operation can be called only from the account that originated the handshake. The recipient of the handshake can't cancel it, but can use <a>DeclineHandshake</a> instead. After a handshake is canceled, the recipient can no longer respond to that handshake.</p> <p>After you cancel a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>
    rpc Post#CancelHandshake(Post#CancelHandshakeRequest) returns (CancelHandshakeResponse) {
      option (google.api.http) = {
        post: "//#CancelHandshake"
        body: "body"
      };
    }
    // <p>Creates an AWS account that is automatically a member of the organization whose credentials made the request. This is an asynchronous request that AWS performs in the background. If you want to check the status of the request later, you need the <code>OperationId</code> response element from this operation to provide as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p> <p>AWS Organizations preconfigures the new member account with a role (named <code>OrganizationAccountAccessRole</code> by default) that grants administrator permissions to the new account. Principals in the master account can assume the role. AWS Organizations clones the company name and address information for the new account from the organization's master account.</p> <p>For more information about creating accounts, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating an AWS Account in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> <important> <p>When you create an account in an organization using the AWS Organizations console, API, or CLI commands, the information required for the account to operate as a standalone account, such as a payment method and signing the End User Licence Agreement (EULA) is <i>not</i> automatically collected. If you must remove an account from your organization later, you can do so only after you provide the missing information. Follow the steps at <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not yet been provided</a> in the <i>AWS Organizations User Guide</i>.</p> </important> <note> <p>When you create a member account with this operation, you can choose whether to create the account with the <b>IAM User and Role Access to Billing Information</b> switch enabled. If you enable it, IAM users and roles that have appropriate permissions can view billing information for the account. If you disable this, then only the account root user can access billing information. For information about how to disable this for an account, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting Access to Your Billing Information and Tools</a>.</p> </note> <p>This operation can be called only from the organization's master account.</p> <important> <p>If you get an exception that indicates that you exceeded your account limits for the organization or that you can"t add an account because your organization is still initializing, please contact <a href="https://console.aws.amazon.com/support/home#/"> AWS Customer Support</a>.</p> </important>
    rpc Post#CreateAccount(Post#CreateAccountRequest) returns (CreateAccountResponse) {
      option (google.api.http) = {
        post: "//#CreateAccount"
        body: "body"
      };
    }
    // <p>Creates an AWS organization. The account whose user is calling the CreateOrganization operation automatically becomes the <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/orgs_getting-started_concepts.html#account">master account</a> of the new organization.</p> <p>This operation must be called using credentials from the account that is to become the new organization's master account. The principal must also have the relevant IAM permissions.</p> <p>By default (or if you set the <code>FeatureSet</code> parameter to <code>ALL</code>), the new organization is created with all features enabled and service control policies automatically enabled in the root. If you instead choose to create the organization supporting only the consolidated billing features by setting the <code>FeatureSet</code> parameter to <code>CONSOLIDATED_BILLING"</code>, then no policy types are enabled by default and you cannot use organization policies.</p>
    rpc Post#CreateOrganization(Post#CreateOrganizationRequest) returns (CreateOrganizationResponse) {
      option (google.api.http) = {
        post: "//#CreateOrganization"
        body: "body"
      };
    }
    // <p>Creates an organizational unit (OU) within a root or parent OU. An OU is a container for accounts that enables you to organize your accounts to apply policies according to your business requirements. The number of levels deep that you can nest OUs is dependent upon the policy types enabled for that root. For service control policies, the limit is five. </p> <p>For more information about OUs, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing Organizational Units</a> in the <i>AWS Organizations User Guide</i>.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#CreateOrganizationalUnit(Post#CreateOrganizationalUnitRequest) returns (CreateOrganizationalUnitResponse) {
      option (google.api.http) = {
        post: "//#CreateOrganizationalUnit"
        body: "body"
      };
    }
    // <p>Creates a policy of a specified type that you can attach to a root, an organizational unit (OU), or an individual AWS account.</p> <p>For more information about policies and their use, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing Organization Policies</a>.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#CreatePolicy(Post#CreatePolicyRequest) returns (CreatePolicyResponse) {
      option (google.api.http) = {
        post: "//#CreatePolicy"
        body: "body"
      };
    }
    // <p>Declines a handshake request. This sets the handshake state to <code>DECLINED</code> and effectively deactivates the request.</p> <p>This operation can be called only from the account that received the handshake. The originator of the handshake can use <a>CancelHandshake</a> instead. The originator can't reactivate a declined request, but can re-initiate the process with a new handshake request.</p> <p>After you decline a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>
    rpc Post#DeclineHandshake(Post#DeclineHandshakeRequest) returns (DeclineHandshakeResponse) {
      option (google.api.http) = {
        post: "//#DeclineHandshake"
        body: "body"
      };
    }
    // Deletes the organization. You can delete an organization only by using credentials from the master account. The organization must be empty of member accounts, OUs, and policies.
    rpc Post#DeleteOrganization(Post#DeleteOrganizationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteOrganization"
      };
    }
    // <p>Deletes an organizational unit from a root or another OU. You must first remove all accounts and child OUs from the OU that you want to delete.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DeleteOrganizationalUnit(Post#DeleteOrganizationalUnitRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeleteOrganizationalUnit"
        body: "body"
      };
    }
    // <p>Deletes the specified policy from your organization. Before you perform this operation, you must first detach the policy from all OUs, roots, and accounts.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DeletePolicy(Post#DeletePolicyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DeletePolicy"
        body: "body"
      };
    }
    // <p>Retrieves Organizations-related information about the specified account.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DescribeAccount(Post#DescribeAccountRequest) returns (DescribeAccountResponse) {
      option (google.api.http) = {
        post: "//#DescribeAccount"
        body: "body"
      };
    }
    // <p>Retrieves the current status of an asynchronous request to create an account.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DescribeCreateAccountStatus(Post#DescribeCreateAccountStatusRequest) returns (DescribeCreateAccountStatusResponse) {
      option (google.api.http) = {
        post: "//#DescribeCreateAccountStatus"
        body: "body"
      };
    }
    // <p>Retrieves information about a previously requested handshake. The handshake ID comes from the response to the original <a>InviteAccountToOrganization</a> operation that generated the handshake.</p> <p>You can access handshakes that are ACCEPTED, DECLINED, or CANCELED for only 30 days after they change to that state. They are then deleted and no longer accessible.</p> <p>This operation can be called from any account in the organization.</p>
    rpc Post#DescribeHandshake(Post#DescribeHandshakeRequest) returns (DescribeHandshakeResponse) {
      option (google.api.http) = {
        post: "//#DescribeHandshake"
        body: "body"
      };
    }
    // <p>Retrieves information about the organization that the user's account belongs to.</p> <p>This operation can be called from any account in the organization.</p>
    rpc Post#DescribeOrganization(Post#DescribeOrganizationRequest) returns (DescribeOrganizationResponse) {
      option (google.api.http) = {
        post: "//#DescribeOrganization"
      };
    }
    // <p>Retrieves information about an organizational unit (OU).</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DescribeOrganizationalUnit(Post#DescribeOrganizationalUnitRequest) returns (DescribeOrganizationalUnitResponse) {
      option (google.api.http) = {
        post: "//#DescribeOrganizationalUnit"
        body: "body"
      };
    }
    // <p>Retrieves information about a policy.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DescribePolicy(Post#DescribePolicyRequest) returns (DescribePolicyResponse) {
      option (google.api.http) = {
        post: "//#DescribePolicy"
        body: "body"
      };
    }
    // <p>Detaches a policy from a target root, organizational unit, or account. If the policy being detached is a service control policy (SCP), the changes to permissions for IAM users and roles in affected accounts are immediate.</p> <p> <b>Note:</b> Every root, OU, and account must have at least one SCP attached. If you want to replace the default <code>FullAWSAccess</code> policy with one that limits the permissions that can be delegated, then you must attach the replacement policy before you can remove the default one. This is the authorization strategy of <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_about-scps.html#orgs_policies_whitelist">whitelisting</a>. If you instead attach a second SCP and leave the <code>FullAWSAccess</code> SCP still attached, and specify <code>"Effect": "Deny"</code> in the second SCP to override the <code>"Effect": "Allow"</code> in the <code>FullAWSAccess</code> policy (or any other attached SCP), then you are using the authorization strategy of <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_about-scps.html#orgs_policies_blacklist">blacklisting</a>. </p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DetachPolicy(Post#DetachPolicyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#DetachPolicy"
        body: "body"
      };
    }
    // <p>Disables an organizational control policy type in a root. A policy of a certain type can be attached to entities in a root only if that type is enabled in the root. After you perform this operation, you no longer can attach policies of the specified type to that root or to any OU or account in that root. You can undo this by using the <a>EnablePolicyType</a> operation.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#DisablePolicyType(Post#DisablePolicyTypeRequest) returns (DisablePolicyTypeResponse) {
      option (google.api.http) = {
        post: "//#DisablePolicyType"
        body: "body"
      };
    }
    // <p>Enables all features in an organization. This enables the use of organization policies that can restrict the services and actions that can be called in each account. Until you enable all features, you have access only to consolidated billing, and you can't use any of the advanced account administration features that AWS Organizations supports. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> <important> <p>This operation is required only for organizations that were created explicitly with only the consolidated billing features enabled, or that were migrated from a Consolidated Billing account family to Organizations. Calling this operation sends a handshake to every invited account in the organization. The feature set change can be finalized and the additional features enabled only after all administrators in the invited accounts approve the change by accepting the handshake.</p> </important> <p>After all invited member accounts accept the handshake, you finalize the feature set change by accepting the handshake that contains <code>"Action": "ENABLE_ALL_FEATURES"</code>. This completes the change.</p> <p>After you enable all features in your organization, the master account in the organization can apply policies on all member accounts. These policies can restrict what users and even administrators in those accounts can do. The master account can apply policies that prevent accounts from leaving the organization. Ensure that your account administrators are aware of this.</p> <p>This operation can be called only from the organization's master account. </p>
    rpc Post#EnableAllFeatures(Post#EnableAllFeaturesRequest) returns (EnableAllFeaturesResponse) {
      option (google.api.http) = {
        post: "//#EnableAllFeatures"
        body: "body"
      };
    }
    // <p>Enables a policy type in a root. After you enable a policy type in a root, you can attach policies of that type to the root, any OU, or account in that root. You can undo this by using the <a>DisablePolicyType</a> operation.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#EnablePolicyType(Post#EnablePolicyTypeRequest) returns (EnablePolicyTypeResponse) {
      option (google.api.http) = {
        post: "//#EnablePolicyType"
        body: "body"
      };
    }
    // <p>Sends an invitation to another account to join your organization as a member account. Organizations sends email on your behalf to the email address that is associated with the other account's owner. The invitation is implemented as a <a>Handshake</a> whose details are in the response.</p> <important> <p>You can invite AWS accounts only from the same seller as the master account. For example, if your organization's master account was created by Amazon Internet Services Pvt. Ltd (AISPL), an AWS seller in India, then you can only invite other AISPL accounts to your organization. You can't combine accounts from AISPL and AWS, or any other AWS seller. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated Billing in India</a>.</p> </important> <p>This operation can be called only from the organization's master account.</p> <important> <p>If you get an exception that indicates that you exceeded your account limits for the organization or that you can"t add an account because your organization is still initializing, please contact <a href="https://console.aws.amazon.com/support/home#/"> AWS Customer Support</a>.</p> </important>
    rpc Post#InviteAccountToOrganization(Post#InviteAccountToOrganizationRequest) returns (InviteAccountToOrganizationResponse) {
      option (google.api.http) = {
        post: "//#InviteAccountToOrganization"
        body: "body"
      };
    }
    // <p>Removes a member account from its parent organization. This version of the operation is performed by the account that wants to leave. To remove a member account as a user in the master account, use <a>RemoveAccountFromOrganization</a> instead.</p> <p>This operation can be called only from a member account in the organization.</p> <important> <ul> <li> <p>The master account in an organization with all features enabled can set service control policies (SCPs) that can restrict what administrators of member accounts can do, including preventing them from successfully calling <code>LeaveOrganization</code> and leaving the organization. </p> </li> <li> <p>You can leave an organization as a member account only if the account is configured with the information required to operate as a standalone account. When you create an account in an organization using the AWS Organizations console, API, or CLI commands, the information required of standalone accounts is <i>not</i> automatically collected. For each account that you want to make standalone, you must accept the End User License Agreement (EULA), choose a support plan, provide and verify the required contact information, and provide a current payment method. AWS uses the payment method to charge for any billable (not free tier) AWS activity that occurs while the account is not attached to an organization. Follow the steps at <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not yet been provided</a> in the <i>AWS Organizations User Guide</i>.</p> </li> <li> <p>You can leave an organization only after you enable IAM user access to billing in your account. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> </li> </ul> </important>
    rpc Post#LeaveOrganization(Post#LeaveOrganizationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#LeaveOrganization"
      };
    }
    // <p>Lists all the accounts in the organization. To request only the accounts in a root or OU, use the <a>ListAccountsForParent</a> operation instead.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListAccounts(Post#ListAccountsRequest) returns (ListAccountsResponse) {
      option (google.api.http) = {
        post: "//#ListAccounts"
        body: "body"
      };
    }
    // Lists the accounts in an organization that are contained by the specified target root or organizational unit (OU). If you specify the root, you get a list of all the accounts that are not in any OU. If you specify an OU, you get a list of all the accounts in only that OU, and not in any child OUs. To get a list of all accounts in the organization, use the <a>ListAccounts</a> operation.
    rpc Post#ListAccountsForParent(Post#ListAccountsForParentRequest) returns (ListAccountsForParentResponse) {
      option (google.api.http) = {
        post: "//#ListAccountsForParent"
        body: "body"
      };
    }
    // Lists all of the OUs or accounts that are contained in the specified parent OU or root. This operation, along with <a>ListParents</a> enables you to traverse the tree structure that makes up this root.
    rpc Post#ListChildren(Post#ListChildrenRequest) returns (ListChildrenResponse) {
      option (google.api.http) = {
        post: "//#ListChildren"
        body: "body"
      };
    }
    // <p>Lists the account creation requests that match the specified status that is currently being tracked for the organization.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListCreateAccountStatus(Post#ListCreateAccountStatusRequest) returns (ListCreateAccountStatusResponse) {
      option (google.api.http) = {
        post: "//#ListCreateAccountStatus"
        body: "body"
      };
    }
    // <p>Lists the current handshakes that are associated with the account of the requesting user.</p> <p>Handshakes that are ACCEPTED, DECLINED, or CANCELED appear in the results of this API for only 30 days after changing to that state. After that they are deleted and no longer accessible.</p> <p>This operation can be called from any account in the organization.</p>
    rpc Post#ListHandshakesForAccount(Post#ListHandshakesForAccountRequest) returns (ListHandshakesForAccountResponse) {
      option (google.api.http) = {
        post: "//#ListHandshakesForAccount"
        body: "body"
      };
    }
    // <p>Lists the handshakes that are associated with the organization that the requesting user is part of. The <code>ListHandshakesForOrganization</code> operation returns a list of handshake structures. Each structure contains details and status about a handshake.</p> <p>Handshakes that are ACCEPTED, DECLINED, or CANCELED appear in the results of this API for only 30 days after changing to that state. After that they are deleted and no longer accessible.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListHandshakesForOrganization(Post#ListHandshakesForOrganizationRequest) returns (ListHandshakesForOrganizationResponse) {
      option (google.api.http) = {
        post: "//#ListHandshakesForOrganization"
        body: "body"
      };
    }
    // <p>Lists the organizational units (OUs) in a parent organizational unit or root.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListOrganizationalUnitsForParent(Post#ListOrganizationalUnitsForParentRequest) returns (ListOrganizationalUnitsForParentResponse) {
      option (google.api.http) = {
        post: "//#ListOrganizationalUnitsForParent"
        body: "body"
      };
    }
    // <p>Lists the root or organizational units (OUs) that serve as the immediate parent of the specified child OU or account. This operation, along with <a>ListChildren</a> enables you to traverse the tree structure that makes up this root.</p> <p>This operation can be called only from the organization's master account.</p> <note> <p>In the current release, a child can have only a single parent. </p> </note>
    rpc Post#ListParents(Post#ListParentsRequest) returns (ListParentsResponse) {
      option (google.api.http) = {
        post: "//#ListParents"
        body: "body"
      };
    }
    // <p>Retrieves the list of all policies in an organization of a specified type.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListPolicies(Post#ListPoliciesRequest) returns (ListPoliciesResponse) {
      option (google.api.http) = {
        post: "//#ListPolicies"
        body: "body"
      };
    }
    // <p>Lists the policies that are directly attached to the specified target root, organizational unit (OU), or account. You must specify the policy type that you want included in the returned list.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListPoliciesForTarget(Post#ListPoliciesForTargetRequest) returns (ListPoliciesForTargetResponse) {
      option (google.api.http) = {
        post: "//#ListPoliciesForTarget"
        body: "body"
      };
    }
    // <p>Lists the roots that are defined in the current organization.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListRoots(Post#ListRootsRequest) returns (ListRootsResponse) {
      option (google.api.http) = {
        post: "//#ListRoots"
        body: "body"
      };
    }
    // <p>Lists all the roots, OUs, and accounts to which the specified policy is attached.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#ListTargetsForPolicy(Post#ListTargetsForPolicyRequest) returns (ListTargetsForPolicyResponse) {
      option (google.api.http) = {
        post: "//#ListTargetsForPolicy"
        body: "body"
      };
    }
    // <p>Moves an account from its current source parent root or OU to the specified destination parent root or OU.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#MoveAccount(Post#MoveAccountRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#MoveAccount"
        body: "body"
      };
    }
    // <p>Removes the specified account from the organization.</p> <p>The removed account becomes a stand-alone account that is not a member of any organization. It is no longer subject to any policies and is responsible for its own bill payments. The organization's master account is no longer charged for any expenses accrued by the member account after it is removed from the organization.</p> <p>This operation can be called only from the organization's master account. Member accounts can remove themselves with <a>LeaveOrganization</a> instead.</p> <important> <ul> <li> <p>You can remove an account from your organization only if the account is configured with the information required to operate as a standalone account. When you create an account in an organization using the AWS Organizations console, API, or CLI commands, the information required of standalone accounts is <i>not</i> automatically collected. For an account that you want to make standalone, you must accept the End User License Agreement (EULA), choose a support plan, provide and verify the required contact information, and provide a current payment method. AWS uses the payment method to charge for any billable (not free tier) AWS activity that occurs while the account is not attached to an organization. To remove an account that does not yet have this information, you must sign in as the member account and follow the steps at <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info"> To leave an organization when all required account information has not yet been provided</a> in the <i>AWS Organizations User Guide</i>.</p> </li> <li> <p>You can remove a member account only after you enable IAM user access to billing in the member account. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> </li> </ul> </important>
    rpc Post#RemoveAccountFromOrganization(Post#RemoveAccountFromOrganizationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//#RemoveAccountFromOrganization"
        body: "body"
      };
    }
    // <p>Renames the specified organizational unit (OU). The ID and ARN do not change. The child OUs and accounts remain in place, and any attached policies of the OU remain attached. </p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#UpdateOrganizationalUnit(Post#UpdateOrganizationalUnitRequest) returns (UpdateOrganizationalUnitResponse) {
      option (google.api.http) = {
        post: "//#UpdateOrganizationalUnit"
        body: "body"
      };
    }
    // <p>Updates an existing policy with a new name, description, or content. If any parameter is not supplied, that value remains unchanged. Note that you cannot change a policy's type.</p> <p>This operation can be called only from the organization's master account.</p>
    rpc Post#UpdatePolicy(Post#UpdatePolicyRequest) returns (UpdatePolicyResponse) {
      option (google.api.http) = {
        post: "//#UpdatePolicy"
        body: "body"
      };
    }
}
