{
  "swagger": "2.0",
  "schemes": [
    "http"
  ],
  "host": "elasticloadbalancing.amazonaws.com",
  "basePath": "/",
  "x-hasEquivalentPaths": true,
  "info": {
    "contact": {
      "email": "mike.ralphson@gmail.com",
      "name": "Mike Ralphson",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "description": "<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers.</p> <p>An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS). A Network Load Balancer makes routing and load balancing decisions at the transport layer (TCP). Both Application Load Balancers and Network Load Balancers can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC).</p> <p>A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. For more information, see the <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/\">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2015-12-01 API, which supports Application Load Balancers and Network Load Balancers. The 2012-06-01 API supports Classic Load Balancers.</p> <p>To get started, complete the following tasks:</p> <ol> <li> <p>Create a load balancer using <a>CreateLoadBalancer</a>.</p> </li> <li> <p>Create a target group using <a>CreateTargetGroup</a>.</p> </li> <li> <p>Register targets for the target group using <a>RegisterTargets</a>.</p> </li> <li> <p>Create one or more listeners for your load balancer using <a>CreateListener</a>.</p> </li> </ol> <p>To delete a load balancer and its related resources, complete the following tasks:</p> <ol> <li> <p>Delete the load balancer using <a>DeleteLoadBalancer</a>.</p> </li> <li> <p>Delete the target group using <a>DeleteTargetGroup</a>.</p> </li> </ol> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>",
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    },
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "title": "Elastic Load Balancing",
    "version": "2015-12-01",
    "x-apiClientRegistration": {
      "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
    },
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg"
    },
    "x-origin": [
      {
        "contentType": "application/json",
        "converter": {
          "url": "https://github.com/mermade/aws2openapi",
          "version": "1.0.0"
        },
        "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json",
        "x-apisguru-direct": true
      }
    ],
    "x-preferred": true,
    "x-providerName": "amazonaws.com",
    "x-release": "v4",
    "x-serviceName": "elasticloadbalancing"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/elasticloadbalancing/"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "hmac": {
      "description": "Amazon Signature authorization v4",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "parameters": {
    "Action": {
      "in": "header",
      "name": "Action",
      "required": true,
      "type": "string"
    },
    "Version": {
      "in": "header",
      "name": "Version",
      "required": true,
      "type": "string"
    },
    "X-Amz-Algorithm": {
      "in": "header",
      "name": "X-Amz-Algorithm",
      "required": false,
      "type": "string"
    },
    "X-Amz-Content-Sha256": {
      "in": "header",
      "name": "X-Amz-Content-Sha256",
      "required": false,
      "type": "string"
    },
    "X-Amz-Credential": {
      "in": "header",
      "name": "X-Amz-Credential",
      "required": false,
      "type": "string"
    },
    "X-Amz-Date": {
      "in": "header",
      "name": "X-Amz-Date",
      "required": false,
      "type": "string"
    },
    "X-Amz-Security-Token": {
      "in": "header",
      "name": "X-Amz-Security-Token",
      "required": false,
      "type": "string"
    },
    "X-Amz-Signature": {
      "in": "header",
      "name": "X-Amz-Signature",
      "required": false,
      "type": "string"
    },
    "X-Amz-SignedHeaders": {
      "in": "header",
      "name": "X-Amz-SignedHeaders",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>",
        "operationId": "AddTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddTagsOutput"
            }
          },
          "480": {
            "description": "DuplicateTagKeysException",
            "schema": {
              "$ref": "#/definitions/DuplicateTagKeysException"
            }
          },
          "481": {
            "description": "TooManyTagsException",
            "schema": {
              "$ref": "#/definitions/TooManyTagsException"
            }
          },
          "482": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "483": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          }
        }
      }
    },
    "/#CreateListener": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>You can create up to 10 listeners per load balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html\">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html\">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "CreateListener",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateListenerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateListenerOutput"
            }
          },
          "480": {
            "description": "DuplicateListenerException",
            "schema": {
              "$ref": "#/definitions/DuplicateListenerException"
            }
          },
          "481": {
            "description": "TooManyListenersException",
            "schema": {
              "$ref": "#/definitions/TooManyListenersException"
            }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "schema": {
              "$ref": "#/definitions/TooManyCertificatesException"
            }
          },
          "483": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "schema": {
              "$ref": "#/definitions/TargetGroupAssociationLimitException"
            }
          },
          "486": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "487": {
            "description": "IncompatibleProtocolsException",
            "schema": {
              "$ref": "#/definitions/IncompatibleProtocolsException"
            }
          },
          "488": {
            "description": "SSLPolicyNotFoundException",
            "schema": {
              "$ref": "#/definitions/SSLPolicyNotFoundException"
            }
          },
          "489": {
            "description": "CertificateNotFoundException",
            "schema": {
              "$ref": "#/definitions/CertificateNotFoundException"
            }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "schema": {
              "$ref": "#/definitions/UnsupportedProtocolException"
            }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "schema": {
              "$ref": "#/definitions/TooManyRegistrationsForTargetIdException"
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetsException"
            }
          }
        }
      }
    },
    "/#CreateLoadBalancer": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html\">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html\">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "CreateLoadBalancer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLoadBalancerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateLoadBalancerOutput"
            }
          },
          "480": {
            "description": "DuplicateLoadBalancerNameException",
            "schema": {
              "$ref": "#/definitions/DuplicateLoadBalancerNameException"
            }
          },
          "481": {
            "description": "TooManyLoadBalancersException",
            "schema": {
              "$ref": "#/definitions/TooManyLoadBalancersException"
            }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "483": {
            "description": "SubnetNotFoundException",
            "schema": {
              "$ref": "#/definitions/SubnetNotFoundException"
            }
          },
          "484": {
            "description": "InvalidSubnetException",
            "schema": {
              "$ref": "#/definitions/InvalidSubnetException"
            }
          },
          "485": {
            "description": "InvalidSecurityGroupException",
            "schema": {
              "$ref": "#/definitions/InvalidSecurityGroupException"
            }
          },
          "486": {
            "description": "InvalidSchemeException",
            "schema": {
              "$ref": "#/definitions/InvalidSchemeException"
            }
          },
          "487": {
            "description": "TooManyTagsException",
            "schema": {
              "$ref": "#/definitions/TooManyTagsException"
            }
          },
          "488": {
            "description": "DuplicateTagKeysException",
            "schema": {
              "$ref": "#/definitions/DuplicateTagKeysException"
            }
          },
          "489": {
            "description": "ResourceInUseException",
            "schema": {
              "$ref": "#/definitions/ResourceInUseException"
            }
          },
          "490": {
            "description": "AllocationIdNotFoundException",
            "schema": {
              "$ref": "#/definitions/AllocationIdNotFoundException"
            }
          },
          "491": {
            "description": "AvailabilityZoneNotSupportedException",
            "schema": {
              "$ref": "#/definitions/AvailabilityZoneNotSupportedException"
            }
          }
        }
      }
    },
    "/#CreateRule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the condition for a rule is met, the specified action is taken. If no conditions are met, the action for the default rule is taken. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules\">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>",
        "operationId": "CreateRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRuleInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRuleOutput"
            }
          },
          "480": {
            "description": "PriorityInUseException",
            "schema": {
              "$ref": "#/definitions/PriorityInUseException"
            }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetGroupsException"
            }
          },
          "482": {
            "description": "TooManyRulesException",
            "schema": {
              "$ref": "#/definitions/TooManyRulesException"
            }
          },
          "483": {
            "description": "TargetGroupAssociationLimitException",
            "schema": {
              "$ref": "#/definitions/TargetGroupAssociationLimitException"
            }
          },
          "484": {
            "description": "IncompatibleProtocolsException",
            "schema": {
              "$ref": "#/definitions/IncompatibleProtocolsException"
            }
          },
          "485": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "487": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "488": {
            "description": "TooManyRegistrationsForTargetIdException",
            "schema": {
              "$ref": "#/definitions/TooManyRegistrationsForTargetIdException"
            }
          },
          "489": {
            "description": "TooManyTargetsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetsException"
            }
          }
        }
      }
    },
    "/#CreateTargetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html\">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html\">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "CreateTargetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTargetGroupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTargetGroupOutput"
            }
          },
          "480": {
            "description": "DuplicateTargetGroupNameException",
            "schema": {
              "$ref": "#/definitions/DuplicateTargetGroupNameException"
            }
          },
          "481": {
            "description": "TooManyTargetGroupsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetGroupsException"
            }
          },
          "482": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          }
        }
      }
    },
    "/#DeleteListener": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer it is attached to using <a>DeleteLoadBalancer</a>.</p>",
        "operationId": "DeleteListener",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteListenerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteListenerOutput"
            }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          }
        }
      }
    },
    "/#DeleteLoadBalancer": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can't delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>",
        "operationId": "DeleteLoadBalancer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteLoadBalancerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteLoadBalancerOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        }
      }
    },
    "/#DeleteRule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deletes the specified rule.",
        "operationId": "DeleteRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRuleInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteRuleOutput"
            }
          },
          "480": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          },
          "481": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        }
      }
    },
    "/#DeleteTargetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>",
        "operationId": "DeleteTargetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteTargetGroupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteTargetGroupOutput"
            }
          },
          "480": {
            "description": "ResourceInUseException",
            "schema": {
              "$ref": "#/definitions/ResourceInUseException"
            }
          }
        }
      }
    },
    "/#DeregisterTargets": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.",
        "operationId": "DeregisterTargets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeregisterTargetsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeregisterTargetsOutput"
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "481": {
            "description": "InvalidTargetException",
            "schema": {
              "$ref": "#/definitions/InvalidTargetException"
            }
          }
        }
      }
    },
    "/#DescribeAccountLimits": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html\">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html\">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>",
        "operationId": "DescribeAccountLimits",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAccountLimitsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAccountLimitsOutput"
            }
          }
        }
      }
    },
    "/#DescribeListeners": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.",
        "operationId": "DescribeListeners",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeListenersInput"
            }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeListenersOutput"
            }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "481": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeLoadBalancerAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the attributes for the specified Application Load Balancer or Network Load Balancer.",
        "operationId": "DescribeLoadBalancerAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeLoadBalancerAttributesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeLoadBalancerAttributesOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeLoadBalancers": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>",
        "operationId": "DescribeLoadBalancers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeLoadBalancersInput"
            }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeLoadBalancersOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          }
        },
        "x-waiters": [
          {
            "acceptors": [
              {
                "expected": 200,
                "matcher": "status",
                "state": "success"
              },
              {
                "expected": "LoadBalancerNotFound",
                "matcher": "error",
                "state": "retry"
              }
            ],
            "delay": 15,
            "maxAttempts": 40,
            "operation": "DescribeLoadBalancers"
          },
          {
            "acceptors": [
              {
                "argument": "LoadBalancers[].State.Code",
                "expected": "active",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "argument": "LoadBalancers[].State.Code",
                "expected": "provisioning",
                "matcher": "pathAny",
                "state": "retry"
              },
              {
                "expected": "LoadBalancerNotFound",
                "matcher": "error",
                "state": "retry"
              }
            ],
            "delay": 15,
            "maxAttempts": 40,
            "operation": "DescribeLoadBalancers"
          },
          {
            "acceptors": [
              {
                "argument": "LoadBalancers[].State.Code",
                "expected": "active",
                "matcher": "pathAll",
                "state": "retry"
              },
              {
                "expected": "LoadBalancerNotFound",
                "matcher": "error",
                "state": "success"
              }
            ],
            "delay": 15,
            "maxAttempts": 40,
            "operation": "DescribeLoadBalancers"
          }
        ]
      }
    },
    "/#DescribeRules": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.",
        "operationId": "DescribeRules",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeRulesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeRulesOutput"
            }
          },
          "480": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "481": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeSSLPolicies": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>",
        "operationId": "DescribeSSLPolicies",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeSSLPoliciesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeSSLPoliciesOutput"
            }
          },
          "480": {
            "description": "SSLPolicyNotFoundException",
            "schema": {
              "$ref": "#/definitions/SSLPolicyNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.",
        "operationId": "DescribeTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTagsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTagsOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "483": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeTargetGroupAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the attributes for the specified target group.",
        "operationId": "DescribeTargetGroupAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTargetGroupAttributesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTargetGroupAttributesOutput"
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeTargetGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>",
        "operationId": "DescribeTargetGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTargetGroupsInput"
            }
          },
          {
            "description": "Pagination token",
            "in": "query",
            "name": "Marker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTargetGroupsOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          }
        }
      }
    },
    "/#DescribeTargetHealth": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Describes the health of the specified targets or all of your targets.",
        "operationId": "DescribeTargetHealth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeTargetHealthInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeTargetHealthOutput"
            }
          },
          "480": {
            "description": "InvalidTargetException",
            "schema": {
              "$ref": "#/definitions/InvalidTargetException"
            }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "482": {
            "description": "HealthUnavailableException",
            "schema": {
              "$ref": "#/definitions/HealthUnavailableException"
            }
          }
        },
        "x-waiters": [
          {
            "acceptors": [
              {
                "argument": "TargetHealthDescriptions[].TargetHealth.State",
                "expected": "healthy",
                "matcher": "pathAll",
                "state": "success"
              },
              {
                "expected": "InvalidInstance",
                "matcher": "error",
                "state": "retry"
              }
            ],
            "delay": 15,
            "maxAttempts": 40,
            "operation": "DescribeTargetHealth"
          },
          {
            "acceptors": [
              {
                "expected": "InvalidTarget",
                "matcher": "error",
                "state": "success"
              },
              {
                "argument": "TargetHealthDescriptions[].TargetHealth.State",
                "expected": "unused",
                "matcher": "pathAll",
                "state": "success"
              }
            ],
            "delay": 15,
            "maxAttempts": 40,
            "operation": "DescribeTargetHealth"
          }
        ]
      }
    },
    "/#ModifyListener": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP removes the security policy and SSL certificate properties. If you change the protocol from HTTP to HTTPS, you must add the security policy and server certificate.</p>",
        "operationId": "ModifyListener",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyListenerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyListenerOutput"
            }
          },
          "480": {
            "description": "DuplicateListenerException",
            "schema": {
              "$ref": "#/definitions/DuplicateListenerException"
            }
          },
          "481": {
            "description": "TooManyListenersException",
            "schema": {
              "$ref": "#/definitions/TooManyListenersException"
            }
          },
          "482": {
            "description": "TooManyCertificatesException",
            "schema": {
              "$ref": "#/definitions/TooManyCertificatesException"
            }
          },
          "483": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "484": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "485": {
            "description": "TargetGroupAssociationLimitException",
            "schema": {
              "$ref": "#/definitions/TargetGroupAssociationLimitException"
            }
          },
          "486": {
            "description": "IncompatibleProtocolsException",
            "schema": {
              "$ref": "#/definitions/IncompatibleProtocolsException"
            }
          },
          "487": {
            "description": "SSLPolicyNotFoundException",
            "schema": {
              "$ref": "#/definitions/SSLPolicyNotFoundException"
            }
          },
          "488": {
            "description": "CertificateNotFoundException",
            "schema": {
              "$ref": "#/definitions/CertificateNotFoundException"
            }
          },
          "489": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "490": {
            "description": "UnsupportedProtocolException",
            "schema": {
              "$ref": "#/definitions/UnsupportedProtocolException"
            }
          },
          "491": {
            "description": "TooManyRegistrationsForTargetIdException",
            "schema": {
              "$ref": "#/definitions/TooManyRegistrationsForTargetIdException"
            }
          },
          "492": {
            "description": "TooManyTargetsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetsException"
            }
          }
        }
      }
    },
    "/#ModifyLoadBalancerAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can't be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>",
        "operationId": "ModifyLoadBalancerAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyLoadBalancerAttributesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyLoadBalancerAttributesOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          }
        }
      }
    },
    "/#ModifyRule": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the default action, use <a>ModifyListener</a>.</p>",
        "operationId": "ModifyRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyRuleInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyRuleOutput"
            }
          },
          "480": {
            "description": "TargetGroupAssociationLimitException",
            "schema": {
              "$ref": "#/definitions/TargetGroupAssociationLimitException"
            }
          },
          "481": {
            "description": "IncompatibleProtocolsException",
            "schema": {
              "$ref": "#/definitions/IncompatibleProtocolsException"
            }
          },
          "482": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          },
          "483": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          },
          "484": {
            "description": "TooManyRegistrationsForTargetIdException",
            "schema": {
              "$ref": "#/definitions/TooManyRegistrationsForTargetIdException"
            }
          },
          "485": {
            "description": "TooManyTargetsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetsException"
            }
          },
          "486": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          }
        }
      }
    },
    "/#ModifyTargetGroup": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>",
        "operationId": "ModifyTargetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyTargetGroupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyTargetGroupOutput"
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          }
        }
      }
    },
    "/#ModifyTargetGroupAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "Modifies the specified attributes of the specified target group.",
        "operationId": "ModifyTargetGroupAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyTargetGroupAttributesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModifyTargetGroupAttributesOutput"
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          }
        }
      }
    },
    "/#RegisterTargets": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Registers the specified targets with the specified target group.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port number for the target group. Alternatively, you can override the port for a target when you register it.</p> <p>The target must be in the virtual private cloud (VPC) that you specified for the target group. If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>Network Load Balancers do not support the following instance types as targets: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>",
        "operationId": "RegisterTargets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterTargetsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegisterTargetsOutput"
            }
          },
          "480": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "481": {
            "description": "TooManyTargetsException",
            "schema": {
              "$ref": "#/definitions/TooManyTargetsException"
            }
          },
          "482": {
            "description": "InvalidTargetException",
            "schema": {
              "$ref": "#/definitions/InvalidTargetException"
            }
          },
          "483": {
            "description": "TooManyRegistrationsForTargetIdException",
            "schema": {
              "$ref": "#/definitions/TooManyRegistrationsForTargetIdException"
            }
          }
        }
      }
    },
    "/#RemoveTags": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>",
        "operationId": "RemoveTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveTagsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveTagsOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "TargetGroupNotFoundException",
            "schema": {
              "$ref": "#/definitions/TargetGroupNotFoundException"
            }
          },
          "482": {
            "description": "ListenerNotFoundException",
            "schema": {
              "$ref": "#/definitions/ListenerNotFoundException"
            }
          },
          "483": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          },
          "484": {
            "description": "TooManyTagsException",
            "schema": {
              "$ref": "#/definitions/TooManyTagsException"
            }
          }
        }
      }
    },
    "/#SetIpAddressType": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.</p> <p>Note that Network Load Balancers must use <code>ipv4</code>.</p>",
        "operationId": "SetIpAddressType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetIpAddressTypeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SetIpAddressTypeOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "482": {
            "description": "InvalidSubnetException",
            "schema": {
              "$ref": "#/definitions/InvalidSubnetException"
            }
          }
        }
      }
    },
    "/#SetRulePriorities": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>",
        "operationId": "SetRulePriorities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetRulePrioritiesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SetRulePrioritiesOutput"
            }
          },
          "480": {
            "description": "RuleNotFoundException",
            "schema": {
              "$ref": "#/definitions/RuleNotFoundException"
            }
          },
          "481": {
            "description": "PriorityInUseException",
            "schema": {
              "$ref": "#/definitions/PriorityInUseException"
            }
          },
          "482": {
            "description": "OperationNotPermittedException",
            "schema": {
              "$ref": "#/definitions/OperationNotPermittedException"
            }
          }
        }
      }
    },
    "/#SetSecurityGroups": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>Note that you can't specify a security group for a Network Load Balancer.</p>",
        "operationId": "SetSecurityGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetSecurityGroupsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SetSecurityGroupsOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "482": {
            "description": "InvalidSecurityGroupException",
            "schema": {
              "$ref": "#/definitions/InvalidSecurityGroupException"
            }
          }
        }
      }
    },
    "/#SetSubnets": {
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ],
      "post": {
        "description": "<p>Enables the Availability Zone for the specified subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>Note that you can't change the subnets for a Network Load Balancer.</p>",
        "operationId": "SetSubnets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetSubnetsInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SetSubnetsOutput"
            }
          },
          "480": {
            "description": "LoadBalancerNotFoundException",
            "schema": {
              "$ref": "#/definitions/LoadBalancerNotFoundException"
            }
          },
          "481": {
            "description": "InvalidConfigurationRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidConfigurationRequestException"
            }
          },
          "482": {
            "description": "SubnetNotFoundException",
            "schema": {
              "$ref": "#/definitions/SubnetNotFoundException"
            }
          },
          "483": {
            "description": "InvalidSubnetException",
            "schema": {
              "$ref": "#/definitions/InvalidSubnetException"
            }
          },
          "484": {
            "description": "AllocationIdNotFoundException",
            "schema": {
              "$ref": "#/definitions/AllocationIdNotFoundException"
            }
          },
          "485": {
            "description": "AvailabilityZoneNotSupportedException",
            "schema": {
              "$ref": "#/definitions/AvailabilityZoneNotSupportedException"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "description": "Information about an action.",
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "Type": {
          "$ref": "#/definitions/ActionTypeEnum",
          "description": "The type of action."
        }
      },
      "required": [
        "Type",
        "TargetGroupArn"
      ],
      "type": "object"
    },
    "ActionTypeEnum": {
      "enum": [
        "forward"
      ],
      "type": "string"
    },
    "Actions": {
      "items": {
        "$ref": "#/definitions/Action"
      },
      "type": "array"
    },
    "AddTagsInput": {
      "example": {
        "ResourceArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
        ],
        "Tags": [
          {
            "Key": "project",
            "Value": "lima"
          },
          {
            "Key": "department",
            "Value": "digital-media"
          }
        ]
      },
      "properties": {
        "ResourceArns": {
          "$ref": "#/definitions/ResourceArns",
          "description": "The Amazon Resource Name (ARN) of the resource."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags. Each resource can have a maximum of 10 tags."
        }
      },
      "required": [
        "ResourceArns",
        "Tags"
      ],
      "type": "object"
    },
    "AddTagsOutput": {
      "properties": {},
      "type": "object"
    },
    "AllocationId": {
      "type": "string"
    },
    "AllocationIdNotFoundException": {
      "description": "The specified allocation ID does not exist.",
      "properties": {},
      "type": "object"
    },
    "AvailabilityZone": {
      "description": "Information about an Availability Zone.",
      "properties": {
        "LoadBalancerAddresses": {
          "$ref": "#/definitions/LoadBalancerAddresses",
          "description": "[Network Load Balancers] The static IP address."
        },
        "SubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "The ID of the subnet."
        },
        "ZoneName": {
          "$ref": "#/definitions/ZoneName",
          "description": "The name of the Availability Zone."
        }
      },
      "type": "object"
    },
    "AvailabilityZoneNotSupportedException": {
      "description": "The specified Availability Zone is not supported.",
      "properties": {},
      "type": "object"
    },
    "AvailabilityZones": {
      "items": {
        "$ref": "#/definitions/AvailabilityZone"
      },
      "type": "array"
    },
    "CanonicalHostedZoneId": {
      "type": "string"
    },
    "Certificate": {
      "description": "Information about an SSL server certificate deployed on a load balancer.",
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/CertificateArn",
          "description": "The Amazon Resource Name (ARN) of the certificate."
        }
      },
      "type": "object"
    },
    "CertificateArn": {
      "type": "string"
    },
    "CertificateList": {
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "type": "array"
    },
    "CertificateNotFoundException": {
      "description": "The specified certificate does not exist.",
      "properties": {},
      "type": "object"
    },
    "Cipher": {
      "description": "Information about a cipher used in a policy.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/CipherName",
          "description": "The name of the cipher."
        },
        "Priority": {
          "$ref": "#/definitions/CipherPriority",
          "description": "The priority of the cipher."
        }
      },
      "type": "object"
    },
    "CipherName": {
      "type": "string"
    },
    "CipherPriority": {
      "type": "integer"
    },
    "Ciphers": {
      "items": {
        "$ref": "#/definitions/Cipher"
      },
      "type": "array"
    },
    "ConditionFieldName": {
      "maxLength": 64,
      "type": "string"
    },
    "CreateListenerInput": {
      "example": {
        "Certificates": [
          {
            "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-server-cert"
          }
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-2015-05"
      },
      "properties": {
        "Certificates": {
          "$ref": "#/definitions/CertificateList",
          "description": "[HTTPS listeners] The SSL server certificate. You must provide exactly one certificate."
        },
        "DefaultActions": {
          "$ref": "#/definitions/Actions",
          "description": "The default action for the listener. For Application Load Balancers, the protocol of the specified target group must be HTTP or HTTPS. For Network Load Balancers, the protocol of the specified target group must be TCP."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port on which the load balancer is listening."
        },
        "Protocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP."
        },
        "SslPolicy": {
          "$ref": "#/definitions/SslPolicyName",
          "description": "[HTTPS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy."
        }
      },
      "required": [
        "LoadBalancerArn",
        "Protocol",
        "Port",
        "DefaultActions"
      ],
      "type": "object"
    },
    "CreateListenerOutput": {
      "example": {
        "Listeners": [
          {
            "Certificates": [
              {
                "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-server-cert"
              }
            ],
            "DefaultActions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2",
            "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
            "Port": 443,
            "Protocol": "HTTPS",
            "SslPolicy": "ELBSecurityPolicy-2015-05"
          }
        ]
      },
      "properties": {
        "Listeners": {
          "$ref": "#/definitions/Listeners",
          "description": "Information about the listener."
        }
      },
      "type": "object"
    },
    "CreateLoadBalancerInput": {
      "example": {
        "Name": "my-internal-load-balancer",
        "Scheme": "internal",
        "SecurityGroups": [],
        "Subnets": [
          "subnet-b7d581c0",
          "subnet-8360a9e7"
        ]
      },
      "properties": {
        "IpAddressType": {
          "$ref": "#/definitions/IpAddressType",
          "description": "[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>."
        },
        "Name": {
          "$ref": "#/definitions/LoadBalancerName",
          "description": "<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>"
        },
        "Scheme": {
          "$ref": "#/definitions/LoadBalancerSchemeEnum",
          "description": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the Internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>"
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroups",
          "description": "[Application Load Balancers] The IDs of the security groups to assign to the load balancer."
        },
        "SubnetMappings": {
          "$ref": "#/definitions/SubnetMappings",
          "description": "<p>The IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Network Load Balancers] You can specify one Elastic IP address per subnet.</p> <p>[Application Load Balancers] You cannot specify Elastic IP addresses for your subnets.</p>"
        },
        "Subnets": {
          "$ref": "#/definitions/Subnets",
          "description": "<p>The IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "One or more tags to assign to the load balancer."
        },
        "Type": {
          "$ref": "#/definitions/LoadBalancerTypeEnum",
          "description": "The type of load balancer to create. The default is <code>application</code>."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CreateLoadBalancerOutput": {
      "example": {
        "LoadBalancers": [
          {
            "AvailabilityZones": [
              {
                "SubnetId": "subnet-8360a9e7",
                "ZoneName": "us-west-2a"
              },
              {
                "SubnetId": "subnet-b7d581c0",
                "ZoneName": "us-west-2b"
              }
            ],
            "CanonicalHostedZoneId": "Z2P70J7EXAMPLE",
            "CreatedTime": "2016-03-25T21:29:48.850Z",
            "DNSName": "internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com",
            "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2",
            "LoadBalancerName": "my-internal-load-balancer",
            "Scheme": "internal",
            "SecurityGroups": [
              "sg-5943793c"
            ],
            "State": {
              "Code": "provisioning"
            },
            "Type": "application",
            "VpcId": "vpc-3ac0fb5f"
          }
        ]
      },
      "properties": {
        "LoadBalancers": {
          "$ref": "#/definitions/LoadBalancers",
          "description": "Information about the load balancer."
        }
      },
      "type": "object"
    },
    "CreateRuleInput": {
      "example": {
        "Actions": [
          {
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/img/*"
            ]
          }
        ],
        "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2",
        "Priority": 10
      },
      "properties": {
        "Actions": {
          "$ref": "#/definitions/Actions",
          "description": "An action. Each action has the type <code>forward</code> and specifies a target group."
        },
        "Conditions": {
          "$ref": "#/definitions/RuleConditionList",
          "description": "<p>The conditions. Each condition specifies a field name and a single value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern. A path pattern is case sensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ \" ' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>"
        },
        "ListenerArn": {
          "$ref": "#/definitions/ListenerArn",
          "description": "The Amazon Resource Name (ARN) of the listener."
        },
        "Priority": {
          "$ref": "#/definitions/RulePriority",
          "description": "The priority for the rule. A listener can't have multiple rules with the same priority."
        }
      },
      "required": [
        "ListenerArn",
        "Conditions",
        "Priority",
        "Actions"
      ],
      "type": "object"
    },
    "CreateRuleOutput": {
      "example": {
        "Rules": [
          {
            "Actions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "Conditions": [
              {
                "Field": "path-pattern",
                "Values": [
                  "/img/*"
                ]
              }
            ],
            "IsDefault": false,
            "Priority": "10",
            "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
          }
        ]
      },
      "properties": {
        "Rules": {
          "$ref": "#/definitions/Rules",
          "description": "Information about the rule."
        }
      },
      "type": "object"
    },
    "CreateTargetGroupInput": {
      "example": {
        "Name": "my-targets",
        "Port": 80,
        "Protocol": "HTTP",
        "VpcId": "vpc-3ac0fb5f"
      },
      "properties": {
        "HealthCheckIntervalSeconds": {
          "$ref": "#/definitions/HealthCheckIntervalSeconds",
          "description": "The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds. The default is 30 seconds."
        },
        "HealthCheckPath": {
          "$ref": "#/definitions/Path",
          "description": "[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /."
        },
        "HealthCheckPort": {
          "$ref": "#/definitions/HealthCheckPort",
          "description": "The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer."
        },
        "HealthCheckProtocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported only if the protocol of the target group is TCP. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP."
        },
        "HealthCheckTimeoutSeconds": {
          "$ref": "#/definitions/HealthCheckTimeoutSeconds",
          "description": "The amount of time, in seconds, during which no response from a target means a failed health check. For Application Load Balancers, the range is 2 to 60 seconds and the default is 5 seconds. For Network Load Balancers, this is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks."
        },
        "HealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy. For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3."
        },
        "Matcher": {
          "$ref": "#/definitions/Matcher",
          "description": "[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target."
        },
        "Name": {
          "$ref": "#/definitions/TargetGroupName",
          "description": "<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>"
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target."
        },
        "Protocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP."
        },
        "TargetType": {
          "$ref": "#/definitions/TargetTypeEnum",
          "description": "<p>The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address). The default is <code>instance</code>. Note that you can't specify targets for a target group using both instance IDs and IP addresses.</p> <p>If the target type is <code>ip</code>, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.</p>"
        },
        "UnhealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health check failures required before considering a target unhealthy. For Application Load Balancers, the default is 2. For Network Load Balancers, this value must be the same as the healthy threshold count."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The identifier of the virtual private cloud (VPC)."
        }
      },
      "required": [
        "Name",
        "Protocol",
        "Port",
        "VpcId"
      ],
      "type": "object"
    },
    "CreateTargetGroupOutput": {
      "example": {
        "TargetGroups": [
          {
            "HealthCheckIntervalSeconds": 30,
            "HealthCheckPath": "/",
            "HealthCheckPort": "traffic-port",
            "HealthCheckProtocol": "HTTP",
            "HealthCheckTimeoutSeconds": 5,
            "HealthyThresholdCount": 5,
            "Matcher": {
              "HttpCode": "200"
            },
            "Port": 80,
            "Protocol": "HTTP",
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
            "TargetGroupName": "my-targets",
            "UnhealthyThresholdCount": 2,
            "VpcId": "vpc-3ac0fb5f"
          }
        ]
      },
      "properties": {
        "TargetGroups": {
          "$ref": "#/definitions/TargetGroups",
          "description": "Information about the target group."
        }
      },
      "type": "object"
    },
    "CreatedTime": {
      "format": "date-time",
      "type": "string"
    },
    "DNSName": {
      "type": "string"
    },
    "DeleteListenerInput": {
      "example": {
        "ListenerArn": "arn:aws:elasticloadbalancing:ua-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2"
      },
      "properties": {
        "ListenerArn": {
          "$ref": "#/definitions/ListenerArn",
          "description": "The Amazon Resource Name (ARN) of the listener."
        }
      },
      "required": [
        "ListenerArn"
      ],
      "type": "object"
    },
    "DeleteListenerOutput": {
      "properties": {},
      "type": "object"
    },
    "DeleteLoadBalancerInput": {
      "example": {
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
      },
      "properties": {
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        }
      },
      "required": [
        "LoadBalancerArn"
      ],
      "type": "object"
    },
    "DeleteLoadBalancerOutput": {
      "properties": {},
      "type": "object"
    },
    "DeleteRuleInput": {
      "example": {
        "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3"
      },
      "properties": {
        "RuleArn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        }
      },
      "required": [
        "RuleArn"
      ],
      "type": "object"
    },
    "DeleteRuleOutput": {
      "properties": {},
      "type": "object"
    },
    "DeleteTargetGroupInput": {
      "example": {
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067"
      },
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        }
      },
      "required": [
        "TargetGroupArn"
      ],
      "type": "object"
    },
    "DeleteTargetGroupOutput": {
      "properties": {},
      "type": "object"
    },
    "DeregisterTargetsInput": {
      "example": {
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
        "Targets": [
          {
            "Id": "i-0f76fade"
          }
        ]
      },
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "Targets": {
          "$ref": "#/definitions/TargetDescriptions",
          "description": "The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it."
        }
      },
      "required": [
        "TargetGroupArn",
        "Targets"
      ],
      "type": "object"
    },
    "DeregisterTargetsOutput": {
      "properties": {},
      "type": "object"
    },
    "DescribeAccountLimitsInput": {
      "properties": {
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        }
      },
      "type": "object"
    },
    "DescribeAccountLimitsOutput": {
      "properties": {
        "Limits": {
          "$ref": "#/definitions/Limits",
          "description": "Information about the limits."
        },
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        }
      },
      "type": "object"
    },
    "DescribeListenersInput": {
      "example": {
        "ListenerArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2"
        ]
      },
      "properties": {
        "ListenerArns": {
          "$ref": "#/definitions/ListenerArns",
          "description": "The Amazon Resource Names (ARN) of the listeners."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        }
      },
      "type": "object"
    },
    "DescribeListenersOutput": {
      "example": {
        "Listeners": [
          {
            "DefaultActions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2",
            "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
            "Port": 80,
            "Protocol": "HTTP"
          }
        ]
      },
      "properties": {
        "Listeners": {
          "$ref": "#/definitions/Listeners",
          "description": "Information about the listeners."
        },
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        }
      },
      "type": "object"
    },
    "DescribeLoadBalancerAttributesInput": {
      "example": {
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
      },
      "properties": {
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        }
      },
      "required": [
        "LoadBalancerArn"
      ],
      "type": "object"
    },
    "DescribeLoadBalancerAttributesOutput": {
      "example": {
        "Attributes": [
          {
            "Key": "access_logs.s3.enabled",
            "Value": "false"
          },
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": "60"
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": ""
          },
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": ""
          }
        ]
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/LoadBalancerAttributes",
          "description": "Information about the load balancer attributes."
        }
      },
      "type": "object"
    },
    "DescribeLoadBalancersInput": {
      "example": {
        "LoadBalancerArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
        ]
      },
      "properties": {
        "LoadBalancerArns": {
          "$ref": "#/definitions/LoadBalancerArns",
          "description": "The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call."
        },
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "Names": {
          "$ref": "#/definitions/LoadBalancerNames",
          "description": "The names of the load balancers."
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        }
      },
      "type": "object"
    },
    "DescribeLoadBalancersOutput": {
      "example": {
        "LoadBalancers": [
          {
            "AvailabilityZones": [
              {
                "SubnetId": "subnet-8360a9e7",
                "ZoneName": "us-west-2a"
              },
              {
                "SubnetId": "subnet-b7d581c0",
                "ZoneName": "us-west-2b"
              }
            ],
            "CanonicalHostedZoneId": "Z2P70J7EXAMPLE",
            "CreatedTime": "2016-03-25T21:26:12.920Z",
            "DNSName": "my-load-balancer-424835706.us-west-2.elb.amazonaws.com",
            "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
            "LoadBalancerName": "my-load-balancer",
            "Scheme": "internet-facing",
            "SecurityGroups": [
              "sg-5943793c"
            ],
            "State": {
              "Code": "active"
            },
            "Type": "application",
            "VpcId": "vpc-3ac0fb5f"
          }
        ]
      },
      "properties": {
        "LoadBalancers": {
          "$ref": "#/definitions/LoadBalancers",
          "description": "Information about the load balancers."
        },
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        }
      },
      "type": "object"
    },
    "DescribeRulesInput": {
      "example": {
        "RuleArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
        ]
      },
      "properties": {
        "ListenerArn": {
          "$ref": "#/definitions/ListenerArn",
          "description": "The Amazon Resource Name (ARN) of the listener."
        },
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        },
        "RuleArns": {
          "$ref": "#/definitions/RuleArns",
          "description": "The Amazon Resource Names (ARN) of the rules."
        }
      },
      "type": "object"
    },
    "DescribeRulesOutput": {
      "example": {
        "Rules": [
          {
            "Actions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "Conditions": [
              {
                "Field": "path-pattern",
                "Values": [
                  "/img/*"
                ]
              }
            ],
            "IsDefault": false,
            "Priority": "10",
            "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
          }
        ]
      },
      "properties": {
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        },
        "Rules": {
          "$ref": "#/definitions/Rules",
          "description": "Information about the rules."
        }
      },
      "type": "object"
    },
    "DescribeSSLPoliciesInput": {
      "example": {
        "Names": [
          "ELBSecurityPolicy-2015-05"
        ]
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "Names": {
          "$ref": "#/definitions/SslPolicyNames",
          "description": "The names of the policies."
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        }
      },
      "type": "object"
    },
    "DescribeSSLPoliciesOutput": {
      "example": {
        "SslPolicies": [
          {
            "Ciphers": [
              {
                "Name": "ECDHE-ECDSA-AES128-GCM-SHA256",
                "Priority": 1
              },
              {
                "Name": "ECDHE-RSA-AES128-GCM-SHA256",
                "Priority": 2
              },
              {
                "Name": "ECDHE-ECDSA-AES128-SHA256",
                "Priority": 3
              },
              {
                "Name": "ECDHE-RSA-AES128-SHA256",
                "Priority": 4
              },
              {
                "Name": "ECDHE-ECDSA-AES128-SHA",
                "Priority": 5
              },
              {
                "Name": "ECDHE-RSA-AES128-SHA",
                "Priority": 6
              },
              {
                "Name": "DHE-RSA-AES128-SHA",
                "Priority": 7
              },
              {
                "Name": "ECDHE-ECDSA-AES256-GCM-SHA384",
                "Priority": 8
              },
              {
                "Name": "ECDHE-RSA-AES256-GCM-SHA384",
                "Priority": 9
              },
              {
                "Name": "ECDHE-ECDSA-AES256-SHA384",
                "Priority": 10
              },
              {
                "Name": "ECDHE-RSA-AES256-SHA384",
                "Priority": 11
              },
              {
                "Name": "ECDHE-RSA-AES256-SHA",
                "Priority": 12
              },
              {
                "Name": "ECDHE-ECDSA-AES256-SHA",
                "Priority": 13
              },
              {
                "Name": "AES128-GCM-SHA256",
                "Priority": 14
              },
              {
                "Name": "AES128-SHA256",
                "Priority": 15
              },
              {
                "Name": "AES128-SHA",
                "Priority": 16
              },
              {
                "Name": "AES256-GCM-SHA384",
                "Priority": 17
              },
              {
                "Name": "AES256-SHA256",
                "Priority": 18
              },
              {
                "Name": "AES256-SHA",
                "Priority": 19
              }
            ],
            "Name": "ELBSecurityPolicy-2015-05",
            "SslProtocols": [
              "TLSv1",
              "TLSv1.1",
              "TLSv1.2"
            ]
          }
        ]
      },
      "properties": {
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        },
        "SslPolicies": {
          "$ref": "#/definitions/SslPolicies",
          "description": "Information about the policies."
        }
      },
      "type": "object"
    },
    "DescribeTagsInput": {
      "example": {
        "ResourceArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
        ]
      },
      "properties": {
        "ResourceArns": {
          "$ref": "#/definitions/ResourceArns",
          "description": "The Amazon Resource Names (ARN) of the resources."
        }
      },
      "required": [
        "ResourceArns"
      ],
      "type": "object"
    },
    "DescribeTagsOutput": {
      "example": {
        "TagDescriptions": [
          {
            "ResourceArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
            "Tags": [
              {
                "Key": "project",
                "Value": "lima"
              },
              {
                "Key": "department",
                "Value": "digital-media"
              }
            ]
          }
        ]
      },
      "properties": {
        "TagDescriptions": {
          "$ref": "#/definitions/TagDescriptions",
          "description": "Information about the tags."
        }
      },
      "type": "object"
    },
    "DescribeTargetGroupAttributesInput": {
      "example": {
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067"
      },
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        }
      },
      "required": [
        "TargetGroupArn"
      ],
      "type": "object"
    },
    "DescribeTargetGroupAttributesOutput": {
      "example": {
        "Attributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          },
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "300"
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": "86400"
          }
        ]
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/TargetGroupAttributes",
          "description": "Information about the target group attributes"
        }
      },
      "type": "object"
    },
    "DescribeTargetGroupsInput": {
      "example": {
        "TargetGroupArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067"
        ]
      },
      "properties": {
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "Marker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker for the next set of results. (You received this marker from a previous call.)"
        },
        "Names": {
          "$ref": "#/definitions/TargetGroupNames",
          "description": "The names of the target groups."
        },
        "PageSize": {
          "$ref": "#/definitions/PageSize",
          "description": "The maximum number of results to return with this call."
        },
        "TargetGroupArns": {
          "$ref": "#/definitions/TargetGroupArns",
          "description": "The Amazon Resource Names (ARN) of the target groups."
        }
      },
      "type": "object"
    },
    "DescribeTargetGroupsOutput": {
      "example": {
        "TargetGroups": [
          {
            "HealthCheckIntervalSeconds": 30,
            "HealthCheckPath": "/",
            "HealthCheckPort": "traffic-port",
            "HealthCheckProtocol": "HTTP",
            "HealthCheckTimeoutSeconds": 5,
            "HealthyThresholdCount": 5,
            "LoadBalancerArns": [
              "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
            ],
            "Matcher": {
              "HttpCode": "200"
            },
            "Port": 80,
            "Protocol": "HTTP",
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
            "TargetGroupName": "my-targets",
            "UnhealthyThresholdCount": 2,
            "VpcId": "vpc-3ac0fb5f"
          }
        ]
      },
      "properties": {
        "NextMarker": {
          "$ref": "#/definitions/Marker",
          "description": "The marker to use when requesting the next set of results. If there are no additional results, the string is empty."
        },
        "TargetGroups": {
          "$ref": "#/definitions/TargetGroups",
          "description": "Information about the target groups."
        }
      },
      "type": "object"
    },
    "DescribeTargetHealthInput": {
      "example": {
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
        "Targets": [
          {
            "Id": "i-0f76fade",
            "Port": 80
          }
        ]
      },
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "Targets": {
          "$ref": "#/definitions/TargetDescriptions",
          "description": "The targets."
        }
      },
      "required": [
        "TargetGroupArn"
      ],
      "type": "object"
    },
    "DescribeTargetHealthOutput": {
      "example": {
        "TargetHealthDescriptions": [
          {
            "HealthCheckPort": "80",
            "Target": {
              "Id": "i-0f76fade",
              "Port": 80
            },
            "TargetHealth": {
              "State": "healthy"
            }
          }
        ]
      },
      "properties": {
        "TargetHealthDescriptions": {
          "$ref": "#/definitions/TargetHealthDescriptions",
          "description": "Information about the health of the targets."
        }
      },
      "type": "object"
    },
    "Description": {
      "type": "string"
    },
    "DuplicateListenerException": {
      "description": "A listener with the specified port already exists.",
      "properties": {},
      "type": "object"
    },
    "DuplicateLoadBalancerNameException": {
      "description": "A load balancer with the specified name already exists.",
      "properties": {},
      "type": "object"
    },
    "DuplicateTagKeysException": {
      "description": "A tag key was specified more than once.",
      "properties": {},
      "type": "object"
    },
    "DuplicateTargetGroupNameException": {
      "description": "A target group with the specified name already exists.",
      "properties": {},
      "type": "object"
    },
    "HealthCheckIntervalSeconds": {
      "maximum": 300,
      "minimum": 5,
      "type": "integer"
    },
    "HealthCheckPort": {
      "type": "string"
    },
    "HealthCheckThresholdCount": {
      "maximum": 10,
      "minimum": 2,
      "type": "integer"
    },
    "HealthCheckTimeoutSeconds": {
      "maximum": 60,
      "minimum": 2,
      "type": "integer"
    },
    "HealthUnavailableException": {
      "description": "The health of the specified targets could not be retrieved due to an internal error.",
      "properties": {},
      "type": "object"
    },
    "HttpCode": {
      "type": "string"
    },
    "IncompatibleProtocolsException": {
      "description": "The specified configuration is not valid with this protocol.",
      "properties": {},
      "type": "object"
    },
    "InvalidConfigurationRequestException": {
      "description": "The requested configuration is not valid.",
      "properties": {},
      "type": "object"
    },
    "InvalidSchemeException": {
      "description": "The requested scheme is not valid.",
      "properties": {},
      "type": "object"
    },
    "InvalidSecurityGroupException": {
      "description": "The specified security group does not exist.",
      "properties": {},
      "type": "object"
    },
    "InvalidSubnetException": {
      "description": "The specified subnet is out of available addresses.",
      "properties": {},
      "type": "object"
    },
    "InvalidTargetException": {
      "description": "The specified target does not exist or is not in the same VPC as the target group.",
      "properties": {},
      "type": "object"
    },
    "IpAddress": {
      "type": "string"
    },
    "IpAddressType": {
      "enum": [
        "ipv4",
        "dualstack"
      ],
      "type": "string"
    },
    "IsDefault": {
      "type": "boolean"
    },
    "Limit": {
      "description": "Information about an Elastic Load Balancing resource limit for your AWS account.",
      "properties": {
        "Max": {
          "$ref": "#/definitions/Max",
          "description": "The maximum value of the limit."
        },
        "Name": {
          "$ref": "#/definitions/Name",
          "description": "<p>The name of the limit. The possible values are:</p> <ul> <li> <p>application-load-balancers</p> </li> <li> <p>listeners-per-application-load-balancer</p> </li> <li> <p>listeners-per-network-load-balancer</p> </li> <li> <p>network-load-balancers</p> </li> <li> <p>rules-per-application-load-balancer</p> </li> <li> <p>target-groups</p> </li> <li> <p>targets-per-application-load-balancer</p> </li> </ul>"
        }
      },
      "type": "object"
    },
    "Limits": {
      "items": {
        "$ref": "#/definitions/Limit"
      },
      "type": "array"
    },
    "ListOfString": {
      "items": {
        "$ref": "#/definitions/StringValue"
      },
      "type": "array"
    },
    "Listener": {
      "description": "Information about a listener.",
      "properties": {
        "Certificates": {
          "$ref": "#/definitions/CertificateList",
          "description": "The SSL server certificate. You must provide a certificate if the protocol is HTTPS."
        },
        "DefaultActions": {
          "$ref": "#/definitions/Actions",
          "description": "The default actions for the listener."
        },
        "ListenerArn": {
          "$ref": "#/definitions/ListenerArn",
          "description": "The Amazon Resource Name (ARN) of the listener."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port on which the load balancer is listening."
        },
        "Protocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol for connections from clients to the load balancer."
        },
        "SslPolicy": {
          "$ref": "#/definitions/SslPolicyName",
          "description": "The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy."
        }
      },
      "type": "object"
    },
    "ListenerArn": {
      "type": "string"
    },
    "ListenerArns": {
      "items": {
        "$ref": "#/definitions/ListenerArn"
      },
      "type": "array"
    },
    "ListenerNotFoundException": {
      "description": "The specified listener does not exist.",
      "properties": {},
      "type": "object"
    },
    "Listeners": {
      "items": {
        "$ref": "#/definitions/Listener"
      },
      "type": "array"
    },
    "LoadBalancer": {
      "description": "Information about a load balancer.",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "The Availability Zones for the load balancer."
        },
        "CanonicalHostedZoneId": {
          "$ref": "#/definitions/CanonicalHostedZoneId",
          "description": "The ID of the Amazon Route 53 hosted zone associated with the load balancer."
        },
        "CreatedTime": {
          "$ref": "#/definitions/CreatedTime",
          "description": "The date and time the load balancer was created."
        },
        "DNSName": {
          "$ref": "#/definitions/DNSName",
          "description": "The public DNS name of the load balancer."
        },
        "IpAddressType": {
          "$ref": "#/definitions/IpAddressType",
          "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses)."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "LoadBalancerName": {
          "$ref": "#/definitions/LoadBalancerName",
          "description": "The name of the load balancer."
        },
        "Scheme": {
          "$ref": "#/definitions/LoadBalancerSchemeEnum",
          "description": "<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the Internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p>"
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroups",
          "description": "The IDs of the security groups for the load balancer."
        },
        "State": {
          "$ref": "#/definitions/LoadBalancerState",
          "description": "The state of the load balancer."
        },
        "Type": {
          "$ref": "#/definitions/LoadBalancerTypeEnum",
          "description": "The type of load balancer."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The ID of the VPC for the load balancer."
        }
      },
      "type": "object"
    },
    "LoadBalancerAddress": {
      "description": "Information about a static IP address for a load balancer.",
      "properties": {
        "AllocationId": {
          "$ref": "#/definitions/AllocationId",
          "description": "[Network Load Balancers] The allocation ID of the Elastic IP address."
        },
        "IpAddress": {
          "$ref": "#/definitions/IpAddress",
          "description": "The static IP address."
        }
      },
      "type": "object"
    },
    "LoadBalancerAddresses": {
      "items": {
        "$ref": "#/definitions/LoadBalancerAddress"
      },
      "type": "array"
    },
    "LoadBalancerArn": {
      "type": "string"
    },
    "LoadBalancerArns": {
      "items": {
        "$ref": "#/definitions/LoadBalancerArn"
      },
      "type": "array"
    },
    "LoadBalancerAttribute": {
      "description": "Information about a load balancer attribute.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/LoadBalancerAttributeKey",
          "description": "<p>The name of the attribute.</p> <ul> <li> <p> <code>access_logs.s3.enabled</code> - [Application Load Balancers] Indicates whether access logs stored in Amazon S3 are enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>access_logs.s3.bucket</code> - [Application Load Balancers] The name of the S3 bucket for the access logs. This attribute is required if access logs in Amazon S3 are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permission to write to the bucket.</p> </li> <li> <p> <code>access_logs.s3.prefix</code> - [Application Load Balancers] The prefix for the location in the S3 bucket. If you don't specify a prefix, the access logs are stored in the root of the bucket.</p> </li> <li> <p> <code>deletion_protection.enabled</code> - Indicates whether deletion protection is enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>idle_timeout.timeout_seconds</code> - [Application Load Balancers] The idle timeout value, in seconds. The valid range is 1-4000. The default is 60 seconds.</p> </li> </ul>"
        },
        "Value": {
          "$ref": "#/definitions/LoadBalancerAttributeValue",
          "description": "The value of the attribute."
        }
      },
      "type": "object"
    },
    "LoadBalancerAttributeKey": {
      "maxLength": 256,
      "pattern": "^[a-zA-Z0-9._]+$",
      "type": "string"
    },
    "LoadBalancerAttributeValue": {
      "maxLength": 1024,
      "type": "string"
    },
    "LoadBalancerAttributes": {
      "items": {
        "$ref": "#/definitions/LoadBalancerAttribute"
      },
      "maxItems": 20,
      "type": "array"
    },
    "LoadBalancerName": {
      "type": "string"
    },
    "LoadBalancerNames": {
      "items": {
        "$ref": "#/definitions/LoadBalancerName"
      },
      "type": "array"
    },
    "LoadBalancerNotFoundException": {
      "description": "The specified load balancer does not exist.",
      "properties": {},
      "type": "object"
    },
    "LoadBalancerSchemeEnum": {
      "enum": [
        "internet-facing",
        "internal"
      ],
      "type": "string"
    },
    "LoadBalancerState": {
      "description": "Information about the state of the load balancer.",
      "properties": {
        "Code": {
          "$ref": "#/definitions/LoadBalancerStateEnum",
          "description": "The state code. The initial state of the load balancer is <code>provisioning</code>. After the load balancer is fully set up and ready to route traffic, its state is <code>active</code>. If the load balancer could not be set up, its state is <code>failed</code>."
        },
        "Reason": {
          "$ref": "#/definitions/StateReason",
          "description": "A description of the state."
        }
      },
      "type": "object"
    },
    "LoadBalancerStateEnum": {
      "enum": [
        "active",
        "provisioning",
        "active_impaired",
        "failed"
      ],
      "type": "string"
    },
    "LoadBalancerTypeEnum": {
      "enum": [
        "application",
        "network"
      ],
      "type": "string"
    },
    "LoadBalancers": {
      "items": {
        "$ref": "#/definitions/LoadBalancer"
      },
      "type": "array"
    },
    "Marker": {
      "type": "string"
    },
    "Matcher": {
      "description": "Information to use when checking for a successful response from a target.",
      "properties": {
        "HttpCode": {
          "$ref": "#/definitions/HttpCode",
          "description": "<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\").</p> <p>For Network Load Balancers, this is 200 to 399.</p>"
        }
      },
      "required": [
        "HttpCode"
      ],
      "type": "object"
    },
    "Max": {
      "type": "string"
    },
    "ModifyListenerInput": {
      "example": {
        "Certificates": [
          {
            "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-new-server-cert"
          }
        ],
        "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65"
      },
      "properties": {
        "Certificates": {
          "$ref": "#/definitions/CertificateList",
          "description": "The SSL server certificate."
        },
        "DefaultActions": {
          "$ref": "#/definitions/Actions",
          "description": "The default action. For Application Load Balancers, the protocol of the specified target group must be HTTP or HTTPS. For Network Load Balancers, the protocol of the specified target group must be TCP."
        },
        "ListenerArn": {
          "$ref": "#/definitions/ListenerArn",
          "description": "The Amazon Resource Name (ARN) of the listener."
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port for connections from clients to the load balancer."
        },
        "Protocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol for connections from clients to the load balancer. Application Load Balancers support HTTP and HTTPS and Network Load Balancers support TCP."
        },
        "SslPolicy": {
          "$ref": "#/definitions/SslPolicyName",
          "description": "The security policy that defines which protocols and ciphers are supported. For more information, see <a href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies\">Security Policies</a> in the <i>Application Load Balancers Guide</i>."
        }
      },
      "required": [
        "ListenerArn"
      ],
      "type": "object"
    },
    "ModifyListenerOutput": {
      "example": {
        "Listeners": [
          {
            "Certificates": [
              {
                "CertificateArn": "arn:aws:iam::123456789012:server-certificate/my-new-server-cert"
              }
            ],
            "DefaultActions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "ListenerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65",
            "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
            "Port": 443,
            "Protocol": "HTTPS",
            "SslPolicy": "ELBSecurityPolicy-2015-05"
          }
        ]
      },
      "properties": {
        "Listeners": {
          "$ref": "#/definitions/Listeners",
          "description": "Information about the modified listeners."
        }
      },
      "type": "object"
    },
    "ModifyLoadBalancerAttributesInput": {
      "example": {
        "Attributes": [
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true"
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": "my-loadbalancer-logs"
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": "myapp"
          }
        ],
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/LoadBalancerAttributes",
          "description": "The load balancer attributes."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        }
      },
      "required": [
        "LoadBalancerArn",
        "Attributes"
      ],
      "type": "object"
    },
    "ModifyLoadBalancerAttributesOutput": {
      "example": {
        "Attributes": [
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true"
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": "my-load-balancer-logs"
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": "myapp"
          },
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": "60"
          },
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ]
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/LoadBalancerAttributes",
          "description": "Information about the load balancer attributes."
        }
      },
      "type": "object"
    },
    "ModifyRuleInput": {
      "example": {
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/images/*"
            ]
          }
        ],
        "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
      },
      "properties": {
        "Actions": {
          "$ref": "#/definitions/Actions",
          "description": "The actions. The target group must use the HTTP or HTTPS protocol."
        },
        "Conditions": {
          "$ref": "#/definitions/RuleConditionList",
          "description": "The conditions."
        },
        "RuleArn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        }
      },
      "required": [
        "RuleArn"
      ],
      "type": "object"
    },
    "ModifyRuleOutput": {
      "example": {
        "Rules": [
          {
            "Actions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "Conditions": [
              {
                "Field": "path-pattern",
                "Values": [
                  "/images/*"
                ]
              }
            ],
            "IsDefault": false,
            "Priority": "10",
            "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee"
          }
        ]
      },
      "properties": {
        "Rules": {
          "$ref": "#/definitions/Rules",
          "description": "Information about the rule."
        }
      },
      "type": "object"
    },
    "ModifyTargetGroupAttributesInput": {
      "example": {
        "Attributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "600"
          }
        ],
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067"
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/TargetGroupAttributes",
          "description": "The attributes."
        },
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        }
      },
      "required": [
        "TargetGroupArn",
        "Attributes"
      ],
      "type": "object"
    },
    "ModifyTargetGroupAttributesOutput": {
      "example": {
        "Attributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false"
          },
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "600"
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": "86400"
          }
        ]
      },
      "properties": {
        "Attributes": {
          "$ref": "#/definitions/TargetGroupAttributes",
          "description": "Information about the attributes."
        }
      },
      "type": "object"
    },
    "ModifyTargetGroupInput": {
      "example": {
        "HealthCheckPort": "443",
        "HealthCheckProtocol": "HTTPS",
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f"
      },
      "properties": {
        "HealthCheckIntervalSeconds": {
          "$ref": "#/definitions/HealthCheckIntervalSeconds",
          "description": "The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5 to 300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds."
        },
        "HealthCheckPath": {
          "$ref": "#/definitions/Path",
          "description": "[HTTP/HTTPS health checks] The ping path that is the destination for the health check request."
        },
        "HealthCheckPort": {
          "$ref": "#/definitions/HealthCheckPort",
          "description": "The port the load balancer uses when performing health checks on targets."
        },
        "HealthCheckProtocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported only if the protocol of the target group is TCP."
        },
        "HealthCheckTimeoutSeconds": {
          "$ref": "#/definitions/HealthCheckTimeoutSeconds",
          "description": "[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check."
        },
        "HealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy."
        },
        "Matcher": {
          "$ref": "#/definitions/Matcher",
          "description": "[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target."
        },
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "UnhealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count."
        }
      },
      "required": [
        "TargetGroupArn"
      ],
      "type": "object"
    },
    "ModifyTargetGroupOutput": {
      "example": {
        "TargetGroups": [
          {
            "HealthCheckIntervalSeconds": 30,
            "HealthCheckPort": "443",
            "HealthCheckProtocol": "HTTPS",
            "HealthCheckTimeoutSeconds": 5,
            "HealthyThresholdCount": 5,
            "LoadBalancerArns": [
              "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
            ],
            "Matcher": {
              "HttpCode": "200"
            },
            "Port": 443,
            "Protocol": "HTTPS",
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f",
            "TargetGroupName": "my-https-targets",
            "UnhealthyThresholdCount": 2,
            "VpcId": "vpc-3ac0fb5f"
          }
        ]
      },
      "properties": {
        "TargetGroups": {
          "$ref": "#/definitions/TargetGroups",
          "description": "Information about the target group."
        }
      },
      "type": "object"
    },
    "Name": {
      "type": "string"
    },
    "OperationNotPermittedException": {
      "description": "This operation is not allowed.",
      "properties": {},
      "type": "object"
    },
    "PageSize": {
      "maximum": 400,
      "minimum": 1,
      "type": "integer"
    },
    "Path": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "Port": {
      "maximum": 65535,
      "minimum": 1,
      "type": "integer"
    },
    "PriorityInUseException": {
      "description": "The specified priority is in use.",
      "properties": {},
      "type": "object"
    },
    "ProtocolEnum": {
      "enum": [
        "HTTP",
        "HTTPS",
        "TCP"
      ],
      "type": "string"
    },
    "RegisterTargetsInput": {
      "example": {
        "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-new-targets/3bb63f11dfb0faf9",
        "Targets": [
          {
            "Id": "i-80c8dd94",
            "Port": 80
          },
          {
            "Id": "i-80c8dd94",
            "Port": 766
          }
        ]
      },
      "properties": {
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "Targets": {
          "$ref": "#/definitions/TargetDescriptions",
          "description": "The targets. The default port for a target is the port for the target group. You can specify a port override. If a target is already registered, you can register it again using a different port."
        }
      },
      "required": [
        "TargetGroupArn",
        "Targets"
      ],
      "type": "object"
    },
    "RegisterTargetsOutput": {
      "properties": {},
      "type": "object"
    },
    "RemoveTagsInput": {
      "example": {
        "ResourceArns": [
          "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"
        ],
        "TagKeys": [
          "project",
          "department"
        ]
      },
      "properties": {
        "ResourceArns": {
          "$ref": "#/definitions/ResourceArns",
          "description": "The Amazon Resource Name (ARN) of the resource."
        },
        "TagKeys": {
          "$ref": "#/definitions/TagKeys",
          "description": "The tag keys for the tags to remove."
        }
      },
      "required": [
        "ResourceArns",
        "TagKeys"
      ],
      "type": "object"
    },
    "RemoveTagsOutput": {
      "properties": {},
      "type": "object"
    },
    "ResourceArn": {
      "type": "string"
    },
    "ResourceArns": {
      "items": {
        "$ref": "#/definitions/ResourceArn"
      },
      "type": "array"
    },
    "ResourceInUseException": {
      "description": "A specified resource is in use.",
      "properties": {},
      "type": "object"
    },
    "Rule": {
      "description": "Information about a rule.",
      "properties": {
        "Actions": {
          "$ref": "#/definitions/Actions",
          "description": "The actions."
        },
        "Conditions": {
          "$ref": "#/definitions/RuleConditionList",
          "description": "The conditions."
        },
        "IsDefault": {
          "$ref": "#/definitions/IsDefault",
          "description": "Indicates whether this is the default rule."
        },
        "Priority": {
          "$ref": "#/definitions/String",
          "description": "The priority."
        },
        "RuleArn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        }
      },
      "type": "object"
    },
    "RuleArn": {
      "type": "string"
    },
    "RuleArns": {
      "items": {
        "$ref": "#/definitions/RuleArn"
      },
      "type": "array"
    },
    "RuleCondition": {
      "description": "Information about a condition for a rule.",
      "properties": {
        "Field": {
          "$ref": "#/definitions/ConditionFieldName",
          "description": "The name of the field. The possible values are <code>host-header</code> and <code>path-pattern</code>."
        },
        "Values": {
          "$ref": "#/definitions/ListOfString",
          "description": "<p>The condition value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern (for example, /img/*). A path pattern is case sensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ \" ' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>"
        }
      },
      "type": "object"
    },
    "RuleConditionList": {
      "items": {
        "$ref": "#/definitions/RuleCondition"
      },
      "type": "array"
    },
    "RuleNotFoundException": {
      "description": "The specified rule does not exist.",
      "properties": {},
      "type": "object"
    },
    "RulePriority": {
      "maximum": 50000,
      "minimum": 1,
      "type": "integer"
    },
    "RulePriorityList": {
      "items": {
        "$ref": "#/definitions/RulePriorityPair"
      },
      "type": "array"
    },
    "RulePriorityPair": {
      "description": "Information about the priorities for the rules for a listener.",
      "properties": {
        "Priority": {
          "$ref": "#/definitions/RulePriority",
          "description": "The rule priority."
        },
        "RuleArn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        }
      },
      "type": "object"
    },
    "Rules": {
      "items": {
        "$ref": "#/definitions/Rule"
      },
      "type": "array"
    },
    "SSLPolicyNotFoundException": {
      "description": "The specified SSL policy does not exist.",
      "properties": {},
      "type": "object"
    },
    "SecurityGroupId": {
      "type": "string"
    },
    "SecurityGroups": {
      "items": {
        "$ref": "#/definitions/SecurityGroupId"
      },
      "type": "array"
    },
    "SetIpAddressTypeInput": {
      "properties": {
        "IpAddressType": {
          "$ref": "#/definitions/IpAddressType",
          "description": "The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>."
        },
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        }
      },
      "required": [
        "LoadBalancerArn",
        "IpAddressType"
      ],
      "type": "object"
    },
    "SetIpAddressTypeOutput": {
      "properties": {
        "IpAddressType": {
          "$ref": "#/definitions/IpAddressType",
          "description": "The IP address type."
        }
      },
      "type": "object"
    },
    "SetRulePrioritiesInput": {
      "example": {
        "RulePriorities": [
          {
            "Priority": 5,
            "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3"
          }
        ]
      },
      "properties": {
        "RulePriorities": {
          "$ref": "#/definitions/RulePriorityList",
          "description": "The rule priorities."
        }
      },
      "required": [
        "RulePriorities"
      ],
      "type": "object"
    },
    "SetRulePrioritiesOutput": {
      "example": {
        "Rules": [
          {
            "Actions": [
              {
                "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067",
                "Type": "forward"
              }
            ],
            "Conditions": [
              {
                "Field": "path-pattern",
                "Values": [
                  "/img/*"
                ]
              }
            ],
            "IsDefault": false,
            "Priority": "5",
            "RuleArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3"
          }
        ]
      },
      "properties": {
        "Rules": {
          "$ref": "#/definitions/Rules",
          "description": "Information about the rules."
        }
      },
      "type": "object"
    },
    "SetSecurityGroupsInput": {
      "example": {
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
        "SecurityGroups": [
          "sg-5943793c"
        ]
      },
      "properties": {
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroups",
          "description": "The IDs of the security groups."
        }
      },
      "required": [
        "LoadBalancerArn",
        "SecurityGroups"
      ],
      "type": "object"
    },
    "SetSecurityGroupsOutput": {
      "example": {
        "SecurityGroupIds": [
          "sg-5943793c"
        ]
      },
      "properties": {
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroups",
          "description": "The IDs of the security groups associated with the load balancer."
        }
      },
      "type": "object"
    },
    "SetSubnetsInput": {
      "example": {
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
        "Subnets": [
          "subnet-8360a9e7",
          "subnet-b7d581c0"
        ]
      },
      "properties": {
        "LoadBalancerArn": {
          "$ref": "#/definitions/LoadBalancerArn",
          "description": "The Amazon Resource Name (ARN) of the load balancer."
        },
        "SubnetMappings": {
          "$ref": "#/definitions/SubnetMappings",
          "description": "<p>The IDs of the subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>The load balancer is allocated one static IP address per subnet. You cannot specify your own Elastic IP addresses.</p>"
        },
        "Subnets": {
          "$ref": "#/definitions/Subnets",
          "description": "The IDs of the subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings."
        }
      },
      "required": [
        "LoadBalancerArn",
        "Subnets"
      ],
      "type": "object"
    },
    "SetSubnetsOutput": {
      "example": {
        "AvailabilityZones": [
          {
            "SubnetId": "subnet-8360a9e7",
            "ZoneName": "us-west-2a"
          },
          {
            "SubnetId": "subnet-b7d581c0",
            "ZoneName": "us-west-2b"
          }
        ]
      },
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "Information about the subnet and Availability Zone."
        }
      },
      "type": "object"
    },
    "SslPolicies": {
      "items": {
        "$ref": "#/definitions/SslPolicy"
      },
      "type": "array"
    },
    "SslPolicy": {
      "description": "Information about a policy used for SSL negotiation.",
      "properties": {
        "Ciphers": {
          "$ref": "#/definitions/Ciphers",
          "description": "The ciphers."
        },
        "Name": {
          "$ref": "#/definitions/SslPolicyName",
          "description": "The name of the policy."
        },
        "SslProtocols": {
          "$ref": "#/definitions/SslProtocols",
          "description": "The protocols."
        }
      },
      "type": "object"
    },
    "SslPolicyName": {
      "type": "string"
    },
    "SslPolicyNames": {
      "items": {
        "$ref": "#/definitions/SslPolicyName"
      },
      "type": "array"
    },
    "SslProtocol": {
      "type": "string"
    },
    "SslProtocols": {
      "items": {
        "$ref": "#/definitions/SslProtocol"
      },
      "type": "array"
    },
    "StateReason": {
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "StringValue": {
      "type": "string"
    },
    "SubnetId": {
      "type": "string"
    },
    "SubnetMapping": {
      "description": "Information about a subnet mapping.",
      "properties": {
        "AllocationId": {
          "$ref": "#/definitions/AllocationId",
          "description": "[Network Load Balancers] The allocation ID of the Elastic IP address."
        },
        "SubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "The ID of the subnet."
        }
      },
      "type": "object"
    },
    "SubnetMappings": {
      "items": {
        "$ref": "#/definitions/SubnetMapping"
      },
      "type": "array"
    },
    "SubnetNotFoundException": {
      "description": "The specified subnet does not exist.",
      "properties": {},
      "type": "object"
    },
    "Subnets": {
      "items": {
        "$ref": "#/definitions/SubnetId"
      },
      "type": "array"
    },
    "Tag": {
      "description": "Information about a tag.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "The key of the tag."
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "The value of the tag."
        }
      },
      "required": [
        "Key"
      ],
      "type": "object"
    },
    "TagDescription": {
      "description": "The tags associated with a resource.",
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/ResourceArn",
          "description": "The Amazon Resource Name (ARN) of the resource."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Information about the tags."
        }
      },
      "type": "object"
    },
    "TagDescriptions": {
      "items": {
        "$ref": "#/definitions/TagDescription"
      },
      "type": "array"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeys": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 1,
      "type": "array"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TargetDescription": {
      "description": "Information about a target.",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/ZoneName",
          "description": "<p>The Availability Zone where the IP address is to be registered. Specify <code>all</code> to register an IP address outside the target group VPC with all Availability Zones that are enabled for the load balancer.</p> <p>If the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code>.</p>"
        },
        "Id": {
          "$ref": "#/definitions/TargetId",
          "description": "The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address."
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port on which the target is listening."
        }
      },
      "required": [
        "Id"
      ],
      "type": "object"
    },
    "TargetDescriptions": {
      "items": {
        "$ref": "#/definitions/TargetDescription"
      },
      "type": "array"
    },
    "TargetGroup": {
      "description": "Information about a target group.",
      "properties": {
        "HealthCheckIntervalSeconds": {
          "$ref": "#/definitions/HealthCheckIntervalSeconds",
          "description": "The approximate amount of time, in seconds, between health checks of an individual target."
        },
        "HealthCheckPath": {
          "$ref": "#/definitions/Path",
          "description": "The destination for the health check request."
        },
        "HealthCheckPort": {
          "$ref": "#/definitions/HealthCheckPort",
          "description": "The port to use to connect with the target."
        },
        "HealthCheckProtocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol to use to connect with the target."
        },
        "HealthCheckTimeoutSeconds": {
          "$ref": "#/definitions/HealthCheckTimeoutSeconds",
          "description": "The amount of time, in seconds, during which no response means a failed health check."
        },
        "HealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy."
        },
        "LoadBalancerArns": {
          "$ref": "#/definitions/LoadBalancerArns",
          "description": "The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group."
        },
        "Matcher": {
          "$ref": "#/definitions/Matcher",
          "description": "The HTTP codes to use when checking for a successful response from a target."
        },
        "Port": {
          "$ref": "#/definitions/Port",
          "description": "The port on which the targets are listening."
        },
        "Protocol": {
          "$ref": "#/definitions/ProtocolEnum",
          "description": "The protocol to use for routing traffic to the targets."
        },
        "TargetGroupArn": {
          "$ref": "#/definitions/TargetGroupArn",
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "TargetGroupName": {
          "$ref": "#/definitions/TargetGroupName",
          "description": "The name of the target group."
        },
        "TargetType": {
          "$ref": "#/definitions/TargetTypeEnum",
          "description": "The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address)."
        },
        "UnhealthyThresholdCount": {
          "$ref": "#/definitions/HealthCheckThresholdCount",
          "description": "The number of consecutive health check failures required before considering the target unhealthy."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The ID of the VPC for the targets."
        }
      },
      "type": "object"
    },
    "TargetGroupArn": {
      "type": "string"
    },
    "TargetGroupArns": {
      "items": {
        "$ref": "#/definitions/TargetGroupArn"
      },
      "type": "array"
    },
    "TargetGroupAssociationLimitException": {
      "description": "You've reached the limit on the number of load balancers per target group.",
      "properties": {},
      "type": "object"
    },
    "TargetGroupAttribute": {
      "description": "Information about a target group attribute.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TargetGroupAttributeKey",
          "description": "<p>The name of the attribute.</p> <ul> <li> <p> <code>deregistration_delay.timeout_seconds</code> - The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from <code>draining</code> to <code>unused</code>. The range is 0-3600 seconds. The default value is 300 seconds.</p> </li> <li> <p> <code>stickiness.enabled</code> - [Application Load Balancers] Indicates whether sticky sessions are enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>stickiness.type</code> - [Application Load Balancers] The type of sticky sessions. The possible value is <code>lb_cookie</code>.</p> </li> <li> <p> <code>stickiness.lb_cookie.duration_seconds</code> - [Application Load Balancers] The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</p> </li> </ul>"
        },
        "Value": {
          "$ref": "#/definitions/TargetGroupAttributeValue",
          "description": "The value of the attribute."
        }
      },
      "type": "object"
    },
    "TargetGroupAttributeKey": {
      "maxLength": 256,
      "pattern": "^[a-zA-Z0-9._]+$",
      "type": "string"
    },
    "TargetGroupAttributeValue": {
      "type": "string"
    },
    "TargetGroupAttributes": {
      "items": {
        "$ref": "#/definitions/TargetGroupAttribute"
      },
      "type": "array"
    },
    "TargetGroupName": {
      "type": "string"
    },
    "TargetGroupNames": {
      "items": {
        "$ref": "#/definitions/TargetGroupName"
      },
      "type": "array"
    },
    "TargetGroupNotFoundException": {
      "description": "The specified target group does not exist.",
      "properties": {},
      "type": "object"
    },
    "TargetGroups": {
      "items": {
        "$ref": "#/definitions/TargetGroup"
      },
      "type": "array"
    },
    "TargetHealth": {
      "description": "Information about the current health of a target.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided."
        },
        "Reason": {
          "$ref": "#/definitions/TargetHealthReasonEnum",
          "description": "<p>The reason code. If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The health checks failed because the connection to the target timed out, the target response was malformed, or the target failed the health check for an unknown reason.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul>"
        },
        "State": {
          "$ref": "#/definitions/TargetHealthStateEnum",
          "description": "The state of the target."
        }
      },
      "type": "object"
    },
    "TargetHealthDescription": {
      "description": "Information about the health of a target.",
      "properties": {
        "HealthCheckPort": {
          "$ref": "#/definitions/HealthCheckPort",
          "description": "The port to use to connect with the target."
        },
        "Target": {
          "$ref": "#/definitions/TargetDescription",
          "description": "The description of the target."
        },
        "TargetHealth": {
          "$ref": "#/definitions/TargetHealth",
          "description": "The health information for the target."
        }
      },
      "type": "object"
    },
    "TargetHealthDescriptions": {
      "items": {
        "$ref": "#/definitions/TargetHealthDescription"
      },
      "type": "array"
    },
    "TargetHealthReasonEnum": {
      "enum": [
        "Elb.RegistrationInProgress",
        "Elb.InitialHealthChecking",
        "Target.ResponseCodeMismatch",
        "Target.Timeout",
        "Target.FailedHealthChecks",
        "Target.NotRegistered",
        "Target.NotInUse",
        "Target.DeregistrationInProgress",
        "Target.InvalidState",
        "Target.IpUnusable",
        "Elb.InternalError"
      ],
      "type": "string"
    },
    "TargetHealthStateEnum": {
      "enum": [
        "initial",
        "healthy",
        "unhealthy",
        "unused",
        "draining",
        "unavailable"
      ],
      "type": "string"
    },
    "TargetId": {
      "type": "string"
    },
    "TargetTypeEnum": {
      "enum": [
        "instance",
        "ip"
      ],
      "type": "string"
    },
    "TooManyCertificatesException": {
      "description": "You've reached the limit on the number of certificates per listener.",
      "properties": {},
      "type": "object"
    },
    "TooManyListenersException": {
      "description": "You've reached the limit on the number of listeners per load balancer.",
      "properties": {},
      "type": "object"
    },
    "TooManyLoadBalancersException": {
      "description": "You've reached the limit on the number of load balancers for your AWS account.",
      "properties": {},
      "type": "object"
    },
    "TooManyRegistrationsForTargetIdException": {
      "description": "You've reached the limit on the number of times a target can be registered with a load balancer.",
      "properties": {},
      "type": "object"
    },
    "TooManyRulesException": {
      "description": "You've reached the limit on the number of rules per load balancer.",
      "properties": {},
      "type": "object"
    },
    "TooManyTagsException": {
      "description": "You've reached the limit on the number of tags per load balancer.",
      "properties": {},
      "type": "object"
    },
    "TooManyTargetGroupsException": {
      "description": "You've reached the limit on the number of target groups for your AWS account.",
      "properties": {},
      "type": "object"
    },
    "TooManyTargetsException": {
      "description": "You've reached the limit on the number of targets.",
      "properties": {},
      "type": "object"
    },
    "UnsupportedProtocolException": {
      "description": "The specified protocol is not supported.",
      "properties": {},
      "type": "object"
    },
    "VpcId": {
      "type": "string"
    },
    "ZoneName": {
      "type": "string"
    }
  }
}
